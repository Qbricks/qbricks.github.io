<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.8.6" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="8" name="Z3" version="4.8.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="9" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="derived_circuits_c.mlw"/>
<theory name="Place" proved="true">
 <goal name="ids&#39;vc" expl="VC for ids" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ids&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.61" steps="649848"/></proof>
   </goal>
   <goal name="ids&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.00" steps="609751"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ids&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.57" steps="650183"/></proof>
  </goal>
  <goal name="ids&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.58" steps="649945"/></proof>
   </goal>
   <goal name="ids&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.24" steps="803429"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ids&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.57" steps="649962"/></proof>
   </goal>
   <goal name="ids&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.45" steps="785206"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ids&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.61" steps="649971"/></proof>
   </goal>
   <goal name="ids&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.46" steps="785221"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ids&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.59" steps="649980"/></proof>
   </goal>
   <goal name="ids&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.43" steps="785203"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ids&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="ids&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="ids&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="1.76" steps="673585"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="ids&#39;vc.6.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="ids&#39;vc.6.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="ids&#39;vc.6.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H">
      <goal name="ids&#39;vc.6.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
       <goal name="ids&#39;vc.6.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="eliminate_if" proved="true" >
        <goal name="ids&#39;vc.6.1.0.0.0.0.0" expl="VC for ids" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="ids&#39;vc.6.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.72" steps="683151"/></proof>
         </goal>
         <goal name="ids&#39;vc.6.1.0.0.0.0.0.1" expl="postcondition" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="ids&#39;vc.6.1.0.0.0.0.0.1.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="id&#39;def1">
           <goal name="ids&#39;vc.6.1.0.0.0.0.0.1.0.0" expl="postcondition" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="ids&#39;vc.6.1.0.0.0.0.0.1.0.0.0" expl="postcondition" proved="true">
            <proof prover="9"><result status="valid" time="1.23" steps="790584"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ids&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.71" steps="672705"/></proof>
   </goal>
   <goal name="ids&#39;vc.7.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="ids&#39;vc.7.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H">
     <goal name="ids&#39;vc.7.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="parallel_angle">
      <goal name="ids&#39;vc.7.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.68" steps="684173"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ids&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.76" steps="672769"/></proof>
   </goal>
   <goal name="ids&#39;vc.8.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="ids&#39;vc.8.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H2">
     <goal name="ids&#39;vc.8.1.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="x" arg2="(kronecker (hpart_ket x (n-1)) (tpart_ket x (n-1)))">
      <goal name="ids&#39;vc.8.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_kron_">
       <goal name="ids&#39;vc.8.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_eq">
        <goal name="ids&#39;vc.8.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.94" steps="787178"/></proof>
        </goal>
        <goal name="ids&#39;vc.8.1.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_id">
         <goal name="ids&#39;vc.8.1.0.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="0.77" steps="632027"/></proof>
         </goal>
         <goal name="ids&#39;vc.8.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.67"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="ids&#39;vc.8.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.90" steps="787360"/></proof>
       </goal>
       <goal name="ids&#39;vc.8.1.0.0.0.2" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="tpart_ket_l">
        <goal name="ids&#39;vc.8.1.0.0.0.2.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="0.76" steps="632029"/></proof>
        </goal>
        <goal name="ids&#39;vc.8.1.0.0.0.2.1" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.88" steps="786849"/></proof>
        </goal>
        <goal name="ids&#39;vc.8.1.0.0.0.2.2" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.85" steps="785924"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="ids&#39;vc.8.1.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="1.77" steps="787730"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ids&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.73" steps="672836"/></proof>
   </goal>
   <goal name="ids&#39;vc.9.1" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="x,n">
    <goal name="ids&#39;vc.9.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="ids&#39;vc.9.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_sum_">
      <goal name="ids&#39;vc.9.1.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="ket_sum_eq">
       <goal name="ids&#39;vc.9.1.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.37" steps="672929"/></proof>
       </goal>
       <goal name="ids&#39;vc.9.1.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="0.83" steps="632247"/></proof>
       </goal>
       <goal name="ids&#39;vc.9.1.0.0.0.2" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="ids&#39;vc.9.1.0.0.0.2.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="ids&#39;vc.9.1.0.0.0.2.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="path_sem_scal">
          <goal name="ids&#39;vc.9.1.0.0.0.2.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="scalar_eq">
           <goal name="ids&#39;vc.9.1.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
           <transf name="eliminate_let" proved="true" >
            <goal name="ids&#39;vc.9.1.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="6"><result status="valid" time="2.06" steps="106403"/></proof>
            <proof prover="9"><result status="valid" time="2.37" steps="876043"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="ids&#39;vc.9.1.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="0.83"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="ids&#39;vc.9.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="6"><result status="valid" time="2.05" steps="106054"/></proof>
      </goal>
      <goal name="ids&#39;vc.9.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.80" steps="632256"/></proof>
      </goal>
      <goal name="ids&#39;vc.9.1.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="ids&#39;vc.9.1.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="ids&#39;vc.9.1.0.0.3.0.0" expl="rewrite premises" proved="true">
        <proof prover="6"><result status="valid" time="2.11" steps="110073"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ids&#39;vc.9.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.40" steps="672929"/></proof>
     </goal>
     <goal name="ids&#39;vc.9.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.51" steps="673624"/></proof>
     </goal>
     <goal name="ids&#39;vc.9.1.0.3" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.45" steps="673638"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_zero&#39;vc" expl="VC for place_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_zero&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.61" steps="650910"/></proof>
  </goal>
  <goal name="place_zero&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.51" steps="788222"/></proof>
  </goal>
  <goal name="place_zero&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.51" steps="788271"/></proof>
  </goal>
  <goal name="place_zero&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.45" steps="788314"/></proof>
  </goal>
  <goal name="place_zero&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.49" steps="788474"/></proof>
  </goal>
  <goal name="place_zero&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="place_zero&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="place_zero&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(n= width c)">
     <goal name="place_zero&#39;vc.5.0.0.0" expl="true case (postcondition)" proved="true">
     <proof prover="9"><result status="valid" time="1.93" steps="795715"/></proof>
     </goal>
     <goal name="place_zero&#39;vc.5.0.0.1" expl="false case (postcondition)" proved="true">
     <transf name="eliminate_definition" proved="true" >
      <goal name="place_zero&#39;vc.5.0.0.1.0" expl="false case (postcondition)" proved="true">
      <transf name="replace" proved="true" arg1="result" arg2="(parallel c (ids (n- width c)))">
       <goal name="place_zero&#39;vc.5.0.0.1.0.0" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
        <goal name="place_zero&#39;vc.5.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
        <transf name="eliminate_if" proved="true" >
         <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0" expl="VC for place_zero" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
          <proof prover="9"><result status="valid" time="1.28" steps="791777"/></proof>
          </goal>
          <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.1" expl="false case (postcondition)" proved="true">
          <proof prover="9"><result status="valid" time="1.28" steps="791833"/></proof>
          </goal>
          <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.2" expl="false case (postcondition)" proved="true">
          <proof prover="9"><result status="valid" time="1.30" steps="791848"/></proof>
          </goal>
          <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.3" expl="false case (postcondition)" proved="true">
          <proof prover="9"><result status="valid" time="1.30" steps="791963"/></proof>
          </goal>
          <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.4" expl="false case (postcondition)" proved="true">
          <proof prover="9"><result status="valid" time="1.34" steps="791952"/></proof>
          </goal>
          <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.5" expl="false case (postcondition)" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.5.0" expl="false case (postcondition)" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.5.0.0" expl="false case (postcondition)" proved="true">
            <transf name="rewrite" proved="true" arg1="ids&#39;spec3">
             <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.5.0.0.0" expl="false case (postcondition)" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.5.0.0.0.0" expl="false case (postcondition)" proved="true">
              <proof prover="9"><result status="valid" time="1.40" steps="791843"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.5.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.17" steps="838295"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_zero&#39;vc.5.0.0.1.0.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="1.93" steps="795707"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place_zero&#39;vc.6" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="place_zero&#39;vc.6.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.10" steps="645102"/></proof>
   </goal>
   <goal name="place_zero&#39;vc.6.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="place_zero&#39;vc.6.1.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="place_zero&#39;vc.6.1.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="result" arg2="(parallel c (ids (n- width c)))">
      <goal name="place_zero&#39;vc.6.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="parallel_angle">
       <goal name="place_zero&#39;vc.6.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="2.14" steps="799983"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_zero&#39;vc.6.1.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="1.27" steps="765468"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place_zero&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.78" steps="689015"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="place&#39;vc" expl="VC for place" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.63" steps="651348"/></proof>
  </goal>
  <goal name="place&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.97" steps="611189"/></proof>
  </goal>
  <goal name="place&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.67" steps="674099"/></proof>
  </goal>
  <goal name="place&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.42" steps="790452"/></proof>
  </goal>
  <goal name="place&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.43" steps="790461"/></proof>
  </goal>
  <goal name="place&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.41" steps="790482"/></proof>
  </goal>
  <goal name="place&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.36" steps="790542"/></proof>
  </goal>
  <goal name="place&#39;vc.7" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H2">
   <goal name="place&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.11" steps="788415"/></proof>
   </goal>
   <goal name="place&#39;vc.7.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="place&#39;vc.7.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="place&#39;vc.7.1.0.0" expl="VC for place" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place&#39;vc.7.1.0.0.0" expl="postcondition" proved="true">
      <transf name="eliminate_let" proved="true" >
       <goal name="place&#39;vc.7.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="H7">
        <goal name="place&#39;vc.7.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="place&#39;vc.7.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
          <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="place_zero&#39;spec5">
           <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="ids&#39;spec4">
             <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <transf name="rewrite" proved="true" arg1="ids&#39;spec7">
              <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
               <transf name="replace" proved="true" arg1="(fun (k1:int) -&gt; y @ k1)" arg2="y">
                <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
                <transf name="compute_specified" proved="true" >
                </transf>
                </goal>
                <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="9"><result status="valid" time="1.29" steps="777850"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.04" steps="822318"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.06" steps="822318"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.15" steps="777859"/></proof>
           </goal>
           <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.21" steps="822373"/></proof>
           </goal>
           <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.10" steps="822371"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="place&#39;vc.7.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.06" steps="822327"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="place&#39;vc.7.1.0.0.1" expl="postcondition" proved="true">
      <transf name="eliminate_let" proved="true" >
       <goal name="place&#39;vc.7.1.0.0.1.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="H6">
        <goal name="place&#39;vc.7.1.0.0.1.0.0" expl="postcondition" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="place&#39;vc.7.1.0.0.1.0.0.0" expl="postcondition" proved="true">
         <transf name="case" proved="true" arg1="(i&lt;k)">
          <goal name="place&#39;vc.7.1.0.0.1.0.0.0.0" expl="true case (postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="parallel_basis_ket1">
           <goal name="place&#39;vc.7.1.0.0.1.0.0.0.0.0" expl="true case (postcondition)" proved="true">
           <proof prover="9"><result status="valid" time="2.17" steps="823029"/></proof>
           </goal>
           <goal name="place&#39;vc.7.1.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.06" steps="822349"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="place&#39;vc.7.1.0.0.1.0.0.0.1" expl="false case (postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
           <goal name="place&#39;vc.7.1.0.0.1.0.0.0.1.0" expl="false case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="H18">
            <goal name="place&#39;vc.7.1.0.0.1.0.0.0.1.0.0" expl="false case (postcondition)" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="place&#39;vc.7.1.0.0.1.0.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
             <proof prover="9"><result status="valid" time="1.27" steps="777915"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="place&#39;vc.7.1.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.10" steps="822408"/></proof>
            </goal>
            <goal name="place&#39;vc.7.1.0.0.1.0.0.0.1.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.01" steps="822370"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="place&#39;vc.7.1.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.06" steps="822362"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="place&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures6">
    <goal name="place&#39;vc.8.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.88" steps="689620"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="place&#39;vc.8.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="place&#39;vc.8.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H">
     <goal name="place&#39;vc.8.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="parallel_angle">
      <goal name="place&#39;vc.8.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_add_comm">
       <goal name="place&#39;vc.8.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
        <goal name="place&#39;vc.8.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures17">
         <goal name="place&#39;vc.8.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="place&#39;vc.8.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="Ensures15">
           <goal name="place&#39;vc.8.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="replace" proved="true" arg1="(fun (k1:int) -&gt; y @ (k1 + range (ids k)))" arg2="y">
            <goal name="place&#39;vc.8.1.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <proof prover="9"><result status="valid" time="1.75" steps="789129"/></proof>
            </goal>
            <goal name="place&#39;vc.8.1.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="9"><result status="valid" time="0.83" steps="646771"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="place&#39;vc.8.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.27" steps="675380"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.67"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="place_circ_to_pps&#39;vc" expl="VC for place_circ_to_pps" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_circ_to_pps&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_let" proved="true" >
   <goal name="place_circ_to_pps&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_correct_pps">
    <goal name="place_circ_to_pps&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="0.97"/></proof>
    </goal>
    <goal name="place_circ_to_pps&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="place_circ_to_pps&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="pps_place_image_bv">
       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="place&#39;spec">
         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kron_ket_zero">
            <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="ket_zero_kron">
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(htpart (ket_to_bv x) k (h_width (circ_to_pps c)))" arg2="(ket_to_bv x)">
              <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="2.79" steps="896040"/></proof>
              </goal>
              <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
              <transf name="apply" proved="true" arg1="set_equal_bv">
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.72" steps="901944"/></proof>
               </goal>
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="htpart_value_b">
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.12" steps="777891"/></proof>
                 </goal>
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.18" steps="740936"/></proof>
                 </goal>
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.69" steps="898872"/></proof>
                 </goal>
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.3" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.69" steps="899981"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="bv_to_ket_zero">
              <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="2.80" steps="897881"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.82" steps="898628"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(kronecker (bv_to_ket (hpart (ket_to_bv x) k))
   (pps_apply_basis (circ_to_pps c)
    (htpart (ket_to_bv x) k (h_width (circ_to_pps c)))))" arg2="(
   (pps_apply_basis (circ_to_pps c)
    (htpart (ket_to_bv x) k (h_width (circ_to_pps c)))))">
            <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(path_sem_basis (parallel c (ids ((n - k) - width c))) x)" arg2="(path_sem (parallel c (ids ((n - k) - width c))) (kronecker (bv_to_ket(htpart (ket_to_bv x) k (h_width (circ_to_pps c))))  (bv_to_ket(tpart (ket_to_bv x) (k + h_width (circ_to_pps c))))))">
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="goal_comm">
              <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="path_sem_kron">
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.79" steps="896718"/></proof>
               </goal>
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.87" steps="903427"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.83" steps="899067"/></proof>
               </goal>
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="ids&#39;spec">
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0.0.3.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.91" steps="784081"/></proof>
                </goal>
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0.0.3.1" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0.0.3.1.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.80" steps="904342"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
             <transf name="replace" proved="true" arg1="(htpart (ket_to_bv x) k (h_width (circ_to_pps c)))" arg2="(hpart (ket_to_bv x)  (h_width (circ_to_pps c)))">
              <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="2.83" steps="904698"/></proof>
              </goal>
              <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
              <transf name="apply" proved="true" arg1="set_equal_bv">
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.72" steps="902466"/></proof>
               </goal>
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.1.1" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.81" steps="936453"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
            <transf name="apply" proved="true" arg1="ket_zero_kron">
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="2.40" steps="895226"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="set_path_sem_basis">
            <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="kron_ket_zero">
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="goal_comm">
              <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(path_sem (parallel (ids k) c) x)" arg2="(path_sem (parallel (ids k) c) (kronecker (bv_to_ket (hpart (ket_to_bv x) k)) (bv_to_ket (htpart (ket_to_bv x) k (h_width (circ_to_pps c))))))">
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="path_sem_kron">
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.85" steps="900861"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.49" steps="897061"/></proof>
                </goal>
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.0.2" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="ids&#39;spec">
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.0.2.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.98" steps="784060"/></proof>
                 </goal>
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.0.2.1" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.0.2.1.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.46" steps="898090"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.0.3" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.63" steps="898961"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1" expl="equality hypothesis" proved="true">
               <transf name="replace" proved="true" arg1="(kronecker (bv_to_ket (hpart (ket_to_bv x) k))
     (bv_to_ket (htpart (ket_to_bv x) k (h_width (circ_to_pps c)))))" arg2="x">
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.0" expl="equality hypothesis" proved="true">
                <proof prover="9"><result status="valid" time="1.17" steps="740901"/></proof>
                </goal>
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1" expl="equality hypothesis" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
                 <transf name="replace" proved="true" arg1="(concat1 (hpart (ket_to_bv x) k)
   (htpart (ket_to_bv x) k (h_width (circ_to_pps c))))" arg2="(ket_to_bv x)">
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
                  <proof prover="9"><result status="valid" time="1.94" steps="784676"/></proof>
                  </goal>
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="set_equal_bv">
                   <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.61" steps="904499"/></proof>
                   </goal>
                   <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1.0" expl="apply premises" proved="true">
                    <transf name="case" proved="true" arg1="(i &lt; k)">
                     <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1.0.0" expl="true case (apply premises)" proved="true">
                     <transf name="rewrite" proved="true" arg1="concat_value_left">
                      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1.0.0.0" expl="true case (apply premises)" proved="true">
                      <proof prover="9"><result status="valid" time="2.88" steps="932366"/></proof>
                      </goal>
                      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.80" steps="903627"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1.0.1" expl="false case (apply premises)" proved="true">
                     <transf name="rewrite" proved="true" arg1="concat_value_right">
                      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1.0.1.0" expl="false case (apply premises)" proved="true">
                      <transf name="rewrite" proved="true" arg1="hpart_length">
                       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1.0.1.0.0" expl="false case (apply premises)" proved="true">
                       <proof prover="9"><result status="valid" time="2.60" steps="934041"/></proof>
                       </goal>
                       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1.0.1.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.05" steps="741000"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1.0.1.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.85" steps="907754"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.90" steps="910958"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.39" steps="896044"/></proof>
            </goal>
            <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.21" steps="740903"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
            <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="set_path_sem_basis">
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="( path_sem (parallel (ids k) (parallel c (ids ((n - k) - width c)))) x)" arg2="( path_sem (parallel (ids k) (parallel c (ids ((n - k) - width c))))     (kronecker (bv_to_ket (hpart (ket_to_bv x) k)) (kronecker (bv_to_ket (htpart (ket_to_bv x) k (h_width (circ_to_pps c)))) (bv_to_ket (tpart (ket_to_bv x) (k + h_width (circ_to_pps c)))) )        
))">
              <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="goal_comm">
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="path_sem_kron">
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.51" steps="896153"/></proof>
                </goal>
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.1" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="parallel_width">
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.1.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="kronecker_ket_l">
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.75" steps="895432"/></proof>
                  </goal>
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.69" steps="895774"/></proof>
                  </goal>
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.71" steps="896740"/></proof>
                  </goal>
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.1.0.3" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                   <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.1.0.3.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.83" steps="916215"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.58" steps="896459"/></proof>
                </goal>
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.3" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="path_sem_kron">
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.3.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.41" steps="896740"/></proof>
                 </goal>
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.3.1" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.3.1.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.94" steps="916215"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.3.2" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.78" steps="898691"/></proof>
                 </goal>
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.3.3" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="ids&#39;spec">
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.3.3.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.92" steps="784069"/></proof>
                  </goal>
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.3.3.1" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                   <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.3.3.1.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.93" steps="903279"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
              <transf name="replace" proved="true" arg1="(kronecker (bv_to_ket (hpart (ket_to_bv x) k))
     (kronecker
      (bv_to_ket (htpart (ket_to_bv x) k (h_width (circ_to_pps c))))
      (bv_to_ket (tpart (ket_to_bv x) (k + h_width (circ_to_pps c))))))" arg2="x">
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.0" expl="equality hypothesis" proved="true">
               <proof prover="9"><result status="valid" time="1.08" steps="740906"/></proof>
               </goal>
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1" expl="equality hypothesis" proved="true">
               <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0" expl="equality hypothesis" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
                 <transf name="replace" proved="true" arg1="(concat1 (hpart (ket_to_bv x) k)
   (concat1 (htpart (ket_to_bv x) k (h_width (circ_to_pps c)))
    (tpart (ket_to_bv x) (k + h_width (circ_to_pps c)))))" arg2="(ket_to_bv x)">
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.0" expl="equality hypothesis" proved="true">
                  <proof prover="9"><result status="valid" time="2.03" steps="784661"/></proof>
                  </goal>
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="set_equal_bv">
                   <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.56" steps="910757"/></proof>
                   </goal>
                   <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0" expl="apply premises" proved="true">
                    <transf name="case" proved="true" arg1="(i&lt;k)">
                     <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.0" expl="true case (apply premises)" proved="true">
                     <transf name="rewrite" proved="true" arg1="concat_value_left">
                      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.0.0" expl="true case (apply premises)" proved="true">
                      <proof prover="9"><result status="valid" time="2.92" steps="932664"/></proof>
                      </goal>
                      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.47" steps="903979"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1" expl="false case (apply premises)" proved="true">
                     <transf name="case" proved="true" arg1="(i&lt;k+ width c)">
                      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0" expl="false case (true case. apply premises)" proved="true">
                      <transf name="rewrite" proved="true" arg1="concat_value_right">
                       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0" expl="false case (true case. apply premises)" proved="true">
                       <transf name="rewrite" proved="true" arg1="concat_value_left">
                        <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.0" expl="false case (true case. apply premises)" proved="true">
                        <transf name="rewrite" proved="true" arg1="htpart_value_b">
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                         <transf name="rewrite" proved="true" arg1="hpart_length">
                          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                          <proof prover="9"><result status="valid" time="1.04" steps="764669"/></proof>
                          </goal>
                          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.23" steps="741052"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.18" steps="741052"/></proof>
                         </goal>
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.97" steps="787209"/></proof>
                         </goal>
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.0.3" expl="rewrite premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.0.3.0" proved="true">
                          <proof prover="9"><result status="valid" time="2.79" steps="904124"/></proof>
                          </goal>
                          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.0.3.1" proved="true">
                          <proof prover="9"><result status="valid" time="2.73" steps="904023"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.1.0" proved="true">
                         <proof prover="9"><result status="valid" time="2.84" steps="904124"/></proof>
                         </goal>
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.1.1" proved="true">
                         <proof prover="9"><result status="valid" time="2.46" steps="906861"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.1" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.1.0" proved="true">
                        <proof prover="9"><result status="valid" time="2.60" steps="903881"/></proof>
                        </goal>
                        <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.1.1" proved="true">
                        <proof prover="9"><result status="valid" time="2.77" steps="906922"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1" expl="false case (apply premises)" proved="true">
                      <transf name="rewrite" proved="true" arg1="concat_value_right">
                       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0" expl="false case (apply premises)" proved="true">
                       <transf name="rewrite" proved="true" arg1="concat_value_right">
                        <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0" expl="false case (apply premises)" proved="true">
                        <transf name="rewrite" proved="true" arg1="tpart_value_b">
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.0" expl="false case (apply premises)" proved="true">
                         <transf name="rewrite" proved="true" arg1="htpart_length">
                          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.0.0" expl="false case (apply premises)" proved="true">
                          <transf name="rewrite" proved="true" arg1="hpart_length">
                           <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                           <proof prover="9"><result status="valid" time="1.26" steps="764686"/></proof>
                           </goal>
                           <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                           <proof prover="9"><result status="valid" time="1.18" steps="741056"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.21" steps="741056"/></proof>
                          </goal>
                          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="2.71" steps="899656"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.96" steps="900884"/></proof>
                         </goal>
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.2" expl="rewrite premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.2.0" proved="true">
                          <proof prover="9"><result status="valid" time="2.83" steps="906978"/></proof>
                          </goal>
                          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.2.1" proved="true">
                          <proof prover="9"><result status="valid" time="2.57" steps="918007"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.1" expl="rewrite premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.1.0" proved="true">
                         <proof prover="9"><result status="valid" time="3.10" steps="906957"/></proof>
                         </goal>
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.1.1" proved="true">
                         <proof prover="9"><result status="valid" time="3.12" steps="910155"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.1" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.1.0" proved="true">
                        <proof prover="9"><result status="valid" time="3.19" steps="904097"/></proof>
                        </goal>
                        <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.1.1" proved="true">
                        <proof prover="9"><result status="valid" time="3.19" steps="906862"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.52" steps="896265"/></proof>
             </goal>
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.31" steps="740908"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.01" steps="731660"/></proof>
         </goal>
         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.18" steps="731660"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.97" steps="613176"/></proof>
       </goal>
       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.71" steps="665306"/></proof>
       </goal>
       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="0.78"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="0.77"/></proof>
      </goal>
      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.94" steps="613176"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_equiv_by_circ&#39;vc" expl="VC for pps_apply_equiv_by_circ" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_equiv_by_circ&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_pps_apply_equiv">
   <goal name="pps_apply_equiv_by_circ&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="2.26" steps="771245"/></proof>
   </goal>
   <goal name="pps_apply_equiv_by_circ&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_apply_equiv_by_circ&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(pps_apply_basis h x )" arg2="(pps_apply h (bv_to_ket x))">
     <goal name="pps_apply_equiv_by_circ&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(pps_apply h (bv_to_ket x) )" arg2="(path_sem c (bv_to_ket x))">
      <goal name="pps_apply_equiv_by_circ&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.76"/></proof>
      </goal>
      <goal name="pps_apply_equiv_by_circ&#39;vc.0.1.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="0.76"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_equiv_by_circ&#39;vc.0.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="1.67" steps="654240"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_pps&#39;vc" expl="VC for place_pps" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_pps&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.94" steps="613419"/></proof>
  </goal>
  <goal name="place_pps&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.67" steps="665505"/></proof>
  </goal>
  <goal name="place_pps&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.94" steps="613455"/></proof>
  </goal>
  <goal name="place_pps&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.96" steps="613456"/></proof>
  </goal>
  <goal name="place_pps&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.62" steps="654427"/></proof>
  </goal>
  <goal name="place_pps&#39;vc.5" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(correct_path_sum (place c k n) (pps_place (circ_to_pps c) k n))">
   <goal name="place_pps&#39;vc.5.0" expl="asserted formula" proved="true">
   <proof prover="9"><result status="valid" time="2.29" steps="770923"/></proof>
   </goal>
   <goal name="place_pps&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="2.31" steps="109204"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron&#39;vc" expl="VC for place_kron" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="place_kron&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="place&#39;def">
    <goal name="place_kron&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="path_sem_kron">
     <goal name="place_kron&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.68" steps="891146"/></proof>
     </goal>
     <goal name="place_kron&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(width (place_zero c (n - k)))" arg2="(width c + (n-width c-k))">
      <goal name="place_kron&#39;vc.0.0.0.1.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="kronecker_ket_l">
       <goal name="place_kron&#39;vc.0.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.71" steps="890202"/></proof>
       </goal>
       <goal name="place_kron&#39;vc.0.0.0.1.0.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.94" steps="777301"/></proof>
       </goal>
       <goal name="place_kron&#39;vc.0.0.0.1.0.2" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.21" steps="732075"/></proof>
       </goal>
       <goal name="place_kron&#39;vc.0.0.0.1.0.3" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.16" steps="732075"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_kron&#39;vc.0.0.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="2.68" steps="890730"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="place_kron&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.69" steps="890554"/></proof>
     </goal>
     <goal name="place_kron&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="place_zero&#39;spec">
      <goal name="place_kron&#39;vc.0.0.0.3.0" expl="apply premises" proved="true">
      <transf name="eliminate_if" proved="true" >
       <goal name="place_kron&#39;vc.0.0.0.3.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="place_kron&#39;vc.0.0.0.3.0.0.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.30" steps="754576"/></proof>
        </goal>
        <goal name="place_kron&#39;vc.0.0.0.3.0.0.1" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="path_sem_kron">
         <goal name="place_kron&#39;vc.0.0.0.3.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.19" steps="741288"/></proof>
         </goal>
         <goal name="place_kron&#39;vc.0.0.0.3.0.0.1.1" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="ids&#39;spec7">
          <goal name="place_kron&#39;vc.0.0.0.3.0.0.1.1.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="1.22" steps="741302"/></proof>
          </goal>
          <goal name="place_kron&#39;vc.0.0.0.3.0.0.1.1.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.22" steps="741319"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_kron&#39;vc.0.0.0.3.0.0.1.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.18" steps="741288"/></proof>
         </goal>
         <goal name="place_kron&#39;vc.0.0.0.3.0.0.1.3" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.62" steps="895781"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="place_kron&#39;vc.0.0.0.3.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.84" steps="777303"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_kron&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.86" steps="777327"/></proof>
    </goal>
    <goal name="place_kron&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.95" steps="777301"/></proof>
    </goal>
    <goal name="place_kron&#39;vc.0.0.3" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.88" steps="777331"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron_left&#39;vc" expl="VC for place_kron_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron_left&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="place_kron_left&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="place&#39;spec">
    <goal name="place_kron_left&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="place_kron_left&#39;vc.0.0.0.0" expl="VC for place_kron_left" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_kron_left&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.88" steps="784372"/></proof>
      </goal>
      <goal name="place_kron_left&#39;vc.0.0.0.0.1" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_kron">
       <goal name="place_kron_left&#39;vc.0.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.16" steps="741594"/></proof>
       </goal>
       <goal name="place_kron_left&#39;vc.0.0.0.0.1.1" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="ids&#39;spec7">
        <goal name="place_kron_left&#39;vc.0.0.0.0.1.1.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.18" steps="741615"/></proof>
        </goal>
        <goal name="place_kron_left&#39;vc.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.22" steps="741615"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_kron_left&#39;vc.0.0.0.0.1.2" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.18" steps="741594"/></proof>
       </goal>
       <goal name="place_kron_left&#39;vc.0.0.0.0.1.3" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.71" steps="895411"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_kron_left&#39;vc.0.0.0.0.2" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.21" steps="741638"/></proof>
      </goal>
      <goal name="place_kron_left&#39;vc.0.0.0.0.3" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.18" steps="741663"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_kron_left&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.17" steps="732387"/></proof>
    </goal>
    <goal name="place_kron_left&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="place_kron_left&#39;vc.0.0.2.0" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_kron_left&#39;vc.0.0.2.0.0" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.00" steps="784327"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron_right&#39;vc" expl="VC for place_kron_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron_right&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="place_kron_right&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="place&#39;spec">
    <goal name="place_kron_right&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="place_kron_right&#39;vc.0.0.0.0" expl="VC for place_kron_right" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_kron_right&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.92" steps="784668"/></proof>
      </goal>
      <goal name="place_kron_right&#39;vc.0.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.17" steps="741901"/></proof>
      </goal>
      <goal name="place_kron_right&#39;vc.0.0.0.0.2" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_kron">
       <goal name="place_kron_right&#39;vc.0.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="place_kron_right&#39;vc.0.0.0.0.2.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ids&#39;spec7">
         <goal name="place_kron_right&#39;vc.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.23" steps="759947"/></proof>
         </goal>
         <goal name="place_kron_right&#39;vc.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.20" steps="759954"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_kron_right&#39;vc.0.0.0.0.2.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.06" steps="784646"/></proof>
       </goal>
       <goal name="place_kron_right&#39;vc.0.0.0.0.2.2" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.84" steps="895452"/></proof>
       </goal>
       <goal name="place_kron_right&#39;vc.0.0.0.0.2.3" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.24" steps="741850"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_kron_right&#39;vc.0.0.0.0.3" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.21" steps="741925"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_kron_right&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.89" steps="777681"/></proof>
    </goal>
    <goal name="place_kron_right&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="place_kron_right&#39;vc.0.0.2.0" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.29" steps="755065"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron_right_sem&#39;vc" expl="VC for place_kron_right_sem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron_right_sem&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="place_kron_right_sem&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="place&#39;spec">
    <goal name="place_kron_right_sem&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="place_kron_right_sem&#39;vc.0.0.0.0" expl="VC for place_kron_right_sem" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_kron_right_sem&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.94" steps="785041"/></proof>
      </goal>
      <goal name="place_kron_right_sem&#39;vc.0.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.18" steps="742272"/></proof>
      </goal>
      <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_to_sem">
       <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (parallel (ids k) c))" arg2="(k+ width c)">
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_ket_l">
         <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.89" steps="785052"/></proof>
         </goal>
         <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.0.0.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.71" steps="895483"/></proof>
         </goal>
         <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.0.0.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.19" steps="742234"/></proof>
         </goal>
         <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.0.0.3" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.90" steps="785030"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.0.1" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="2.72" steps="898403"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="path_sem_kron">
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.1.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(width (ids k))" arg2="k">
         <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.1.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.18" steps="742234"/></proof>
         </goal>
         <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.1.0.1" expl="equality hypothesis" proved="true">
         <proof prover="9"><result status="valid" time="2.31" steps="896057"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.1.1" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.90" steps="785030"/></proof>
        </goal>
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.1.2" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="2.67" steps="896120"/></proof>
        </goal>
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.1.3" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="2.03" steps="786020"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_to_sem">
       <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (parallel (ids k) c))" arg2="(k+ width c)">
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.0.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.17" steps="742290"/></proof>
        </goal>
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.0.1" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="1.19" steps="742261"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="path_sem_kron">
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.1.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(width (ids k))" arg2="k">
         <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.1.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.22" steps="742239"/></proof>
         </goal>
         <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.1.0.1" expl="equality hypothesis" proved="true">
         <proof prover="9"><result status="valid" time="1.21" steps="742254"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.1.1" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.05" steps="742272"/></proof>
        </goal>
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.1.2" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.26" steps="742257"/></proof>
        </goal>
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.1.3" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.04" steps="742275"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_kron_right_sem&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.94" steps="777910"/></proof>
    </goal>
    <goal name="place_kron_right_sem&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.31" steps="746366"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_zero_kron&#39;vc" expl="VC for place_zero_kron" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_zero_kron&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="place_zero_kron&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="place_zero_kron&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="place_zero&#39;spec">
     <goal name="place_zero_kron&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="eliminate_if" proved="true" >
      <goal name="place_zero_kron&#39;vc.0.0.0.0.0" expl="VC for place_zero_kron" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="place_zero_kron&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="1.23" steps="756472"/></proof>
       </goal>
       <goal name="place_zero_kron&#39;vc.0.0.0.0.0.1" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="1.01" steps="756533"/></proof>
       </goal>
       <goal name="place_zero_kron&#39;vc.0.0.0.0.0.2" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="1.21" steps="756525"/></proof>
       </goal>
       <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="(bv_to_ket x)" arg2="(kronecker (bv_to_ket (hpart x (width c))) (bv_to_ket (tpart x (width c))))">
        <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="path_sem_kron">
         <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.69" steps="886545"/></proof>
         </goal>
         <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0.1" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
          <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0.1.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.32" steps="895385"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.18" steps="756476"/></proof>
         </goal>
         <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0.3" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="ids&#39;spec">
          <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0.3.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="1.05" steps="756476"/></proof>
          </goal>
          <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0.3.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.97" steps="799737"/></proof>
          </goal>
          <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0.3.2" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
           <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0.3.2.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="2.65" steps="888598"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.1" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="2.66" steps="886811"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="place_zero_kron&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <transf name="eliminate_if" proved="true" >
      <goal name="place_zero_kron&#39;vc.0.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="place_zero_kron&#39;vc.0.0.0.1.0.0" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.17" steps="756460"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron_gen&#39;vc" expl="VC for place_kron_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron_gen&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_if" proved="true" >
   <goal name="place_kron_gen&#39;vc.0.0" expl="VC for place_kron_gen" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="place_kron_gen&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="2.06" steps="808682"/></proof>
    </goal>
    <goal name="place_kron_gen&#39;vc.0.0.1" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="2.48" steps="925338"/></proof>
    </goal>
    <goal name="place_kron_gen&#39;vc.0.0.2" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.99"/></proof>
    </goal>
    <goal name="place_kron_gen&#39;vc.0.0.3" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="place_kron_gen&#39;vc.0.0.3.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(bv_to_ket x)" arg2="(kronecker (bv_to_ket (hpart x k))
    (kronecker ( (bv_to_ket (htpart x k (width c))))
     (bv_to_ket (tpart x (width c + k)))))">
      <goal name="place_kron_gen&#39;vc.0.0.3.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="place_kron">
       <goal name="place_kron_gen&#39;vc.0.0.3.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.94" steps="805696"/></proof>
       </goal>
       <goal name="place_kron_gen&#39;vc.0.0.3.0.0.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.97" steps="805716"/></proof>
       </goal>
       <goal name="place_kron_gen&#39;vc.0.0.3.0.0.2" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.94" steps="923590"/></proof>
       </goal>
       <goal name="place_kron_gen&#39;vc.0.0.3.0.0.3" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.98" steps="924629"/></proof>
       </goal>
       <goal name="place_kron_gen&#39;vc.0.0.3.0.0.4" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="1.18"/></proof>
       </goal>
       <goal name="place_kron_gen&#39;vc.0.0.3.0.0.5" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.23" steps="761142"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_kron_gen&#39;vc.0.0.3.0.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="( bv_to_ket x)" arg2="(bv_to_ket (concat1 (hpart x k) (concat1 (htpart x k (width c)) (tpart x (width c+k)))))">
       <goal name="place_kron_gen&#39;vc.0.0.3.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="2.95" steps="926323"/></proof>
       </goal>
       <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="bv_to_ket_eq">
        <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="concat_length">
         <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="concat_length">
          <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.0.0.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="3.00" steps="935042"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0" expl="apply premises" proved="true">
         <transf name="case" proved="true" arg1="(i&lt;k)">
          <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.0" expl="true case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="concat_value_left">
           <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.0.0" expl="true case (apply premises)" proved="true">
           <proof prover="9"><result status="valid" time="3.01" steps="950098"/></proof>
           </goal>
           <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.93" steps="926912"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.1" expl="false case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="concat_value_right">
           <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.1.0" expl="false case (apply premises)" proved="true">
           <transf name="case" proved="true" arg1="(i&lt;k+width c)">
            <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.1.0.0" expl="false case (true case. apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="concat_value_left">
             <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.1.0.0.0" expl="false case (true case. apply premises)" proved="true">
             <proof prover="0"><result status="valid" time="1.05"/></proof>
             </goal>
             <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.1.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="3.03" steps="931288"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.1.0.1" expl="false case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="concat_value_right">
             <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.1.0.1.0" expl="false case (apply premises)" proved="true">
             <proof prover="0"><result status="valid" time="1.03"/></proof>
             </goal>
             <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.1.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.96" steps="934958"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.1.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.97" steps="931748"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_kronecker&#39;vc" expl="VC for place_kronecker" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kronecker&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="place_kron_gen">
   <goal name="place_kronecker&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="place_kronecker&#39;vc.0.0.0" expl="VC for place_kronecker" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="place_kronecker&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="place_kronecker&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(bv_to_ket (hpart x k))" arg2="kronecker_neutral">
       <goal name="place_kronecker&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="(bv_to_ket (tpart x (width c + k)))" arg2="kronecker_neutral">
        <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="neutral_">
         <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="neutral_1">
          <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="replace" proved="true" arg1="(htpart x k (width c))" arg2="x">
           <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <proof prover="9"><result status="valid" time="1.29" steps="762568"/></proof>
           </goal>
           <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="apply" proved="true" arg1="set_equal_bv">
            <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="3.00" steps="928565"/></proof>
            </goal>
            <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="3.12" steps="957233"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="set_equal_ket_l">
         <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="exists" proved="true" arg1="0">
          <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.1.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.1.0.0.0" proved="true">
           <proof prover="9"><result status="valid" time="3.05" steps="931024"/></proof>
           </goal>
           <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.1.0.0.1" proved="true">
           <proof prover="9"><result status="valid" time="1.28" steps="763335"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="3.03" steps="941434"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_kronecker&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="set_equal_ket_l">
        <goal name="place_kronecker&#39;vc.0.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="exists" proved="true" arg1="0">
         <goal name="place_kronecker&#39;vc.0.0.0.0.0.1.0.0" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="place_kronecker&#39;vc.0.0.0.0.0.1.0.0.0" proved="true">
          <proof prover="9"><result status="valid" time="2.59" steps="924661"/></proof>
          </goal>
          <goal name="place_kronecker&#39;vc.0.0.0.0.0.1.0.0.1" proved="true">
          <proof prover="9"><result status="valid" time="1.22" steps="763335"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="place_kronecker&#39;vc.0.0.0.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="3.00" steps="939643"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="place_kronecker&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(bv_to_ket (hpart x k))" arg2="kronecker_neutral">
      <goal name="place_kronecker&#39;vc.0.0.0.1.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="place_kronecker&#39;vc.0.0.0.1.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="neutral_">
        <goal name="place_kronecker&#39;vc.0.0.0.1.0.0.0" expl="postcondition" proved="true">
        <transf name="replace" proved="true" arg1="(htpart x k (width c))" arg2="(hpart x  (width c))">
         <goal name="place_kronecker&#39;vc.0.0.0.1.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="add_zero">
          <goal name="place_kronecker&#39;vc.0.0.0.1.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="compute_specified" proved="true" >
          </transf>
          </goal>
          <goal name="place_kronecker&#39;vc.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.21" steps="762574"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_kronecker&#39;vc.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="set_equal_bv">
          <goal name="place_kronecker&#39;vc.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.98" steps="932196"/></proof>
          </goal>
          <goal name="place_kronecker&#39;vc.0.0.0.1.0.0.0.1.1" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="place_kronecker&#39;vc.0.0.0.1.0.0.0.1.1.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="3.08" steps="960008"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="place_kronecker&#39;vc.0.0.0.1.1" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="set_equal_ket_l">
       <goal name="place_kronecker&#39;vc.0.0.0.1.1.0" expl="apply premises" proved="true">
       <transf name="exists" proved="true" arg1="0">
        <goal name="place_kronecker&#39;vc.0.0.0.1.1.0.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="place_kronecker&#39;vc.0.0.0.1.1.0.0.0" proved="true">
         <proof prover="9"><result status="valid" time="2.44" steps="782894"/></proof>
         </goal>
         <goal name="place_kronecker&#39;vc.0.0.0.1.1.0.0.1" proved="true">
         <proof prover="9"><result status="valid" time="1.00" steps="627011"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_kronecker&#39;vc.0.0.0.1.1.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.40" steps="789210"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="place_kronecker&#39;vc.0.0.0.2" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(bv_to_ket (tpart x (width c + k)))" arg2="kronecker_neutral">
      <goal name="place_kronecker&#39;vc.0.0.0.2.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="place_kronecker&#39;vc.0.0.0.2.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="neutral_1">
        <goal name="place_kronecker&#39;vc.0.0.0.2.0.0.0" expl="postcondition" proved="true">
        <transf name="replace" proved="true" arg1="(htpart x k (width c))" arg2="(tpart x  k)">
         <goal name="place_kronecker&#39;vc.0.0.0.2.0.0.0.0" expl="postcondition" proved="true">
         <transf name="compute_specified" proved="true" >
         </transf>
         </goal>
         <goal name="place_kronecker&#39;vc.0.0.0.2.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="set_equal_bv">
          <goal name="place_kronecker&#39;vc.0.0.0.2.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.93" steps="932458"/></proof>
          </goal>
          <goal name="place_kronecker&#39;vc.0.0.0.2.0.0.0.1.1" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="3.05" steps="960601"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="place_kronecker&#39;vc.0.0.0.2.1" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="set_equal_ket_l">
       <goal name="place_kronecker&#39;vc.0.0.0.2.1.0" expl="apply premises" proved="true">
       <transf name="exists" proved="true" arg1="0">
        <goal name="place_kronecker&#39;vc.0.0.0.2.1.0.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="place_kronecker&#39;vc.0.0.0.2.1.0.0.0" proved="true">
         <proof prover="9"><result status="valid" time="2.40" steps="783028"/></proof>
         </goal>
         <goal name="place_kronecker&#39;vc.0.0.0.2.1.0.0.1" proved="true">
         <proof prover="9"><result status="valid" time="0.99" steps="627018"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_kronecker&#39;vc.0.0.0.2.1.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.10" steps="789392"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="place_kronecker&#39;vc.0.0.0.3" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="1.01" steps="626409"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_kronecker&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.80" steps="615687"/></proof>
   </goal>
   <goal name="place_kronecker&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.85" steps="615687"/></proof>
   </goal>
   <goal name="place_kronecker&#39;vc.0.3" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.86" steps="615687"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron_gen_&#39;vc" expl="VC for place_kron_gen_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron_gen_&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="place_kron_gen_&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="place&#39;spec">
    <goal name="place_kron_gen_&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="place_kron_gen_&#39;vc.0.0.0.0" expl="VC for place_kron_gen_" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_kron_gen_&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.16" steps="757240"/></proof>
      </goal>
      <goal name="place_kron_gen_&#39;vc.0.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.97" steps="786856"/></proof>
      </goal>
      <goal name="place_kron_gen_&#39;vc.0.0.0.0.2" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.37" steps="757270"/></proof>
      </goal>
      <goal name="place_kron_gen_&#39;vc.0.0.0.0.3" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_to_sem">
       <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (parallel (ids k) (parallel c (ids ((n - k) - width c)))))" arg2="(k+ (width c + (n-width c -k)))">
        <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_ket_l">
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.96" steps="786778"/></proof>
         </goal>
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.75" steps="899251"/></proof>
         </goal>
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.0.0.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.22" steps="743962"/></proof>
         </goal>
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.0.0.3" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.73" steps="899112"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.0.1" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="2.72" steps="901349"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="path_sem_kron">
        <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="2.79" steps="899466"/></proof>
        </goal>
        <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.1" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(width (parallel c (ids ((n - k) - width c))))" arg2="(width c + (n-width c -k))">
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.1.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.1.0.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.78" steps="898382"/></proof>
          </goal>
          <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.1.0.1" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="1.90" steps="786777"/></proof>
          </goal>
          <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.1.0.2" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="1.17" steps="743962"/></proof>
          </goal>
          <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.1.0.3" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="1.18" steps="743962"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.1.1" expl="equality hypothesis" proved="true">
         <proof prover="9"><result status="valid" time="2.98" steps="921171"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.2" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="2.75" steps="898591"/></proof>
        </goal>
        <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.3" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="path_sem_kron">
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.3.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.22" steps="743962"/></proof>
         </goal>
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.3.1" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="ids&#39;spec7">
          <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.3.1.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="1.22" steps="743983"/></proof>
          </goal>
          <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.3.1.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.26" steps="744000"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.3.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.11" steps="787731"/></proof>
         </goal>
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.3.3" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.82" steps="898830"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_kron_gen_&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.94" steps="779070"/></proof>
    </goal>
    <goal name="place_kron_gen_&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.98" steps="779067"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_zero_place&#39;vc" expl="VC for place_zero_place" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_zero_place&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="place_zero_kron">
   <goal name="place_zero_place&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="place_zero_place&#39;vc.0.0.0" expl="VC for place_zero_place" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="place_zero_place&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.92"/></proof>
     </goal>
     <goal name="place_zero_place&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="place_zero_place&#39;vc.0.0.0.1.0" expl="postcondition" proved="true">
      <transf name="case" proved="true" arg1="(k =0)">
       <goal name="place_zero_place&#39;vc.0.0.0.1.0.0" expl="true case (postcondition)" proved="true">
       <transf name="case" proved="true" arg1="(n = width c)">
        <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.0" expl="true case (postcondition)" proved="true">
        <proof prover="9"><result status="valid" time="2.53" steps="929003"/></proof>
        </goal>
        <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1" expl="false case (true case. postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="place_kron_gen2">
         <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0" expl="false case (true case. postcondition)" proved="true">
         <transf name="rewrite" proved="true" arg1="place_kron_gen2">
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0" expl="false case (true case. postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
           <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0" expl="false case (true case. postcondition)" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_eq">
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(hpart (hpart x (width (place c k n))) (width c))" arg2="(hpart x (width c))">
             <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
             </transf>
             </goal>
             <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <transf name="apply" proved="true" arg1="set_equal_bv">
              <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="2.56" steps="934062"/></proof>
              </goal>
              <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1.1.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="hpart_value_b">
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="hpart_value_b">
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="hpart_value_b">
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.23" steps="763360"/></proof>
                  </goal>
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.51" steps="930814"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.88" steps="930731"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="2.88" steps="930814"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
             <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="bv_to_ket_eq">
              <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="2.89" steps="934735"/></proof>
              </goal>
              <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0" expl="apply premises" proved="true">
               <transf name="case" proved="true" arg1="(i&lt; n-width c)">
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0" expl="true case (apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value_left">
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0" expl="true case (apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="tpart_value_b">
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="hpart_value_b">
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                   <transf name="rewrite" proved="true" arg1="tpart_value_b">
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                    <proof prover="9"><result status="valid" time="1.25" steps="763415"/></proof>
                    </goal>
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.87" steps="930080"/></proof>
                    </goal>
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.00" steps="807421"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.88" steps="931350"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.82" steps="930080"/></proof>
                  </goal>
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.88" steps="934426"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.89" steps="934375"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.1" expl="false case (apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value_right">
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.1.0" expl="false case (apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="tpart_length">
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.1.0.0" expl="false case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="hpart_length">
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.1.0.0.0" expl="false case (apply premises)" proved="true">
                   <proof prover="9"><result status="valid" time="2.95" steps="964574"/></proof>
                   </goal>
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.77" steps="930098"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.92" steps="934245"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.1.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.92" steps="937932"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.33" steps="763319"/></proof>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.03" steps="807292"/></proof>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.3" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.26" steps="763319"/></proof>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.4" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.28" steps="763319"/></proof>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.5" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.03" steps="807268"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.21" steps="763319"/></proof>
         </goal>
         <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.28" steps="763319"/></proof>
         </goal>
         <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.3" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="2.95" steps="930286"/></proof>
         </goal>
         <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.4" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.24" steps="763319"/></proof>
         </goal>
         <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.5" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.23" steps="763317"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_zero_place&#39;vc.0.0.0.1.0.1" expl="false case (postcondition)" proved="true">
       <transf name="case" proved="true" arg1="(n = width c)">
        <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.0" expl="false case (true case. postcondition)" proved="true">
        <proof prover="9"><result status="valid" time="1.94" steps="807360"/></proof>
        </goal>
        <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1" expl="false case (postcondition)" proved="true">
        <transf name="apply" proved="true" arg1="goal_comm">
         <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="place_kron_gen">
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
          <transf name="case" proved="true" arg1="(n = k + width c)">
           <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="place_kron_gen1">
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0" expl="true case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
             <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
             <transf name="apply" proved="true" arg1="kronecker_eq">
              <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(hpart (hpart x (width (place c k n))) k)" arg2="(hpart x k)">
               <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.22" steps="763339"/></proof>
               </goal>
               <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
               <transf name="apply" proved="true" arg1="set_equal_bv">
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.97" steps="934132"/></proof>
                </goal>
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="hpart_value_b">
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="hpart_value_b">
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="hpart_value_b">
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.28" steps="763382"/></proof>
                    </goal>
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.88" steps="929922"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.70" steps="929845"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.85" steps="929922"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_eq">
               <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(bv_to_ket (htpart x k (width c)))" arg2="(bv_to_ket (tpart (hpart x (width (place c k n))) k))">
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                </transf>
                </goal>
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                <transf name="apply" proved="true" arg1="bv_to_ket_eq">
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.91" steps="934089"/></proof>
                 </goal>
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="htpart_value_b">
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="tpart_value_b">
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="hpart_value_b">
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.25" steps="786050"/></proof>
                     </goal>
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.92" steps="930425"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.19" steps="763380"/></proof>
                    </goal>
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.87" steps="933779"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.26" steps="763380"/></proof>
                   </goal>
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0.2" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.89" steps="929062"/></proof>
                   </goal>
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0.3" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.88" steps="930313"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.1" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.90" steps="926441"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.28" steps="763341"/></proof>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.24" steps="763341"/></proof>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.92" steps="930357"/></proof>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.4" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.24" steps="763339"/></proof>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.5" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.28" steps="763341"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1" expl="false case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="place_kron_gen">
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0" expl="false case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
             <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0" expl="false case (apply premises)" proved="true">
             <transf name="apply" proved="true" arg1="kronecker_eq">
              <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="bv_to_ket_eq">
               <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.88" steps="931867"/></proof>
               </goal>
               <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="hpart_value_b">
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="hpart_value_b">
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="hpart_value_b">
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.06" steps="763379"/></proof>
                   </goal>
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.82" steps="929295"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.84" steps="929264"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.88" steps="929264"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
               <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_eq">
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
                <transf name="replace" proved="true" arg1="(bv_to_ket (htpart (hpart x (width (place c k n))) k (width c)))" arg2="(bv_to_ket (htpart x k (width c)))">
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                 </transf>
                 </goal>
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                 <transf name="apply" proved="true" arg1="bv_to_ket_eq">
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.87" steps="933445"/></proof>
                  </goal>
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="htpart_value_b">
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="htpart_value_b">
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="hpart_value_b">
                      <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.21" steps="763389"/></proof>
                      </goal>
                      <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.86" steps="930793"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.21" steps="763391"/></proof>
                     </goal>
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.84" steps="929279"/></proof>
                     </goal>
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.0.3" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.84" steps="930770"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.23" steps="763391"/></proof>
                    </goal>
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.87" steps="929279"/></proof>
                    </goal>
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.3" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.87" steps="930770"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="bv_to_ket_eq">
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.91" steps="934829"/></proof>
                  </goal>
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0" expl="apply premises" proved="true">
                   <transf name="case" proved="true" arg1="(i &lt; n - width c-k)">
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0" expl="true case (apply premises)" proved="true">
                    <transf name="rewrite" proved="true" arg1="concat_value_left">
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0" expl="true case (apply premises)" proved="true">
                     <transf name="rewrite" proved="true" arg1="tpart_value_b">
                      <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
                      <transf name="rewrite" proved="true" arg1="tpart_value_b">
                       <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                       <transf name="rewrite" proved="true" arg1="hpart_value_b">
                        <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                        <proof prover="9"><result status="valid" time="1.25" steps="763414"/></proof>
                        </goal>
                        <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0.0.1.0" proved="true">
                         <proof prover="9"><result status="valid" time="2.89" steps="929408"/></proof>
                         </goal>
                         <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0.0.1.1" proved="true">
                         <proof prover="9"><result status="valid" time="2.86" steps="929501"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.82" steps="929399"/></proof>
                       </goal>
                       <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0.2.0" proved="true">
                        <proof prover="9"><result status="valid" time="1.21" steps="763416"/></proof>
                        </goal>
                        <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0.2.1" proved="true">
                        <proof prover="9"><result status="valid" time="2.82" steps="933942"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.79" steps="929399"/></proof>
                      </goal>
                      <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.97" steps="807455"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.89" steps="934449"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1" expl="false case (apply premises)" proved="true">
                    <transf name="rewrite" proved="true" arg1="concat_value_right">
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0" expl="false case (apply premises)" proved="true">
                     <transf name="rewrite" proved="true" arg1="tpart_value_b">
                      <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.0" expl="false case (apply premises)" proved="true">
                      <transf name="rewrite" proved="true" arg1="tpart_value_b">
                       <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.0.0" expl="false case (apply premises)" proved="true">
                       <transf name="rewrite" proved="true" arg1="tpart_length">
                        <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.0.0.0" expl="false case (apply premises)" proved="true">
                        <transf name="rewrite" proved="true" arg1="hpart_length">
                         <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                         <proof prover="9"><result status="valid" time="1.26" steps="786127"/></proof>
                         </goal>
                         <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.83" steps="929304"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                        <proof prover="9"><result status="valid" time="2.86" steps="933981"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.80" steps="929304"/></proof>
                       </goal>
                       <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.0.2" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.84" steps="934581"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.89" steps="929508"/></proof>
                      </goal>
                      <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.2" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.91" steps="930747"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.77" steps="938541"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.17" steps="763345"/></proof>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.05" steps="763345"/></proof>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.3" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.86" steps="930338"/></proof>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.4" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.00" steps="763343"/></proof>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.5" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.26" steps="763343"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.30" steps="763323"/></proof>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.08" steps="807283"/></proof>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.3" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.31" steps="763323"/></proof>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.4" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.26" steps="763321"/></proof>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.5" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.86" steps="925008"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_zero_place&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.78"/></proof>
   </goal>
   <goal name="place_zero_place&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.94" steps="616403"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_place&#39;vc" expl="VC for place_place" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_place&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(bv_to_ket x = kronecker (kronecker (bv_to_ket (hpart x k&#39;)) (bv_to_ket (htpart x k&#39; n))) (bv_to_ket (tpart x (k&#39;+n))))
">
   <goal name="place_place&#39;vc.0.0" expl="asserted formula" proved="true">
   <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
    <goal name="place_place&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
     <goal name="place_place&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="1.13"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_place&#39;vc.0.1" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="place_kronecker">
    <goal name="place_place&#39;vc.0.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="place_kronecker">
     <goal name="place_place&#39;vc.0.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="place_kronecker">
      <goal name="place_place&#39;vc.0.1.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="( (bv_to_ket (hpart x (k + k&#39;))))" arg2="(kronecker (bv_to_ket (hpart x k&#39;)) (bv_to_ket (htpart x k&#39; k)))">
       <goal name="place_place&#39;vc.0.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
        <goal name="place_place&#39;vc.0.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
         <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
          <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_eq">
           <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
           </transf>
           </goal>
           <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_eq">
            <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="bv_to_ket_eq">
             <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <proof prover="0"><result status="valid" time="0.83"/></proof>
             </goal>
             <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="hpart_value_b">
               <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(width (place c k n))" arg2="n">
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.53" steps="810510"/></proof>
                </goal>
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0.1.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="0"><result status="valid" time="0.86"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
               <transf name="rewrite" proved="true" arg1="hpart_length" arg2="in" arg3="H">
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="0.96" steps="616855"/></proof>
                </goal>
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0.1.0.1.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="0.92" steps="616866"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_eq">
             <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(htpart (htpart x k&#39; (width (place c k n))) k (width c))" arg2="(htpart x (k + k&#39;) (width c))">
              <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
              </transf>
              </goal>
              <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
              <transf name="apply" proved="true" arg1="set_equal_bv">
               <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="htpart_length">
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="htpart_length">
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.0.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="0.91" steps="616804"/></proof>
                 </goal>
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.60" steps="660200"/></proof>
                 </goal>
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.32" steps="780012"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="0.76" steps="616806"/></proof>
                </goal>
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.0.2" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="2.33" steps="780012"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="htpart_value_b">
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="htpart_value_b">
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="htpart_value_b">
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="0.94" steps="638501"/></proof>
                   </goal>
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.55" steps="660262"/></proof>
                   </goal>
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.29" steps="784071"/></proof>
                   </goal>
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.0.0.3" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.31" steps="785740"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="0.79" steps="616869"/></proof>
                  </goal>
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.29" steps="784293"/></proof>
                  </goal>
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.0.3" expl="rewrite premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.22"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="0.93" steps="616869"/></proof>
                 </goal>
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.33" steps="784071"/></proof>
                 </goal>
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.3" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.36" steps="785740"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
              <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="bv_to_ket_eq">
               <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="concat_length">
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="tpart_length">
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="htpart_length">
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="tpart_length">
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="tpart_length">
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="0.97" steps="616886"/></proof>
                    </goal>
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.44" steps="781466"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="0"><result status="valid" time="0.83"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="0.95" steps="616806"/></proof>
                  </goal>
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.41" steps="780287"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.03"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0" expl="apply premises" proved="true">
                <transf name="assert" proved="true" arg1="(i &lt; (((n&#39; - width c) - k) - k&#39;))">
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0" expl="asserted formula" proved="true">
                 <transf name="rewrite" proved="true" arg1="concat_length" arg2="in" arg3="H">
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0" expl="asserted formula" proved="true">
                  <transf name="rewrite" proved="true" arg1="tpart_length" arg2="in" arg3="H">
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0" expl="asserted formula" proved="true">
                   <transf name="rewrite" proved="true" arg1="tpart_length" arg2="in" arg3="H">
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
                    <transf name="rewrite" proved="true" arg1="htpart_length" arg2="in" arg3="H">
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                      <transf name="rewrite" proved="true" arg1="place&#39;spec3" arg2="in" arg3="H">
                       <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                       <proof prover="9"><result status="valid" time="1.97" steps="779796"/></proof>
                       </goal>
                       <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.15" steps="735369"/></proof>
                       </goal>
                       <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.20" steps="735369"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="0.93" steps="616895"/></proof>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.42" steps="783788"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.1.0" proved="true">
                     <transf name="rewrite" proved="true" arg1="place&#39;spec3" arg2="in" arg3="H">
                      <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.1.0.0" proved="true">
                      <proof prover="9"><result status="valid" time="2.81" steps="903193"/></proof>
                      </goal>
                      <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.18" steps="735383"/></proof>
                      </goal>
                      <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.17" steps="735383"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.1.1" proved="true">
                     <proof prover="9"><result status="valid" time="2.71" steps="904721"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.30" steps="787571"/></proof>
                    </goal>
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="htpart_length">
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                     <proof prover="0"><result status="valid" time="0.83"/></proof>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="0.96" steps="616891"/></proof>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.1.1.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.40" steps="787490"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1" expl="apply premises" proved="true">
                 <transf name="case" proved="true" arg1="(i &lt; n - width c - k)">
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0" expl="true case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="concat_value_left">
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0" expl="true case (apply premises)" proved="true">
                   <transf name="rewrite" proved="true" arg1="tpart_value_b">
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.0" expl="true case (apply premises)" proved="true">
                    <transf name="rewrite" proved="true" arg1="htpart_value_b">
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
                     <transf name="rewrite" proved="true" arg1="tpart_value_b">
                      <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                      <proof prover="9"><result status="valid" time="0.95" steps="638599"/></proof>
                      </goal>
                      <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.41" steps="784997"/></proof>
                      </goal>
                      <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.63" steps="660063"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="0.96" steps="616960"/></proof>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.37" steps="784862"/></proof>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.0.3" expl="rewrite premises" proved="true">
                     <proof prover="0"><result status="valid" time="0.83"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.44" steps="784970"/></proof>
                    </goal>
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="0"><result status="valid" time="0.96"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.04"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1" expl="false case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="concat_value_right">
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0" expl="false case (apply premises)" proved="true">
                   <transf name="rewrite" proved="true" arg1="tpart_value_b">
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.0" expl="false case (apply premises)" proved="true">
                    <transf name="rewrite" proved="true" arg1="tpart_value_b">
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.0.0" expl="false case (apply premises)" proved="true">
                     <transf name="rewrite" proved="true" arg1="tpart_length">
                      <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.0.0.0" expl="false case (apply premises)" proved="true">
                      <transf name="rewrite" proved="true" arg1="htpart_length">
                       <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                       <proof prover="9"><result status="valid" time="0.98" steps="638633"/></proof>
                       </goal>
                       <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="0.95" steps="616977"/></proof>
                       </goal>
                       <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.37" steps="784880"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="0"><result status="valid" time="0.99"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.36" steps="785035"/></proof>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.51" steps="660056"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.28" steps="785008"/></proof>
                    </goal>
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.2" expl="rewrite premises" proved="true">
                    <proof prover="0"><result status="valid" time="1.09"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.1" expl="rewrite premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.02"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_place&#39;vc.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
        <goal name="place_place&#39;vc.0.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="bv_to_ket_eq">
         <goal name="place_place&#39;vc.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.02"/></proof>
         </goal>
         <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0" expl="apply premises" proved="true">
          <transf name="case" proved="true" arg1="(i&lt;k&#39;)">
           <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.0" expl="true case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="concat_value_left">
            <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.0.0" expl="true case (apply premises)" proved="true">
            <proof prover="9"><result status="valid" time="2.34" steps="809028"/></proof>
            </goal>
            <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.32" steps="786238"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.1" expl="false case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="concat_value_right">
            <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.1.0" expl="false case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="htpart_value_b">
             <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.1.0.0" expl="false case (apply premises)" proved="true">
             <transf name="rewrite" proved="true" arg1="hpart_length">
              <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.1.0.0.0" expl="false case (apply premises)" proved="true">
              <proof prover="9"><result status="valid" time="2.41" steps="808677"/></proof>
              </goal>
              <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="0.93" steps="616881"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.94" steps="616881"/></proof>
             </goal>
             <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.1.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.94" steps="616881"/></proof>
             </goal>
             <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.1.0.3" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.35" steps="788787"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.50" steps="792096"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="place_place&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.57" steps="660200"/></proof>
      </goal>
      <goal name="place_place&#39;vc.0.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.59" steps="660224"/></proof>
      </goal>
      <goal name="place_place&#39;vc.0.1.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.95" steps="616806"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="place_place&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.93" steps="616806"/></proof>
     </goal>
     <goal name="place_place&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.93" steps="616806"/></proof>
     </goal>
     <goal name="place_place&#39;vc.0.1.0.3" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.01"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="place_place&#39;vc.0.1.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.96" steps="616806"/></proof>
    </goal>
    <goal name="place_place&#39;vc.0.1.2" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.80"/></proof>
    </goal>
    <goal name="place_place&#39;vc.0.1.3" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.94" steps="616806"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_get_ket&#39;vc" expl="VC for place_get_ket" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_get_ket&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pat_sem_apply_basis_value">
   <goal name="place_get_ket&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pat_sem_apply_basis_value">
    <goal name="place_get_ket&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(range (place c k n))" arg2="(range c)">
     <goal name="place_get_ket&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="mult_eq_t">
      <goal name="place_get_ket&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="0.88" steps="617136"/></proof>
      </goal>
      <goal name="place_get_ket&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="sum_eq">
       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="mult_eq_t">
          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="place&#39;spec1">
            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(ang_ind c
     (getbv (make_bv (fun (i:int) -&gt; getbv x1 @ (i + k)) (width c)))
     (getbv x))" arg2="(ang_ind c
     ( ( (fun (i:int) -&gt; getbv x1 @ (i + k)) ))
     (getbv x))">
             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
             </transf>
             </goal>
             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <transf name="eliminate_definition" proved="true" >
              <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
              <transf name="rewrite" proved="true" arg1="ang_ind&#39;def">
               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
               <transf name="rewrite" proved="true" arg1="ang_ind&#39;def">
                <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant">
                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.08" steps="993636"/></proof>
                    </goal>
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.14" steps="993624"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.39" steps="876654"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.36" steps="825781"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.34" steps="826391"/></proof>
            </goal>
            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.30" steps="826391"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="int_to_bv_to_int_">
           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="int_to_bv_to_int_">
            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="get_indic">
             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="get_indic">
              <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <transf name="eliminate_if" proved="true" >
               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.29" steps="810522"/></proof>
                </goal>
                <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                <transf name="assert" proved="true" arg1="(make_bv
      (fun (y3:int) -&gt;
        basis_ket c
        (getbv (make_bv (fun (i:int) -&gt; getbv x1 @ (i + k)) (width c)))
        (getbv x) y3)
      (width c) = make_bv (fun (i:int) -&gt; getbv y @ (i + k)) (width c))">
                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
                 <transf name="apply" proved="true" arg1="set_equal_bv">
                  <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="make_bv_length">
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="make_bv_length">
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.31" steps="810526"/></proof>
                    </goal>
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.33" steps="989452"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.32" steps="987994"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                      <transf name="eliminate_definition" proved="true" >
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="rewrite premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.59" steps="1129503"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.54" steps="1124801"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.82" steps="1025766"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                     <transf name="eliminate_definition" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                       <transf name="split_all_full" proved="true" >
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.59" steps="1156924"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.43" steps="1152268"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.82" steps="1052915"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.08" steps="987994"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="replace" proved="true" arg1="y" arg2="(  make_bv (fun (y3:int) -&gt; basis_ket (place c k n) (getbv x1) (getbv x) y3)
  (width (place c k n)))">
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                         <transf name="compute_specified" proved="true" >
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                          <transf name="split_all_full" proved="true" >
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="place&#39;spec10">
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                            <transf name="eliminate_definition" proved="true" >
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                             <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                              <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                              <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                               <transf name="replace" proved="true" arg1="((i + k) - k)" arg2="i">
                                <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                <transf name="apply" proved="true" arg1="pps&#39;invariant1">
                                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                 <transf name="compute_specified" proved="true" >
                                  <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                  <transf name="split_vc" proved="true" >
                                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                   <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                    <proof prover="9"><result status="valid" time="3.44" steps="1125324"/></proof>
                                    </goal>
                                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                                    <transf name="compute_specified" proved="true" >
                                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                                     <transf name="split_vc" proved="true" >
                                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                                      <proof prover="9"><result status="valid" time="3.53" steps="1125159"/></proof>
                                      </goal>
                                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                                      <proof prover="9"><result status="valid" time="3.57" steps="1125148"/></proof>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                                    <proof prover="9"><result status="valid" time="2.79" steps="1025774"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                                 <proof prover="9"><result status="valid" time="1.67" steps="972310"/></proof>
                                 </goal>
                                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                                 <proof prover="9"><result status="valid" time="2.80" steps="1025766"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                                <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                                <proof prover="9"><result status="valid" time="1.66" steps="972337"/></proof>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="1.62" steps="972766"/></proof>
                            </goal>
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="1.69" steps="972766"/></proof>
                            </goal>
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="2.65" steps="1022855"/></proof>
                            </goal>
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="1.57" steps="972796"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <transf name="compute_specified" proved="true" >
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                          <transf name="split_all_full" proved="true" >
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                            <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.58" steps="1151224"/></proof>
                             </goal>
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.59" steps="1151486"/></proof>
                             </goal>
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="1.66" steps="972800"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                            <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.59" steps="1151224"/></proof>
                             </goal>
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.51" steps="1151486"/></proof>
                             </goal>
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="1.59" steps="972800"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                         <proof prover="0"><result status="valid" time="1.45"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                        <proof prover="9"><result status="valid" time="1.38" steps="810560"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.31" steps="989497"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.27" steps="810562"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.58" steps="1156293"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.64" steps="1151300"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.70" steps="972800"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.70" steps="1156293"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.70" steps="1151300"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.63" steps="972800"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.32" steps="810562"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.0.0" expl="rewrite premises" proved="true">
                        <transf name="eliminate_definition" proved="true" >
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.0.0.0" expl="rewrite premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.0.0.0.0" expl="rewrite premises" proved="true">
                          <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="3.49" steps="1129532"/></proof>
                           </goal>
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="3.47" steps="1124815"/></proof>
                           </goal>
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="2.84" steps="1025774"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                        <transf name="split_all_full" proved="true" >
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                          <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="3.56" steps="1160836"/></proof>
                           </goal>
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="3.58" steps="1156169"/></proof>
                           </goal>
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="1.65" steps="972880"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                          <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="3.58" steps="1160836"/></proof>
                           </goal>
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="3.51" steps="1156169"/></proof>
                           </goal>
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="1.66" steps="972880"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.2" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.57" steps="1154854"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1" expl="rewrite premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0" expl="rewrite premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.0" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.0.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.58" steps="1156293"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.0.0.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.60" steps="1151300"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.0.0.2" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.68" steps="972800"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1.0" expl="rewrite premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1.0.0" expl="rewrite premises" proved="true">
                         <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1.0.0.0" expl="apply premises" proved="true">
                          <proof prover="9"><result status="valid" time="3.52" steps="1160836"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1.0.0.1" expl="apply premises" proved="true">
                          <proof prover="9"><result status="valid" time="3.62" steps="1156169"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1.0.0.2" expl="apply premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.60" steps="972880"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1.0.1" expl="rewrite premises" proved="true">
                         <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1.0.1.0" expl="apply premises" proved="true">
                          <proof prover="9"><result status="valid" time="3.54" steps="1160836"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1.0.1.1" expl="apply premises" proved="true">
                          <proof prover="9"><result status="valid" time="3.55" steps="1156169"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1.0.1.2" expl="apply premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.41" steps="972880"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.2" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.63" steps="1154854"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.19" steps="990853"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="h" arg2="in" arg3="H">
                  <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                  <transf name="assert" proved="true" arg1="false">
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
                   <transf name="assert" proved="true" arg1="(exists x:bitvec. x&lt;&gt;x)">
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.1.0.0.0" expl="asserted formula" proved="true">
                    <transf name="exists" proved="true" arg1="(make_bv (fun (i:int) -&gt; getbv y @ (i + k)) (width c))">
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.1.0.0.0.0" proved="true">
                     <transf name="apply" proved="true" arg1="H">
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.1.0.0.1" expl="asserted formula" proved="true">
                    <proof prover="9"><result status="valid" time="1.39" steps="810642"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.40" steps="810651"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                <transf name="assert" proved="true" arg1="(make_bv
      (fun (y3:int) -&gt; basis_ket (place c k n) (getbv x1) (getbv x) y3)
      (width (place c k n)) = y)">
                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0" expl="asserted formula" proved="true">
                 <transf name="apply" proved="true" arg1="set_equal_bv">
                  <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="make_bv_length">
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.09"/></proof>
                   </goal>
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.0" expl="rewrite premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.55" steps="1151342"/></proof>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.56" steps="1151336"/></proof>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.61" steps="972775"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.1" expl="rewrite premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.21" steps="1151342"/></proof>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.59" steps="1151336"/></proof>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.60" steps="972775"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.16" steps="981366"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0" expl="apply premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="case" proved="true" arg1="(i&lt;k)">
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                        <transf name="rewrite" proved="true" arg1="place&#39;spec9">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                         <transf name="replace" proved="true" arg1="(getbv x1 @ i)" arg2="(getbv (hpart x1 k) i)">
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                          <transf name="rewrite" proved="true" arg1="Requires1">
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                           <proof prover="0"><result status="valid" time="1.14"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                          <proof prover="9"><result status="valid" time="3.54" steps="1153773"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.70" steps="972794"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.67" steps="972794"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.63" steps="1150659"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.68" steps="972801"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
                        <transf name="case" proved="true" arg1="(i&lt;k+width c)">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0" expl="false case (true case. apply premises)" proved="true">
                         <transf name="rewrite" proved="true" arg1="place&#39;spec10">
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0" expl="false case (true case. apply premises)" proved="true">
                          <transf name="replace" proved="true" arg1="( basis_ket c (fun (j:int) -&gt; getbv x1 @ (j + k)) (getbv x) (i - k))" arg2="(getbv (make_bv
  (fun (y3:int) -&gt;
    basis_ket c
    (getbv (make_bv (fun (i1:int) -&gt; getbv x1 @ (i1 + k)) (width c)))
    (getbv x) y3)
  (width c)) (i-k))">
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.0" expl="false case (true case. apply premises)" proved="true">
                           <transf name="rewrite" proved="true" arg1="H2">
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                             <proof prover="9"><result status="valid" time="3.57" steps="1151584"/></proof>
                             </goal>
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                             <transf name="compute_specified" proved="true" >
                              <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                              <proof prover="9"><result status="valid" time="3.69" steps="1151817"/></proof>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                             <proof prover="9"><result status="valid" time="1.65" steps="972858"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
                            <transf name="compute_specified" proved="true" >
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0" expl="equality hypothesis" proved="true">
                             <transf name="eliminate_definition" proved="true" >
                              <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                              <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
                               <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                                <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0" expl="equality hypothesis" proved="true">
                                <transf name="apply" proved="true" arg1="pps&#39;invariant1">
                                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                                 <transf name="compute_specified" proved="true" >
                                  <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                  <transf name="split_vc" proved="true" >
                                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                   <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                    <proof prover="9"><result status="valid" time="3.55" steps="1125355"/></proof>
                                    </goal>
                                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                                    <transf name="compute_specified" proved="true" >
                                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                                     <proof prover="9"><result status="valid" time="3.53" steps="1125339"/></proof>
                                     </goal>
                                    </transf>
                                    </goal>
                                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                                    <proof prover="9"><result status="valid" time="2.69" steps="1025749"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                                 <proof prover="9"><result status="valid" time="1.68" steps="972368"/></proof>
                                 </goal>
                                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                                 <proof prover="9"><result status="valid" time="2.79" steps="1025716"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                            <transf name="compute_specified" proved="true" >
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1.0" expl="rewrite premises" proved="true">
                             <transf name="split_vc" proved="true" >
                              <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1.0.0" expl="rewrite premises" proved="true">
                              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                               <proof prover="9"><result status="valid" time="3.55" steps="1156274"/></proof>
                               </goal>
                               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1.0.0.1" expl="apply premises" proved="true">
                               <proof prover="9"><result status="valid" time="3.69" steps="1151374"/></proof>
                               </goal>
                               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1.0.0.2" expl="apply premises" proved="true">
                               <proof prover="9"><result status="valid" time="1.69" steps="972858"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1.0.1.0" expl="apply premises" proved="true">
                               <proof prover="9"><result status="valid" time="3.63" steps="1156274"/></proof>
                               </goal>
                               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1.0.1.1" expl="apply premises" proved="true">
                               <proof prover="9"><result status="valid" time="3.10" steps="1151374"/></proof>
                               </goal>
                               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1.0.1.2" expl="apply premises" proved="true">
                               <proof prover="9"><result status="valid" time="1.65" steps="972858"/></proof>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.2" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="1.62" steps="972858"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.57" steps="972824"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.61" steps="972824"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="2.57" steps="1022863"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.4" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.56" steps="972840"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1" expl="false case (apply premises)" proved="true">
                         <transf name="rewrite" proved="true" arg1="place&#39;spec8">
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.0" expl="false case (apply premises)" proved="true">
                          <transf name="replace" proved="true" arg1="(getbv x1 @ i)" arg2="(getbv (tpart x1 (k + width c) ) @ (i- (k+width c)))">
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.0.0" expl="false case (apply premises)" proved="true">
                           <transf name="rewrite" proved="true" arg1="Requires">
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.0.0.0" expl="false case (apply premises)" proved="true">
                            <transf name="rewrite" proved="true" arg1="tpart_value_b">
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.0.0.0.0" expl="false case (apply premises)" proved="true">
                             <proof prover="9"><result status="valid" time="1.57" steps="972869"/></proof>
                             </goal>
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.53" steps="1150427"/></proof>
                             </goal>
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.53" steps="1150355"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
                           <proof prover="9"><result status="valid" time="3.61" steps="1156742"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.66" steps="972828"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.2" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.62" steps="972828"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.3" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="3.50" steps="1150496"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.4" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.60" steps="972828"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1" expl="rewrite premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.55" steps="1151252"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.58" steps="1151549"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.60" steps="972800"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.54" steps="1151252"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.51" steps="1151549"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.58" steps="972800"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.30" steps="810562"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1" expl="rewrite premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.49" steps="1153956"/></proof>
                        </goal>
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.48" steps="1154084"/></proof>
                        </goal>
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="1.61" steps="972804"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.54" steps="1153956"/></proof>
                        </goal>
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.60" steps="1154084"/></proof>
                        </goal>
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="1.61" steps="972804"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.13" steps="983842"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.1" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.35" steps="810526"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.3" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.36" steps="810530"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.64" steps="860022"/></proof>
            </goal>
            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.2" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="make_bv_length">
             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.11" steps="693721"/></proof>
             </goal>
             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.70" steps="886157"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.68" steps="860022"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.69" steps="860496"/></proof>
           </goal>
           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.2" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="0.94"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="place_get_ket&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="0"><result status="valid" time="0.84"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="place_get_ket&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <transf name="rewrite" proved="true" arg1="make_bv_length">
     <goal name="place_get_ket&#39;vc.0.0.1.0" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.97" steps="617136"/></proof>
     </goal>
     <goal name="place_get_ket&#39;vc.0.0.1.1" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="place_get_ket&#39;vc.0.0.1.1.0" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.40" steps="803301"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="place_get_ket&#39;vc.0.0.1.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.38" steps="781889"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="place_get_ket&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="place_get_ket&#39;vc.0.0.2.0" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.42" steps="802494"/></proof>
     </goal>
     <goal name="place_get_ket&#39;vc.0.0.2.1" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="bv_to_int_bound_gen">
      <goal name="place_get_ket&#39;vc.0.0.2.1.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="2.38" steps="781889"/></proof>
      </goal>
      <goal name="place_get_ket&#39;vc.0.0.2.1.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="make_bv_length">
       <goal name="place_get_ket&#39;vc.0.0.2.1.1.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="0.99" steps="617136"/></proof>
       </goal>
       <goal name="place_get_ket&#39;vc.0.0.2.1.1.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="place_get_ket&#39;vc.0.0.2.1.1.1.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.42" steps="803342"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_get_ket&#39;vc.0.0.2.1.1.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.34" steps="781889"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_get_ket&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.86"/></proof>
   </goal>
   <goal name="place_get_ket&#39;vc.0.2" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="place_get_ket&#39;vc.0.2.0" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="2.39" steps="781024"/></proof>
    </goal>
    <goal name="place_get_ket&#39;vc.0.2.1" expl="rewrite premises" proved="true">
    <transf name="apply" proved="true" arg1="bv_to_int_bound_gen">
     <goal name="place_get_ket&#39;vc.0.2.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.26" steps="782333"/></proof>
     </goal>
     <goal name="place_get_ket&#39;vc.0.2.1.1" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.88"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_get_ket_hpart_null&#39;vc" expl="VC for place_get_ket_hpart_null" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_get_ket_hpart_null&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pat_sem_apply_basis_value">
   <goal name="place_get_ket_hpart_null&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="mult_zero_t">
    <goal name="place_get_ket_hpart_null&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="sum_null_">
     <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="mult_zero_t">
        <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="case" proved="true" arg1="(forall i. 0&lt;=i &lt; k -&gt; getbv x i = getbv y i)">
         <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
         <transf name="assert" proved="true" arg1="( hpart x k = hpart y k)">
          <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
          <transf name="apply" proved="true" arg1="set_equal_bv">
           <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="2.67" steps="865423"/></proof>
           </goal>
           <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="hpart_value_b">
             <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="hpart_value_b">
              <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="h">
               <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.61" steps="863506"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.69" steps="863506"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.75" steps="863506"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.1" expl="true case (apply premises)" proved="true">
          <proof prover="9"><result status="valid" time="1.36" steps="800618"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="get_indic">
          <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0" expl="false case (apply premises)" proved="true">
          <transf name="eliminate_if" proved="true" >
           <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0" expl="false case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="int_to_bv_to_int_" arg2="in" arg3="H">
             <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0" expl="false case (apply premises)" proved="true">
             <transf name="assert" proved="true" arg1="(hpart y k = hpart x k)">
              <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
              <transf name="apply" proved="true" arg1="set_equal_bv">
               <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="3.18" steps="987939"/></proof>
               </goal>
               <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="hpart_value_b">
                 <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="hpart_value_b">
                  <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="replace" proved="true" arg1="y" arg2="( make_bv (fun (y3:int) -&gt; basis_ket (place c k n) (getbv x) (getbv e) y3)
  (width (place c k n)))">
                   <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                    <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="place&#39;spec9">
                       <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.62" steps="973279"/></proof>
                       </goal>
                       <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.67" steps="973281"/></proof>
                       </goal>
                       <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.70" steps="973281"/></proof>
                       </goal>
                       <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.57" steps="1155242"/></proof>
                       </goal>
                       <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.47" steps="1155230"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                        <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.64" steps="1155859"/></proof>
                        </goal>
                        <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.59" steps="1156015"/></proof>
                        </goal>
                        <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="1.62" steps="973315"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                        <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.53" steps="1155859"/></proof>
                        </goal>
                        <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.54" steps="1156015"/></proof>
                        </goal>
                        <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="1.73" steps="973315"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="0"><result status="valid" time="1.17"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="9"><result status="valid" time="1.28" steps="811075"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.24" steps="986333"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.95" steps="986333"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="false case (apply premises)" proved="true">
              <proof prover="9"><result status="valid" time="1.31" steps="811057"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="3.05" steps="983885"/></proof>
             </goal>
             <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="1.10"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.1" expl="false case (apply premises)" proved="true">
            <proof prover="9"><result status="valid" time="1.36" steps="811052"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_get_ket_hpart_null&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.82"/></proof>
   </goal>
   <goal name="place_get_ket_hpart_null&#39;vc.0.2" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="place_get_ket_hpart_null&#39;vc.0.2.0" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="2.31" steps="780812"/></proof>
    </goal>
    <goal name="place_get_ket_hpart_null&#39;vc.0.2.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.91"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_get_ket_tpart_null&#39;vc" expl="VC for place_get_ket_tpart_null" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_get_ket_tpart_null&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pat_sem_apply_basis_value">
   <goal name="place_get_ket_tpart_null&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="mult_zero_t">
    <goal name="place_get_ket_tpart_null&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="sum_null_">
     <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="mult_zero_t">
        <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="get_indic">
         <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="int_to_bv_to_int_" arg2="in" arg3="H">
            <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="assert" proved="true" arg1="(tpart x (k + width c) = tpart y (k + width c))">
             <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
             <transf name="apply" proved="true" arg1="set_equal_bv">
              <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="3.55" steps="988306"/></proof>
              </goal>
              <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="tpart_value_b">
                <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="tpart_value_b">
                 <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="y" arg2="( make_bv (fun (y3:int) -&gt; basis_ket (place c k n) (getbv x) (getbv e) y3)
  (width (place c k n)))">
                  <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                   <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="place&#39;spec8">
                      <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.65" steps="973525"/></proof>
                      </goal>
                      <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.70" steps="973527"/></proof>
                      </goal>
                      <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.62" steps="973527"/></proof>
                      </goal>
                      <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.58" steps="1152751"/></proof>
                      </goal>
                      <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.63" steps="973545"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                       <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.53" steps="1152379"/></proof>
                       </goal>
                       <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.48" steps="1152589"/></proof>
                       </goal>
                       <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.64" steps="973561"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                       <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.52" steps="1152379"/></proof>
                       </goal>
                       <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.53" steps="1152589"/></proof>
                       </goal>
                       <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.66" steps="973561"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.20"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="9"><result status="valid" time="1.34" steps="811321"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.02" steps="983157"/></proof>
                 </goal>
                 <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.06" steps="984553"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="3.06" steps="983157"/></proof>
                </goal>
                <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="2.66" steps="984477"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.10" steps="811295"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="3.02" steps="981148"/></proof>
            </goal>
            <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="0"><result status="valid" time="1.07"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.34" steps="811298"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_get_ket_tpart_null&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.89"/></proof>
   </goal>
   <goal name="place_get_ket_tpart_null&#39;vc.0.2" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="place_get_ket_tpart_null&#39;vc.0.2.0" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="2.30" steps="781260"/></proof>
    </goal>
    <goal name="place_get_ket_tpart_null&#39;vc.0.2.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.93"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_hadamard&#39;vc" expl="VC for place_hadamard" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_hadamard&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.94" steps="618384"/></proof>
  </goal>
  <goal name="place_hadamard&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="place_hadamard&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.63" steps="661149"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="place_hadamard&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="place_hadamard&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.12" steps="653274"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="place_hadamard&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.03" steps="640485"/></proof>
  </goal>
  <goal name="place_hadamard&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.10" steps="653289"/></proof>
  </goal>
  <goal name="place_hadamard&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.08" steps="653298"/></proof>
  </goal>
  <goal name="place_hadamard&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="place_hadamard&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures6">
    <goal name="place_hadamard&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="place_hadamard&#39;vc.6.0.0.0" expl="VC for place_hadamard" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_hadamard&#39;vc.6.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.78" steps="694399"/></proof>
      </goal>
      <goal name="place_hadamard&#39;vc.6.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.44" steps="693017"/></proof>
      </goal>
      <goal name="place_hadamard&#39;vc.6.0.0.0.2" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.71" steps="693340"/></proof>
      </goal>
      <goal name="place_hadamard&#39;vc.6.0.0.0.3" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.01" steps="651619"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_hadamard&#39;vc.6.0.1" expl="rewrite premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="place_hadamard&#39;vc.6.0.1.0" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.00" steps="640552"/></proof>
     </goal>
     <goal name="place_hadamard&#39;vc.6.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.01" steps="640554"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place_hadamard&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="place_hadamard&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures6">
    <goal name="place_hadamard&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="place_hadamard&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="place_hadamard&#39;vc.7.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="hadamard&#39;def">
       <goal name="place_hadamard&#39;vc.7.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place_hadamard&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="place_hadamard&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="place_hadamard&#39;vc.8.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="2.53" steps="10371361"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_hadamard_bv&#39;vc" expl="VC for place_hadamard_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_hadamard_bv&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.95" steps="619389"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.98" steps="641191"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.99" steps="641194"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.98" steps="641197"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.06" steps="641200"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.38" steps="797323"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.41" steps="797839"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="2.32" steps="112695"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="correct_path_sum_bv&#39;def">
   <goal name="place_hadamard_bv&#39;vc.8.0" expl="VC for place_hadamard_bv" proved="true">
   <transf name="apply" proved="true" arg1="set_correct_path_sum_by_main_sim">
    <goal name="place_hadamard_bv&#39;vc.8.0.0" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="place_hadamard_bv&#39;vc.8.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec2">
      <goal name="place_hadamard_bv&#39;vc.8.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.22" steps="762493"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.95" steps="807294"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.24" steps="762488"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="place_hadamard_bv&#39;vc.8.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="place_hadamard_bv&#39;vc.8.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="place_hadamard_bv&#39;vc.8.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.07" steps="762525"/></proof>
         </goal>
         <goal name="place_hadamard_bv&#39;vc.8.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="place_hadamard_bv&#39;vc.8.0.0.0.3.0.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.80" steps="931833"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_hadamard_bv&#39;vc.8.0.0.0.3.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.92" steps="807346"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_hadamard_bv&#39;vc.8.0.1" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="place_hadamard_bv&#39;vc.8.0.1.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec3">
      <goal name="place_hadamard_bv&#39;vc.8.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.24" steps="762484"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.67" steps="807294"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.05" steps="762488"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.0.1.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="place_hadamard_bv&#39;vc.8.0.1.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="place_hadamard_bv&#39;vc.8.0.1.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="place_hadamard_bv&#39;vc.8.0.1.0.3.0.0.0" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.20" steps="762525"/></proof>
         </goal>
         <goal name="place_hadamard_bv&#39;vc.8.0.1.0.3.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="place_hadamard_bv&#39;vc.8.0.1.0.3.0.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.68" steps="931833"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_hadamard_bv&#39;vc.8.0.1.0.3.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.99" steps="807346"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_hadamard_bv&#39;vc.8.0.2" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="place_hadamard_bv&#39;vc.8.0.2.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec">
       <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.68" steps="1051701"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.89" steps="933134"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.42" steps="886089"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.3.0.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.3.0.0.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.17" steps="886131"/></proof>
          </goal>
          <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.3.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.3.0.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.92" steps="1063498"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.3.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.04" steps="933186"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.43" steps="886092"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5" expl="rewrite premises" proved="true">
       <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec2" arg2="in" arg3="H">
        <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.20" steps="762518"/></proof>
        </goal>
        <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.02" steps="933134"/></proof>
        </goal>
        <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.2" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.18" steps="886089"/></proof>
        </goal>
        <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.3" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.3.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.3.0.0" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.3.0.0.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.47" steps="886131"/></proof>
           </goal>
           <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.3.0.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.3.0.0.1.0" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.88" steps="1063498"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.3.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.33" steps="933186"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_hadamard_bv&#39;vc.8.0.3" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="place_hadamard_bv&#39;vc.8.0.3.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec1">
       <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures2">
        <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
          <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
          </transf>
          </goal>
          <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.67" steps="1057598"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.92" steps="933209"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.94" steps="933209"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.95" steps="933182"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.18" steps="886114"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.3.0.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.3.0.0.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.41" steps="886156"/></proof>
          </goal>
          <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.3.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.3.0.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.76" steps="1063594"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.3.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.96" steps="933236"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.18" steps="886117"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5" expl="rewrite premises" proved="true">
       <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec2" arg2="in" arg3="H2">
        <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.22" steps="762543"/></proof>
        </goal>
        <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.00" steps="933182"/></proof>
        </goal>
        <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.2" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.43" steps="886114"/></proof>
        </goal>
        <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.3" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.3.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.3.0.0" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.3.0.0.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.39" steps="886156"/></proof>
           </goal>
           <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.3.0.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.3.0.0.1.0" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.77" steps="1063594"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.3.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.99" steps="933236"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.6" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.41" steps="886126"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_hadamard_bv&#39;vc.8.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.98" steps="641521"/></proof>
   </goal>
   <goal name="place_hadamard_bv&#39;vc.8.2" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="place_hadamard_bv&#39;vc.8.2.0" expl="rewrite premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="place_hadamard_bv&#39;vc.8.2.0.0" expl="rewrite premises" proved="true">
     <transf name="rewrite" proved="true" arg1="make_bv_length">
      <goal name="place_hadamard_bv&#39;vc.8.2.0.0.0" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.01" steps="641553"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.2.0.0.1" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="place_hadamard_bv&#39;vc.8.2.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.14" steps="808974"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.2.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.43" steps="682656"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_size&#39;vc" expl="VC for cont_size" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_size&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.95" steps="620748"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rz_&#39;vc" expl="VC for rz_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rz_&#39;vc.0" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_correct_path_sum_by_main_sim">
   <goal name="rz_&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.32" steps="758282"/></proof>
   </goal>
   <goal name="rz_&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.28" steps="758285"/></proof>
   </goal>
   <goal name="rz_&#39;vc.0.2" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rz_&#39;vc.0.2.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures">
     <goal name="rz_&#39;vc.0.2.0.0" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="rz_&#39;vc.0.2.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="pps_phase&#39;spec">
       <goal name="rz_&#39;vc.0.2.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.45" steps="882524"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="rz_&#39;vc.0.3" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.74" steps="793770"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="rz_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.03" steps="790713"/></proof>
  </goal>
  <goal name="rz_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.29" steps="758322"/></proof>
  </goal>
  <goal name="rz_&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.29" steps="758334"/></proof>
  </goal>
  <goal name="rz_&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.08" steps="758370"/></proof>
  </goal>
  <goal name="rz_&#39;vc.5" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures28">
   <goal name="rz_&#39;vc.5.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures24">
    <goal name="rz_&#39;vc.5.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures18">
     <goal name="rz_&#39;vc.5.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures19">
      <goal name="rz_&#39;vc.5.0.0.0.0" expl="precondition" proved="true">
      <transf name="case" proved="true" arg1="(x 0 = 0)">
       <goal name="rz_&#39;vc.5.0.0.0.0.0" expl="true case (precondition)" proved="true">
       <transf name="replace" proved="true" arg1="((x @ 0) - 1)" arg2="(-1)">
        <goal name="rz_&#39;vc.5.0.0.0.0.0.0" expl="true case (precondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
         <goal name="rz_&#39;vc.5.0.0.0.0.0.0.0" expl="true case (precondition)" proved="true">
         <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
          <goal name="rz_&#39;vc.5.0.0.0.0.0.0.0.0" expl="true case (precondition)" proved="true">
          <proof prover="9"><result status="valid" time="2.47" steps="916002"/></proof>
          </goal>
          <goal name="rz_&#39;vc.5.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.19" steps="745924"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="rz_&#39;vc.5.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="h">
          <goal name="rz_&#39;vc.5.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="Zero_n">
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="rz_&#39;vc.5.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="1.16" steps="745924"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="rz_&#39;vc.5.0.0.0.0.1" expl="false case (precondition)" proved="true">
       <transf name="replace" proved="true" arg1="((x @ 0) - 1)" arg2="0">
        <goal name="rz_&#39;vc.5.0.0.0.0.1.0" expl="false case (precondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="Even_phase_inv">
         <goal name="rz_&#39;vc.5.0.0.0.0.1.0.0" expl="false case (precondition)" proved="true">
         <transf name="replace" proved="true" arg1="(1 /./ (- incr_abs k))" arg2="(-1 /./ ( incr_abs k))">
          <goal name="rz_&#39;vc.5.0.0.0.0.1.0.0.0" expl="false case (precondition)" proved="true">
          <transf name="replace" proved="true" arg1="(x 0 /./ k)" arg2="(ang_add (1 /./ incr_abs k) (1 /./ incr_abs k))">
           <goal name="rz_&#39;vc.5.0.0.0.0.1.0.0.0.0" expl="false case (precondition)" proved="true">
           <proof prover="0"><result status="valid" time="1.15"/></proof>
           </goal>
           <goal name="rz_&#39;vc.5.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="2.86" steps="918088"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="rz_&#39;vc.5.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="9"><result status="valid" time="2.73" steps="915429"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="rz_&#39;vc.5.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.16" steps="745924"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="rz_&#39;vc.5.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="2.80" steps="914769"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rz_&#39;vc.6" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures25">
   <goal name="rz_&#39;vc.6.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures19">
    <goal name="rz_&#39;vc.6.0.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="2.03" steps="794219"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rz_&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.09" steps="793589"/></proof>
  </goal>
  <goal name="rz_&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.20" steps="745714"/></proof>
  </goal>
  <goal name="rz_&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.42" steps="915213"/></proof>
  </goal>
  <goal name="rz_&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.35" steps="758509"/></proof>
  </goal>
  <goal name="rz_&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.46" steps="916849"/></proof>
  </goal>
  <goal name="rz_&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.10" steps="758534"/></proof>
  </goal>
  <goal name="rz_&#39;vc.13" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="( path_sem result (qbit_zero ()))" arg2="(pps_apply (pps_rz_b k) (qbit_zero()))">
   <goal name="rz_&#39;vc.13.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
    <goal name="rz_&#39;vc.13.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="rz_&#39;vc.13.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
      <goal name="rz_&#39;vc.13.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
       <goal name="rz_&#39;vc.13.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
        <goal name="rz_&#39;vc.13.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="apply" proved="true" arg1="scalar_eq_gen">
          <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="bv_to_zero">
           <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="pps_rz_b&#39;spec1">
             <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="3.05" steps="1050666"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.16" steps="745656"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="set_equal_angle_exp">
           <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="pps_rz_b&#39;spec">
             <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
              <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="2.72" steps="1048979"/></proof>
              </goal>
              <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.75" steps="1051675"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="rz_&#39;vc.13.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.27" steps="758601"/></proof>
        </goal>
        <goal name="rz_&#39;vc.13.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.19" steps="745656"/></proof>
        </goal>
        <goal name="rz_&#39;vc.13.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="rz_&#39;vc.13.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="scalar_ket_l">
          <goal name="rz_&#39;vc.13.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
           <goal name="rz_&#39;vc.13.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="make_bv_length">
            <goal name="rz_&#39;vc.13.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="2.34" steps="883393"/></proof>
            </goal>
            <goal name="rz_&#39;vc.13.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="1.28" steps="758601"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="rz_&#39;vc.13.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.64" steps="881213"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="rz_&#39;vc.13.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.66" steps="883168"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="rz_&#39;vc.13.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.63" steps="792826"/></proof>
    </goal>
    <goal name="rz_&#39;vc.13.0.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.18" steps="745765"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="rz_&#39;vc.13.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="1.99" steps="793636"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="rz_&#39;vc.14" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="rz_&#39;vc.14.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="rz_&#39;vc.14.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="( path_sem result (qbit_one ()))" arg2="(pps_apply (pps_rz_b k) (qbit_one()))">
     <goal name="rz_&#39;vc.14.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
      <goal name="rz_&#39;vc.14.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
       <goal name="rz_&#39;vc.14.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
        <goal name="rz_&#39;vc.14.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
         <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="apply" proved="true" arg1="scalar_eq_gen">
           <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="bv_to_one">
            <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="pps_rz_b&#39;spec1">
             <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="2.67" steps="1026876"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="1.17" steps="882473"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="set_equal_angle_exp">
            <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="pps_rz_b&#39;spec">
             <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="Even_phase_inv">
              <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="1.23" steps="882471"/></proof>
              </goal>
              <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.86" steps="1036496"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="rz_&#39;vc.14.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.53" steps="896229"/></proof>
         </goal>
         <goal name="rz_&#39;vc.14.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.35" steps="882473"/></proof>
         </goal>
         <goal name="rz_&#39;vc.14.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="rz_&#39;vc.14.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="scalar_ket_l">
           <goal name="rz_&#39;vc.14.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
            <goal name="rz_&#39;vc.14.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="make_bv_length">
             <goal name="rz_&#39;vc.14.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="rz_&#39;vc.14.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="2.68" steps="1026660"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="rz_&#39;vc.14.0.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.57" steps="896229"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="rz_&#39;vc.14.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="3.12" steps="1024530"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="rz_&#39;vc.14.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.72" steps="1026285"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="rz_&#39;vc.14.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.46" steps="931311"/></proof>
      </goal>
      <goal name="rz_&#39;vc.14.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.16" steps="931301"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="rz_&#39;vc.14.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="1"><result status="valid" time="1.66" steps="7670853"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rz_&#39;vc.15" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="rz_&#39;vc.15.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures8">
    <goal name="rz_&#39;vc.15.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sequence_basis_ket">
     <goal name="rz_&#39;vc.15.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="rz_&#39;vc.15.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="rz_&#39;vc.15.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="rz&#39;spec1">
        <goal name="rz_&#39;vc.15.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="rz_&#39;vc.15.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="2.43" steps="957750"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="rz_&#39;vc.15.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.10" steps="758693"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rz_&#39;vc.16" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures9">
   <goal name="rz_&#39;vc.16.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="sequence_angle">
    <goal name="rz_&#39;vc.16.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="rz_&#39;vc.16.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="phase&#39;spec">
      <goal name="rz_&#39;vc.16.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="rz&#39;spec">
       <goal name="rz_&#39;vc.16.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="rz_&#39;vc.16.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="phase&#39;spec1">
         <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="replace" proved="true" arg1="(1 /./ (- incr_abs k))" arg2="(-1 /./ ( incr_abs k))">
          <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="case" proved="true" arg1="(x 0 = 0)">
           <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
            <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
            <proof prover="9"><result status="valid" time="2.82" steps="1054401"/></proof>
            </goal>
            <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.60" steps="896337"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1" expl="false case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="Even_phase_inv">
            <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1.0" expl="false case (postcondition)" proved="true">
            <transf name="replace" proved="true" arg1="(x 0)" arg2="1">
             <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1.0.0" expl="false case (postcondition)" proved="true">
             <transf name="replace" proved="true" arg1="(1 /./ k)" arg2="( (1 /./ (incr_abs k)) +.+ (1 /./ (incr_abs k)))">
              <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
              <transf name="rewrite" proved="true" arg1="ang_add_assoc">
               <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="false case (postcondition)" proved="true">
               <transf name="rewrite" proved="true" arg1="ang_zero_add">
                <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
                <proof prover="9"><result status="valid" time="1.18" steps="882834"/></proof>
                </goal>
                <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="2.77" steps="1052267"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="2.43" steps="931537"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="1.97" steps="930857"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.09" steps="931622"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="9"><result status="valid" time="2.65" steps="1052516"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="rz_&#39;vc.16.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.06" steps="758700"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rx&#39;vc" expl="VC for rx" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rx&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.61" steps="789485"/></proof>
  </goal>
  <goal name="rx&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.62" steps="790505"/></proof>
  </goal>
  <goal name="rx&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.97" steps="746823"/></proof>
  </goal>
  <goal name="rx&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.74" steps="794835"/></proof>
  </goal>
  <goal name="rx&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.08" steps="759795"/></proof>
  </goal>
  <goal name="rx&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.28" steps="759814"/></proof>
  </goal>
  <goal name="rx&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.96" steps="746859"/></proof>
  </goal>
  <goal name="rx&#39;vc.7" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures22">
  </transf>
  </goal>
  <goal name="rx&#39;vc.8" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures23">
  </transf>
  </goal>
  <goal name="rx&#39;vc.9" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.81" steps="795051"/></proof>
  </goal>
  <goal name="rx&#39;vc.10" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_correct_path_sum">
   <goal name="rx&#39;vc.10.0" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.31" steps="759988"/></proof>
   </goal>
   <goal name="rx&#39;vc.10.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rx&#39;vc.10.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="mat_sem_to_path">
     <goal name="rx&#39;vc.10.1.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.76" steps="795156"/></proof>
     </goal>
     <goal name="rx&#39;vc.10.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.25" steps="746950"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rx&#39;vc.11" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.34" steps="759991"/></proof>
  </goal>
  <goal name="rx&#39;vc.12" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.36" steps="760001"/></proof>
  </goal>
  <goal name="rx&#39;vc.13" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.82" steps="794868"/></proof>
  </goal>
  <goal name="rx&#39;vc.14" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures27">
   <goal name="rx&#39;vc.14.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="rx&#39;vc.14.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_rx&#39;spec">
     <goal name="rx&#39;vc.14.0.0.0" expl="precondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="rx&#39;vc.14.0.0.0.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_add_assoc_rev">
       <goal name="rx&#39;vc.14.0.0.0.0.0" expl="precondition" proved="true">
       <transf name="apply" proved="true" arg1="ang_add_eq">
        <goal name="rx&#39;vc.14.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="2.71" steps="1056884"/></proof>
        </goal>
        <goal name="rx&#39;vc.14.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ang_add_comm">
         <goal name="rx&#39;vc.14.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="ang_add_eq">
          <goal name="rx&#39;vc.14.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="pps_rz_b&#39;spec">
           <goal name="rx&#39;vc.14.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="pps_hadamard&#39;def1">
            <goal name="rx&#39;vc.14.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="rx&#39;vc.14.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="pps_hadamard&#39;def">
           <goal name="rx&#39;vc.14.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures24">
            <goal name="rx&#39;vc.14.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="pps_hadamard&#39;def1">
             <goal name="rx&#39;vc.14.0.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="rx&#39;vc.14.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="1.98" steps="932817"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rx&#39;vc.15" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures28">
   <goal name="rx&#39;vc.15.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="rx&#39;vc.15.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_rx&#39;spec1">
     <goal name="rx&#39;vc.15.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_hadamard&#39;def1">
      <goal name="rx&#39;vc.15.0.0.0.0" expl="precondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="rx&#39;vc.15.0.0.0.0.0" expl="precondition" proved="true">
       <proof prover="0"><result status="valid" time="1.16"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rx&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.65" steps="794964"/></proof>
  </goal>
  <goal name="rx&#39;vc.17" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="rx&#39;vc.17.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="rx&#39;vc.17.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sequence&#39;spec1">
     <goal name="rx&#39;vc.17.0.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="2.29" steps="936627"/></proof>
     </goal>
     <goal name="rx&#39;vc.17.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.92" steps="932331"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rx&#39;vc.18" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures1">
   <goal name="rx&#39;vc.18.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="rx&#39;vc.18.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.91" steps="932346"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rx&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.13" steps="760254"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="zz&#39;vc" expl="VC for zz" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="zz&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_correct_path_sum_basis">
   <goal name="zz&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="0.94" steps="655664"/></proof>
   </goal>
   <goal name="zz&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="zz&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="mat_sem_to_path">
     <goal name="zz&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
      <goal name="zz&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_value_for_basis">
       <goal name="zz&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
        <goal name="zz&#39;vc.0.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="zz&#39;vc.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="scalar_eq_gen">
          <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
           <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.10" steps="655693"/></proof>
           </goal>
           <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.13" steps="655697"/></proof>
           </goal>
           <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.11" steps="655689"/></proof>
           </goal>
           <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="scalar_eq_gen">
              <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="bv_to_ket_eq">
               <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="make_bv_length">
                <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="make_bv_length">
                 <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.23" steps="733858"/></proof>
                 </goal>
                 <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                   <transf name="split_all_full" proved="true" >
                    <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.20" steps="1023831"/></proof>
                     </goal>
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.45" steps="870458"/></proof>
                     </goal>
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.36" steps="856129"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                   <transf name="split_all_full" proved="true" >
                    <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.18" steps="1023831"/></proof>
                     </goal>
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.56" steps="870458"/></proof>
                     </goal>
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.42" steps="856129"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.22" steps="733852"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1" expl="rewrite premises" proved="true">
                <transf name="split_all_full" proved="true" >
                 <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.13" steps="1023827"/></proof>
                   </goal>
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.55" steps="870458"/></proof>
                   </goal>
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.38" steps="856129"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.17" steps="1023827"/></proof>
                   </goal>
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.50" steps="870458"/></proof>
                   </goal>
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.39" steps="856129"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="1.25" steps="733847"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                 <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                  <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.00" steps="946941"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                       <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.20" steps="1023876"/></proof>
                       </goal>
                       <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.54" steps="870494"/></proof>
                       </goal>
                       <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.34" steps="856154"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                       <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.12" steps="1023876"/></proof>
                       </goal>
                       <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.47" steps="870494"/></proof>
                       </goal>
                       <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.39" steps="856154"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.93" steps="763616"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                      <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.16" steps="1023862"/></proof>
                      </goal>
                      <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.49" steps="870494"/></proof>
                      </goal>
                      <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.44" steps="856154"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                      <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.21" steps="1023862"/></proof>
                      </goal>
                      <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.49" steps="870494"/></proof>
                      </goal>
                      <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.44" steps="856154"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.19" steps="720382"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.09" steps="958372"/></proof>
                 </goal>
                 <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.37" steps="790641"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="2.66" steps="933005"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="1.05" steps="655697"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="zz&#39;vc.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.44" steps="806274"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="zz&#39;vc.0.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.98" steps="642942"/></proof>
       </goal>
       <goal name="zz&#39;vc.0.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.98" steps="642942"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="zz&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.64" steps="683814"/></proof>
      </goal>
      <goal name="zz&#39;vc.0.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.96" steps="642942"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="zz&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.97" steps="642942"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="zz&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.98" steps="642933"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_zz_zero&#39;vc" expl="VC for path_sem_zz_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_zz_zero&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.00" steps="622012"/></proof>
  </goal>
  <goal name="path_sem_zz_zero&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.61" steps="662606"/></proof>
  </goal>
  <goal name="path_sem_zz_zero&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.98" steps="622026"/></proof>
  </goal>
  <goal name="path_sem_zz_zero&#39;vc.3" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Requires">
   <goal name="path_sem_zz_zero&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="path_sem_zz_zero&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis_">
     <goal name="path_sem_zz_zero&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
      <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
       <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
         <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="replace" proved="true" arg1="(qbit_zero())" arg2="(bv_to_ket (make_bv (fun _ -&gt; 0) 1))">
          <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="apply" proved="true" arg1="bv_to_ket_eq">
           <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length">
            <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="make_bv_length">
             <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.00" steps="622037"/></proof>
             </goal>
             <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.80" steps="696667"/></proof>
             </goal>
             <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.97" steps="622044"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.73" steps="931293"/></proof>
                </goal>
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.33" steps="779582"/></proof>
                </goal>
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.18" steps="742918"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.39" steps="931293"/></proof>
                </goal>
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.10" steps="779582"/></proof>
                </goal>
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.19" steps="742918"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.06" steps="634783"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
             <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="pps_zz&#39;def1">
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.58" steps="1004819"/></proof>
                 </goal>
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.46" steps="843293"/></proof>
                 </goal>
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.06" steps="829668"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.57" steps="1004819"/></proof>
                 </goal>
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.46" steps="843293"/></proof>
                 </goal>
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.09" steps="829668"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
             <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="0.93" steps="622071"/></proof>
              </goal>
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                  <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.53" steps="1004819"/></proof>
                  </goal>
                  <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.45" steps="843293"/></proof>
                  </goal>
                  <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0.0.2" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.31" steps="829668"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                  <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.51" steps="1004819"/></proof>
                  </goal>
                  <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1.0.1" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.19" steps="843293"/></proof>
                  </goal>
                  <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1.0.2" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.08" steps="829668"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="0.96" steps="711808"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="eliminate_definition" proved="true" >
           <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="qbit_zero&#39;def">
            <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="bv_to_ket&#39;def">
             <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
             <transf name="apply" proved="true" arg1="ket_eq">
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="0.92" steps="623050"/></proof>
              </goal>
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="make_bv_length">
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="0.94" steps="623041"/></proof>
               </goal>
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="1.69" steps="692990"/></proof>
               </goal>
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.1.2" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="0.93" steps="623050"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="ind_isum_one">
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                  <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                  </transf>
                  </goal>
                  <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.77" steps="692990"/></proof>
                  </goal>
                  <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="0.96" steps="623066"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0.1" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="make_bv_length">
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0.1.0" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="0.96" steps="623057"/></proof>
                 </goal>
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0.1.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.41" steps="692990"/></proof>
                 </goal>
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0.1.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="0.94" steps="623050"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="pps_zz&#39;def">
           <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.54" steps="928206"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.03" steps="634783"/></proof>
       </goal>
       <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.93" steps="622037"/></proof>
       </goal>
       <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="scalar_ket_l">
         <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
          <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="0.95" steps="622035"/></proof>
           </goal>
           <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.70" steps="861099"/></proof>
           </goal>
           <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.02" steps="634783"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.14" steps="779154"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_zz_zero&#39;vc.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.58" steps="662628"/></proof>
     </goal>
     <goal name="path_sem_zz_zero&#39;vc.3.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.94" steps="622037"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_zz_one&#39;vc" expl="VC for path_sem_zz_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_zz_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.97" steps="622087"/></proof>
  </goal>
  <goal name="path_sem_zz_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.64" steps="662657"/></proof>
  </goal>
  <goal name="path_sem_zz_one&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.00" steps="622101"/></proof>
  </goal>
  <goal name="path_sem_zz_one&#39;vc.3" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Requires">
   <goal name="path_sem_zz_one&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="path_sem_zz_one&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis_">
     <goal name="path_sem_zz_one&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
      <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
       <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="scalar_eq_gen">
         <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(qbit_one())" arg2="(bv_to_ket (make_bv (fun _ -&gt; 1) 1))
">
          <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="bv_to_ket_eq">
           <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length">
            <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="make_bv_length">
             <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="0.94" steps="622112"/></proof>
             </goal>
             <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.77" steps="696725"/></proof>
             </goal>
             <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.98" steps="622119"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.31" steps="931588"/></proof>
                </goal>
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.09" steps="779657"/></proof>
                </goal>
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.17" steps="742995"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.34" steps="931588"/></proof>
                </goal>
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.36" steps="779657"/></proof>
                </goal>
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="0.97" steps="742995"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="0.84" steps="634848"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
             <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="pps_zz&#39;def1">
               <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.52" steps="1005112"/></proof>
                 </goal>
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.18" steps="843368"/></proof>
                 </goal>
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.10" steps="829743"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.59" steps="1005112"/></proof>
                 </goal>
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.21" steps="843368"/></proof>
                 </goal>
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.11" steps="829743"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
             <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
              <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="0.93" steps="622146"/></proof>
              </goal>
              <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.57" steps="1005112"/></proof>
                  </goal>
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.46" steps="843368"/></proof>
                  </goal>
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0.0.2" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.09" steps="829743"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.58" steps="1005112"/></proof>
                  </goal>
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1.0.1" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.23" steps="843368"/></proof>
                  </goal>
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1.0.2" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.33" steps="829743"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.15" steps="711883"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
           <transf name="eliminate_definition" proved="true" >
            <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="qbit_one&#39;def">
             <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
             <transf name="rewrite" proved="true" arg1="bv_to_ket&#39;def">
              <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
              <transf name="apply" proved="true" arg1="ket_eq">
               <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.18" steps="743829"/></proof>
               </goal>
               <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="make_bv_length">
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.12" steps="743820"/></proof>
                </goal>
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="1.72" steps="816605"/></proof>
                </goal>
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="1.13" steps="743816"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="ind_isum_one">
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                   <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="make_bv_length">
                     <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.69" steps="788917"/></proof>
                     </goal>
                     <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.77" steps="816605"/></proof>
                     </goal>
                     <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="0.94" steps="743816"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.79" steps="816605"/></proof>
                   </goal>
                   <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="0.98" steps="743845"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="make_bv_length">
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.1.0" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="0.99" steps="743836"/></proof>
                  </goal>
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.1.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.79" steps="816605"/></proof>
                  </goal>
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.1.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="0.97" steps="743816"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="pps_zz&#39;def">
           <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="2.48" steps="928359"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.87" steps="634848"/></proof>
       </goal>
       <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.98" steps="622112"/></proof>
       </goal>
       <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="scalar_ket_l">
         <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
          <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="0.95" steps="622110"/></proof>
           </goal>
           <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.35" steps="861389"/></proof>
           </goal>
           <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.03" steps="634848"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_zz_one&#39;vc.3.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.25" steps="779348"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_zz_one&#39;vc.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.31" steps="662679"/></proof>
     </goal>
     <goal name="path_sem_zz_one&#39;vc.3.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.98" steps="622112"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_zz_plus&#39;vc" expl="VC for path_sem_zz_plus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_zz_plus&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.00" steps="621801"/></proof>
  </goal>
  <goal name="path_sem_zz_plus&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.31" steps="662584"/></proof>
  </goal>
  <goal name="path_sem_zz_plus&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.32" steps="662596"/></proof>
  </goal>
  <goal name="path_sem_zz_plus&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.95" steps="621914"/></proof>
  </goal>
  <goal name="path_sem_zz_plus&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.96" steps="621928"/></proof>
  </goal>
  <goal name="path_sem_zz_plus&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.37" steps="663010"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_zz_minus&#39;vc" expl="VC for path_sem_zz_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_zz_minus&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.77" steps="621876"/></proof>
  </goal>
  <goal name="path_sem_zz_minus&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.29" steps="662669"/></proof>
  </goal>
  <goal name="path_sem_zz_minus&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.36" steps="663345"/></proof>
  </goal>
  <goal name="path_sem_zz_minus&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.79" steps="621989"/></proof>
  </goal>
  <goal name="path_sem_zz_minus&#39;vc.4" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_scal">
   <goal name="path_sem_zz_minus&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="3.39" steps="815447"/></proof>
   </goal>
   <goal name="path_sem_zz_minus&#39;vc.4.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="1.27" steps="662718"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_zz_minus&#39;vc.5" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="x" arg2="(pow_inv_sqrt_2 1
   *.. add_ket_l (qbit_zero ()) ((-. c_one) *.. qbit_one ()) (width zz))">
   <goal name="path_sem_zz_minus&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="path_sem_zz_minus&#39;vc.5.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.29" steps="662757"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_zz_minus&#39;vc.5.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="1.54" steps="662760"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="xx&#39;vc" expl="VC for xx" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="xx&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.32" steps="662905"/></proof>
  </goal>
  <goal name="xx&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.92" steps="622357"/></proof>
  </goal>
  <goal name="xx&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.94" steps="622371"/></proof>
  </goal>
  <goal name="xx&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.02" steps="635130"/></proof>
  </goal>
  <goal name="xx&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.04" steps="635187"/></proof>
  </goal>
  <goal name="xx&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.36" steps="674883"/></proof>
  </goal>
  <goal name="xx&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.93" steps="622509"/></proof>
  </goal>
  <goal name="xx&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.77" steps="622522"/></proof>
  </goal>
  <goal name="xx&#39;vc.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.47" steps="663787"/></proof>
  </goal>
  <goal name="xx&#39;vc.9" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.35" steps="663206"/></proof>
  </goal>
  <goal name="xx&#39;vc.10" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.83" steps="622600"/></proof>
  </goal>
  <goal name="xx&#39;vc.11" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.85" steps="622614"/></proof>
  </goal>
  <goal name="xx&#39;vc.12" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.91" steps="635378"/></proof>
  </goal>
  <goal name="xx&#39;vc.13" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.90" steps="635428"/></proof>
  </goal>
  <goal name="xx&#39;vc.14" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.65" steps="675211"/></proof>
  </goal>
  <goal name="xx&#39;vc.15" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.97" steps="622687"/></proof>
  </goal>
  <goal name="xx&#39;vc.16" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.00" steps="622700"/></proof>
  </goal>
  <goal name="xx&#39;vc.17" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.66" steps="664039"/></proof>
  </goal>
  <goal name="xx&#39;vc.18" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.03" steps="635455"/></proof>
  </goal>
  <goal name="xx&#39;vc.19" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.70" steps="664044"/></proof>
  </goal>
  <goal name="xx&#39;vc.20" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_correct_pps_">
   <goal name="xx&#39;vc.20.0" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="2.37" steps="782536"/></proof>
   </goal>
   <goal name="xx&#39;vc.20.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="xx&#39;vc.20.1.0" expl="apply premises" proved="true">
    <transf name="case" proved="true" arg1="(x = qbit_zero())">
     <goal name="xx&#39;vc.20.1.0.0" expl="true case (apply premises)" proved="true">
     <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis_">
      <goal name="xx&#39;vc.20.1.0.0.0" expl="true case (apply premises)" proved="true">
      <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
       <goal name="xx&#39;vc.20.1.0.0.0.0" expl="true case (apply premises)" proved="true">
       <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
        <goal name="xx&#39;vc.20.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="xx&#39;vc.20.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
          <goal name="xx&#39;vc.20.1.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="h">
           <goal name="xx&#39;vc.20.1.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="bv_to_one">
            <goal name="xx&#39;vc.20.1.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
            <proof prover="9"><result status="valid" time="0.78" steps="622800"/></proof>
            </goal>
            <goal name="xx&#39;vc.20.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.13" steps="866992"/></proof>
            </goal>
            <goal name="xx&#39;vc.20.1.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="xx&#39;vc.20.1.0.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.94" steps="743648"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="xx&#39;vc.20.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.05" steps="749417"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="xx&#39;vc.20.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.10" steps="635562"/></proof>
        </goal>
        <goal name="xx&#39;vc.20.1.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.03" steps="622793"/></proof>
        </goal>
        <goal name="xx&#39;vc.20.1.0.0.0.0.3" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="xx&#39;vc.20.1.0.0.0.0.3.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="scalar_ket_l">
          <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
           <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length">
            <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="0.95" steps="622791"/></proof>
            </goal>
            <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="pps&#39;invariant3">
               <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.76" steps="932498"/></proof>
               </goal>
               <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.33" steps="780371"/></proof>
               </goal>
               <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.0.0.2" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.23" steps="743682"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="pps&#39;invariant2">
               <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.1.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.74" steps="932498"/></proof>
               </goal>
               <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.1.0.1" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.29" steps="780371"/></proof>
               </goal>
               <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.1.0.2" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.14" steps="743682"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.09" steps="635562"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="xx&#39;vc.20.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.14" steps="785283"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="xx&#39;vc.20.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.58" steps="663490"/></proof>
      </goal>
      <goal name="xx&#39;vc.20.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.97" steps="622793"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="xx&#39;vc.20.1.0.1" expl="false case (apply premises)" proved="true">
     <transf name="replace" proved="true" arg1="x" arg2="( qbit_one())">
      <goal name="xx&#39;vc.20.1.0.1.0" expl="false case (apply premises)" proved="true">
      <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis_">
       <goal name="xx&#39;vc.20.1.0.1.0.0" expl="false case (apply premises)" proved="true">
       <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
        <goal name="xx&#39;vc.20.1.0.1.0.0.0" expl="false case (apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
         <goal name="xx&#39;vc.20.1.0.1.0.0.0.0" expl="false case (apply premises)" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="xx&#39;vc.20.1.0.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
           <goal name="xx&#39;vc.20.1.0.1.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="bv_to_zero">
            <goal name="xx&#39;vc.20.1.0.1.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
            <proof prover="9"><result status="valid" time="0.71" steps="622804"/></proof>
            </goal>
            <goal name="xx&#39;vc.20.1.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.94" steps="868113"/></proof>
            </goal>
            <goal name="xx&#39;vc.20.1.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="0.73" steps="622797"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="xx&#39;vc.20.1.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.03" steps="749487"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="xx&#39;vc.20.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.95" steps="635566"/></proof>
         </goal>
         <goal name="xx&#39;vc.20.1.0.1.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.99" steps="622797"/></proof>
         </goal>
         <goal name="xx&#39;vc.20.1.0.1.0.0.0.3" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="scalar_ket_l">
           <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
            <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="make_bv_length">
             <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="0.91" steps="622795"/></proof>
             </goal>
             <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.75" steps="933487"/></proof>
                </goal>
                <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.31" steps="780375"/></proof>
                </goal>
                <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.18" steps="743686"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.72" steps="933487"/></proof>
                </goal>
                <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.32" steps="780375"/></proof>
                </goal>
                <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.1.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.13" steps="743686"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.06" steps="635566"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="xx&#39;vc.20.1.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.38" steps="786492"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="xx&#39;vc.20.1.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.57" steps="663489"/></proof>
       </goal>
       <goal name="xx&#39;vc.20.1.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.93" steps="622797"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="xx&#39;vc.20.1.0.1.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
       <goal name="xx&#39;vc.20.1.0.1.1.0" expl="equality hypothesis" proved="true">
       <transf name="case" proved="true" arg1="(getbv (ket_to_bv x) 0 = 0)">
        <goal name="xx&#39;vc.20.1.0.1.1.0.0" expl="true case (equality hypothesis)" proved="true">
        <proof prover="9"><result status="valid" time="2.46" steps="788629"/></proof>
        </goal>
        <goal name="xx&#39;vc.20.1.0.1.1.0.1" expl="false case (equality hypothesis)" proved="true">
        <proof prover="9"><result status="valid" time="2.17" steps="789663"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="xx&#39;vc.20.1.0.1.1.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="1.68" steps="664137"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="xx&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.70" steps="664146"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_xx&#39;vc" expl="VC for path_sem_xx" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_xx&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.58" steps="664061"/></proof>
  </goal>
  <goal name="path_sem_xx&#39;vc.1" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="path_sem_xx&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="path_sem_xx&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(path_sem xx x)" arg2="(pps_apply pps_xx x)">
     <goal name="path_sem_xx&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="get_pps_apply">
      <goal name="path_sem_xx&#39;vc.1.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(h_width pps_xx)" arg2="1">
       <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_one">
        <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="replace" proved="true" arg1="(add_ket_l (get_ket x 1 *.. qbit_zero ()) (get_ket x 0 *.. qbit_one ()) 1)" arg2="(add_ket_l  (get_ket x 0 *.. qbit_one ()) (get_ket x 1 *.. qbit_zero ()) 1)">
          <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="apply" proved="true" arg1="add_ket_l_eq_scal">
           <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="0.93" steps="621641"/></proof>
           </goal>
           <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
            <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
             <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
              <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
                <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="bv_to_one">
                 <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.37" steps="837494"/></proof>
                 </goal>
                 <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="0.95" steps="621634"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="1.78" steps="742495"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.04" steps="634548"/></proof>
              </goal>
              <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="0.93" steps="621634"/></proof>
              </goal>
              <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.3" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.3.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="scalar_ket_l">
                <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.3.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                 <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.3.0.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="make_bv_length">
                  <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.50" steps="837726"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.3.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.06" steps="634548"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.49" steps="758109"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.20" steps="759939"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
            <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
             <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
              <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
                <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="bv_to_zero">
                 <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.55" steps="837536"/></proof>
                 </goal>
                 <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="0.95" steps="621634"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="1.89" steps="742517"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.03" steps="634548"/></proof>
              </goal>
              <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="0.91" steps="621634"/></proof>
              </goal>
              <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.3" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.3.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="scalar_ket_l">
                <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.3.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                 <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.3.0.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="make_bv_length">
                  <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.20" steps="837740"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.3.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.03" steps="634548"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.91" steps="758109"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.18" steps="759948"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="2.17" steps="758734"/></proof>
           </goal>
           <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.4" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="2.20" steps="758722"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="9"><result status="valid" time="1.89" steps="757799"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="0.95" steps="621641"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_xx&#39;vc.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="0.91" steps="621634"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_xx&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.59" steps="665005"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_xx&#39;vc.1.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="1.76" steps="665771"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_xx_add_rev&#39;vc" expl="VC for path_sem_xx_add_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_xx_add_rev&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_xx&#39;spec">
   <goal name="path_sem_xx_add_rev&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="add_ket_l_eq">
    <goal name="path_sem_xx_add_rev&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="0.96" steps="622143"/></proof>
    </goal>
    <goal name="path_sem_xx_add_rev&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="scalar_eq_gen">
     <goal name="path_sem_xx_add_rev&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="0.95" steps="622134"/></proof>
     </goal>
     <goal name="path_sem_xx_add_rev&#39;vc.0.0.1.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.69" steps="664559"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_xx_add_rev&#39;vc.0.0.2" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="scalar_eq_gen">
     <goal name="path_sem_xx_add_rev&#39;vc.0.0.2.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="0.94" steps="622134"/></proof>
     </goal>
     <goal name="path_sem_xx_add_rev&#39;vc.0.0.2.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.62" steps="664559"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_xx_add_rev&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="2.28" steps="784437"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_xx_z&#39;vc" expl="VC for path_sem_xx_z" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_xx_z&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(qbit_zero ())" arg2="(add_ket_l (c_one *..  (qbit_zero ()) ) (c_zero *.. qbit_one()) 1)">
   <goal name="path_sem_xx_z&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_xx&#39;spec">
    <goal name="path_sem_xx_z&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="3.88" steps="826381"/></proof>
    </goal>
    <goal name="path_sem_xx_z&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="2.41" steps="785417"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_xx_z&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="3.83" steps="819266"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_xx_o&#39;vc" expl="VC for path_sem_xx_o" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_xx_o&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(qbit_zero ())" arg2="(add_ket_l (c_one *..  (qbit_zero ()) ) (c_zero *.. qbit_one()) 1)">
   <goal name="path_sem_xx_o&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_xx&#39;spec">
    <goal name="path_sem_xx_o&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.62" steps="664365"/></proof>
    </goal>
    <goal name="path_sem_xx_o&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.96" steps="622226"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_xx_o&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="3.80" steps="819114"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_xx_invol&#39;vc" expl="VC for path_sem_xx_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_xx_invol&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.97" steps="622260"/></proof>
  </goal>
  <goal name="path_sem_xx_invol&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.65" steps="665001"/></proof>
  </goal>
  <goal name="path_sem_xx_invol&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.69" steps="665006"/></proof>
  </goal>
  <goal name="path_sem_xx_invol&#39;vc.3" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="path_sem_xx_invol&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_xx&#39;def">
    <goal name="path_sem_xx_invol&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_xx&#39;def">
     <goal name="path_sem_xx_invol&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_sum_">
      <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_sum_">
       <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq">
        <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.08" steps="681049"/></proof>
        </goal>
        <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="0.86" steps="681040"/></proof>
        </goal>
        <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_scal">
           <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="path_sem_scal">
            <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="scalar_eq_gen">
             <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="case" proved="true" arg1="(bv_to_ket a = qbit_zero())">
              <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
              <proof prover="9"><result status="valid" time="2.08" steps="791122"/></proof>
              </goal>
              <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
              <transf name="replace" proved="true" arg1="(bv_to_ket a)" arg2="(qbit_one())">
               <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.1.0" expl="false case (apply premises)" proved="true">
               <proof prover="9"><result status="valid" time="2.05" steps="791123"/></proof>
               </goal>
               <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
               <transf name="eliminate_definition" proved="true" >
                <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket&#39;def">
                 <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
                 <transf name="replace" proved="true" arg1="(bv_to_int a )" arg2="1">
                  <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.1.1.0.0.0" expl="equality hypothesis" proved="true">
                  <proof prover="9"><result status="valid" time="2.46" steps="873475"/></proof>
                  </goal>
                  <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="assert" proved="true" arg1="(0&lt;= bv_to_int a &lt;2)">
                   <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.1.1.0.0.1.0" expl="asserted formula" proved="true">
                   <proof prover="9"><result status="valid" time="2.55" steps="871179"/></proof>
                   </goal>
                   <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.1.1.0.0.1.1" expl="equality hypothesis" proved="true">
                   <proof prover="9"><result status="valid" time="2.53" steps="870707"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.15" steps="732870"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.63" steps="905949"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.68" steps="903291"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.25" steps="874385"/></proof>
       </goal>
       <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.88" steps="681049"/></proof>
       </goal>
       <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="path_sem_ket_l">
          <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.66" steps="906232"/></proof>
          </goal>
          <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="0.92" steps="732870"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.72" steps="874385"/></proof>
      </goal>
      <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.93" steps="681049"/></proof>
      </goal>
      <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.45" steps="906232"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_xx_invol&#39;vc.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.30" steps="851126"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_xx_invol&#39;vc.3.0.1" expl="rewrite premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_xx&#39;def">
     <goal name="path_sem_xx_invol&#39;vc.3.0.1.0" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.70" steps="855841"/></proof>
     </goal>
     <goal name="path_sem_xx_invol&#39;vc.3.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.25" steps="851126"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_cnot_basis_left&#39;vc" expl="VC for path_sem_cnot_basis_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_cnot_basis_left&#39;vc.0" expl="assertion" proved="true">
  <transf name="apply" proved="true" arg1="goal_comm">
   <goal name="path_sem_cnot_basis_left&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="path_sem_cnot_basis_left&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_to_int&#39;spec1">
     <goal name="path_sem_cnot_basis_left&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="1.06"/></proof>
     </goal>
     <goal name="path_sem_cnot_basis_left&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.97" steps="786658"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_cnot_basis_left&#39;vc.1" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="1.68" steps="665207"/></proof>
  </goal>
  <goal name="path_sem_cnot_basis_left&#39;vc.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.99"/></proof>
  </goal>
  <goal name="path_sem_cnot_basis_left&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.52" steps="802093"/></proof>
  </goal>
  <goal name="path_sem_cnot_basis_left&#39;vc.4" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="path_sem_cnot_basis_left&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(circ_to_pps cnot)" arg2="(pps_cnot 0 1 2)">
    <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
     <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_cnot_apply_basis">
      <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0" expl="postcondition" proved="true">
      <transf name="eliminate_if" proved="true" >
       <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0" expl="VC for path_sem_cnot_basis_left" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.90" steps="944231"/></proof>
        </goal>
        <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.1" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.60" steps="945222"/></proof>
        </goal>
        <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.2" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.69" steps="944081"/></proof>
        </goal>
        <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.3" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.87" steps="945091"/></proof>
        </goal>
        <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.4" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.68" steps="945644"/></proof>
        </goal>
        <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5" expl="postcondition" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0" expl="postcondition" proved="true">
         <transf name="replace" proved="true" arg1="2" arg2="(1+1)">
          <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0" expl="postcondition" proved="true">
          <transf name="replace" proved="true" arg1="x" arg2="(ket 1 1)">
           <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0" expl="postcondition" proved="true">
           <transf name="replace" proved="true" arg1="(path_sem_xx y)" arg2="(ket 1 1)">
            <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.0" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_kets">
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.0.0" expl="postcondition" proved="true">
             <proof prover="0"><result status="valid" time="1.08"/></proof>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.18" steps="773255"/></proof>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.16" steps="773255"/></proof>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.0.3" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.97" steps="821905"/></proof>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.0.4" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.99" steps="821905"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.1" expl="equality hypothesis" proved="true">
            <transf name="replace" proved="true" arg1="y" arg2="(qbit_zero())">
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.1.0" expl="equality hypothesis" proved="true">
             <transf name="rewrite" proved="true" arg1="path_sem_xx&#39;spec">
              <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="2.03" steps="818945"/></proof>
              </goal>
              <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.15" steps="773248"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.1.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="2.07" steps="822091"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="1.19" steps="773248"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.1" expl="equality hypothesis" proved="true">
          <proof prover="9"><result status="valid" time="1.21" steps="773262"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.6" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.76" steps="945436"/></proof>
        </goal>
        <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7" expl="postcondition" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0" expl="postcondition" proved="true">
         <transf name="replace" proved="true" arg1="2" arg2="(1+1)">
          <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0" expl="postcondition" proved="true">
          <transf name="replace" proved="true" arg1="x" arg2="(ket 1 1)">
           <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0" expl="postcondition" proved="true">
           <transf name="replace" proved="true" arg1="(path_sem_xx y)" arg2="(ket 1 0)">
            <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.0" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_kets">
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.0.0" expl="postcondition" proved="true">
             <proof prover="9"><result status="valid" time="2.09" steps="821927"/></proof>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.27" steps="773259"/></proof>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.23" steps="773259"/></proof>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.0.3" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.05" steps="821912"/></proof>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.0.4" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.02" steps="821912"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.1" expl="equality hypothesis" proved="true">
            <transf name="replace" proved="true" arg1="y" arg2="(qbit_one())">
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.1.0" expl="equality hypothesis" proved="true">
             <transf name="rewrite" proved="true" arg1="path_sem_xx&#39;spec">
              <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="2.14" steps="818952"/></proof>
              </goal>
              <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.31" steps="773252"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.1.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="2.89" steps="943373"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="1.24" steps="773252"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.1" expl="equality hypothesis" proved="true">
          <proof prover="9"><result status="valid" time="1.31" steps="773266"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.15" steps="794451"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.54" steps="805043"/></proof>
     </goal>
     <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.71" steps="664075"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_cnot_basis_left&#39;vc.4.0.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="0.98" steps="622608"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_cnot_basis_left&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.67" steps="663462"/></proof>
  </goal>
  <goal name="path_sem_cnot_basis_left&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.76" steps="663867"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_cnot&#39;vc" expl="VC for path_sem_cnot" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_cnot&#39;vc.0" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width cnot)" arg2="(1+1)">
   <goal name="path_sem_cnot&#39;vc.0.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="kronecker_ket_l">
    <goal name="path_sem_cnot&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="0.98" steps="622724"/></proof>
    </goal>
    <goal name="path_sem_cnot&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.02" steps="622724"/></proof>
    </goal>
    <goal name="path_sem_cnot&#39;vc.0.0.2" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="0.99" steps="622717"/></proof>
    </goal>
    <goal name="path_sem_cnot&#39;vc.0.0.3" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="0.98" steps="622717"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_cnot&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="0.99" steps="622731"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_cnot&#39;vc.1" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="path_sem_cnot&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="path_sem_cnot&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="y,1">
     <goal name="path_sem_cnot&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_xx&#39;def">
      <goal name="path_sem_cnot&#39;vc.1.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Hinst">
       <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
        <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_sum_">
         <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="path_sem_sum_">
          <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="eliminate_if" proved="true" >
            <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0" expl="VC for path_sem_cnot" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <transf name="apply" proved="true" arg1="ket_sum_eq">
              <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="1.81" steps="683555"/></proof>
              </goal>
              <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="1.01" steps="634711"/></proof>
              </goal>
              <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                 <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="path_sem_scal">
                  <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="replace" proved="true" arg1="(path_sem cnot (kronecker x (bv_to_ket a)))" arg2="(path_sem_cnot_basis_left   x (bv_to_ket a))">
                    <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.94" steps="1042220"/></proof>
                    </goal>
                    <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                    <proof prover="9"><result status="valid" time="3.23" steps="1040127"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="replace" proved="true" arg1="(width cnot)" arg2="(1+1)">
                   <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="kronecker_ket_l">
                    <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.1.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.15" steps="711328"/></proof>
                    </goal>
                    <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.1.0.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.14" steps="711328"/></proof>
                    </goal>
                    <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.1.0.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.14" steps="711328"/></proof>
                    </goal>
                    <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.1.0.3" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.60" steps="858042"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.1.1" expl="equality hypothesis" proved="true">
                   <proof prover="9"><result status="valid" time="1.10" steps="711342"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
             <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
              <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0" expl="postcondition" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="postcondition" proved="true">
               <transf name="apply" proved="true" arg1="ket_sum_eq">
                <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.24" steps="775834"/></proof>
                </goal>
                <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="0.97" steps="634715"/></proof>
                </goal>
                <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                   <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="path_sem_scal">
                    <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="path_sem_scal">
                     <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="replace" proved="true" arg1="(path_sem cnot (kronecker x (bv_to_ket a)))" arg2="(path_sem_cnot_basis_left   x (bv_to_ket a))">
                       <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.04" steps="1046015"/></proof>
                       </goal>
                       <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                       <proof prover="9"><result status="valid" time="3.07" steps="1043572"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.52" steps="858594"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="replace" proved="true" arg1="(width cnot)" arg2="(1+1)">
                     <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="kronecker_ket_l">
                      <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.1.0.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.09" steps="711332"/></proof>
                      </goal>
                      <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.1.0.1" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.07" steps="711332"/></proof>
                      </goal>
                      <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.1.0.2" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.06" steps="711332"/></proof>
                      </goal>
                      <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.1.0.3" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.52" steps="858587"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.1.1" expl="equality hypothesis" proved="true">
                     <proof prover="9"><result status="valid" time="1.07" steps="711346"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="3.58" steps="887786"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.62" steps="675621"/></proof>
              </goal>
              <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.3" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.35" steps="824636"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.41" steps="815405"/></proof>
          </goal>
          <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="0.98" steps="623854"/></proof>
          </goal>
          <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="4.50" steps="910790"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="2.43" steps="815405"/></proof>
         </goal>
         <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.68" steps="665736"/></proof>
         </goal>
         <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(width cnot)" arg2="(1+1)">
            <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_ket_l">
             <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.09" steps="700197"/></proof>
             </goal>
             <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.04" steps="700197"/></proof>
             </goal>
             <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.3.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.01" steps="700197"/></proof>
             </goal>
             <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.3.0.0.0.3" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="2.32" steps="851124"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="9"><result status="valid" time="0.99" steps="700211"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="4.49" steps="910783"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.50" steps="665728"/></proof>
        </goal>
        <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.51" steps="815419"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.01" steps="623847"/></proof>
       </goal>
       <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.66" steps="665701"/></proof>
       </goal>
       <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.62" steps="665717"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_cnot&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.78" steps="623847"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_cnot&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.62" steps="663569"/></proof>
  </goal>
  <goal name="path_sem_cnot&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.68" steps="663984"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_swap&#39;vc" expl="VC for path_sem_swap" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_swap&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.29" steps="801157"/></proof>
  </goal>
  <goal name="path_sem_swap&#39;vc.1" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="path_sem_swap&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="x,1">
    <goal name="path_sem_swap&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="path_sem_swap&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
      <goal name="path_sem_swap&#39;vc.1.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="pps_apply_sum">
       <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
        <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="ket_sum_eq">
         <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.00" steps="807439"/></proof>
         </goal>
         <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="0.80" steps="623196"/></proof>
         </goal>
         <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
            <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
             <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="pps_apply_scal">
              <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="scalar_eq_gen">
               <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="y,1">
                <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="Hinst">
                 <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
                  <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="pps_apply_sum">
                   <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
                    <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="ket_sum_eq">
                     <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.23" steps="890603"/></proof>
                     </goal>
                     <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="0.88" steps="699722"/></proof>
                     </goal>
                     <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                        <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                         <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="pps_apply_scal">
                          <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                          <transf name="apply" proved="true" arg1="scalar_eq">
                           <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
                            <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                            <transf name="replace" proved="true" arg1="(ket_to_bv (kronecker (bv_to_ket a1) (bv_to_ket a)))" arg2="(concat1 a1 a)">
                             <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                             <transf name="replace" proved="true" arg1="(circ_to_pps swap)" arg2="(pps_swap 0 1 2)">
                              <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                              <transf name="rewrite" proved="true" arg1="pps_swap_apply_basis">
                               <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                               <transf name="replace" proved="true" arg1="(kronecker (bv_to_ket a) (bv_to_ket a1))" arg2="(ket 2 (bv_to_int(concat1 a a1)))
">
                                <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                <transf name="replace" proved="true" arg1="(bv_to_int (concat1 a1 a) )" arg2="(2 * getbv a1 0 + getbv a 0)">
                                 <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                 <transf name="replace" proved="true" arg1="(bv_to_int (concat1 a a1) )" arg2="(2 * getbv a 0 + getbv a1 0)">
                                  <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                  <transf name="apply" proved="true" arg1="ket_eq">
                                   <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                   <proof prover="9"><result status="valid" time="0.88" steps="699743"/></proof>
                                   </goal>
                                   <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                                   <proof prover="9"><result status="valid" time="0.89" steps="699734"/></proof>
                                   </goal>
                                   <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                                   <proof prover="9"><result status="valid" time="2.64" steps="920788"/></proof>
                                   </goal>
                                  </transf>
                                  </goal>
                                  <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                                  <proof prover="0"><result status="valid" time="0.98"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                                 <proof prover="0"><result status="valid" time="0.98"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                                <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                                <proof prover="9"><result status="valid" time="2.61" steps="905198"/></proof>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                               <proof prover="9"><result status="valid" time="2.59" steps="894490"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                              <proof prover="9"><result status="valid" time="0.90" steps="699736"/></proof>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                             <proof prover="9"><result status="valid" time="2.45" steps="891768"/></proof>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                            <transf name="replace" proved="true" arg1="(h_width (circ_to_pps swap))" arg2="(1+1)">
                             <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                             <transf name="apply" proved="true" arg1="kronecker_ket_l">
                              <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="0.88" steps="699736"/></proof>
                              </goal>
                              <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="0.88" steps="699736"/></proof>
                              </goal>
                              <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="2.18" steps="889766"/></proof>
                              </goal>
                              <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.3" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="2.20" steps="889766"/></proof>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                             <proof prover="9"><result status="valid" time="1.79" steps="746556"/></proof>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="2.20" steps="890654"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
                          <transf name="replace" proved="true" arg1="(h_width (circ_to_pps swap))" arg2="(1+1)">
                           <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                           <transf name="apply" proved="true" arg1="kronecker_ket_l">
                            <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                            <proof prover="9"><result status="valid" time="1.05" steps="699736"/></proof>
                            </goal>
                            <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                            <proof prover="9"><result status="valid" time="0.88" steps="699736"/></proof>
                            </goal>
                            <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                            <proof prover="9"><result status="valid" time="2.22" steps="889766"/></proof>
                            </goal>
                            <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.0.3" expl="apply premises" proved="true">
                            <proof prover="9"><result status="valid" time="2.54" steps="889766"/></proof>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                           <proof prover="9"><result status="valid" time="1.85" steps="746556"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.59" steps="895096"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.50" steps="889287"/></proof>
                    </goal>
                    <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.53" steps="901480"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.23" steps="901484"/></proof>
                   </goal>
                   <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
                     <transf name="replace" proved="true" arg1="(h_width (circ_to_pps swap))" arg2="(1+1)">
                      <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="kronecker_ket_l">
                       <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.07" steps="699736"/></proof>
                       </goal>
                       <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.0.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="0.90" steps="699736"/></proof>
                       </goal>
                       <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.0.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.52" steps="889766"/></proof>
                       </goal>
                       <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.0.3" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.58" steps="895030"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.1" expl="equality hypothesis" proved="true">
                      <proof prover="9"><result status="valid" time="1.86" steps="746556"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.74" steps="916726"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="4.53" steps="958851"/></proof>
                  </goal>
                  <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.53" steps="889287"/></proof>
                  </goal>
                  <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.60" steps="901480"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="0.87" steps="699724"/></proof>
                 </goal>
                 <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.82" steps="746441"/></proof>
                 </goal>
                 <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.87" steps="746453"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="0.89" steps="699589"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="replace" proved="true" arg1="(h_width (circ_to_pps swap))" arg2="(1+1)">
               <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="0.88" steps="699591"/></proof>
                </goal>
                <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="0.84" steps="699591"/></proof>
                </goal>
                <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.54" steps="892984"/></proof>
                </goal>
                <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.1.0.3" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="0.88" steps="699591"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
               <proof prover="9"><result status="valid" time="1.54" steps="746334"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.63" steps="898068"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.63" steps="664617"/></proof>
        </goal>
        <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.44" steps="857202"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_swap&#39;vc.1.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.45" steps="857197"/></proof>
       </goal>
       <goal name="path_sem_swap&#39;vc.1.0.0.0.0.2" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="path_sem_swap&#39;vc.1.0.0.0.0.2.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="path_sem_swap&#39;vc.1.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
         <transf name="replace" proved="true" arg1="(h_width (circ_to_pps swap))" arg2="(1+1)">
          <goal name="path_sem_swap&#39;vc.1.0.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_ket_l">
           <goal name="path_sem_swap&#39;vc.1.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.04" steps="699591"/></proof>
           </goal>
           <goal name="path_sem_swap&#39;vc.1.0.0.0.0.2.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="0.88" steps="699591"/></proof>
           </goal>
           <goal name="path_sem_swap&#39;vc.1.0.0.0.0.2.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="2.64" steps="898068"/></proof>
           </goal>
           <goal name="path_sem_swap&#39;vc.1.0.0.0.0.2.0.0.0.3" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="0.89" steps="699591"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_swap&#39;vc.1.0.0.0.0.2.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="9"><result status="valid" time="1.56" steps="746334"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_swap&#39;vc.1.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.49" steps="834033"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_swap&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="path_sem_swap&#39;vc.1.0.0.0.1.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_swap&#39;vc.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.26" steps="898068"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_swap&#39;vc.1.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.66" steps="664617"/></proof>
      </goal>
      <goal name="path_sem_swap&#39;vc.1.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.18" steps="857202"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_swap&#39;vc.1.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.79" steps="623198"/></proof>
     </goal>
     <goal name="path_sem_swap&#39;vc.1.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.65" steps="664510"/></proof>
     </goal>
     <goal name="path_sem_swap&#39;vc.1.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.59" steps="664518"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="yy&#39;vc" expl="VC for yy" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="yy&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.97" steps="747502"/></proof>
  </goal>
  <goal name="yy&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.02" steps="747505"/></proof>
  </goal>
  <goal name="yy&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.13" steps="760316"/></proof>
  </goal>
  <goal name="yy&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.29" steps="760328"/></proof>
  </goal>
  <goal name="yy&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.08" steps="760360"/></proof>
  </goal>
  <goal name="yy&#39;vc.5" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures10">
   <goal name="yy&#39;vc.5.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="yy&#39;vc.5.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_xx&#39;def">
     <goal name="yy&#39;vc.5.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_yy&#39;def">
      <goal name="yy&#39;vc.5.0.0.0.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_zero_add">
       <goal name="yy&#39;vc.5.0.0.0.0.0" expl="precondition" proved="true">
       <transf name="case" proved="true" arg1="(x 0 = 0)">
        <goal name="yy&#39;vc.5.0.0.0.0.0.0" expl="true case (precondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="pps_xx&#39;def1">
         <goal name="yy&#39;vc.5.0.0.0.0.0.0.0" expl="true case (precondition)" proved="true">
         <proof prover="9"><result status="valid" time="3.30" steps="1058699"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="yy&#39;vc.5.0.0.0.0.0.1" expl="false case (precondition)" proved="true">
        <transf name="replace" proved="true" arg1="(x 0)" arg2="1">
         <goal name="yy&#39;vc.5.0.0.0.0.0.1.0" expl="false case (precondition)" proved="true">
         <proof prover="9"><result status="valid" time="3.29" steps="1060651"/></proof>
         </goal>
         <goal name="yy&#39;vc.5.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="9"><result status="valid" time="3.11" steps="1058100"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="yy&#39;vc.5.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.47" steps="934120"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="yy&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="yy&#39;vc.6.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pps_yy&#39;def1">
    <goal name="yy&#39;vc.6.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_rz_b&#39;spec1">
     <goal name="yy&#39;vc.6.0.0.0" expl="precondition" proved="true">
     <proof prover="9"><result status="valid" time="3.21" steps="1057741"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="yy&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.96" steps="747614"/></proof>
  </goal>
  <goal name="yy&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.10" steps="760457"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ry&#39;vc" expl="VC for ry" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ry&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.08" steps="760614"/></proof>
  </goal>
  <goal name="ry&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.31" steps="761510"/></proof>
  </goal>
  <goal name="ry&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.06" steps="797767"/></proof>
  </goal>
  <goal name="ry&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.99" steps="749551"/></proof>
  </goal>
  <goal name="ry&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.28" steps="762478"/></proof>
  </goal>
  <goal name="ry&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.07" steps="762490"/></proof>
  </goal>
  <goal name="ry&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.14" steps="749576"/></proof>
  </goal>
  <goal name="ry&#39;vc.7" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures20">
  </transf>
  </goal>
  <goal name="ry&#39;vc.8" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures21">
  </transf>
  </goal>
  <goal name="ry&#39;vc.9" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.96" steps="749652"/></proof>
  </goal>
  <goal name="ry&#39;vc.10" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.07" steps="797921"/></proof>
  </goal>
  <goal name="ry&#39;vc.11" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.31" steps="762631"/></proof>
  </goal>
  <goal name="ry&#39;vc.12" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.26" steps="762643"/></proof>
  </goal>
  <goal name="ry&#39;vc.13" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.08" steps="762670"/></proof>
  </goal>
  <goal name="ry&#39;vc.14" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="ry&#39;vc.14.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pps_ry&#39;spec">
    <goal name="ry&#39;vc.14.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures25">
     <goal name="ry&#39;vc.14.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_rz&#39;spec">
      <goal name="ry&#39;vc.14.0.0.0.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="pps_rz&#39;spec">
       <goal name="ry&#39;vc.14.0.0.0.0.0" expl="precondition" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures26">
        <goal name="ry&#39;vc.14.0.0.0.0.0.0" expl="precondition" proved="true">
        <transf name="rewrite" proved="true" arg1="pps_rx&#39;spec1">
         <goal name="ry&#39;vc.14.0.0.0.0.0.0.0" expl="precondition" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0" expl="precondition" proved="true">
          <transf name="rewrite" proved="true" arg1="pps_rx&#39;spec">
           <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0" expl="precondition" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0" expl="precondition" proved="true">
            <transf name="rewrite" proved="true" arg1="pps_rz&#39;spec1">
             <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0" expl="precondition" proved="true">
             <transf name="replace" proved="true" arg1="(1 + h_range (pps_rz (- 2)))" arg2="1">
              <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0" expl="precondition" proved="true">
              <transf name="replace" proved="true" arg1="( h_range (pps_rz (- 2)))" arg2="0">
               <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="precondition" proved="true">
               <transf name="assert" proved="true" arg1="(forall a b c d. a+.+ (b+.+c)+.+d = b+.+c+.+ (a+.+d) )">
                <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                <proof prover="9"><result status="valid" time="3.25" steps="1069581"/></proof>
                </goal>
                <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="precondition" proved="true">
                <transf name="rewrite" proved="true" arg1="h">
                 <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="precondition" proved="true">
                 <transf name="apply" proved="true" arg1="ang_add_eq">
                  <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="ang_add_eq">
                   <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.20" steps="887712"/></proof>
                   </goal>
                   <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.44" steps="887712"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                  <transf name="replace" proved="true" arg1="((x @ 0) /./ (- 2))" arg2="(-(x @ 0) /./ ( 2))">
                   <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.28" steps="1070515"/></proof>
                   </goal>
                   <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
                   <proof prover="9"><result status="valid" time="3.23" steps="1069126"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="9"><result status="valid" time="1.40" steps="887648"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="1.42" steps="887662"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ry&#39;vc.15" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="ry&#39;vc.15.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pps_rz&#39;spec1">
    <goal name="ry&#39;vc.15.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures26">
     <goal name="ry&#39;vc.15.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures54">
      <goal name="ry&#39;vc.15.0.0.0.0" expl="precondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="ry&#39;vc.15.0.0.0.0.0" expl="precondition" proved="true">
       <proof prover="9"><result status="valid" time="2.44" steps="938181"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ry&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.94" steps="797732"/></proof>
  </goal>
  <goal name="ry&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.85" steps="941764"/></proof>
  </goal>
  <goal name="ry&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.98" steps="749803"/></proof>
  </goal>
  <goal name="ry&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.08" steps="762814"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Qbit_permutations" proved="true">
 <goal name="c_inverse_pre&#39;vc" expl="VC for c_inverse_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="c_inverse_pre&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="1.35" steps="687264"/></proof>
  </goal>
  <goal name="c_inverse_pre&#39;vc.1" expl="precondition" proved="true">
  <transf name="case" proved="true" arg1="(j = n-1)">
   <goal name="c_inverse_pre&#39;vc.1.0" expl="true case (precondition)" proved="true">
   <proof prover="9"><result status="valid" time="1.67" steps="687841"/></proof>
   </goal>
   <goal name="c_inverse_pre&#39;vc.1.1" expl="false case (precondition)" proved="true">
   <proof prover="9"><result status="valid" time="1.61" steps="687688"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="c_inverse_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.39" steps="813433"/></proof>
  </goal>
  <goal name="c_inverse_pre&#39;vc.3" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="c_inverse_pre&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.35" steps="687344"/></proof>
   </goal>
   <goal name="c_inverse_pre&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.98" steps="646096"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="c_inverse_pre&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.60" steps="687626"/></proof>
  </goal>
  <goal name="c_inverse_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.59" steps="687666"/></proof>
  </goal>
  <goal name="c_inverse_pre&#39;vc.6" expl="precondition" proved="true">
  <transf name="instantiate" proved="true" arg1="get_bijective" arg2="f,(to_fset 0 n),(to_fset 0 n)">
   <goal name="c_inverse_pre&#39;vc.6.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="c_inverse_pre&#39;vc.6.0.0" expl="precondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst1">
     <goal name="c_inverse_pre&#39;vc.6.0.0.0" expl="destruct premise" proved="true">
     <proof prover="9"><result status="valid" time="1.19" steps="770035"/></proof>
     </goal>
     <goal name="c_inverse_pre&#39;vc.6.0.0.1" expl="precondition" proved="true">
     <transf name="instantiate" proved="true" arg1="Hinst1" arg2="i">
      <goal name="c_inverse_pre&#39;vc.6.0.0.1.0" expl="precondition" proved="true">
      <proof prover="0"><result status="valid" time="1.07"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="c_inverse_pre&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.82" steps="646312"/></proof>
  </goal>
  <goal name="c_inverse_pre&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.79" steps="646316"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="c_inverse&#39;vc" expl="VC for c_inverse" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="c_inverse&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.81" steps="646012"/></proof>
  </goal>
  <goal name="c_inverse&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.80" steps="646024"/></proof>
  </goal>
  <goal name="c_inverse&#39;vc.2" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="c_inverse&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="c_inverse&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="c_inverse&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="2.31" steps="778236"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="c_inverse&#39;vc.3" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="c_inverse&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="c_inverse&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="c_inverse&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="2.29" steps="778032"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="c_inverse&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="c_inverse&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_bijective1">
    <goal name="c_inverse&#39;vc.4.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="c_inverse&#39;vc.4.0.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="3.01" steps="1015045"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="c_inverse&#39;vc.4.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="c_inverse&#39;vc.4.0.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.63" steps="1016032"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="c_inverse&#39;vc.4.0.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="c_inverse&#39;vc.4.0.2.0" expl="apply premises" proved="true">
     <transf name="exists" proved="true" arg1="(f e&#39;)">
      <goal name="c_inverse&#39;vc.4.0.2.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="c_inverse&#39;vc.4.0.2.0.0.0" proved="true">
       <proof prover="9"><result status="valid" time="1.90" steps="894722"/></proof>
       </goal>
       <goal name="c_inverse&#39;vc.4.0.2.0.0.1" proved="true">
       <transf name="replace" proved="true" arg1="(result @ (f @ e&#39;))" arg2="(inverse f  (to_fset 0 n) (to_fset 0 n) (f e&#39;))">
        <goal name="c_inverse&#39;vc.4.0.2.0.0.1.0" proved="true">
        <proof prover="9"><result status="valid" time="1.92" steps="894576"/></proof>
        </goal>
        <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="unic_inverse">
         <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.11" steps="846857"/></proof>
         </goal>
         <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0" expl="apply premises" proved="true">
          <transf name="case" proved="true" arg1="((result @ (f @ a)) &lt;&gt; a)">
           <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0" expl="true case (apply premises)" proved="true">
           <transf name="assert" proved="true" arg1="(f (result @ (f @ a)) &lt;&gt;f a)">
            <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.0" expl="asserted formula" proved="true">
            <transf name="apply" proved="true" arg1="get_injective" arg2="with" arg3="(to_fset 0 n)">
             <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="2.31" steps="897759"/></proof>
             </goal>
             <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="4.70" steps="1055107"/></proof>
             </goal>
             <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.11" steps="846898"/></proof>
             </goal>
             <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.0.3" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.32" steps="846896"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.1" expl="true case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="Ensures" arg2="in" arg3="h">
             <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.1.0" expl="true case (apply premises)" proved="true">
             <proof prover="9"><result status="valid" time="1.16" steps="846896"/></proof>
             </goal>
             <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.1.1" expl="rewrite premises" proved="true">
             <transf name="assert" proved="true" arg1="(mem (f a) (to_fset 0 n))">
              <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.1.1.0" expl="asserted formula" proved="true">
              <proof prover="9"><result status="valid" time="2.29" steps="894871"/></proof>
              </goal>
              <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.1.1.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="3.01" steps="1015888"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.1" expl="false case (apply premises)" proved="true">
           <proof prover="9"><result status="valid" time="1.13" steps="846894"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.31" steps="894722"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="c_inverse&#39;vc.5" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="((result @ (f @ b)) &lt;&gt; b)">
   <goal name="c_inverse&#39;vc.5.0" expl="true case (postcondition)" proved="true">
   <transf name="assert" proved="true" arg1="(f(result @ (f @ b)) &lt;&gt; f b)">
    <goal name="c_inverse&#39;vc.5.0.0" expl="asserted formula" proved="true">
    <transf name="apply" proved="true" arg1="get_injective" arg2="with" arg3="(to_fset 0 n)">
     <goal name="c_inverse&#39;vc.5.0.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.50" steps="691014"/></proof>
     </goal>
     <goal name="c_inverse&#39;vc.5.0.0.1" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="(mem (f b) (to_fset 0 n))">
      <goal name="c_inverse&#39;vc.5.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="assert" proved="true" arg1="(mem b (to_fset 0 n))">
       <goal name="c_inverse&#39;vc.5.0.0.1.0.0" expl="asserted formula" proved="true">
       <proof prover="9"><result status="valid" time="2.66" steps="881938"/></proof>
       </goal>
       <goal name="c_inverse&#39;vc.5.0.0.1.0.1" expl="asserted formula" proved="true">
       <proof prover="9"><result status="valid" time="1.87" steps="756614"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="c_inverse&#39;vc.5.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.89" steps="756612"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="c_inverse&#39;vc.5.0.0.2" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.54" steps="881938"/></proof>
     </goal>
     <goal name="c_inverse&#39;vc.5.0.0.3" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="0.94" steps="646392"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="c_inverse&#39;vc.5.0.1" expl="true case (postcondition)" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures1" arg2="in" arg3="h">
     <goal name="c_inverse&#39;vc.5.0.1.0" expl="true case (postcondition)" proved="true">
     <proof prover="9"><result status="valid" time="0.96" steps="646392"/></proof>
     </goal>
     <goal name="c_inverse&#39;vc.5.0.1.1" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(mem (f b) (to_fset 0 n))">
      <goal name="c_inverse&#39;vc.5.0.1.1.0" expl="asserted formula" proved="true">
      <transf name="assert" proved="true" arg1="(mem b (to_fset 0 n))">
       <goal name="c_inverse&#39;vc.5.0.1.1.0.0" expl="asserted formula" proved="true">
       <proof prover="9"><result status="valid" time="2.66" steps="882028"/></proof>
       </goal>
       <goal name="c_inverse&#39;vc.5.0.1.1.0.1" expl="asserted formula" proved="true">
       <proof prover="9"><result status="valid" time="1.64" steps="756677"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="c_inverse&#39;vc.5.0.1.1.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.43" steps="813301"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="c_inverse&#39;vc.5.1" expl="false case (postcondition)" proved="true">
   <proof prover="9"><result status="valid" time="0.98" steps="646390"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="c_inverse&#39;vc.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="inv_func_int&#39;def">
   <goal name="c_inverse&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="unic_inverse">
    <goal name="c_inverse&#39;vc.6.0.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="0.97" steps="646469"/></proof>
    </goal>
    <goal name="c_inverse&#39;vc.6.0.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="2.60" steps="882553"/></proof>
    </goal>
    <goal name="c_inverse&#39;vc.6.0.2" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="2.62" steps="881705"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="c_inverse&#39;vc.6.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="1.01" steps="646469"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unic_inverse_c&#39;vc" expl="VC for unic_inverse_c" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unic_inverse_c&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.74" steps="774961"/></proof>
  </goal>
  <goal name="unic_inverse_c&#39;vc.1" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="( (f&#39; @ b) = (c_inverse f n @ b))">
   <goal name="unic_inverse_c&#39;vc.1.0" expl="true case (postcondition)" proved="true">
   <proof prover="9"><result status="valid" time="0.95" steps="728673"/></proof>
   </goal>
   <goal name="unic_inverse_c&#39;vc.1.1" expl="false case (postcondition)" proved="true">
   <transf name="assert" proved="true" arg1="( f(f&#39; @ b) &lt;&gt; f (c_inverse f n @ b))">
    <goal name="unic_inverse_c&#39;vc.1.1.0" expl="asserted formula" proved="true">
    <proof prover="9"><result status="valid" time="2.88" steps="899790"/></proof>
    </goal>
    <goal name="unic_inverse_c&#39;vc.1.1.1" expl="false case (postcondition)" proved="true">
    <proof prover="9"><result status="valid" time="2.83" steps="899833"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="c_inv_func_int&#39;vc" expl="VC for c_inv_func_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="c_inv_func_int&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.96" steps="647287"/></proof>
  </goal>
  <goal name="c_inv_func_int&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.43" steps="813471"/></proof>
  </goal>
  <goal name="c_inv_func_int&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.04" steps="647860"/></proof>
  </goal>
  <goal name="c_inv_func_int&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.04" steps="813584"/></proof>
  </goal>
  <goal name="c_inv_func_int&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.03" steps="813808"/></proof>
  </goal>
  <goal name="c_inv_func_int&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.32" steps="813910"/></proof>
  </goal>
  <goal name="c_inv_func_int&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.39" steps="814016"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="unic_inverse_c_int&#39;vc" expl="VC for unic_inverse_c_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unic_inverse_c_int&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.85" steps="648522"/></proof>
  </goal>
  <goal name="unic_inverse_c_int&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.14" steps="813734"/></proof>
  </goal>
  <goal name="unic_inverse_c_int&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.25" steps="814812"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="qbit_permutes&#39;vc" expl="VC for qbit_permutes" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="qbit_permutes&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.37" steps="791083"/></proof>
  </goal>
  <goal name="qbit_permutes&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutes&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.31" steps="791510"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.32" steps="791567"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.1.2" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.70" steps="681549"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.1.3" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.46" steps="681549"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.1.4" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.44" steps="681549"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.1.5" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.46" steps="681549"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.1.6" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.02" steps="792024"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.1.7" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.00" steps="791699"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.1.8" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.03" steps="791777"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutes&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.08" steps="813710"/></proof>
  </goal>
  <goal name="qbit_permutes&#39;vc.3" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutes&#39;vc.3.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.20" steps="814178"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.3.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.02" steps="814225"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.3.2" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.46" steps="702640"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.3.3" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.42" steps="702640"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.3.4" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.72" steps="702640"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.3.5" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.48" steps="702640"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.3.6" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.03" steps="814632"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.3.7" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.13" steps="814299"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.3.8" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.40" steps="814413"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutes&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.32" steps="791063"/></proof>
  </goal>
  <goal name="qbit_permutes&#39;vc.5" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutes&#39;vc.5.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.31" steps="791519"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.5.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.26" steps="791576"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.5.2" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.64" steps="681534"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.5.3" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.58" steps="681534"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.5.4" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.62" steps="681534"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.5.5" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.63" steps="681534"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.5.6" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.10" steps="791699"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.5.7" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.41" steps="792022"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.5.8" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.08" steps="791786"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutes&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.17" steps="813704"/></proof>
  </goal>
  <goal name="qbit_permutes&#39;vc.7" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutes&#39;vc.7.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.04" steps="814135"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.7.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.17" steps="814192"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.7.2" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.57" steps="702625"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.7.3" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.52" steps="702625"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.7.4" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.49" steps="702625"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.7.5" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.48" steps="702625"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.7.6" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.15" steps="814281"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.7.7" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.52" steps="814625"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.7.8" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.51" steps="814382"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutes&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutes&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.8.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.75"/></proof>
    </goal>
    <goal name="qbit_permutes&#39;vc.8.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.91"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.8.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.8.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.74"/></proof>
    </goal>
    <goal name="qbit_permutes&#39;vc.8.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.89"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.8.2" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.70" steps="668774"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.8.3" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.70" steps="668774"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.8.4" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.00" steps="627074"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.8.5" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.02" steps="627074"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.8.6" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.00" steps="627069"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.8.7" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.97" steps="627069"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.8.8" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.00" steps="627078"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutes&#39;vc.9" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H1">
   <goal name="qbit_permutes&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="qbit_permutes&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="qbit_permutes&#39;vc.9.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(ancillas c)" arg2="(max (ancillas (to_qc x1)) (ancillas (to_qc x)))">
      <goal name="qbit_permutes&#39;vc.9.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="2.92" steps="939585"/></proof>
      </goal>
      <goal name="qbit_permutes&#39;vc.9.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="2.18" steps="819374"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.88"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.9.2" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.71" steps="668787"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.9.3" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.66" steps="668787"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.9.4" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.97" steps="627096"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.9.5" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.03" steps="627096"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.9.6" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.86" steps="627091"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.9.7" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.96" steps="627091"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.9.8" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.94" steps="627100"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutes&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutes&#39;vc.10.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.10.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="qbit_permutes&#39;vc.10.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(range c)" arg2="( (range (to_qc x1)) + (range (to_qc x)))">
      <goal name="qbit_permutes&#39;vc.10.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.02" steps="660806"/></proof>
      </goal>
      <goal name="qbit_permutes&#39;vc.10.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="( c)" arg2="(sequence ( (to_qc x1))  ( (to_qc x)))">
       <goal name="qbit_permutes&#39;vc.10.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="2.27" steps="816229"/></proof>
       </goal>
       <goal name="qbit_permutes&#39;vc.10.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="2.32" steps="816170"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutes&#39;vc.10.0.1" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="qbit_permutes&#39;vc.10.0.1.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(range c)" arg2="( (range (to_qc x1)) + (range (to_qc x)))">
      <goal name="qbit_permutes&#39;vc.10.0.1.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="0.89" steps="647910"/></proof>
      </goal>
      <goal name="qbit_permutes&#39;vc.10.0.1.0.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="( c)" arg2="(sequence ( (to_qc x1))  ( (to_qc x)))">
       <goal name="qbit_permutes&#39;vc.10.0.1.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="0.95" steps="647921"/></proof>
       </goal>
       <goal name="qbit_permutes&#39;vc.10.0.1.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="0.97" steps="647906"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.10.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.10.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="qbit_permutes&#39;vc.10.1.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(range c)" arg2="( (range (to_qc x1)) + (range (to_qc x)))">
      <goal name="qbit_permutes&#39;vc.10.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.02" steps="660806"/></proof>
      </goal>
      <goal name="qbit_permutes&#39;vc.10.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="( c)" arg2="(parallel ( (to_qc x1))  ( (to_qc x)))">
       <goal name="qbit_permutes&#39;vc.10.1.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="2.26" steps="815024"/></proof>
       </goal>
       <goal name="qbit_permutes&#39;vc.10.1.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="2.22" steps="814657"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutes&#39;vc.10.1.1" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="qbit_permutes&#39;vc.10.1.1.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(range c)" arg2="( (range (to_qc x1)) + (range (to_qc x)))">
      <goal name="qbit_permutes&#39;vc.10.1.1.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="0.97" steps="647910"/></proof>
      </goal>
      <goal name="qbit_permutes&#39;vc.10.1.1.0.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="( c)" arg2="(parallel ( (to_qc x1))  ( (to_qc x)))">
       <goal name="qbit_permutes&#39;vc.10.1.1.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="0.94" steps="647921"/></proof>
       </goal>
       <goal name="qbit_permutes&#39;vc.10.1.1.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="0.94" steps="647906"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.10.2" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.49" steps="681567"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.10.3" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.51" steps="681567"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.10.4" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.00" steps="627118"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.10.5" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.00" steps="627118"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.10.6" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.03" steps="627113"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.10.7" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.10.7.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.01" steps="627113"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.10.8" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.10.8.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.02" steps="627122"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutes&#39;vc.11" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutes&#39;vc.11.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.11.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="qbit_permutes&#39;vc.11.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="c" arg2="(sequence (to_qc x2)(to_qc x1))">
      <goal name="qbit_permutes&#39;vc.11.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="qbit_permutes&#39;vc.11.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="sequence_angle">
        <goal name="qbit_permutes&#39;vc.11.0.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.34" steps="917314"/></proof>
        </goal>
        <goal name="qbit_permutes&#39;vc.11.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.63" steps="941759"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="qbit_permutes&#39;vc.11.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="2.23" steps="816219"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutes&#39;vc.11.0.1" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="qbit_permutes&#39;vc.11.0.1.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="c" arg2="(sequence (to_qc x2)(to_qc x1))">
      <goal name="qbit_permutes&#39;vc.11.0.1.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="qbit_permutes&#39;vc.11.0.1.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="sequence_angle">
        <goal name="qbit_permutes&#39;vc.11.0.1.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="1.31" steps="865212"/></proof>
        </goal>
        <goal name="qbit_permutes&#39;vc.11.0.1.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.14" steps="771652"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="qbit_permutes&#39;vc.11.0.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="0.93" steps="647930"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.11.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.11.1.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="c" arg2="(parallel (to_qc x2) (to_qc x1))">
     <goal name="qbit_permutes&#39;vc.11.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="parallel_angle">
      <goal name="qbit_permutes&#39;vc.11.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.69" steps="703298"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="qbit_permutes&#39;vc.11.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="2.20" steps="814690"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutes&#39;vc.11.1.1" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="qbit_permutes&#39;vc.11.1.1.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="c" arg2="(parallel (to_qc x2) (to_qc x1))">
      <goal name="qbit_permutes&#39;vc.11.1.1.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="parallel_angle">
       <goal name="qbit_permutes&#39;vc.11.1.1.0.0.0" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="0.87" steps="648042"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="qbit_permutes&#39;vc.11.1.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="0.84" steps="647930"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.11.2" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.11.2.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.64" steps="702785"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.11.3" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.84" steps="702785"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.11.4" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.91" steps="647785"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.11.5" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="c" arg2="(id )">
    <goal name="qbit_permutes&#39;vc.11.5.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="0.86" steps="647785"/></proof>
    </goal>
    <goal name="qbit_permutes&#39;vc.11.5.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="0.84" steps="627138"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.11.6" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.91" steps="647780"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.11.7" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.08" steps="647780"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.11.8" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.11.8.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="qbit_permutes&#39;vc.11.8.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="0.82" steps="647793"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="qbit_permutation&#39;vc" expl="VC for qbit_permutation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="qbit_permutation&#39;vc.0" expl="assertion" proved="true">
  <transf name="replace" proved="true" arg1="c" arg2="(sequence (to_qc x1) (to_qc x))">
   <goal name="qbit_permutation&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutation&#39;vc.0.0.0" expl="assertion" proved="true">
    <transf name="assert" proved="true" arg1="(build_correct (pre c))">
     <goal name="qbit_permutation&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="9"><result status="valid" time="2.49" steps="791589"/></proof>
     </goal>
     <goal name="qbit_permutation&#39;vc.0.0.0.1" expl="assertion" proved="true">
     <transf name="rewrite" proved="true" arg1="sequence_width">
      <goal name="qbit_permutation&#39;vc.0.0.0.1.0" expl="assertion" proved="true">
      <proof prover="9"><result status="valid" time="0.85" steps="627899"/></proof>
      </goal>
      <goal name="qbit_permutation&#39;vc.0.0.0.1.1" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="( width (to_qc x1))" arg2="(width_pre x1)">
       <goal name="qbit_permutation&#39;vc.0.0.0.1.1.0" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="( width (to_qc x1))" arg2="(width_pre x)">
        <goal name="qbit_permutation&#39;vc.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="qbit_permutation&#39;vc.0.0.0.1.1.0.0.0" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="2.87" steps="916453"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="qbit_permutation&#39;vc.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="qbit_permutation&#39;vc.0.0.0.1.1.0.1.0" expl="equality hypothesis" proved="true">
         <transf name="rewrite" proved="true" arg1="width&#39;spec">
          <goal name="qbit_permutation&#39;vc.0.0.0.1.1.0.1.0.0" expl="equality hypothesis" proved="true">
          <proof prover="9"><result status="valid" time="2.97" steps="917349"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="qbit_permutation&#39;vc.0.0.0.1.1.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="2.48" steps="794129"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutation&#39;vc.0.0.1" expl="assertion" proved="true">
    <proof prover="9"><result status="valid" time="2.52" steps="794193"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutation&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="assert" proved="true" arg1="(pre c = pre (sequence (to_qc x1) (to_qc x)))
">
    <goal name="qbit_permutation&#39;vc.0.1.0" expl="asserted formula" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="qbit_permutation&#39;vc.0.1.0.0" expl="asserted formula" proved="true">
     <transf name="rewrite" proved="true" arg1="sequence&#39;spec1">
      <goal name="qbit_permutation&#39;vc.0.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="9"><result status="valid" time="2.99" steps="918388"/></proof>
      </goal>
      <goal name="qbit_permutation&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="width&#39;spec">
       <goal name="qbit_permutation&#39;vc.0.1.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.93" steps="917346"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutation&#39;vc.0.1.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="1.77" steps="669713"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutation&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.40" steps="690780"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.49" steps="794068"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.3" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutation&#39;vc.3.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.81" steps="669746"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.3.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.77" steps="669746"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.3.2" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.78" steps="669736"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.3.3" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.83" steps="669736"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.3.4" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.88" steps="683055"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.3.5" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.87" steps="683055"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.3.6" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.54" steps="794997"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.3.7" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.38" steps="794659"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.3.8" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.47" steps="669765"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutation&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.81" steps="669751"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.08" steps="818326"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.6" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutation&#39;vc.6.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.49" steps="691961"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.6.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.49" steps="691961"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.6.2" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.52" steps="691956"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.6.3" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.88" steps="691956"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.6.4" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.89" steps="705361"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.6.5" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.62" steps="705361"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.6.6" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.19" steps="819258"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.6.7" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.13" steps="818910"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.6.8" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.55" steps="691980"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutation&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.57" steps="691966"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.8" expl="assertion" proved="true">
  <transf name="replace" proved="true" arg1="c" arg2="(parallel (to_qc x1) (to_qc x))">
   <goal name="qbit_permutation&#39;vc.8.0" expl="assertion" proved="true">
   <proof prover="9"><result status="valid" time="2.74" steps="792338"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.8.1" expl="equality hypothesis" proved="true">
   <transf name="assert" proved="true" arg1="(pre c = pre (parallel (to_qc x1) (to_qc x)))">
    <goal name="qbit_permutation&#39;vc.8.1.0" expl="asserted formula" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="qbit_permutation&#39;vc.8.1.0.0" expl="asserted formula" proved="true">
     <transf name="rewrite" proved="true" arg1="parallel&#39;spec1">
      <goal name="qbit_permutation&#39;vc.8.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="9"><result status="valid" time="3.06" steps="918351"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutation&#39;vc.8.1.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="1.81" steps="669713"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutation&#39;vc.9" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.64" steps="793572"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.10" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.94" steps="669758"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.11" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.99" steps="669770"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.19" steps="814578"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.13" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.75" steps="792900"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.14" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutation&#39;vc.14.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.76" steps="669721"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.14.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.99" steps="669721"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.14.2" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.00" steps="669716"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.14.3" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.00" steps="669716"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.14.4" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.00" steps="682730"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.14.5" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.06" steps="682730"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.14.6" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.73" steps="794298"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.14.7" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.65" steps="794644"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.14.8" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.89" steps="669740"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutation&#39;vc.15" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.84" steps="669722"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.16" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.17" steps="817962"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.17" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutation&#39;vc.17.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.50" steps="691951"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.17.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.52" steps="691951"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.17.2" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.54" steps="691946"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.17.3" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.57" steps="691946"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.17.4" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.60" steps="705045"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.17.5" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.59" steps="705045"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.17.6" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.17" steps="818551"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.17.7" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.15" steps="818922"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.17.8" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.49" steps="691970"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutation&#39;vc.18" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.45" steps="691946"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.19" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutation&#39;vc.19.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="qbit_permutation&#39;vc.19.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="qbit_permutation&#39;vc.19.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="c" arg2="(sequence (to_qc x2) (to_qc x1))">
      <goal name="qbit_permutation&#39;vc.19.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="sequence_basis_ket">
       <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures4">
         <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="Ensures1">
           <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <proof prover="9"><result status="valid" time="1.56" steps="705680"/></proof>
           </goal>
           <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="assert" proved="true" arg1="(mem (qbit_permutation&#39;result&#39;unused&#39;unused3 @ i) (to_fset 0 (width (to_qc x2))))">
            <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
            <transf name="assert" proved="true" arg1="(mem i (to_fset 0 (width (to_qc x1)))
)">
             <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
             <transf name="apply" proved="true" arg1="set_mem_to_fset">
              <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="1.52" steps="691953"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.0.0.1.0.1" expl="asserted formula" proved="true">
             <proof prover="9"><result status="valid" time="1.75" steps="759653"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.23" steps="822939"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.51" steps="691953"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="qbit_permutation&#39;vc.19.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.91" steps="650068"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="qbit_permutation&#39;vc.19.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="2.04" steps="820069"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutation&#39;vc.19.1" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="c" arg2="(parallel (to_qc x2) (to_qc x1))">
    <goal name="qbit_permutation&#39;vc.19.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
     <goal name="qbit_permutation&#39;vc.19.1.0.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="qbit_permutation&#39;vc.19.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H3">
       <goal name="qbit_permutation&#39;vc.19.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="qbit_permutation&#39;vc.19.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="eliminate_if" proved="true" >
         <goal name="qbit_permutation&#39;vc.19.1.0.0.0.0.0.0" expl="VC for qbit_permutation" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="qbit_permutation&#39;vc.19.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <proof prover="9"><result status="valid" time="2.12" steps="831314"/></proof>
          </goal>
          <goal name="qbit_permutation&#39;vc.19.1.0.0.0.0.0.0.1" expl="postcondition" proved="true">
          <proof prover="9"><result status="valid" time="0.81" steps="661311"/></proof>
          </goal>
          <goal name="qbit_permutation&#39;vc.19.1.0.0.0.0.0.0.2" expl="postcondition" proved="true">
          <proof prover="9"><result status="valid" time="0.91" steps="661396"/></proof>
          </goal>
          <goal name="qbit_permutation&#39;vc.19.1.0.0.0.0.0.0.3" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="Ensures4">
           <goal name="qbit_permutation&#39;vc.19.1.0.0.0.0.0.0.3.0" expl="postcondition" proved="true">
           <proof prover="9"><result status="valid" time="2.06" steps="831184"/></proof>
           </goal>
           <goal name="qbit_permutation&#39;vc.19.1.0.0.0.0.0.0.3.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.38" steps="703879"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutation&#39;vc.19.1.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="2.10" steps="820176"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutation&#39;vc.19.2" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="c" arg2="swap">
    <goal name="qbit_permutation&#39;vc.19.2.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H3">
     <goal name="qbit_permutation&#39;vc.19.2.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="qbit_permutation&#39;vc.19.2.0.0.0" expl="postcondition" proved="true">
      <transf name="eliminate_if" proved="true" >
       <goal name="qbit_permutation&#39;vc.19.2.0.0.0.0" expl="VC for qbit_permutation" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="qbit_permutation&#39;vc.19.2.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="1.69" steps="702976"/></proof>
        </goal>
        <goal name="qbit_permutation&#39;vc.19.2.0.0.0.0.1" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="1.53" steps="702992"/></proof>
        </goal>
        <goal name="qbit_permutation&#39;vc.19.2.0.0.0.0.2" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="1.55" steps="716376"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutation&#39;vc.19.2.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="1.56" steps="690824"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutation&#39;vc.19.3" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="qbit_permutation&#39;vc.19.3.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="qbit_permutation&#39;vc.19.3.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="1.68" steps="704742"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutation&#39;vc.20" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutation&#39;vc.20.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H1">
    <goal name="qbit_permutation&#39;vc.20.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="bijectivity_is_transitive" arg2="with" arg3="(to_fset 0 (width c))">
     <goal name="qbit_permutation&#39;vc.20.0.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.61" steps="692032"/></proof>
     </goal>
     <goal name="qbit_permutation&#39;vc.20.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.65" steps="692032"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutation&#39;vc.20.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="qbit_permutation&#39;vc.20.1.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="qbit_permutation&#39;vc.20.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H1">
      <goal name="qbit_permutation&#39;vc.20.1.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="set_bijective1">
       <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="assert" proved="true" arg1="(mem (qbit_permutation&#39;result&#39;unused&#39;unused @ e) (to_fset 0 (width (to_qc x1))))">
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
            <transf name="apply" proved="true" arg1="auto_bijective_in">
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.11" steps="861873"/></proof>
             </goal>
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="2.51" steps="1032501"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="2.25" steps="1034459"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="assert" proved="true" arg1="(mem (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e - width (to_qc x1))) (to_fset 0 (width (to_qc x))))
">
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
            <transf name="apply" proved="true" arg1="auto_bijective_in">
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.07" steps="861886"/></proof>
             </goal>
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="2.48" steps="1033782"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="2.45" steps="1035699"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="case" proved="true" arg1="(e &lt; width (to_qc x1))">
          <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0" expl="true case (apply premises)" proved="true">
          <transf name="replace" proved="true" arg1="(if e &lt; width (to_qc x1) then qbit_permutation&#39;result&#39;unused&#39;unused @ e
       else (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e - width (to_qc x1))) + width (to_qc x1))" arg2="(qbit_permutation&#39;result&#39;unused&#39;unused e)
">
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="case" proved="true" arg1="(e&#39; &lt; width (to_qc x1))">
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
            <transf name="replace" proved="true" arg1="(if e&#39; &lt; width (to_qc x1)
       then qbit_permutation&#39;result&#39;unused&#39;unused @ e&#39;
       else (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e&#39; - width (to_qc x1)))
            + width (to_qc x1))" arg2="(qbit_permutation&#39;result&#39;unused&#39;unused @ e&#39;)">
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
             <transf name="apply" proved="true" arg1="get_injective" arg2="with" arg3="(to_fset 0 (width (to_qc x1)))">
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="1.90" steps="906601"/></proof>
              </goal>
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="2.56" steps="1028308"/></proof>
              </goal>
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="2.51" steps="1028308"/></proof>
              </goal>
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.0.0.3" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="1.13" steps="852148"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="1.72" steps="903399"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1" expl="false case (true case. apply premises)" proved="true">
            <transf name="replace" proved="true" arg1="(if e&#39; &lt; width (to_qc x1)
       then qbit_permutation&#39;result&#39;unused&#39;unused @ e&#39;
       else (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e&#39; - width (to_qc x1)))
            + width (to_qc x1))" arg2="((qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e&#39; - width (to_qc x1)))
            + width (to_qc x1))">
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.0" expl="false case (true case. apply premises)" proved="true">
             <transf name="assert" proved="true" arg1="(mem (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e&#39; - width (to_qc x1))) (to_fset 0 (width (to_qc x))))
">
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
              <transf name="apply" proved="true" arg1="auto_bijective_in">
               <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.07" steps="852163"/></proof>
               </goal>
               <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.43" steps="1029548"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.0.1" expl="false case (true case. apply premises)" proved="true">
              <transf name="assert" proved="true" arg1="(mem  (qbit_permutation&#39;result&#39;unused&#39;unused @ e) (to_fset 0 (width (to_qc x1))))
">
               <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
               <transf name="apply" proved="true" arg1="auto_bijective_in">
                <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.12" steps="852184"/></proof>
                </goal>
                <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.42" steps="1028973"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.0.1.1" expl="false case (true case. apply premises)" proved="true">
               <proof prover="9"><result status="valid" time="2.25" steps="1030777"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="1.75" steps="903388"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="1.79" steps="903382"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1" expl="false case (apply premises)" proved="true">
          <transf name="replace" proved="true" arg1="(if e &lt; width (to_qc x1) then qbit_permutation&#39;result&#39;unused&#39;unused @ e
       else (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e - width (to_qc x1)))
            + width (to_qc x1))" arg2="(qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e - width (to_qc x1))            + width (to_qc x1))">
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0" expl="false case (apply premises)" proved="true">
           <transf name="case" proved="true" arg1="(e&#39; &lt; width (to_qc x1))">
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0" expl="false case (true case. apply premises)" proved="true">
            <transf name="replace" proved="true" arg1="(if e&#39; &lt; width (to_qc x1)
       then qbit_permutation&#39;result&#39;unused&#39;unused @ e&#39;
       else (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e&#39; - width (to_qc x1)))
            + width (to_qc x1))" arg2="( qbit_permutation&#39;result&#39;unused&#39;unused @ e&#39;
       )">
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.0" expl="false case (true case. apply premises)" proved="true">
             <transf name="assert" proved="true" arg1="(mem (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e - width (to_qc x1))) (to_fset 0 (width (to_qc x))))
">
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
              <transf name="apply" proved="true" arg1="auto_bijective_in">
               <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.03" steps="852163"/></proof>
               </goal>
               <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.28" steps="1029606"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.0.1" expl="false case (true case. apply premises)" proved="true">
              <transf name="assert" proved="true" arg1="(mem (qbit_permutation&#39;result&#39;unused&#39;unused @ e&#39;) (to_fset 0 (width (to_qc x1))))
">
               <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.0.1.0" expl="asserted formula" proved="true">
               <transf name="apply" proved="true" arg1="auto_bijective_in">
                <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.10" steps="852184"/></proof>
                </goal>
                <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.45" steps="1029031"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.0.1.1" expl="false case (true case. apply premises)" proved="true">
               <proof prover="9"><result status="valid" time="2.45" steps="1030830"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="1.77" steps="903394"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1" expl="false case (apply premises)" proved="true">
            <transf name="replace" proved="true" arg1="(if e&#39; &lt; width (to_qc x1)
       then qbit_permutation&#39;result&#39;unused&#39;unused @ e&#39;
       else (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e&#39; - width (to_qc x1)))
            + width (to_qc x1))" arg2="(     (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e&#39; - width (to_qc x1)))
            + width (to_qc x1))">
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1.0" expl="false case (apply premises)" proved="true">
             <transf name="assert" proved="true" arg1="(forall a b c . a&lt;&gt; b -&gt; a+ c &lt;&gt; b+c)">
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1.0.0" expl="asserted formula" proved="true">
              <proof prover="9"><result status="valid" time="1.00" steps="852241"/></proof>
              </goal>
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1.0.1" expl="false case (apply premises)" proved="true">
              <transf name="apply" proved="true" arg1="h">
               <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1.0.1.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="get_injective" arg2="with" arg3="(to_fset 0 (width (to_qc x)))">
                <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.84" steps="906604"/></proof>
                </goal>
                <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.51" steps="1029579"/></proof>
                </goal>
                <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.52" steps="1029579"/></proof>
                </goal>
                <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1.0.1.0.3" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.17" steps="852258"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="1.71" steps="903383"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="1.72" steps="903381"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0" expl="apply premises" proved="true">
        <transf name="case" proved="true" arg1="(mem e&#39; (to_fset 0 (width (to_qc x1))))">
         <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.0" expl="true case (apply premises)" proved="true">
         <transf name="assert" proved="true" arg1="(exists e1:int.
   mem e1 (to_fset 0 (width (to_qc x1))) /\
   ((fun (i:int) -&gt;
       qbit_permutation&#39;result&#39;unused&#39;unused @ i
    )) e1  = e&#39;)">
          <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.0.0" expl="asserted formula" proved="true">
          <proof prover="9"><result status="valid" time="2.51" steps="1028175"/></proof>
          </goal>
          <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.0.1" expl="true case (apply premises)" proved="true">
          <transf name="destruct" proved="true" arg1="h">
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.0.1.0" expl="true case (apply premises)" proved="true">
           <transf name="exists" proved="true" arg1="e1">
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.0.1.0.0" proved="true">
            <proof prover="9"><result status="valid" time="2.47" steps="1031945"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1" expl="false case (apply premises)" proved="true">
         <transf name="assert" proved="true" arg1="(exists e1:int.
   mem e1 (to_fset 0 (width (to_qc x))) /\
   ((fun (i:int) -&gt;
       (qbit_permutation&#39;result&#39;unused&#39;unused1 @ i)    )) e1  = e&#39; - width (to_qc x1))
">
          <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1.0" expl="asserted formula" proved="true">
          <transf name="apply" proved="true" arg1="get_surjective" arg2="with" arg3="(to_fset 0 (width (to_qc x)))">
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.86" steps="904198"/></proof>
           </goal>
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1.0.1" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="2.52" steps="1029291"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1.1" expl="false case (apply premises)" proved="true">
          <transf name="destruct" proved="true" arg1="h">
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1.1.0" expl="false case (apply premises)" proved="true">
           <transf name="exists" proved="true" arg1="(e1 + width (to_qc x1))">
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1.1.0.0" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1.1.0.0.0" proved="true">
             <proof prover="9"><result status="valid" time="2.52" steps="1031351"/></proof>
             </goal>
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1.1.0.0.1" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1.1.0.0.1.0" proved="true">
              <proof prover="9"><result status="valid" time="2.52" steps="1029128"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutation&#39;vc.20.2" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="injective_is_bijective">
    <goal name="qbit_permutation&#39;vc.20.2.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="set_injective">
     <goal name="qbit_permutation&#39;vc.20.2.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="qbit_permutation&#39;vc.20.2.0.0.0" expl="apply premises" proved="true">
      <transf name="eliminate_let" proved="true" >
       <goal name="qbit_permutation&#39;vc.20.2.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.04" steps="897065"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutation&#39;vc.20.2.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="qbit_permutation&#39;vc.20.2.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.99" steps="896795"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutation&#39;vc.20.2.2" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.10" steps="648748"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutation&#39;vc.20.3" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="injective_is_bijective">
    <goal name="qbit_permutation&#39;vc.20.3.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="set_injective">
     <goal name="qbit_permutation&#39;vc.20.3.0.0" expl="apply premises" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="qbit_permutation&#39;vc.20.3.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="qbit_permutation&#39;vc.20.3.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.40" steps="772071"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutation&#39;vc.20.3.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="qbit_permutation&#39;vc.20.3.1.0" expl="apply premises" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="qbit_permutation&#39;vc.20.3.1.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.39" steps="771759"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutation&#39;vc.20.3.2" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.10" steps="648856"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="in_to_fset_qp&#39;vc" expl="VC for in_to_fset_qp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="in_to_fset_qp&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(mem i (to_fset 0 (width c)))">
   <goal name="in_to_fset_qp&#39;vc.0.0" expl="asserted formula" proved="true">
   <proof prover="9"><result status="valid" time="2.97" steps="874486"/></proof>
   </goal>
   <goal name="in_to_fset_qp&#39;vc.0.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(p_bijective (qbit_permutation c ) (to_fset 0 (width c)) (to_fset 0 (width c)))">
    <goal name="in_to_fset_qp&#39;vc.0.1.0" expl="asserted formula" proved="true">
    <transf name="instantiate" proved="true" arg1="get_bijective" arg2="(qbit_permutation c ),(to_fset 0 (width c)),(to_fset 0 (width c))">
     <goal name="in_to_fset_qp&#39;vc.0.1.0.0" expl="asserted formula" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="in_to_fset_qp&#39;vc.0.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="9"><result status="valid" time="2.35" steps="823233"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="in_to_fset_qp&#39;vc.0.1.1" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="2.20" steps="759467"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bound_qp&#39;vc" expl="VC for bound_qp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="bound_qp&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(mem (qbit_permutation c @ i) (to_fset 0 (width c)))">
   <goal name="bound_qp&#39;vc.0.0" expl="asserted formula" proved="true">
   <proof prover="9"><result status="valid" time="3.07" steps="884138"/></proof>
   </goal>
   <goal name="bound_qp&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.79" steps="815687"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="qbit_permute_sequence&#39;vc" expl="VC for qbit_permute_sequence" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="qbit_permute_sequence&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.16" steps="629833"/></proof>
  </goal>
  <goal name="qbit_permute_sequence&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="qbit_permute_sequence&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="qbit_permutes&#39;def10" arg2="result,(pre d),(pre e)">
    <goal name="qbit_permute_sequence&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="Hinst">
     <goal name="qbit_permute_sequence&#39;vc.1.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="qbit_permute_sequence&#39;vc.1.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.34" steps="752684"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="qbit_permute_sequence&#39;vc.1.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.29" steps="800958"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permute_sequence&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="qbit_permute_sequence&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="qbit_permutation&#39;def8" arg2="result">
    <goal name="qbit_permute_sequence&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="qbit_permute_sequence&#39;vc.2.0.0.0" expl="destruct premise" proved="true">
     <proof prover="9"><result status="valid" time="1.35" steps="752648"/></proof>
     </goal>
     <goal name="qbit_permute_sequence&#39;vc.2.0.0.1" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="Hinst" arg2="(pre d),(pre e)">
      <goal name="qbit_permute_sequence&#39;vc.2.0.0.1.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="3.27" steps="945376"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permute_sequence&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.02" steps="692549"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="qbit_permute_parallel&#39;vc" expl="VC for qbit_permute_parallel" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="qbit_permute_parallel&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="qbit_permute_parallel&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="qbit_permutes&#39;def7" arg2="result,(pre d),(pre e)">
    <goal name="qbit_permute_parallel&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="Hinst">
     <goal name="qbit_permute_parallel&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.36" steps="753197"/></proof>
     </goal>
     <goal name="qbit_permute_parallel&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.38" steps="801425"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permute_parallel&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="qbit_permute_parallel&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="qbit_permutation&#39;def7" arg2="result">
    <goal name="qbit_permute_parallel&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="qbit_permute_parallel&#39;vc.1.0.0.0" expl="destruct premise" proved="true">
     <proof prover="9"><result status="valid" time="1.36" steps="753161"/></proof>
     </goal>
     <goal name="qbit_permute_parallel&#39;vc.1.0.0.1" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="Hinst" arg2="(pre d),(pre e)">
      <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Hinst">
       <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0.0" expl="postcondition" proved="true">
        <transf name="eliminate_if" proved="true" >
         <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0.0.0" expl="VC for qbit_permute_parallel" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="to_qc_pre">
           <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0.0.0.0.0" expl="postcondition" proved="true">
           <proof prover="9"><result status="valid" time="1.31" steps="763643"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0.0.0.1" expl="postcondition" proved="true">
          <proof prover="9"><result status="valid" time="2.47" steps="834333"/></proof>
          </goal>
          <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0.0.0.2" expl="postcondition" proved="true">
          <proof prover="9"><result status="valid" time="2.43" steps="834363"/></proof>
          </goal>
          <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0.0.0.3" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="to_qc_pre">
           <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0.0.0.3.0" expl="postcondition" proved="true">
           <transf name="rewrite" proved="true" arg1="to_qc_pre">
            <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0.0.0.3.0.0" expl="postcondition" proved="true">
            <proof prover="9"><result status="valid" time="1.36" steps="763673"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.32" steps="753669"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permute_parallel&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.78" steps="818522"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ids_permute&#39;vc" expl="VC for ids_permute" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ids_permute&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="1.80" steps="671617"/></proof>
  </goal>
  <goal name="ids_permute&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.50" steps="671954"/></proof>
  </goal>
  <goal name="ids_permute&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.12" steps="650974"/></proof>
  </goal>
  <goal name="ids_permute&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.93" steps="693348"/></proof>
  </goal>
  <goal name="ids_permute&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids_permute&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.91" steps="793899"/></proof>
   </goal>
   <goal name="ids_permute&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.04" steps="817330"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ids_permute&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids_permute&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="ids_permute&#39;vc.5.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.47" steps="671880"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ids_permute&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.57" steps="706605"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ids_permute&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.45" steps="693749"/></proof>
  </goal>
  <goal name="ids_permute&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids_permute&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="ids_permute&#39;vc.7.0.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="6.45" steps="9799130"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ids_permute&#39;vc.7.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="ids_permute&#39;vc.7.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures4">
     <goal name="ids_permute&#39;vc.7.1.0.0" expl="postcondition" proved="true">
     <transf name="eliminate_if" proved="true" >
      <goal name="ids_permute&#39;vc.7.1.0.0.0" expl="VC for ids_permute" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="ids_permute&#39;vc.7.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="1.36" steps="705346"/></proof>
       </goal>
       <goal name="ids_permute&#39;vc.7.1.0.0.0.1" expl="postcondition" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="ids_permute&#39;vc.7.1.0.0.0.1.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="qbit_permutation&#39;def1">
         <goal name="ids_permute&#39;vc.7.1.0.0.0.1.0.0" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="2.48" steps="974650"/></proof>
         </goal>
         <goal name="ids_permute&#39;vc.7.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.92" steps="851296"/></proof>
         </goal>
         <goal name="ids_permute&#39;vc.7.1.0.0.0.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.99" steps="804937"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permute_place&#39;vc" expl="VC for permute_place" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permute_place&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.52" steps="672393"/></proof>
  </goal>
  <goal name="permute_place&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.13" steps="651389"/></proof>
  </goal>
  <goal name="permute_place&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.16" steps="651392"/></proof>
  </goal>
  <goal name="permute_place&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_place&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.22" steps="644092"/></proof>
   </goal>
   <goal name="permute_place&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.93" steps="693771"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_place&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_place&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.80" steps="672061"/></proof>
   </goal>
   <goal name="permute_place&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.13" steps="651561"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_place&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_place&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permute_place&#39;vc.5.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.57" steps="693174"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="permute_place&#39;vc.5.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permute_place&#39;vc.5.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures3">
     <goal name="permute_place&#39;vc.5.1.0.0" expl="postcondition" proved="true">
     <transf name="eliminate_if" proved="true" >
      <goal name="permute_place&#39;vc.5.1.0.0.0" expl="VC for permute_place" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="permute_place&#39;vc.5.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="0.80" steps="663020"/></proof>
       </goal>
       <goal name="permute_place&#39;vc.5.1.0.0.0.1" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="0.82" steps="663049"/></proof>
       </goal>
       <goal name="permute_place&#39;vc.5.1.0.0.0.2" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="0.82" steps="663066"/></proof>
       </goal>
       <goal name="permute_place&#39;vc.5.1.0.0.0.3" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="1.89" steps="829984"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permute_place&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.60" steps="693599"/></proof>
  </goal>
  <goal name="permute_place&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.13" steps="651523"/></proof>
  </goal>
  <goal name="permute_place&#39;vc.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.14" steps="651526"/></proof>
  </goal>
  <goal name="permute_place&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_place&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.00" steps="664422"/></proof>
   </goal>
   <goal name="permute_place&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.52" steps="694032"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_place&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.53" steps="693860"/></proof>
  </goal>
  <goal name="permute_place&#39;vc.11" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_place&#39;vc.11.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permute_place&#39;vc.11.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="2.27" steps="819843"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="permute_place&#39;vc.11.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permute_place&#39;vc.11.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures3">
     <goal name="permute_place&#39;vc.11.1.0.0" expl="postcondition" proved="true">
     <transf name="eliminate_if" proved="true" >
      <goal name="permute_place&#39;vc.11.1.0.0.0" expl="VC for permute_place" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="permute_place&#39;vc.11.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="1.27" steps="705732"/></proof>
       </goal>
       <goal name="permute_place&#39;vc.11.1.0.0.0.1" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="1.41" steps="706040"/></proof>
       </goal>
       <goal name="permute_place&#39;vc.11.1.0.0.0.2" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.79"/></proof>
       </goal>
       <goal name="permute_place&#39;vc.11.1.0.0.0.3" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="2.28" steps="843886"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permute_plus_one&#39;vc" expl="VC for permute_plus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permute_plus_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.09" steps="631597"/></proof>
  </goal>
  <goal name="permute_plus_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.79" steps="672502"/></proof>
  </goal>
  <goal name="permute_plus_one&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.92" steps="673171"/></proof>
  </goal>
  <goal name="permute_plus_one&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.12" steps="651977"/></proof>
  </goal>
  <goal name="permute_plus_one&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.15" steps="651980"/></proof>
  </goal>
  <goal name="permute_plus_one&#39;vc.5" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures2">
   <goal name="permute_plus_one&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="permute_plus_one&#39;vc.5.0.0" expl="VC for permute_plus_one" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="permute_plus_one&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <proof prover="6"><result status="valid" time="2.87" steps="122277"/></proof>
     </goal>
     <goal name="permute_plus_one&#39;vc.5.0.0.1" expl="postcondition" proved="true">
     <proof prover="6"><result status="valid" time="2.84" steps="121943"/></proof>
     </goal>
     <goal name="permute_plus_one&#39;vc.5.0.0.2" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="1.83" steps="705511"/></proof>
     </goal>
     <goal name="permute_plus_one&#39;vc.5.0.0.3" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="1.83" steps="705258"/></proof>
     </goal>
     <goal name="permute_plus_one&#39;vc.5.0.0.4" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="1.88" steps="705287"/></proof>
     </goal>
     <goal name="permute_plus_one&#39;vc.5.0.0.5" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="1.16" steps="663516"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permute_plus_one&#39;vc.5.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="1.11" steps="652032"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="up_to_image&#39;vc" expl="VC for up_to_image" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="up_to_image&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.44" steps="673454"/></proof>
  </goal>
  <goal name="up_to_image&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.86" steps="632204"/></proof>
  </goal>
  <goal name="up_to_image&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.44" steps="673480"/></proof>
  </goal>
  <goal name="up_to_image&#39;vc.3" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="up_to_image&#39;vc.3.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="0.92" steps="652527"/></proof>
   </goal>
   <goal name="up_to_image&#39;vc.3.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.10" steps="652540"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="up_to_image&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="up_to_image&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.84" steps="694214"/></proof>
   </goal>
   <goal name="up_to_image&#39;vc.4.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.82" steps="694570"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="up_to_image&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="up_to_image&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.07" steps="652553"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="up_to_image&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.76" steps="694962"/></proof>
  </goal>
  <goal name="up_to_image&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.05" steps="652754"/></proof>
  </goal>
  <goal name="up_to_image&#39;vc.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.07" steps="652757"/></proof>
  </goal>
  <goal name="up_to_image&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="up_to_image&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.87" steps="652380"/></proof>
   </goal>
   <goal name="up_to_image&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.53" steps="695110"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="up_to_image&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="up_to_image&#39;vc.10.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.90" steps="652383"/></proof>
   </goal>
   <goal name="up_to_image&#39;vc.10.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.12" steps="652843"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="up_to_image&#39;vc.11" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="up_to_image&#39;vc.11.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="up_to_image&#39;vc.11.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.56" steps="695189"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="up_to_image&#39;vc.11.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="up_to_image&#39;vc.11.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures3">
     <goal name="up_to_image&#39;vc.11.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures8">
      <goal name="up_to_image&#39;vc.11.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures5">
       <goal name="up_to_image&#39;vc.11.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="eliminate_if" proved="true" >
        <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0" expl="VC for up_to_image" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.87" steps="664544"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.1" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.90" steps="664584"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.2" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.84" steps="664584"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.3" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.83" steps="664700"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.4" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.81" steps="664723"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.5" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.84" steps="664724"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.6" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.84" steps="664703"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.7" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.86" steps="664726"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.8" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.85" steps="664727"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.9" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.84" steps="664703"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.10" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.87" steps="664703"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.11" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.50" steps="706047"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.12" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.91" steps="664696"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.13" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.85" steps="664719"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.14" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.84" steps="664720"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.15" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.86" steps="664687"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.16" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.82" steps="664722"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.17" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.35" steps="706673"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.18" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.85" steps="664699"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.19" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.36" steps="706430"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.20" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.84" steps="664714"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="up_to_image&#39;vc.11.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.42" steps="696189"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="up_to_image&#39;vc.11.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.81" steps="652899"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="down_to_image&#39;vc" expl="VC for down_to_image" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="down_to_image&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.43" steps="674202"/></proof>
  </goal>
  <goal name="down_to_image&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.44" steps="674245"/></proof>
  </goal>
  <goal name="down_to_image&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.09" steps="632998"/></proof>
  </goal>
  <goal name="down_to_image&#39;vc.3" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="down_to_image&#39;vc.3.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="0.87" steps="653265"/></proof>
   </goal>
   <goal name="down_to_image&#39;vc.3.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="0.89" steps="653274"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="down_to_image&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="down_to_image&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.12" steps="653247"/></proof>
   </goal>
   <goal name="down_to_image&#39;vc.4.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.56" steps="695744"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="down_to_image&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="down_to_image&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.51" steps="695417"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="down_to_image&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.84" steps="696066"/></proof>
  </goal>
  <goal name="down_to_image&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.10" steps="653491"/></proof>
  </goal>
  <goal name="down_to_image&#39;vc.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.90" steps="653494"/></proof>
  </goal>
  <goal name="down_to_image&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="down_to_image&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.92" steps="653102"/></proof>
   </goal>
   <goal name="down_to_image&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.53" steps="696217"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="down_to_image&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="down_to_image&#39;vc.10.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.90" steps="653105"/></proof>
   </goal>
   <goal name="down_to_image&#39;vc.10.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.94" steps="653580"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="down_to_image&#39;vc.11" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="down_to_image&#39;vc.11.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="down_to_image&#39;vc.11.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.61" steps="696368"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="down_to_image&#39;vc.11.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="down_to_image&#39;vc.11.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures3">
     <goal name="down_to_image&#39;vc.11.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures8">
      <goal name="down_to_image&#39;vc.11.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures5">
       <goal name="down_to_image&#39;vc.11.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="eliminate_if" proved="true" >
        <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0" expl="VC for down_to_image" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.97" steps="665395"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.1" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.02" steps="665448"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.2" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.02" steps="665448"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.3" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.00" steps="665563"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.4" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.00" steps="665588"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.5" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.94" steps="665589"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.6" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.94" steps="665557"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.7" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.05" steps="665582"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.8" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.02" steps="665583"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.9" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.99" steps="665564"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.10" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.01" steps="665566"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.11" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.62" steps="706902"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.12" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.14" steps="678516"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.13" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.94" steps="665577"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.14" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.80" steps="707504"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.15" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.08" steps="665555"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.16" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.08" steps="665580"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.17" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.02" steps="665581"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.18" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.06" steps="665555"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.19" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.66" steps="707247"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.20" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.02" steps="665572"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="down_to_image&#39;vc.11.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.68" steps="699897"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="down_to_image&#39;vc.11.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.94" steps="653636"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permute_up&#39;vc" expl="VC for permute_up" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permute_up&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.49" steps="674970"/></proof>
  </goal>
  <goal name="permute_up&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_up&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.09" steps="633715"/></proof>
   </goal>
   <goal name="permute_up&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.09" steps="633715"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_up&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_up&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.11" steps="633736"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_up&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_up&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.13" steps="654001"/></proof>
   </goal>
   <goal name="permute_up&#39;vc.3.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.52" steps="699403"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_up&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_up&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.54" steps="699054"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_up&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.47" steps="699274"/></proof>
  </goal>
  <goal name="permute_up&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.87" steps="654277"/></proof>
  </goal>
  <goal name="permute_up&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.84" steps="654280"/></proof>
  </goal>
  <goal name="permute_up&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_up&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.87" steps="653838"/></proof>
   </goal>
   <goal name="permute_up&#39;vc.8.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.52" steps="699402"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_up&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_up&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.88" steps="653841"/></proof>
   </goal>
   <goal name="permute_up&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.89" steps="654366"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_up&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_up&#39;vc.10.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permute_up&#39;vc.10.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.57" steps="697245"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="permute_up&#39;vc.10.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permute_up&#39;vc.10.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures3">
     <goal name="permute_up&#39;vc.10.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures8">
      <goal name="permute_up&#39;vc.10.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures5">
       <goal name="permute_up&#39;vc.10.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="eliminate_if" proved="true" >
        <goal name="permute_up&#39;vc.10.1.0.0.0.0.0" expl="VC for permute_up" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.88" steps="666308"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.1" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.88" steps="666322"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.2" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.43" steps="708239"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.3" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.89" steps="666483"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.4" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.88" steps="666494"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.5" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.87" steps="666498"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.6" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.90" steps="666492"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.7" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.92" steps="666503"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.8" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.89" steps="666507"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.9" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.89" steps="666486"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.10" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.45" steps="707991"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.11" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.51" steps="708271"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.12" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.89" steps="666462"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.13" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.92" steps="666482"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.14" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.91" steps="666486"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.15" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.92" steps="666480"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.16" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.90" steps="666491"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.17" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.54" steps="707654"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.18" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.92" steps="666474"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.19" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.41" steps="708307"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.20" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.88" steps="666480"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="permute_up&#39;vc.10.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.44" steps="700309"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="permute_up&#39;vc.10.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.82" steps="654422"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permute_atom&#39;vc" expl="VC for permute_atom" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permute_atom&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_atom&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.14" steps="634407"/></proof>
   </goal>
   <goal name="permute_atom&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.12" steps="634407"/></proof>
   </goal>
   <goal name="permute_atom&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.16" steps="634422"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_atom&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_atom&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.13" steps="634434"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_atom&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_atom&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.12" steps="634411"/></proof>
   </goal>
   <goal name="permute_atom&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.83" steps="675343"/></proof>
   </goal>
   <goal name="permute_atom&#39;vc.2.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.11" steps="634426"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_atom&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_atom&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.08" steps="634446"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_atom&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_atom&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.10" steps="654634"/></proof>
   </goal>
   <goal name="permute_atom&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.12" steps="654638"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_atom&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_atom&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.13" steps="654637"/></proof>
   </goal>
   <goal name="permute_atom&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.11" steps="654641"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_atom&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_atom&#39;vc.6.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.81" steps="823980"/></proof>
   </goal>
   <goal name="permute_atom&#39;vc.6.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.84" steps="826018"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_atom&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_atom&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.77" steps="826256"/></proof>
   </goal>
   <goal name="permute_atom&#39;vc.7.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.79" steps="824219"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_atom&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_atom&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.82" steps="825180"/></proof>
   </goal>
   <goal name="permute_atom&#39;vc.8.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.76" steps="825096"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutation_circuit_pre&#39;vc" expl="VC for permutation_circuit_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permutation_circuit_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.88" steps="656193"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.17" steps="826930"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.88" steps="656990"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="1.48" steps="700869"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.91" steps="656200"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.91" steps="656204"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.56" steps="701251"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.89" steps="656491"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.93" steps="657200"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.9" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.11" steps="657354"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permutation_circuit_pre&#39;vc.10.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="2.78" steps="828703"/></proof>
   </goal>
   <goal name="permutation_circuit_pre&#39;vc.10.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="2.81" steps="828700"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.11" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.94" steps="702143"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.12" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.93" steps="657584"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.13" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.17" steps="657587"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.95" steps="702606"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.89" steps="703443"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.16" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H2">
   <goal name="permutation_circuit_pre&#39;vc.16.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permutation_circuit_pre&#39;vc.16.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="permutation_circuit_pre&#39;vc.16.0.0.0" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(i = k)">
      <goal name="permutation_circuit_pre&#39;vc.16.0.0.0.0" expl="true case (postcondition)" proved="true">
      <proof prover="9"><result status="valid" time="2.21" steps="831735"/></proof>
      </goal>
      <goal name="permutation_circuit_pre&#39;vc.16.0.0.0.1" expl="false case (postcondition)" proved="true">
      <proof prover="9"><result status="valid" time="2.26" steps="831654"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutation_circuit_pre&#39;vc.16.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permutation_circuit_pre&#39;vc.16.1.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="permutation_circuit_pre&#39;vc.16.1.0.0" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(i = k)">
      <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.0" expl="true case (postcondition)" proved="true">
      <proof prover="9"><result status="valid" time="2.34" steps="833655"/></proof>
      </goal>
      <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.1" expl="false case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="H3">
       <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.1.0" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="H11">
        <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.1.0.0" expl="false case (postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="permute_atom&#39;spec">
         <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
         <proof prover="9"><result status="valid" time="2.40" steps="958787"/></proof>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.10" steps="785829"/></proof>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.1.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="2.35" steps="957188"/></proof>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.1.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="2.43" steps="974854"/></proof>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.1.0.0.4" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="2.42" steps="957792"/></proof>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.1.0.0.5" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="2.56" steps="977905"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.17" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H2">
   <goal name="permutation_circuit_pre&#39;vc.17.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permutation_circuit_pre&#39;vc.17.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="permutation_circuit_pre&#39;vc.17.0.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="2.41" steps="845136"/></proof>
     </goal>
     <goal name="permutation_circuit_pre&#39;vc.17.0.0.1" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(k &lt;= (qbit_permutation result @ (c_inv_func_int f n @ i)) )">
      <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0" expl="true case (postcondition)" proved="true">
      <transf name="assert" proved="true" arg1="((qbit_permutation result @ (c_inv_func_int f n @ i))  = i)">
       <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0" expl="asserted formula" proved="true">
       <transf name="case" proved="true" arg1="((qbit_permutation result @ (c_inv_func_int f n @ i)) &lt;&gt; i)">
        <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.0" expl="asserted formula (true case)" proved="true">
        <transf name="assert" proved="true" arg1="((qbit_permutation result @ (c_inv_func_int f n @ i)) &lt;&gt; (qbit_permutation result @ (c_inv_func_int f n @ (qbit_permutation result @ (c_inv_func_int f n @ i)))) )">
         <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
         <transf name="apply" proved="true" arg1="get_injective" arg2="with" arg3="(to_fset 0 n)">
          <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="bijective_is_injective" arg2="with" arg3="(to_fset 0 n)">
            <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="2.00" steps="832081"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.55" steps="895929"/></proof>
          </goal>
          <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.65" steps="911796"/></proof>
          </goal>
          <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.49" steps="846325"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.0.1" expl="asserted formula (true case)" proved="true">
         <proof prover="9"><result status="valid" time="2.47" steps="845869"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.1" expl="asserted formula (false case)" proved="true">
        <proof prover="9"><result status="valid" time="0.94" steps="657381"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.1" expl="true case (postcondition)" proved="true">
       <proof prover="9"><result status="valid" time="1.56" steps="701920"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.1" expl="false case (postcondition)" proved="true">
      <proof prover="9"><result status="valid" time="0.97" steps="657383"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutation_circuit_pre&#39;vc.17.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permutation_circuit_pre&#39;vc.17.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="permutation_circuit_pre&#39;vc.17.1.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="2.48" steps="850573"/></proof>
     </goal>
     <goal name="permutation_circuit_pre&#39;vc.17.1.0.1" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(k &lt;= (qbit_permutation result @ (c_inv_func_int f n @ i)) )">
      <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0" expl="true case (postcondition)" proved="true">
      <transf name="assert" proved="true" arg1="((qbit_permutation result @ (c_inv_func_int f n @ i))  = i)">
       <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0" expl="asserted formula" proved="true">
       <transf name="case" proved="true" arg1="((qbit_permutation result @ (c_inv_func_int f n @ i)) &lt;&gt; i)">
        <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.0" expl="asserted formula (true case)" proved="true">
        <transf name="assert" proved="true" arg1="((qbit_permutation result @ (c_inv_func_int f n @ i)) &lt;&gt; (qbit_permutation result @ (c_inv_func_int f n @ (qbit_permutation result @ (c_inv_func_int f n @ i)))) )">
         <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.0.0" expl="asserted formula" proved="true">
         <transf name="apply" proved="true" arg1="get_injective" arg2="with" arg3="(to_fset 0 n)">
          <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="bijective_is_injective" arg2="with" arg3="(to_fset 0 n)">
            <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="1.96" steps="833633"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.51" steps="900844"/></proof>
          </goal>
          <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="3.06" steps="917656"/></proof>
          </goal>
          <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.83" steps="853954"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.0.1" expl="asserted formula (true case)" proved="true">
         <proof prover="9"><result status="valid" time="2.48" steps="851975"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.1" expl="asserted formula (false case)" proved="true">
        <proof prover="9"><result status="valid" time="0.93" steps="657900"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.1" expl="true case (postcondition)" proved="true">
       <proof prover="9"><result status="valid" time="1.86" steps="703083"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.1" expl="false case (postcondition)" proved="true">
      <proof prover="9"><result status="valid" time="0.92" steps="657902"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutation_circuit&#39;vc" expl="VC for permutation_circuit" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permutation_circuit&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.94" steps="657035"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.95" steps="657039"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.16" steps="657058"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.97" steps="657273"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.18" steps="657276"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.5" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(qbit_permutation result @ i)" arg2="(qbit_permutation result @ (c_inv_func_int f n (f i)))
">
   <goal name="permutation_circuit&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures3">
    <goal name="permutation_circuit&#39;vc.5.0.0" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="(mem (f i)  (to_fset 0 (width result)) )
">
     <goal name="permutation_circuit&#39;vc.5.0.0.0" expl="asserted formula" proved="true">
     <transf name="instantiate" proved="true" arg1="get_bijective" arg2="f,(to_fset 0 n),(to_fset 0 n)">
      <goal name="permutation_circuit&#39;vc.5.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="permutation_circuit&#39;vc.5.0.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="replace" proved="true" arg1="(width  result)" arg2="n">
        <goal name="permutation_circuit&#39;vc.5.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <transf name="apply" proved="true" arg1="Hinst3">
         <goal name="permutation_circuit&#39;vc.5.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.45" steps="786738"/></proof>
         </goal>
         <goal name="permutation_circuit&#39;vc.5.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="3.51" steps="1034190"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="permutation_circuit&#39;vc.5.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="1.47" steps="786738"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="permutation_circuit&#39;vc.5.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.69" steps="830147"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutation_circuit&#39;vc.5.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="2.61" steps="828780"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permutation_circuit&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permutation_circuit&#39;vc.6.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="2.63" steps="827603"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_apply">
   <goal name="permutation_circuit&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
    <goal name="permutation_circuit&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
     <goal name="permutation_circuit&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="circ_to_pps_range">
      <goal name="permutation_circuit&#39;vc.7.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="circ_to_pps_angle">
       <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="circ_to_pps_width">
        <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="qbit_permutes&#39;spec">
          <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="qbit_permutes&#39;spec1">
           <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures3">
            <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
             <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
              <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
               <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
                <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
                <transf name="apply" proved="true" arg1="bv_to_ket_eq">
                 <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="make_bv_length">
                  <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="make_bv_length">
                   <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.15" steps="786577"/></proof>
                   </goal>
                   <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.14" steps="960024"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.22" steps="832410"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="split_all_full" proved="true" >
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                     <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.04" steps="961025"/></proof>
                     </goal>
                     <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.13" steps="962490"/></proof>
                     </goal>
                     <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.25" steps="836603"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.05" steps="961025"/></proof>
                    </goal>
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.66" steps="962490"/></proof>
                    </goal>
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.32" steps="836603"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.29" steps="832410"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                     <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="circ_to_pps_basis_ket">
                        <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.57" steps="982795"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.31" steps="960122"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.38" steps="786628"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                       <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.64" steps="961081"/></proof>
                       </goal>
                       <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.0.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.03" steps="962547"/></proof>
                       </goal>
                       <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.0.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.37" steps="836675"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                       <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.1.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.27" steps="961081"/></proof>
                       </goal>
                       <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.1.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.21" steps="962547"/></proof>
                       </goal>
                       <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.1.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.43" steps="836675"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.39" steps="786628"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.47" steps="1032110"/></proof>
                      </goal>
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.46" steps="1031998"/></proof>
                      </goal>
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0.2" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.54" steps="901594"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.1.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.37" steps="1032110"/></proof>
                      </goal>
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.1.1" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.27" steps="1031998"/></proof>
                      </goal>
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.1.2" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.55" steps="901594"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.52" steps="897454"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="1.49" steps="786579"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.28" steps="832410"/></proof>
              </goal>
              <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.42" steps="786577"/></proof>
              </goal>
              <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="scalar_ket_l">
                <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                 <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="make_bv_length">
                  <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.47" steps="786577"/></proof>
                  </goal>
                  <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.33" steps="961025"/></proof>
                    </goal>
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.16" steps="962490"/></proof>
                    </goal>
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.28" steps="836603"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.27" steps="961025"/></proof>
                    </goal>
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.31" steps="962490"/></proof>
                    </goal>
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.41" steps="836603"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.31" steps="832410"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="3.28" steps="959786"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.44" steps="786579"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.37" steps="786579"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="permutation_circuit&#39;vc.7.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.89" steps="715614"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="permutation_circuit&#39;vc.7.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.96" steps="715751"/></proof>
    </goal>
    <goal name="permutation_circuit&#39;vc.7.0.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.60" steps="702507"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="permutation_circuit&#39;vc.7.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="1.87" steps="702530"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.76" steps="842596"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.91" steps="702549"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.94" steps="657773"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.92" steps="702593"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="with_permutation&#39;vc" expl="VC for with_permutation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="with_permutation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.94" steps="658057"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.94" steps="658061"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.92" steps="658579"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.3" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.3.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="2.66" steps="799453"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.4" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sequence_ancillas">
     <goal name="with_permutation&#39;vc.4.0.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="2.66" steps="799092"/></proof>
     </goal>
     <goal name="with_permutation&#39;vc.4.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.15" steps="658414"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.05" steps="703473"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.6" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sequence_range">
     <goal name="with_permutation&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="1.14" steps="658466"/></proof>
     </goal>
     <goal name="with_permutation&#39;vc.6.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.12" steps="658448"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.7" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sequence_angle">
     <goal name="with_permutation&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="with_permutation&#39;vc.7.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_zero_add">
       <goal name="with_permutation&#39;vc.7.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="ang_ind&#39;def">
        <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="ang_ind&#39;def">
         <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="apply" proved="true" arg1="pps&#39;invariant">
           <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="3.34" steps="957871"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.58" steps="821575"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="with_permutation&#39;vc.7.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.00" steps="704183"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="with_permutation&#39;vc.7.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.93" steps="658469"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.8" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sequence_basis_ket">
     <goal name="with_permutation&#39;vc.8.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="with_permutation&#39;vc.8.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="with_permutation&#39;vc.8.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="basis_ket_invariant">
        <goal name="with_permutation&#39;vc.8.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="with_permutation&#39;vc.8.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="3.24" steps="957140"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="with_permutation&#39;vc.8.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="with_permutation&#39;vc.8.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.55" steps="821772"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="with_permutation&#39;vc.8.0.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="with_permutation&#39;vc.8.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.42" steps="807614"/></proof>
         </goal>
         <goal name="with_permutation&#39;vc.8.0.0.0.0.0.2.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.44" steps="807625"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="with_permutation&#39;vc.8.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.94" steps="658594"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.93" steps="658996"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.10" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.92" steps="658041"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.11" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.90" steps="658749"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.12" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.91" steps="658753"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.13" expl="precondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.13.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.80" steps="704103"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.14" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.14.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.14.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="2.58" steps="802085"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.15" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.15.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.15.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sequence_ancillas">
     <goal name="with_permutation&#39;vc.15.0.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="2.24" steps="802006"/></proof>
     </goal>
     <goal name="with_permutation&#39;vc.15.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.85" steps="704254"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.16" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.16.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.16.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.75" steps="704991"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.17" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.17.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.17.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="2.39" steps="802593"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.18" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.18.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.18.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sequence_angle">
     <goal name="with_permutation&#39;vc.18.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
      <goal name="with_permutation&#39;vc.18.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="Ensures8">
      </transf>
      </goal>
      <goal name="with_permutation&#39;vc.18.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.97" steps="788952"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="with_permutation&#39;vc.18.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.62" steps="704325"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.19" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.19.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.19.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sequence_basis_ket">
     <goal name="with_permutation&#39;vc.19.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="with_permutation&#39;vc.19.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="with_permutation&#39;vc.19.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec3">
        <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="sequence_basis_ket">
          <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="apply" proved="true" arg1="basis_ket_invariant">
            <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="2.78" steps="959253"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="qbit_permutes&#39;spec1">
               <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.49" steps="808777"/></proof>
               </goal>
               <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="2.69" steps="958580"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="2.69" steps="958604"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.75" steps="958372"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="with_permutation&#39;vc.19.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.22" steps="808740"/></proof>
        </goal>
        <goal name="with_permutation&#39;vc.19.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.15" steps="808724"/></proof>
        </goal>
        <goal name="with_permutation&#39;vc.19.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.15" steps="808733"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="with_permutation&#39;vc.19.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.39" steps="704480"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.20" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="with_permutation&#39;vc.20.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="with_permutation&#39;vc.20.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="with_permutation&#39;vc.20.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
      <goal name="with_permutation&#39;vc.20.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
       <goal name="with_permutation&#39;vc.20.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="with_permutation&#39;vc.20.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="pps&#39;invariant1">
         <goal name="with_permutation&#39;vc.20.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="with_permutation&#39;vc.20.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.61" steps="971069"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="with_permutation&#39;vc.20.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.18" steps="808898"/></proof>
         </goal>
         <goal name="with_permutation&#39;vc.20.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="with_permutation&#39;vc.20.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.61" steps="958743"/></proof>
          </goal>
          <goal name="with_permutation&#39;vc.20.0.0.0.0.0.0.2.1" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.62" steps="959738"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="with_permutation&#39;vc.20.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.91" steps="660071"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.91" steps="660209"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="c_swap_int&#39;vc" expl="VC for c_swap_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="c_swap_int&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.31" steps="826335"/></proof>
  </goal>
  <goal name="c_swap_int&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.36" steps="828535"/></proof>
  </goal>
  <goal name="c_swap_int&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.25" steps="827279"/></proof>
  </goal>
  <goal name="c_swap_int&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="c_swap_int&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_bijective1">
    <goal name="c_swap_int&#39;vc.3.0.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="2.74" steps="1039378"/></proof>
    </goal>
    <goal name="c_swap_int&#39;vc.3.0.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="2.01" steps="919160"/></proof>
    </goal>
    <goal name="c_swap_int&#39;vc.3.0.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="c_swap_int&#39;vc.3.0.2.0" expl="apply premises" proved="true">
     <transf name="exists" proved="true" arg1="(if e&#39; = t1 then t2 else if e&#39; = t2 then t1 else e&#39;)">
      <goal name="c_swap_int&#39;vc.3.0.2.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="c_swap_int&#39;vc.3.0.2.0.0.0" proved="true">
       <proof prover="9"><result status="valid" time="2.60" steps="1039296"/></proof>
       </goal>
       <goal name="c_swap_int&#39;vc.3.0.2.0.0.1" proved="true">
       <proof prover="9"><result status="valid" time="1.97" steps="915531"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="c_swap_int&#39;vc.4" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="c_swap_int&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="c_inv_func_int&#39;def">
    <goal name="c_swap_int&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="goal_comm">
     <goal name="c_swap_int&#39;vc.4.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="unic_inverse_c">
      <goal name="c_swap_int&#39;vc.4.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="0.93" steps="659039"/></proof>
      </goal>
      <goal name="c_swap_int&#39;vc.4.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.54" steps="711811"/></proof>
      </goal>
      <goal name="c_swap_int&#39;vc.4.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="0.85" steps="659048"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="c_swap_int&#39;vc.4.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.87" steps="659039"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="with_int_swap&#39;vc" expl="VC for with_int_swap" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="with_int_swap&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.11" steps="639546"/></proof>
  </goal>
  <goal name="with_int_swap&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.13" steps="639559"/></proof>
  </goal>
  <goal name="with_int_swap&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.12" steps="660260"/></proof>
  </goal>
  <goal name="with_int_swap&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.13" steps="660830"/></proof>
  </goal>
  <goal name="with_int_swap&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.11" steps="660833"/></proof>
  </goal>
  <goal name="with_int_swap&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.15" steps="660836"/></proof>
  </goal>
  <goal name="with_int_swap&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.93" steps="660839"/></proof>
  </goal>
  <goal name="with_int_swap&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures7">
   <goal name="with_int_swap&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="ang_ind_invariant">
    <goal name="with_int_swap&#39;vc.7.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="with_int_swap&#39;vc.7.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="with_int_swap&#39;vc.7.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.99" steps="718669"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="with_int_swap&#39;vc.7.0.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="0.91" steps="660842"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_int_swap&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures7">
   <goal name="with_int_swap&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(c_inv_func_int (c_swap_int t1 t2 (width c)) (width c) @ i)" arg2="t2">
    <goal name="with_int_swap&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="basis_ket_invariant">
     <goal name="with_int_swap&#39;vc.8.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="with_int_swap&#39;vc.8.0.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="with_int_swap&#39;vc.8.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.08" steps="719214"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="with_int_swap&#39;vc.8.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.18" steps="660981"/></proof>
     </goal>
     <goal name="with_int_swap&#39;vc.8.0.0.2" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="0.90" steps="660992"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="with_int_swap&#39;vc.8.0.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="2.71" steps="836410"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="with_int_swap&#39;vc.8.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="1.84" steps="704874"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="with_int_swap&#39;vc.9" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures8">
   <goal name="with_int_swap&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(c_inv_func_int (c_swap_int t1 t2 (width c)) (width c) @ i)" arg2="t1">
    <goal name="with_int_swap&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="basis_ket_invariant">
     <goal name="with_int_swap&#39;vc.9.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="with_int_swap&#39;vc.9.0.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="with_int_swap&#39;vc.9.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.00" steps="719474"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="with_int_swap&#39;vc.9.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.13" steps="661181"/></proof>
     </goal>
     <goal name="with_int_swap&#39;vc.9.0.0.2" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="0.91" steps="661192"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="with_int_swap&#39;vc.9.0.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="2.74" steps="837166"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="with_int_swap&#39;vc.9.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="1.82" steps="705139"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="with_int_swap&#39;vc.10" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures9">
   <goal name="with_int_swap&#39;vc.10.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(c_inv_func_int (c_swap_int t1 t2 (width c)) (width c) @ i)" arg2="i">
    <goal name="with_int_swap&#39;vc.10.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="basis_ket_invariant">
     <goal name="with_int_swap&#39;vc.10.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="with_int_swap&#39;vc.10.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="2.20" steps="719316"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="with_int_swap&#39;vc.10.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.19" steps="661424"/></proof>
     </goal>
     <goal name="with_int_swap&#39;vc.10.0.0.2" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.22" steps="661435"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="with_int_swap&#39;vc.10.0.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="3.21" steps="837318"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="with_int_swap&#39;vc.10.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="1.25" steps="661435"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutation_circuit_equiv&#39;vc" expl="VC for permutation_circuit_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permutation_circuit_equiv&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="3.43" steps="916976"/></proof>
  </goal>
  <goal name="permutation_circuit_equiv&#39;vc.1" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(f&#39; e)" arg2="(f e)">
   <goal name="permutation_circuit_equiv&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="5.66" steps="954393"/></proof>
   </goal>
   <goal name="permutation_circuit_equiv&#39;vc.1.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(f&#39; e)" arg2="(f e)">
    <goal name="permutation_circuit_equiv&#39;vc.1.1.0" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="1.34" steps="742975"/></proof>
    </goal>
    <goal name="permutation_circuit_equiv&#39;vc.1.1.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="3.24" steps="917443"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit_equiv&#39;vc.2" expl="precondition" proved="true">
  <transf name="exists" proved="true" arg1="(inv_func_int f n e&#39;)">
   <goal name="permutation_circuit_equiv&#39;vc.2.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="permutation_circuit_equiv&#39;vc.2.0.0" proved="true">
    <proof prover="9"><result status="valid" time="3.39" steps="917909"/></proof>
    </goal>
    <goal name="permutation_circuit_equiv&#39;vc.2.0.1" proved="true">
    <transf name="replace" proved="true" arg1="(f&#39; @ (inv_func_int f n @ e&#39;))" arg2="(f @ (inv_func_int f n @ e&#39;))">
     <goal name="permutation_circuit_equiv&#39;vc.2.0.1.0" proved="true">
     <proof prover="9"><result status="valid" time="3.38" steps="916227"/></proof>
     </goal>
     <goal name="permutation_circuit_equiv&#39;vc.2.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="3.21" steps="916285"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit_equiv&#39;vc.3" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="get_path_sem">
   <goal name="permutation_circuit_equiv&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="get_path_sem">
    <goal name="permutation_circuit_equiv&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
     <goal name="permutation_circuit_equiv&#39;vc.3.0.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="3.24" steps="922919"/></proof>
     </goal>
     <goal name="permutation_circuit_equiv&#39;vc.3.0.0.1" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="permutation_circuit_equiv&#39;vc.3.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="3.73" steps="1072984"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="permutation_circuit_equiv&#39;vc.3.0.0.2" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="permutation_circuit_equiv&#39;vc.3.0.0.2.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="3.86" steps="1072375"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="scalar_eq_gen">
        <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="( path_sem_basis (permutation_circuit n f) (bv_to_ket a))" arg2="( path_sem (permutation_circuit n f) (bv_to_ket a))">
         <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="( path_sem_basis (permutation_circuit n f&#39;) (bv_to_ket a))" arg2="( path_sem (permutation_circuit n f&#39;) (bv_to_ket a))">
          <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec4">
            <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec4">
             <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="bv_to_ket_eq">
              <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="make_bv_length">
               <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="make_bv_length">
                <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.92" steps="1012132"/></proof>
                </goal>
                <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="4.27" steps="1193900"/></proof>
                  </goal>
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="4.32" steps="1193904"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="3.22" steps="1064054"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="4.29" steps="1193886"/></proof>
                 </goal>
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="4.25" steps="1193890"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="3.07" steps="1064054"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="Requires">
                   <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.83" steps="1012216"/></proof>
                   </goal>
                   <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                    <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.86" steps="1012183"/></proof>
                    </goal>
                    <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="4.07" steps="1197595"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.1.1.1.0" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="4.05" steps="1197589"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.84" steps="1064164"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.78" steps="1197583"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1.1.0" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.68" steps="1197577"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.0" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.51" steps="1012183"/></proof>
                  </goal>
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.1" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.1.0" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.1.0.0" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.71" steps="1197595"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.1.1" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.1.1.0" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.69" steps="1197589"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.38" steps="1064164"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.24" steps="1197595"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.27" steps="1197589"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.46" steps="1012183"/></proof>
                 </goal>
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.69" steps="1197595"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.2.1.1" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.2.1.1.0" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.32" steps="1197589"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.87" steps="1064164"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.48" steps="1012136"/></proof>
             </goal>
             <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.49" steps="1012134"/></proof>
             </goal>
             <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="3.79" steps="1196279"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.55" steps="1012136"/></proof>
            </goal>
            <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.50" steps="1012134"/></proof>
            </goal>
            <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="3.74" steps="1196279"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="rewrite" proved="true" arg1="get_path_sem_basis">
           <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="1.21" steps="845333"/></proof>
           </goal>
           <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.1.1" expl="rewrite premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="3.33" steps="1193783"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.1.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.46" steps="895255"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="9"><result status="valid" time="3.41" steps="1028047"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.1" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.22" steps="845333"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="permutation_circuit_equiv&#39;vc.3.0.1" expl="rewrite premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="permutation_circuit_equiv&#39;vc.3.0.1.0" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="3.50" steps="1072404"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutation_circuit_equiv&#39;vc.3.1" expl="rewrite premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="permutation_circuit_equiv&#39;vc.3.1.0" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="3.40" steps="1072404"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="with_permutation_get_ket&#39;vc" expl="VC for with_permutation_get_ket" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="with_permutation_get_ket&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pat_sem_apply_basis_value">
   <goal name="with_permutation_get_ket&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pat_sem_apply_basis_value">
    <goal name="with_permutation_get_ket&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="mult_eq_t">
     <goal name="with_permutation_get_ket&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.86"/></proof>
     </goal>
     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="sum_eq_gen">
      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.90"/></proof>
      </goal>
      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="mult_eq_t">
         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec3">
           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(ang_ind c
     (getbv (make_bv (fun (i:int) -&gt; getbv x1 @ (f @ i)) (width c)))
     (getbv x))" arg2="(ang_ind c (fun (i:int) -&gt; getbv x1 @ (f @ i)) (getbv x))">
             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
             </transf>
             </goal>
             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <transf name="eliminate_definition" proved="true" >
              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
              <transf name="rewrite" proved="true" arg1="ang_ind&#39;def">
               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
               <transf name="rewrite" proved="true" arg1="ang_ind&#39;def">
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant">
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.47" steps="1042525"/></proof>
                   </goal>
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.43" steps="1044175"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.34" steps="936548"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.29" steps="884433"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.33" steps="884970"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="int_to_bv_to_int_">
          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="int_to_bv_to_int_">
           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="case" proved="true" arg1="((make_bv
   (fun (y3:int) -&gt;
     basis_ket (with_permutation c f) (getbv x1) (getbv x) y3)
   (width (with_permutation c f))) =  y)">
            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0" expl="true case (apply premises)" proved="true">
            <transf name="assert" proved="true" arg1="((make_bv
     (fun (y3:int) -&gt;
       basis_ket c
       (getbv (make_bv (fun (i:int) -&gt; getbv x1 @ (f @ i)) (width c)))
       (getbv x) y3)
     (width c))
 =   (make_bv (fun (i:int) -&gt; getbv y @ (f @ i)) (width c)))">
             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
             <transf name="apply" proved="true" arg1="set_equal_bv_make_">
              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="eliminate_definition" proved="true" >
               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.40" steps="1063909"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <transf name="eliminate_definition" proved="true" >
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.46" steps="1071256"/></proof>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.48" steps="1066058"/></proof>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.76" steps="957439"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                 <transf name="eliminate_definition" proved="true" >
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.45" steps="1050309"/></proof>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.1.0.0.0.0.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.39" steps="1045094"/></proof>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.1.0.0.0.0.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.65" steps="936650"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                <transf name="replace" proved="true" arg1="y" arg2="(make_bv
  (fun (y3:int) -&gt; basis_ket (with_permutation c f) (getbv x1) (getbv x) y3)
  (width (with_permutation c f)))">
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="split_all_full" proved="true" >
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec2">
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="replace" proved="true" arg1="(c_inv_func_int f (width c) @ (f @ i))" arg2="i">
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="basis_ket_invariant">
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.38" steps="1066134"/></proof>
                         </goal>
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                          <transf name="compute_specified" proved="true" >
                           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                           <proof prover="9"><result status="valid" time="2.91" steps="1067605"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                          <transf name="compute_specified" proved="true" >
                           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                           <proof prover="9"><result status="valid" time="2.92" steps="1067604"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.50" steps="885114"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.30" steps="885078"/></proof>
                       </goal>
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.35" steps="885089"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                      <proof prover="9"><result status="valid" time="2.95" steps="1065542"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.36" steps="885080"/></proof>
                     </goal>
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                     <transf name="assert" proved="true" arg1="(mem (f i) (to_fset 0 (width c)))
">
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.2.0" expl="asserted formula" proved="true">
                      <transf name="instantiate" proved="true" arg1="get_bijective3" arg2="f,(to_fset 0 (width c)),(to_fset 0 (width c))">
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.2.0.0" expl="asserted formula" proved="true">
                       <transf name="apply" proved="true" arg1="Hinst">
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="1.52" steps="885159"/></proof>
                        </goal>
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.2.0.0.1" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.20" steps="1172308"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.35" steps="1066948"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="eliminate_definition" proved="true" >
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.0" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.0.0" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.48" steps="1066051"/></proof>
                        </goal>
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                        <transf name="split_all_full" proved="true" >
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                          <proof prover="9"><result status="valid" time="3.57" steps="1066120"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.55" steps="1066004"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="2.83" steps="957493"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.48" steps="1066051"/></proof>
                        </goal>
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.1.0.1" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.44" steps="1066097"/></proof>
                        </goal>
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.1.0.2" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="2.87" steps="957493"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.2" expl="rewrite premises" proved="true">
                  <transf name="assert" proved="true" arg1="(mem (f i) (to_fset 0 (width c)))
">
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.2.0" expl="asserted formula" proved="true">
                   <transf name="split_all_full" proved="true" >
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.2.0.0" expl="asserted formula" proved="true">
                    <transf name="instantiate" proved="true" arg1="get_bijective3" arg2="f,(to_fset 0 (width c)),(to_fset 0 (width c))">
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.2.0.0.0" expl="asserted formula" proved="true">
                     <transf name="apply" proved="true" arg1="Hinst">
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.33" steps="885159"/></proof>
                      </goal>
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.2.0.0.0.1" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.80" steps="1172308"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.2.1" expl="rewrite premises" proved="true">
                   <proof prover="0"><result status="valid" time="0.94"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.1" expl="equality hypothesis" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.1.0" expl="equality hypothesis" proved="true">
                  <proof prover="9"><result status="valid" time="1.73" steps="979475"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1" expl="true case (apply premises)" proved="true">
             <transf name="rewrite" proved="true" arg1="h">
              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0" expl="true case (apply premises)" proved="true">
              <transf name="rewrite" proved="true" arg1="h1">
               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0" expl="true case (apply premises)" proved="true">
               <transf name="rewrite" proved="true" arg1="indic&#39;spec">
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0" expl="true case (apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="indic&#39;spec">
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
                 <transf name="eliminate_if" proved="true" >
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                   <transf name="assert" proved="true" arg1="(forall x:bitvec. not x = x -&gt; c_one = c_zero)">
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                    <transf name="instantiate" proved="true" arg1="h" arg2="(make_bv (fun (i:int) -&gt; getbv y @ (f @ i)) (width c))">
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                     <proof prover="9"><result status="valid" time="1.05" steps="752139"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.0.1" expl="true case (apply premises)" proved="true">
                    <proof prover="9"><result status="valid" time="1.04" steps="752140"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.1" expl="true case (apply premises)" proved="true">
                   <transf name="assert" proved="true" arg1="(forall x:bitvec. not x = x -&gt; c_one = c_zero)
">
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
                    <proof prover="9"><result status="valid" time="1.26" steps="752143"/></proof>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.1.1" expl="true case (apply premises)" proved="true">
                    <transf name="instantiate" proved="true" arg1="h" arg2="(make_bv (fun (i:int) -&gt; getbv y @ (f @ i)) (width c))
">
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.1.1.0" expl="true case (apply premises)" proved="true">
                     <transf name="apply" proved="true" arg1="Hinst">
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="H">
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.2" expl="true case (apply premises)" proved="true">
                   <proof prover="9"><result status="valid" time="1.28" steps="752138"/></proof>
                   </goal>
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.3" expl="true case (apply premises)" proved="true">
                   <proof prover="9"><result status="valid" time="1.29" steps="752145"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1" expl="false case (apply premises)" proved="true">
            <transf name="case" proved="true" arg1="((make_bv
     (fun (y3:int) -&gt;
       basis_ket c
       (getbv (make_bv (fun (i:int) -&gt; getbv x1 @ (f @ i)) (width c)))
       (getbv x) y3)
     (width c))
   = (make_bv (fun (i:int) -&gt; getbv y @ (f @ i)) (width c)))">
             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0" expl="false case (true case. apply premises)" proved="true">
             <transf name="assert" proved="true" arg1="((make_bv
   (fun (y3:int) -&gt;
     basis_ket (with_permutation c f) (getbv x1) (getbv x) y3)
   (width (with_permutation c f)))
= y)">
              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0" expl="asserted formula" proved="true">
              <transf name="apply" proved="true" arg1="set_equal_bv">
               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="make_bv_length">
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="0.96"/></proof>
                </goal>
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.65" steps="1070497"/></proof>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.58" steps="1070586"/></proof>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.50" steps="885272"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.39" steps="1070497"/></proof>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.40" steps="1070586"/></proof>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.25" steps="885272"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="2.88" steps="919823"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
                 <transf name="instantiate" proved="true" arg1="get_equal_bv" arg2="(make_bv
  (fun (y3:int) -&gt;
    basis_ket c
    (getbv (make_bv (fun (i1:int) -&gt; getbv x1 @ (f @ i1)) (width c)))
    (getbv x) y3)
  (width c)),(make_bv (fun (i1:int) -&gt; getbv y @ (f @ i1)) (width c))">
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="destruct" proved="true" arg1="Hinst">
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
                    <transf name="apply" proved="true" arg1="h">
                    </transf>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="Hinst">
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
                     <transf name="instantiate" proved="true" arg1="Hinst" arg2="(inv_func_int f (width c) @ i)
">
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                      <transf name="destruct" proved="true" arg1="Hinst">
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.0" expl="destruct premise" proved="true">
                       <proof prover="9"><result status="valid" time="3.55" steps="1082065"/></proof>
                       </goal>
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                       <transf name="replace" proved="true" arg1="(getbv
   (make_bv
    (fun (y3:int) -&gt;
      basis_ket c
      (getbv (make_bv (fun (i1:int) -&gt; getbv x1 @ (f @ i1)) (width c)))
      (getbv x) y3)
    (width c))
   @ (inv_func_int f (width c) @ i))" arg2="(getbv
   (make_bv
    (fun (y3:int) -&gt;
      basis_ket (with_permutation c f) (getbv x1) (getbv x) y3)
    (width (with_permutation c f)))
   @ i)" arg3="in" arg4="Hinst">
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="Hinst">
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                          <transf name="compute_specified" proved="true" >
                           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="4.07" steps="1096247"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                          <transf name="compute_specified" proved="true" >
                           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                           <proof prover="9"><result status="valid" time="3.91" steps="1088877"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="3.83" steps="1088726"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
                        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0" expl="equality hypothesis" proved="true">
                         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
                          <transf name="compute_specified" proved="true" >
                           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0" expl="equality hypothesis" proved="true">
                           <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec2">
                            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0" expl="equality hypothesis" proved="true">
                            <transf name="replace" proved="true" arg1="(inv_func_int f (width c) @ i)" arg2="(c_inv_func_int f (width c) @ i)">
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0" expl="equality hypothesis" proved="true">
                             <transf name="apply" proved="true" arg1="basis_ket_invariant">
                              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                              <transf name="split_vc" proved="true" >
                               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                               <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                <proof prover="9"><result status="valid" time="3.80" steps="1089110"/></proof>
                                </goal>
                                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                                <transf name="split_vc" proved="true" >
                                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                                 <transf name="compute_specified" proved="true" >
                                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                                  <proof prover="9"><result status="valid" time="3.87" steps="1090637"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                                 <transf name="compute_specified" proved="true" >
                                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                                  <proof prover="9"><result status="valid" time="3.88" steps="1090636"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                                <proof prover="9"><result status="valid" time="1.60" steps="886074"/></proof>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="1.62" steps="886038"/></proof>
                              </goal>
                              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="4.00" steps="1090972"/></proof>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                             <proof prover="9"><result status="valid" time="4.10" steps="1089650"/></proof>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="1.81" steps="886040"/></proof>
                            </goal>
                            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="3.05" steps="938964"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                          <transf name="compute_specified" proved="true" >
                           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0" expl="rewrite premises" proved="true">
                           <transf name="split_all_full" proved="true" >
                            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.0" expl="rewrite premises" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.0.0" expl="rewrite premises" proved="true">
                             <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="3.84" steps="1089901"/></proof>
                              </goal>
                              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="3.76" steps="1090082"/></proof>
                              </goal>
                              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.0.0.2" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="1.60" steps="886074"/></proof>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.1" expl="rewrite premises" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.1.0" expl="rewrite premises" proved="true">
                             <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.1.0.0" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="3.69" steps="1089901"/></proof>
                              </goal>
                              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.1.0.1" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="3.67" steps="1090082"/></proof>
                              </goal>
                              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.1.0.2" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="1.60" steps="886074"/></proof>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.2" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.57" steps="886049"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1" expl="rewrite premises" proved="true">
                         <transf name="compute_specified" proved="true" >
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0" expl="rewrite premises" proved="true">
                          <transf name="split_all_full" proved="true" >
                           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.0" expl="rewrite premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.0.0" expl="rewrite premises" proved="true">
                            <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.0.0.0" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.88" steps="1095004"/></proof>
                             </goal>
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.0.0.1" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.89" steps="1090129"/></proof>
                             </goal>
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.0.0.2" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="1.67" steps="886074"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.1" expl="rewrite premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.1.0" expl="rewrite premises" proved="true">
                            <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.1.0.0" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.82" steps="1095004"/></proof>
                             </goal>
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.1.0.1" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.85" steps="1090129"/></proof>
                             </goal>
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.1.0.2" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="1.62" steps="886074"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.2" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.80" steps="1090573"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.0.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.72" steps="1086692"/></proof>
                         </goal>
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.0.0.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.79" steps="1081647"/></proof>
                         </goal>
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.0.0.2" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.75" steps="885980"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.1.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.1.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.63" steps="1086692"/></proof>
                         </goal>
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.1.0.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.56" steps="1081647"/></proof>
                         </goal>
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.1.0.2" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.53" steps="885980"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.60" steps="938842"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.79" steps="1170364"/></proof>
                     </goal>
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.94" steps="1170465"/></proof>
                     </goal>
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.79" steps="979659"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.95" steps="1170364"/></proof>
                     </goal>
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.79" steps="1170465"/></proof>
                     </goal>
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.47" steps="979659"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.54" steps="1006674"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.1" expl="false case (true case. apply premises)" proved="true">
              <proof prover="9"><result status="valid" time="1.44" steps="823109"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1" expl="false case (apply premises)" proved="true">
             <transf name="eliminate_definition" proved="true" >
              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0" expl="false case (apply premises)" proved="true">
              <transf name="rewrite" proved="true" arg1="indic&#39;spec">
               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0" expl="false case (apply premises)" proved="true">
               <transf name="rewrite" proved="true" arg1="indic&#39;spec">
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0" expl="false case (apply premises)" proved="true">
                <transf name="eliminate_if" proved="true" >
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                  <proof prover="9"><result status="valid" time="1.66" steps="834789"/></proof>
                  </goal>
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.1" expl="false case (apply premises)" proved="true">
                  <transf name="assert" proved="true" arg1="(forall x: bitvec. not x= x -&gt; c_zero= c_one )">
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.1.0" expl="asserted formula" proved="true">
                   <transf name="instantiate" proved="true" arg1="h" arg2="(make_bv (fun (i:int) -&gt; getbv y @ (f @ i)) (width c))">
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
                    <proof prover="9"><result status="valid" time="1.59" steps="834793"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.1.1" expl="false case (apply premises)" proved="true">
                   <proof prover="9"><result status="valid" time="1.56" steps="834803"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.2" expl="false case (apply premises)" proved="true">
                  <transf name="assert" proved="true" arg1="(forall x: bitvec. not x= x -&gt; c_zero= c_one )
">
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.2.0" expl="asserted formula" proved="true">
                   <proof prover="9"><result status="valid" time="1.51" steps="834789"/></proof>
                   </goal>
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.2.1" expl="false case (apply premises)" proved="true">
                   <transf name="instantiate" proved="true" arg1="h" arg2="(make_bv (fun (i:int) -&gt; getbv y @ (f @ i)) (width c))
">
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.2.1.0" expl="false case (apply premises)" proved="true">
                    <transf name="apply" proved="true" arg1="Hinst">
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.2.1.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="H" arg2="in" arg3="h1">
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.2.1.0.0.0" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="h1">
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.3" expl="false case (apply premises)" proved="true">
                  <proof prover="9"><result status="valid" time="1.48" steps="834793"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="3.07" steps="917731"/></proof>
           </goal>
           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.2" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="make_bv_length">
            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.2.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.2.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="3.09" steps="919028"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.2.1" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="2.80" steps="917731"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.79" steps="917906"/></proof>
          </goal>
          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.2" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.31"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="with_permutation_get_ket&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <transf name="apply" proved="true" arg1="make_bv_length">
     <goal name="with_permutation_get_ket&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="with_permutation_get_ket&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="3.07" steps="838643"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="with_permutation_get_ket&#39;vc.0.0.1.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.95" steps="837458"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="with_permutation_get_ket&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="with_permutation_get_ket&#39;vc.0.0.2.0" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.65" steps="836754"/></proof>
     </goal>
     <goal name="with_permutation_get_ket&#39;vc.0.0.2.1" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="bv_to_int_bound_gen">
      <goal name="with_permutation_get_ket&#39;vc.0.0.2.1.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="2.68" steps="837458"/></proof>
      </goal>
      <goal name="with_permutation_get_ket&#39;vc.0.0.2.1.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="make_bv_length">
       <goal name="with_permutation_get_ket&#39;vc.0.0.2.1.1.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.06" steps="661611"/></proof>
       </goal>
       <goal name="with_permutation_get_ket&#39;vc.0.0.2.1.1.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="with_permutation_get_ket&#39;vc.0.0.2.1.1.1.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.71" steps="838708"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="with_permutation_get_ket&#39;vc.0.0.2.1.1.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.75" steps="837458"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="with_permutation_get_ket&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.87"/></proof>
   </goal>
   <goal name="with_permutation_get_ket&#39;vc.0.2" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="with_permutation_get_ket&#39;vc.0.2.0" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="2.83" steps="836637"/></proof>
    </goal>
    <goal name="with_permutation_get_ket&#39;vc.0.2.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.84"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="with_permutation_get_ket_&#39;vc" expl="VC for with_permutation_get_ket_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="with_permutation_get_ket_&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.80" steps="705381"/></proof>
  </goal>
  <goal name="with_permutation_get_ket_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.08" steps="662211"/></proof>
  </goal>
  <goal name="with_permutation_get_ket_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.96" steps="784486"/></proof>
  </goal>
  <goal name="with_permutation_get_ket_&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.14" steps="739689"/></proof>
  </goal>
  <goal name="with_permutation_get_ket_&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.20" steps="739692"/></proof>
  </goal>
  <goal name="with_permutation_get_ket_&#39;vc.5" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(bv_to_ket (ket_to_bv x))" arg2="x" arg3="in" arg4="Ensures">
   <goal name="with_permutation_get_ket_&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(bv_to_int (int_to_bv i (width c)))" arg2="i" arg3="in" arg4="Ensures">
    <goal name="with_permutation_get_ket_&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="Ensures">
    </transf>
    </goal>
    <goal name="with_permutation_get_ket_&#39;vc.5.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="bv_to_int_to_bv">
     <goal name="with_permutation_get_ket_&#39;vc.5.0.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.01" steps="784471"/></proof>
     </goal>
     <goal name="with_permutation_get_ket_&#39;vc.5.0.1.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.23" steps="740190"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="with_permutation_get_ket_&#39;vc.5.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="2.15" steps="785129"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="with_permutation_kronecker&#39;vc" expl="VC for with_permutation_kronecker" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="with_permutation_kronecker&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.67" steps="942210"/></proof>
  </goal>
  <goal name="with_permutation_kronecker&#39;vc.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="with_permutation_kronecker&#39;vc.1.0" expl="precondition" proved="true">
   <transf name="exists" proved="true" arg1="(if e&#39;&lt; (n-k) then e&#39; + k else e&#39; - (n-k))">
    <goal name="with_permutation_kronecker&#39;vc.1.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="with_permutation_kronecker&#39;vc.1.0.0.0" proved="true">
     <proof prover="9"><result status="valid" time="2.60" steps="928199"/></proof>
     </goal>
     <goal name="with_permutation_kronecker&#39;vc.1.0.0.1" proved="true">
     <proof prover="9"><result status="valid" time="2.57" steps="927924"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation_kronecker&#39;vc.2" expl="assertion" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="with_permutation_kronecker&#39;vc.2.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec5">
    <goal name="with_permutation_kronecker&#39;vc.2.0.0" expl="assertion" proved="true">
    <transf name="replace" proved="true" arg1="(width c)" arg2="n">
     <goal name="with_permutation_kronecker&#39;vc.2.0.0.0" expl="assertion" proved="true">
     <proof prover="9"><result status="valid" time="1.29" steps="893287"/></proof>
     </goal>
     <goal name="with_permutation_kronecker&#39;vc.2.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="1.44" steps="893289"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="with_permutation_kronecker&#39;vc.2.0.1" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(width c)" arg2="n">
     <goal name="with_permutation_kronecker&#39;vc.2.0.1.0" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="Ensures">
     </transf>
     </goal>
     <goal name="with_permutation_kronecker&#39;vc.2.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="1.41" steps="893289"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation_kronecker&#39;vc.3" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width c)" arg2="n">
   <goal name="with_permutation_kronecker&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="3.04" steps="944189"/></proof>
   </goal>
   <goal name="with_permutation_kronecker&#39;vc.3.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="1.19" steps="744262"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation_kronecker&#39;vc.4" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width
   (with_permutation c (fun (i:int) -&gt; if i &lt; k then (i + n) - k else i - k)))" arg2="((n-k)+k)">
   <goal name="with_permutation_kronecker&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="3.65" steps="195848"/></proof>
   </goal>
   <goal name="with_permutation_kronecker&#39;vc.4.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="2.90" steps="948700"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation_kronecker&#39;vc.5" expl="precondition" proved="true">
  <transf name="exists" proved="true" arg1="n">
   <goal name="with_permutation_kronecker&#39;vc.5.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="with_permutation_kronecker&#39;vc.5.0.0" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures7" arg2="in" arg3="Ensures1">
     <goal name="with_permutation_kronecker&#39;vc.5.0.0.0" proved="true">
     <transf name="replace" proved="true" arg1="(width c)" arg2="n" arg3="in" arg4="Ensures1">
      <goal name="with_permutation_kronecker&#39;vc.5.0.0.0.0" proved="true">
      <transf name="apply" proved="true" arg1="Ensures1">
      </transf>
      </goal>
      <goal name="with_permutation_kronecker&#39;vc.5.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="1.24" steps="746876"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="with_permutation_kronecker&#39;vc.5.0.1" proved="true">
    <proof prover="9"><result status="valid" time="2.55" steps="952673"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation_kronecker&#39;vc.6" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(kronecker ant_d ant)" arg2="(bv_to_ket (concat1 (ket_to_bv ant_d) (ket_to_bv ant)))">
   <goal name="with_permutation_kronecker&#39;vc.6.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="i" arg2="(bv_to_int (int_to_bv i n))
">
    <goal name="with_permutation_kronecker&#39;vc.6.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="with_permutation_get_ket">
     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0" expl="precondition" proved="true">
     <transf name="replace" proved="true" arg1="(make_bv
     (fun (i1:int) -&gt;
       getbv (concat1 (ket_to_bv ant_d) (ket_to_bv ant))
       @ ((fun (i2:int) -&gt; if i2 &lt; k then (i2 + n) - k else i2 - k) @ i1))
     (width c))" arg2="(concat1  (ket_to_bv ant) (ket_to_bv ant_d))
">
      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0" expl="precondition" proved="true">
      <transf name="replace" proved="true" arg1="(path_sem c (bv_to_ket (concat1 (ket_to_bv ant) (ket_to_bv ant_d))))" arg2="(kronecker im im_d)
">
       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0" expl="precondition" proved="true">
       <transf name="replace" proved="true" arg1="(make_bv
    (fun (i1:int) -&gt;
      getbv (int_to_bv i n)
      @ ((fun (i2:int) -&gt; if i2 &lt; k then (i2 + n) - k else i2 - k) i1))
    (width c))" arg2="(concat1 (tpart (int_to_bv i n )(n-k)) (hpart (int_to_bv i n) (n-k)))
">
        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0" expl="precondition" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0" expl="precondition" proved="true">
         <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0" expl="precondition" proved="true">
          <transf name="apply" proved="true" arg1="mult_eq_t_rev">
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(rows im_d)" arg2="(power 2 (n-k))">
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(rows im)" arg2="(power 2 k)">
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="instantiate" proved="true" arg1="bv_to_int_hpart_rev" arg2="(concat1 (tpart (int_to_bv i n) (n-k)) (hpart (int_to_bv i n) (n-k))),k,(n-k)

">
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="Hinst">
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="instantiate" proved="true" arg1="bv_to_int_tpart_rev" arg2="(int_to_bv i n),(n-k),k">
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="Hinst">
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="(hpart
    (concat1 (tpart (int_to_bv i n) (n - k)) (hpart (int_to_bv i n) (n - k)))
    k)" arg2="(tpart (int_to_bv i n) (n - k))
">
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                  </transf>
                  </goal>
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="set_equal_bv">
                   <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="hpart_length">
                    <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="tpart_length">
                     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.52" steps="898047"/></proof>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.07" steps="949649"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0" proved="true">
                      <proof prover="9"><result status="valid" time="2.10" steps="949263"/></proof>
                      </goal>
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.1" proved="true">
                      <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.1.0" proved="true">
                       <proof prover="9"><result status="valid" time="1.28" steps="898040"/></proof>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.1.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.51" steps="949649"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.26" steps="747623"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="hpart_length" arg2="in" arg3="H">
                     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="hpart_value_b">
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="concat_value_left">
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.25" steps="747661"/></proof>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="tpart_length">
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                        <transf name="split_all_full" proved="true" >
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.0.0" proved="true">
                         <proof prover="9"><result status="valid" time="1.32" steps="898073"/></proof>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.0.1" proved="true">
                         <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.0.1.0" proved="true">
                          <proof prover="9"><result status="valid" time="1.31" steps="898089"/></proof>
                          </goal>
                          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="2.12" steps="949696"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.1" expl="rewrite premises" proved="true">
                        <transf name="split_all_full" proved="true" >
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.1.0" proved="true">
                         <proof prover="9"><result status="valid" time="2.11" steps="949310"/></proof>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.1.1" proved="true">
                         <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.1.1.0" proved="true">
                          <proof prover="9"><result status="valid" time="1.33" steps="898080"/></proof>
                          </goal>
                          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.1.1.1" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="2.48" steps="949696"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.14" steps="747672"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.20" steps="747652"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.15"/></proof>
                 </goal>
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <transf name="replace" proved="true" arg1="( length1 (int_to_bv i n))" arg2="n">
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.94" steps="793771"/></proof>
                  </goal>
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.1" expl="equality hypothesis" proved="true">
                  <proof prover="6"><result status="valid" time="3.89" steps="211807"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="4.37" steps="1456215"/></proof>
               </goal>
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="3.96" steps="1456219"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="1.86" steps="793670"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="9"><result status="valid" time="2.35" steps="793681"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="instantiate" proved="true" arg1="bv_to_int_tpart_rev" arg2="(concat1 (tpart (int_to_bv i n) (n-k)) (hpart (int_to_bv i n) (n-k))),k,(n-k)">
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(rows im_d)" arg2="(power 2 (n-k))">
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="Hinst">
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(rows im)" arg2="(power 2 k)">
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="instantiate" proved="true" arg1="bv_to_int_hpart_rev" arg2="(int_to_bv i n),(n-k),k">
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="Hinst">
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="(tpart
    (concat1 (tpart (int_to_bv i n) (n - k)) (hpart (int_to_bv i n) (n - k)))
    k)" arg2="(hpart (int_to_bv i n) (n - k))">
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                  </transf>
                  </goal>
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="set_equal_bv">
                   <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="tpart_length">
                    <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="concat_length">
                     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="tpart_length">
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="hpart_length">
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="6"><result status="valid" time="3.89" steps="212268"/></proof>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.13" steps="793746"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.0" proved="true">
                       <proof prover="9"><result status="valid" time="2.02" steps="793746"/></proof>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.1" proved="true">
                       <transf name="split_all_full" proved="true" >
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.1.0" proved="true">
                        <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.1.0.0" proved="true">
                         <proof prover="9"><result status="valid" time="1.54" steps="898040"/></proof>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.49" steps="949649"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="concat_length">
                     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="tpart_length">
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.0.0" proved="true">
                       <proof prover="9"><result status="valid" time="1.51" steps="898033"/></proof>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.0.1" proved="true">
                       <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.0.1.0" proved="true">
                        <transf name="rewrite" proved="true" arg1="hpart_length">
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.0.1.0.0" proved="true">
                         <proof prover="9"><result status="valid" time="2.51" steps="949284"/></proof>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.48" steps="949263"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                        <proof prover="9"><result status="valid" time="2.46" steps="949649"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.1.0" proved="true">
                       <proof prover="9"><result status="valid" time="1.99" steps="793746"/></proof>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.1.1" proved="true">
                       <transf name="split_all_full" proved="true" >
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.1.1.0" proved="true">
                        <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.1.1.0.0" proved="true">
                         <proof prover="9"><result status="valid" time="1.56" steps="898040"/></proof>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.49" steps="949649"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="tpart_value_b">
                     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="concat_value_right">
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="tpart_length">
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="replace" proved="true" arg1="(length1 (int_to_bv i1 n) )" arg2="n">
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="1.27" steps="747702"/></proof>
                        </goal>
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                        <proof prover="6"><result status="valid" time="3.88" steps="213139"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                       <transf name="replace" proved="true" arg1="( length1 (int_to_bv i1 n))" arg2="n">
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                        <proof prover="9"><result status="valid" time="2.00" steps="793824"/></proof>
                        </goal>
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
                        <proof prover="6"><result status="valid" time="3.09" steps="213139"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.0" proved="true">
                       <transf name="rewrite" proved="true" arg1="tpart_length">
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.0.0" proved="true">
                        <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.0.0.0" proved="true">
                         <proof prover="9"><result status="valid" time="1.57" steps="898083"/></proof>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.05" steps="949709"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.42" steps="949341"/></proof>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.10" steps="949709"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1" proved="true">
                       <transf name="rewrite" proved="true" arg1="tpart_length">
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0" proved="true">
                        <transf name="rewrite" proved="true" arg1="hpart_length">
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0" proved="true">
                         <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0" proved="true">
                          <transf name="rewrite" proved="true" arg1="tpart_length" arg2="in" arg3="H">
                           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0" proved="true">
                           <transf name="rewrite" proved="true" arg1="concat_length" arg2="in" arg3="H">
                            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0.0" proved="true">
                            <transf name="rewrite" proved="true" arg1="tpart_length" arg2="in" arg3="H">
                             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0.0.0" proved="true">
                             <transf name="rewrite" proved="true" arg1="hpart_length" arg2="in" arg3="H">
                              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0.0.0.0" proved="true">
                              <transf name="replace" proved="true" arg1="(length1 (int_to_bv i1 n))" arg2="n" arg3="in" arg4="H">
                               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0.0.0.0.0" proved="true">
                               <proof prover="9"><result status="valid" time="1.50" steps="898106"/></proof>
                               </goal>
                               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                               <proof prover="0"><result status="valid" time="1.26"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                              <proof prover="9"><result status="valid" time="1.95" steps="949355"/></proof>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                             <transf name="replace" proved="true" arg1="(length1 (int_to_bv i1 n))" arg2="n">
                              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                              <proof prover="9"><result status="valid" time="1.96" steps="949386"/></proof>
                              </goal>
                              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                              <proof prover="6"><result status="valid" time="4.02" steps="215487"/></proof>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="1.22" steps="898062"/></proof>
                            </goal>
                            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.1" expl="rewrite premises" proved="true">
                            <transf name="rewrite" proved="true" arg1="concat_length">
                             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                             <transf name="rewrite" proved="true" arg1="tpart_length" arg2="in" arg3="H">
                              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
                              <transf name="rewrite" proved="true" arg1="tpart_length">
                               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.1.0.0.0" expl="rewrite premises" proved="true">
                               <proof prover="0"><result status="valid" time="1.30"/></proof>
                               </goal>
                               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                               <transf name="replace" proved="true" arg1="((int_to_bv i1 n).length1)" arg2="n">
                                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.1.0.0.1.0" expl="rewrite premises" proved="true">
                                <proof prover="6"><result status="valid" time="0.35" steps="9711"/></proof>
                                </goal>
                                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.1.0.0.1.1" expl="equality hypothesis" proved="true">
                                <proof prover="6"><result status="valid" time="3.08" steps="212795"/></proof>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                              <proof prover="0"><result status="valid" time="1.31"/></proof>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="2.07" steps="949709"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.12" steps="949316"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.1" expl="rewrite premises" proved="true">
                        <transf name="split_all_full" proved="true" >
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.1.0" proved="true">
                         <proof prover="9"><result status="valid" time="2.14" steps="949316"/></proof>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.1.1" proved="true">
                         <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.1.1.0" proved="true">
                          <proof prover="9"><result status="valid" time="1.46" steps="898069"/></proof>
                          </goal>
                          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.1.1.1" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="2.18" steps="949709"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.22" steps="747652"/></proof>
                     </goal>
                     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2" expl="rewrite premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="concat_length">
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0" expl="rewrite premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.0" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.00" steps="747652"/></proof>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1" expl="rewrite premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="tpart_length" arg2="in" arg3="H">
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.0" expl="rewrite premises" proved="true">
                        <proof prover="0"><result status="valid" time="1.18"/></proof>
                        </goal>
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1" expl="rewrite premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.0" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.19" steps="747652"/></proof>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1" expl="rewrite premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="concat_length">
                          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1.0" expl="rewrite premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="tpart_length">
                           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1.0.0" expl="rewrite premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="hpart_length">
                            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1.0.0.0" expl="rewrite premises" proved="true">
                            <transf name="replace" proved="true" arg1="(length1 (int_to_bv i1 n))" arg2="n">
                             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1.0.0.0.0" expl="rewrite premises" proved="true">
                             <proof prover="9"><result status="valid" time="1.98" steps="793820"/></proof>
                             </goal>
                             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1.0.0.0.1" expl="equality hypothesis" proved="true">
                             <proof prover="6"><result status="valid" time="3.92" steps="213139"/></proof>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1.0.0.1" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="1.61" steps="793799"/></proof>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1.0.1" expl="rewrite premises" proved="true">
                           <transf name="replace" proved="true" arg1="(length1 (int_to_bv i1 n))" arg2="n">
                            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1.0.1.0" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="1.73" steps="793824"/></proof>
                            </goal>
                            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1.0.1.1" expl="equality hypothesis" proved="true">
                            <proof prover="6"><result status="valid" time="3.88" steps="213139"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.17"/></proof>
                 </goal>
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <transf name="replace" proved="true" arg1="( length1 (int_to_bv i n))" arg2="n">
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.79" steps="793771"/></proof>
                  </goal>
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2.1" expl="equality hypothesis" proved="true">
                  <proof prover="6"><result status="valid" time="3.95" steps="211808"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="9"><result status="valid" time="1.75" steps="794166"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="3.92" steps="1456850"/></proof>
              </goal>
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.2.0" proved="true">
               <proof prover="9"><result status="valid" time="1.30" steps="747497"/></proof>
               </goal>
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.2.1" proved="true">
               <proof prover="9"><result status="valid" time="4.55" steps="1456809"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="1.87" steps="794166"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.91" steps="793660"/></proof>
          </goal>
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.90" steps="793634"/></proof>
          </goal>
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv_">
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(rows im_d * rows im)" arg2="(power 2 n)">
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
            <transf name="replace" proved="true" arg1="(ket_length
     (path_sem
      (with_permutation c
       (fun (i1:int) -&gt; if i1 &lt; k then (i1 + n) - k else i1 - k))
      (kronecker ant_d ant)))" arg2="n" arg3="in" arg4="H">
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.26" steps="747210"/></proof>
             </goal>
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
             <transf name="apply" proved="true" arg1="path_sem_ket_length">
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(width
   (with_permutation c
    (fun (i1:int) -&gt; if i1 &lt; k then (i1 + n) - k else i1 - k)))" arg2="(k+(n-k))">
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(k + (n - k))" arg2="((n - k) + k)">
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="kronecker_ket_l">
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.73" steps="792952"/></proof>
                 </goal>
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.01" steps="747324"/></proof>
                 </goal>
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.03" steps="747324"/></proof>
                 </goal>
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.0.0.0.3" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.01" steps="747324"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="9"><result status="valid" time="0.99" steps="747345"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.0.1" expl="equality hypothesis" proved="true">
               <proof prover="9"><result status="valid" time="2.71" steps="980468"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.1" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="2.81" steps="980459"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.1" expl="equality hypothesis" proved="true">
            <transf name="replace" proved="true" arg1="(rows im_d)" arg2="(power 2 (n-k))">
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.1.0" expl="equality hypothesis" proved="true">
             <transf name="replace" proved="true" arg1="(rows im)" arg2="(power 2 k)">
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.1.0.0" expl="equality hypothesis" proved="true">
              <proof prover="6"><result status="valid" time="4.79" steps="258330"/></proof>
              </goal>
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.1.0.1" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="1.91" steps="793670"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.1.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="1.88" steps="793681"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.73" steps="793285"/></proof>
           </goal>
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(ket_length
     (path_sem
      (with_permutation c
       (fun (i1:int) -&gt; if i1 &lt; k then (i1 + n) - k else i1 - k))
      (kronecker ant_d ant)))" arg2="n" arg3="in" arg4="H">
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.0" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.28" steps="747210"/></proof>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1" expl="equality hypothesis" proved="true">
            <transf name="apply" proved="true" arg1="path_sem_ket_length">
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(width
   (with_permutation c
    (fun (i1:int) -&gt; if i1 &lt; k then (i1 + n) - k else i1 - k)))" arg2="(k+(n-k))">
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(k + (n - k))" arg2="((n - k) + k)">
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.75" steps="792952"/></proof>
                </goal>
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.08" steps="747324"/></proof>
                </goal>
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.01" steps="747324"/></proof>
                </goal>
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.0.0.0.3" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="0.97" steps="747324"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="9"><result status="valid" time="1.02" steps="747345"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.0.1" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="3.08" steps="980468"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="2.99" steps="980459"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="2.07" steps="793634"/></proof>
         </goal>
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.85" steps="793660"/></proof>
         </goal>
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="3.20" steps="980709"/></proof>
          </goal>
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.3.1" expl="rewrite premises" proved="true">
          <transf name="replace" proved="true" arg1="(rows im * rows im_d)" arg2="(power 2 l)">
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.3.1.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="bv_to_int_bound_gen">
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.3.1.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="2.98" steps="978483"/></proof>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.3.1.0.1" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="3.21" steps="987381"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.3.1.1" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="1.96" steps="793685"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="set_equal_bv">
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="concat_length">
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="tpart_length">
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="hpart&#39;spec4">
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="3.81" steps="1133587"/></proof>
              </goal>
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.57" steps="948329"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="3.23" steps="986325"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="3.20" steps="981749"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.14" steps="793249"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="eliminate_if" proved="true" >
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value_left">
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="tpart_value_b">
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.30" steps="761919"/></proof>
                  </goal>
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.21" steps="807415"/></proof>
                  </goal>
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.88" steps="991659"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.73" steps="992102"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value_right">
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="hpart_value_b">
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.19"/></proof>
                  </goal>
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.55" steps="992104"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.53" steps="995374"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="2.51" steps="985156"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.61" steps="793474"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.1.0" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.52" steps="985156"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.2" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.2.0" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.00" steps="747323"/></proof>
             </goal>
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.2.1" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.2.1.0" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.51" steps="985156"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.2.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.63" steps="793474"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="2.47" steps="980482"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="set_equal_bv">
        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="concat_length">
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.49" steps="987785"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.42" steps="981530"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.61" steps="793286"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="eliminate_if" proved="true" >
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="concat_value_right">
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="concat_value_left">
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="0.96"/></proof>
                </goal>
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="2.52" steps="987803"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="2.54" steps="992652"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="concat_value_left">
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="concat_value_right">
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.15"/></proof>
                </goal>
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="2.55" steps="992779"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="2.60" steps="987808"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.60" steps="985040"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.73" steps="793476"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.66" steps="985040"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.2" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.2.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.05" steps="747323"/></proof>
           </goal>
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.2.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.2.1.0" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.55" steps="985040"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.2.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.61" steps="793476"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="with_permutation_kronecker&#39;vc.6.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.47" steps="985014"/></proof>
     </goal>
     <goal name="with_permutation_kronecker&#39;vc.6.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.49" steps="983176"/></proof>
     </goal>
     <goal name="with_permutation_kronecker&#39;vc.6.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.61" steps="980066"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="with_permutation_kronecker&#39;vc.6.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv_">
     <goal name="with_permutation_kronecker&#39;vc.6.0.1.0" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="1.01" steps="747322"/></proof>
     </goal>
     <goal name="with_permutation_kronecker&#39;vc.6.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.81" steps="793285"/></proof>
     </goal>
     <goal name="with_permutation_kronecker&#39;vc.6.0.1.2" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="(ket_length
     (path_sem      (with_permutation c
       (fun (i1:int) -&gt; if i1 &lt; k then (i1 + n) - k else i1 - k))
      (kronecker ant_d ant)))" arg2="n" arg3="in" arg4="H
">
      <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.0" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.05" steps="747210"/></proof>
      </goal>
      <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1" expl="equality hypothesis" proved="true">
      <transf name="assert" proved="true" arg1="(forall x: matrix complex. is_a_ket_l x n -&gt; ket_length x = n)
">
       <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.0" expl="asserted formula" proved="true">
       <proof prover="9"><result status="valid" time="1.69" steps="793725"/></proof>
       </goal>
       <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="h">
        <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="path_sem_ket_l">
         <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.0" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec5">
           <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="2.87" steps="1129089"/></proof>
           </goal>
           <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(width c)" arg2="n">
            <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="Ensures16">
            </transf>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="9"><result status="valid" time="1.20" steps="897794"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.1" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec5">
           <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.30" steps="897801"/></proof>
           </goal>
           <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(width c)" arg2="n">
            <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="Ensures16">
            </transf>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.1.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="9"><result status="valid" time="1.32" steps="897794"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="with_permutation_kronecker&#39;vc.6.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="2.68" steps="980128"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation_kronecker&#39;vc.7" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures">
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="with_permutation_kronecker_gen&#39;vc" expl="VC for with_permutation_kronecker_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="with_permutation_kronecker_gen&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="with_permutation_kronecker">
   <goal name="with_permutation_kronecker_gen&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.07" steps="643084"/></proof>
   </goal>
   <goal name="with_permutation_kronecker_gen&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.02" steps="643093"/></proof>
   </goal>
   <goal name="with_permutation_kronecker_gen&#39;vc.0.2" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.01" steps="643084"/></proof>
   </goal>
   <goal name="with_permutation_kronecker_gen&#39;vc.0.3" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.02" steps="643084"/></proof>
   </goal>
   <goal name="with_permutation_kronecker_gen&#39;vc.0.4" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.02" steps="643084"/></proof>
   </goal>
   <goal name="with_permutation_kronecker_gen&#39;vc.0.5" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.03" steps="643084"/></proof>
   </goal>
   <goal name="with_permutation_kronecker_gen&#39;vc.0.6" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.05" steps="643084"/></proof>
   </goal>
   <goal name="with_permutation_kronecker_gen&#39;vc.0.7" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.05" steps="643084"/></proof>
   </goal>
   <goal name="with_permutation_kronecker_gen&#39;vc.0.8" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.06" steps="643084"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutation_three_blocks&#39;vc" expl="VC for permutation_three_blocks" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permutation_three_blocks&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
   <goal name="permutation_three_blocks&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
    <goal name="permutation_three_blocks&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
     <goal name="permutation_three_blocks&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
      <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec4">
        <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="bv_to_ket_eq">
         <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="3.74" steps="988313"/></proof>
          </goal>
          <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="3.41" steps="974425"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="3.36" steps="974335"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.30" steps="820256"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
            <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
             <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="case" proved="true" arg1="(i &lt; n1)">
               <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
               <transf name="rewrite" proved="true" arg1="concat_value_left">
                <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value_left">
                 <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="concat_value_left">
                  <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="concat_value_left">
                   <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                   <proof prover="9"><result status="valid" time="2.33" steps="841481"/></proof>
                   </goal>
                   <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.24" steps="820249"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.25" steps="954983"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.23" steps="820940"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="3.44" steps="955712"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
               <transf name="case" proved="true" arg1="(i &lt; n1+n3)">
                <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0" expl="false case (true case. apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value_right">
                 <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0" expl="false case (true case. apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="concat_value_left">
                  <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0" expl="false case (true case. apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="concat_value_right">
                   <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                   <proof prover="0"><result status="valid" time="1.15"/></proof>
                   </goal>
                   <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.05" steps="820314"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.38" steps="955057"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.38" steps="956616"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1" expl="false case (apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value_left">
                 <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0" expl="false case (apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="concat_value_right">
                  <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0" expl="false case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="concat_value_right">
                   <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.0" expl="false case (apply premises)" proved="true">
                   <proof prover="0"><result status="valid" time="1.18"/></proof>
                   </goal>
                   <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.21" steps="956309"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.18" steps="821230"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.07" steps="955373"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              <transf name="rewrite" proved="true" arg1="concat_value">
               <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="concat_value">
                <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value">
                 <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="concat_value">
                  <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="eliminate_if" proved="true" >
                   <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.48" steps="993058"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.48" steps="852527"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.43" steps="992623"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.43" steps="852560"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.4" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.30" steps="990481"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.5" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.26" steps="993025"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.6" expl="apply premises" proved="true">
                    <proof prover="0"><result status="valid" time="1.18"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.7" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.45" steps="852562"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.8" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.25" steps="852569"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.9" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.27" steps="990433"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.10" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.29" steps="993040"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.11" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.28" steps="852546"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.12" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.30" steps="852569"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.13" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.36" steps="990581"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.14" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.37" steps="990531"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.15" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.30" steps="853022"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.16" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.33" steps="853074"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.17" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.35" steps="806358"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.18" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.30" steps="853097"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.19" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.30" steps="853048"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.20" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.27" steps="853038"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.21" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.26" steps="853087"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.22" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.25" steps="853108"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.23" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.34" steps="853114"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.24" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.49" steps="853065"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.25" expl="apply premises" proved="true">
                    <proof prover="0"><result status="valid" time="1.20"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.26" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.44" steps="853092"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.27" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.33" steps="853117"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.28" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.49" steps="991023"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.29" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.42" steps="990980"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.30" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.47" steps="993228"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.31" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.46" steps="806417"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.32" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.46" steps="785805"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.33" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.52" steps="806420"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.34" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.40" steps="990564"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.35" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.34" steps="853549"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.36" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.39" steps="853594"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.37" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.42" steps="853214"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.38" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.42" steps="853220"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.39" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.43" steps="853564"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.40" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.38" steps="853167"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.41" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.39" steps="853208"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.42" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.39" steps="853221"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.43" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.38" steps="853223"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.44" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.36" steps="853190"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.45" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.49" steps="992445"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.46" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.36" steps="991143"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.47" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.37" steps="853275"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.48" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.40" steps="785857"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.49" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.43" steps="785817"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.50" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.42" steps="992061"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.51" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.46" steps="990649"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.52" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.56" steps="990208"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.53" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.45" steps="785558"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.54" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.40" steps="785504"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="3.11" steps="974365"/></proof>
               </goal>
               <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="3.09" steps="974392"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.31" steps="773821"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="3.15" steps="977792"/></proof>
              </goal>
              <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="3.21" steps="977819"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.19" steps="841068"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.29" steps="773774"/></proof>
        </goal>
        <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="set_bijective1">
         <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="3.84" steps="1075238"/></proof>
         </goal>
         <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.2.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="3.93" steps="1081112"/></proof>
         </goal>
         <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.2.2" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.2.2.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.2.2.0.0" expl="apply premises" proved="true">
           <transf name="exists" proved="true" arg1="(if e&#39; &lt; n1 then e&#39; else if e&#39; &lt; (n1 + n2) then e&#39; + n3 else e&#39; - n2)">
            <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.2.2.0.0.0" proved="true">
            <proof prover="9"><result status="valid" time="3.72" steps="1048984"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="3.80" steps="988316"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="insert_qbits&#39;vc" expl="VC for insert_qbits" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert_qbits&#39;vc.0" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="insert_qbits&#39;vc.0.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_mem_to_fset">
    <goal name="insert_qbits&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="insert_qbits&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="eliminate_if" proved="true" >
      <goal name="insert_qbits&#39;vc.0.0.0.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="insert_qbits&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.56" steps="929639"/></proof>
       </goal>
       <goal name="insert_qbits&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.74" steps="802695"/></proof>
       </goal>
       <goal name="insert_qbits&#39;vc.0.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.74" steps="802714"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.55" steps="921715"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.1" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
   <goal name="insert_qbits&#39;vc.1.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="insert_qbits&#39;vc.1.0.0" expl="precondition" proved="true">
    <transf name="exists" proved="true" arg1="(if e&#39; &lt; k then e&#39; else if e&#39; &lt; k+i then e&#39; + n-k else (e&#39; - i) )">
     <goal name="insert_qbits&#39;vc.1.0.0.0" proved="true">
     <proof prover="9"><result status="valid" time="3.03" steps="925045"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits&#39;vc.1.1" expl="equality hypothesis" proved="true">
   <proof prover="0"><result status="valid" time="1.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.2" expl="assertion" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="insert_qbits&#39;vc.2.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec5">
    <goal name="insert_qbits&#39;vc.2.0.0" expl="assertion" proved="true">
    <proof prover="9"><result status="valid" time="2.97" steps="1094951"/></proof>
    </goal>
    <goal name="insert_qbits&#39;vc.2.0.1" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
     <goal name="insert_qbits&#39;vc.2.0.1.0" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="Ensures">
     </transf>
     </goal>
     <goal name="insert_qbits&#39;vc.2.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="2.96" steps="1094951"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.3" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
   <goal name="insert_qbits&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="2.48" steps="924837"/></proof>
   </goal>
   <goal name="insert_qbits&#39;vc.3.1" expl="equality hypothesis" proved="true">
   <proof prover="0"><result status="valid" time="0.90"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="insert_qbits&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="insert_qbits&#39;vc.4.0.0" expl="VC for insert_qbits" proved="true">
    <proof prover="9"><result status="valid" time="1.74" steps="806343"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.23" steps="747111"/></proof>
  </goal>
  <goal name="insert_qbits&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="insert_qbits&#39;vc.6.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_bijective1">
    <goal name="insert_qbits&#39;vc.6.0.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="3.25" steps="1101067"/></proof>
    </goal>
    <goal name="insert_qbits&#39;vc.6.0.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="3.37" steps="1106997"/></proof>
    </goal>
    <goal name="insert_qbits&#39;vc.6.0.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="insert_qbits&#39;vc.6.0.2.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="insert_qbits&#39;vc.6.0.2.0.0" expl="apply premises" proved="true">
      <transf name="exists" proved="true" arg1="(if e&#39; &lt; k then e&#39; else if e&#39; &lt; (k + i) then e&#39; + n -k else e&#39; - i)">
       <goal name="insert_qbits&#39;vc.6.0.2.0.0.0" proved="true">
       <proof prover="9"><result status="valid" time="3.69" steps="1080319"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="3.04" steps="932735"/></proof>
  </goal>
  <goal name="insert_qbits&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.98" steps="932692"/></proof>
  </goal>
  <goal name="insert_qbits&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.91" steps="932799"/></proof>
  </goal>
  <goal name="insert_qbits&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.92" steps="932848"/></proof>
  </goal>
  <goal name="insert_qbits&#39;vc.11" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures7">
   <goal name="insert_qbits&#39;vc.11.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="parallel_angle">
    <goal name="insert_qbits&#39;vc.11.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
     <goal name="insert_qbits&#39;vc.11.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="insert_qbits&#39;vc.11.0.0.1" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="insert_qbits&#39;vc.11.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="insert_qbits&#39;vc.11.0.0.1.0.0" expl="rewrite premises" proved="true">
       <transf name="rewrite" proved="true" arg1="ids&#39;spec2">
        <goal name="insert_qbits&#39;vc.11.0.0.1.0.0.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.44" steps="898428"/></proof>
        </goal>
        <goal name="insert_qbits&#39;vc.11.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.47" steps="898437"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.12" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures7">
   <goal name="insert_qbits&#39;vc.12.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="insert_qbits&#39;vc.12.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(c_inv_func_int
   (fun (j1:int) -&gt;
     if j1 &lt; k then j1 else if j1 &lt; n then j1 + i else (j1 - n) + k)
   (width (parallel c (ids i))) @ j)" arg2="j">
     <goal name="insert_qbits&#39;vc.12.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
      <goal name="insert_qbits&#39;vc.12.0.0.0.0" expl="postcondition" proved="true">
      <transf name="eliminate_if" proved="true" >
       <goal name="insert_qbits&#39;vc.12.0.0.0.0.0" expl="VC for insert_qbits" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="insert_qbits&#39;vc.12.0.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="3.09" steps="961435"/></proof>
        </goal>
        <goal name="insert_qbits&#39;vc.12.0.0.0.0.0.1" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.03" steps="811201"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits&#39;vc.12.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
      <goal name="insert_qbits&#39;vc.12.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures24">
       <goal name="insert_qbits&#39;vc.12.0.0.1.0.0" expl="equality hypothesis" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="insert_qbits&#39;vc.12.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="2.01" steps="797323"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits&#39;vc.12.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.03" steps="797570"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits&#39;vc.12.0.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="2.18" steps="811215"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits&#39;vc.12.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="2.05" steps="797548"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.13" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures8">
   <goal name="insert_qbits&#39;vc.13.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="insert_qbits&#39;vc.13.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(c_inv_func_int
   (fun (j1:int) -&gt;
     if j1 &lt; k then j1 else if j1 &lt; n then j1 + i else (j1 - n) + k)
   (width (parallel c (ids i))) @ j)" arg2="(j-i)">
     <goal name="insert_qbits&#39;vc.13.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
      <goal name="insert_qbits&#39;vc.13.0.0.0.0" expl="postcondition" proved="true">
      <transf name="eliminate_if" proved="true" >
       <goal name="insert_qbits&#39;vc.13.0.0.0.0.0" expl="VC for insert_qbits" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="insert_qbits&#39;vc.13.0.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="3.15" steps="962215"/></proof>
        </goal>
        <goal name="insert_qbits&#39;vc.13.0.0.0.0.0.1" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.01" steps="811400"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits&#39;vc.13.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
      <goal name="insert_qbits&#39;vc.13.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures25">
       <goal name="insert_qbits&#39;vc.13.0.0.1.0.0" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="2.76" steps="946347"/></proof>
       </goal>
       <goal name="insert_qbits&#39;vc.13.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.07" steps="797889"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits&#39;vc.13.0.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="2.18" steps="811542"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits&#39;vc.13.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="2.10" steps="797909"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.14" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures9">
   <goal name="insert_qbits&#39;vc.14.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="insert_qbits&#39;vc.14.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(c_inv_func_int
   (fun (j1:int) -&gt;
     if j1 &lt; k then j1 else if j1 &lt; n then j1 + i else (j1 - n) + k)
   (width (parallel c (ids i))) @ j)" arg2="(j+n-k)">
     <goal name="insert_qbits&#39;vc.14.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
      <goal name="insert_qbits&#39;vc.14.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(if ((j + n) - k) &lt; width c
   then basis_ket c
        (fun (i1:int) -&gt;
          x
          @ (if i1 &lt; k then i1 else if i1 &lt; n then i1 + i else (i1 - n) + k))
        y ((j + n) - k)
   else basis_ket (ids i)
        (fun (k1:int) -&gt;
          (fun (i1:int) -&gt;
            x
            @ (if i1 &lt; k then i1 else if i1 &lt; n then i1 + i else (i1 - n) + k))
          @ (k1 + width c))
        (fun (k1:int) -&gt; y @ (k1 + range c)) (((j + n) - k) - width c))" arg2="(basis_ket (ids i)
        (fun (k1:int) -&gt;
          (fun (i1:int) -&gt;
            x
            @ (if i1 &lt; k then i1 else if i1 &lt; n then i1 + i else (i1 - n) + k))
          @ (k1 + width c))
        (fun (k1:int) -&gt; y @ (k1 + range c)) (((j + n) - k) - width c))">
       <goal name="insert_qbits&#39;vc.14.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="ids&#39;spec3">
          <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <proof prover="9"><result status="valid" time="2.76" steps="951472"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.64" steps="899222"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits&#39;vc.14.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="assert" proved="true" arg1="(width c &lt;= j+n-k)">
        <goal name="insert_qbits&#39;vc.14.0.0.0.0.1.0" expl="asserted formula" proved="true">
        <proof prover="9"><result status="valid" time="1.85" steps="797807"/></proof>
        </goal>
        <goal name="insert_qbits&#39;vc.14.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
        <transf name="eliminate_if" proved="true" >
         <goal name="insert_qbits&#39;vc.14.0.0.0.0.1.1.0" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="insert_qbits&#39;vc.14.0.0.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
          <proof prover="9"><result status="valid" time="1.13" steps="765782"/></proof>
          </goal>
          <goal name="insert_qbits&#39;vc.14.0.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
          <transf name="compute_specified" proved="true" >
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits&#39;vc.14.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="c_inv_func_int&#39;def">
      <goal name="insert_qbits&#39;vc.14.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="assert" proved="true" arg1="((c_inverse
   (fun (j1:int) -&gt;
     if j1 &lt; k then j1 else if j1 &lt; n then j1 + i else (j1 - n) + k)
   (width (parallel c (ids i))) @ j) = ( (fun (j1:int) -&gt;
     if j1 &lt; k then j1 else if j1 &lt; k+i then j1 + n-k else (j1 - i) )
   @ j))">
       <goal name="insert_qbits&#39;vc.14.0.0.1.0.0" expl="asserted formula" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="unic_inverse_c">
         <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="set_bijective1">
           <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="3.08" steps="1084767"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="3.20" steps="1085719"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0.0.2.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
             <transf name="exists" proved="true" arg1="(if e&#39; &lt; k then e&#39; else if e&#39; &lt; (k + i) then e&#39; + n -k else e&#39; - i)">
              <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0.0.2.0.0.0" proved="true">
              <proof prover="9"><result status="valid" time="3.88" steps="1085802"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="eliminate_if" proved="true" >
            <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.41" steps="765265"/></proof>
             </goal>
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="2.18" steps="811720"/></proof>
             </goal>
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.31" steps="765274"/></proof>
             </goal>
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.34" steps="765386"/></proof>
             </goal>
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0.4" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.33" steps="765391"/></proof>
             </goal>
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0.5" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.39" steps="765388"/></proof>
             </goal>
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0.6" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.40" steps="765383"/></proof>
             </goal>
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0.7" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.38" steps="765386"/></proof>
             </goal>
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0.8" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="2.26" steps="811936"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.97" steps="798228"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits&#39;vc.14.0.0.1.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="h">
        <goal name="insert_qbits&#39;vc.14.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits&#39;vc.14.0.0.1.0.1.0.0" expl="equality hypothesis" proved="true">
         <proof prover="9"><result status="valid" time="2.18" steps="798784"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits&#39;vc.14.0.0.1.1" expl="rewrite premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="insert_qbits&#39;vc.14.0.0.1.1.0" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="set_bijective1">
        <goal name="insert_qbits&#39;vc.14.0.0.1.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits&#39;vc.14.0.0.1.1.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="3.17" steps="1084767"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits&#39;vc.14.0.0.1.1.0.1" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits&#39;vc.14.0.0.1.1.0.1.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="3.26" steps="1085719"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits&#39;vc.14.0.0.1.1.0.2" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits&#39;vc.14.0.0.1.1.0.2.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="insert_qbits&#39;vc.14.0.0.1.1.0.2.0.0" expl="apply premises" proved="true">
          <transf name="exists" proved="true" arg1="(if e&#39; &lt; k then e&#39; else if e&#39; &lt; (k + i) then e&#39; + n -k else e&#39; - i)">
           <goal name="insert_qbits&#39;vc.14.0.0.1.1.0.2.0.0.0" proved="true">
           <proof prover="9"><result status="valid" time="3.29" steps="1085802"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits&#39;vc.14.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="2.26" steps="798228"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="insert_qbits_gen&#39;vc" expl="VC for insert_qbits_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert_qbits_gen&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.10" steps="646810"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.10" steps="646822"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.07" steps="646828"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.92" steps="709542"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.94" steps="709623"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.95" steps="709805"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.87" steps="709809"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="insert_qbits_gen&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(i = 0)">
    <goal name="insert_qbits_gen&#39;vc.7.0.0" expl="true case (postcondition)" proved="true">
    <transf name="replace" proved="true" arg1="result" arg2="c">
     <goal name="insert_qbits_gen&#39;vc.7.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="apply" proved="true" arg1="ang_ind_invariant">
      <goal name="insert_qbits_gen&#39;vc.7.0.0.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="insert_qbits_gen&#39;vc.7.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="insert_qbits_gen&#39;vc.7.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="2.29" steps="851097"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits_gen&#39;vc.7.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.35" steps="800020"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_gen&#39;vc.7.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="2.24" steps="849755"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_gen&#39;vc.7.0.1" expl="false case (postcondition)" proved="true">
    <transf name="apply" proved="true" arg1="H4">
     <goal name="insert_qbits_gen&#39;vc.7.0.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.50" steps="813942"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.8" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H2">
   <goal name="insert_qbits_gen&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="insert_qbits_gen&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H4">
     <goal name="insert_qbits_gen&#39;vc.8.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="insert_qbits_gen&#39;vc.8.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.34" steps="800139"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits_gen&#39;vc.8.1" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(j-i)" arg2="j">
    <goal name="insert_qbits_gen&#39;vc.8.1.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="result" arg2="c">
     <goal name="insert_qbits_gen&#39;vc.8.1.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="basis_ket_invariant">
      <goal name="insert_qbits_gen&#39;vc.8.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="2.98" steps="847909"/></proof>
      </goal>
      <goal name="insert_qbits_gen&#39;vc.8.1.0.0.1" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.19" steps="665941"/></proof>
      </goal>
      <goal name="insert_qbits_gen&#39;vc.8.1.0.0.2" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.98" steps="708847"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_gen&#39;vc.8.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="1.25" steps="665943"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_gen&#39;vc.8.1.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="1.32" steps="679059"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="insert_qbits_gen&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(i = 0)">
    <goal name="insert_qbits_gen&#39;vc.9.0.0" expl="true case (postcondition)" proved="true">
    <transf name="replace" proved="true" arg1="result" arg2="c">
     <goal name="insert_qbits_gen&#39;vc.9.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="replace" proved="true" arg1="(j-i)" arg2="j">
      <goal name="insert_qbits_gen&#39;vc.9.0.0.0.0" expl="true case (postcondition)" proved="true">
      <transf name="apply" proved="true" arg1="basis_ket_invariant">
       <goal name="insert_qbits_gen&#39;vc.9.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="3.62" steps="996545"/></proof>
       </goal>
       <goal name="insert_qbits_gen&#39;vc.9.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.42" steps="800508"/></proof>
       </goal>
       <goal name="insert_qbits_gen&#39;vc.9.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.44" steps="850635"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits_gen&#39;vc.9.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="1.43" steps="800524"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_gen&#39;vc.9.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="2.39" steps="850232"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_gen&#39;vc.9.0.1" expl="false case (postcondition)" proved="true">
    <transf name="apply" proved="true" arg1="H4">
     <goal name="insert_qbits_gen&#39;vc.9.0.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.61" steps="814581"/></proof>
     </goal>
     <goal name="insert_qbits_gen&#39;vc.9.0.1.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.44" steps="800523"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.91" steps="837188"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="insert_qbits_path_sem&#39;vc" expl="VC for insert_qbits_path_sem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert_qbits_path_sem&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.81" steps="949914"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="insert_qbits_path_sem&#39;vc.1.0" expl="precondition" proved="true">
   <transf name="exists" proved="true" arg1="(if e&#39; &lt; k then e&#39; else if e&#39; &lt; k+i then e&#39; + n-k else (e&#39; - i) )">
    <goal name="insert_qbits_path_sem&#39;vc.1.0.0" proved="true">
    <proof prover="9"><result status="valid" time="2.65" steps="935248"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.78" steps="952577"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="insert_qbits_path_sem&#39;vc.3.0" expl="precondition" proved="true">
   <transf name="exists" proved="true" arg1="(if e&#39; &lt; k then e&#39; else if e&#39; &lt; n then e&#39; + i else (e&#39; - n) + k)">
    <goal name="insert_qbits_path_sem&#39;vc.3.0.0" proved="true">
    <proof prover="9"><result status="valid" time="2.68" steps="937611"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.4" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="( (width (parallel c (ids i))))" arg2="(n+i)">
   <goal name="insert_qbits_path_sem&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures10">
   </transf>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.4.1" expl="equality hypothesis" proved="true">
   <proof prover="0"><result status="valid" time="1.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.5" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="insert_qbits_path_sem&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="2.75" steps="937979"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.11" steps="751477"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.78" steps="798254"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.06" steps="751611"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.9" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.71" steps="797852"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.10" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.72" steps="798380"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.11" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.28" steps="752242"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.12" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.30" steps="753005"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.13" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.28" steps="753510"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.14" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.31" steps="753788"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.15" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
   <goal name="insert_qbits_path_sem&#39;vc.15.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="3.05" steps="1015080"/></proof>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.15.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="4.20" steps="1062326"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.16" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="( (width (parallel c (ids i))))" arg2="(n+i)">
   <goal name="insert_qbits_path_sem&#39;vc.16.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="insert_qbits_path_sem&#39;vc.16.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
     <goal name="insert_qbits_path_sem&#39;vc.16.0.0.0" expl="precondition" proved="true">
     <proof prover="9"><result status="valid" time="2.23" steps="969181"/></proof>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.16.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.31" steps="969577"/></proof>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.16.0.0.2" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="Ensures94">
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.16.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="3.24" steps="1068807"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.17" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="insert_qbits_path_sem&#39;vc.17.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec4">
    <goal name="insert_qbits_path_sem&#39;vc.17.0.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="bv_to_ket_eq">
      <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="make_bv_length">
       <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="1.27"/></proof>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="1.30"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.0.1.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="1.05"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.08" steps="969437"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
        <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
          <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="eliminate_if" proved="true" >
           <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="concat_value_left">
             <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="0"><result status="valid" time="1.19"/></proof>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.10" steps="979571"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="concat_value_right">
             <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="concat_value_left">
              <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="hpart_length">
               <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="1.19"/></proof>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="1.30" steps="924906"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.14" steps="979929"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.11" steps="979932"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="concat_value_right">
             <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="concat_value_right">
              <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="htpart_value_b">
               <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="hpart_length">
                <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.22"/></proof>
                </goal>
                <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="1.23" steps="924910"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="1.28" steps="924910"/></proof>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="2.08" steps="979207"/></proof>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.0.3" expl="rewrite premises" proved="true">
               <transf name="rewrite" proved="true" arg1="hpart_length">
                <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.0.3.0" expl="rewrite premises" proved="true">
                <proof prover="0"><result status="valid" time="1.24"/></proof>
                </goal>
                <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.0.3.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="1.25" steps="924910"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
              <transf name="rewrite" proved="true" arg1="hpart_length">
               <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.1.0" expl="rewrite premises" proved="true">
               <transf name="rewrite" proved="true" arg1="tpart_length">
                <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.1.0.0" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="htpart_length">
                 <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0" expl="rewrite premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.26"/></proof>
                 </goal>
                 <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.36" steps="924910"/></proof>
                 </goal>
                 <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.1.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.15" steps="979207"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.1.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="2.13" steps="979628"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.1.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="1.31" steps="924910"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="1.28"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
            <proof prover="0"><result status="valid" time="1.09"/></proof>
            </goal>
            <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="0"><result status="valid" time="1.09"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.11" steps="969617"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.06"/></proof>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.09"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.2" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
         <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.52" steps="910521"/></proof>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.2.1.0.0" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="1.32"/></proof>
           </goal>
           <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.2.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="1.36"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="2.19" steps="969617"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.17.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.29" steps="910503"/></proof>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.17.0.2" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
     <goal name="insert_qbits_path_sem&#39;vc.17.0.2.0" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="set_bijective1">
      <goal name="insert_qbits_path_sem&#39;vc.17.0.2.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="1.69"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.17.0.2.0.1" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="2.04"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.17.0.2.0.2" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="insert_qbits_path_sem&#39;vc.17.0.2.0.2.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="insert_qbits_path_sem&#39;vc.17.0.2.0.2.0.0" expl="apply premises" proved="true">
        <transf name="exists" proved="true" arg1="(if e&#39; &lt; k then e&#39; else if e&#39; &lt; k+i then e&#39; + n-k else (e&#39; - i) )">
         <goal name="insert_qbits_path_sem&#39;vc.17.0.2.0.2.0.0.0" proved="true">
         <proof prover="0"><result status="valid" time="2.07"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.17.0.2.1" expl="equality hypothesis" proved="true">
     <proof prover="0"><result status="valid" time="1.29"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.17.0.3" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
     <goal name="insert_qbits_path_sem&#39;vc.17.0.3.0" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.53" steps="910487"/></proof>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.17.0.3.1" expl="equality hypothesis" proved="true">
     <proof prover="0"><result status="valid" time="1.32"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.18" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ket_to_bv_concat">
   <goal name="insert_qbits_path_sem&#39;vc.18.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ket_to_bv_concat">
    <goal name="insert_qbits_path_sem&#39;vc.18.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
     <goal name="insert_qbits_path_sem&#39;vc.18.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
      <goal name="insert_qbits_path_sem&#39;vc.18.0.0.0.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_kron_">
       <goal name="insert_qbits_path_sem&#39;vc.18.0.0.0.0.0" expl="precondition" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_eq">
        <goal name="insert_qbits_path_sem&#39;vc.18.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="2.11" steps="827407"/></proof>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.18.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="1.16"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.18.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="3.42" steps="1081460"/></proof>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.18.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.30" steps="837022"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.19" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.94" steps="1023903"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.20" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.10" steps="756388"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.21" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.19" steps="805961"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.22" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.35" steps="756997"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.23" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.19" steps="806874"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.24" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.24" steps="757500"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.25" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
   <goal name="insert_qbits_path_sem&#39;vc.25.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="insert_qbits_path_sem&#39;vc.25.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="set_bijective1">
     <goal name="insert_qbits_path_sem&#39;vc.25.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert_qbits_path_sem&#39;vc.25.0.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="insert_qbits_path_sem&#39;vc.25.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="2.11"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.25.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert_qbits_path_sem&#39;vc.25.0.0.1.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="insert_qbits_path_sem&#39;vc.25.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="2.42"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.25.0.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert_qbits_path_sem&#39;vc.25.0.0.2.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="insert_qbits_path_sem&#39;vc.25.0.0.2.0.0" expl="apply premises" proved="true">
       <transf name="exists" proved="true" arg1="(if e&#39; &lt; k then e&#39; else if e&#39; &lt; i + k then e&#39; + n-k else (e&#39; - i) )">
        <goal name="insert_qbits_path_sem&#39;vc.25.0.0.2.0.0.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="insert_qbits_path_sem&#39;vc.25.0.0.2.0.0.0.0" proved="true">
         <proof prover="0"><result status="valid" time="1.88"/></proof>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.25.0.0.2.0.0.0.1" proved="true">
         <proof prover="0"><result status="valid" time="2.07"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.25.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="3.41" steps="1105641"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.26" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.26" steps="760170"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.27" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.20" steps="760424"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.28" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
   <goal name="insert_qbits_path_sem&#39;vc.28.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="insert_qbits_path_sem&#39;vc.28.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="set_bijective1">
     <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(c_inv_func_int
   (fun (j:int) -&gt; if j &lt; k then j else if j &lt; n then j + i else (j - n) + k)
   (n + i) @ e)" arg2="(( if e &lt; k then e else if e &lt; i + k then e + n - k else e-i)
   )">
       <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="2.11"/></proof>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="c_inv_func_int&#39;def">
        <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="replace" proved="true" arg1="(if e &lt; k then e else if e &lt; (i + k) then (e + n) - k else e - i)
" arg2="((fun j -&gt; if j &lt; k then j else if j &lt; (i + k) then (j + n) - k else j - i)
e)">
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="goal_comm">
          <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="unic_inverse_c">
           <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="Ensures162">
           </transf>
           </goal>
           <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="2.01"/></proof>
           </goal>
           <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="1.10"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
         <proof prover="0"><result status="valid" time="1.30"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.1.1" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="Ensures162">
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(c_inv_func_int
   (fun (j:int) -&gt; if j &lt; k then j else if j &lt; n then j + i else (j - n) + k)
   (n + i) @ e)" arg2="(( if e &lt; k then e else if e &lt; i + k then e + n - k else e-i)
   )">
       <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(c_inv_func_int
   (fun (j:int) -&gt; if j &lt; k then j else if j &lt; n then j + i else (j - n) + k)
   (n + i) @ e)" arg2="(( if e &lt; k then e else if e &lt; i + k then e + n - k else e-i)
   )">
        <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(c_inv_func_int
   (fun (j:int) -&gt; if j &lt; k then j else if j &lt; n then j + i else (j - n) + k)
   (n + i) @ e&#39;)" arg2="(( if e&#39; &lt; k then e&#39; else if e&#39; &lt; i + k then e&#39; + n - k else e&#39;-i)
   )">
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.98"/></proof>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="rewrite" proved="true" arg1="c_inv_func_int&#39;def">
          <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
          <transf name="replace" proved="true" arg1="(if e&#39; &lt; k then e&#39; else if e&#39; &lt; (i + k) then (e&#39; + n) - k else e&#39; - i)
" arg2="((fun j -&gt; if j &lt; k then j else if j &lt; (i + k) then (j + n) - k else j - i)
e&#39;)">
           <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
           <transf name="apply" proved="true" arg1="goal_comm">
            <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="unic_inverse_c">
             <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="Ensures162">
             </transf>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="0"><result status="valid" time="1.85"/></proof>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="0"><result status="valid" time="1.30"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
           <proof prover="0"><result status="valid" time="1.35"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="Ensures162">
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="replace" proved="true" arg1="(if e &lt; k then e else if e &lt; (i + k) then (e + n) - k else e - i)
" arg2="((fun j -&gt; if j &lt; k then j else if j &lt; (i + k) then (j + n) - k else j - i)
e)">
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
         <transf name="rewrite" proved="true" arg1="c_inv_func_int&#39;def">
          <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.1.0.0" expl="equality hypothesis" proved="true">
          <transf name="apply" proved="true" arg1="goal_comm">
           <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="unic_inverse_c">
            <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="Ensures162">
            </transf>
            </goal>
            <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="1.80"/></proof>
            </goal>
            <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="1.40"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="Ensures162">
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
         <transf name="compute_specified" proved="true" >
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.1" expl="equality hypothesis" proved="true">
       <transf name="replace" proved="true" arg1="(if e &lt; k then e else if e &lt; (i + k) then (e + n) - k else e - i)
" arg2="((fun j -&gt; if j &lt; k then j else if j &lt; (i + k) then (j + n) - k else j - i)
e)">
        <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="c_inv_func_int&#39;def">
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.1.0.0" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="goal_comm">
          <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="unic_inverse_c">
           <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="Ensures162">
           </transf>
           </goal>
           <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="1.87"/></proof>
           </goal>
           <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="1.35"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="Ensures162">
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2.0" expl="apply premises" proved="true">
      <transf name="exists" proved="true" arg1="(( if e&#39; &lt; k then e&#39; else if e&#39; &lt; n then e&#39; + i else e&#39;-n+k)
   )">
       <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2.0.0.0" proved="true">
        <proof prover="0"><result status="valid" time="1.67"/></proof>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2.0.0.1" proved="true">
        <transf name="replace" proved="true" arg1="(n+i)" arg2="(width (parallel c (ids i)))">
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2.0.0.1.0" proved="true">
         <transf name="apply" proved="true" arg1="Ensures13">
          <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2.0.0.1.0.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="1.32"/></proof>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2.0.0.1.0.1" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="1.72"/></proof>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2.0.0.1.0.2" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2.0.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="0"><result status="valid" time="1.30"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.28.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="3.16" steps="1110926"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.29" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.09" steps="762940"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.30" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.29" steps="763320"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.31" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.03" steps="763574"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.32" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
   <goal name="insert_qbits_path_sem&#39;vc.32.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="2.99" steps="1070891"/></proof>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.32.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="3.45" steps="1123713"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.33" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="3.06" steps="1078651"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.34" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width(sequence
    (permutation_circuit (width (parallel c (ids i)))
     (fun (j:int) -&gt;
       if j &lt; k then j else if j &lt; n then j + i else (j - n) + k))
    (parallel c (ids i))))" arg2="(n+i)">
   <goal name="insert_qbits_path_sem&#39;vc.34.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.88" steps="827359"/></proof>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.34.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="sequence_width">
    <goal name="insert_qbits_path_sem&#39;vc.34.1.0" expl="equality hypothesis" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="insert_qbits_path_sem&#39;vc.34.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
      <goal name="insert_qbits_path_sem&#39;vc.34.1.0.0.0" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="1.27"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.34.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.51" steps="921167"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.34.1.0.0.2" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
       <goal name="insert_qbits_path_sem&#39;vc.34.1.0.0.2.0" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="Ensures207">
       </transf>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.34.1.0.0.2.1" expl="equality hypothesis" proved="true">
       <proof prover="0"><result status="valid" time="1.32"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.34.1.1" expl="rewrite premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="insert_qbits_path_sem&#39;vc.34.1.1.0" expl="rewrite premises" proved="true">
     <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
      <goal name="insert_qbits_path_sem&#39;vc.34.1.1.0.0" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.46" steps="921149"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.34.1.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.47" steps="921167"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.34.1.1.0.2" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
       <goal name="insert_qbits_path_sem&#39;vc.34.1.1.0.2.0" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="Ensures207">
       </transf>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.34.1.1.0.2.1" expl="equality hypothesis" proved="true">
       <proof prover="0"><result status="valid" time="1.22"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.35" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures111">
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.36" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="( path_sem
  (permutation_circuit (width (parallel c (ids i)))
   (c_inv_func_int
    (fun (j:int) -&gt; if j &lt; k then j else if j &lt; n then j + i else (j - n) + k)
    (width (parallel c (ids i)))))
  (kronecker im (kronecker im_d (bv_to_ket (htpart x k i)))))" arg2="( path_sem
  (permutation_circuit (width (parallel c (ids i)))
   (    (fun (j:int) -&gt; if j &lt; k then j else if j &lt; k+i then j + n-k else (j - i) )
    ))
  (kronecker im (kronecker im_d (bv_to_ket (htpart x k i)))))">
   <goal name="insert_qbits_path_sem&#39;vc.36.0" expl="precondition" proved="true">
   <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="im,k">
    <goal name="insert_qbits_path_sem&#39;vc.36.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0" expl="precondition" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_sum_">
        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0" expl="precondition" proved="true">
        <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
         <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="3.08" steps="1092165"/></proof>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.06" steps="767461"/></proof>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="3.16" steps="1092259"/></proof>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
           <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="im_d,(n-k)">
            <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="Hinst">
             <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="path_sem_sum_">
                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="bv_to_ket_length">
                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="4.39" steps="1272153"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.47" steps="866815"/></proof>
                   </goal>
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.49" steps="866815"/></proof>
                   </goal>
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                         <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                          <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                           <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="scalar_assoc">
                            <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                            <transf name="rewrite" proved="true" arg1="scalar_assoc">
                             <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                             <transf name="rewrite" proved="true" arg1="path_sem_scal">
                              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                              <transf name="apply" proved="true" arg1="scalar_eq_gen">
                               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                               <transf name="split_all_full" proved="true" >
                                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
                                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                 <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
                                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                  <transf name="replace" proved="true" arg1="(fun (j:int) -&gt;
     if j &lt; k then j else if j &lt; (k + i) then (j + n) - k else j - i)" arg2="(fun (j:int) -&gt;
     if j &lt; k then j else if j &lt; (k + i) then (j + (n - k)) else j - i)">
                                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                   <transf name="apply" proved="true" arg1="permutation_three_blocks">
                                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                    <proof prover="0"><result status="valid" time="1.44"/></proof>
                                    </goal>
                                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                                    <proof prover="9"><result status="valid" time="4.05" steps="1354957"/></proof>
                                    </goal>
                                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                                    <proof prover="9"><result status="valid" time="1.79" steps="1038491"/></proof>
                                    </goal>
                                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                                    <proof prover="9"><result status="valid" time="1.55" steps="1038491"/></proof>
                                    </goal>
                                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="apply premises" proved="true">
                                    <proof prover="9"><result status="valid" time="2.91" steps="1108218"/></proof>
                                    </goal>
                                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="apply premises" proved="true">
                                    <proof prover="9"><result status="valid" time="3.07" steps="1108245"/></proof>
                                    </goal>
                                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6" expl="apply premises" proved="true">
                                    <proof prover="9"><result status="valid" time="1.81" steps="1038507"/></proof>
                                    </goal>
                                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.7" expl="apply premises" proved="true">
                                    <proof prover="0"><result status="valid" time="1.39"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                                   <proof prover="9"><result status="valid" time="2.80" steps="1108628"/></proof>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                               <proof prover="9"><result status="valid" time="2.43" steps="930530"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                              <transf name="replace" proved="true" arg1="(width
   (permutation_circuit (width (parallel c (ids i)))
    (fun (j:int) -&gt;
      if j &lt; k then j else if j &lt; (k + i) then (j + n) - k else j - i)))" arg2="(k+ ((n-k)+i))">
                               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                                <proof prover="9"><result status="valid" time="1.32" steps="866829"/></proof>
                                </goal>
                                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                                <proof prover="9"><result status="valid" time="2.08" steps="930162"/></proof>
                                </goal>
                                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                                <proof prover="9"><result status="valid" time="3.34" steps="1201065"/></proof>
                                </goal>
                                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.3" expl="apply premises" proved="true">
                                <transf name="apply" proved="true" arg1="kronecker_ket_l">
                                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.3.0" expl="apply premises" proved="true">
                                 <proof prover="9"><result status="valid" time="2.10" steps="929708"/></proof>
                                 </goal>
                                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.3.1" expl="apply premises" proved="true">
                                 <proof prover="9"><result status="valid" time="2.06" steps="929735"/></proof>
                                 </goal>
                                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.3.2" expl="apply premises" proved="true">
                                 <proof prover="9"><result status="valid" time="3.54" steps="1201255"/></proof>
                                 </goal>
                                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.3.3" expl="apply premises" proved="true">
                                 <proof prover="9"><result status="valid" time="2.71" steps="969887"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                               <transf name="split_all_full" proved="true" >
                                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
                                <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
                                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
                                 <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
                                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="equality hypothesis" proved="true">
                                  <proof prover="9"><result status="valid" time="1.75" steps="1038510"/></proof>
                                  </goal>
                                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                                  <proof prover="9"><result status="valid" time="2.81" steps="1108657"/></proof>
                                  </goal>
                                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.1.0.0.2" expl="rewrite premises" proved="true">
                                  <proof prover="9"><result status="valid" time="4.22" steps="1356231"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
                                 <proof prover="0"><result status="valid" time="1.43"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.65" steps="1218481"/></proof>
                  </goal>
                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
                   <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
                     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="bv_to_ket_length">
                      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0.0.0.0" expl="rewrite premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="scalar_ket_length">
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0.0.0.0.0" expl="rewrite premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="bv_to_ket_length">
                        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="rewrite premises" proved="true">
                        <proof prover="0"><result status="valid" time="1.35"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.98" steps="1352864"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.64" steps="1108644"/></proof>
                     </goal>
                     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.94" steps="1355223"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0.1" expl="equality hypothesis" proved="true">
                    <proof prover="9"><result status="valid" time="4.74" steps="1425882"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
                    <transf name="replace" proved="true" arg1="(width
   (permutation_circuit (width (parallel c (ids i)))
    (fun (j:int) -&gt;
      if j &lt; k then j else if j &lt; (k + i) then (j + n) - k else j - i)))" arg2="(k+((n-k)+i))">
                     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="kronecker_ket_l">
                      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.36" steps="866829"/></proof>
                      </goal>
                      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.28" steps="930162"/></proof>
                      </goal>
                      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.0.2" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.85" steps="1206087"/></proof>
                      </goal>
                      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.0.3" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="kronecker_ket_l">
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.0.3.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.46" steps="929708"/></proof>
                       </goal>
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.0.3.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.38" steps="929735"/></proof>
                       </goal>
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.0.3.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.76" steps="1206244"/></proof>
                       </goal>
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.0.3.3" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.63" steps="969887"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.1.0" expl="equality hypothesis" proved="true">
                      <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.1.0.0" expl="equality hypothesis" proved="true">
                       <proof prover="9"><result status="valid" time="4.80" steps="1427475"/></proof>
                       </goal>
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.1.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.66" steps="1038507"/></proof>
                       </goal>
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.1.0.2" expl="rewrite premises" proved="true">
                       <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
                        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.1.0.2.0" expl="rewrite premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.87" steps="1356231"/></proof>
                        </goal>
                        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.1.0.2.1" expl="equality hypothesis" proved="true">
                        <proof prover="9"><result status="valid" time="4.63" steps="1427442"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="kronecker_ket_l">
                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.14" steps="929708"/></proof>
                    </goal>
                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.34" steps="956785"/></proof>
                    </goal>
                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.46" steps="1206244"/></proof>
                    </goal>
                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.1.0.0.3" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.37" steps="956797"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="scalar_ket">
                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.50" steps="1199807"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.61" steps="1218507"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.73" steps="1206244"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="2.47" steps="930670"/></proof>
                </goal>
                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="3.65" steps="1218507"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                <transf name="replace" proved="true" arg1="(((n - k) + ket_length (bv_to_ket (htpart x k i)))
)" arg2="(i+ (n-k))">
                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="kronecker_ket_l">
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.23" steps="929735"/></proof>
                   </goal>
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.27" steps="929708"/></proof>
                   </goal>
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.59" steps="969887"/></proof>
                   </goal>
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.67" steps="1206244"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="9"><result status="valid" time="2.55" steps="956847"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="scalar_ket">
                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="3.72" steps="1199807"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.3" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="3.76" steps="1218507"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.1.0" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="3.67" steps="1206244"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.43" steps="930670"/></proof>
              </goal>
              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.3" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="3.58" steps="1218507"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.20" steps="929700"/></proof>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.18" steps="930563"/></proof>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.3" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.21" steps="930611"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="3.28" steps="1147031"/></proof>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
          <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="4.16" steps="1287201"/></proof>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.37" steps="921651"/></proof>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.2.0.2" expl="rewrite premises" proved="true">
          <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
           <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.2.0.2.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="3.60" steps="1223086"/></proof>
           </goal>
           <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.2.0.2.1" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="4.13" steps="1288279"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
           <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
            <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0" expl="rewrite premises" proved="true">
            <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(k+((n-k)+i))">
             <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="kronecker_ket_l">
              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="1.53" steps="1038320"/></proof>
              </goal>
              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="2.53" steps="1108517"/></proof>
              </goal>
              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="3.74" steps="1349665"/></proof>
              </goal>
              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.0.3" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_ket_l">
               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.0.3.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.46" steps="1108040"/></proof>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.0.3.1" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.42" steps="1108050"/></proof>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.0.3.2" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.53" steps="1038320"/></proof>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.0.3.3" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.61" steps="1127576"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="4.50" steps="1415069"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.67" steps="1038336"/></proof>
            </goal>
            <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
            <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(k+((n-k)+i))">
             <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.2.0" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="4.18" steps="1349966"/></proof>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.2.1" expl="equality hypothesis" proved="true">
             <proof prover="0"><result status="valid" time="1.27"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="3.53" steps="1199548"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="3.15" steps="1089325"/></proof>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="3.28" steps="1147017"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.1.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.1.0.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="3.40" steps="1199548"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="3.15" steps="1089320"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="3.34" steps="1147017"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.11" steps="767463"/></proof>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.07" steps="828868"/></proof>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.07" steps="828915"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.36.1" expl="equality hypothesis" proved="true">
   <transf name="apply" proved="true" arg1="permutation_circuit_equiv">
    <goal name="insert_qbits_path_sem&#39;vc.36.1.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.20" steps="767338"/></proof>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.36.1.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="3.39" steps="1090698"/></proof>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.36.1.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="c_inv_func_int&#39;def">
       <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="unic_inverse_c">
         <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
          <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="Ensures207">
          </transf>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="0"><result status="valid" time="1.19"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="1.70"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.38" steps="921528"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.1" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
        <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="Ensures207">
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.1.1" expl="equality hypothesis" proved="true">
        <proof prover="0"><result status="valid" time="1.21"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.36.1.3" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(k+ ((n-k)+i))">
     <goal name="insert_qbits_path_sem&#39;vc.36.1.3.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="insert_qbits_path_sem&#39;vc.36.1.3.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.12" steps="767322"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.36.1.3.0.1" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.97" steps="828436"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.36.1.3.0.2" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.18" steps="767322"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.36.1.3.0.3" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="kronecker_ket_l">
       <goal name="insert_qbits_path_sem&#39;vc.36.1.3.0.3.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.02" steps="827979"/></proof>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.36.1.3.0.3.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.01" steps="827984"/></proof>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.36.1.3.0.3.2" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.14" steps="767322"/></proof>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.36.1.3.0.3.3" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.19" steps="868314"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.36.1.3.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="4.10" steps="1146465"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.37" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="sequence_width">
   <goal name="insert_qbits_path_sem&#39;vc.37.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="insert_qbits_path_sem&#39;vc.37.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
     <goal name="insert_qbits_path_sem&#39;vc.37.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
      <goal name="insert_qbits_path_sem&#39;vc.37.0.0.0.0" expl="precondition" proved="true">
      <proof prover="9"><result status="valid" time="1.54" steps="921665"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.37.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.57" steps="921683"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.37.0.0.0.2" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="Ensures63">
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.37.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.35" steps="921683"/></proof>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.37.0.0.2" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
      <goal name="insert_qbits_path_sem&#39;vc.37.0.0.2.0" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="Ensures207">
      </transf>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.37.0.0.2.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="1.18"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.37.1" expl="rewrite premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="insert_qbits_path_sem&#39;vc.37.1.0" expl="rewrite premises" proved="true">
    <transf name="apply" proved="true" arg1="permutation_circuit&#39;spec8">
     <goal name="insert_qbits_path_sem&#39;vc.37.1.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.44" steps="921683"/></proof>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.37.1.0.1" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
      <goal name="insert_qbits_path_sem&#39;vc.37.1.0.1.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="Ensures207">
      </transf>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.37.1.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="1.17"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.38" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="insert_qbits_path_sem&#39;vc.38.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="insert_qbits&#39;def">
    <goal name="insert_qbits_path_sem&#39;vc.38.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="insert_qbits_path_sem&#39;vc.38.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec">
      <goal name="insert_qbits_path_sem&#39;vc.38.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="Ensures">
      </transf>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.38.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
       <goal name="insert_qbits_path_sem&#39;vc.38.0.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="3.73" steps="1190536"/></proof>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.38.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="4.28" steps="1234181"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.38.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.24" steps="768245"/></proof>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.38.0.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.25" steps="768254"/></proof>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.38.0.3" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.19" steps="768247"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
