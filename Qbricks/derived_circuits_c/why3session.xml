<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.8.6" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="8" name="Z3" version="4.8.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="9" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="derived_circuits_c.mlw"/>
<theory name="Place" proved="true">
 <goal name="ids&#39;vc" expl="VC for ids" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ids&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.61" steps="650011"/></proof>
   </goal>
   <goal name="ids&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.00" steps="609913"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ids&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.57" steps="650346"/></proof>
  </goal>
  <goal name="ids&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.58" steps="650108"/></proof>
   </goal>
   <goal name="ids&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.24" steps="803591"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ids&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.57" steps="650125"/></proof>
   </goal>
   <goal name="ids&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.45" steps="785383"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ids&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.61" steps="650134"/></proof>
   </goal>
   <goal name="ids&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.46" steps="785389"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ids&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.59" steps="650143"/></proof>
   </goal>
   <goal name="ids&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.43" steps="785376"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ids&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="ids&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="ids&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="1.76" steps="673725"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="ids&#39;vc.6.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="ids&#39;vc.6.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="ids&#39;vc.6.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H">
      <goal name="ids&#39;vc.6.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
       <goal name="ids&#39;vc.6.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="eliminate_if" proved="true" >
        <goal name="ids&#39;vc.6.1.0.0.0.0.0" expl="VC for ids" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="ids&#39;vc.6.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.72" steps="683319"/></proof>
         </goal>
         <goal name="ids&#39;vc.6.1.0.0.0.0.0.1" expl="postcondition" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="ids&#39;vc.6.1.0.0.0.0.0.1.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="id&#39;def1">
           <goal name="ids&#39;vc.6.1.0.0.0.0.0.1.0.0" expl="postcondition" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="ids&#39;vc.6.1.0.0.0.0.0.1.0.0.0" expl="postcondition" proved="true">
            <proof prover="9"><result status="valid" time="1.23" steps="790741"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ids&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.71" steps="672833"/></proof>
   </goal>
   <goal name="ids&#39;vc.7.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="ids&#39;vc.7.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H">
     <goal name="ids&#39;vc.7.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="parallel_angle">
      <goal name="ids&#39;vc.7.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.68" steps="684331"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ids&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.76" steps="672897"/></proof>
   </goal>
   <goal name="ids&#39;vc.8.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="ids&#39;vc.8.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H2">
     <goal name="ids&#39;vc.8.1.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="x" arg2="(kronecker (hpart_ket x (n-1)) (tpart_ket x (n-1)))">
      <goal name="ids&#39;vc.8.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_kron_">
       <goal name="ids&#39;vc.8.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_eq">
        <goal name="ids&#39;vc.8.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.94" steps="787346"/></proof>
        </goal>
        <goal name="ids&#39;vc.8.1.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_id">
         <goal name="ids&#39;vc.8.1.0.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="0.77" steps="632194"/></proof>
         </goal>
         <goal name="ids&#39;vc.8.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.67"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="ids&#39;vc.8.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.90" steps="787523"/></proof>
       </goal>
       <goal name="ids&#39;vc.8.1.0.0.0.2" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="tpart_ket_l">
        <goal name="ids&#39;vc.8.1.0.0.0.2.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="0.76" steps="632196"/></proof>
        </goal>
        <goal name="ids&#39;vc.8.1.0.0.0.2.1" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="2.26" steps="787022"/></proof>
        </goal>
        <goal name="ids&#39;vc.8.1.0.0.0.2.2" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="2.22" steps="786092"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="ids&#39;vc.8.1.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="2.28" steps="787878"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ids&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.73" steps="672974"/></proof>
   </goal>
   <goal name="ids&#39;vc.9.1" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="x,n">
    <goal name="ids&#39;vc.9.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="ids&#39;vc.9.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_sum_">
      <goal name="ids&#39;vc.9.1.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="ket_sum_eq">
       <goal name="ids&#39;vc.9.1.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.37" steps="673097"/></proof>
       </goal>
       <goal name="ids&#39;vc.9.1.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="0.83" steps="632414"/></proof>
       </goal>
       <goal name="ids&#39;vc.9.1.0.0.0.2" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="ids&#39;vc.9.1.0.0.0.2.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="ids&#39;vc.9.1.0.0.0.2.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="path_sem_scal">
          <goal name="ids&#39;vc.9.1.0.0.0.2.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="scalar_eq">
           <goal name="ids&#39;vc.9.1.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
           <transf name="eliminate_let" proved="true" >
            <goal name="ids&#39;vc.9.1.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="6"><result status="valid" time="2.06" steps="106403"/></proof>
            <proof prover="9"><result status="valid" time="2.37" steps="876224"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="ids&#39;vc.9.1.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="0.83"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="ids&#39;vc.9.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="6"><result status="valid" time="2.05" steps="106054"/></proof>
      </goal>
      <goal name="ids&#39;vc.9.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.80" steps="632423"/></proof>
      </goal>
      <goal name="ids&#39;vc.9.1.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="ids&#39;vc.9.1.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="ids&#39;vc.9.1.0.0.3.0.0" expl="rewrite premises" proved="true">
        <proof prover="6"><result status="valid" time="2.11" steps="110073"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ids&#39;vc.9.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.40" steps="673097"/></proof>
     </goal>
     <goal name="ids&#39;vc.9.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.51" steps="673792"/></proof>
     </goal>
     <goal name="ids&#39;vc.9.1.0.3" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.45" steps="673806"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_zero&#39;vc" expl="VC for place_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_zero&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.61" steps="651073"/></proof>
  </goal>
  <goal name="place_zero&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.51" steps="788396"/></proof>
  </goal>
  <goal name="place_zero&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.51" steps="788450"/></proof>
  </goal>
  <goal name="place_zero&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.45" steps="788483"/></proof>
  </goal>
  <goal name="place_zero&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.49" steps="788637"/></proof>
  </goal>
  <goal name="place_zero&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="place_zero&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="place_zero&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(n= width c)">
     <goal name="place_zero&#39;vc.5.0.0.0" expl="true case (postcondition)" proved="true">
     <proof prover="9"><result status="valid" time="1.93" steps="795888"/></proof>
     </goal>
     <goal name="place_zero&#39;vc.5.0.0.1" expl="false case (postcondition)" proved="true">
     <transf name="eliminate_definition" proved="true" >
      <goal name="place_zero&#39;vc.5.0.0.1.0" expl="false case (postcondition)" proved="true">
      <transf name="replace" proved="true" arg1="result" arg2="(parallel c (ids (n- width c)))">
       <goal name="place_zero&#39;vc.5.0.0.1.0.0" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
        <goal name="place_zero&#39;vc.5.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
        <transf name="eliminate_if" proved="true" >
         <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0" expl="VC for place_zero" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
          <proof prover="9"><result status="valid" time="1.28" steps="791934"/></proof>
          </goal>
          <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.1" expl="false case (postcondition)" proved="true">
          <proof prover="9"><result status="valid" time="1.28" steps="791990"/></proof>
          </goal>
          <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.2" expl="false case (postcondition)" proved="true">
          <proof prover="9"><result status="valid" time="1.30" steps="792005"/></proof>
          </goal>
          <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.3" expl="false case (postcondition)" proved="true">
          <proof prover="9"><result status="valid" time="1.30" steps="792120"/></proof>
          </goal>
          <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.4" expl="false case (postcondition)" proved="true">
          <proof prover="9"><result status="valid" time="1.34" steps="792109"/></proof>
          </goal>
          <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.5" expl="false case (postcondition)" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.5.0" expl="false case (postcondition)" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.5.0.0" expl="false case (postcondition)" proved="true">
            <transf name="rewrite" proved="true" arg1="ids&#39;spec3">
             <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.5.0.0.0" expl="false case (postcondition)" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.5.0.0.0.0" expl="false case (postcondition)" proved="true">
              <proof prover="9"><result status="valid" time="1.40" steps="792000"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="place_zero&#39;vc.5.0.0.1.0.0.0.0.5.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.17" steps="838372"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_zero&#39;vc.5.0.0.1.0.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="1.93" steps="795875"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place_zero&#39;vc.6" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="place_zero&#39;vc.6.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.10" steps="645269"/></proof>
   </goal>
   <goal name="place_zero&#39;vc.6.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="place_zero&#39;vc.6.1.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="place_zero&#39;vc.6.1.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="result" arg2="(parallel c (ids (n- width c)))">
      <goal name="place_zero&#39;vc.6.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="parallel_angle">
       <goal name="place_zero&#39;vc.6.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="2.14" steps="800156"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_zero&#39;vc.6.1.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="1.27" steps="765640"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place_zero&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.78" steps="689183"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="place&#39;vc" expl="VC for place" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.63" steps="651511"/></proof>
  </goal>
  <goal name="place&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.97" steps="611351"/></proof>
  </goal>
  <goal name="place&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.67" steps="674267"/></proof>
  </goal>
  <goal name="place&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.42" steps="790615"/></proof>
  </goal>
  <goal name="place&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.43" steps="790624"/></proof>
  </goal>
  <goal name="place&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.41" steps="790645"/></proof>
  </goal>
  <goal name="place&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.36" steps="790686"/></proof>
  </goal>
  <goal name="place&#39;vc.7" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H2">
   <goal name="place&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.11" steps="788586"/></proof>
   </goal>
   <goal name="place&#39;vc.7.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="place&#39;vc.7.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="place&#39;vc.7.1.0.0" expl="VC for place" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place&#39;vc.7.1.0.0.0" expl="postcondition" proved="true">
      <transf name="eliminate_let" proved="true" >
       <goal name="place&#39;vc.7.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="H7">
        <goal name="place&#39;vc.7.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="place&#39;vc.7.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
          <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="place_zero&#39;spec5">
           <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="ids&#39;spec4">
             <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <transf name="rewrite" proved="true" arg1="ids&#39;spec7">
              <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
               <transf name="replace" proved="true" arg1="(fun (k1:int) -&gt; y @ k1)" arg2="y">
                <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
                <transf name="compute_specified" proved="true" >
                </transf>
                </goal>
                <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="9"><result status="valid" time="1.29" steps="778012"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.04" steps="822481"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.06" steps="822481"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.15" steps="778021"/></proof>
           </goal>
           <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.21" steps="822566"/></proof>
           </goal>
           <goal name="place&#39;vc.7.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.10" steps="822564"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="place&#39;vc.7.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.06" steps="822490"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="place&#39;vc.7.1.0.0.1" expl="postcondition" proved="true">
      <transf name="eliminate_let" proved="true" >
       <goal name="place&#39;vc.7.1.0.0.1.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="H6">
        <goal name="place&#39;vc.7.1.0.0.1.0.0" expl="postcondition" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="place&#39;vc.7.1.0.0.1.0.0.0" expl="postcondition" proved="true">
         <transf name="case" proved="true" arg1="(i&lt;k)">
          <goal name="place&#39;vc.7.1.0.0.1.0.0.0.0" expl="true case (postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="parallel_basis_ket1">
           <goal name="place&#39;vc.7.1.0.0.1.0.0.0.0.0" expl="true case (postcondition)" proved="true">
           <proof prover="9"><result status="valid" time="2.17" steps="823227"/></proof>
           </goal>
           <goal name="place&#39;vc.7.1.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.06" steps="822512"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="place&#39;vc.7.1.0.0.1.0.0.0.1" expl="false case (postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
           <goal name="place&#39;vc.7.1.0.0.1.0.0.0.1.0" expl="false case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="H18">
            <goal name="place&#39;vc.7.1.0.0.1.0.0.0.1.0.0" expl="false case (postcondition)" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="place&#39;vc.7.1.0.0.1.0.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
             <proof prover="9"><result status="valid" time="1.27" steps="778077"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="place&#39;vc.7.1.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.10" steps="822606"/></proof>
            </goal>
            <goal name="place&#39;vc.7.1.0.0.1.0.0.0.1.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.01" steps="822533"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="place&#39;vc.7.1.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.06" steps="822525"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="place&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures6">
    <goal name="place&#39;vc.8.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.88" steps="689788"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="place&#39;vc.8.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="place&#39;vc.8.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H">
     <goal name="place&#39;vc.8.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="parallel_angle">
      <goal name="place&#39;vc.8.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_add_comm">
       <goal name="place&#39;vc.8.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
        <goal name="place&#39;vc.8.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures17">
         <goal name="place&#39;vc.8.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="place&#39;vc.8.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="Ensures15">
           <goal name="place&#39;vc.8.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="replace" proved="true" arg1="(fun (k1:int) -&gt; y @ (k1 + range (ids k)))" arg2="y">
            <goal name="place&#39;vc.8.1.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <proof prover="9"><result status="valid" time="2.35" steps="789280"/></proof>
            </goal>
            <goal name="place&#39;vc.8.1.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="9"><result status="valid" time="1.09" steps="646938"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="place&#39;vc.8.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.70" steps="675548"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.90"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="place_circ_to_pps&#39;vc" expl="VC for place_circ_to_pps" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_circ_to_pps&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_let" proved="true" >
   <goal name="place_circ_to_pps&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_correct_pps">
    <goal name="place_circ_to_pps&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="0.97"/></proof>
    </goal>
    <goal name="place_circ_to_pps&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="place_circ_to_pps&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="pps_place_image_bv">
       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="place&#39;spec">
         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kron_ket_zero">
            <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="ket_zero_kron">
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(htpart (ket_to_bv x) k (h_width (circ_to_pps c)))" arg2="(ket_to_bv x)">
              <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="2.79" steps="896188"/></proof>
              </goal>
              <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
              <transf name="apply" proved="true" arg1="set_equal_bv">
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.72" steps="902107"/></proof>
               </goal>
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="htpart_value_b">
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.35" steps="778053"/></proof>
                 </goal>
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.18" steps="741098"/></proof>
                 </goal>
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.69" steps="898827"/></proof>
                 </goal>
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.3" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.69" steps="899950"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="bv_to_ket_zero">
              <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="2.80" steps="898034"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.82" steps="898875"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(kronecker (bv_to_ket (hpart (ket_to_bv x) k))
   (pps_apply_basis (circ_to_pps c)
    (htpart (ket_to_bv x) k (h_width (circ_to_pps c)))))" arg2="(
   (pps_apply_basis (circ_to_pps c)
    (htpart (ket_to_bv x) k (h_width (circ_to_pps c)))))">
            <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(path_sem_basis (parallel c (ids ((n - k) - width c))) x)" arg2="(path_sem (parallel c (ids ((n - k) - width c))) (kronecker (bv_to_ket(htpart (ket_to_bv x) k (h_width (circ_to_pps c))))  (bv_to_ket(tpart (ket_to_bv x) (k + h_width (circ_to_pps c))))))">
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="goal_comm">
              <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="path_sem_kron">
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.79" steps="896984"/></proof>
               </goal>
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.87" steps="903590"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.83" steps="899076"/></proof>
               </goal>
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="ids&#39;spec">
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0.0.3.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.91" steps="784244"/></proof>
                </goal>
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0.0.3.1" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0.0.3.1.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.80" steps="904639"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
             <transf name="replace" proved="true" arg1="(htpart (ket_to_bv x) k (h_width (circ_to_pps c)))" arg2="(hpart (ket_to_bv x)  (h_width (circ_to_pps c)))">
              <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="2.83" steps="904836"/></proof>
              </goal>
              <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
              <transf name="apply" proved="true" arg1="set_equal_bv">
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.72" steps="902540"/></proof>
               </goal>
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.1.1" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.81" steps="936290"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
            <transf name="apply" proved="true" arg1="ket_zero_kron">
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="2.40" steps="895389"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="set_path_sem_basis">
            <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="kron_ket_zero">
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="goal_comm">
              <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(path_sem (parallel (ids k) c) x)" arg2="(path_sem (parallel (ids k) c) (kronecker (bv_to_ket (hpart (ket_to_bv x) k)) (bv_to_ket (htpart (ket_to_bv x) k (h_width (circ_to_pps c))))))">
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="path_sem_kron">
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.85" steps="901375"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.49" steps="896939"/></proof>
                </goal>
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.0.2" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="ids&#39;spec">
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.0.2.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.98" steps="784223"/></proof>
                 </goal>
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.0.2.1" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.0.2.1.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.46" steps="898248"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.0.3" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.63" steps="899079"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1" expl="equality hypothesis" proved="true">
               <transf name="replace" proved="true" arg1="(kronecker (bv_to_ket (hpart (ket_to_bv x) k))
     (bv_to_ket (htpart (ket_to_bv x) k (h_width (circ_to_pps c)))))" arg2="x">
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.0" expl="equality hypothesis" proved="true">
                <proof prover="9"><result status="valid" time="1.17" steps="741063"/></proof>
                </goal>
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1" expl="equality hypothesis" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
                 <transf name="replace" proved="true" arg1="(concat1 (hpart (ket_to_bv x) k)
   (htpart (ket_to_bv x) k (h_width (circ_to_pps c))))" arg2="(ket_to_bv x)">
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
                  <proof prover="9"><result status="valid" time="1.94" steps="784839"/></proof>
                  </goal>
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="set_equal_bv">
                   <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.61" steps="904735"/></proof>
                   </goal>
                   <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1.0" expl="apply premises" proved="true">
                    <transf name="case" proved="true" arg1="(i &lt; k)">
                     <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1.0.0" expl="true case (apply premises)" proved="true">
                     <transf name="rewrite" proved="true" arg1="concat_value_left">
                      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1.0.0.0" expl="true case (apply premises)" proved="true">
                      <proof prover="9"><result status="valid" time="2.88" steps="932310"/></proof>
                      </goal>
                      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.80" steps="903894"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1.0.1" expl="false case (apply premises)" proved="true">
                     <transf name="rewrite" proved="true" arg1="concat_value_right">
                      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1.0.1.0" expl="false case (apply premises)" proved="true">
                      <transf name="rewrite" proved="true" arg1="hpart_length">
                       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1.0.1.0.0" expl="false case (apply premises)" proved="true">
                       <proof prover="9"><result status="valid" time="2.60" steps="934341"/></proof>
                       </goal>
                       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1.0.1.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.05" steps="741162"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.0.0.1.1.0.1.1.0.1.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.85" steps="907926"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.90" steps="910839"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.39" steps="896316"/></proof>
            </goal>
            <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.2.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.21" steps="741065"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
            <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="set_path_sem_basis">
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="( path_sem (parallel (ids k) (parallel c (ids ((n - k) - width c)))) x)" arg2="( path_sem (parallel (ids k) (parallel c (ids ((n - k) - width c))))     (kronecker (bv_to_ket (hpart (ket_to_bv x) k)) (kronecker (bv_to_ket (htpart (ket_to_bv x) k (h_width (circ_to_pps c)))) (bv_to_ket (tpart (ket_to_bv x) (k + h_width (circ_to_pps c)))) )        
))">
              <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="goal_comm">
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="path_sem_kron">
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.51" steps="896419"/></proof>
                </goal>
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.1" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="parallel_width">
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.1.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="kronecker_ket_l">
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.75" steps="895714"/></proof>
                  </goal>
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.69" steps="895927"/></proof>
                  </goal>
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.71" steps="896848"/></proof>
                  </goal>
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.1.0.3" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                   <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.1.0.3.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.83" steps="916378"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.58" steps="896503"/></proof>
                </goal>
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.3" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="path_sem_kron">
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.3.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.41" steps="896848"/></proof>
                 </goal>
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.3.1" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.3.1.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.94" steps="916378"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.3.2" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.78" steps="898849"/></proof>
                 </goal>
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.3.3" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="ids&#39;spec">
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.3.3.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.92" steps="784232"/></proof>
                  </goal>
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.3.3.1" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                   <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.0.0.3.3.1.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.93" steps="903273"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
              <transf name="replace" proved="true" arg1="(kronecker (bv_to_ket (hpart (ket_to_bv x) k))
     (kronecker
      (bv_to_ket (htpart (ket_to_bv x) k (h_width (circ_to_pps c))))
      (bv_to_ket (tpart (ket_to_bv x) (k + h_width (circ_to_pps c))))))" arg2="x">
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.0" expl="equality hypothesis" proved="true">
               <proof prover="9"><result status="valid" time="1.08" steps="741068"/></proof>
               </goal>
               <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1" expl="equality hypothesis" proved="true">
               <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0" expl="equality hypothesis" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                 <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
                 <transf name="replace" proved="true" arg1="(concat1 (hpart (ket_to_bv x) k)
   (concat1 (htpart (ket_to_bv x) k (h_width (circ_to_pps c)))
    (tpart (ket_to_bv x) (k + h_width (circ_to_pps c)))))" arg2="(ket_to_bv x)">
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.0" expl="equality hypothesis" proved="true">
                  <proof prover="9"><result status="valid" time="2.03" steps="784824"/></proof>
                  </goal>
                  <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="set_equal_bv">
                   <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.56" steps="910983"/></proof>
                   </goal>
                   <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0" expl="apply premises" proved="true">
                    <transf name="case" proved="true" arg1="(i&lt;k)">
                     <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.0" expl="true case (apply premises)" proved="true">
                     <transf name="rewrite" proved="true" arg1="concat_value_left">
                      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.0.0" expl="true case (apply premises)" proved="true">
                      <proof prover="9"><result status="valid" time="2.92" steps="932679"/></proof>
                      </goal>
                      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.47" steps="904241"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1" expl="false case (apply premises)" proved="true">
                     <transf name="case" proved="true" arg1="(i&lt;k+ width c)">
                      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0" expl="false case (true case. apply premises)" proved="true">
                      <transf name="rewrite" proved="true" arg1="concat_value_right">
                       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0" expl="false case (true case. apply premises)" proved="true">
                       <transf name="rewrite" proved="true" arg1="concat_value_left">
                        <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.0" expl="false case (true case. apply premises)" proved="true">
                        <transf name="rewrite" proved="true" arg1="htpart_value_b">
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                         <transf name="rewrite" proved="true" arg1="hpart_length">
                          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                          <proof prover="9"><result status="valid" time="1.04" steps="764831"/></proof>
                          </goal>
                          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.23" steps="741214"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.18" steps="741214"/></proof>
                         </goal>
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.97" steps="787372"/></proof>
                         </goal>
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.0.3" expl="rewrite premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.0.3.0" proved="true">
                          <proof prover="9"><result status="valid" time="2.79" steps="904257"/></proof>
                          </goal>
                          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.0.3.1" proved="true">
                          <proof prover="9"><result status="valid" time="2.73" steps="904092"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.1.0" proved="true">
                         <proof prover="9"><result status="valid" time="2.84" steps="904257"/></proof>
                         </goal>
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.0.1.1" proved="true">
                         <proof prover="9"><result status="valid" time="2.46" steps="907128"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.1" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.1.0" proved="true">
                        <proof prover="9"><result status="valid" time="2.60" steps="904331"/></proof>
                        </goal>
                        <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.0.1.1" proved="true">
                        <proof prover="9"><result status="valid" time="2.77" steps="907007"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1" expl="false case (apply premises)" proved="true">
                      <transf name="rewrite" proved="true" arg1="concat_value_right">
                       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0" expl="false case (apply premises)" proved="true">
                       <transf name="rewrite" proved="true" arg1="concat_value_right">
                        <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0" expl="false case (apply premises)" proved="true">
                        <transf name="rewrite" proved="true" arg1="tpart_value_b">
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.0" expl="false case (apply premises)" proved="true">
                         <transf name="rewrite" proved="true" arg1="htpart_length">
                          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.0.0" expl="false case (apply premises)" proved="true">
                          <transf name="rewrite" proved="true" arg1="hpart_length">
                           <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                           <proof prover="9"><result status="valid" time="1.26" steps="764848"/></proof>
                           </goal>
                           <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                           <proof prover="9"><result status="valid" time="1.18" steps="741218"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.21" steps="741218"/></proof>
                          </goal>
                          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="2.71" steps="899711"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.96" steps="900840"/></proof>
                         </goal>
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.2" expl="rewrite premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.2.0" proved="true">
                          <proof prover="9"><result status="valid" time="2.83" steps="907280"/></proof>
                          </goal>
                          <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.0.2.1" proved="true">
                          <proof prover="9"><result status="valid" time="2.57" steps="918066"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.1" expl="rewrite premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.1.0" proved="true">
                         <proof prover="9"><result status="valid" time="2.67" steps="907021"/></proof>
                         </goal>
                         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.0.1.1" proved="true">
                         <proof prover="9"><result status="valid" time="3.12" steps="910214"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.1" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.1.0" proved="true">
                        <proof prover="9"><result status="valid" time="3.19" steps="904495"/></proof>
                        </goal>
                        <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.0.1.1.0.0.1.1.0.1.1.1.1" proved="true">
                        <proof prover="9"><result status="valid" time="2.76" steps="906985"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.52" steps="896448"/></proof>
             </goal>
             <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.0.0.3.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.31" steps="741070"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.01" steps="731822"/></proof>
         </goal>
         <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.18" steps="731822"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.97" steps="613338"/></proof>
       </goal>
       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.71" steps="665469"/></proof>
       </goal>
       <goal name="place_circ_to_pps&#39;vc.0.0.1.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="0.78"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="0.77"/></proof>
      </goal>
      <goal name="place_circ_to_pps&#39;vc.0.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.94" steps="613338"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_equiv_by_circ&#39;vc" expl="VC for pps_apply_equiv_by_circ" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_equiv_by_circ&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_pps_apply_equiv">
   <goal name="pps_apply_equiv_by_circ&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="2.26" steps="771407"/></proof>
   </goal>
   <goal name="pps_apply_equiv_by_circ&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_apply_equiv_by_circ&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(pps_apply_basis h x )" arg2="(pps_apply h (bv_to_ket x))">
     <goal name="pps_apply_equiv_by_circ&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(pps_apply h (bv_to_ket x) )" arg2="(path_sem c (bv_to_ket x))">
      <goal name="pps_apply_equiv_by_circ&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.76"/></proof>
      </goal>
      <goal name="pps_apply_equiv_by_circ&#39;vc.0.1.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="0.76"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_equiv_by_circ&#39;vc.0.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="1.67" steps="654403"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_pps&#39;vc" expl="VC for place_pps" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_pps&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.94" steps="613581"/></proof>
  </goal>
  <goal name="place_pps&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.67" steps="665668"/></proof>
  </goal>
  <goal name="place_pps&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.94" steps="613617"/></proof>
  </goal>
  <goal name="place_pps&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.96" steps="613618"/></proof>
  </goal>
  <goal name="place_pps&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.62" steps="654590"/></proof>
  </goal>
  <goal name="place_pps&#39;vc.5" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(correct_path_sum (place c k n) (pps_place (circ_to_pps c) k n))">
   <goal name="place_pps&#39;vc.5.0" expl="asserted formula" proved="true">
   <proof prover="9"><result status="valid" time="2.29" steps="771081"/></proof>
   </goal>
   <goal name="place_pps&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="2.31" steps="109204"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron&#39;vc" expl="VC for place_kron" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="place_kron&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="place&#39;def">
    <goal name="place_kron&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="path_sem_kron">
     <goal name="place_kron&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.68" steps="891450"/></proof>
     </goal>
     <goal name="place_kron&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(width (place_zero c (n - k)))" arg2="(width c + (n-width c-k))">
      <goal name="place_kron&#39;vc.0.0.0.1.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="kronecker_ket_l">
       <goal name="place_kron&#39;vc.0.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.71" steps="890253"/></proof>
       </goal>
       <goal name="place_kron&#39;vc.0.0.0.1.0.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.94" steps="777390"/></proof>
       </goal>
       <goal name="place_kron&#39;vc.0.0.0.1.0.2" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.21" steps="732237"/></proof>
       </goal>
       <goal name="place_kron&#39;vc.0.0.0.1.0.3" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.16" steps="732237"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_kron&#39;vc.0.0.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="2.68" steps="890729"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="place_kron&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.69" steps="890650"/></proof>
     </goal>
     <goal name="place_kron&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="place_zero&#39;spec">
      <goal name="place_kron&#39;vc.0.0.0.3.0" expl="apply premises" proved="true">
      <transf name="eliminate_if" proved="true" >
       <goal name="place_kron&#39;vc.0.0.0.3.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="place_kron&#39;vc.0.0.0.3.0.0.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.30" steps="754738"/></proof>
        </goal>
        <goal name="place_kron&#39;vc.0.0.0.3.0.0.1" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="path_sem_kron">
         <goal name="place_kron&#39;vc.0.0.0.3.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.19" steps="741450"/></proof>
         </goal>
         <goal name="place_kron&#39;vc.0.0.0.3.0.0.1.1" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="ids&#39;spec7">
          <goal name="place_kron&#39;vc.0.0.0.3.0.0.1.1.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="1.22" steps="741464"/></proof>
          </goal>
          <goal name="place_kron&#39;vc.0.0.0.3.0.0.1.1.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.22" steps="741481"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_kron&#39;vc.0.0.0.3.0.0.1.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.18" steps="741450"/></proof>
         </goal>
         <goal name="place_kron&#39;vc.0.0.0.3.0.0.1.3" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.62" steps="896113"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="place_kron&#39;vc.0.0.0.3.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.84" steps="777366"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_kron&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.86" steps="777408"/></proof>
    </goal>
    <goal name="place_kron&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.95" steps="777390"/></proof>
    </goal>
    <goal name="place_kron&#39;vc.0.0.3" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.88" steps="777420"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron_left&#39;vc" expl="VC for place_kron_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron_left&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="place_kron_left&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="place&#39;spec">
    <goal name="place_kron_left&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="place_kron_left&#39;vc.0.0.0.0" expl="VC for place_kron_left" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_kron_left&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.88" steps="784535"/></proof>
      </goal>
      <goal name="place_kron_left&#39;vc.0.0.0.0.1" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_kron">
       <goal name="place_kron_left&#39;vc.0.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.16" steps="741756"/></proof>
       </goal>
       <goal name="place_kron_left&#39;vc.0.0.0.0.1.1" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="ids&#39;spec7">
        <goal name="place_kron_left&#39;vc.0.0.0.0.1.1.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.18" steps="741777"/></proof>
        </goal>
        <goal name="place_kron_left&#39;vc.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.22" steps="741777"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_kron_left&#39;vc.0.0.0.0.1.2" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.18" steps="741756"/></proof>
       </goal>
       <goal name="place_kron_left&#39;vc.0.0.0.0.1.3" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.71" steps="895340"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_kron_left&#39;vc.0.0.0.0.2" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.21" steps="741800"/></proof>
      </goal>
      <goal name="place_kron_left&#39;vc.0.0.0.0.3" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.18" steps="741825"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_kron_left&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.17" steps="732549"/></proof>
    </goal>
    <goal name="place_kron_left&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="place_kron_left&#39;vc.0.0.2.0" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_kron_left&#39;vc.0.0.2.0.0" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.00" steps="784490"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron_right&#39;vc" expl="VC for place_kron_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron_right&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="place_kron_right&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="place&#39;spec">
    <goal name="place_kron_right&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="place_kron_right&#39;vc.0.0.0.0" expl="VC for place_kron_right" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_kron_right&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.92" steps="784831"/></proof>
      </goal>
      <goal name="place_kron_right&#39;vc.0.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.17" steps="742063"/></proof>
      </goal>
      <goal name="place_kron_right&#39;vc.0.0.0.0.2" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_kron">
       <goal name="place_kron_right&#39;vc.0.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="place_kron_right&#39;vc.0.0.0.0.2.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ids&#39;spec7">
         <goal name="place_kron_right&#39;vc.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.23" steps="760099"/></proof>
         </goal>
         <goal name="place_kron_right&#39;vc.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.20" steps="760106"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_kron_right&#39;vc.0.0.0.0.2.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.06" steps="784809"/></proof>
       </goal>
       <goal name="place_kron_right&#39;vc.0.0.0.0.2.2" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.84" steps="895719"/></proof>
       </goal>
       <goal name="place_kron_right&#39;vc.0.0.0.0.2.3" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.24" steps="742012"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_kron_right&#39;vc.0.0.0.0.3" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.21" steps="742087"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_kron_right&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.89" steps="777756"/></proof>
    </goal>
    <goal name="place_kron_right&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="place_kron_right&#39;vc.0.0.2.0" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.29" steps="755227"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron_right_sem&#39;vc" expl="VC for place_kron_right_sem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron_right_sem&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="place_kron_right_sem&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="place&#39;spec">
    <goal name="place_kron_right_sem&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="place_kron_right_sem&#39;vc.0.0.0.0" expl="VC for place_kron_right_sem" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_kron_right_sem&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.94" steps="785204"/></proof>
      </goal>
      <goal name="place_kron_right_sem&#39;vc.0.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.18" steps="742434"/></proof>
      </goal>
      <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_to_sem">
       <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (parallel (ids k) c))" arg2="(k+ width c)">
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_ket_l">
         <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.89" steps="785215"/></proof>
         </goal>
         <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.0.0.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.71" steps="895686"/></proof>
         </goal>
         <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.0.0.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.19" steps="742396"/></proof>
         </goal>
         <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.0.0.3" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.90" steps="785193"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.0.1" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="2.72" steps="898432"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="path_sem_kron">
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.1.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(width (ids k))" arg2="k">
         <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.1.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.18" steps="742396"/></proof>
         </goal>
         <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.1.0.1" expl="equality hypothesis" proved="true">
         <proof prover="9"><result status="valid" time="2.65" steps="896022"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.1.1" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.90" steps="785193"/></proof>
        </goal>
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.1.2" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="2.67" steps="896431"/></proof>
        </goal>
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.2.1.3" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="2.03" steps="786183"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_to_sem">
       <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (parallel (ids k) c))" arg2="(k+ width c)">
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.0.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.17" steps="742452"/></proof>
        </goal>
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.0.1" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="1.19" steps="742423"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="path_sem_kron">
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.1.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(width (ids k))" arg2="k">
         <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.1.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.22" steps="742401"/></proof>
         </goal>
         <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.1.0.1" expl="equality hypothesis" proved="true">
         <proof prover="9"><result status="valid" time="1.21" steps="742416"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.1.1" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.05" steps="742434"/></proof>
        </goal>
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.1.2" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.26" steps="742419"/></proof>
        </goal>
        <goal name="place_kron_right_sem&#39;vc.0.0.0.0.3.1.3" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.04" steps="742437"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_kron_right_sem&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.94" steps="777988"/></proof>
    </goal>
    <goal name="place_kron_right_sem&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.31" steps="746528"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_zero_kron&#39;vc" expl="VC for place_zero_kron" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_zero_kron&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="place_zero_kron&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="place_zero_kron&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="place_zero&#39;spec">
     <goal name="place_zero_kron&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="eliminate_if" proved="true" >
      <goal name="place_zero_kron&#39;vc.0.0.0.0.0" expl="VC for place_zero_kron" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="place_zero_kron&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="1.23" steps="756639"/></proof>
       </goal>
       <goal name="place_zero_kron&#39;vc.0.0.0.0.0.1" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="1.01" steps="756700"/></proof>
       </goal>
       <goal name="place_zero_kron&#39;vc.0.0.0.0.0.2" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="1.21" steps="756692"/></proof>
       </goal>
       <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="(bv_to_ket x)" arg2="(kronecker (bv_to_ket (hpart x (width c))) (bv_to_ket (tpart x (width c))))">
        <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="path_sem_kron">
         <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.69" steps="886718"/></proof>
         </goal>
         <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0.1" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
          <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0.1.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.76" steps="895563"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.18" steps="756643"/></proof>
         </goal>
         <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0.3" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="ids&#39;spec">
          <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0.3.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="1.05" steps="756643"/></proof>
          </goal>
          <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0.3.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.97" steps="800030"/></proof>
          </goal>
          <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0.3.2" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
           <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.0.3.2.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="2.65" steps="888886"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="place_zero_kron&#39;vc.0.0.0.0.0.3.1" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="2.66" steps="886979"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="place_zero_kron&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <transf name="eliminate_if" proved="true" >
      <goal name="place_zero_kron&#39;vc.0.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="place_zero_kron&#39;vc.0.0.0.1.0.0" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.17" steps="756627"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron_gen&#39;vc" expl="VC for place_kron_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron_gen&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_if" proved="true" >
   <goal name="place_kron_gen&#39;vc.0.0" expl="VC for place_kron_gen" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="place_kron_gen&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="2.06" steps="808775"/></proof>
    </goal>
    <goal name="place_kron_gen&#39;vc.0.0.1" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="2.48" steps="925446"/></proof>
    </goal>
    <goal name="place_kron_gen&#39;vc.0.0.2" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.99"/></proof>
    </goal>
    <goal name="place_kron_gen&#39;vc.0.0.3" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="place_kron_gen&#39;vc.0.0.3.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(bv_to_ket x)" arg2="(kronecker (bv_to_ket (hpart x k))
    (kronecker ( (bv_to_ket (htpart x k (width c))))
     (bv_to_ket (tpart x (width c + k)))))">
      <goal name="place_kron_gen&#39;vc.0.0.3.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="place_kron">
       <goal name="place_kron_gen&#39;vc.0.0.3.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.94" steps="805799"/></proof>
       </goal>
       <goal name="place_kron_gen&#39;vc.0.0.3.0.0.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.97" steps="805819"/></proof>
       </goal>
       <goal name="place_kron_gen&#39;vc.0.0.3.0.0.2" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.94" steps="923302"/></proof>
       </goal>
       <goal name="place_kron_gen&#39;vc.0.0.3.0.0.3" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.98" steps="924709"/></proof>
       </goal>
       <goal name="place_kron_gen&#39;vc.0.0.3.0.0.4" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="1.18"/></proof>
       </goal>
       <goal name="place_kron_gen&#39;vc.0.0.3.0.0.5" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.23" steps="761294"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_kron_gen&#39;vc.0.0.3.0.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="( bv_to_ket x)" arg2="(bv_to_ket (concat1 (hpart x k) (concat1 (htpart x k (width c)) (tpart x (width c+k)))))">
       <goal name="place_kron_gen&#39;vc.0.0.3.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="2.95" steps="926381"/></proof>
       </goal>
       <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="bv_to_ket_eq">
        <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="concat_length">
         <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="concat_length">
          <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.0.0.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="3.00" steps="934928"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0" expl="apply premises" proved="true">
         <transf name="case" proved="true" arg1="(i&lt;k)">
          <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.0" expl="true case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="concat_value_left">
           <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.0.0" expl="true case (apply premises)" proved="true">
           <proof prover="9"><result status="valid" time="3.01" steps="950409"/></proof>
           </goal>
           <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.93" steps="926914"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.1" expl="false case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="concat_value_right">
           <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.1.0" expl="false case (apply premises)" proved="true">
           <transf name="case" proved="true" arg1="(i&lt;k+width c)">
            <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.1.0.0" expl="false case (true case. apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="concat_value_left">
             <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.1.0.0.0" expl="false case (true case. apply premises)" proved="true">
             <proof prover="0"><result status="valid" time="1.05"/></proof>
             </goal>
             <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.1.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="3.03" steps="931434"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.1.0.1" expl="false case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="concat_value_right">
             <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.1.0.1.0" expl="false case (apply premises)" proved="true">
             <proof prover="0"><result status="valid" time="1.03"/></proof>
             </goal>
             <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.1.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.96" steps="935205"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="place_kron_gen&#39;vc.0.0.3.0.1.1.1.0.1.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.97" steps="931846"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_kronecker&#39;vc" expl="VC for place_kronecker" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kronecker&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="place_kron_gen">
   <goal name="place_kronecker&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="place_kronecker&#39;vc.0.0.0" expl="VC for place_kronecker" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="place_kronecker&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="place_kronecker&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(bv_to_ket (hpart x k))" arg2="kronecker_neutral">
       <goal name="place_kronecker&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="(bv_to_ket (tpart x (width c + k)))" arg2="kronecker_neutral">
        <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="neutral_">
         <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="neutral_1">
          <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="replace" proved="true" arg1="(htpart x k (width c))" arg2="x">
           <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <proof prover="9"><result status="valid" time="1.29" steps="762720"/></proof>
           </goal>
           <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="apply" proved="true" arg1="set_equal_bv">
            <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="3.00" steps="928546"/></proof>
            </goal>
            <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="3.12" steps="957789"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="set_equal_ket_l">
         <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="exists" proved="true" arg1="0">
          <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.1.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.1.0.0.0" proved="true">
           <proof prover="9"><result status="valid" time="3.05" steps="930975"/></proof>
           </goal>
           <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.1.0.0.1" proved="true">
           <proof prover="9"><result status="valid" time="1.28" steps="763502"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="place_kronecker&#39;vc.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="3.03" steps="941760"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_kronecker&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="set_equal_ket_l">
        <goal name="place_kronecker&#39;vc.0.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="exists" proved="true" arg1="0">
         <goal name="place_kronecker&#39;vc.0.0.0.0.0.1.0.0" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="place_kronecker&#39;vc.0.0.0.0.0.1.0.0.0" proved="true">
          <proof prover="9"><result status="valid" time="2.59" steps="924568"/></proof>
          </goal>
          <goal name="place_kronecker&#39;vc.0.0.0.0.0.1.0.0.1" proved="true">
          <proof prover="9"><result status="valid" time="1.22" steps="763502"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="place_kronecker&#39;vc.0.0.0.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="3.00" steps="939993"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="place_kronecker&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(bv_to_ket (hpart x k))" arg2="kronecker_neutral">
      <goal name="place_kronecker&#39;vc.0.0.0.1.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="place_kronecker&#39;vc.0.0.0.1.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="neutral_">
        <goal name="place_kronecker&#39;vc.0.0.0.1.0.0.0" expl="postcondition" proved="true">
        <transf name="replace" proved="true" arg1="(htpart x k (width c))" arg2="(hpart x  (width c))">
         <goal name="place_kronecker&#39;vc.0.0.0.1.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="add_zero">
          <goal name="place_kronecker&#39;vc.0.0.0.1.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="compute_specified" proved="true" >
          </transf>
          </goal>
          <goal name="place_kronecker&#39;vc.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.21" steps="762726"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_kronecker&#39;vc.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="set_equal_bv">
          <goal name="place_kronecker&#39;vc.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.98" steps="932291"/></proof>
          </goal>
          <goal name="place_kronecker&#39;vc.0.0.0.1.0.0.0.1.1" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="place_kronecker&#39;vc.0.0.0.1.0.0.0.1.1.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="3.08" steps="960733"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="place_kronecker&#39;vc.0.0.0.1.1" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="set_equal_ket_l">
       <goal name="place_kronecker&#39;vc.0.0.0.1.1.0" expl="apply premises" proved="true">
       <transf name="exists" proved="true" arg1="0">
        <goal name="place_kronecker&#39;vc.0.0.0.1.1.0.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="place_kronecker&#39;vc.0.0.0.1.1.0.0.0" proved="true">
         <proof prover="9"><result status="valid" time="2.44" steps="783036"/></proof>
         </goal>
         <goal name="place_kronecker&#39;vc.0.0.0.1.1.0.0.1" proved="true">
         <proof prover="9"><result status="valid" time="1.00" steps="627178"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_kronecker&#39;vc.0.0.0.1.1.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.40" steps="789393"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="place_kronecker&#39;vc.0.0.0.2" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(bv_to_ket (tpart x (width c + k)))" arg2="kronecker_neutral">
      <goal name="place_kronecker&#39;vc.0.0.0.2.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="place_kronecker&#39;vc.0.0.0.2.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="neutral_1">
        <goal name="place_kronecker&#39;vc.0.0.0.2.0.0.0" expl="postcondition" proved="true">
        <transf name="replace" proved="true" arg1="(htpart x k (width c))" arg2="(tpart x  k)">
         <goal name="place_kronecker&#39;vc.0.0.0.2.0.0.0.0" expl="postcondition" proved="true">
         <transf name="compute_specified" proved="true" >
         </transf>
         </goal>
         <goal name="place_kronecker&#39;vc.0.0.0.2.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="set_equal_bv">
          <goal name="place_kronecker&#39;vc.0.0.0.2.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.93" steps="932455"/></proof>
          </goal>
          <goal name="place_kronecker&#39;vc.0.0.0.2.0.0.0.1.1" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="3.05" steps="961021"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="place_kronecker&#39;vc.0.0.0.2.1" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="set_equal_ket_l">
       <goal name="place_kronecker&#39;vc.0.0.0.2.1.0" expl="apply premises" proved="true">
       <transf name="exists" proved="true" arg1="0">
        <goal name="place_kronecker&#39;vc.0.0.0.2.1.0.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="place_kronecker&#39;vc.0.0.0.2.1.0.0.0" proved="true">
         <proof prover="9"><result status="valid" time="2.40" steps="783151"/></proof>
         </goal>
         <goal name="place_kronecker&#39;vc.0.0.0.2.1.0.0.1" proved="true">
         <proof prover="9"><result status="valid" time="0.99" steps="627185"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_kronecker&#39;vc.0.0.0.2.1.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.47" steps="789558"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="place_kronecker&#39;vc.0.0.0.3" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="1.01" steps="626576"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_kronecker&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.80" steps="615849"/></proof>
   </goal>
   <goal name="place_kronecker&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.85" steps="615849"/></proof>
   </goal>
   <goal name="place_kronecker&#39;vc.0.3" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.86" steps="615849"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron_gen_&#39;vc" expl="VC for place_kron_gen_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron_gen_&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="place_kron_gen_&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="place&#39;spec">
    <goal name="place_kron_gen_&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="place_kron_gen_&#39;vc.0.0.0.0" expl="VC for place_kron_gen_" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_kron_gen_&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.16" steps="757402"/></proof>
      </goal>
      <goal name="place_kron_gen_&#39;vc.0.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.97" steps="787019"/></proof>
      </goal>
      <goal name="place_kron_gen_&#39;vc.0.0.0.0.2" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.37" steps="757432"/></proof>
      </goal>
      <goal name="place_kron_gen_&#39;vc.0.0.0.0.3" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_to_sem">
       <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (parallel (ids k) (parallel c (ids ((n - k) - width c)))))" arg2="(k+ (width c + (n-width c -k)))">
        <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_ket_l">
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.96" steps="786941"/></proof>
         </goal>
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.75" steps="899522"/></proof>
         </goal>
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.0.0.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.22" steps="744124"/></proof>
         </goal>
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.0.0.3" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.73" steps="899015"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.0.1" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="2.72" steps="901531"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="path_sem_kron">
        <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="2.79" steps="899455"/></proof>
        </goal>
        <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.1" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(width (parallel c (ids ((n - k) - width c))))" arg2="(width c + (n-width c -k))">
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.1.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.1.0.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.78" steps="898411"/></proof>
          </goal>
          <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.1.0.1" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="1.90" steps="786940"/></proof>
          </goal>
          <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.1.0.2" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="1.17" steps="744124"/></proof>
          </goal>
          <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.1.0.3" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="1.18" steps="744124"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.1.1" expl="equality hypothesis" proved="true">
         <proof prover="9"><result status="valid" time="2.98" steps="921204"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.2" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="2.75" steps="898754"/></proof>
        </goal>
        <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.3" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="path_sem_kron">
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.3.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.22" steps="744124"/></proof>
         </goal>
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.3.1" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="ids&#39;spec7">
          <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.3.1.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="1.22" steps="744145"/></proof>
          </goal>
          <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.3.1.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.26" steps="744162"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.3.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.11" steps="787894"/></proof>
         </goal>
         <goal name="place_kron_gen_&#39;vc.0.0.0.0.3.1.3.3" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.82" steps="898859"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_kron_gen_&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.94" steps="779208"/></proof>
    </goal>
    <goal name="place_kron_gen_&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.98" steps="779205"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_zero_place&#39;vc" expl="VC for place_zero_place" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_zero_place&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="place_zero_kron">
   <goal name="place_zero_place&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="place_zero_place&#39;vc.0.0.0" expl="VC for place_zero_place" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="place_zero_place&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.92"/></proof>
     </goal>
     <goal name="place_zero_place&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="place_zero_place&#39;vc.0.0.0.1.0" expl="postcondition" proved="true">
      <transf name="case" proved="true" arg1="(k =0)">
       <goal name="place_zero_place&#39;vc.0.0.0.1.0.0" expl="true case (postcondition)" proved="true">
       <transf name="case" proved="true" arg1="(n = width c)">
        <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.0" expl="true case (postcondition)" proved="true">
        <proof prover="9"><result status="valid" time="2.53" steps="929329"/></proof>
        </goal>
        <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1" expl="false case (true case. postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="place_kron_gen2">
         <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0" expl="false case (true case. postcondition)" proved="true">
         <transf name="rewrite" proved="true" arg1="place_kron_gen2">
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0" expl="false case (true case. postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
           <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0" expl="false case (true case. postcondition)" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_eq">
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(hpart (hpart x (width (place c k n))) (width c))" arg2="(hpart x (width c))">
             <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
             </transf>
             </goal>
             <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <transf name="apply" proved="true" arg1="set_equal_bv">
              <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="2.56" steps="934142"/></proof>
              </goal>
              <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1.1.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="hpart_value_b">
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="hpart_value_b">
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="hpart_value_b">
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.23" steps="763512"/></proof>
                  </goal>
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.51" steps="931027"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.88" steps="931187"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="2.88" steps="931027"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
             <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="bv_to_ket_eq">
              <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="2.89" steps="934883"/></proof>
              </goal>
              <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0" expl="apply premises" proved="true">
               <transf name="case" proved="true" arg1="(i&lt; n-width c)">
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0" expl="true case (apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value_left">
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0" expl="true case (apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="tpart_value_b">
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="hpart_value_b">
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                   <transf name="rewrite" proved="true" arg1="tpart_value_b">
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                    <proof prover="9"><result status="valid" time="1.25" steps="763567"/></proof>
                    </goal>
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.87" steps="930188"/></proof>
                    </goal>
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.00" steps="807574"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.88" steps="931675"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.82" steps="930188"/></proof>
                  </goal>
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.88" steps="934579"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.89" steps="934528"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.1" expl="false case (apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value_right">
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.1.0" expl="false case (apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="tpart_length">
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.1.0.0" expl="false case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="hpart_length">
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.1.0.0.0" expl="false case (apply premises)" proved="true">
                   <proof prover="9"><result status="valid" time="2.95" steps="967663"/></proof>
                   </goal>
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.77" steps="930186"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.92" steps="934620"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.0.0.1.0.1.0.1.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.92" steps="938199"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.33" steps="763471"/></proof>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.03" steps="807445"/></proof>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.3" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.26" steps="763471"/></proof>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.4" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.28" steps="763471"/></proof>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.0.5" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.03" steps="807416"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.21" steps="763471"/></proof>
         </goal>
         <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.28" steps="763471"/></proof>
         </goal>
         <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.3" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="2.95" steps="930336"/></proof>
         </goal>
         <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.4" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.24" steps="763471"/></proof>
         </goal>
         <goal name="place_zero_place&#39;vc.0.0.0.1.0.0.1.5" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.23" steps="763469"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_zero_place&#39;vc.0.0.0.1.0.1" expl="false case (postcondition)" proved="true">
       <transf name="case" proved="true" arg1="(n = width c)">
        <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.0" expl="false case (true case. postcondition)" proved="true">
        <proof prover="9"><result status="valid" time="1.94" steps="807503"/></proof>
        </goal>
        <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1" expl="false case (postcondition)" proved="true">
        <transf name="apply" proved="true" arg1="goal_comm">
         <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="place_kron_gen">
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
          <transf name="case" proved="true" arg1="(n = k + width c)">
           <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="place_kron_gen1">
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0" expl="true case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
             <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
             <transf name="apply" proved="true" arg1="kronecker_eq">
              <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(hpart (hpart x (width (place c k n))) k)" arg2="(hpart x k)">
               <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.22" steps="763491"/></proof>
               </goal>
               <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
               <transf name="apply" proved="true" arg1="set_equal_bv">
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.97" steps="934384"/></proof>
                </goal>
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="hpart_value_b">
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="hpart_value_b">
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="hpart_value_b">
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.28" steps="763534"/></proof>
                    </goal>
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.88" steps="930030"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.70" steps="930159"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.85" steps="930030"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_eq">
               <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(bv_to_ket (htpart x k (width c)))" arg2="(bv_to_ket (tpart (hpart x (width (place c k n))) k))">
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                </transf>
                </goal>
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                <transf name="apply" proved="true" arg1="bv_to_ket_eq">
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.91" steps="934291"/></proof>
                 </goal>
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="htpart_value_b">
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="tpart_value_b">
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="hpart_value_b">
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.25" steps="786212"/></proof>
                     </goal>
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.92" steps="930707"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.19" steps="763532"/></proof>
                    </goal>
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.87" steps="933873"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.26" steps="763532"/></proof>
                   </goal>
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0.2" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.89" steps="929142"/></proof>
                   </goal>
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.0.1.1.0.3" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.88" steps="930472"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.0.0.1.1" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.90" steps="926949"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.28" steps="763493"/></proof>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.24" steps="763493"/></proof>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.92" steps="930505"/></proof>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.4" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.24" steps="763491"/></proof>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.0.5" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.28" steps="763493"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1" expl="false case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="place_kron_gen">
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0" expl="false case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
             <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0" expl="false case (apply premises)" proved="true">
             <transf name="apply" proved="true" arg1="kronecker_eq">
              <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="bv_to_ket_eq">
               <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.88" steps="931917"/></proof>
               </goal>
               <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="hpart_value_b">
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="hpart_value_b">
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="hpart_value_b">
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.06" steps="763531"/></proof>
                   </goal>
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.82" steps="929488"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.84" steps="929255"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.88" steps="929255"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
               <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_eq">
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
                <transf name="replace" proved="true" arg1="(bv_to_ket (htpart (hpart x (width (place c k n))) k (width c)))" arg2="(bv_to_ket (htpart x k (width c)))">
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                 </transf>
                 </goal>
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                 <transf name="apply" proved="true" arg1="bv_to_ket_eq">
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.87" steps="933490"/></proof>
                  </goal>
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="htpart_value_b">
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="htpart_value_b">
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="hpart_value_b">
                      <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.21" steps="763541"/></proof>
                      </goal>
                      <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.86" steps="930842"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.21" steps="763543"/></proof>
                     </goal>
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.84" steps="929503"/></proof>
                     </goal>
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.0.3" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.84" steps="930819"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.23" steps="763543"/></proof>
                    </goal>
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.87" steps="929503"/></proof>
                    </goal>
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.0.1.1.0.3" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.87" steps="930819"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                 <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="bv_to_ket_eq">
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.91" steps="935046"/></proof>
                  </goal>
                  <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0" expl="apply premises" proved="true">
                   <transf name="case" proved="true" arg1="(i &lt; n - width c-k)">
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0" expl="true case (apply premises)" proved="true">
                    <transf name="rewrite" proved="true" arg1="concat_value_left">
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0" expl="true case (apply premises)" proved="true">
                     <transf name="rewrite" proved="true" arg1="tpart_value_b">
                      <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
                      <transf name="rewrite" proved="true" arg1="tpart_value_b">
                       <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                       <transf name="rewrite" proved="true" arg1="hpart_value_b">
                        <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                        <proof prover="9"><result status="valid" time="1.25" steps="763566"/></proof>
                        </goal>
                        <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0.0.1.0" proved="true">
                         <proof prover="9"><result status="valid" time="2.89" steps="929506"/></proof>
                         </goal>
                         <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0.0.1.1" proved="true">
                         <proof prover="9"><result status="valid" time="2.86" steps="929688"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.82" steps="929542"/></proof>
                       </goal>
                       <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0.2.0" proved="true">
                        <proof prover="9"><result status="valid" time="1.21" steps="763568"/></proof>
                        </goal>
                        <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.0.2.1" proved="true">
                        <proof prover="9"><result status="valid" time="2.82" steps="934199"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.79" steps="929542"/></proof>
                      </goal>
                      <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.97" steps="807608"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.89" steps="934602"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1" expl="false case (apply premises)" proved="true">
                    <transf name="rewrite" proved="true" arg1="concat_value_right">
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0" expl="false case (apply premises)" proved="true">
                     <transf name="rewrite" proved="true" arg1="tpart_value_b">
                      <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.0" expl="false case (apply premises)" proved="true">
                      <transf name="rewrite" proved="true" arg1="tpart_value_b">
                       <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.0.0" expl="false case (apply premises)" proved="true">
                       <transf name="rewrite" proved="true" arg1="tpart_length">
                        <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.0.0.0" expl="false case (apply premises)" proved="true">
                        <transf name="rewrite" proved="true" arg1="hpart_length">
                         <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                         <proof prover="9"><result status="valid" time="1.26" steps="786289"/></proof>
                         </goal>
                         <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.83" steps="929437"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                        <proof prover="9"><result status="valid" time="2.86" steps="934134"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.80" steps="929437"/></proof>
                       </goal>
                       <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.0.2" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.84" steps="934739"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.89" steps="929537"/></proof>
                      </goal>
                      <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.0.2" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.91" steps="930826"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.0.0.1.0.1.0.1.0.1.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.77" steps="938714"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.17" steps="763497"/></proof>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.05" steps="763497"/></proof>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.3" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.86" steps="930500"/></proof>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.4" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.28" steps="763495"/></proof>
            </goal>
            <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.0.1.5" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.26" steps="763495"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.30" steps="763475"/></proof>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.08" steps="807436"/></proof>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.3" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.31" steps="763475"/></proof>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.4" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.26" steps="763473"/></proof>
          </goal>
          <goal name="place_zero_place&#39;vc.0.0.0.1.0.1.1.0.5" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.86" steps="925274"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_zero_place&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.78"/></proof>
   </goal>
   <goal name="place_zero_place&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.94" steps="616565"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_place&#39;vc" expl="VC for place_place" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_place&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(bv_to_ket x = kronecker (kronecker (bv_to_ket (hpart x k&#39;)) (bv_to_ket (htpart x k&#39; n))) (bv_to_ket (tpart x (k&#39;+n))))
">
   <goal name="place_place&#39;vc.0.0" expl="asserted formula" proved="true">
   <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
    <goal name="place_place&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
     <goal name="place_place&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="1.13"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_place&#39;vc.0.1" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="place_kronecker">
    <goal name="place_place&#39;vc.0.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="place_kronecker">
     <goal name="place_place&#39;vc.0.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="place_kronecker">
      <goal name="place_place&#39;vc.0.1.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="( (bv_to_ket (hpart x (k + k&#39;))))" arg2="(kronecker (bv_to_ket (hpart x k&#39;)) (bv_to_ket (htpart x k&#39; k)))">
       <goal name="place_place&#39;vc.0.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
        <goal name="place_place&#39;vc.0.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
         <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
          <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_eq">
           <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
           </transf>
           </goal>
           <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_eq">
            <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="bv_to_ket_eq">
             <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <proof prover="0"><result status="valid" time="0.83"/></proof>
             </goal>
             <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="hpart_value_b">
               <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(width (place c k n))" arg2="n">
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.53" steps="810668"/></proof>
                </goal>
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0.1.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="0"><result status="valid" time="0.86"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
               <transf name="rewrite" proved="true" arg1="hpart_length" arg2="in" arg3="H">
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="0.96" steps="617017"/></proof>
                </goal>
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.0.1.0.1.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="0.92" steps="617028"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_eq">
             <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(htpart (htpart x k&#39; (width (place c k n))) k (width c))" arg2="(htpart x (k + k&#39;) (width c))">
              <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
              </transf>
              </goal>
              <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
              <transf name="apply" proved="true" arg1="set_equal_bv">
               <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="htpart_length">
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="htpart_length">
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.0.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="0.91" steps="616966"/></proof>
                 </goal>
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.60" steps="660310"/></proof>
                 </goal>
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.32" steps="780117"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="0.95" steps="616968"/></proof>
                </goal>
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.0.2" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="2.33" steps="780117"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="htpart_value_b">
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="htpart_value_b">
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="htpart_value_b">
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="0.94" steps="638668"/></proof>
                   </goal>
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.55" steps="660317"/></proof>
                   </goal>
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.29" steps="784170"/></proof>
                   </goal>
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.0.0.3" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.31" steps="785815"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.00" steps="617031"/></proof>
                  </goal>
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.29" steps="784398"/></proof>
                  </goal>
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.0.3" expl="rewrite premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.22"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="0.93" steps="617031"/></proof>
                 </goal>
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.33" steps="784170"/></proof>
                 </goal>
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.0.1.1.0.3" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.36" steps="785815"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
              <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="bv_to_ket_eq">
               <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="concat_length">
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="tpart_length">
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="htpart_length">
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="tpart_length">
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="tpart_length">
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="0.97" steps="617048"/></proof>
                    </goal>
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.44" steps="781561"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="0"><result status="valid" time="0.83"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="0.95" steps="616968"/></proof>
                  </goal>
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.41" steps="780397"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.03"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0" expl="apply premises" proved="true">
                <transf name="assert" proved="true" arg1="(i &lt; (((n&#39; - width c) - k) - k&#39;))">
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0" expl="asserted formula" proved="true">
                 <transf name="rewrite" proved="true" arg1="concat_length" arg2="in" arg3="H">
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0" expl="asserted formula" proved="true">
                  <transf name="rewrite" proved="true" arg1="tpart_length" arg2="in" arg3="H">
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0" expl="asserted formula" proved="true">
                   <transf name="rewrite" proved="true" arg1="tpart_length" arg2="in" arg3="H">
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
                    <transf name="rewrite" proved="true" arg1="htpart_length" arg2="in" arg3="H">
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                      <transf name="rewrite" proved="true" arg1="place&#39;spec3" arg2="in" arg3="H">
                       <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                       <proof prover="9"><result status="valid" time="1.97" steps="779894"/></proof>
                       </goal>
                       <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.15" steps="735531"/></proof>
                       </goal>
                       <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.20" steps="735531"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="0.93" steps="617057"/></proof>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.42" steps="783888"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.1.0" proved="true">
                     <transf name="rewrite" proved="true" arg1="place&#39;spec3" arg2="in" arg3="H">
                      <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.1.0.0" proved="true">
                      <proof prover="9"><result status="valid" time="2.81" steps="903414"/></proof>
                      </goal>
                      <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.18" steps="735545"/></proof>
                      </goal>
                      <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.17" steps="735545"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.0.1.1" proved="true">
                     <proof prover="9"><result status="valid" time="2.71" steps="904804"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.30" steps="787678"/></proof>
                    </goal>
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="htpart_length">
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                     <proof prover="0"><result status="valid" time="0.83"/></proof>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="0.96" steps="617053"/></proof>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.0.0.1.1.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.40" steps="787593"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1" expl="apply premises" proved="true">
                 <transf name="case" proved="true" arg1="(i &lt; n - width c - k)">
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0" expl="true case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="concat_value_left">
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0" expl="true case (apply premises)" proved="true">
                   <transf name="rewrite" proved="true" arg1="tpart_value_b">
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.0" expl="true case (apply premises)" proved="true">
                    <transf name="rewrite" proved="true" arg1="htpart_value_b">
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
                     <transf name="rewrite" proved="true" arg1="tpart_value_b">
                      <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                      <proof prover="9"><result status="valid" time="0.95" steps="638766"/></proof>
                      </goal>
                      <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.41" steps="785108"/></proof>
                      </goal>
                      <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.63" steps="660174"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="0.96" steps="617122"/></proof>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.37" steps="784978"/></proof>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.0.3" expl="rewrite premises" proved="true">
                     <proof prover="0"><result status="valid" time="0.83"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.44" steps="785086"/></proof>
                    </goal>
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="0"><result status="valid" time="0.96"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.04"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1" expl="false case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="concat_value_right">
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0" expl="false case (apply premises)" proved="true">
                   <transf name="rewrite" proved="true" arg1="tpart_value_b">
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.0" expl="false case (apply premises)" proved="true">
                    <transf name="rewrite" proved="true" arg1="tpart_value_b">
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.0.0" expl="false case (apply premises)" proved="true">
                     <transf name="rewrite" proved="true" arg1="tpart_length">
                      <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.0.0.0" expl="false case (apply premises)" proved="true">
                      <transf name="rewrite" proved="true" arg1="htpart_length">
                       <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                       <proof prover="9"><result status="valid" time="0.98" steps="638800"/></proof>
                       </goal>
                       <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="0.95" steps="617139"/></proof>
                       </goal>
                       <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.37" steps="784996"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="0"><result status="valid" time="0.99"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.36" steps="785126"/></proof>
                     </goal>
                     <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.51" steps="660169"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.28" steps="785114"/></proof>
                    </goal>
                    <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.0.2" expl="rewrite premises" proved="true">
                    <proof prover="0"><result status="valid" time="1.09"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_place&#39;vc.0.1.0.0.0.0.0.0.0.1.1.1.0.1.0.1.1.1" expl="rewrite premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.02"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_place&#39;vc.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
        <goal name="place_place&#39;vc.0.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="bv_to_ket_eq">
         <goal name="place_place&#39;vc.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.02"/></proof>
         </goal>
         <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0" expl="apply premises" proved="true">
          <transf name="case" proved="true" arg1="(i&lt;k&#39;)">
           <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.0" expl="true case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="concat_value_left">
            <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.0.0" expl="true case (apply premises)" proved="true">
            <proof prover="9"><result status="valid" time="2.34" steps="809181"/></proof>
            </goal>
            <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.32" steps="786295"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.1" expl="false case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="concat_value_right">
            <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.1.0" expl="false case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="htpart_value_b">
             <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.1.0.0" expl="false case (apply premises)" proved="true">
             <transf name="rewrite" proved="true" arg1="hpart_length">
              <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.1.0.0.0" expl="false case (apply premises)" proved="true">
              <proof prover="9"><result status="valid" time="2.41" steps="808839"/></proof>
              </goal>
              <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="0.93" steps="617043"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.94" steps="617043"/></proof>
             </goal>
             <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.1.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.94" steps="617043"/></proof>
             </goal>
             <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.1.0.3" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.35" steps="788903"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="place_place&#39;vc.0.1.0.0.0.1.0.1.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.50" steps="792196"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="place_place&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.57" steps="660310"/></proof>
      </goal>
      <goal name="place_place&#39;vc.0.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.59" steps="660323"/></proof>
      </goal>
      <goal name="place_place&#39;vc.0.1.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.95" steps="616968"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="place_place&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.93" steps="616968"/></proof>
     </goal>
     <goal name="place_place&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.93" steps="616968"/></proof>
     </goal>
     <goal name="place_place&#39;vc.0.1.0.3" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.01"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="place_place&#39;vc.0.1.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.96" steps="616968"/></proof>
    </goal>
    <goal name="place_place&#39;vc.0.1.2" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.80"/></proof>
    </goal>
    <goal name="place_place&#39;vc.0.1.3" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.94" steps="616968"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_get_ket&#39;vc" expl="VC for place_get_ket" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_get_ket&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pat_sem_apply_basis_value">
   <goal name="place_get_ket&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pat_sem_apply_basis_value">
    <goal name="place_get_ket&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(range (place c k n))" arg2="(range c)">
     <goal name="place_get_ket&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="mult_eq_t">
      <goal name="place_get_ket&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="0.88" steps="617298"/></proof>
      </goal>
      <goal name="place_get_ket&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="sum_eq">
       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="mult_eq_t">
          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="place&#39;spec1">
            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(ang_ind c
     (getbv (make_bv (fun (i:int) -&gt; getbv x1 @ (i + k)) (width c)))
     (getbv x))" arg2="(ang_ind c
     ( ( (fun (i:int) -&gt; getbv x1 @ (i + k)) ))
     (getbv x))">
             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
             </transf>
             </goal>
             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <transf name="eliminate_definition" proved="true" >
              <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
              <transf name="rewrite" proved="true" arg1="ang_ind&#39;def">
               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
               <transf name="rewrite" proved="true" arg1="ang_ind&#39;def">
                <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant">
                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.08" steps="993804"/></proof>
                    </goal>
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.14" steps="993802"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.39" steps="876813"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.36" steps="825958"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.34" steps="826553"/></proof>
            </goal>
            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.30" steps="826553"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="int_to_bv_to_int_">
           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="int_to_bv_to_int_">
            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="get_indic">
             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="get_indic">
              <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <transf name="eliminate_if" proved="true" >
               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.29" steps="810684"/></proof>
                </goal>
                <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                <transf name="assert" proved="true" arg1="(make_bv
      (fun (y3:int) -&gt;
        basis_ket c
        (getbv (make_bv (fun (i:int) -&gt; getbv x1 @ (i + k)) (width c)))
        (getbv x) y3)
      (width c) = make_bv (fun (i:int) -&gt; getbv y @ (i + k)) (width c))">
                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
                 <transf name="apply" proved="true" arg1="set_equal_bv">
                  <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="make_bv_length">
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="make_bv_length">
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.31" steps="810688"/></proof>
                    </goal>
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.33" steps="989615"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.32" steps="988162"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                      <transf name="eliminate_definition" proved="true" >
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="rewrite premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.59" steps="1129650"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.54" steps="1124933"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.82" steps="1025841"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                     <transf name="eliminate_definition" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                       <transf name="split_all_full" proved="true" >
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.59" steps="1157030"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.43" steps="1152352"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.82" steps="1053026"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.08" steps="988162"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="replace" proved="true" arg1="y" arg2="(  make_bv (fun (y3:int) -&gt; basis_ket (place c k n) (getbv x1) (getbv x) y3)
  (width (place c k n)))">
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                         <transf name="compute_specified" proved="true" >
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                          <transf name="split_all_full" proved="true" >
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="place&#39;spec10">
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                            <transf name="eliminate_definition" proved="true" >
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                             <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                              <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                              <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                               <transf name="replace" proved="true" arg1="((i + k) - k)" arg2="i">
                                <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                <transf name="apply" proved="true" arg1="pps&#39;invariant1">
                                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                 <transf name="compute_specified" proved="true" >
                                  <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                  <transf name="split_vc" proved="true" >
                                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                   <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                    <proof prover="9"><result status="valid" time="3.44" steps="1125450"/></proof>
                                    </goal>
                                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                                    <transf name="compute_specified" proved="true" >
                                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                                     <transf name="split_vc" proved="true" >
                                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                                      <proof prover="9"><result status="valid" time="3.53" steps="1125308"/></proof>
                                      </goal>
                                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                                      <proof prover="9"><result status="valid" time="3.57" steps="1125300"/></proof>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                                    <proof prover="9"><result status="valid" time="2.79" steps="1025886"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                                 <proof prover="9"><result status="valid" time="1.67" steps="972482"/></proof>
                                 </goal>
                                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                                 <proof prover="9"><result status="valid" time="2.80" steps="1025841"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                                <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                                <proof prover="9"><result status="valid" time="1.66" steps="972509"/></proof>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="1.62" steps="972933"/></proof>
                            </goal>
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="1.69" steps="972933"/></proof>
                            </goal>
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="2.65" steps="1023013"/></proof>
                            </goal>
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="1.57" steps="972963"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <transf name="compute_specified" proved="true" >
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                          <transf name="split_all_full" proved="true" >
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                            <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.58" steps="1151377"/></proof>
                             </goal>
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.59" steps="1151505"/></proof>
                             </goal>
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="1.66" steps="972967"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                            <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.59" steps="1151377"/></proof>
                             </goal>
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.51" steps="1151505"/></proof>
                             </goal>
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="1.59" steps="972967"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                         <proof prover="0"><result status="valid" time="1.45"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                        <proof prover="9"><result status="valid" time="1.38" steps="810722"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.31" steps="989660"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.27" steps="810724"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.58" steps="1156689"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.64" steps="1151453"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.70" steps="972967"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.70" steps="1156689"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.70" steps="1151453"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.63" steps="972967"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.32" steps="810724"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.0.0" expl="rewrite premises" proved="true">
                        <transf name="eliminate_definition" proved="true" >
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.0.0.0" expl="rewrite premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.0.0.0.0" expl="rewrite premises" proved="true">
                          <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="3.49" steps="1129660"/></proof>
                           </goal>
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="3.47" steps="1124958"/></proof>
                           </goal>
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="2.84" steps="1025886"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                        <transf name="split_all_full" proved="true" >
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                          <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="3.56" steps="1161168"/></proof>
                           </goal>
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="3.58" steps="1156153"/></proof>
                           </goal>
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="1.65" steps="973047"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                          <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="3.58" steps="1161168"/></proof>
                           </goal>
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="3.51" steps="1156153"/></proof>
                           </goal>
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="1.66" steps="973047"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.2" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.57" steps="1154858"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1" expl="rewrite premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0" expl="rewrite premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.0" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.0.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.58" steps="1156689"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.0.0.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.60" steps="1151453"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.0.0.2" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.68" steps="972967"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1.0" expl="rewrite premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1.0.0" expl="rewrite premises" proved="true">
                         <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1.0.0.0" expl="apply premises" proved="true">
                          <proof prover="9"><result status="valid" time="3.52" steps="1161168"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1.0.0.1" expl="apply premises" proved="true">
                          <proof prover="9"><result status="valid" time="3.62" steps="1156153"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1.0.0.2" expl="apply premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.60" steps="973047"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1.0.1" expl="rewrite premises" proved="true">
                         <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1.0.1.0" expl="apply premises" proved="true">
                          <proof prover="9"><result status="valid" time="3.54" steps="1161168"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1.0.1.1" expl="apply premises" proved="true">
                          <proof prover="9"><result status="valid" time="3.55" steps="1156153"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.1.0.1.2" expl="apply premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.70" steps="973047"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1.0.2" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.63" steps="1154858"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.0.1.0.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.19" steps="991021"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="h" arg2="in" arg3="H">
                  <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                  <transf name="assert" proved="true" arg1="false">
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
                   <transf name="assert" proved="true" arg1="(exists x:bitvec. x&lt;&gt;x)">
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.1.0.0.0" expl="asserted formula" proved="true">
                    <transf name="exists" proved="true" arg1="(make_bv (fun (i:int) -&gt; getbv y @ (i + k)) (width c))">
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.1.0.0.0.0" proved="true">
                     <transf name="apply" proved="true" arg1="H">
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.1.0.0.1" expl="asserted formula" proved="true">
                    <proof prover="9"><result status="valid" time="1.39" steps="810804"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.40" steps="810813"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                <transf name="assert" proved="true" arg1="(make_bv
      (fun (y3:int) -&gt; basis_ket (place c k n) (getbv x1) (getbv x) y3)
      (width (place c k n)) = y)">
                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0" expl="asserted formula" proved="true">
                 <transf name="apply" proved="true" arg1="set_equal_bv">
                  <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="make_bv_length">
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.09"/></proof>
                   </goal>
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.0" expl="rewrite premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.55" steps="1151496"/></proof>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.56" steps="1151664"/></proof>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.61" steps="972942"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.1" expl="rewrite premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.21" steps="1151496"/></proof>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.59" steps="1151664"/></proof>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.60" steps="972942"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.16" steps="981524"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0" expl="apply premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="case" proved="true" arg1="(i&lt;k)">
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                        <transf name="rewrite" proved="true" arg1="place&#39;spec9">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                         <transf name="replace" proved="true" arg1="(getbv x1 @ i)" arg2="(getbv (hpart x1 k) i)">
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                          <transf name="rewrite" proved="true" arg1="Requires1">
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                           <proof prover="0"><result status="valid" time="1.14"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                          <proof prover="9"><result status="valid" time="3.54" steps="1153792"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.70" steps="972961"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.67" steps="972961"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.63" steps="1150661"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.68" steps="972968"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
                        <transf name="case" proved="true" arg1="(i&lt;k+width c)">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0" expl="false case (true case. apply premises)" proved="true">
                         <transf name="rewrite" proved="true" arg1="place&#39;spec10">
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0" expl="false case (true case. apply premises)" proved="true">
                          <transf name="replace" proved="true" arg1="( basis_ket c (fun (j:int) -&gt; getbv x1 @ (j + k)) (getbv x) (i - k))" arg2="(getbv (make_bv
  (fun (y3:int) -&gt;
    basis_ket c
    (getbv (make_bv (fun (i1:int) -&gt; getbv x1 @ (i1 + k)) (width c)))
    (getbv x) y3)
  (width c)) (i-k))">
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.0" expl="false case (true case. apply premises)" proved="true">
                           <transf name="rewrite" proved="true" arg1="H2">
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                             <proof prover="9"><result status="valid" time="3.57" steps="1151558"/></proof>
                             </goal>
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                             <transf name="compute_specified" proved="true" >
                              <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                              <proof prover="9"><result status="valid" time="3.69" steps="1151975"/></proof>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                             <proof prover="9"><result status="valid" time="1.65" steps="973025"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
                            <transf name="compute_specified" proved="true" >
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0" expl="equality hypothesis" proved="true">
                             <transf name="eliminate_definition" proved="true" >
                              <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                              <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
                               <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                                <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0" expl="equality hypothesis" proved="true">
                                <transf name="apply" proved="true" arg1="pps&#39;invariant1">
                                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                                 <transf name="compute_specified" proved="true" >
                                  <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                  <transf name="split_vc" proved="true" >
                                   <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                   <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                    <proof prover="9"><result status="valid" time="3.55" steps="1125498"/></proof>
                                    </goal>
                                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                                    <transf name="compute_specified" proved="true" >
                                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                                     <proof prover="9"><result status="valid" time="3.53" steps="1125415"/></proof>
                                     </goal>
                                    </transf>
                                    </goal>
                                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                                    <proof prover="9"><result status="valid" time="2.69" steps="1025892"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                                 <proof prover="9"><result status="valid" time="1.68" steps="972540"/></proof>
                                 </goal>
                                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                                 <proof prover="9"><result status="valid" time="2.79" steps="1025854"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                            <transf name="compute_specified" proved="true" >
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1.0" expl="rewrite premises" proved="true">
                             <transf name="split_vc" proved="true" >
                              <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1.0.0" expl="rewrite premises" proved="true">
                              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                               <proof prover="9"><result status="valid" time="3.55" steps="1156684"/></proof>
                               </goal>
                               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1.0.0.1" expl="apply premises" proved="true">
                               <proof prover="9"><result status="valid" time="3.69" steps="1151666"/></proof>
                               </goal>
                               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1.0.0.2" expl="apply premises" proved="true">
                               <proof prover="9"><result status="valid" time="1.69" steps="973025"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1.0.1.0" expl="apply premises" proved="true">
                               <proof prover="9"><result status="valid" time="3.63" steps="1156684"/></proof>
                               </goal>
                               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1.0.1.1" expl="apply premises" proved="true">
                               <proof prover="9"><result status="valid" time="3.72" steps="1151666"/></proof>
                               </goal>
                               <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.1.0.1.2" expl="apply premises" proved="true">
                               <proof prover="9"><result status="valid" time="1.65" steps="973025"/></proof>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.0.1.2" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="1.62" steps="973025"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.57" steps="972991"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.61" steps="972991"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="2.57" steps="1023021"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.0.4" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.56" steps="973007"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1" expl="false case (apply premises)" proved="true">
                         <transf name="rewrite" proved="true" arg1="place&#39;spec8">
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.0" expl="false case (apply premises)" proved="true">
                          <transf name="replace" proved="true" arg1="(getbv x1 @ i)" arg2="(getbv (tpart x1 (k + width c) ) @ (i- (k+width c)))">
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.0.0" expl="false case (apply premises)" proved="true">
                           <transf name="rewrite" proved="true" arg1="Requires">
                            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.0.0.0" expl="false case (apply premises)" proved="true">
                            <transf name="rewrite" proved="true" arg1="tpart_value_b">
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.0.0.0.0" expl="false case (apply premises)" proved="true">
                             <proof prover="9"><result status="valid" time="1.57" steps="973036"/></proof>
                             </goal>
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.53" steps="1150601"/></proof>
                             </goal>
                             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.53" steps="1150523"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
                           <proof prover="9"><result status="valid" time="3.61" steps="1156900"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.66" steps="972995"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.2" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.62" steps="972995"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.3" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="3.50" steps="1150530"/></proof>
                          </goal>
                          <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0.0.0.1.1.4" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.60" steps="972995"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1" expl="rewrite premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.55" steps="1151410"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.58" steps="1151533"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.60" steps="972967"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.54" steps="1151410"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.51" steps="1151533"/></proof>
                         </goal>
                         <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.58" steps="972967"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.30" steps="810724"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1" expl="rewrite premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.49" steps="1154252"/></proof>
                        </goal>
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.48" steps="1154385"/></proof>
                        </goal>
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="1.61" steps="972971"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.54" steps="1154252"/></proof>
                        </goal>
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.60" steps="1154385"/></proof>
                        </goal>
                        <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="1.61" steps="972971"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.0.1.0.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.13" steps="984010"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.2.1" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.35" steps="810688"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0.0.0.3" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.36" steps="810692"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.64" steps="860180"/></proof>
            </goal>
            <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.2" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="make_bv_length">
             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.11" steps="693888"/></proof>
             </goal>
             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.70" steps="886275"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.68" steps="860180"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.69" steps="860669"/></proof>
           </goal>
           <goal name="place_get_ket&#39;vc.0.0.0.0.1.0.0.0.1.2" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="0.94"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="place_get_ket&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="0"><result status="valid" time="0.84"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="place_get_ket&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <transf name="rewrite" proved="true" arg1="make_bv_length">
     <goal name="place_get_ket&#39;vc.0.0.1.0" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.97" steps="617298"/></proof>
     </goal>
     <goal name="place_get_ket&#39;vc.0.0.1.1" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="place_get_ket&#39;vc.0.0.1.1.0" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.40" steps="803476"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="place_get_ket&#39;vc.0.0.1.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.38" steps="782006"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="place_get_ket&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="place_get_ket&#39;vc.0.0.2.0" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.42" steps="802733"/></proof>
     </goal>
     <goal name="place_get_ket&#39;vc.0.0.2.1" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="bv_to_int_bound_gen">
      <goal name="place_get_ket&#39;vc.0.0.2.1.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="2.38" steps="782006"/></proof>
      </goal>
      <goal name="place_get_ket&#39;vc.0.0.2.1.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="make_bv_length">
       <goal name="place_get_ket&#39;vc.0.0.2.1.1.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="0.99" steps="617298"/></proof>
       </goal>
       <goal name="place_get_ket&#39;vc.0.0.2.1.1.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="place_get_ket&#39;vc.0.0.2.1.1.1.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.42" steps="803517"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_get_ket&#39;vc.0.0.2.1.1.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.34" steps="782006"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_get_ket&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.86"/></proof>
   </goal>
   <goal name="place_get_ket&#39;vc.0.2" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="place_get_ket&#39;vc.0.2.0" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="2.39" steps="781141"/></proof>
    </goal>
    <goal name="place_get_ket&#39;vc.0.2.1" expl="rewrite premises" proved="true">
    <transf name="apply" proved="true" arg1="bv_to_int_bound_gen">
     <goal name="place_get_ket&#39;vc.0.2.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.60" steps="782480"/></proof>
     </goal>
     <goal name="place_get_ket&#39;vc.0.2.1.1" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.88"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_get_ket_hpart_null&#39;vc" expl="VC for place_get_ket_hpart_null" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_get_ket_hpart_null&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pat_sem_apply_basis_value">
   <goal name="place_get_ket_hpart_null&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="mult_zero_t">
    <goal name="place_get_ket_hpart_null&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="sum_null_">
     <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="mult_zero_t">
        <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="case" proved="true" arg1="(forall i. 0&lt;=i &lt; k -&gt; getbv x i = getbv y i)">
         <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
         <transf name="assert" proved="true" arg1="( hpart x k = hpart y k)">
          <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
          <transf name="apply" proved="true" arg1="set_equal_bv">
           <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="2.67" steps="865586"/></proof>
           </goal>
           <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="hpart_value_b">
             <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="hpart_value_b">
              <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="h">
               <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.61" steps="863667"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.69" steps="863667"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.75" steps="863667"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.0.1" expl="true case (apply premises)" proved="true">
          <proof prover="9"><result status="valid" time="1.36" steps="800785"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="get_indic">
          <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0" expl="false case (apply premises)" proved="true">
          <transf name="eliminate_if" proved="true" >
           <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0" expl="false case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="int_to_bv_to_int_" arg2="in" arg3="H">
             <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0" expl="false case (apply premises)" proved="true">
             <transf name="assert" proved="true" arg1="(hpart y k = hpart x k)">
              <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
              <transf name="apply" proved="true" arg1="set_equal_bv">
               <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="3.18" steps="988112"/></proof>
               </goal>
               <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="hpart_value_b">
                 <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="hpart_value_b">
                  <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="replace" proved="true" arg1="y" arg2="( make_bv (fun (y3:int) -&gt; basis_ket (place c k n) (getbv x) (getbv e) y3)
  (width (place c k n)))">
                   <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                    <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="place&#39;spec9">
                       <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.62" steps="973446"/></proof>
                       </goal>
                       <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.67" steps="973448"/></proof>
                       </goal>
                       <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.70" steps="973448"/></proof>
                       </goal>
                       <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.57" steps="1155400"/></proof>
                       </goal>
                       <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.47" steps="1155393"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                        <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.64" steps="1155878"/></proof>
                        </goal>
                        <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.59" steps="1156313"/></proof>
                        </goal>
                        <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="1.62" steps="973482"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                        <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.53" steps="1155878"/></proof>
                        </goal>
                        <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.54" steps="1156313"/></proof>
                        </goal>
                        <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="1.73" steps="973482"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="0"><result status="valid" time="1.17"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="9"><result status="valid" time="1.28" steps="811237"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.24" steps="986486"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.95" steps="986486"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="false case (apply premises)" proved="true">
              <proof prover="9"><result status="valid" time="1.31" steps="811219"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="3.05" steps="984048"/></proof>
             </goal>
             <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="1.10"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="place_get_ket_hpart_null&#39;vc.0.0.0.0.0.0.0.1.0.0.1" expl="false case (apply premises)" proved="true">
            <proof prover="9"><result status="valid" time="1.36" steps="811214"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_get_ket_hpart_null&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.82"/></proof>
   </goal>
   <goal name="place_get_ket_hpart_null&#39;vc.0.2" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="place_get_ket_hpart_null&#39;vc.0.2.0" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="2.31" steps="780906"/></proof>
    </goal>
    <goal name="place_get_ket_hpart_null&#39;vc.0.2.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.91"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_get_ket_tpart_null&#39;vc" expl="VC for place_get_ket_tpart_null" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_get_ket_tpart_null&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pat_sem_apply_basis_value">
   <goal name="place_get_ket_tpart_null&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="mult_zero_t">
    <goal name="place_get_ket_tpart_null&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="sum_null_">
     <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="mult_zero_t">
        <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="get_indic">
         <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="int_to_bv_to_int_" arg2="in" arg3="H">
            <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="assert" proved="true" arg1="(tpart x (k + width c) = tpart y (k + width c))">
             <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
             <transf name="apply" proved="true" arg1="set_equal_bv">
              <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="3.55" steps="988469"/></proof>
              </goal>
              <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="tpart_value_b">
                <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="tpart_value_b">
                 <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="y" arg2="( make_bv (fun (y3:int) -&gt; basis_ket (place c k n) (getbv x) (getbv e) y3)
  (width (place c k n)))">
                  <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                   <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="place&#39;spec8">
                      <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.65" steps="973692"/></proof>
                      </goal>
                      <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.70" steps="973694"/></proof>
                      </goal>
                      <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.62" steps="973694"/></proof>
                      </goal>
                      <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.58" steps="1152899"/></proof>
                      </goal>
                      <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.63" steps="973712"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                       <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.53" steps="1152398"/></proof>
                       </goal>
                       <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.48" steps="1152500"/></proof>
                       </goal>
                       <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.64" steps="973728"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                       <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.52" steps="1152398"/></proof>
                       </goal>
                       <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.53" steps="1152500"/></proof>
                       </goal>
                       <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.66" steps="973728"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.20"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="9"><result status="valid" time="1.34" steps="811483"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.02" steps="983320"/></proof>
                 </goal>
                 <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.06" steps="984716"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="3.06" steps="983320"/></proof>
                </goal>
                <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="3.15" steps="984640"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.34" steps="811457"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="3.02" steps="981306"/></proof>
            </goal>
            <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="0"><result status="valid" time="1.07"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.34" steps="811460"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_get_ket_tpart_null&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.89"/></proof>
   </goal>
   <goal name="place_get_ket_tpart_null&#39;vc.0.2" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="place_get_ket_tpart_null&#39;vc.0.2.0" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="2.30" steps="781353"/></proof>
    </goal>
    <goal name="place_get_ket_tpart_null&#39;vc.0.2.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.93"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_hadamard&#39;vc" expl="VC for place_hadamard" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_hadamard&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.94" steps="618546"/></proof>
  </goal>
  <goal name="place_hadamard&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="place_hadamard&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.63" steps="661312"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="place_hadamard&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="place_hadamard&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.12" steps="653441"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="place_hadamard&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.03" steps="640652"/></proof>
  </goal>
  <goal name="place_hadamard&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.10" steps="653456"/></proof>
  </goal>
  <goal name="place_hadamard&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.08" steps="653465"/></proof>
  </goal>
  <goal name="place_hadamard&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="place_hadamard&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures6">
    <goal name="place_hadamard&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="place_hadamard&#39;vc.6.0.0.0" expl="VC for place_hadamard" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_hadamard&#39;vc.6.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.78" steps="694574"/></proof>
      </goal>
      <goal name="place_hadamard&#39;vc.6.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.75" steps="693240"/></proof>
      </goal>
      <goal name="place_hadamard&#39;vc.6.0.0.0.2" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.71" steps="693703"/></proof>
      </goal>
      <goal name="place_hadamard&#39;vc.6.0.0.0.3" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.01" steps="651786"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_hadamard&#39;vc.6.0.1" expl="rewrite premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="place_hadamard&#39;vc.6.0.1.0" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.00" steps="640719"/></proof>
     </goal>
     <goal name="place_hadamard&#39;vc.6.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.01" steps="640721"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place_hadamard&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="place_hadamard&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures6">
    <goal name="place_hadamard&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="place_hadamard&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="place_hadamard&#39;vc.7.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="hadamard&#39;def">
       <goal name="place_hadamard&#39;vc.7.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place_hadamard&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="place_hadamard&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="place_hadamard&#39;vc.8.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="2.53" steps="10371069"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_hadamard_bv&#39;vc" expl="VC for place_hadamard_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_hadamard_bv&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.95" steps="619551"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.98" steps="641358"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.99" steps="641361"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.98" steps="641364"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.06" steps="641367"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.38" steps="797486"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.41" steps="797985"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="2.32" steps="112695"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="correct_path_sum_bv&#39;def">
   <goal name="place_hadamard_bv&#39;vc.8.0" expl="VC for place_hadamard_bv" proved="true">
   <transf name="apply" proved="true" arg1="set_correct_path_sum_by_main_sim">
    <goal name="place_hadamard_bv&#39;vc.8.0.0" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="place_hadamard_bv&#39;vc.8.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec2">
      <goal name="place_hadamard_bv&#39;vc.8.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.22" steps="762665"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.95" steps="807467"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.24" steps="762660"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="place_hadamard_bv&#39;vc.8.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="place_hadamard_bv&#39;vc.8.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="place_hadamard_bv&#39;vc.8.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.30" steps="762697"/></proof>
         </goal>
         <goal name="place_hadamard_bv&#39;vc.8.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="place_hadamard_bv&#39;vc.8.0.0.0.3.0.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.80" steps="931723"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_hadamard_bv&#39;vc.8.0.0.0.3.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.92" steps="807519"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_hadamard_bv&#39;vc.8.0.1" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="place_hadamard_bv&#39;vc.8.0.1.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec3">
      <goal name="place_hadamard_bv&#39;vc.8.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.24" steps="762656"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.08" steps="807467"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.30" steps="762660"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.0.1.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="place_hadamard_bv&#39;vc.8.0.1.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="place_hadamard_bv&#39;vc.8.0.1.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="place_hadamard_bv&#39;vc.8.0.1.0.3.0.0.0" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.20" steps="762697"/></proof>
         </goal>
         <goal name="place_hadamard_bv&#39;vc.8.0.1.0.3.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="place_hadamard_bv&#39;vc.8.0.1.0.3.0.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.68" steps="931723"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_hadamard_bv&#39;vc.8.0.1.0.3.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.99" steps="807519"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_hadamard_bv&#39;vc.8.0.2" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="place_hadamard_bv&#39;vc.8.0.2.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec">
       <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="3.41" steps="1051798"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.45" steps="933302"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.42" steps="886256"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.3.0.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.3.0.0.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.51" steps="886298"/></proof>
          </goal>
          <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.3.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.3.0.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="3.45" steps="1063602"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.3.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.44" steps="933354"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.43" steps="886259"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5" expl="rewrite premises" proved="true">
       <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec2" arg2="in" arg3="H">
        <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.20" steps="762690"/></proof>
        </goal>
        <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.51" steps="933302"/></proof>
        </goal>
        <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.2" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.58" steps="886256"/></proof>
        </goal>
        <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.3" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.3.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.3.0.0" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.3.0.0.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.47" steps="886298"/></proof>
           </goal>
           <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.3.0.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.3.0.0.1.0" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="3.38" steps="1063602"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="place_hadamard_bv&#39;vc.8.0.2.0.0.5.3.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.33" steps="933354"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_hadamard_bv&#39;vc.8.0.3" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="place_hadamard_bv&#39;vc.8.0.3.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec1">
       <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures2">
        <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
          <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
          </transf>
          </goal>
          <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="3.45" steps="1057910"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.47" steps="933377"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.32" steps="933377"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.40" steps="933350"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.51" steps="886281"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.3.0.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.3.0.0.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.41" steps="886323"/></proof>
          </goal>
          <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.3.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.3.0.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="3.41" steps="1063668"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.3.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.42" steps="933404"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.48" steps="886284"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5" expl="rewrite premises" proved="true">
       <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec2" arg2="in" arg3="H2">
        <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.22" steps="762715"/></proof>
        </goal>
        <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.43" steps="933350"/></proof>
        </goal>
        <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.2" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.43" steps="886281"/></proof>
        </goal>
        <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.3" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.3.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.3.0.0" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.3.0.0.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.39" steps="886323"/></proof>
           </goal>
           <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.3.0.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.3.0.0.1.0" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="3.46" steps="1063668"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.5.3.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.42" steps="933404"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.0.3.0.0.6" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.41" steps="886293"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_hadamard_bv&#39;vc.8.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.98" steps="641688"/></proof>
   </goal>
   <goal name="place_hadamard_bv&#39;vc.8.2" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="place_hadamard_bv&#39;vc.8.2.0" expl="rewrite premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="place_hadamard_bv&#39;vc.8.2.0.0" expl="rewrite premises" proved="true">
     <transf name="rewrite" proved="true" arg1="make_bv_length">
      <goal name="place_hadamard_bv&#39;vc.8.2.0.0.0" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.01" steps="641720"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.2.0.0.1" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="place_hadamard_bv&#39;vc.8.2.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.59" steps="809157"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.2.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.73" steps="682824"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_size&#39;vc" expl="VC for cont_size" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_size&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.95" steps="620910"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rz_&#39;vc" expl="VC for rz_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rz_&#39;vc.0" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_correct_path_sum_by_main_sim">
   <goal name="rz_&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.32" steps="758504"/></proof>
   </goal>
   <goal name="rz_&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.28" steps="758507"/></proof>
   </goal>
   <goal name="rz_&#39;vc.0.2" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rz_&#39;vc.0.2.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures">
     <goal name="rz_&#39;vc.0.2.0.0" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="rz_&#39;vc.0.2.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="pps_phase&#39;spec">
       <goal name="rz_&#39;vc.0.2.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.45" steps="882691"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="rz_&#39;vc.0.3" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="2.13" steps="793878"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="rz_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.03" steps="793489"/></proof>
  </goal>
  <goal name="rz_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.29" steps="758519"/></proof>
  </goal>
  <goal name="rz_&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.29" steps="758536"/></proof>
  </goal>
  <goal name="rz_&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.34" steps="758567"/></proof>
  </goal>
  <goal name="rz_&#39;vc.5" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures28">
   <goal name="rz_&#39;vc.5.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures24">
    <goal name="rz_&#39;vc.5.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures18">
     <goal name="rz_&#39;vc.5.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures19">
      <goal name="rz_&#39;vc.5.0.0.0.0" expl="precondition" proved="true">
      <transf name="case" proved="true" arg1="(x 0 = 0)">
       <goal name="rz_&#39;vc.5.0.0.0.0.0" expl="true case (precondition)" proved="true">
       <transf name="replace" proved="true" arg1="((x @ 0) - 1)" arg2="(-1)">
        <goal name="rz_&#39;vc.5.0.0.0.0.0.0" expl="true case (precondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
         <goal name="rz_&#39;vc.5.0.0.0.0.0.0.0" expl="true case (precondition)" proved="true">
         <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
          <goal name="rz_&#39;vc.5.0.0.0.0.0.0.0.0" expl="true case (precondition)" proved="true">
          <proof prover="9"><result status="valid" time="2.82" steps="916127"/></proof>
          </goal>
          <goal name="rz_&#39;vc.5.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.19" steps="746101"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="rz_&#39;vc.5.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="h">
          <goal name="rz_&#39;vc.5.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="Zero_n">
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="rz_&#39;vc.5.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="1.16" steps="746101"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="rz_&#39;vc.5.0.0.0.0.1" expl="false case (precondition)" proved="true">
       <transf name="replace" proved="true" arg1="((x @ 0) - 1)" arg2="0">
        <goal name="rz_&#39;vc.5.0.0.0.0.1.0" expl="false case (precondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="Even_phase_inv">
         <goal name="rz_&#39;vc.5.0.0.0.0.1.0.0" expl="false case (precondition)" proved="true">
         <transf name="replace" proved="true" arg1="(1 /./ (- incr_abs k))" arg2="(-1 /./ ( incr_abs k))">
          <goal name="rz_&#39;vc.5.0.0.0.0.1.0.0.0" expl="false case (precondition)" proved="true">
          <transf name="replace" proved="true" arg1="(x 0 /./ k)" arg2="(ang_add (1 /./ incr_abs k) (1 /./ incr_abs k))">
           <goal name="rz_&#39;vc.5.0.0.0.0.1.0.0.0.0" expl="false case (precondition)" proved="true">
           <proof prover="0"><result status="valid" time="1.15"/></proof>
           </goal>
           <goal name="rz_&#39;vc.5.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="2.86" steps="918356"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="rz_&#39;vc.5.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="9"><result status="valid" time="2.73" steps="915569"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="rz_&#39;vc.5.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.16" steps="746101"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="rz_&#39;vc.5.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="2.80" steps="914902"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rz_&#39;vc.6" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures25">
   <goal name="rz_&#39;vc.6.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures19">
    <goal name="rz_&#39;vc.6.0.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="2.03" steps="794305"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rz_&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.09" steps="793697"/></proof>
  </goal>
  <goal name="rz_&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.20" steps="745891"/></proof>
  </goal>
  <goal name="rz_&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="3.01" steps="915322"/></proof>
  </goal>
  <goal name="rz_&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.35" steps="758693"/></proof>
  </goal>
  <goal name="rz_&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="3.01" steps="916960"/></proof>
  </goal>
  <goal name="rz_&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.37" steps="758720"/></proof>
  </goal>
  <goal name="rz_&#39;vc.13" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="( path_sem result (qbit_zero ()))" arg2="(pps_apply (pps_rz_b k) (qbit_zero()))">
   <goal name="rz_&#39;vc.13.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
    <goal name="rz_&#39;vc.13.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="rz_&#39;vc.13.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
      <goal name="rz_&#39;vc.13.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
       <goal name="rz_&#39;vc.13.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
        <goal name="rz_&#39;vc.13.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="apply" proved="true" arg1="scalar_eq_gen">
          <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="bv_to_zero">
           <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="pps_rz_b&#39;spec1">
             <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="3.05" steps="1050829"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.16" steps="745823"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="set_equal_angle_exp">
           <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="pps_rz_b&#39;spec">
             <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
              <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="3.32" steps="1049137"/></proof>
              </goal>
              <goal name="rz_&#39;vc.13.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="3.29" steps="1051831"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="rz_&#39;vc.13.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.27" steps="758768"/></proof>
        </goal>
        <goal name="rz_&#39;vc.13.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.19" steps="745823"/></proof>
        </goal>
        <goal name="rz_&#39;vc.13.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="rz_&#39;vc.13.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="scalar_ket_l">
          <goal name="rz_&#39;vc.13.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
           <goal name="rz_&#39;vc.13.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="make_bv_length">
            <goal name="rz_&#39;vc.13.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="2.84" steps="883561"/></proof>
            </goal>
            <goal name="rz_&#39;vc.13.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="1.28" steps="758768"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="rz_&#39;vc.13.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.64" steps="881381"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="rz_&#39;vc.13.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.66" steps="883338"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="rz_&#39;vc.13.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="2.04" steps="792963"/></proof>
    </goal>
    <goal name="rz_&#39;vc.13.0.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.18" steps="745942"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="rz_&#39;vc.13.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="1.99" steps="793779"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="rz_&#39;vc.14" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="rz_&#39;vc.14.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="rz_&#39;vc.14.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="( path_sem result (qbit_one ()))" arg2="(pps_apply (pps_rz_b k) (qbit_one()))">
     <goal name="rz_&#39;vc.14.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
      <goal name="rz_&#39;vc.14.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
       <goal name="rz_&#39;vc.14.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
        <goal name="rz_&#39;vc.14.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
         <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="apply" proved="true" arg1="scalar_eq_gen">
           <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="bv_to_one">
            <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="pps_rz_b&#39;spec1">
             <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="3.39" steps="1027049"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="1.50" steps="882640"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="set_equal_angle_exp">
            <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="pps_rz_b&#39;spec">
             <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="Even_phase_inv">
              <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="1.51" steps="882638"/></proof>
              </goal>
              <goal name="rz_&#39;vc.14.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="3.68" steps="1036664"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="rz_&#39;vc.14.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.53" steps="896396"/></proof>
         </goal>
         <goal name="rz_&#39;vc.14.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.59" steps="882640"/></proof>
         </goal>
         <goal name="rz_&#39;vc.14.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="rz_&#39;vc.14.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="scalar_ket_l">
           <goal name="rz_&#39;vc.14.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
            <goal name="rz_&#39;vc.14.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="make_bv_length">
             <goal name="rz_&#39;vc.14.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="rz_&#39;vc.14.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="3.50" steps="1026823"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="rz_&#39;vc.14.0.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.57" steps="896396"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="rz_&#39;vc.14.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="3.12" steps="1024700"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="rz_&#39;vc.14.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="3.56" steps="1026453"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="rz_&#39;vc.14.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.46" steps="931479"/></proof>
      </goal>
      <goal name="rz_&#39;vc.14.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.69" steps="931469"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="rz_&#39;vc.14.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="1"><result status="valid" time="2.02" steps="7517350"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rz_&#39;vc.15" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="rz_&#39;vc.15.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures8">
    <goal name="rz_&#39;vc.15.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sequence_basis_ket">
     <goal name="rz_&#39;vc.15.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="rz_&#39;vc.15.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="rz_&#39;vc.15.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="rz&#39;spec1">
        <goal name="rz_&#39;vc.15.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="rz_&#39;vc.15.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="2.43" steps="957923"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="rz_&#39;vc.15.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.37" steps="758860"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rz_&#39;vc.16" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures9">
   <goal name="rz_&#39;vc.16.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="sequence_angle">
    <goal name="rz_&#39;vc.16.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="rz_&#39;vc.16.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="phase&#39;spec">
      <goal name="rz_&#39;vc.16.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="rz&#39;spec">
       <goal name="rz_&#39;vc.16.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="rz_&#39;vc.16.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="phase&#39;spec1">
         <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="replace" proved="true" arg1="(1 /./ (- incr_abs k))" arg2="(-1 /./ ( incr_abs k))">
          <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="case" proved="true" arg1="(x 0 = 0)">
           <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
            <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
            <proof prover="9"><result status="valid" time="3.55" steps="1054639"/></proof>
            </goal>
            <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.60" steps="896504"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1" expl="false case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="Even_phase_inv">
            <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1.0" expl="false case (postcondition)" proved="true">
            <transf name="replace" proved="true" arg1="(x 0)" arg2="1">
             <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1.0.0" expl="false case (postcondition)" proved="true">
             <transf name="replace" proved="true" arg1="(1 /./ k)" arg2="( (1 /./ (incr_abs k)) +.+ (1 /./ (incr_abs k)))">
              <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
              <transf name="rewrite" proved="true" arg1="ang_add_assoc">
               <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="false case (postcondition)" proved="true">
               <transf name="rewrite" proved="true" arg1="ang_zero_add">
                <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
                <proof prover="9"><result status="valid" time="1.56" steps="883001"/></proof>
                </goal>
                <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="3.43" steps="1052378"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="2.43" steps="931705"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="2.52" steps="931025"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.68" steps="931790"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="rz_&#39;vc.16.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="9"><result status="valid" time="3.46" steps="1052711"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="rz_&#39;vc.16.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.43" steps="758882"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rx&#39;vc" expl="VC for rx" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rx&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.08" steps="789978"/></proof>
  </goal>
  <goal name="rx&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.08" steps="793323"/></proof>
  </goal>
  <goal name="rx&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.28" steps="747000"/></proof>
  </goal>
  <goal name="rx&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.28" steps="794958"/></proof>
  </goal>
  <goal name="rx&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.44" steps="759997"/></proof>
  </goal>
  <goal name="rx&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.28" steps="760016"/></proof>
  </goal>
  <goal name="rx&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.30" steps="747036"/></proof>
  </goal>
  <goal name="rx&#39;vc.7" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures22">
  </transf>
  </goal>
  <goal name="rx&#39;vc.8" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures23">
  </transf>
  </goal>
  <goal name="rx&#39;vc.9" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.31" steps="795159"/></proof>
  </goal>
  <goal name="rx&#39;vc.10" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_correct_path_sum">
   <goal name="rx&#39;vc.10.0" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.31" steps="760185"/></proof>
   </goal>
   <goal name="rx&#39;vc.10.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rx&#39;vc.10.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="mat_sem_to_path">
     <goal name="rx&#39;vc.10.1.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.26" steps="795264"/></proof>
     </goal>
     <goal name="rx&#39;vc.10.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.25" steps="747127"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rx&#39;vc.11" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.34" steps="760188"/></proof>
  </goal>
  <goal name="rx&#39;vc.12" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.36" steps="760202"/></proof>
  </goal>
  <goal name="rx&#39;vc.13" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.34" steps="794981"/></proof>
  </goal>
  <goal name="rx&#39;vc.14" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures27">
   <goal name="rx&#39;vc.14.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="rx&#39;vc.14.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_rx&#39;spec">
     <goal name="rx&#39;vc.14.0.0.0" expl="precondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="rx&#39;vc.14.0.0.0.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_add_assoc_rev">
       <goal name="rx&#39;vc.14.0.0.0.0.0" expl="precondition" proved="true">
       <transf name="apply" proved="true" arg1="ang_add_eq">
        <goal name="rx&#39;vc.14.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="3.53" steps="1057027"/></proof>
        </goal>
        <goal name="rx&#39;vc.14.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ang_add_comm">
         <goal name="rx&#39;vc.14.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="ang_add_eq">
          <goal name="rx&#39;vc.14.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="pps_rz_b&#39;spec">
           <goal name="rx&#39;vc.14.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="pps_hadamard&#39;def1">
            <goal name="rx&#39;vc.14.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="rx&#39;vc.14.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="pps_hadamard&#39;def">
           <goal name="rx&#39;vc.14.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures24">
            <goal name="rx&#39;vc.14.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="pps_hadamard&#39;def1">
             <goal name="rx&#39;vc.14.0.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="rx&#39;vc.14.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="2.62" steps="932985"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rx&#39;vc.15" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures28">
   <goal name="rx&#39;vc.15.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="rx&#39;vc.15.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_rx&#39;spec1">
     <goal name="rx&#39;vc.15.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_hadamard&#39;def1">
      <goal name="rx&#39;vc.15.0.0.0.0" expl="precondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="rx&#39;vc.15.0.0.0.0.0" expl="precondition" proved="true">
       <proof prover="0"><result status="valid" time="1.16"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rx&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.15" steps="795077"/></proof>
  </goal>
  <goal name="rx&#39;vc.17" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="rx&#39;vc.17.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="rx&#39;vc.17.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sequence&#39;spec1">
     <goal name="rx&#39;vc.17.0.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="2.75" steps="936795"/></proof>
     </goal>
     <goal name="rx&#39;vc.17.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.53" steps="932499"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rx&#39;vc.18" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures1">
   <goal name="rx&#39;vc.18.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="rx&#39;vc.18.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="2.61" steps="932514"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rx&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.46" steps="760437"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="zz&#39;vc" expl="VC for zz" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="zz&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_correct_path_sum_basis">
   <goal name="zz&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.15" steps="655831"/></proof>
   </goal>
   <goal name="zz&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="zz&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="mat_sem_to_path">
     <goal name="zz&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
      <goal name="zz&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_value_for_basis">
       <goal name="zz&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
        <goal name="zz&#39;vc.0.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="zz&#39;vc.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="scalar_eq_gen">
          <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
           <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.10" steps="655860"/></proof>
           </goal>
           <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.13" steps="655864"/></proof>
           </goal>
           <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.11" steps="655856"/></proof>
           </goal>
           <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="scalar_eq_gen">
              <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="bv_to_ket_eq">
               <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="make_bv_length">
                <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="make_bv_length">
                 <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.23" steps="734010"/></proof>
                 </goal>
                 <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                   <transf name="split_all_full" proved="true" >
                    <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.20" steps="1023943"/></proof>
                     </goal>
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.45" steps="870630"/></proof>
                     </goal>
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.36" steps="856296"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                   <transf name="split_all_full" proved="true" >
                    <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.18" steps="1023943"/></proof>
                     </goal>
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.56" steps="870630"/></proof>
                     </goal>
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.42" steps="856296"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.22" steps="734014"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1" expl="rewrite premises" proved="true">
                <transf name="split_all_full" proved="true" >
                 <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.13" steps="1023939"/></proof>
                   </goal>
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.55" steps="870630"/></proof>
                   </goal>
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.38" steps="856296"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.17" steps="1023939"/></proof>
                   </goal>
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.50" steps="870630"/></proof>
                   </goal>
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.39" steps="856296"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="1.25" steps="734014"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                 <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                  <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.00" steps="946983"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                       <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.20" steps="1023979"/></proof>
                       </goal>
                       <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.54" steps="870671"/></proof>
                       </goal>
                       <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.34" steps="856321"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                       <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.12" steps="1023979"/></proof>
                       </goal>
                       <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.47" steps="870671"/></proof>
                       </goal>
                       <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.39" steps="856321"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.93" steps="763784"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                      <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.16" steps="1023965"/></proof>
                      </goal>
                      <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.49" steps="870671"/></proof>
                      </goal>
                      <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.44" steps="856321"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                      <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.21" steps="1023965"/></proof>
                      </goal>
                      <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.49" steps="870671"/></proof>
                      </goal>
                      <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.44" steps="856321"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.19" steps="720549"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.09" steps="958452"/></proof>
                 </goal>
                 <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.37" steps="790803"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="3.06" steps="933124"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="zz&#39;vc.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="1.05" steps="655864"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="zz&#39;vc.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.44" steps="806447"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="zz&#39;vc.0.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.98" steps="643109"/></proof>
       </goal>
       <goal name="zz&#39;vc.0.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.98" steps="643109"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="zz&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.64" steps="683982"/></proof>
      </goal>
      <goal name="zz&#39;vc.0.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.96" steps="643109"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="zz&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.97" steps="643109"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="zz&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.98" steps="643100"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_zz_zero&#39;vc" expl="VC for path_sem_zz_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_zz_zero&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.00" steps="622179"/></proof>
  </goal>
  <goal name="path_sem_zz_zero&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.61" steps="662739"/></proof>
  </goal>
  <goal name="path_sem_zz_zero&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.98" steps="622193"/></proof>
  </goal>
  <goal name="path_sem_zz_zero&#39;vc.3" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Requires">
   <goal name="path_sem_zz_zero&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="path_sem_zz_zero&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis_">
     <goal name="path_sem_zz_zero&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
      <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
       <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
         <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="replace" proved="true" arg1="(qbit_zero())" arg2="(bv_to_ket (make_bv (fun _ -&gt; 0) 1))">
          <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="apply" proved="true" arg1="bv_to_ket_eq">
           <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length">
            <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="make_bv_length">
             <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.00" steps="622204"/></proof>
             </goal>
             <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.80" steps="696830"/></proof>
             </goal>
             <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.97" steps="622211"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.73" steps="931403"/></proof>
                </goal>
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.33" steps="779749"/></proof>
                </goal>
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.18" steps="743085"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="3.08" steps="931403"/></proof>
                </goal>
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.47" steps="779749"/></proof>
                </goal>
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.19" steps="743085"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.06" steps="634940"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
             <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="pps_zz&#39;def1">
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.36" steps="1004933"/></proof>
                 </goal>
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.46" steps="843455"/></proof>
                 </goal>
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.44" steps="829830"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.29" steps="1004933"/></proof>
                 </goal>
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.46" steps="843455"/></proof>
                 </goal>
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.42" steps="829830"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
             <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="0.93" steps="622238"/></proof>
              </goal>
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                  <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.29" steps="1004933"/></proof>
                  </goal>
                  <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.45" steps="843455"/></proof>
                  </goal>
                  <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0.0.2" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.31" steps="829830"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                  <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.28" steps="1004933"/></proof>
                  </goal>
                  <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1.0.1" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.56" steps="843455"/></proof>
                  </goal>
                  <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1.0.2" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.42" steps="829830"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.27" steps="711997"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="eliminate_definition" proved="true" >
           <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="qbit_zero&#39;def">
            <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="bv_to_ket&#39;def">
             <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
             <transf name="apply" proved="true" arg1="ket_eq">
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="0.92" steps="623217"/></proof>
              </goal>
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="make_bv_length">
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="0.94" steps="623208"/></proof>
               </goal>
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="1.69" steps="693158"/></proof>
               </goal>
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.1.2" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="0.93" steps="623217"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
               <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="ind_isum_one">
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                  <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                  </transf>
                  </goal>
                  <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.77" steps="693158"/></proof>
                  </goal>
                  <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="0.96" steps="623233"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0.1" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="make_bv_length">
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0.1.0" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="0.96" steps="623224"/></proof>
                 </goal>
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0.1.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.77" steps="693158"/></proof>
                 </goal>
                 <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.2.0.1.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="0.94" steps="623217"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="pps_zz&#39;def">
           <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.54" steps="928323"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.03" steps="634940"/></proof>
       </goal>
       <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.93" steps="622204"/></proof>
       </goal>
       <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="scalar_ket_l">
         <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
          <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="0.95" steps="622202"/></proof>
           </goal>
           <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.70" steps="861147"/></proof>
           </goal>
           <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.02" steps="634940"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_zz_zero&#39;vc.3.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.47" steps="779276"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_zz_zero&#39;vc.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.58" steps="662761"/></proof>
     </goal>
     <goal name="path_sem_zz_zero&#39;vc.3.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.94" steps="622204"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_zz_one&#39;vc" expl="VC for path_sem_zz_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_zz_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.97" steps="622254"/></proof>
  </goal>
  <goal name="path_sem_zz_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.64" steps="662815"/></proof>
  </goal>
  <goal name="path_sem_zz_one&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.00" steps="622268"/></proof>
  </goal>
  <goal name="path_sem_zz_one&#39;vc.3" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Requires">
   <goal name="path_sem_zz_one&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="path_sem_zz_one&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis_">
     <goal name="path_sem_zz_one&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
      <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
       <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="scalar_eq_gen">
         <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(qbit_one())" arg2="(bv_to_ket (make_bv (fun _ -&gt; 1) 1))
">
          <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="bv_to_ket_eq">
           <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length">
            <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="make_bv_length">
             <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="0.94" steps="622279"/></proof>
             </goal>
             <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.77" steps="696893"/></proof>
             </goal>
             <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.98" steps="622286"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.97" steps="931556"/></proof>
                </goal>
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.47" steps="779824"/></proof>
                </goal>
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.17" steps="743162"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="3.00" steps="931556"/></proof>
                </goal>
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.36" steps="779824"/></proof>
                </goal>
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.25" steps="743162"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.04" steps="635015"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
             <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="pps_zz&#39;def1">
               <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.31" steps="1005149"/></proof>
                 </goal>
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.61" steps="843530"/></proof>
                 </goal>
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.43" steps="829905"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.29" steps="1005149"/></proof>
                 </goal>
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.58" steps="843530"/></proof>
                 </goal>
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.40" steps="829905"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
             <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
              <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="0.93" steps="622313"/></proof>
              </goal>
              <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.36" steps="1005149"/></proof>
                  </goal>
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.46" steps="843530"/></proof>
                  </goal>
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0.0.2" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.49" steps="829905"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.41" steps="1005149"/></proof>
                  </goal>
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1.0.1" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.63" steps="843530"/></proof>
                  </goal>
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.1.0.1.0.2" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.33" steps="829905"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.42" steps="712072"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
           <transf name="eliminate_definition" proved="true" >
            <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="qbit_one&#39;def">
             <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
             <transf name="rewrite" proved="true" arg1="bv_to_ket&#39;def">
              <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
              <transf name="apply" proved="true" arg1="ket_eq">
               <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.41" steps="744001"/></proof>
               </goal>
               <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="make_bv_length">
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.12" steps="743992"/></proof>
                </goal>
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="2.38" steps="816701"/></proof>
                </goal>
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="1.13" steps="743988"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
                <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="ind_isum_one">
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                   <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="make_bv_length">
                     <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.18" steps="789090"/></proof>
                     </goal>
                     <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.28" steps="816701"/></proof>
                     </goal>
                     <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.21" steps="743988"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.26" steps="816701"/></proof>
                   </goal>
                   <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.28" steps="744017"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="make_bv_length">
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.1.0" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.28" steps="744008"/></proof>
                  </goal>
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.1.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.24" steps="816701"/></proof>
                  </goal>
                  <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0.2.0.1.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.24" steps="743988"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="pps_zz&#39;def">
           <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="3.17" steps="928456"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.20" steps="635015"/></proof>
       </goal>
       <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.98" steps="622279"/></proof>
       </goal>
       <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="scalar_ket_l">
         <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
          <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="0.95" steps="622277"/></proof>
           </goal>
           <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.95" steps="861525"/></proof>
           </goal>
           <goal name="path_sem_zz_one&#39;vc.3.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.03" steps="635015"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_zz_one&#39;vc.3.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.25" steps="779500"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_zz_one&#39;vc.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.66" steps="662837"/></proof>
     </goal>
     <goal name="path_sem_zz_one&#39;vc.3.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.98" steps="622279"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_zz_plus&#39;vc" expl="VC for path_sem_zz_plus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_zz_plus&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.00" steps="621963"/></proof>
  </goal>
  <goal name="path_sem_zz_plus&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.68" steps="662752"/></proof>
  </goal>
  <goal name="path_sem_zz_plus&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.66" steps="662764"/></proof>
  </goal>
  <goal name="path_sem_zz_plus&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.95" steps="622081"/></proof>
  </goal>
  <goal name="path_sem_zz_plus&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.96" steps="622095"/></proof>
  </goal>
  <goal name="path_sem_zz_plus&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.70" steps="663178"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_zz_minus&#39;vc" expl="VC for path_sem_zz_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_zz_minus&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.02" steps="622038"/></proof>
  </goal>
  <goal name="path_sem_zz_minus&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.63" steps="662837"/></proof>
  </goal>
  <goal name="path_sem_zz_minus&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.74" steps="663513"/></proof>
  </goal>
  <goal name="path_sem_zz_minus&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.01" steps="622156"/></proof>
  </goal>
  <goal name="path_sem_zz_minus&#39;vc.4" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_scal">
   <goal name="path_sem_zz_minus&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="3.93" steps="815659"/></proof>
   </goal>
   <goal name="path_sem_zz_minus&#39;vc.4.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="1.68" steps="662886"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_zz_minus&#39;vc.5" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="x" arg2="(pow_inv_sqrt_2 1
   *.. add_ket_l (qbit_zero ()) ((-. c_one) *.. qbit_one ()) (width zz))">
   <goal name="path_sem_zz_minus&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="path_sem_zz_minus&#39;vc.5.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.69" steps="662925"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_zz_minus&#39;vc.5.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="1.54" steps="662928"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="xx&#39;vc" expl="VC for xx" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="xx&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.64" steps="663073"/></proof>
  </goal>
  <goal name="xx&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.92" steps="622524"/></proof>
  </goal>
  <goal name="xx&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.94" steps="622538"/></proof>
  </goal>
  <goal name="xx&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.02" steps="635297"/></proof>
  </goal>
  <goal name="xx&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.04" steps="635354"/></proof>
  </goal>
  <goal name="xx&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.79" steps="675051"/></proof>
  </goal>
  <goal name="xx&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.93" steps="622676"/></proof>
  </goal>
  <goal name="xx&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.00" steps="622689"/></proof>
  </goal>
  <goal name="xx&#39;vc.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.78" steps="663955"/></proof>
  </goal>
  <goal name="xx&#39;vc.9" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.69" steps="663374"/></proof>
  </goal>
  <goal name="xx&#39;vc.10" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.06" steps="622767"/></proof>
  </goal>
  <goal name="xx&#39;vc.11" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.85" steps="622781"/></proof>
  </goal>
  <goal name="xx&#39;vc.12" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.91" steps="635545"/></proof>
  </goal>
  <goal name="xx&#39;vc.13" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.90" steps="635595"/></proof>
  </goal>
  <goal name="xx&#39;vc.14" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.65" steps="675379"/></proof>
  </goal>
  <goal name="xx&#39;vc.15" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.97" steps="622854"/></proof>
  </goal>
  <goal name="xx&#39;vc.16" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.00" steps="622867"/></proof>
  </goal>
  <goal name="xx&#39;vc.17" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.66" steps="664207"/></proof>
  </goal>
  <goal name="xx&#39;vc.18" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.03" steps="635622"/></proof>
  </goal>
  <goal name="xx&#39;vc.19" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.70" steps="664212"/></proof>
  </goal>
  <goal name="xx&#39;vc.20" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_correct_pps_">
   <goal name="xx&#39;vc.20.0" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="2.37" steps="782709"/></proof>
   </goal>
   <goal name="xx&#39;vc.20.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="xx&#39;vc.20.1.0" expl="apply premises" proved="true">
    <transf name="case" proved="true" arg1="(x = qbit_zero())">
     <goal name="xx&#39;vc.20.1.0.0" expl="true case (apply premises)" proved="true">
     <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis_">
      <goal name="xx&#39;vc.20.1.0.0.0" expl="true case (apply premises)" proved="true">
      <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
       <goal name="xx&#39;vc.20.1.0.0.0.0" expl="true case (apply premises)" proved="true">
       <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
        <goal name="xx&#39;vc.20.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="xx&#39;vc.20.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
          <goal name="xx&#39;vc.20.1.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="h">
           <goal name="xx&#39;vc.20.1.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="bv_to_one">
            <goal name="xx&#39;vc.20.1.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
            <proof prover="9"><result status="valid" time="1.00" steps="622967"/></proof>
            </goal>
            <goal name="xx&#39;vc.20.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.80" steps="867315"/></proof>
            </goal>
            <goal name="xx&#39;vc.20.1.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="xx&#39;vc.20.1.0.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.26" steps="743815"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="xx&#39;vc.20.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.05" steps="749590"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="xx&#39;vc.20.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.10" steps="635729"/></proof>
        </goal>
        <goal name="xx&#39;vc.20.1.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.03" steps="622960"/></proof>
        </goal>
        <goal name="xx&#39;vc.20.1.0.0.0.0.3" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="xx&#39;vc.20.1.0.0.0.0.3.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="scalar_ket_l">
          <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
           <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length">
            <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="0.95" steps="622958"/></proof>
            </goal>
            <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="pps&#39;invariant3">
               <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.76" steps="932850"/></proof>
               </goal>
               <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.33" steps="780538"/></proof>
               </goal>
               <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.0.0.2" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.23" steps="743849"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="pps&#39;invariant2">
               <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.1.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.74" steps="932850"/></proof>
               </goal>
               <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.1.0.1" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.29" steps="780538"/></proof>
               </goal>
               <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.1.1.0.2" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.14" steps="743849"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="xx&#39;vc.20.1.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.09" steps="635729"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="xx&#39;vc.20.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.46" steps="785425"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="xx&#39;vc.20.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.58" steps="663658"/></proof>
      </goal>
      <goal name="xx&#39;vc.20.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.97" steps="622960"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="xx&#39;vc.20.1.0.1" expl="false case (apply premises)" proved="true">
     <transf name="replace" proved="true" arg1="x" arg2="( qbit_one())">
      <goal name="xx&#39;vc.20.1.0.1.0" expl="false case (apply premises)" proved="true">
      <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis_">
       <goal name="xx&#39;vc.20.1.0.1.0.0" expl="false case (apply premises)" proved="true">
       <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
        <goal name="xx&#39;vc.20.1.0.1.0.0.0" expl="false case (apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
         <goal name="xx&#39;vc.20.1.0.1.0.0.0.0" expl="false case (apply premises)" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="xx&#39;vc.20.1.0.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
           <goal name="xx&#39;vc.20.1.0.1.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="bv_to_zero">
            <goal name="xx&#39;vc.20.1.0.1.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
            <proof prover="9"><result status="valid" time="0.99" steps="622971"/></proof>
            </goal>
            <goal name="xx&#39;vc.20.1.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.78" steps="868293"/></proof>
            </goal>
            <goal name="xx&#39;vc.20.1.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.00" steps="622964"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="xx&#39;vc.20.1.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.03" steps="749660"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="xx&#39;vc.20.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.95" steps="635733"/></proof>
         </goal>
         <goal name="xx&#39;vc.20.1.0.1.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.99" steps="622964"/></proof>
         </goal>
         <goal name="xx&#39;vc.20.1.0.1.0.0.0.3" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="scalar_ket_l">
           <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
            <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="make_bv_length">
             <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="0.91" steps="622962"/></proof>
             </goal>
             <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.75" steps="933909"/></proof>
                </goal>
                <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.31" steps="780542"/></proof>
                </goal>
                <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.18" steps="743853"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.72" steps="933909"/></proof>
                </goal>
                <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.32" steps="780542"/></proof>
                </goal>
                <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.1.1.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.13" steps="743853"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="xx&#39;vc.20.1.0.1.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.06" steps="635733"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="xx&#39;vc.20.1.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.38" steps="786427"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="xx&#39;vc.20.1.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.57" steps="663657"/></proof>
       </goal>
       <goal name="xx&#39;vc.20.1.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.93" steps="622964"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="xx&#39;vc.20.1.0.1.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
       <goal name="xx&#39;vc.20.1.0.1.1.0" expl="equality hypothesis" proved="true">
       <transf name="case" proved="true" arg1="(getbv (ket_to_bv x) 0 = 0)">
        <goal name="xx&#39;vc.20.1.0.1.1.0.0" expl="true case (equality hypothesis)" proved="true">
        <proof prover="9"><result status="valid" time="2.46" steps="788729"/></proof>
        </goal>
        <goal name="xx&#39;vc.20.1.0.1.1.0.1" expl="false case (equality hypothesis)" proved="true">
        <proof prover="9"><result status="valid" time="2.17" steps="789888"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="xx&#39;vc.20.1.0.1.1.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="1.68" steps="664305"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="xx&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.70" steps="664314"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_xx&#39;vc" expl="VC for path_sem_xx" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_xx&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.58" steps="664186"/></proof>
  </goal>
  <goal name="path_sem_xx&#39;vc.1" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="path_sem_xx&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="path_sem_xx&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(path_sem xx x)" arg2="(pps_apply pps_xx x)">
     <goal name="path_sem_xx&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="get_pps_apply">
      <goal name="path_sem_xx&#39;vc.1.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(h_width pps_xx)" arg2="1">
       <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_one">
        <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="replace" proved="true" arg1="(add_ket_l (get_ket x 1 *.. qbit_zero ()) (get_ket x 0 *.. qbit_one ()) 1)" arg2="(add_ket_l  (get_ket x 0 *.. qbit_one ()) (get_ket x 1 *.. qbit_zero ()) 1)">
          <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="apply" proved="true" arg1="add_ket_l_eq_scal">
           <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="0.93" steps="621808"/></proof>
           </goal>
           <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
            <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
             <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
              <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
                <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="bv_to_one">
                 <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.79" steps="837696"/></proof>
                 </goal>
                 <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="0.95" steps="621801"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="2.16" steps="742638"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.04" steps="634715"/></proof>
              </goal>
              <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="0.93" steps="621801"/></proof>
              </goal>
              <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.3" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.3.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="scalar_ket_l">
                <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.3.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                 <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.3.0.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="make_bv_length">
                  <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.50" steps="837834"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.0.3.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.06" steps="634715"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.49" steps="758164"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.85" steps="760044"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
            <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
             <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
              <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
                <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="bv_to_zero">
                 <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.08" steps="837659"/></proof>
                 </goal>
                 <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.24" steps="621801"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="1.89" steps="742660"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.03" steps="634715"/></proof>
              </goal>
              <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="0.91" steps="621801"/></proof>
              </goal>
              <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.3" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.3.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="scalar_ket_l">
                <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.3.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                 <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.3.0.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="make_bv_length">
                  <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.20" steps="837853"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.0.3.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.03" steps="634715"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.91" steps="758164"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.18" steps="760082"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="2.17" steps="758900"/></proof>
           </goal>
           <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.0.4" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="2.20" steps="758836"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="9"><result status="valid" time="1.89" steps="757948"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_xx&#39;vc.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="0.95" steps="621808"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_xx&#39;vc.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="0.91" steps="621801"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_xx&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.59" steps="665123"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_xx&#39;vc.1.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="1.76" steps="665889"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_xx_add_rev&#39;vc" expl="VC for path_sem_xx_add_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_xx_add_rev&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_xx&#39;spec">
   <goal name="path_sem_xx_add_rev&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="add_ket_l_eq">
    <goal name="path_sem_xx_add_rev&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="0.96" steps="622305"/></proof>
    </goal>
    <goal name="path_sem_xx_add_rev&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="scalar_eq_gen">
     <goal name="path_sem_xx_add_rev&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="0.95" steps="622296"/></proof>
     </goal>
     <goal name="path_sem_xx_add_rev&#39;vc.0.0.1.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.69" steps="664701"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_xx_add_rev&#39;vc.0.0.2" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="scalar_eq_gen">
     <goal name="path_sem_xx_add_rev&#39;vc.0.0.2.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="0.94" steps="622296"/></proof>
     </goal>
     <goal name="path_sem_xx_add_rev&#39;vc.0.0.2.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.62" steps="664701"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_xx_add_rev&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="2.28" steps="784580"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_xx_z&#39;vc" expl="VC for path_sem_xx_z" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_xx_z&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(qbit_zero ())" arg2="(add_ket_l (c_one *..  (qbit_zero ()) ) (c_zero *.. qbit_one()) 1)">
   <goal name="path_sem_xx_z&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_xx&#39;spec">
    <goal name="path_sem_xx_z&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="3.88" steps="826496"/></proof>
    </goal>
    <goal name="path_sem_xx_z&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="2.41" steps="785529"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_xx_z&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="3.83" steps="819216"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_xx_o&#39;vc" expl="VC for path_sem_xx_o" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_xx_o&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(qbit_zero ())" arg2="(add_ket_l (c_one *..  (qbit_zero ()) ) (c_zero *.. qbit_one()) 1)">
   <goal name="path_sem_xx_o&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_xx&#39;spec">
    <goal name="path_sem_xx_o&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.62" steps="664503"/></proof>
    </goal>
    <goal name="path_sem_xx_o&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.96" steps="622388"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_xx_o&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="3.80" steps="819240"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_xx_invol&#39;vc" expl="VC for path_sem_xx_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_xx_invol&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.97" steps="622422"/></proof>
  </goal>
  <goal name="path_sem_xx_invol&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.65" steps="665145"/></proof>
  </goal>
  <goal name="path_sem_xx_invol&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.69" steps="665143"/></proof>
  </goal>
  <goal name="path_sem_xx_invol&#39;vc.3" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="path_sem_xx_invol&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_xx&#39;def">
    <goal name="path_sem_xx_invol&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_xx&#39;def">
     <goal name="path_sem_xx_invol&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_sum_">
      <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_sum_">
       <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq">
        <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.08" steps="681216"/></proof>
        </goal>
        <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="0.86" steps="681207"/></proof>
        </goal>
        <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_scal">
           <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="path_sem_scal">
            <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="scalar_eq_gen">
             <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="case" proved="true" arg1="(bv_to_ket a = qbit_zero())">
              <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
              <proof prover="9"><result status="valid" time="2.08" steps="791235"/></proof>
              </goal>
              <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
              <transf name="replace" proved="true" arg1="(bv_to_ket a)" arg2="(qbit_one())">
               <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.1.0" expl="false case (apply premises)" proved="true">
               <proof prover="9"><result status="valid" time="2.05" steps="791236"/></proof>
               </goal>
               <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
               <transf name="eliminate_definition" proved="true" >
                <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket&#39;def">
                 <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
                 <transf name="replace" proved="true" arg1="(bv_to_int a )" arg2="1">
                  <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.1.1.0.0.0" expl="equality hypothesis" proved="true">
                  <proof prover="9"><result status="valid" time="2.46" steps="873628"/></proof>
                  </goal>
                  <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="assert" proved="true" arg1="(0&lt;= bv_to_int a &lt;2)">
                   <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.1.1.0.0.1.0" expl="asserted formula" proved="true">
                   <proof prover="9"><result status="valid" time="2.55" steps="871347"/></proof>
                   </goal>
                   <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.0.1.1.0.0.1.1" expl="equality hypothesis" proved="true">
                   <proof prover="9"><result status="valid" time="2.53" steps="870870"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.15" steps="733037"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.63" steps="906067"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.68" steps="903404"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.25" steps="874556"/></proof>
       </goal>
       <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.88" steps="681216"/></proof>
       </goal>
       <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="path_sem_ket_l">
          <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.66" steps="906380"/></proof>
          </goal>
          <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="0.92" steps="733037"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.72" steps="874556"/></proof>
      </goal>
      <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.93" steps="681216"/></proof>
      </goal>
      <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_xx_invol&#39;vc.3.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.45" steps="906380"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_xx_invol&#39;vc.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.30" steps="851254"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_xx_invol&#39;vc.3.0.1" expl="rewrite premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_xx&#39;def">
     <goal name="path_sem_xx_invol&#39;vc.3.0.1.0" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.70" steps="855992"/></proof>
     </goal>
     <goal name="path_sem_xx_invol&#39;vc.3.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.25" steps="851254"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_cnot_basis_left&#39;vc" expl="VC for path_sem_cnot_basis_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_cnot_basis_left&#39;vc.0" expl="assertion" proved="true">
  <transf name="apply" proved="true" arg1="goal_comm">
   <goal name="path_sem_cnot_basis_left&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="path_sem_cnot_basis_left&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_to_int&#39;spec1">
     <goal name="path_sem_cnot_basis_left&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="1.06"/></proof>
     </goal>
     <goal name="path_sem_cnot_basis_left&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.97" steps="786821"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_cnot_basis_left&#39;vc.1" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="1.68" steps="665321"/></proof>
  </goal>
  <goal name="path_sem_cnot_basis_left&#39;vc.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.99"/></proof>
  </goal>
  <goal name="path_sem_cnot_basis_left&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.52" steps="802252"/></proof>
  </goal>
  <goal name="path_sem_cnot_basis_left&#39;vc.4" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="path_sem_cnot_basis_left&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(circ_to_pps cnot)" arg2="(pps_cnot 0 1 2)">
    <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
     <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_cnot_apply_basis">
      <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0" expl="postcondition" proved="true">
      <transf name="eliminate_if" proved="true" >
       <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0" expl="VC for path_sem_cnot_basis_left" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.90" steps="944404"/></proof>
        </goal>
        <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.1" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.60" steps="945380"/></proof>
        </goal>
        <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.2" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.69" steps="944247"/></proof>
        </goal>
        <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.3" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.87" steps="945259"/></proof>
        </goal>
        <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.4" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.68" steps="945817"/></proof>
        </goal>
        <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5" expl="postcondition" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0" expl="postcondition" proved="true">
         <transf name="replace" proved="true" arg1="2" arg2="(1+1)">
          <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0" expl="postcondition" proved="true">
          <transf name="replace" proved="true" arg1="x" arg2="(ket 1 1)">
           <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0" expl="postcondition" proved="true">
           <transf name="replace" proved="true" arg1="(path_sem_xx y)" arg2="(ket 1 1)">
            <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.0" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_kets">
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.0.0" expl="postcondition" proved="true">
             <proof prover="0"><result status="valid" time="1.08"/></proof>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.18" steps="773417"/></proof>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.16" steps="773417"/></proof>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.0.3" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.97" steps="822068"/></proof>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.0.4" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.99" steps="822068"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.1" expl="equality hypothesis" proved="true">
            <transf name="replace" proved="true" arg1="y" arg2="(qbit_zero())">
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.1.0" expl="equality hypothesis" proved="true">
             <transf name="rewrite" proved="true" arg1="path_sem_xx&#39;spec">
              <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="2.03" steps="819108"/></proof>
              </goal>
              <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.15" steps="773410"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.0.1.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="2.07" steps="822254"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="1.19" steps="773410"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.5.0.1" expl="equality hypothesis" proved="true">
          <proof prover="9"><result status="valid" time="1.21" steps="773424"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.6" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.76" steps="945604"/></proof>
        </goal>
        <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7" expl="postcondition" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0" expl="postcondition" proved="true">
         <transf name="replace" proved="true" arg1="2" arg2="(1+1)">
          <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0" expl="postcondition" proved="true">
          <transf name="replace" proved="true" arg1="x" arg2="(ket 1 1)">
           <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0" expl="postcondition" proved="true">
           <transf name="replace" proved="true" arg1="(path_sem_xx y)" arg2="(ket 1 0)">
            <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.0" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_kets">
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.0.0" expl="postcondition" proved="true">
             <proof prover="9"><result status="valid" time="2.09" steps="822090"/></proof>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.27" steps="773421"/></proof>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.23" steps="773421"/></proof>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.0.3" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.05" steps="822075"/></proof>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.0.4" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.02" steps="822075"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.1" expl="equality hypothesis" proved="true">
            <transf name="replace" proved="true" arg1="y" arg2="(qbit_one())">
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.1.0" expl="equality hypothesis" proved="true">
             <transf name="rewrite" proved="true" arg1="path_sem_xx&#39;spec">
              <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="2.14" steps="819115"/></proof>
              </goal>
              <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.31" steps="773414"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.0.1.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="2.89" steps="943526"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="1.24" steps="773414"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.0.0.7.0.1" expl="equality hypothesis" proved="true">
          <proof prover="9"><result status="valid" time="1.31" steps="773428"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.15" steps="794610"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.54" steps="805191"/></proof>
     </goal>
     <goal name="path_sem_cnot_basis_left&#39;vc.4.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.71" steps="664243"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_cnot_basis_left&#39;vc.4.0.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="0.98" steps="622775"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_cnot_basis_left&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.67" steps="663630"/></proof>
  </goal>
  <goal name="path_sem_cnot_basis_left&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.76" steps="664035"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_cnot&#39;vc" expl="VC for path_sem_cnot" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_cnot&#39;vc.0" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width cnot)" arg2="(1+1)">
   <goal name="path_sem_cnot&#39;vc.0.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="kronecker_ket_l">
    <goal name="path_sem_cnot&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="0.98" steps="622891"/></proof>
    </goal>
    <goal name="path_sem_cnot&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.02" steps="622891"/></proof>
    </goal>
    <goal name="path_sem_cnot&#39;vc.0.0.2" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="0.99" steps="622884"/></proof>
    </goal>
    <goal name="path_sem_cnot&#39;vc.0.0.3" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="0.98" steps="622884"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_cnot&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="0.99" steps="622898"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_cnot&#39;vc.1" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="path_sem_cnot&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="path_sem_cnot&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="y,1">
     <goal name="path_sem_cnot&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_xx&#39;def">
      <goal name="path_sem_cnot&#39;vc.1.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Hinst">
       <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
        <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_sum_">
         <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="path_sem_sum_">
          <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="eliminate_if" proved="true" >
            <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0" expl="VC for path_sem_cnot" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <transf name="apply" proved="true" arg1="ket_sum_eq">
              <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="1.81" steps="683728"/></proof>
              </goal>
              <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="1.01" steps="634878"/></proof>
              </goal>
              <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                 <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="path_sem_scal">
                  <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="replace" proved="true" arg1="(path_sem cnot (kronecker x (bv_to_ket a)))" arg2="(path_sem_cnot_basis_left   x (bv_to_ket a))">
                    <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.94" steps="1042393"/></proof>
                    </goal>
                    <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                    <proof prover="9"><result status="valid" time="3.23" steps="1040295"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="replace" proved="true" arg1="(width cnot)" arg2="(1+1)">
                   <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="kronecker_ket_l">
                    <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.1.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.15" steps="711495"/></proof>
                    </goal>
                    <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.1.0.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.14" steps="711495"/></proof>
                    </goal>
                    <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.1.0.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.14" steps="711495"/></proof>
                    </goal>
                    <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.1.0.3" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.60" steps="858150"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.1.1" expl="equality hypothesis" proved="true">
                   <proof prover="9"><result status="valid" time="1.10" steps="711509"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
             <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
              <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0" expl="postcondition" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="postcondition" proved="true">
               <transf name="apply" proved="true" arg1="ket_sum_eq">
                <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.24" steps="776011"/></proof>
                </goal>
                <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="0.97" steps="634882"/></proof>
                </goal>
                <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                   <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="path_sem_scal">
                    <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="path_sem_scal">
                     <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="replace" proved="true" arg1="(path_sem cnot (kronecker x (bv_to_ket a)))" arg2="(path_sem_cnot_basis_left   x (bv_to_ket a))">
                       <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.04" steps="1046178"/></proof>
                       </goal>
                       <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                       <proof prover="9"><result status="valid" time="3.07" steps="1043735"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.52" steps="858743"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="replace" proved="true" arg1="(width cnot)" arg2="(1+1)">
                     <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="kronecker_ket_l">
                      <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.1.0.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.09" steps="711499"/></proof>
                      </goal>
                      <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.1.0.1" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.07" steps="711499"/></proof>
                      </goal>
                      <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.1.0.2" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.06" steps="711499"/></proof>
                      </goal>
                      <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.1.0.3" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.52" steps="858736"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0.1.1" expl="equality hypothesis" proved="true">
                     <proof prover="9"><result status="valid" time="1.07" steps="711513"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="4.07" steps="887909"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.62" steps="675789"/></proof>
              </goal>
              <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.0.0.0.1.3" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.35" steps="824784"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.41" steps="815573"/></proof>
          </goal>
          <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="0.98" steps="624021"/></proof>
          </goal>
          <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="4.50" steps="910908"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="2.43" steps="815573"/></proof>
         </goal>
         <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.68" steps="665872"/></proof>
         </goal>
         <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(width cnot)" arg2="(1+1)">
            <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_ket_l">
             <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.09" steps="700359"/></proof>
             </goal>
             <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.04" steps="700359"/></proof>
             </goal>
             <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.3.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.01" steps="700359"/></proof>
             </goal>
             <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.3.0.0.0.3" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="2.32" steps="851292"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="9"><result status="valid" time="0.99" steps="700373"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="4.49" steps="910901"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.50" steps="665870"/></proof>
        </goal>
        <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.51" steps="815587"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.01" steps="624014"/></proof>
       </goal>
       <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.66" steps="665839"/></proof>
       </goal>
       <goal name="path_sem_cnot&#39;vc.1.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.62" steps="665855"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_cnot&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.78" steps="624014"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_cnot&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.62" steps="663737"/></proof>
  </goal>
  <goal name="path_sem_cnot&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.68" steps="664152"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_swap&#39;vc" expl="VC for path_sem_swap" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_swap&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.29" steps="801320"/></proof>
  </goal>
  <goal name="path_sem_swap&#39;vc.1" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="path_sem_swap&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="x,1">
    <goal name="path_sem_swap&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="path_sem_swap&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
      <goal name="path_sem_swap&#39;vc.1.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="pps_apply_sum">
       <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
        <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="ket_sum_eq">
         <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.00" steps="807602"/></proof>
         </goal>
         <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="0.80" steps="623363"/></proof>
         </goal>
         <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
            <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
             <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="pps_apply_scal">
              <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="scalar_eq_gen">
               <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="y,1">
                <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="Hinst">
                 <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
                  <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="pps_apply_sum">
                   <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
                    <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="ket_sum_eq">
                     <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.58" steps="890740"/></proof>
                     </goal>
                     <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="0.88" steps="699889"/></proof>
                     </goal>
                     <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                        <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                         <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="pps_apply_scal">
                          <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                          <transf name="apply" proved="true" arg1="scalar_eq">
                           <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
                            <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                            <transf name="replace" proved="true" arg1="(ket_to_bv (kronecker (bv_to_ket a1) (bv_to_ket a)))" arg2="(concat1 a1 a)">
                             <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                             <transf name="replace" proved="true" arg1="(circ_to_pps swap)" arg2="(pps_swap 0 1 2)">
                              <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                              <transf name="rewrite" proved="true" arg1="pps_swap_apply_basis">
                               <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                               <transf name="replace" proved="true" arg1="(kronecker (bv_to_ket a) (bv_to_ket a1))" arg2="(ket 2 (bv_to_int(concat1 a a1)))
">
                                <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                <transf name="replace" proved="true" arg1="(bv_to_int (concat1 a1 a) )" arg2="(2 * getbv a1 0 + getbv a 0)">
                                 <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                 <transf name="replace" proved="true" arg1="(bv_to_int (concat1 a a1) )" arg2="(2 * getbv a 0 + getbv a1 0)">
                                  <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                  <transf name="apply" proved="true" arg1="ket_eq">
                                   <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                   <proof prover="9"><result status="valid" time="1.07" steps="699910"/></proof>
                                   </goal>
                                   <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                                   <proof prover="9"><result status="valid" time="1.10" steps="699901"/></proof>
                                   </goal>
                                   <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                                   <proof prover="9"><result status="valid" time="2.64" steps="922006"/></proof>
                                   </goal>
                                  </transf>
                                  </goal>
                                  <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                                  <proof prover="0"><result status="valid" time="0.98"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                                 <proof prover="0"><result status="valid" time="0.98"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                                <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                                <proof prover="9"><result status="valid" time="2.61" steps="905349"/></proof>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                               <proof prover="9"><result status="valid" time="2.59" steps="894623"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                              <proof prover="9"><result status="valid" time="0.90" steps="699903"/></proof>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                             <proof prover="9"><result status="valid" time="2.45" steps="891890"/></proof>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                            <transf name="replace" proved="true" arg1="(h_width (circ_to_pps swap))" arg2="(1+1)">
                             <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                             <transf name="apply" proved="true" arg1="kronecker_ket_l">
                              <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="0.88" steps="699903"/></proof>
                              </goal>
                              <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="0.88" steps="699903"/></proof>
                              </goal>
                              <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="2.53" steps="889890"/></proof>
                              </goal>
                              <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.3" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="2.20" steps="889890"/></proof>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                             <proof prover="9"><result status="valid" time="1.79" steps="746685"/></proof>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="2.20" steps="890789"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
                          <transf name="replace" proved="true" arg1="(h_width (circ_to_pps swap))" arg2="(1+1)">
                           <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                           <transf name="apply" proved="true" arg1="kronecker_ket_l">
                            <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                            <proof prover="9"><result status="valid" time="1.05" steps="699903"/></proof>
                            </goal>
                            <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                            <proof prover="9"><result status="valid" time="0.88" steps="699903"/></proof>
                            </goal>
                            <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                            <proof prover="9"><result status="valid" time="2.22" steps="889890"/></proof>
                            </goal>
                            <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.0.3" expl="apply premises" proved="true">
                            <proof prover="9"><result status="valid" time="2.54" steps="889890"/></proof>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                           <proof prover="9"><result status="valid" time="1.85" steps="746685"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.59" steps="895218"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.50" steps="889418"/></proof>
                    </goal>
                    <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.53" steps="901541"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.64" steps="901547"/></proof>
                   </goal>
                   <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
                     <transf name="replace" proved="true" arg1="(h_width (circ_to_pps swap))" arg2="(1+1)">
                      <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="kronecker_ket_l">
                       <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.07" steps="699903"/></proof>
                       </goal>
                       <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.0.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="0.90" steps="699903"/></proof>
                       </goal>
                       <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.0.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.52" steps="889890"/></proof>
                       </goal>
                       <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.0.3" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.58" steps="895146"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.1" expl="equality hypothesis" proved="true">
                      <proof prover="9"><result status="valid" time="1.86" steps="746685"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.74" steps="916855"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="4.53" steps="959050"/></proof>
                  </goal>
                  <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.53" steps="889418"/></proof>
                  </goal>
                  <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.60" steps="901541"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="0.87" steps="699891"/></proof>
                 </goal>
                 <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.82" steps="746566"/></proof>
                 </goal>
                 <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.87" steps="746578"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.08" steps="699756"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="replace" proved="true" arg1="(h_width (circ_to_pps swap))" arg2="(1+1)">
               <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="0.88" steps="699758"/></proof>
                </goal>
                <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.03" steps="699758"/></proof>
                </goal>
                <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.54" steps="893112"/></proof>
                </goal>
                <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.1.0.3" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.07" steps="699758"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
               <proof prover="9"><result status="valid" time="1.80" steps="746455"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.63" steps="898211"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.63" steps="664785"/></proof>
        </goal>
        <goal name="path_sem_swap&#39;vc.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.44" steps="857356"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_swap&#39;vc.1.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.45" steps="857355"/></proof>
       </goal>
       <goal name="path_sem_swap&#39;vc.1.0.0.0.0.2" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="path_sem_swap&#39;vc.1.0.0.0.0.2.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="path_sem_swap&#39;vc.1.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
         <transf name="replace" proved="true" arg1="(h_width (circ_to_pps swap))" arg2="(1+1)">
          <goal name="path_sem_swap&#39;vc.1.0.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_ket_l">
           <goal name="path_sem_swap&#39;vc.1.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.04" steps="699758"/></proof>
           </goal>
           <goal name="path_sem_swap&#39;vc.1.0.0.0.0.2.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="0.88" steps="699758"/></proof>
           </goal>
           <goal name="path_sem_swap&#39;vc.1.0.0.0.0.2.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="2.64" steps="898211"/></proof>
           </goal>
           <goal name="path_sem_swap&#39;vc.1.0.0.0.0.2.0.0.0.3" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.09" steps="699758"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_swap&#39;vc.1.0.0.0.0.2.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="9"><result status="valid" time="1.85" steps="746455"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_swap&#39;vc.1.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.49" steps="834206"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_swap&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="path_sem_swap&#39;vc.1.0.0.0.1.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_swap&#39;vc.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.60" steps="898211"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_swap&#39;vc.1.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.66" steps="664785"/></proof>
      </goal>
      <goal name="path_sem_swap&#39;vc.1.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.18" steps="857356"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_swap&#39;vc.1.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.79" steps="623365"/></proof>
     </goal>
     <goal name="path_sem_swap&#39;vc.1.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.65" steps="664678"/></proof>
     </goal>
     <goal name="path_sem_swap&#39;vc.1.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.59" steps="664686"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="yy&#39;vc" expl="VC for yy" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="yy&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.97" steps="747679"/></proof>
  </goal>
  <goal name="yy&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.02" steps="747682"/></proof>
  </goal>
  <goal name="yy&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.13" steps="760498"/></proof>
  </goal>
  <goal name="yy&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.29" steps="760510"/></proof>
  </goal>
  <goal name="yy&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.08" steps="760537"/></proof>
  </goal>
  <goal name="yy&#39;vc.5" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures10">
   <goal name="yy&#39;vc.5.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="yy&#39;vc.5.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_xx&#39;def">
     <goal name="yy&#39;vc.5.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_yy&#39;def">
      <goal name="yy&#39;vc.5.0.0.0.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_zero_add">
       <goal name="yy&#39;vc.5.0.0.0.0.0" expl="precondition" proved="true">
       <transf name="case" proved="true" arg1="(x 0 = 0)">
        <goal name="yy&#39;vc.5.0.0.0.0.0.0" expl="true case (precondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="pps_xx&#39;def1">
         <goal name="yy&#39;vc.5.0.0.0.0.0.0.0" expl="true case (precondition)" proved="true">
         <proof prover="9"><result status="valid" time="3.30" steps="1058994"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="yy&#39;vc.5.0.0.0.0.0.1" expl="false case (precondition)" proved="true">
        <transf name="replace" proved="true" arg1="(x 0)" arg2="1">
         <goal name="yy&#39;vc.5.0.0.0.0.0.1.0" expl="false case (precondition)" proved="true">
         <proof prover="9"><result status="valid" time="3.29" steps="1060817"/></proof>
         </goal>
         <goal name="yy&#39;vc.5.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="9"><result status="valid" time="3.11" steps="1058258"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="yy&#39;vc.5.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.47" steps="934288"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="yy&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="yy&#39;vc.6.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pps_yy&#39;def1">
    <goal name="yy&#39;vc.6.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_rz_b&#39;spec1">
     <goal name="yy&#39;vc.6.0.0.0" expl="precondition" proved="true">
     <proof prover="9"><result status="valid" time="3.21" steps="1058071"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="yy&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.96" steps="747791"/></proof>
  </goal>
  <goal name="yy&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.10" steps="760634"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ry&#39;vc" expl="VC for ry" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ry&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.08" steps="760791"/></proof>
  </goal>
  <goal name="ry&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.31" steps="761687"/></proof>
  </goal>
  <goal name="ry&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.06" steps="797855"/></proof>
  </goal>
  <goal name="ry&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.99" steps="749728"/></proof>
  </goal>
  <goal name="ry&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.28" steps="762655"/></proof>
  </goal>
  <goal name="ry&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.07" steps="762667"/></proof>
  </goal>
  <goal name="ry&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.14" steps="749753"/></proof>
  </goal>
  <goal name="ry&#39;vc.7" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures20">
  </transf>
  </goal>
  <goal name="ry&#39;vc.8" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures21">
  </transf>
  </goal>
  <goal name="ry&#39;vc.9" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.96" steps="749829"/></proof>
  </goal>
  <goal name="ry&#39;vc.10" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.07" steps="798009"/></proof>
  </goal>
  <goal name="ry&#39;vc.11" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.31" steps="762808"/></proof>
  </goal>
  <goal name="ry&#39;vc.12" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.26" steps="762820"/></proof>
  </goal>
  <goal name="ry&#39;vc.13" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.08" steps="762847"/></proof>
  </goal>
  <goal name="ry&#39;vc.14" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="ry&#39;vc.14.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pps_ry&#39;spec">
    <goal name="ry&#39;vc.14.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures25">
     <goal name="ry&#39;vc.14.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_rz&#39;spec">
      <goal name="ry&#39;vc.14.0.0.0.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="pps_rz&#39;spec">
       <goal name="ry&#39;vc.14.0.0.0.0.0" expl="precondition" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures26">
        <goal name="ry&#39;vc.14.0.0.0.0.0.0" expl="precondition" proved="true">
        <transf name="rewrite" proved="true" arg1="pps_rx&#39;spec1">
         <goal name="ry&#39;vc.14.0.0.0.0.0.0.0" expl="precondition" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0" expl="precondition" proved="true">
          <transf name="rewrite" proved="true" arg1="pps_rx&#39;spec">
           <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0" expl="precondition" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0" expl="precondition" proved="true">
            <transf name="rewrite" proved="true" arg1="pps_rz&#39;spec1">
             <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0" expl="precondition" proved="true">
             <transf name="replace" proved="true" arg1="(1 + h_range (pps_rz (- 2)))" arg2="1">
              <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0" expl="precondition" proved="true">
              <transf name="replace" proved="true" arg1="( h_range (pps_rz (- 2)))" arg2="0">
               <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="precondition" proved="true">
               <transf name="assert" proved="true" arg1="(forall a b c d. a+.+ (b+.+c)+.+d = b+.+c+.+ (a+.+d) )">
                <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                <proof prover="9"><result status="valid" time="3.25" steps="1069749"/></proof>
                </goal>
                <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="precondition" proved="true">
                <transf name="rewrite" proved="true" arg1="h">
                 <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="precondition" proved="true">
                 <transf name="apply" proved="true" arg1="ang_add_eq">
                  <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="ang_add_eq">
                   <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.20" steps="887879"/></proof>
                   </goal>
                   <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.44" steps="887879"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                  <transf name="replace" proved="true" arg1="((x @ 0) /./ (- 2))" arg2="(-(x @ 0) /./ ( 2))">
                   <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.28" steps="1070683"/></proof>
                   </goal>
                   <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
                   <proof prover="9"><result status="valid" time="3.23" steps="1069294"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="9"><result status="valid" time="1.40" steps="887815"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="ry&#39;vc.14.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="1.42" steps="887829"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ry&#39;vc.15" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="ry&#39;vc.15.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pps_rz&#39;spec1">
    <goal name="ry&#39;vc.15.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures26">
     <goal name="ry&#39;vc.15.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures54">
      <goal name="ry&#39;vc.15.0.0.0.0" expl="precondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="ry&#39;vc.15.0.0.0.0.0" expl="precondition" proved="true">
       <proof prover="9"><result status="valid" time="2.44" steps="938354"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ry&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.94" steps="797770"/></proof>
  </goal>
  <goal name="ry&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.85" steps="941807"/></proof>
  </goal>
  <goal name="ry&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.98" steps="749980"/></proof>
  </goal>
  <goal name="ry&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.08" steps="762991"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Qbit_permutations" proved="true">
 <goal name="c_inverse_pre&#39;vc" expl="VC for c_inverse_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="c_inverse_pre&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="1.79" steps="687427"/></proof>
  </goal>
  <goal name="c_inverse_pre&#39;vc.1" expl="precondition" proved="true">
  <transf name="case" proved="true" arg1="(j = n-1)">
   <goal name="c_inverse_pre&#39;vc.1.0" expl="true case (precondition)" proved="true">
   <proof prover="9"><result status="valid" time="1.67" steps="688004"/></proof>
   </goal>
   <goal name="c_inverse_pre&#39;vc.1.1" expl="false case (precondition)" proved="true">
   <proof prover="9"><result status="valid" time="1.61" steps="687851"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="c_inverse_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.39" steps="813585"/></proof>
  </goal>
  <goal name="c_inverse_pre&#39;vc.3" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="c_inverse_pre&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.80" steps="687507"/></proof>
   </goal>
   <goal name="c_inverse_pre&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.98" steps="646258"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="c_inverse_pre&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.60" steps="687789"/></proof>
  </goal>
  <goal name="c_inverse_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.59" steps="687829"/></proof>
  </goal>
  <goal name="c_inverse_pre&#39;vc.6" expl="precondition" proved="true">
  <transf name="instantiate" proved="true" arg1="get_bijective" arg2="f,(to_fset 0 n),(to_fset 0 n)">
   <goal name="c_inverse_pre&#39;vc.6.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="c_inverse_pre&#39;vc.6.0.0" expl="precondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst1">
     <goal name="c_inverse_pre&#39;vc.6.0.0.0" expl="destruct premise" proved="true">
     <proof prover="9"><result status="valid" time="1.19" steps="770197"/></proof>
     </goal>
     <goal name="c_inverse_pre&#39;vc.6.0.0.1" expl="precondition" proved="true">
     <transf name="instantiate" proved="true" arg1="Hinst1" arg2="i">
      <goal name="c_inverse_pre&#39;vc.6.0.0.1.0" expl="precondition" proved="true">
      <proof prover="0"><result status="valid" time="1.07"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="c_inverse_pre&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.14" steps="646474"/></proof>
  </goal>
  <goal name="c_inverse_pre&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.14" steps="646478"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="c_inverse&#39;vc" expl="VC for c_inverse" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="c_inverse&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.08" steps="646174"/></proof>
  </goal>
  <goal name="c_inverse&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.08" steps="646186"/></proof>
  </goal>
  <goal name="c_inverse&#39;vc.2" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="c_inverse&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="c_inverse&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="c_inverse&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="2.65" steps="778404"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="c_inverse&#39;vc.3" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="c_inverse&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="c_inverse&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="c_inverse&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="2.63" steps="778193"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="c_inverse&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="c_inverse&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_bijective1">
    <goal name="c_inverse&#39;vc.4.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="c_inverse&#39;vc.4.0.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="3.50" steps="1015218"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="c_inverse&#39;vc.4.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="c_inverse&#39;vc.4.0.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="3.41" steps="1016190"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="c_inverse&#39;vc.4.0.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="c_inverse&#39;vc.4.0.2.0" expl="apply premises" proved="true">
     <transf name="exists" proved="true" arg1="(f e&#39;)">
      <goal name="c_inverse&#39;vc.4.0.2.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="c_inverse&#39;vc.4.0.2.0.0.0" proved="true">
       <proof prover="9"><result status="valid" time="2.59" steps="894890"/></proof>
       </goal>
       <goal name="c_inverse&#39;vc.4.0.2.0.0.1" proved="true">
       <transf name="replace" proved="true" arg1="(result @ (f @ e&#39;))" arg2="(inverse f  (to_fset 0 n) (to_fset 0 n) (f e&#39;))">
        <goal name="c_inverse&#39;vc.4.0.2.0.0.1.0" proved="true">
        <proof prover="9"><result status="valid" time="2.59" steps="894744"/></proof>
        </goal>
        <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="unic_inverse">
         <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.47" steps="847024"/></proof>
         </goal>
         <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0" expl="apply premises" proved="true">
          <transf name="case" proved="true" arg1="((result @ (f @ a)) &lt;&gt; a)">
           <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0" expl="true case (apply premises)" proved="true">
           <transf name="assert" proved="true" arg1="(f (result @ (f @ a)) &lt;&gt;f a)">
            <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.0" expl="asserted formula" proved="true">
            <transf name="apply" proved="true" arg1="get_injective" arg2="with" arg3="(to_fset 0 n)">
             <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="2.31" steps="897922"/></proof>
             </goal>
             <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="4.70" steps="1055285"/></proof>
             </goal>
             <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.45" steps="847065"/></proof>
             </goal>
             <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.0.3" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.32" steps="847063"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.1" expl="true case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="Ensures" arg2="in" arg3="h">
             <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.1.0" expl="true case (apply premises)" proved="true">
             <proof prover="9"><result status="valid" time="1.47" steps="847063"/></proof>
             </goal>
             <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.1.1" expl="rewrite premises" proved="true">
             <transf name="assert" proved="true" arg1="(mem (f a) (to_fset 0 n))">
              <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.1.1.0" expl="asserted formula" proved="true">
              <proof prover="9"><result status="valid" time="2.29" steps="895039"/></proof>
              </goal>
              <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.0.1.1.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="3.01" steps="1016056"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.1.0.1" expl="false case (apply premises)" proved="true">
           <proof prover="9"><result status="valid" time="1.48" steps="847061"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="c_inverse&#39;vc.4.0.2.0.0.1.1.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.31" steps="894890"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="c_inverse&#39;vc.5" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="((result @ (f @ b)) &lt;&gt; b)">
   <goal name="c_inverse&#39;vc.5.0" expl="true case (postcondition)" proved="true">
   <transf name="assert" proved="true" arg1="(f(result @ (f @ b)) &lt;&gt; f b)">
    <goal name="c_inverse&#39;vc.5.0.0" expl="asserted formula" proved="true">
    <transf name="apply" proved="true" arg1="get_injective" arg2="with" arg3="(to_fset 0 n)">
     <goal name="c_inverse&#39;vc.5.0.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.90" steps="691182"/></proof>
     </goal>
     <goal name="c_inverse&#39;vc.5.0.0.1" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="(mem (f b) (to_fset 0 n))">
      <goal name="c_inverse&#39;vc.5.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="assert" proved="true" arg1="(mem b (to_fset 0 n))">
       <goal name="c_inverse&#39;vc.5.0.0.1.0.0" expl="asserted formula" proved="true">
       <proof prover="9"><result status="valid" time="2.66" steps="882174"/></proof>
       </goal>
       <goal name="c_inverse&#39;vc.5.0.0.1.0.1" expl="asserted formula" proved="true">
       <proof prover="9"><result status="valid" time="1.87" steps="756706"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="c_inverse&#39;vc.5.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.89" steps="756704"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="c_inverse&#39;vc.5.0.0.2" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.90" steps="882174"/></proof>
     </goal>
     <goal name="c_inverse&#39;vc.5.0.0.3" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="0.94" steps="646554"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="c_inverse&#39;vc.5.0.1" expl="true case (postcondition)" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures1" arg2="in" arg3="h">
     <goal name="c_inverse&#39;vc.5.0.1.0" expl="true case (postcondition)" proved="true">
     <proof prover="9"><result status="valid" time="0.96" steps="646554"/></proof>
     </goal>
     <goal name="c_inverse&#39;vc.5.0.1.1" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(mem (f b) (to_fset 0 n))">
      <goal name="c_inverse&#39;vc.5.0.1.1.0" expl="asserted formula" proved="true">
      <transf name="assert" proved="true" arg1="(mem b (to_fset 0 n))">
       <goal name="c_inverse&#39;vc.5.0.1.1.0.0" expl="asserted formula" proved="true">
       <proof prover="9"><result status="valid" time="2.66" steps="882107"/></proof>
       </goal>
       <goal name="c_inverse&#39;vc.5.0.1.1.0.1" expl="asserted formula" proved="true">
       <proof prover="9"><result status="valid" time="2.06" steps="756780"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="c_inverse&#39;vc.5.0.1.1.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.43" steps="813588"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="c_inverse&#39;vc.5.1" expl="false case (postcondition)" proved="true">
   <proof prover="9"><result status="valid" time="0.98" steps="646552"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="c_inverse&#39;vc.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="inv_func_int&#39;def">
   <goal name="c_inverse&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="unic_inverse">
    <goal name="c_inverse&#39;vc.6.0.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="0.97" steps="646631"/></proof>
    </goal>
    <goal name="c_inverse&#39;vc.6.0.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="2.60" steps="882664"/></proof>
    </goal>
    <goal name="c_inverse&#39;vc.6.0.2" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="2.62" steps="881827"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="c_inverse&#39;vc.6.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="1.01" steps="646631"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unic_inverse_c&#39;vc" expl="VC for unic_inverse_c" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unic_inverse_c&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.08" steps="775129"/></proof>
  </goal>
  <goal name="unic_inverse_c&#39;vc.1" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="( (f&#39; @ b) = (c_inverse f n @ b))">
   <goal name="unic_inverse_c&#39;vc.1.0" expl="true case (postcondition)" proved="true">
   <proof prover="9"><result status="valid" time="1.26" steps="728840"/></proof>
   </goal>
   <goal name="unic_inverse_c&#39;vc.1.1" expl="false case (postcondition)" proved="true">
   <transf name="assert" proved="true" arg1="( f(f&#39; @ b) &lt;&gt; f (c_inverse f n @ b))">
    <goal name="unic_inverse_c&#39;vc.1.1.0" expl="asserted formula" proved="true">
    <proof prover="9"><result status="valid" time="2.88" steps="899943"/></proof>
    </goal>
    <goal name="unic_inverse_c&#39;vc.1.1.1" expl="false case (postcondition)" proved="true">
    <proof prover="9"><result status="valid" time="2.83" steps="899981"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="c_inv_func_int&#39;vc" expl="VC for c_inv_func_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="c_inv_func_int&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.96" steps="647449"/></proof>
  </goal>
  <goal name="c_inv_func_int&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.43" steps="813603"/></proof>
  </goal>
  <goal name="c_inv_func_int&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.04" steps="648022"/></proof>
  </goal>
  <goal name="c_inv_func_int&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.62" steps="813758"/></proof>
  </goal>
  <goal name="c_inv_func_int&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.64" steps="813934"/></proof>
  </goal>
  <goal name="c_inv_func_int&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.32" steps="814061"/></proof>
  </goal>
  <goal name="c_inv_func_int&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.39" steps="814154"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="unic_inverse_c_int&#39;vc" expl="VC for unic_inverse_c_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unic_inverse_c_int&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.85" steps="648684"/></proof>
  </goal>
  <goal name="unic_inverse_c_int&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.62" steps="813884"/></proof>
  </goal>
  <goal name="unic_inverse_c_int&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.68" steps="814928"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="qbit_permutes&#39;vc" expl="VC for qbit_permutes" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="qbit_permutes&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.37" steps="791216"/></proof>
  </goal>
  <goal name="qbit_permutes&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutes&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.31" steps="791675"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.32" steps="791727"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.1.2" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.70" steps="681676"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.1.3" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.89" steps="681676"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.1.4" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.91" steps="681676"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.1.5" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.86" steps="681676"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.1.6" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.54" steps="792108"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.1.7" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.55" steps="791783"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.1.8" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.54" steps="791927"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutes&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.69" steps="813878"/></proof>
  </goal>
  <goal name="qbit_permutes&#39;vc.3" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutes&#39;vc.3.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.67" steps="814353"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.3.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.67" steps="814400"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.3.2" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.98" steps="702798"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.3.3" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.94" steps="702798"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.3.4" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.72" steps="702798"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.3.5" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.95" steps="702798"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.3.6" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.72" steps="814807"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.3.7" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.65" steps="814450"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.3.8" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.76" steps="814576"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutes&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.66" steps="791225"/></proof>
  </goal>
  <goal name="qbit_permutes&#39;vc.5" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutes&#39;vc.5.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.78" steps="791679"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.5.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.63" steps="791731"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.5.2" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.91" steps="681661"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.5.3" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.95" steps="681661"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.5.4" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.00" steps="681661"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.5.5" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.96" steps="681661"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.5.6" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.57" steps="791783"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.5.7" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.41" steps="792111"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.5.8" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.57" steps="791926"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutes&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.66" steps="813877"/></proof>
  </goal>
  <goal name="qbit_permutes&#39;vc.7" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutes&#39;vc.7.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.81" steps="814310"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.7.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.71" steps="814357"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.7.2" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.96" steps="702783"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.7.3" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.92" steps="702783"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.7.4" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.97" steps="702783"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.7.5" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.00" steps="702783"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.7.6" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.73" steps="814425"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.7.7" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.52" steps="814783"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.7.8" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.51" steps="814550"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutes&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutes&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.8.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="1.00"/></proof>
    </goal>
    <goal name="qbit_permutes&#39;vc.8.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.91"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.8.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.8.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="1.00"/></proof>
    </goal>
    <goal name="qbit_permutes&#39;vc.8.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.89"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.8.2" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.70" steps="668890"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.8.3" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.70" steps="668890"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.8.4" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.00" steps="627236"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.8.5" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.02" steps="627236"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.8.6" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.00" steps="627231"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.8.7" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.97" steps="627231"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.8.8" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.00" steps="627240"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutes&#39;vc.9" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H1">
   <goal name="qbit_permutes&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="qbit_permutes&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="qbit_permutes&#39;vc.9.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(ancillas c)" arg2="(max (ancillas (to_qc x1)) (ancillas (to_qc x)))">
      <goal name="qbit_permutes&#39;vc.9.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="2.92" steps="939679"/></proof>
      </goal>
      <goal name="qbit_permutes&#39;vc.9.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="2.18" steps="819475"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.88"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.9.2" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.71" steps="668916"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.9.3" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.98" steps="668916"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.9.4" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.97" steps="627258"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.9.5" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.03" steps="627258"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.9.6" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.17" steps="627253"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.9.7" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.96" steps="627253"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.9.8" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.94" steps="627262"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutes&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutes&#39;vc.10.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.10.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="qbit_permutes&#39;vc.10.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(range c)" arg2="( (range (to_qc x1)) + (range (to_qc x)))">
      <goal name="qbit_permutes&#39;vc.10.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.24" steps="660973"/></proof>
      </goal>
      <goal name="qbit_permutes&#39;vc.10.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="( c)" arg2="(sequence ( (to_qc x1))  ( (to_qc x)))">
       <goal name="qbit_permutes&#39;vc.10.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="2.69" steps="816382"/></proof>
       </goal>
       <goal name="qbit_permutes&#39;vc.10.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="2.71" steps="816287"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutes&#39;vc.10.0.1" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="qbit_permutes&#39;vc.10.0.1.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(range c)" arg2="( (range (to_qc x1)) + (range (to_qc x)))">
      <goal name="qbit_permutes&#39;vc.10.0.1.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.12" steps="648077"/></proof>
      </goal>
      <goal name="qbit_permutes&#39;vc.10.0.1.0.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="( c)" arg2="(sequence ( (to_qc x1))  ( (to_qc x)))">
       <goal name="qbit_permutes&#39;vc.10.0.1.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="0.95" steps="648088"/></proof>
       </goal>
       <goal name="qbit_permutes&#39;vc.10.0.1.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="0.97" steps="648073"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.10.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.10.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="qbit_permutes&#39;vc.10.1.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(range c)" arg2="( (range (to_qc x1)) + (range (to_qc x)))">
      <goal name="qbit_permutes&#39;vc.10.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.02" steps="660973"/></proof>
      </goal>
      <goal name="qbit_permutes&#39;vc.10.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="( c)" arg2="(parallel ( (to_qc x1))  ( (to_qc x)))">
       <goal name="qbit_permutes&#39;vc.10.1.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="2.72" steps="815143"/></proof>
       </goal>
       <goal name="qbit_permutes&#39;vc.10.1.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="2.68" steps="814771"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutes&#39;vc.10.1.1" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="qbit_permutes&#39;vc.10.1.1.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(range c)" arg2="( (range (to_qc x1)) + (range (to_qc x)))">
      <goal name="qbit_permutes&#39;vc.10.1.1.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="0.97" steps="648077"/></proof>
      </goal>
      <goal name="qbit_permutes&#39;vc.10.1.1.0.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="( c)" arg2="(parallel ( (to_qc x1))  ( (to_qc x)))">
       <goal name="qbit_permutes&#39;vc.10.1.1.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="0.94" steps="648088"/></proof>
       </goal>
       <goal name="qbit_permutes&#39;vc.10.1.1.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="0.94" steps="648073"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.10.2" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.87" steps="681687"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.10.3" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.87" steps="681687"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.10.4" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.00" steps="627280"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.10.5" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.00" steps="627280"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.10.6" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.03" steps="627275"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.10.7" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.10.7.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.01" steps="627275"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.10.8" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.10.8.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.02" steps="627284"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutes&#39;vc.11" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutes&#39;vc.11.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.11.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="qbit_permutes&#39;vc.11.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="c" arg2="(sequence (to_qc x2)(to_qc x1))">
      <goal name="qbit_permutes&#39;vc.11.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="qbit_permutes&#39;vc.11.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="sequence_angle">
        <goal name="qbit_permutes&#39;vc.11.0.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.74" steps="917487"/></proof>
        </goal>
        <goal name="qbit_permutes&#39;vc.11.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="3.16" steps="941876"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="qbit_permutes&#39;vc.11.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="2.68" steps="816340"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutes&#39;vc.11.0.1" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="qbit_permutes&#39;vc.11.0.1.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="c" arg2="(sequence (to_qc x2)(to_qc x1))">
      <goal name="qbit_permutes&#39;vc.11.0.1.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="qbit_permutes&#39;vc.11.0.1.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="sequence_angle">
        <goal name="qbit_permutes&#39;vc.11.0.1.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="1.55" steps="865384"/></proof>
        </goal>
        <goal name="qbit_permutes&#39;vc.11.0.1.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.37" steps="771824"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="qbit_permutes&#39;vc.11.0.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="0.93" steps="648097"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.11.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.11.1.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="c" arg2="(parallel (to_qc x2) (to_qc x1))">
     <goal name="qbit_permutes&#39;vc.11.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="parallel_angle">
      <goal name="qbit_permutes&#39;vc.11.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.96" steps="703476"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="qbit_permutes&#39;vc.11.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="2.63" steps="814828"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutes&#39;vc.11.1.1" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="qbit_permutes&#39;vc.11.1.1.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="c" arg2="(parallel (to_qc x2) (to_qc x1))">
      <goal name="qbit_permutes&#39;vc.11.1.1.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="parallel_angle">
       <goal name="qbit_permutes&#39;vc.11.1.1.0.0.0" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="1.07" steps="648209"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="qbit_permutes&#39;vc.11.1.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="1.07" steps="648097"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.11.2" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.11.2.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.94" steps="702953"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.11.3" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.84" steps="702953"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.11.4" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.91" steps="647952"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.11.5" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="c" arg2="(id )">
    <goal name="qbit_permutes&#39;vc.11.5.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.07" steps="647952"/></proof>
    </goal>
    <goal name="qbit_permutes&#39;vc.11.5.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="1.06" steps="627300"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutes&#39;vc.11.6" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.17" steps="647947"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.11.7" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.08" steps="647947"/></proof>
   </goal>
   <goal name="qbit_permutes&#39;vc.11.8" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutes&#39;vc.11.8.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="qbit_permutes&#39;vc.11.8.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="1.15" steps="647960"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="qbit_permutation&#39;vc" expl="VC for qbit_permutation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="qbit_permutation&#39;vc.0" expl="assertion" proved="true">
  <transf name="replace" proved="true" arg1="c" arg2="(sequence (to_qc x1) (to_qc x))">
   <goal name="qbit_permutation&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="qbit_permutation&#39;vc.0.0.0" expl="assertion" proved="true">
    <transf name="assert" proved="true" arg1="(build_correct (pre c))">
     <goal name="qbit_permutation&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="9"><result status="valid" time="2.49" steps="792509"/></proof>
     </goal>
     <goal name="qbit_permutation&#39;vc.0.0.0.1" expl="assertion" proved="true">
     <transf name="rewrite" proved="true" arg1="sequence_width">
      <goal name="qbit_permutation&#39;vc.0.0.0.1.0" expl="assertion" proved="true">
      <proof prover="9"><result status="valid" time="1.13" steps="628061"/></proof>
      </goal>
      <goal name="qbit_permutation&#39;vc.0.0.0.1.1" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="( width (to_qc x1))" arg2="(width_pre x1)">
       <goal name="qbit_permutation&#39;vc.0.0.0.1.1.0" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="( width (to_qc x1))" arg2="(width_pre x)">
        <goal name="qbit_permutation&#39;vc.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="qbit_permutation&#39;vc.0.0.0.1.1.0.0.0" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="2.87" steps="916594"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="qbit_permutation&#39;vc.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="qbit_permutation&#39;vc.0.0.0.1.1.0.1.0" expl="equality hypothesis" proved="true">
         <transf name="rewrite" proved="true" arg1="width&#39;spec">
          <goal name="qbit_permutation&#39;vc.0.0.0.1.1.0.1.0.0" expl="equality hypothesis" proved="true">
          <proof prover="9"><result status="valid" time="2.97" steps="917502"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="qbit_permutation&#39;vc.0.0.0.1.1.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="2.48" steps="795028"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutation&#39;vc.0.0.1" expl="assertion" proved="true">
    <proof prover="9"><result status="valid" time="2.52" steps="795097"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutation&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="assert" proved="true" arg1="(pre c = pre (sequence (to_qc x1) (to_qc x)))
">
    <goal name="qbit_permutation&#39;vc.0.1.0" expl="asserted formula" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="qbit_permutation&#39;vc.0.1.0.0" expl="asserted formula" proved="true">
     <transf name="rewrite" proved="true" arg1="sequence&#39;spec1">
      <goal name="qbit_permutation&#39;vc.0.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="9"><result status="valid" time="2.99" steps="918531"/></proof>
      </goal>
      <goal name="qbit_permutation&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="width&#39;spec">
       <goal name="qbit_permutation&#39;vc.0.1.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.93" steps="917504"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutation&#39;vc.0.1.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="1.77" steps="669823"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutation&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.91" steps="690948"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.49" steps="794178"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.3" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutation&#39;vc.3.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.81" steps="669863"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.3.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.77" steps="669863"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.3.2" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.78" steps="669854"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.3.3" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.83" steps="669854"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.3.4" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.88" steps="683173"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.3.5" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.87" steps="683173"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.3.6" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.54" steps="795111"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.3.7" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.38" steps="794773"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.3.8" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.81" steps="669880"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutation&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.81" steps="669869"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.67" steps="818484"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.6" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutation&#39;vc.6.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.96" steps="692124"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.6.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.85" steps="692124"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.6.2" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.85" steps="692119"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.6.3" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.88" steps="692119"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.6.4" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.89" steps="705519"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.6.5" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.98" steps="705519"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.6.6" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.74" steps="819402"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.6.7" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.72" steps="819064"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.6.8" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.92" steps="692143"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutation&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.95" steps="692129"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.8" expl="assertion" proved="true">
  <transf name="replace" proved="true" arg1="c" arg2="(parallel (to_qc x1) (to_qc x))">
   <goal name="qbit_permutation&#39;vc.8.0" expl="assertion" proved="true">
   <proof prover="9"><result status="valid" time="2.74" steps="793246"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.8.1" expl="equality hypothesis" proved="true">
   <transf name="assert" proved="true" arg1="(pre c = pre (parallel (to_qc x1) (to_qc x)))">
    <goal name="qbit_permutation&#39;vc.8.1.0" expl="asserted formula" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="qbit_permutation&#39;vc.8.1.0.0" expl="asserted formula" proved="true">
     <transf name="rewrite" proved="true" arg1="parallel&#39;spec1">
      <goal name="qbit_permutation&#39;vc.8.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="9"><result status="valid" time="3.06" steps="918494"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutation&#39;vc.8.1.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="1.81" steps="669823"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutation&#39;vc.9" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.64" steps="793015"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.10" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.94" steps="669871"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.11" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.99" steps="669883"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.62" steps="814741"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.13" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.75" steps="793806"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.14" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutation&#39;vc.14.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.76" steps="669838"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.14.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.99" steps="669838"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.14.2" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.00" steps="669829"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.14.3" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.00" steps="669829"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.14.4" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.00" steps="682843"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.14.5" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.06" steps="682843"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.14.6" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.73" steps="794412"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.14.7" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.65" steps="794758"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.14.8" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.89" steps="669855"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutation&#39;vc.15" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.84" steps="669835"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.16" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.65" steps="818130"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.17" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutation&#39;vc.17.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.92" steps="692114"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.17.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.88" steps="692114"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.17.2" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.90" steps="692109"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.17.3" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.92" steps="692109"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.17.4" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.00" steps="705208"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.17.5" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.94" steps="705208"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.17.6" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.69" steps="818863"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.17.7" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="2.67" steps="819229"/></proof>
   </goal>
   <goal name="qbit_permutation&#39;vc.17.8" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.90" steps="692133"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutation&#39;vc.18" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.88" steps="692109"/></proof>
  </goal>
  <goal name="qbit_permutation&#39;vc.19" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutation&#39;vc.19.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="qbit_permutation&#39;vc.19.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="qbit_permutation&#39;vc.19.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="c" arg2="(sequence (to_qc x2) (to_qc x1))">
      <goal name="qbit_permutation&#39;vc.19.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="sequence_basis_ket">
       <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures4">
         <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="Ensures1">
           <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <proof prover="9"><result status="valid" time="2.02" steps="705968"/></proof>
           </goal>
           <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="assert" proved="true" arg1="(mem (qbit_permutation&#39;result&#39;unused&#39;unused3 @ i) (to_fset 0 (width (to_qc x2))))">
            <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
            <transf name="assert" proved="true" arg1="(mem i (to_fset 0 (width (to_qc x1)))
)">
             <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
             <transf name="apply" proved="true" arg1="set_mem_to_fset">
              <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="1.86" steps="692241"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.0.0.1.0.1" expl="asserted formula" proved="true">
             <proof prover="9"><result status="valid" time="2.14" steps="759761"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.77" steps="823222"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="qbit_permutation&#39;vc.19.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.85" steps="692241"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="qbit_permutation&#39;vc.19.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.12" steps="650230"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="qbit_permutation&#39;vc.19.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="2.83" steps="820362"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutation&#39;vc.19.1" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="c" arg2="(parallel (to_qc x2) (to_qc x1))">
    <goal name="qbit_permutation&#39;vc.19.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
     <goal name="qbit_permutation&#39;vc.19.1.0.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="qbit_permutation&#39;vc.19.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H3">
       <goal name="qbit_permutation&#39;vc.19.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="qbit_permutation&#39;vc.19.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="eliminate_if" proved="true" >
         <goal name="qbit_permutation&#39;vc.19.1.0.0.0.0.0.0" expl="VC for qbit_permutation" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="qbit_permutation&#39;vc.19.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <proof prover="9"><result status="valid" time="2.83" steps="831408"/></proof>
          </goal>
          <goal name="qbit_permutation&#39;vc.19.1.0.0.0.0.0.0.1" expl="postcondition" proved="true">
          <proof prover="9"><result status="valid" time="1.15" steps="661478"/></proof>
          </goal>
          <goal name="qbit_permutation&#39;vc.19.1.0.0.0.0.0.0.2" expl="postcondition" proved="true">
          <proof prover="9"><result status="valid" time="1.18" steps="661563"/></proof>
          </goal>
          <goal name="qbit_permutation&#39;vc.19.1.0.0.0.0.0.0.3" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="Ensures4">
           <goal name="qbit_permutation&#39;vc.19.1.0.0.0.0.0.0.3.0" expl="postcondition" proved="true">
           <proof prover="9"><result status="valid" time="2.81" steps="831274"/></proof>
           </goal>
           <goal name="qbit_permutation&#39;vc.19.1.0.0.0.0.0.0.3.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.84" steps="704000"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutation&#39;vc.19.1.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="2.63" steps="820339"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutation&#39;vc.19.2" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="c" arg2="swap">
    <goal name="qbit_permutation&#39;vc.19.2.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H3">
     <goal name="qbit_permutation&#39;vc.19.2.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="qbit_permutation&#39;vc.19.2.0.0.0" expl="postcondition" proved="true">
      <transf name="eliminate_if" proved="true" >
       <goal name="qbit_permutation&#39;vc.19.2.0.0.0.0" expl="VC for qbit_permutation" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="qbit_permutation&#39;vc.19.2.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="1.69" steps="703074"/></proof>
        </goal>
        <goal name="qbit_permutation&#39;vc.19.2.0.0.0.0.1" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="1.89" steps="703082"/></proof>
        </goal>
        <goal name="qbit_permutation&#39;vc.19.2.0.0.0.0.2" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.02" steps="716466"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutation&#39;vc.19.2.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="1.92" steps="690992"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutation&#39;vc.19.3" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="qbit_permutation&#39;vc.19.3.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="qbit_permutation&#39;vc.19.3.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="2.04" steps="704910"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permutation&#39;vc.20" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="qbit_permutation&#39;vc.20.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H1">
    <goal name="qbit_permutation&#39;vc.20.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="bijectivity_is_transitive" arg2="with" arg3="(to_fset 0 (width c))">
     <goal name="qbit_permutation&#39;vc.20.0.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.61" steps="692320"/></proof>
     </goal>
     <goal name="qbit_permutation&#39;vc.20.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.21" steps="692320"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutation&#39;vc.20.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="qbit_permutation&#39;vc.20.1.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="qbit_permutation&#39;vc.20.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H1">
      <goal name="qbit_permutation&#39;vc.20.1.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="set_bijective1">
       <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="assert" proved="true" arg1="(mem (qbit_permutation&#39;result&#39;unused&#39;unused @ e) (to_fset 0 (width (to_qc x1))))">
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
            <transf name="apply" proved="true" arg1="auto_bijective_in">
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.55" steps="862040"/></proof>
             </goal>
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="2.51" steps="1032600"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="3.46" steps="1034551"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="assert" proved="true" arg1="(mem (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e - width (to_qc x1))) (to_fset 0 (width (to_qc x))))
">
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
            <transf name="apply" proved="true" arg1="auto_bijective_in">
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.56" steps="862053"/></proof>
             </goal>
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="3.44" steps="1033875"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="3.52" steps="1035793"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="case" proved="true" arg1="(e &lt; width (to_qc x1))">
          <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0" expl="true case (apply premises)" proved="true">
          <transf name="replace" proved="true" arg1="(if e &lt; width (to_qc x1) then qbit_permutation&#39;result&#39;unused&#39;unused @ e
       else (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e - width (to_qc x1))) + width (to_qc x1))" arg2="(qbit_permutation&#39;result&#39;unused&#39;unused e)
">
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="case" proved="true" arg1="(e&#39; &lt; width (to_qc x1))">
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
            <transf name="replace" proved="true" arg1="(if e&#39; &lt; width (to_qc x1)
       then qbit_permutation&#39;result&#39;unused&#39;unused @ e&#39;
       else (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e&#39; - width (to_qc x1)))
            + width (to_qc x1))" arg2="(qbit_permutation&#39;result&#39;unused&#39;unused @ e&#39;)">
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
             <transf name="apply" proved="true" arg1="get_injective" arg2="with" arg3="(to_fset 0 (width (to_qc x1)))">
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="2.70" steps="906666"/></proof>
              </goal>
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="3.43" steps="1028396"/></proof>
              </goal>
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="3.46" steps="1028396"/></proof>
              </goal>
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.0.0.3" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="1.48" steps="852315"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="2.43" steps="903477"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1" expl="false case (true case. apply premises)" proved="true">
            <transf name="replace" proved="true" arg1="(if e&#39; &lt; width (to_qc x1)
       then qbit_permutation&#39;result&#39;unused&#39;unused @ e&#39;
       else (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e&#39; - width (to_qc x1)))
            + width (to_qc x1))" arg2="((qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e&#39; - width (to_qc x1)))
            + width (to_qc x1))">
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.0" expl="false case (true case. apply premises)" proved="true">
             <transf name="assert" proved="true" arg1="(mem (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e&#39; - width (to_qc x1))) (to_fset 0 (width (to_qc x))))
">
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
              <transf name="apply" proved="true" arg1="auto_bijective_in">
               <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.46" steps="852330"/></proof>
               </goal>
               <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="3.49" steps="1029626"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.0.1" expl="false case (true case. apply premises)" proved="true">
              <transf name="assert" proved="true" arg1="(mem  (qbit_permutation&#39;result&#39;unused&#39;unused @ e) (to_fset 0 (width (to_qc x1))))
">
               <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
               <transf name="apply" proved="true" arg1="auto_bijective_in">
                <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.52" steps="852351"/></proof>
                </goal>
                <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="3.36" steps="1029051"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.0.1.1" expl="false case (true case. apply premises)" proved="true">
               <proof prover="9"><result status="valid" time="3.45" steps="1030860"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="2.45" steps="903476"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="2.45" steps="903460"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1" expl="false case (apply premises)" proved="true">
          <transf name="replace" proved="true" arg1="(if e &lt; width (to_qc x1) then qbit_permutation&#39;result&#39;unused&#39;unused @ e
       else (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e - width (to_qc x1)))
            + width (to_qc x1))" arg2="(qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e - width (to_qc x1))            + width (to_qc x1))">
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0" expl="false case (apply premises)" proved="true">
           <transf name="case" proved="true" arg1="(e&#39; &lt; width (to_qc x1))">
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0" expl="false case (true case. apply premises)" proved="true">
            <transf name="replace" proved="true" arg1="(if e&#39; &lt; width (to_qc x1)
       then qbit_permutation&#39;result&#39;unused&#39;unused @ e&#39;
       else (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e&#39; - width (to_qc x1)))
            + width (to_qc x1))" arg2="( qbit_permutation&#39;result&#39;unused&#39;unused @ e&#39;
       )">
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.0" expl="false case (true case. apply premises)" proved="true">
             <transf name="assert" proved="true" arg1="(mem (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e - width (to_qc x1))) (to_fset 0 (width (to_qc x))))
">
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
              <transf name="apply" proved="true" arg1="auto_bijective_in">
               <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.47" steps="852330"/></proof>
               </goal>
               <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="3.49" steps="1029684"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.0.1" expl="false case (true case. apply premises)" proved="true">
              <transf name="assert" proved="true" arg1="(mem (qbit_permutation&#39;result&#39;unused&#39;unused @ e&#39;) (to_fset 0 (width (to_qc x1))))
">
               <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.0.1.0" expl="asserted formula" proved="true">
               <transf name="apply" proved="true" arg1="auto_bijective_in">
                <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.54" steps="852351"/></proof>
                </goal>
                <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="3.32" steps="1029109"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.0.1.1" expl="false case (true case. apply premises)" proved="true">
               <proof prover="9"><result status="valid" time="3.47" steps="1030918"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="2.45" steps="903472"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1" expl="false case (apply premises)" proved="true">
            <transf name="replace" proved="true" arg1="(if e&#39; &lt; width (to_qc x1)
       then qbit_permutation&#39;result&#39;unused&#39;unused @ e&#39;
       else (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e&#39; - width (to_qc x1)))
            + width (to_qc x1))" arg2="(     (qbit_permutation&#39;result&#39;unused&#39;unused1 @ (e&#39; - width (to_qc x1)))
            + width (to_qc x1))">
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1.0" expl="false case (apply premises)" proved="true">
             <transf name="assert" proved="true" arg1="(forall a b c . a&lt;&gt; b -&gt; a+ c &lt;&gt; b+c)">
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1.0.0" expl="asserted formula" proved="true">
              <proof prover="9"><result status="valid" time="1.51" steps="852408"/></proof>
              </goal>
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1.0.1" expl="false case (apply premises)" proved="true">
              <transf name="apply" proved="true" arg1="h">
               <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1.0.1.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="get_injective" arg2="with" arg3="(to_fset 0 (width (to_qc x)))">
                <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.66" steps="906680"/></proof>
                </goal>
                <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="3.41" steps="1029655"/></proof>
                </goal>
                <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="3.39" steps="1029655"/></proof>
                </goal>
                <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1.0.1.0.3" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.45" steps="852425"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="2.48" steps="903471"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="2.46" steps="903459"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0" expl="apply premises" proved="true">
        <transf name="case" proved="true" arg1="(mem e&#39; (to_fset 0 (width (to_qc x1))))">
         <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.0" expl="true case (apply premises)" proved="true">
         <transf name="assert" proved="true" arg1="(exists e1:int.
   mem e1 (to_fset 0 (width (to_qc x1))) /\
   ((fun (i:int) -&gt;
       qbit_permutation&#39;result&#39;unused&#39;unused @ i
    )) e1  = e&#39;)">
          <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.0.0" expl="asserted formula" proved="true">
          <proof prover="9"><result status="valid" time="3.38" steps="1028260"/></proof>
          </goal>
          <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.0.1" expl="true case (apply premises)" proved="true">
          <transf name="destruct" proved="true" arg1="h">
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.0.1.0" expl="true case (apply premises)" proved="true">
           <transf name="exists" proved="true" arg1="e1">
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.0.1.0.0" proved="true">
            <proof prover="9"><result status="valid" time="3.49" steps="1032018"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1" expl="false case (apply premises)" proved="true">
         <transf name="assert" proved="true" arg1="(exists e1:int.
   mem e1 (to_fset 0 (width (to_qc x))) /\
   ((fun (i:int) -&gt;
       (qbit_permutation&#39;result&#39;unused&#39;unused1 @ i)    )) e1  = e&#39; - width (to_qc x1))
">
          <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1.0" expl="asserted formula" proved="true">
          <transf name="apply" proved="true" arg1="get_surjective" arg2="with" arg3="(to_fset 0 (width (to_qc x)))">
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="2.59" steps="904311"/></proof>
           </goal>
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1.0.1" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="3.44" steps="1029366"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1.1" expl="false case (apply premises)" proved="true">
          <transf name="destruct" proved="true" arg1="h">
           <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1.1.0" expl="false case (apply premises)" proved="true">
           <transf name="exists" proved="true" arg1="(e1 + width (to_qc x1))">
            <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1.1.0.0" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1.1.0.0.0" proved="true">
             <proof prover="9"><result status="valid" time="3.44" steps="1031444"/></proof>
             </goal>
             <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1.1.0.0.1" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="qbit_permutation&#39;vc.20.1.0.0.0.2.0.1.1.0.0.1.0" proved="true">
              <proof prover="9"><result status="valid" time="3.47" steps="1029211"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutation&#39;vc.20.2" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="injective_is_bijective">
    <goal name="qbit_permutation&#39;vc.20.2.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="set_injective">
     <goal name="qbit_permutation&#39;vc.20.2.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="qbit_permutation&#39;vc.20.2.0.0.0" expl="apply premises" proved="true">
      <transf name="eliminate_let" proved="true" >
       <goal name="qbit_permutation&#39;vc.20.2.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="3.04" steps="897204"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutation&#39;vc.20.2.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="qbit_permutation&#39;vc.20.2.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="3.16" steps="896963"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutation&#39;vc.20.2.2" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.10" steps="648915"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="qbit_permutation&#39;vc.20.3" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="injective_is_bijective">
    <goal name="qbit_permutation&#39;vc.20.3.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="set_injective">
     <goal name="qbit_permutation&#39;vc.20.3.0.0" expl="apply premises" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="qbit_permutation&#39;vc.20.3.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="qbit_permutation&#39;vc.20.3.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.23" steps="772205"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutation&#39;vc.20.3.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="qbit_permutation&#39;vc.20.3.1.0" expl="apply premises" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="qbit_permutation&#39;vc.20.3.1.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="2.27" steps="771903"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="qbit_permutation&#39;vc.20.3.2" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.10" steps="649023"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="in_to_fset_qp&#39;vc" expl="VC for in_to_fset_qp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="in_to_fset_qp&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(mem i (to_fset 0 (width c)))">
   <goal name="in_to_fset_qp&#39;vc.0.0" expl="asserted formula" proved="true">
   <proof prover="9"><result status="valid" time="2.97" steps="874673"/></proof>
   </goal>
   <goal name="in_to_fset_qp&#39;vc.0.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(p_bijective (qbit_permutation c ) (to_fset 0 (width c)) (to_fset 0 (width c)))">
    <goal name="in_to_fset_qp&#39;vc.0.1.0" expl="asserted formula" proved="true">
    <transf name="instantiate" proved="true" arg1="get_bijective" arg2="(qbit_permutation c ),(to_fset 0 (width c)),(to_fset 0 (width c))">
     <goal name="in_to_fset_qp&#39;vc.0.1.0.0" expl="asserted formula" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="in_to_fset_qp&#39;vc.0.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="9"><result status="valid" time="2.35" steps="823316"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="in_to_fset_qp&#39;vc.0.1.1" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="2.20" steps="759601"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bound_qp&#39;vc" expl="VC for bound_qp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="bound_qp&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(mem (qbit_permutation c @ i) (to_fset 0 (width c)))">
   <goal name="bound_qp&#39;vc.0.0" expl="asserted formula" proved="true">
   <proof prover="9"><result status="valid" time="3.07" steps="884256"/></proof>
   </goal>
   <goal name="bound_qp&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.79" steps="815840"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="qbit_permute_sequence&#39;vc" expl="VC for qbit_permute_sequence" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="qbit_permute_sequence&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.16" steps="629995"/></proof>
  </goal>
  <goal name="qbit_permute_sequence&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="qbit_permute_sequence&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="qbit_permutes&#39;def10" arg2="result,(pre d),(pre e)">
    <goal name="qbit_permute_sequence&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="Hinst">
     <goal name="qbit_permute_sequence&#39;vc.1.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="qbit_permute_sequence&#39;vc.1.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.34" steps="752846"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="qbit_permute_sequence&#39;vc.1.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.29" steps="801121"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permute_sequence&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="qbit_permute_sequence&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="qbit_permutation&#39;def8" arg2="result">
    <goal name="qbit_permute_sequence&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="qbit_permute_sequence&#39;vc.2.0.0.0" expl="destruct premise" proved="true">
     <proof prover="9"><result status="valid" time="1.35" steps="752810"/></proof>
     </goal>
     <goal name="qbit_permute_sequence&#39;vc.2.0.0.1" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="Hinst" arg2="(pre d),(pre e)">
      <goal name="qbit_permute_sequence&#39;vc.2.0.0.1.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="3.27" steps="945489"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permute_sequence&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.02" steps="692717"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="qbit_permute_parallel&#39;vc" expl="VC for qbit_permute_parallel" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="qbit_permute_parallel&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="qbit_permute_parallel&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="qbit_permutes&#39;def7" arg2="result,(pre d),(pre e)">
    <goal name="qbit_permute_parallel&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="Hinst">
     <goal name="qbit_permute_parallel&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.36" steps="753359"/></proof>
     </goal>
     <goal name="qbit_permute_parallel&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.38" steps="801593"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permute_parallel&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="qbit_permute_parallel&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="qbit_permutation&#39;def7" arg2="result">
    <goal name="qbit_permute_parallel&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="qbit_permute_parallel&#39;vc.1.0.0.0" expl="destruct premise" proved="true">
     <proof prover="9"><result status="valid" time="1.36" steps="753323"/></proof>
     </goal>
     <goal name="qbit_permute_parallel&#39;vc.1.0.0.1" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="Hinst" arg2="(pre d),(pre e)">
      <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Hinst">
       <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0.0" expl="postcondition" proved="true">
        <transf name="eliminate_if" proved="true" >
         <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0.0.0" expl="VC for qbit_permute_parallel" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="to_qc_pre">
           <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0.0.0.0.0" expl="postcondition" proved="true">
           <proof prover="9"><result status="valid" time="1.31" steps="763805"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0.0.0.1" expl="postcondition" proved="true">
          <proof prover="9"><result status="valid" time="2.47" steps="834496"/></proof>
          </goal>
          <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0.0.0.2" expl="postcondition" proved="true">
          <proof prover="9"><result status="valid" time="2.43" steps="834526"/></proof>
          </goal>
          <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0.0.0.3" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="to_qc_pre">
           <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0.0.0.3.0" expl="postcondition" proved="true">
           <transf name="rewrite" proved="true" arg1="to_qc_pre">
            <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.0.0.0.3.0.0" expl="postcondition" proved="true">
            <proof prover="9"><result status="valid" time="1.36" steps="763835"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="qbit_permute_parallel&#39;vc.1.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.32" steps="753831"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="qbit_permute_parallel&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.78" steps="818700"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ids_permute&#39;vc" expl="VC for ids_permute" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ids_permute&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="1.80" steps="671780"/></proof>
  </goal>
  <goal name="ids_permute&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.80" steps="672117"/></proof>
  </goal>
  <goal name="ids_permute&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.12" steps="651141"/></proof>
  </goal>
  <goal name="ids_permute&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.93" steps="693516"/></proof>
  </goal>
  <goal name="ids_permute&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids_permute&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.59" steps="794075"/></proof>
   </goal>
   <goal name="ids_permute&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.76" steps="817498"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ids_permute&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids_permute&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="ids_permute&#39;vc.5.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.77" steps="672043"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ids_permute&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.06" steps="706773"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ids_permute&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.03" steps="693917"/></proof>
  </goal>
  <goal name="ids_permute&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ids_permute&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="ids_permute&#39;vc.7.0.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="7.52" steps="9799398"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ids_permute&#39;vc.7.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="ids_permute&#39;vc.7.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures4">
     <goal name="ids_permute&#39;vc.7.1.0.0" expl="postcondition" proved="true">
     <transf name="eliminate_if" proved="true" >
      <goal name="ids_permute&#39;vc.7.1.0.0.0" expl="VC for ids_permute" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="ids_permute&#39;vc.7.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="2.03" steps="705442"/></proof>
       </goal>
       <goal name="ids_permute&#39;vc.7.1.0.0.0.1" expl="postcondition" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="ids_permute&#39;vc.7.1.0.0.0.1.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="qbit_permutation&#39;def1">
         <goal name="ids_permute&#39;vc.7.1.0.0.0.1.0.0" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="3.34" steps="974813"/></proof>
         </goal>
         <goal name="ids_permute&#39;vc.7.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="2.50" steps="851459"/></proof>
         </goal>
         <goal name="ids_permute&#39;vc.7.1.0.0.0.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.42" steps="805099"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permute_place&#39;vc" expl="VC for permute_place" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permute_place&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.52" steps="672556"/></proof>
  </goal>
  <goal name="permute_place&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.13" steps="651556"/></proof>
  </goal>
  <goal name="permute_place&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.16" steps="651559"/></proof>
  </goal>
  <goal name="permute_place&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_place&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.22" steps="644254"/></proof>
   </goal>
   <goal name="permute_place&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.93" steps="693939"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_place&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_place&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.80" steps="672224"/></proof>
   </goal>
   <goal name="permute_place&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.13" steps="651728"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_place&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_place&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permute_place&#39;vc.5.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.57" steps="693342"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="permute_place&#39;vc.5.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permute_place&#39;vc.5.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures3">
     <goal name="permute_place&#39;vc.5.1.0.0" expl="postcondition" proved="true">
     <transf name="eliminate_if" proved="true" >
      <goal name="permute_place&#39;vc.5.1.0.0.0" expl="VC for permute_place" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="permute_place&#39;vc.5.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="1.11" steps="663187"/></proof>
       </goal>
       <goal name="permute_place&#39;vc.5.1.0.0.0.1" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="1.13" steps="663216"/></proof>
       </goal>
       <goal name="permute_place&#39;vc.5.1.0.0.0.2" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="1.12" steps="663233"/></proof>
       </goal>
       <goal name="permute_place&#39;vc.5.1.0.0.0.3" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="2.81" steps="830065"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permute_place&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.92" steps="693767"/></proof>
  </goal>
  <goal name="permute_place&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.13" steps="651690"/></proof>
  </goal>
  <goal name="permute_place&#39;vc.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.14" steps="651693"/></proof>
  </goal>
  <goal name="permute_place&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_place&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.28" steps="664589"/></proof>
   </goal>
   <goal name="permute_place&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.95" steps="694200"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_place&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.80" steps="694028"/></proof>
  </goal>
  <goal name="permute_place&#39;vc.11" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_place&#39;vc.11.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permute_place&#39;vc.11.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="2.69" steps="819981"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="permute_place&#39;vc.11.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permute_place&#39;vc.11.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures3">
     <goal name="permute_place&#39;vc.11.1.0.0" expl="postcondition" proved="true">
     <transf name="eliminate_if" proved="true" >
      <goal name="permute_place&#39;vc.11.1.0.0.0" expl="VC for permute_place" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="permute_place&#39;vc.11.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="1.90" steps="705831"/></proof>
       </goal>
       <goal name="permute_place&#39;vc.11.1.0.0.0.1" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="2.01" steps="706143"/></proof>
       </goal>
       <goal name="permute_place&#39;vc.11.1.0.0.0.2" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.99"/></proof>
       </goal>
       <goal name="permute_place&#39;vc.11.1.0.0.0.3" expl="postcondition" proved="true">
       <proof prover="9"><result status="valid" time="2.92" steps="843934"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permute_plus_one&#39;vc" expl="VC for permute_plus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permute_plus_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.09" steps="631759"/></proof>
  </goal>
  <goal name="permute_plus_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.79" steps="672665"/></proof>
  </goal>
  <goal name="permute_plus_one&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.92" steps="673334"/></proof>
  </goal>
  <goal name="permute_plus_one&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.12" steps="652144"/></proof>
  </goal>
  <goal name="permute_plus_one&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.15" steps="652147"/></proof>
  </goal>
  <goal name="permute_plus_one&#39;vc.5" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures2">
   <goal name="permute_plus_one&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="permute_plus_one&#39;vc.5.0.0" expl="VC for permute_plus_one" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="permute_plus_one&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <proof prover="6"><result status="valid" time="2.87" steps="122277"/></proof>
     </goal>
     <goal name="permute_plus_one&#39;vc.5.0.0.1" expl="postcondition" proved="true">
     <proof prover="6"><result status="valid" time="2.84" steps="121943"/></proof>
     </goal>
     <goal name="permute_plus_one&#39;vc.5.0.0.2" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="1.83" steps="705600"/></proof>
     </goal>
     <goal name="permute_plus_one&#39;vc.5.0.0.3" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="1.83" steps="705367"/></proof>
     </goal>
     <goal name="permute_plus_one&#39;vc.5.0.0.4" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="1.88" steps="705396"/></proof>
     </goal>
     <goal name="permute_plus_one&#39;vc.5.0.0.5" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="1.16" steps="663683"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permute_plus_one&#39;vc.5.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="1.11" steps="652199"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="up_to_image&#39;vc" expl="VC for up_to_image" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="up_to_image&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.83" steps="673617"/></proof>
  </goal>
  <goal name="up_to_image&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.12" steps="632366"/></proof>
  </goal>
  <goal name="up_to_image&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.77" steps="673643"/></proof>
  </goal>
  <goal name="up_to_image&#39;vc.3" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="up_to_image&#39;vc.3.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="0.92" steps="652694"/></proof>
   </goal>
   <goal name="up_to_image&#39;vc.3.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.10" steps="652707"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="up_to_image&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="up_to_image&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.84" steps="694382"/></proof>
   </goal>
   <goal name="up_to_image&#39;vc.4.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.82" steps="694738"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="up_to_image&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="up_to_image&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.07" steps="652720"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="up_to_image&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.76" steps="695158"/></proof>
  </goal>
  <goal name="up_to_image&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.05" steps="652921"/></proof>
  </goal>
  <goal name="up_to_image&#39;vc.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.07" steps="652924"/></proof>
  </goal>
  <goal name="up_to_image&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="up_to_image&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.10" steps="652547"/></proof>
   </goal>
   <goal name="up_to_image&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.84" steps="695298"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="up_to_image&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="up_to_image&#39;vc.10.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.13" steps="652550"/></proof>
   </goal>
   <goal name="up_to_image&#39;vc.10.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.12" steps="653010"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="up_to_image&#39;vc.11" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="up_to_image&#39;vc.11.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="up_to_image&#39;vc.11.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.94" steps="695357"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="up_to_image&#39;vc.11.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="up_to_image&#39;vc.11.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures3">
     <goal name="up_to_image&#39;vc.11.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures8">
      <goal name="up_to_image&#39;vc.11.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures5">
       <goal name="up_to_image&#39;vc.11.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="eliminate_if" proved="true" >
        <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0" expl="VC for up_to_image" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.15" steps="664711"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.1" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.14" steps="664751"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.2" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.15" steps="664751"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.3" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.15" steps="664867"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.4" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.13" steps="664890"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.5" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.13" steps="664891"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.6" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.16" steps="664870"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.7" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.17" steps="664893"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.8" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.17" steps="664894"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.9" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.17" steps="664870"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.10" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.16" steps="664870"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.11" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.92" steps="706190"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.12" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.22" steps="664863"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.13" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.14" steps="664886"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.14" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.13" steps="664887"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.15" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.15" steps="664854"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.16" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.18" steps="664889"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.17" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.88" steps="706776"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.18" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.13" steps="664866"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.19" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.91" steps="706553"/></proof>
         </goal>
         <goal name="up_to_image&#39;vc.11.1.0.0.0.0.0.20" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.21" steps="664881"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="up_to_image&#39;vc.11.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.95" steps="696357"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="up_to_image&#39;vc.11.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.10" steps="653066"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="down_to_image&#39;vc" expl="VC for down_to_image" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="down_to_image&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.84" steps="674365"/></proof>
  </goal>
  <goal name="down_to_image&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.79" steps="674408"/></proof>
  </goal>
  <goal name="down_to_image&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.09" steps="633160"/></proof>
  </goal>
  <goal name="down_to_image&#39;vc.3" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="down_to_image&#39;vc.3.0" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.09" steps="653432"/></proof>
   </goal>
   <goal name="down_to_image&#39;vc.3.1" expl="variant decrease" proved="true">
   <proof prover="9"><result status="valid" time="1.13" steps="653441"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="down_to_image&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="down_to_image&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.12" steps="653414"/></proof>
   </goal>
   <goal name="down_to_image&#39;vc.4.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.91" steps="695912"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="down_to_image&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="down_to_image&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.93" steps="695585"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="down_to_image&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.84" steps="696241"/></proof>
  </goal>
  <goal name="down_to_image&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.10" steps="653658"/></proof>
  </goal>
  <goal name="down_to_image&#39;vc.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.10" steps="653661"/></proof>
  </goal>
  <goal name="down_to_image&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="down_to_image&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.92" steps="653269"/></proof>
   </goal>
   <goal name="down_to_image&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.87" steps="699025"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="down_to_image&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="down_to_image&#39;vc.10.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.11" steps="653272"/></proof>
   </goal>
   <goal name="down_to_image&#39;vc.10.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.94" steps="653747"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="down_to_image&#39;vc.11" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="down_to_image&#39;vc.11.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="down_to_image&#39;vc.11.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.93" steps="696536"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="down_to_image&#39;vc.11.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="down_to_image&#39;vc.11.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures3">
     <goal name="down_to_image&#39;vc.11.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures8">
      <goal name="down_to_image&#39;vc.11.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures5">
       <goal name="down_to_image&#39;vc.11.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="eliminate_if" proved="true" >
        <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0" expl="VC for down_to_image" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.97" steps="665557"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.1" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.02" steps="665610"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.2" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.02" steps="665610"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.3" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.00" steps="665725"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.4" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.00" steps="665750"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.5" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.94" steps="665751"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.6" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.16" steps="665719"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.7" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.05" steps="665744"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.8" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.02" steps="665745"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.9" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.99" steps="665726"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.10" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.01" steps="665728"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.11" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.62" steps="707065"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.12" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.14" steps="678678"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.13" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.94" steps="665739"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.14" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.80" steps="707667"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.15" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.08" steps="665717"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.16" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.08" steps="665742"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.17" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.02" steps="665743"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.18" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.06" steps="665717"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.19" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.66" steps="707410"/></proof>
         </goal>
         <goal name="down_to_image&#39;vc.11.1.0.0.0.0.0.20" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.02" steps="665734"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="down_to_image&#39;vc.11.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.68" steps="700045"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="down_to_image&#39;vc.11.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.94" steps="653803"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permute_up&#39;vc" expl="VC for permute_up" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permute_up&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.79" steps="675133"/></proof>
  </goal>
  <goal name="permute_up&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_up&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.09" steps="633877"/></proof>
   </goal>
   <goal name="permute_up&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.09" steps="633877"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_up&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_up&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.11" steps="633898"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_up&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_up&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.13" steps="654168"/></proof>
   </goal>
   <goal name="permute_up&#39;vc.3.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.89" steps="699530"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_up&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_up&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.84" steps="699181"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_up&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.84" steps="699401"/></proof>
  </goal>
  <goal name="permute_up&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.10" steps="654444"/></proof>
  </goal>
  <goal name="permute_up&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.09" steps="654447"/></proof>
  </goal>
  <goal name="permute_up&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_up&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.10" steps="654005"/></proof>
   </goal>
   <goal name="permute_up&#39;vc.8.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.80" steps="699530"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_up&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_up&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.09" steps="654008"/></proof>
   </goal>
   <goal name="permute_up&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.13" steps="654533"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_up&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_up&#39;vc.10.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permute_up&#39;vc.10.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.94" steps="700039"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="permute_up&#39;vc.10.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permute_up&#39;vc.10.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures3">
     <goal name="permute_up&#39;vc.10.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures8">
      <goal name="permute_up&#39;vc.10.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures5">
       <goal name="permute_up&#39;vc.10.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="eliminate_if" proved="true" >
        <goal name="permute_up&#39;vc.10.1.0.0.0.0.0" expl="VC for permute_up" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.18" steps="666475"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.1" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.22" steps="666489"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.2" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.92" steps="708407"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.3" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.15" steps="666650"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.4" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.19" steps="666661"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.5" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.18" steps="666665"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.6" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.16" steps="666659"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.7" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.14" steps="666670"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.8" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.17" steps="666674"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.9" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.16" steps="666653"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.10" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.89" steps="708159"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.11" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.93" steps="708439"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.12" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.14" steps="666629"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.13" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.18" steps="666649"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.14" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.16" steps="666653"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.15" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.16" steps="666647"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.16" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.17" steps="666658"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.17" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.94" steps="707822"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.18" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.22" steps="666641"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.19" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.95" steps="708475"/></proof>
         </goal>
         <goal name="permute_up&#39;vc.10.1.0.0.0.0.0.20" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="1.19" steps="666647"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="permute_up&#39;vc.10.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.99" steps="700449"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="permute_up&#39;vc.10.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.12" steps="654589"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permute_atom&#39;vc" expl="VC for permute_atom" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permute_atom&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_atom&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.14" steps="634569"/></proof>
   </goal>
   <goal name="permute_atom&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.12" steps="634569"/></proof>
   </goal>
   <goal name="permute_atom&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.16" steps="634584"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_atom&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_atom&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.13" steps="634596"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_atom&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_atom&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.12" steps="634573"/></proof>
   </goal>
   <goal name="permute_atom&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.83" steps="675506"/></proof>
   </goal>
   <goal name="permute_atom&#39;vc.2.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.11" steps="634588"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_atom&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_atom&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.08" steps="634608"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_atom&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_atom&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.10" steps="654801"/></proof>
   </goal>
   <goal name="permute_atom&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.12" steps="654805"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_atom&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_atom&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.13" steps="654804"/></proof>
   </goal>
   <goal name="permute_atom&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.11" steps="654808"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_atom&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_atom&#39;vc.6.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.81" steps="824099"/></proof>
   </goal>
   <goal name="permute_atom&#39;vc.6.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.84" steps="826134"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_atom&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_atom&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.77" steps="826366"/></proof>
   </goal>
   <goal name="permute_atom&#39;vc.7.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.79" steps="824329"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permute_atom&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permute_atom&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.82" steps="825297"/></proof>
   </goal>
   <goal name="permute_atom&#39;vc.8.1" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="2.76" steps="825248"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutation_circuit_pre&#39;vc" expl="VC for permutation_circuit_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permutation_circuit_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.12" steps="656355"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.70" steps="827028"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.08" steps="657152"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="9"><result status="valid" time="1.86" steps="701006"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.91" steps="656362"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.91" steps="656366"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.85" steps="701399"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.12" steps="656653"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.93" steps="657362"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.9" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.11" steps="657516"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permutation_circuit_pre&#39;vc.10.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="2.78" steps="828837"/></proof>
   </goal>
   <goal name="permutation_circuit_pre&#39;vc.10.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="2.81" steps="828853"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.11" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.94" steps="702306"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.12" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.17" steps="657746"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.13" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.17" steps="657749"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.95" steps="702617"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.89" steps="703508"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.16" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H2">
   <goal name="permutation_circuit_pre&#39;vc.16.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permutation_circuit_pre&#39;vc.16.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="permutation_circuit_pre&#39;vc.16.0.0.0" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(i = k)">
      <goal name="permutation_circuit_pre&#39;vc.16.0.0.0.0" expl="true case (postcondition)" proved="true">
      <proof prover="9"><result status="valid" time="2.21" steps="831883"/></proof>
      </goal>
      <goal name="permutation_circuit_pre&#39;vc.16.0.0.0.1" expl="false case (postcondition)" proved="true">
      <proof prover="9"><result status="valid" time="2.26" steps="831802"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutation_circuit_pre&#39;vc.16.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permutation_circuit_pre&#39;vc.16.1.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="permutation_circuit_pre&#39;vc.16.1.0.0" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(i = k)">
      <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.0" expl="true case (postcondition)" proved="true">
      <proof prover="9"><result status="valid" time="2.34" steps="833803"/></proof>
      </goal>
      <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.1" expl="false case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="H3">
       <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.1.0" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="H11">
        <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.1.0.0" expl="false case (postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="permute_atom&#39;spec">
         <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
         <proof prover="9"><result status="valid" time="3.20" steps="958936"/></proof>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.36" steps="785976"/></proof>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.1.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="3.19" steps="957326"/></proof>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.1.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="3.43" steps="974990"/></proof>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.1.0.0.4" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="3.25" steps="957940"/></proof>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.16.1.0.0.1.0.0.5" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="3.47" steps="978059"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.17" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H2">
   <goal name="permutation_circuit_pre&#39;vc.17.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permutation_circuit_pre&#39;vc.17.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="permutation_circuit_pre&#39;vc.17.0.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="2.91" steps="845290"/></proof>
     </goal>
     <goal name="permutation_circuit_pre&#39;vc.17.0.0.1" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(k &lt;= (qbit_permutation result @ (c_inv_func_int f n @ i)) )">
      <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0" expl="true case (postcondition)" proved="true">
      <transf name="assert" proved="true" arg1="((qbit_permutation result @ (c_inv_func_int f n @ i))  = i)">
       <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0" expl="asserted formula" proved="true">
       <transf name="case" proved="true" arg1="((qbit_permutation result @ (c_inv_func_int f n @ i)) &lt;&gt; i)">
        <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.0" expl="asserted formula (true case)" proved="true">
        <transf name="assert" proved="true" arg1="((qbit_permutation result @ (c_inv_func_int f n @ i)) &lt;&gt; (qbit_permutation result @ (c_inv_func_int f n @ (qbit_permutation result @ (c_inv_func_int f n @ i)))) )">
         <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
         <transf name="apply" proved="true" arg1="get_injective" arg2="with" arg3="(to_fset 0 n)">
          <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="bijective_is_injective" arg2="with" arg3="(to_fset 0 n)">
            <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="2.35" steps="832229"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="3.00" steps="896093"/></proof>
          </goal>
          <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="3.19" steps="911960"/></proof>
          </goal>
          <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.89" steps="846521"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.0.1" expl="asserted formula (true case)" proved="true">
         <proof prover="9"><result status="valid" time="2.95" steps="846008"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.0.1" expl="asserted formula (false case)" proved="true">
        <proof prover="9"><result status="valid" time="1.18" steps="657543"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.0.1" expl="true case (postcondition)" proved="true">
       <proof prover="9"><result status="valid" time="1.93" steps="702083"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="permutation_circuit_pre&#39;vc.17.0.0.1.1" expl="false case (postcondition)" proved="true">
      <proof prover="9"><result status="valid" time="0.97" steps="657545"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutation_circuit_pre&#39;vc.17.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permutation_circuit_pre&#39;vc.17.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="permutation_circuit_pre&#39;vc.17.1.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="2.95" steps="850637"/></proof>
     </goal>
     <goal name="permutation_circuit_pre&#39;vc.17.1.0.1" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(k &lt;= (qbit_permutation result @ (c_inv_func_int f n @ i)) )">
      <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0" expl="true case (postcondition)" proved="true">
      <transf name="assert" proved="true" arg1="((qbit_permutation result @ (c_inv_func_int f n @ i))  = i)">
       <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0" expl="asserted formula" proved="true">
       <transf name="case" proved="true" arg1="((qbit_permutation result @ (c_inv_func_int f n @ i)) &lt;&gt; i)">
        <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.0" expl="asserted formula (true case)" proved="true">
        <transf name="assert" proved="true" arg1="((qbit_permutation result @ (c_inv_func_int f n @ i)) &lt;&gt; (qbit_permutation result @ (c_inv_func_int f n @ (qbit_permutation result @ (c_inv_func_int f n @ i)))) )">
         <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.0.0" expl="asserted formula" proved="true">
         <transf name="apply" proved="true" arg1="get_injective" arg2="with" arg3="(to_fset 0 n)">
          <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="bijective_is_injective" arg2="with" arg3="(to_fset 0 n)">
            <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="2.38" steps="833781"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="3.18" steps="901000"/></proof>
          </goal>
          <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="3.06" steps="917835"/></proof>
          </goal>
          <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="2.83" steps="854038"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.0.1" expl="asserted formula (true case)" proved="true">
         <proof prover="9"><result status="valid" time="3.05" steps="852054"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.0.1" expl="asserted formula (false case)" proved="true">
        <proof prover="9"><result status="valid" time="1.13" steps="658062"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.0.1" expl="true case (postcondition)" proved="true">
       <proof prover="9"><result status="valid" time="1.86" steps="703192"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="permutation_circuit_pre&#39;vc.17.1.0.1.1" expl="false case (postcondition)" proved="true">
      <proof prover="9"><result status="valid" time="1.14" steps="658064"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutation_circuit&#39;vc" expl="VC for permutation_circuit" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permutation_circuit&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.94" steps="657197"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.95" steps="657201"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.16" steps="657220"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.97" steps="657435"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.18" steps="657438"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.5" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(qbit_permutation result @ i)" arg2="(qbit_permutation result @ (c_inv_func_int f n (f i)))
">
   <goal name="permutation_circuit&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures3">
    <goal name="permutation_circuit&#39;vc.5.0.0" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="(mem (f i)  (to_fset 0 (width result)) )
">
     <goal name="permutation_circuit&#39;vc.5.0.0.0" expl="asserted formula" proved="true">
     <transf name="instantiate" proved="true" arg1="get_bijective" arg2="f,(to_fset 0 n),(to_fset 0 n)">
      <goal name="permutation_circuit&#39;vc.5.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="permutation_circuit&#39;vc.5.0.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="replace" proved="true" arg1="(width  result)" arg2="n">
        <goal name="permutation_circuit&#39;vc.5.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <transf name="apply" proved="true" arg1="Hinst3">
         <goal name="permutation_circuit&#39;vc.5.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.45" steps="786885"/></proof>
         </goal>
         <goal name="permutation_circuit&#39;vc.5.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="3.51" steps="1034352"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="permutation_circuit&#39;vc.5.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="1.47" steps="786885"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="permutation_circuit&#39;vc.5.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.69" steps="830255"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutation_circuit&#39;vc.5.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="2.61" steps="828863"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permutation_circuit&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permutation_circuit&#39;vc.6.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="2.63" steps="827701"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_apply">
   <goal name="permutation_circuit&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
    <goal name="permutation_circuit&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
     <goal name="permutation_circuit&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="circ_to_pps_range">
      <goal name="permutation_circuit&#39;vc.7.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="circ_to_pps_angle">
       <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="circ_to_pps_width">
        <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="qbit_permutes&#39;spec">
          <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="qbit_permutes&#39;spec1">
           <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures3">
            <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
             <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
              <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
               <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
                <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
                <transf name="apply" proved="true" arg1="bv_to_ket_eq">
                 <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="make_bv_length">
                  <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="make_bv_length">
                   <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.41" steps="786724"/></proof>
                   </goal>
                   <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.14" steps="960203"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.22" steps="832558"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="split_all_full" proved="true" >
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                     <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.04" steps="961173"/></proof>
                     </goal>
                     <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.13" steps="962648"/></proof>
                     </goal>
                     <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.25" steps="836756"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.05" steps="961173"/></proof>
                    </goal>
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.16" steps="962648"/></proof>
                    </goal>
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.32" steps="836756"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.29" steps="832558"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                     <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="circ_to_pps_basis_ket">
                        <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.57" steps="982938"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.31" steps="960255"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.38" steps="786775"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                       <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.19" steps="961239"/></proof>
                       </goal>
                       <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.0.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.03" steps="962700"/></proof>
                       </goal>
                       <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.0.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.37" steps="836818"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                       <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.1.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.27" steps="961239"/></proof>
                       </goal>
                       <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.1.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.21" steps="962700"/></proof>
                       </goal>
                       <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.1.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.43" steps="836818"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.39" steps="786775"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.47" steps="1032273"/></proof>
                      </goal>
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.46" steps="1032156"/></proof>
                      </goal>
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0.2" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.54" steps="901757"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.1.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.37" steps="1032273"/></proof>
                      </goal>
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.1.1" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.27" steps="1032156"/></proof>
                      </goal>
                      <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.1.2" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.55" steps="901757"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.52" steps="897617"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="1.49" steps="786731"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.28" steps="832558"/></proof>
              </goal>
              <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.42" steps="786724"/></proof>
              </goal>
              <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="scalar_ket_l">
                <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                 <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="make_bv_length">
                  <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.47" steps="786724"/></proof>
                  </goal>
                  <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.33" steps="961173"/></proof>
                    </goal>
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.16" steps="962648"/></proof>
                    </goal>
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.28" steps="836756"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.27" steps="961173"/></proof>
                    </goal>
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.31" steps="962648"/></proof>
                    </goal>
                    <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.41" steps="836756"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.31" steps="832558"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="3.28" steps="959939"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.44" steps="786726"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="permutation_circuit&#39;vc.7.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.37" steps="786726"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="permutation_circuit&#39;vc.7.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.89" steps="715682"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="permutation_circuit&#39;vc.7.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.96" steps="715824"/></proof>
    </goal>
    <goal name="permutation_circuit&#39;vc.7.0.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="2.00" steps="702575"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="permutation_circuit&#39;vc.7.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="1.87" steps="702598"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.76" steps="842599"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.91" steps="702567"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.17" steps="657935"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.92" steps="702631"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="with_permutation&#39;vc" expl="VC for with_permutation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="with_permutation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.94" steps="658219"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.15" steps="658223"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.13" steps="658741"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.3" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.3.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="2.66" steps="799616"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.4" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sequence_ancillas">
     <goal name="with_permutation&#39;vc.4.0.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="2.66" steps="799243"/></proof>
     </goal>
     <goal name="with_permutation&#39;vc.4.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.15" steps="658581"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.05" steps="703577"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.6" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sequence_range">
     <goal name="with_permutation&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="1.14" steps="658633"/></proof>
     </goal>
     <goal name="with_permutation&#39;vc.6.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.12" steps="658615"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.7" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sequence_angle">
     <goal name="with_permutation&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="with_permutation&#39;vc.7.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_zero_add">
       <goal name="with_permutation&#39;vc.7.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="ang_ind&#39;def">
        <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="ang_ind&#39;def">
         <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="apply" proved="true" arg1="pps&#39;invariant">
           <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="3.34" steps="957984"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.58" steps="821742"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="with_permutation&#39;vc.7.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.00" steps="704342"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="with_permutation&#39;vc.7.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.14" steps="658636"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.8" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sequence_basis_ket">
     <goal name="with_permutation&#39;vc.8.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="with_permutation&#39;vc.8.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="with_permutation&#39;vc.8.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="basis_ket_invariant">
        <goal name="with_permutation&#39;vc.8.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="with_permutation&#39;vc.8.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="3.24" steps="957250"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="with_permutation&#39;vc.8.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="with_permutation&#39;vc.8.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.55" steps="821939"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="with_permutation&#39;vc.8.0.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="with_permutation&#39;vc.8.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.42" steps="807781"/></proof>
         </goal>
         <goal name="with_permutation&#39;vc.8.0.0.0.0.0.2.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.44" steps="807792"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="with_permutation&#39;vc.8.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.94" steps="658761"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.15" steps="659158"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.10" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.12" steps="658203"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.11" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.11" steps="658911"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.12" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.91" steps="658915"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.13" expl="precondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.13.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.80" steps="704236"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.14" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.14.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.14.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="2.58" steps="802213"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.15" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.15.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.15.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sequence_ancillas">
     <goal name="with_permutation&#39;vc.15.0.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="2.66" steps="802129"/></proof>
     </goal>
     <goal name="with_permutation&#39;vc.15.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.85" steps="704382"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.16" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.16.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.16.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.75" steps="705114"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.17" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.17.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.17.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="2.73" steps="802704"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.18" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.18.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.18.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sequence_angle">
     <goal name="with_permutation&#39;vc.18.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
      <goal name="with_permutation&#39;vc.18.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="Ensures8">
      </transf>
      </goal>
      <goal name="with_permutation&#39;vc.18.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.36" steps="789055"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="with_permutation&#39;vc.18.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.62" steps="704438"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.19" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="with_permutation&#39;vc.19.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="with_permutation&#39;vc.19.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sequence_basis_ket">
     <goal name="with_permutation&#39;vc.19.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="with_permutation&#39;vc.19.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="with_permutation&#39;vc.19.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec3">
        <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="sequence_basis_ket">
          <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="apply" proved="true" arg1="basis_ket_invariant">
            <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="3.27" steps="959363"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="qbit_permutes&#39;spec1">
               <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.49" steps="808944"/></proof>
               </goal>
               <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="3.21" steps="958688"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="3.25" steps="958722"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="with_permutation&#39;vc.19.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="3.29" steps="958490"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="with_permutation&#39;vc.19.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.22" steps="808907"/></proof>
        </goal>
        <goal name="with_permutation&#39;vc.19.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.45" steps="808891"/></proof>
        </goal>
        <goal name="with_permutation&#39;vc.19.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.46" steps="808900"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="with_permutation&#39;vc.19.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.92" steps="704581"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.20" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="with_permutation&#39;vc.20.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="with_permutation&#39;vc.20.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="with_permutation&#39;vc.20.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
      <goal name="with_permutation&#39;vc.20.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
       <goal name="with_permutation&#39;vc.20.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="with_permutation&#39;vc.20.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="pps&#39;invariant1">
         <goal name="with_permutation&#39;vc.20.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="with_permutation&#39;vc.20.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="3.42" steps="971197"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="with_permutation&#39;vc.20.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.46" steps="809065"/></proof>
         </goal>
         <goal name="with_permutation&#39;vc.20.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="with_permutation&#39;vc.20.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="3.25" steps="958869"/></proof>
          </goal>
          <goal name="with_permutation&#39;vc.20.0.0.0.0.0.0.2.1" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="3.22" steps="959864"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="with_permutation&#39;vc.20.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="1.15" steps="660233"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.19" steps="660371"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="c_swap_int&#39;vc" expl="VC for c_swap_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="c_swap_int&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.78" steps="826493"/></proof>
  </goal>
  <goal name="c_swap_int&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.83" steps="828688"/></proof>
  </goal>
  <goal name="c_swap_int&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.71" steps="827442"/></proof>
  </goal>
  <goal name="c_swap_int&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="c_swap_int&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_bijective1">
    <goal name="c_swap_int&#39;vc.3.0.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="3.47" steps="1039546"/></proof>
    </goal>
    <goal name="c_swap_int&#39;vc.3.0.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="2.72" steps="919328"/></proof>
    </goal>
    <goal name="c_swap_int&#39;vc.3.0.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="c_swap_int&#39;vc.3.0.2.0" expl="apply premises" proved="true">
     <transf name="exists" proved="true" arg1="(if e&#39; = t1 then t2 else if e&#39; = t2 then t1 else e&#39;)">
      <goal name="c_swap_int&#39;vc.3.0.2.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="c_swap_int&#39;vc.3.0.2.0.0.0" proved="true">
       <proof prover="9"><result status="valid" time="3.44" steps="1039576"/></proof>
       </goal>
       <goal name="c_swap_int&#39;vc.3.0.2.0.0.1" proved="true">
       <proof prover="9"><result status="valid" time="2.63" steps="915699"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="c_swap_int&#39;vc.4" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="c_swap_int&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="c_inv_func_int&#39;def">
    <goal name="c_swap_int&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="goal_comm">
     <goal name="c_swap_int&#39;vc.4.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="unic_inverse_c">
      <goal name="c_swap_int&#39;vc.4.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.14" steps="659206"/></proof>
      </goal>
      <goal name="c_swap_int&#39;vc.4.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="2.01" steps="711925"/></proof>
      </goal>
      <goal name="c_swap_int&#39;vc.4.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.15" steps="659215"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="c_swap_int&#39;vc.4.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.17" steps="659206"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="with_int_swap&#39;vc" expl="VC for with_int_swap" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="with_int_swap&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.11" steps="639708"/></proof>
  </goal>
  <goal name="with_int_swap&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.13" steps="639721"/></proof>
  </goal>
  <goal name="with_int_swap&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.12" steps="660422"/></proof>
  </goal>
  <goal name="with_int_swap&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.13" steps="660992"/></proof>
  </goal>
  <goal name="with_int_swap&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.11" steps="660995"/></proof>
  </goal>
  <goal name="with_int_swap&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.15" steps="660998"/></proof>
  </goal>
  <goal name="with_int_swap&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.93" steps="661001"/></proof>
  </goal>
  <goal name="with_int_swap&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures7">
   <goal name="with_int_swap&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="ang_ind_invariant">
    <goal name="with_int_swap&#39;vc.7.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="with_int_swap&#39;vc.7.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="with_int_swap&#39;vc.7.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.99" steps="718681"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="with_int_swap&#39;vc.7.0.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="0.91" steps="661004"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_int_swap&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures7">
   <goal name="with_int_swap&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(c_inv_func_int (c_swap_int t1 t2 (width c)) (width c) @ i)" arg2="t2">
    <goal name="with_int_swap&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="basis_ket_invariant">
     <goal name="with_int_swap&#39;vc.8.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="with_int_swap&#39;vc.8.0.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="with_int_swap&#39;vc.8.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.08" steps="719260"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="with_int_swap&#39;vc.8.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.18" steps="661143"/></proof>
     </goal>
     <goal name="with_int_swap&#39;vc.8.0.0.2" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.11" steps="661154"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="with_int_swap&#39;vc.8.0.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="2.71" steps="836483"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="with_int_swap&#39;vc.8.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="1.84" steps="704956"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="with_int_swap&#39;vc.9" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures8">
   <goal name="with_int_swap&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(c_inv_func_int (c_swap_int t1 t2 (width c)) (width c) @ i)" arg2="t1">
    <goal name="with_int_swap&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="basis_ket_invariant">
     <goal name="with_int_swap&#39;vc.9.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="with_int_swap&#39;vc.9.0.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="with_int_swap&#39;vc.9.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.00" steps="719492"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="with_int_swap&#39;vc.9.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.13" steps="661343"/></proof>
     </goal>
     <goal name="with_int_swap&#39;vc.9.0.0.2" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="0.91" steps="661354"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="with_int_swap&#39;vc.9.0.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="2.74" steps="837225"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="with_int_swap&#39;vc.9.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="1.82" steps="705217"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="with_int_swap&#39;vc.10" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures9">
   <goal name="with_int_swap&#39;vc.10.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(c_inv_func_int (c_swap_int t1 t2 (width c)) (width c) @ i)" arg2="i">
    <goal name="with_int_swap&#39;vc.10.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="basis_ket_invariant">
     <goal name="with_int_swap&#39;vc.10.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="with_int_swap&#39;vc.10.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="2.20" steps="719406"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="with_int_swap&#39;vc.10.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.19" steps="661586"/></proof>
     </goal>
     <goal name="with_int_swap&#39;vc.10.0.0.2" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.22" steps="661597"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="with_int_swap&#39;vc.10.0.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="2.78" steps="837400"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="with_int_swap&#39;vc.10.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="1.25" steps="661597"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutation_circuit_equiv&#39;vc" expl="VC for permutation_circuit_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permutation_circuit_equiv&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="3.43" steps="917909"/></proof>
  </goal>
  <goal name="permutation_circuit_equiv&#39;vc.1" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(f&#39; e)" arg2="(f e)">
   <goal name="permutation_circuit_equiv&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="5.66" steps="954641"/></proof>
   </goal>
   <goal name="permutation_circuit_equiv&#39;vc.1.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(f&#39; e)" arg2="(f e)">
    <goal name="permutation_circuit_equiv&#39;vc.1.1.0" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="1.34" steps="743142"/></proof>
    </goal>
    <goal name="permutation_circuit_equiv&#39;vc.1.1.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="3.24" steps="917629"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit_equiv&#39;vc.2" expl="precondition" proved="true">
  <transf name="exists" proved="true" arg1="(inv_func_int f n e&#39;)">
   <goal name="permutation_circuit_equiv&#39;vc.2.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="permutation_circuit_equiv&#39;vc.2.0.0" proved="true">
    <proof prover="9"><result status="valid" time="3.39" steps="918079"/></proof>
    </goal>
    <goal name="permutation_circuit_equiv&#39;vc.2.0.1" proved="true">
    <transf name="replace" proved="true" arg1="(f&#39; @ (inv_func_int f n @ e&#39;))" arg2="(f @ (inv_func_int f n @ e&#39;))">
     <goal name="permutation_circuit_equiv&#39;vc.2.0.1.0" proved="true">
     <proof prover="9"><result status="valid" time="3.38" steps="917112"/></proof>
     </goal>
     <goal name="permutation_circuit_equiv&#39;vc.2.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="3.21" steps="917171"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit_equiv&#39;vc.3" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="get_path_sem">
   <goal name="permutation_circuit_equiv&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="get_path_sem">
    <goal name="permutation_circuit_equiv&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
     <goal name="permutation_circuit_equiv&#39;vc.3.0.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="3.24" steps="923047"/></proof>
     </goal>
     <goal name="permutation_circuit_equiv&#39;vc.3.0.0.1" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="permutation_circuit_equiv&#39;vc.3.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="3.73" steps="1073090"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="permutation_circuit_equiv&#39;vc.3.0.0.2" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="permutation_circuit_equiv&#39;vc.3.0.0.2.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="3.86" steps="1072478"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="scalar_eq_gen">
        <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="( path_sem_basis (permutation_circuit n f) (bv_to_ket a))" arg2="( path_sem (permutation_circuit n f) (bv_to_ket a))">
         <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="( path_sem_basis (permutation_circuit n f&#39;) (bv_to_ket a))" arg2="( path_sem (permutation_circuit n f&#39;) (bv_to_ket a))">
          <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec4">
            <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec4">
             <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="bv_to_ket_eq">
              <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="make_bv_length">
               <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="make_bv_length">
                <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.92" steps="1012299"/></proof>
                </goal>
                <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="4.27" steps="1194073"/></proof>
                  </goal>
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="4.32" steps="1194087"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="3.22" steps="1064222"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="4.29" steps="1194059"/></proof>
                 </goal>
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="4.25" steps="1194073"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="3.07" steps="1064222"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="Requires">
                   <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.83" steps="1012383"/></proof>
                   </goal>
                   <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                    <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.86" steps="1012350"/></proof>
                    </goal>
                    <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="4.07" steps="1197783"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.1.1.1.0" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="4.05" steps="1197777"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.84" steps="1064332"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.78" steps="1197771"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1.1.0" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.68" steps="1197765"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.0" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.82" steps="1012350"/></proof>
                  </goal>
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.1" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.1.0" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.1.0.0" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.71" steps="1197783"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.1.1" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.1.1.0" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.69" steps="1197777"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.95" steps="1064332"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.98" steps="1197783"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.99" steps="1197777"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.86" steps="1012350"/></proof>
                 </goal>
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.2.1.0.0" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.69" steps="1197783"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.2.1.1" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.2.1.1.0" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.91" steps="1197777"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.87" steps="1064332"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.89" steps="1012303"/></proof>
             </goal>
             <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.86" steps="1012301"/></proof>
             </goal>
             <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="3.79" steps="1196447"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.91" steps="1012303"/></proof>
            </goal>
            <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.82" steps="1012301"/></proof>
            </goal>
            <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="3.74" steps="1196447"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="rewrite" proved="true" arg1="get_path_sem_basis">
           <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="1.49" steps="845500"/></proof>
           </goal>
           <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.1.1" expl="rewrite premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="4.00" steps="1193939"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.0.1.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.46" steps="895360"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="9"><result status="valid" time="3.41" steps="1028132"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="permutation_circuit_equiv&#39;vc.3.0.0.3.0.0.1" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.49" steps="845500"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="permutation_circuit_equiv&#39;vc.3.0.1" expl="rewrite premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="permutation_circuit_equiv&#39;vc.3.0.1.0" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="3.50" steps="1072515"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutation_circuit_equiv&#39;vc.3.1" expl="rewrite premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="permutation_circuit_equiv&#39;vc.3.1.0" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="3.40" steps="1072515"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="with_permutation_get_ket&#39;vc" expl="VC for with_permutation_get_ket" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="with_permutation_get_ket&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pat_sem_apply_basis_value">
   <goal name="with_permutation_get_ket&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pat_sem_apply_basis_value">
    <goal name="with_permutation_get_ket&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="mult_eq_t">
     <goal name="with_permutation_get_ket&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.86"/></proof>
     </goal>
     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="sum_eq_gen">
      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.90"/></proof>
      </goal>
      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="mult_eq_t">
         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec3">
           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(ang_ind c
     (getbv (make_bv (fun (i:int) -&gt; getbv x1 @ (f @ i)) (width c)))
     (getbv x))" arg2="(ang_ind c (fun (i:int) -&gt; getbv x1 @ (f @ i)) (getbv x))">
             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
             </transf>
             </goal>
             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <transf name="eliminate_definition" proved="true" >
              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
              <transf name="rewrite" proved="true" arg1="ang_ind&#39;def">
               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
               <transf name="rewrite" proved="true" arg1="ang_ind&#39;def">
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant">
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.47" steps="1042684"/></proof>
                   </goal>
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.43" steps="1044354"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.87" steps="936712"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.63" steps="884596"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.60" steps="885137"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="int_to_bv_to_int_">
          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="int_to_bv_to_int_">
           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="case" proved="true" arg1="((make_bv
   (fun (y3:int) -&gt;
     basis_ket (with_permutation c f) (getbv x1) (getbv x) y3)
   (width (with_permutation c f))) =  y)">
            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0" expl="true case (apply premises)" proved="true">
            <transf name="assert" proved="true" arg1="((make_bv
     (fun (y3:int) -&gt;
       basis_ket c
       (getbv (make_bv (fun (i:int) -&gt; getbv x1 @ (f @ i)) (width c)))
       (getbv x) y3)
     (width c))
 =   (make_bv (fun (i:int) -&gt; getbv y @ (f @ i)) (width c)))">
             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
             <transf name="apply" proved="true" arg1="set_equal_bv_make_">
              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="eliminate_definition" proved="true" >
               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.40" steps="1064082"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <transf name="eliminate_definition" proved="true" >
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.46" steps="1071422"/></proof>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.48" steps="1066221"/></proof>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.76" steps="957607"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                 <transf name="eliminate_definition" proved="true" >
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.45" steps="1050478"/></proof>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.1.0.0.0.0.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.39" steps="1045283"/></proof>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.1.1.0.0.0.0.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.65" steps="936819"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                <transf name="replace" proved="true" arg1="y" arg2="(make_bv
  (fun (y3:int) -&gt; basis_ket (with_permutation c f) (getbv x1) (getbv x) y3)
  (width (with_permutation c f)))">
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="split_all_full" proved="true" >
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec2">
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="replace" proved="true" arg1="(c_inv_func_int f (width c) @ (f @ i))" arg2="i">
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="basis_ket_invariant">
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.38" steps="1066292"/></proof>
                         </goal>
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                          <transf name="compute_specified" proved="true" >
                           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                           <proof prover="9"><result status="valid" time="3.67" steps="1067773"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                          <transf name="compute_specified" proved="true" >
                           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                           <proof prover="9"><result status="valid" time="3.62" steps="1067767"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.50" steps="885281"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.62" steps="885245"/></proof>
                       </goal>
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.60" steps="885256"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                      <proof prover="9"><result status="valid" time="3.74" steps="1065700"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.69" steps="885247"/></proof>
                     </goal>
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                     <transf name="assert" proved="true" arg1="(mem (f i) (to_fset 0 (width c)))
">
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.2.0" expl="asserted formula" proved="true">
                      <transf name="instantiate" proved="true" arg1="get_bijective3" arg2="f,(to_fset 0 (width c)),(to_fset 0 (width c))">
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.2.0.0" expl="asserted formula" proved="true">
                       <transf name="apply" proved="true" arg1="Hinst">
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="1.52" steps="885326"/></proof>
                        </goal>
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.2.0.0.1" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.82" steps="1172428"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.35" steps="1067108"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="eliminate_definition" proved="true" >
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="basis_ket&#39;def">
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.0" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.0.0" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.48" steps="1066214"/></proof>
                        </goal>
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                        <transf name="split_all_full" proved="true" >
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                          <proof prover="9"><result status="valid" time="3.57" steps="1066273"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.55" steps="1066172"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="2.83" steps="957661"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.48" steps="1066214"/></proof>
                        </goal>
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.1.0.1" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="3.44" steps="1066260"/></proof>
                        </goal>
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.1.0.0.0.1.0.2" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="2.87" steps="957661"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.2" expl="rewrite premises" proved="true">
                  <transf name="assert" proved="true" arg1="(mem (f i) (to_fset 0 (width c)))
">
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.2.0" expl="asserted formula" proved="true">
                   <transf name="split_all_full" proved="true" >
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.2.0.0" expl="asserted formula" proved="true">
                    <transf name="instantiate" proved="true" arg1="get_bijective3" arg2="f,(to_fset 0 (width c)),(to_fset 0 (width c))">
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.2.0.0.0" expl="asserted formula" proved="true">
                     <transf name="apply" proved="true" arg1="Hinst">
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.63" steps="885326"/></proof>
                      </goal>
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.2.0.0.0.1" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.80" steps="1172428"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.0.2.1" expl="rewrite premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.15"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.1" expl="equality hypothesis" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.0.2.0.0.1.0" expl="equality hypothesis" proved="true">
                  <proof prover="9"><result status="valid" time="1.73" steps="979642"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1" expl="true case (apply premises)" proved="true">
             <transf name="rewrite" proved="true" arg1="h">
              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0" expl="true case (apply premises)" proved="true">
              <transf name="rewrite" proved="true" arg1="h1">
               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0" expl="true case (apply premises)" proved="true">
               <transf name="rewrite" proved="true" arg1="indic&#39;spec">
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0" expl="true case (apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="indic&#39;spec">
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
                 <transf name="eliminate_if" proved="true" >
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                   <transf name="assert" proved="true" arg1="(forall x:bitvec. not x = x -&gt; c_one = c_zero)">
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                    <transf name="instantiate" proved="true" arg1="h" arg2="(make_bv (fun (i:int) -&gt; getbv y @ (f @ i)) (width c))">
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                     <proof prover="9"><result status="valid" time="1.31" steps="752311"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.0.1" expl="true case (apply premises)" proved="true">
                    <proof prover="9"><result status="valid" time="1.29" steps="752312"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.1" expl="true case (apply premises)" proved="true">
                   <transf name="assert" proved="true" arg1="(forall x:bitvec. not x = x -&gt; c_one = c_zero)
">
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
                    <proof prover="9"><result status="valid" time="1.26" steps="752315"/></proof>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.1.1" expl="true case (apply premises)" proved="true">
                    <transf name="instantiate" proved="true" arg1="h" arg2="(make_bv (fun (i:int) -&gt; getbv y @ (f @ i)) (width c))
">
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.1.1.0" expl="true case (apply premises)" proved="true">
                     <transf name="apply" proved="true" arg1="Hinst">
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="H">
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.2" expl="true case (apply premises)" proved="true">
                   <proof prover="9"><result status="valid" time="1.28" steps="752310"/></proof>
                   </goal>
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.0.1.0.0.0.0.0.3" expl="true case (apply premises)" proved="true">
                   <proof prover="9"><result status="valid" time="1.29" steps="752317"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1" expl="false case (apply premises)" proved="true">
            <transf name="case" proved="true" arg1="((make_bv
     (fun (y3:int) -&gt;
       basis_ket c
       (getbv (make_bv (fun (i:int) -&gt; getbv x1 @ (f @ i)) (width c)))
       (getbv x) y3)
     (width c))
   = (make_bv (fun (i:int) -&gt; getbv y @ (f @ i)) (width c)))">
             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0" expl="false case (true case. apply premises)" proved="true">
             <transf name="assert" proved="true" arg1="((make_bv
   (fun (y3:int) -&gt;
     basis_ket (with_permutation c f) (getbv x1) (getbv x) y3)
   (width (with_permutation c f)))
= y)">
              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0" expl="asserted formula" proved="true">
              <transf name="apply" proved="true" arg1="set_equal_bv">
               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="make_bv_length">
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.18"/></proof>
                </goal>
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.65" steps="1070650"/></proof>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.58" steps="1070744"/></proof>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.50" steps="885439"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.39" steps="1070650"/></proof>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.40" steps="1070744"/></proof>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.58" steps="885439"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="2.88" steps="919981"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
                 <transf name="instantiate" proved="true" arg1="get_equal_bv" arg2="(make_bv
  (fun (y3:int) -&gt;
    basis_ket c
    (getbv (make_bv (fun (i1:int) -&gt; getbv x1 @ (f @ i1)) (width c)))
    (getbv x) y3)
  (width c)),(make_bv (fun (i1:int) -&gt; getbv y @ (f @ i1)) (width c))">
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="destruct" proved="true" arg1="Hinst">
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
                    <transf name="apply" proved="true" arg1="h">
                    </transf>
                    </goal>
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="Hinst">
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
                     <transf name="instantiate" proved="true" arg1="Hinst" arg2="(inv_func_int f (width c) @ i)
">
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                      <transf name="destruct" proved="true" arg1="Hinst">
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.0" expl="destruct premise" proved="true">
                       <proof prover="9"><result status="valid" time="3.55" steps="1082213"/></proof>
                       </goal>
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                       <transf name="replace" proved="true" arg1="(getbv
   (make_bv
    (fun (y3:int) -&gt;
      basis_ket c
      (getbv (make_bv (fun (i1:int) -&gt; getbv x1 @ (f @ i1)) (width c)))
      (getbv x) y3)
    (width c))
   @ (inv_func_int f (width c) @ i))" arg2="(getbv
   (make_bv
    (fun (y3:int) -&gt;
      basis_ket (with_permutation c f) (getbv x1) (getbv x) y3)
    (width (with_permutation c f)))
   @ i)" arg3="in" arg4="Hinst">
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="Hinst">
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                          <transf name="compute_specified" proved="true" >
                           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                           <proof prover="9"><result status="valid" time="4.07" steps="1096517"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                          <transf name="compute_specified" proved="true" >
                           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                           <proof prover="9"><result status="valid" time="3.91" steps="1089030"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="3.83" steps="1088889"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
                        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0" expl="equality hypothesis" proved="true">
                         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
                          <transf name="compute_specified" proved="true" >
                           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0" expl="equality hypothesis" proved="true">
                           <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec2">
                            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0" expl="equality hypothesis" proved="true">
                            <transf name="replace" proved="true" arg1="(inv_func_int f (width c) @ i)" arg2="(c_inv_func_int f (width c) @ i)">
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0" expl="equality hypothesis" proved="true">
                             <transf name="apply" proved="true" arg1="basis_ket_invariant">
                              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                              <transf name="split_vc" proved="true" >
                               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                               <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                <proof prover="9"><result status="valid" time="3.80" steps="1089273"/></proof>
                                </goal>
                                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                                <transf name="split_vc" proved="true" >
                                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                                 <transf name="compute_specified" proved="true" >
                                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                                  <proof prover="9"><result status="valid" time="3.87" steps="1090800"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                                 <transf name="compute_specified" proved="true" >
                                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                                  <proof prover="9"><result status="valid" time="3.88" steps="1090794"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                                <proof prover="9"><result status="valid" time="1.60" steps="886241"/></proof>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="1.62" steps="886205"/></proof>
                              </goal>
                              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="4.00" steps="1091135"/></proof>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                             <proof prover="9"><result status="valid" time="4.10" steps="1089811"/></proof>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="1.81" steps="886207"/></proof>
                            </goal>
                            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="3.05" steps="939122"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                          <transf name="compute_specified" proved="true" >
                           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0" expl="rewrite premises" proved="true">
                           <transf name="split_all_full" proved="true" >
                            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.0" expl="rewrite premises" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.0.0" expl="rewrite premises" proved="true">
                             <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="3.84" steps="1090167"/></proof>
                              </goal>
                              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="3.76" steps="1090124"/></proof>
                              </goal>
                              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.0.0.2" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="1.60" steps="886241"/></proof>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.1" expl="rewrite premises" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.1.0" expl="rewrite premises" proved="true">
                             <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.1.0.0" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="3.69" steps="1090167"/></proof>
                              </goal>
                              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.1.0.1" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="3.67" steps="1090124"/></proof>
                              </goal>
                              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.1.0.1.0.2" expl="apply premises" proved="true">
                              <proof prover="9"><result status="valid" time="1.60" steps="886241"/></proof>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.0.2" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="1.57" steps="886216"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1" expl="rewrite premises" proved="true">
                         <transf name="compute_specified" proved="true" >
                          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0" expl="rewrite premises" proved="true">
                          <transf name="split_all_full" proved="true" >
                           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.0" expl="rewrite premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.0.0" expl="rewrite premises" proved="true">
                            <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.0.0.0" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.88" steps="1095167"/></proof>
                             </goal>
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.0.0.1" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.89" steps="1090297"/></proof>
                             </goal>
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.0.0.2" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="1.67" steps="886241"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.1" expl="rewrite premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.1.0" expl="rewrite premises" proved="true">
                            <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.1.0.0" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.82" steps="1095167"/></proof>
                             </goal>
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.1.0.1" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="3.85" steps="1090297"/></proof>
                             </goal>
                             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.1.0.1.0.2" expl="apply premises" proved="true">
                             <proof prover="9"><result status="valid" time="1.62" steps="886241"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.0.0.1.1.2" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.80" steps="1090749"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.0.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.72" steps="1086840"/></proof>
                         </goal>
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.0.0.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.79" steps="1081815"/></proof>
                         </goal>
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.0.0.2" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.75" steps="886147"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.1.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.1.0.0" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.63" steps="1086840"/></proof>
                         </goal>
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.1.0.1" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="3.56" steps="1081815"/></proof>
                         </goal>
                         <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.1.0.1.0.2" expl="apply premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.53" steps="886147"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="2.60" steps="939000"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.79" steps="1170480"/></proof>
                     </goal>
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.94" steps="1170581"/></proof>
                     </goal>
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.79" steps="979826"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.95" steps="1170480"/></proof>
                     </goal>
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.79" steps="1170581"/></proof>
                     </goal>
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.87" steps="979826"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.54" steps="1006832"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.0.1" expl="false case (true case. apply premises)" proved="true">
              <proof prover="9"><result status="valid" time="1.44" steps="823276"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1" expl="false case (apply premises)" proved="true">
             <transf name="eliminate_definition" proved="true" >
              <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0" expl="false case (apply premises)" proved="true">
              <transf name="rewrite" proved="true" arg1="indic&#39;spec">
               <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0" expl="false case (apply premises)" proved="true">
               <transf name="rewrite" proved="true" arg1="indic&#39;spec">
                <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0" expl="false case (apply premises)" proved="true">
                <transf name="eliminate_if" proved="true" >
                 <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                  <proof prover="9"><result status="valid" time="1.66" steps="834961"/></proof>
                  </goal>
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.1" expl="false case (apply premises)" proved="true">
                  <transf name="assert" proved="true" arg1="(forall x: bitvec. not x= x -&gt; c_zero= c_one )">
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.1.0" expl="asserted formula" proved="true">
                   <transf name="instantiate" proved="true" arg1="h" arg2="(make_bv (fun (i:int) -&gt; getbv y @ (f @ i)) (width c))">
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
                    <proof prover="9"><result status="valid" time="1.59" steps="834965"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.1.1" expl="false case (apply premises)" proved="true">
                   <proof prover="9"><result status="valid" time="1.56" steps="834975"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.2" expl="false case (apply premises)" proved="true">
                  <transf name="assert" proved="true" arg1="(forall x: bitvec. not x= x -&gt; c_zero= c_one )
">
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.2.0" expl="asserted formula" proved="true">
                   <proof prover="9"><result status="valid" time="1.51" steps="834961"/></proof>
                   </goal>
                   <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.2.1" expl="false case (apply premises)" proved="true">
                   <transf name="instantiate" proved="true" arg1="h" arg2="(make_bv (fun (i:int) -&gt; getbv y @ (f @ i)) (width c))
">
                    <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.2.1.0" expl="false case (apply premises)" proved="true">
                    <transf name="apply" proved="true" arg1="Hinst">
                     <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.2.1.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="H" arg2="in" arg3="h1">
                      <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.2.1.0.0.0" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="h1">
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.0.1.1.0.0.0.0.3" expl="false case (apply premises)" proved="true">
                  <proof prover="9"><result status="valid" time="1.48" steps="834965"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="3.07" steps="917914"/></proof>
           </goal>
           <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.2" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="make_bv_length">
            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.2.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.2.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="3.09" steps="919184"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.0.2.1" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="2.80" steps="917914"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.79" steps="918088"/></proof>
          </goal>
          <goal name="with_permutation_get_ket&#39;vc.0.0.0.1.1.0.0.1.2" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.31"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="with_permutation_get_ket&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <transf name="apply" proved="true" arg1="make_bv_length">
     <goal name="with_permutation_get_ket&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="with_permutation_get_ket&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="3.07" steps="838735"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="with_permutation_get_ket&#39;vc.0.0.1.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.95" steps="837542"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="with_permutation_get_ket&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="with_permutation_get_ket&#39;vc.0.0.2.0" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.65" steps="836803"/></proof>
     </goal>
     <goal name="with_permutation_get_ket&#39;vc.0.0.2.1" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="bv_to_int_bound_gen">
      <goal name="with_permutation_get_ket&#39;vc.0.0.2.1.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="2.68" steps="837542"/></proof>
      </goal>
      <goal name="with_permutation_get_ket&#39;vc.0.0.2.1.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="make_bv_length">
       <goal name="with_permutation_get_ket&#39;vc.0.0.2.1.1.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.06" steps="661773"/></proof>
       </goal>
       <goal name="with_permutation_get_ket&#39;vc.0.0.2.1.1.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="with_permutation_get_ket&#39;vc.0.0.2.1.1.1.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="2.71" steps="838806"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="with_permutation_get_ket&#39;vc.0.0.2.1.1.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.75" steps="837542"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="with_permutation_get_ket&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.87"/></proof>
   </goal>
   <goal name="with_permutation_get_ket&#39;vc.0.2" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="with_permutation_get_ket&#39;vc.0.2.0" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="2.83" steps="836711"/></proof>
    </goal>
    <goal name="with_permutation_get_ket&#39;vc.0.2.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.84"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="with_permutation_get_ket_&#39;vc" expl="VC for with_permutation_get_ket_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="with_permutation_get_ket_&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.80" steps="705452"/></proof>
  </goal>
  <goal name="with_permutation_get_ket_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.08" steps="662383"/></proof>
  </goal>
  <goal name="with_permutation_get_ket_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.96" steps="784779"/></proof>
  </goal>
  <goal name="with_permutation_get_ket_&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.14" steps="739861"/></proof>
  </goal>
  <goal name="with_permutation_get_ket_&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.20" steps="739864"/></proof>
  </goal>
  <goal name="with_permutation_get_ket_&#39;vc.5" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(bv_to_ket (ket_to_bv x))" arg2="x" arg3="in" arg4="Ensures">
   <goal name="with_permutation_get_ket_&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(bv_to_int (int_to_bv i (width c)))" arg2="i" arg3="in" arg4="Ensures">
    <goal name="with_permutation_get_ket_&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="Ensures">
    </transf>
    </goal>
    <goal name="with_permutation_get_ket_&#39;vc.5.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="bv_to_int_to_bv">
     <goal name="with_permutation_get_ket_&#39;vc.5.0.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.01" steps="784634"/></proof>
     </goal>
     <goal name="with_permutation_get_ket_&#39;vc.5.0.1.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.23" steps="740357"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="with_permutation_get_ket_&#39;vc.5.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="2.15" steps="785292"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="with_permutation_kronecker&#39;vc" expl="VC for with_permutation_kronecker" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="with_permutation_kronecker&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="3.36" steps="942299"/></proof>
  </goal>
  <goal name="with_permutation_kronecker&#39;vc.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="with_permutation_kronecker&#39;vc.1.0" expl="precondition" proved="true">
   <transf name="exists" proved="true" arg1="(if e&#39;&lt; (n-k) then e&#39; + k else e&#39; - (n-k))">
    <goal name="with_permutation_kronecker&#39;vc.1.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="with_permutation_kronecker&#39;vc.1.0.0.0" proved="true">
     <proof prover="9"><result status="valid" time="3.16" steps="928307"/></proof>
     </goal>
     <goal name="with_permutation_kronecker&#39;vc.1.0.0.1" proved="true">
     <proof prover="9"><result status="valid" time="3.07" steps="928031"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation_kronecker&#39;vc.2" expl="assertion" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="with_permutation_kronecker&#39;vc.2.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec5">
    <goal name="with_permutation_kronecker&#39;vc.2.0.0" expl="assertion" proved="true">
    <transf name="replace" proved="true" arg1="(width c)" arg2="n">
     <goal name="with_permutation_kronecker&#39;vc.2.0.0.0" expl="assertion" proved="true">
     <proof prover="9"><result status="valid" time="1.54" steps="893469"/></proof>
     </goal>
     <goal name="with_permutation_kronecker&#39;vc.2.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="1.44" steps="893471"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="with_permutation_kronecker&#39;vc.2.0.1" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(width c)" arg2="n">
     <goal name="with_permutation_kronecker&#39;vc.2.0.1.0" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="Ensures">
     </transf>
     </goal>
     <goal name="with_permutation_kronecker&#39;vc.2.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="1.41" steps="893471"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation_kronecker&#39;vc.3" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width c)" arg2="n">
   <goal name="with_permutation_kronecker&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="3.04" steps="944315"/></proof>
   </goal>
   <goal name="with_permutation_kronecker&#39;vc.3.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="1.19" steps="744429"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation_kronecker&#39;vc.4" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width
   (with_permutation c (fun (i:int) -&gt; if i &lt; k then (i + n) - k else i - k)))" arg2="((n-k)+k)">
   <goal name="with_permutation_kronecker&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="3.65" steps="195848"/></proof>
   </goal>
   <goal name="with_permutation_kronecker&#39;vc.4.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="2.90" steps="948864"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation_kronecker&#39;vc.5" expl="precondition" proved="true">
  <transf name="exists" proved="true" arg1="n">
   <goal name="with_permutation_kronecker&#39;vc.5.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="with_permutation_kronecker&#39;vc.5.0.0" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures7" arg2="in" arg3="Ensures1">
     <goal name="with_permutation_kronecker&#39;vc.5.0.0.0" proved="true">
     <transf name="replace" proved="true" arg1="(width c)" arg2="n" arg3="in" arg4="Ensures1">
      <goal name="with_permutation_kronecker&#39;vc.5.0.0.0.0" proved="true">
      <transf name="apply" proved="true" arg1="Ensures1">
      </transf>
      </goal>
      <goal name="with_permutation_kronecker&#39;vc.5.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="1.24" steps="747043"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="with_permutation_kronecker&#39;vc.5.0.1" proved="true">
    <proof prover="9"><result status="valid" time="3.21" steps="952799"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation_kronecker&#39;vc.6" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(kronecker ant_d ant)" arg2="(bv_to_ket (concat1 (ket_to_bv ant_d) (ket_to_bv ant)))">
   <goal name="with_permutation_kronecker&#39;vc.6.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="i" arg2="(bv_to_int (int_to_bv i n))
">
    <goal name="with_permutation_kronecker&#39;vc.6.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="with_permutation_get_ket">
     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0" expl="precondition" proved="true">
     <transf name="replace" proved="true" arg1="(make_bv
     (fun (i1:int) -&gt;
       getbv (concat1 (ket_to_bv ant_d) (ket_to_bv ant))
       @ ((fun (i2:int) -&gt; if i2 &lt; k then (i2 + n) - k else i2 - k) @ i1))
     (width c))" arg2="(concat1  (ket_to_bv ant) (ket_to_bv ant_d))
">
      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0" expl="precondition" proved="true">
      <transf name="replace" proved="true" arg1="(path_sem c (bv_to_ket (concat1 (ket_to_bv ant) (ket_to_bv ant_d))))" arg2="(kronecker im im_d)
">
       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0" expl="precondition" proved="true">
       <transf name="replace" proved="true" arg1="(make_bv
    (fun (i1:int) -&gt;
      getbv (int_to_bv i n)
      @ ((fun (i2:int) -&gt; if i2 &lt; k then (i2 + n) - k else i2 - k) i1))
    (width c))" arg2="(concat1 (tpart (int_to_bv i n )(n-k)) (hpart (int_to_bv i n) (n-k)))
">
        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0" expl="precondition" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0" expl="precondition" proved="true">
         <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0" expl="precondition" proved="true">
          <transf name="apply" proved="true" arg1="mult_eq_t_rev">
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(rows im_d)" arg2="(power 2 (n-k))">
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(rows im)" arg2="(power 2 k)">
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="instantiate" proved="true" arg1="bv_to_int_hpart_rev" arg2="(concat1 (tpart (int_to_bv i n) (n-k)) (hpart (int_to_bv i n) (n-k))),k,(n-k)

">
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="Hinst">
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="instantiate" proved="true" arg1="bv_to_int_tpart_rev" arg2="(int_to_bv i n),(n-k),k">
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="Hinst">
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="(hpart
    (concat1 (tpart (int_to_bv i n) (n - k)) (hpart (int_to_bv i n) (n - k)))
    k)" arg2="(tpart (int_to_bv i n) (n - k))
">
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                  </transf>
                  </goal>
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="set_equal_bv">
                   <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="hpart_length">
                    <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="tpart_length">
                     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.52" steps="898209"/></proof>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.68" steps="949812"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0" proved="true">
                      <proof prover="9"><result status="valid" time="2.69" steps="949426"/></proof>
                      </goal>
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.1" proved="true">
                      <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.1.0" proved="true">
                       <proof prover="9"><result status="valid" time="1.66" steps="898202"/></proof>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.1.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.51" steps="949812"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.26" steps="747790"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="hpart_length" arg2="in" arg3="H">
                     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="hpart_value_b">
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="concat_value_left">
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.25" steps="747828"/></proof>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="tpart_length">
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                        <transf name="split_all_full" proved="true" >
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.0.0" proved="true">
                         <proof prover="9"><result status="valid" time="1.65" steps="898235"/></proof>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.0.1" proved="true">
                         <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.0.1.0" proved="true">
                          <proof prover="9"><result status="valid" time="1.67" steps="898251"/></proof>
                          </goal>
                          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="2.64" steps="949859"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.1" expl="rewrite premises" proved="true">
                        <transf name="split_all_full" proved="true" >
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.1.0" proved="true">
                         <proof prover="9"><result status="valid" time="2.62" steps="949473"/></proof>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.1.1" proved="true">
                         <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.1.1.0" proved="true">
                          <proof prover="9"><result status="valid" time="1.61" steps="898242"/></proof>
                          </goal>
                          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1.1.1.1" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="2.48" steps="949859"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.14" steps="747839"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.20" steps="747819"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.15"/></proof>
                 </goal>
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <transf name="replace" proved="true" arg1="( length1 (int_to_bv i n))" arg2="n">
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.94" steps="793934"/></proof>
                  </goal>
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.1" expl="equality hypothesis" proved="true">
                  <proof prover="6"><result status="valid" time="3.89" steps="211807"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="4.37" steps="1456360"/></proof>
               </goal>
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="4.74" steps="1456352"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="2.29" steps="793833"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="9"><result status="valid" time="2.35" steps="793844"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="instantiate" proved="true" arg1="bv_to_int_tpart_rev" arg2="(concat1 (tpart (int_to_bv i n) (n-k)) (hpart (int_to_bv i n) (n-k))),k,(n-k)">
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(rows im_d)" arg2="(power 2 (n-k))">
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="Hinst">
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(rows im)" arg2="(power 2 k)">
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="instantiate" proved="true" arg1="bv_to_int_hpart_rev" arg2="(int_to_bv i n),(n-k),k">
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="Hinst">
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="(tpart
    (concat1 (tpart (int_to_bv i n) (n - k)) (hpart (int_to_bv i n) (n - k)))
    k)" arg2="(hpart (int_to_bv i n) (n - k))">
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                  </transf>
                  </goal>
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="set_equal_bv">
                   <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="tpart_length">
                    <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="concat_length">
                     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="tpart_length">
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="hpart_length">
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="6"><result status="valid" time="3.89" steps="212266"/></proof>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.13" steps="793909"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.0" proved="true">
                       <proof prover="9"><result status="valid" time="2.02" steps="793909"/></proof>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.1" proved="true">
                       <transf name="split_all_full" proved="true" >
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.1.0" proved="true">
                        <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.1.0.0" proved="true">
                         <proof prover="9"><result status="valid" time="1.54" steps="898202"/></proof>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.49" steps="949812"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="concat_length">
                     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="tpart_length">
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.0.0" proved="true">
                       <proof prover="9"><result status="valid" time="1.51" steps="898195"/></proof>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.0.1" proved="true">
                       <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.0.1.0" proved="true">
                        <transf name="rewrite" proved="true" arg1="hpart_length">
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.0.1.0.0" proved="true">
                         <proof prover="9"><result status="valid" time="2.51" steps="949447"/></proof>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.48" steps="949426"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                        <proof prover="9"><result status="valid" time="2.46" steps="949812"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.1.0" proved="true">
                       <proof prover="9"><result status="valid" time="1.99" steps="793909"/></proof>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.1.1" proved="true">
                       <transf name="split_all_full" proved="true" >
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.1.1.0" proved="true">
                        <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.1.1.0.0" proved="true">
                         <proof prover="9"><result status="valid" time="1.56" steps="898202"/></proof>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.49" steps="949812"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="tpart_value_b">
                     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="concat_value_right">
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="tpart_length">
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="replace" proved="true" arg1="(length1 (int_to_bv i1 n) )" arg2="n">
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
                        <proof prover="9"><result status="valid" time="1.27" steps="747869"/></proof>
                        </goal>
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                        <proof prover="6"><result status="valid" time="3.88" steps="213139"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                       <transf name="replace" proved="true" arg1="( length1 (int_to_bv i1 n))" arg2="n">
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                        <proof prover="9"><result status="valid" time="2.00" steps="793987"/></proof>
                        </goal>
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
                        <proof prover="6"><result status="valid" time="4.37" steps="213139"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.0" proved="true">
                       <transf name="rewrite" proved="true" arg1="tpart_length">
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.0.0" proved="true">
                        <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.0.0.0" proved="true">
                         <proof prover="9"><result status="valid" time="1.57" steps="898245"/></proof>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.70" steps="949872"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.42" steps="949504"/></proof>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.61" steps="949872"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1" proved="true">
                       <transf name="rewrite" proved="true" arg1="tpart_length">
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0" proved="true">
                        <transf name="rewrite" proved="true" arg1="hpart_length">
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0" proved="true">
                         <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0" proved="true">
                          <transf name="rewrite" proved="true" arg1="tpart_length" arg2="in" arg3="H">
                           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0" proved="true">
                           <transf name="rewrite" proved="true" arg1="concat_length" arg2="in" arg3="H">
                            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0.0" proved="true">
                            <transf name="rewrite" proved="true" arg1="tpart_length" arg2="in" arg3="H">
                             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0.0.0" proved="true">
                             <transf name="rewrite" proved="true" arg1="hpart_length" arg2="in" arg3="H">
                              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0.0.0.0" proved="true">
                              <transf name="replace" proved="true" arg1="(length1 (int_to_bv i1 n))" arg2="n" arg3="in" arg4="H">
                               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0.0.0.0.0" proved="true">
                               <proof prover="9"><result status="valid" time="1.50" steps="898268"/></proof>
                               </goal>
                               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                               <proof prover="6"><result status="valid" time="3.74" steps="213118"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                              <proof prover="9"><result status="valid" time="2.70" steps="949518"/></proof>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                             <transf name="replace" proved="true" arg1="(length1 (int_to_bv i1 n))" arg2="n">
                              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                              <proof prover="9"><result status="valid" time="2.69" steps="949549"/></proof>
                              </goal>
                              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                              <proof prover="6"><result status="valid" time="4.02" steps="215488"/></proof>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="1.61" steps="898224"/></proof>
                            </goal>
                            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.1" expl="rewrite premises" proved="true">
                            <transf name="rewrite" proved="true" arg1="concat_length">
                             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                             <transf name="rewrite" proved="true" arg1="tpart_length" arg2="in" arg3="H">
                              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
                              <transf name="rewrite" proved="true" arg1="tpart_length">
                               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.1.0.0.0" expl="rewrite premises" proved="true">
                               <proof prover="0"><result status="valid" time="1.30"/></proof>
                               </goal>
                               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                               <transf name="replace" proved="true" arg1="((int_to_bv i1 n).length1)" arg2="n">
                                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.1.0.0.1.0" expl="rewrite premises" proved="true">
                                <proof prover="6"><result status="valid" time="0.35" steps="9711"/></proof>
                                </goal>
                                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.1.0.0.1.1" expl="equality hypothesis" proved="true">
                                <proof prover="6"><result status="valid" time="4.18" steps="212795"/></proof>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                              <transf name="split_vc" proved="true" >
                               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.1.0.1.0" expl="rewrite premises" proved="true">
                               <proof prover="9"><result status="valid" time="1.34" steps="898224"/></proof>
                               </goal>
                               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.0.1.1.0.1.1" expl="rewrite premises" proved="true">
                               <proof prover="0"><result status="valid" time="1.07"/></proof>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="2.57" steps="949872"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="2.66" steps="949479"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.1" expl="rewrite premises" proved="true">
                        <transf name="split_all_full" proved="true" >
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.1.0" proved="true">
                         <proof prover="9"><result status="valid" time="2.60" steps="949479"/></proof>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.1.1" proved="true">
                         <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
                          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.1.1.0" proved="true">
                          <proof prover="9"><result status="valid" time="1.46" steps="898231"/></proof>
                          </goal>
                          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1.1.1.1.1" expl="rewrite premises" proved="true">
                          <proof prover="9"><result status="valid" time="2.60" steps="949872"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="1.22" steps="747819"/></proof>
                     </goal>
                     <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2" expl="rewrite premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="concat_length">
                      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0" expl="rewrite premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.0" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="1.28" steps="747819"/></proof>
                       </goal>
                       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1" expl="rewrite premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="tpart_length" arg2="in" arg3="H">
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.0" expl="rewrite premises" proved="true">
                        <proof prover="0"><result status="valid" time="1.18"/></proof>
                        </goal>
                        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1" expl="rewrite premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.0" expl="rewrite premises" proved="true">
                         <proof prover="9"><result status="valid" time="1.19" steps="747819"/></proof>
                         </goal>
                         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1" expl="rewrite premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="concat_length">
                          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1.0" expl="rewrite premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="tpart_length">
                           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1.0.0" expl="rewrite premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="hpart_length">
                            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1.0.0.0" expl="rewrite premises" proved="true">
                            <transf name="replace" proved="true" arg1="(length1 (int_to_bv i1 n))" arg2="n">
                             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1.0.0.0.0" expl="rewrite premises" proved="true">
                             <proof prover="9"><result status="valid" time="1.98" steps="793983"/></proof>
                             </goal>
                             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1.0.0.0.1" expl="equality hypothesis" proved="true">
                             <proof prover="6"><result status="valid" time="4.44" steps="213139"/></proof>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1.0.0.1" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="2.29" steps="793962"/></proof>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1.0.1" expl="rewrite premises" proved="true">
                           <transf name="replace" proved="true" arg1="(length1 (int_to_bv i1 n))" arg2="n">
                            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1.0.1.0" expl="rewrite premises" proved="true">
                            <proof prover="9"><result status="valid" time="2.21" steps="793987"/></proof>
                            </goal>
                            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.1.1.1.0.1.1" expl="equality hypothesis" proved="true">
                            <proof prover="6"><result status="valid" time="3.88" steps="213139"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.17"/></proof>
                 </goal>
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <transf name="replace" proved="true" arg1="( length1 (int_to_bv i n))" arg2="n">
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.16" steps="793934"/></proof>
                  </goal>
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2.1" expl="equality hypothesis" proved="true">
                  <proof prover="6"><result status="valid" time="3.95" steps="211808"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="9"><result status="valid" time="2.21" steps="794329"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="4.89" steps="1456986"/></proof>
              </goal>
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.2.0" proved="true">
               <proof prover="9"><result status="valid" time="1.30" steps="747664"/></proof>
               </goal>
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.0.2.1" proved="true">
               <proof prover="9"><result status="valid" time="4.55" steps="1456925"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="2.28" steps="794329"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.30" steps="793823"/></proof>
          </goal>
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.29" steps="793797"/></proof>
          </goal>
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv_">
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(rows im_d * rows im)" arg2="(power 2 n)">
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
            <transf name="replace" proved="true" arg1="(ket_length
     (path_sem
      (with_permutation c
       (fun (i1:int) -&gt; if i1 &lt; k then (i1 + n) - k else i1 - k))
      (kronecker ant_d ant)))" arg2="n" arg3="in" arg4="H">
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.26" steps="747377"/></proof>
             </goal>
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
             <transf name="apply" proved="true" arg1="path_sem_ket_length">
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(width
   (with_permutation c
    (fun (i1:int) -&gt; if i1 &lt; k then (i1 + n) - k else i1 - k)))" arg2="(k+(n-k))">
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(k + (n - k))" arg2="((n - k) + k)">
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="kronecker_ket_l">
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.18" steps="793115"/></proof>
                 </goal>
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.31" steps="747491"/></proof>
                 </goal>
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.33" steps="747491"/></proof>
                 </goal>
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.0.0.0.3" expl="apply premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.40" steps="747491"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="9"><result status="valid" time="1.41" steps="747512"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.0.1" expl="equality hypothesis" proved="true">
               <proof prover="9"><result status="valid" time="3.28" steps="980616"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.0.1.1" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="3.28" steps="980590"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.1" expl="equality hypothesis" proved="true">
            <transf name="replace" proved="true" arg1="(rows im_d)" arg2="(power 2 (n-k))">
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.1.0" expl="equality hypothesis" proved="true">
             <transf name="replace" proved="true" arg1="(rows im)" arg2="(power 2 k)">
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.1.0.0" expl="equality hypothesis" proved="true">
              <proof prover="6"><result status="valid" time="4.79" steps="258330"/></proof>
              </goal>
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.1.0.1" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="1.91" steps="793833"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.0.1.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="2.29" steps="793844"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.10" steps="793448"/></proof>
           </goal>
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(ket_length
     (path_sem
      (with_permutation c
       (fun (i1:int) -&gt; if i1 &lt; k then (i1 + n) - k else i1 - k))
      (kronecker ant_d ant)))" arg2="n" arg3="in" arg4="H">
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.0" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.28" steps="747377"/></proof>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1" expl="equality hypothesis" proved="true">
            <transf name="apply" proved="true" arg1="path_sem_ket_length">
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(width
   (with_permutation c
    (fun (i1:int) -&gt; if i1 &lt; k then (i1 + n) - k else i1 - k)))" arg2="(k+(n-k))">
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(k + (n - k))" arg2="((n - k) + k)">
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="2.10" steps="793115"/></proof>
                </goal>
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.08" steps="747491"/></proof>
                </goal>
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.30" steps="747491"/></proof>
                </goal>
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.0.0.0.3" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="1.26" steps="747491"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="9"><result status="valid" time="1.28" steps="747512"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.0.1" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="3.08" steps="980616"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.0.3.2.1.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="2.99" steps="980590"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="2.07" steps="793797"/></proof>
         </goal>
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="2.33" steps="793823"/></proof>
         </goal>
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="3.20" steps="980746"/></proof>
          </goal>
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.3.1" expl="rewrite premises" proved="true">
          <transf name="replace" proved="true" arg1="(rows im * rows im_d)" arg2="(power 2 l)">
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.3.1.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="bv_to_int_bound_gen">
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.3.1.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="2.98" steps="978629"/></proof>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.3.1.0.1" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="3.21" steps="987674"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.0.3.1.1" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="2.40" steps="793848"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="set_equal_bv">
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="concat_length">
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="tpart_length">
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="hpart&#39;spec4">
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="3.81" steps="1133750"/></proof>
              </goal>
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.57" steps="948492"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="3.23" steps="986485"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="3.20" steps="981900"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.14" steps="793412"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="eliminate_if" proved="true" >
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value_left">
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="tpart_value_b">
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="1.30" steps="762086"/></proof>
                  </goal>
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.21" steps="807583"/></proof>
                  </goal>
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.41" steps="991833"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.37" steps="992277"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value_right">
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="hpart_value_b">
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.19"/></proof>
                  </goal>
                  <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.44" steps="992294"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.43" steps="995562"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="3.24" steps="985290"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.02" steps="793637"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.1.0" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="3.22" steps="985290"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.2" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.2.0" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.28" steps="747490"/></proof>
             </goal>
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.2.1" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.2.1.0" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="3.23" steps="985290"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.0.1.1.0.0.2.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.12" steps="793637"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="3.19" steps="980609"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="set_equal_bv">
        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="concat_length">
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="3.23" steps="987952"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="3.33" steps="981668"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="2.15" steps="793449"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="eliminate_if" proved="true" >
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="concat_value_right">
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="concat_value_left">
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.21"/></proof>
                </goal>
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="3.36" steps="987984"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="3.36" steps="992850"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="concat_value_left">
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="concat_value_right">
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.15"/></proof>
                </goal>
                <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="3.38" steps="992973"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="3.36" steps="987978"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="3.30" steps="985150"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.24" steps="793639"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="3.40" steps="985150"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.2" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.2.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.34" steps="747490"/></proof>
           </goal>
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.2.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.2.1.0" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="3.34" steps="985150"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="with_permutation_kronecker&#39;vc.6.0.0.0.1.0.1.0.2.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.18" steps="793639"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="with_permutation_kronecker&#39;vc.6.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="3.22" steps="985009"/></proof>
     </goal>
     <goal name="with_permutation_kronecker&#39;vc.6.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="3.39" steps="983295"/></proof>
     </goal>
     <goal name="with_permutation_kronecker&#39;vc.6.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="3.24" steps="980224"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="with_permutation_kronecker&#39;vc.6.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv_">
     <goal name="with_permutation_kronecker&#39;vc.6.0.1.0" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="1.33" steps="747489"/></proof>
     </goal>
     <goal name="with_permutation_kronecker&#39;vc.6.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.11" steps="793448"/></proof>
     </goal>
     <goal name="with_permutation_kronecker&#39;vc.6.0.1.2" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="(ket_length
     (path_sem      (with_permutation c
       (fun (i1:int) -&gt; if i1 &lt; k then (i1 + n) - k else i1 - k))
      (kronecker ant_d ant)))" arg2="n" arg3="in" arg4="H
">
      <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.0" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.29" steps="747377"/></proof>
      </goal>
      <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1" expl="equality hypothesis" proved="true">
      <transf name="assert" proved="true" arg1="(forall x: matrix complex. is_a_ket_l x n -&gt; ket_length x = n)
">
       <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.0" expl="asserted formula" proved="true">
       <proof prover="9"><result status="valid" time="2.24" steps="793888"/></proof>
       </goal>
       <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="h">
        <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="path_sem_ket_l">
         <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.0" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec5">
           <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="3.79" steps="1129242"/></proof>
           </goal>
           <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(width c)" arg2="n">
            <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="Ensures16">
            </transf>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="9"><result status="valid" time="1.65" steps="897956"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.1" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec5">
           <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.65" steps="897963"/></proof>
           </goal>
           <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(width c)" arg2="n">
            <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="Ensures16">
            </transf>
            </goal>
            <goal name="with_permutation_kronecker&#39;vc.6.0.1.2.1.1.0.1.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="9"><result status="valid" time="1.67" steps="897956"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="with_permutation_kronecker&#39;vc.6.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="3.23" steps="980293"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation_kronecker&#39;vc.7" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures">
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="with_permutation_kronecker_gen&#39;vc" expl="VC for with_permutation_kronecker_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="with_permutation_kronecker_gen&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="with_permutation_kronecker">
   <goal name="with_permutation_kronecker_gen&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.07" steps="643246"/></proof>
   </goal>
   <goal name="with_permutation_kronecker_gen&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.02" steps="643255"/></proof>
   </goal>
   <goal name="with_permutation_kronecker_gen&#39;vc.0.2" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.01" steps="643246"/></proof>
   </goal>
   <goal name="with_permutation_kronecker_gen&#39;vc.0.3" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.02" steps="643246"/></proof>
   </goal>
   <goal name="with_permutation_kronecker_gen&#39;vc.0.4" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.02" steps="643246"/></proof>
   </goal>
   <goal name="with_permutation_kronecker_gen&#39;vc.0.5" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.03" steps="643246"/></proof>
   </goal>
   <goal name="with_permutation_kronecker_gen&#39;vc.0.6" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.05" steps="643246"/></proof>
   </goal>
   <goal name="with_permutation_kronecker_gen&#39;vc.0.7" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.05" steps="643246"/></proof>
   </goal>
   <goal name="with_permutation_kronecker_gen&#39;vc.0.8" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.06" steps="643246"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutation_three_blocks&#39;vc" expl="VC for permutation_three_blocks" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permutation_three_blocks&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
   <goal name="permutation_three_blocks&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
    <goal name="permutation_three_blocks&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
     <goal name="permutation_three_blocks&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
      <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec4">
        <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="bv_to_ket_eq">
         <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="3.74" steps="988395"/></proof>
          </goal>
          <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="3.41" steps="974595"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="3.36" steps="974510"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.30" steps="820334"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
            <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
             <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="case" proved="true" arg1="(i &lt; n1)">
               <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
               <transf name="rewrite" proved="true" arg1="concat_value_left">
                <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value_left">
                 <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="concat_value_left">
                  <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="concat_value_left">
                   <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                   <proof prover="9"><result status="valid" time="2.33" steps="841654"/></proof>
                   </goal>
                   <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.24" steps="820403"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.25" steps="955137"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.23" steps="821058"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="3.44" steps="955825"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
               <transf name="case" proved="true" arg1="(i &lt; n1+n3)">
                <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0" expl="false case (true case. apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value_right">
                 <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0" expl="false case (true case. apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="concat_value_left">
                  <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0" expl="false case (true case. apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="concat_value_right">
                   <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                   <proof prover="0"><result status="valid" time="1.15"/></proof>
                   </goal>
                   <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.05" steps="820442"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.38" steps="955200"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.38" steps="956734"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1" expl="false case (apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value_left">
                 <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0" expl="false case (apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="concat_value_right">
                  <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0" expl="false case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="concat_value_right">
                   <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.0" expl="false case (apply premises)" proved="true">
                   <proof prover="0"><result status="valid" time="1.18"/></proof>
                   </goal>
                   <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.21" steps="956442"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.18" steps="821343"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="3.07" steps="955481"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              <transf name="rewrite" proved="true" arg1="concat_value">
               <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="concat_value">
                <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value">
                 <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="concat_value">
                  <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="eliminate_if" proved="true" >
                   <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.48" steps="993180"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.48" steps="852640"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.43" steps="992736"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.43" steps="852673"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.4" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.30" steps="990594"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.5" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.26" steps="993133"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.6" expl="apply premises" proved="true">
                    <proof prover="0"><result status="valid" time="1.18"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.7" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.45" steps="852675"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.8" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.25" steps="852682"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.9" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.27" steps="990546"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.10" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.29" steps="993163"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.11" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.28" steps="852659"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.12" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.30" steps="852682"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.13" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.36" steps="990689"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.14" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.37" steps="990644"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.15" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.30" steps="853140"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.16" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.33" steps="853182"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.17" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.35" steps="806520"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.18" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.30" steps="853205"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.19" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.30" steps="853166"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.20" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.27" steps="853156"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.21" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.26" steps="853205"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.22" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.25" steps="853216"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.23" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.34" steps="853222"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.24" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.49" steps="853183"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.25" expl="apply premises" proved="true">
                    <proof prover="0"><result status="valid" time="1.20"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.26" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.44" steps="853210"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.27" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.33" steps="853225"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.28" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.49" steps="991135"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.29" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.42" steps="991103"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.30" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.47" steps="993351"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.31" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.46" steps="806579"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.32" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.46" steps="785967"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.33" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.52" steps="806582"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.34" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.40" steps="990687"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.35" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.34" steps="853672"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.36" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.39" steps="853717"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.37" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.42" steps="853337"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.38" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.42" steps="853338"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.39" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.43" steps="853687"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.40" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.38" steps="853290"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.41" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.39" steps="853331"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.42" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.39" steps="853344"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.43" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.38" steps="853341"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.44" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.36" steps="853313"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.45" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.49" steps="992533"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.46" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.36" steps="991261"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.47" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.37" steps="853393"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.48" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.40" steps="786019"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.49" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.43" steps="785979"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.50" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.42" steps="992164"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.51" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.46" steps="990772"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.52" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="3.56" steps="990316"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.53" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.45" steps="785720"/></proof>
                    </goal>
                    <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.54" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="1.40" steps="785666"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="3.11" steps="974520"/></proof>
               </goal>
               <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="3.09" steps="974552"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.31" steps="773983"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="3.15" steps="977951"/></proof>
              </goal>
              <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="3.21" steps="977983"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="2.19" steps="841241"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.29" steps="773936"/></proof>
        </goal>
        <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="set_bijective1">
         <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="3.84" steps="1075381"/></proof>
         </goal>
         <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.2.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="3.93" steps="1081280"/></proof>
         </goal>
         <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.2.2" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.2.2.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.2.2.0.0" expl="apply premises" proved="true">
           <transf name="exists" proved="true" arg1="(if e&#39; &lt; n1 then e&#39; else if e&#39; &lt; (n1 + n2) then e&#39; + n3 else e&#39; - n2)">
            <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.2.2.0.0.0" proved="true">
            <proof prover="9"><result status="valid" time="3.72" steps="1049087"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="permutation_three_blocks&#39;vc.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="3.80" steps="988399"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="insert_qbits&#39;vc" expl="VC for insert_qbits" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert_qbits&#39;vc.0" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="insert_qbits&#39;vc.0.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_mem_to_fset">
    <goal name="insert_qbits&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="insert_qbits&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="eliminate_if" proved="true" >
      <goal name="insert_qbits&#39;vc.0.0.0.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="insert_qbits&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="3.18" steps="929812"/></proof>
       </goal>
       <goal name="insert_qbits&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.17" steps="802853"/></proof>
       </goal>
       <goal name="insert_qbits&#39;vc.0.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.22" steps="802872"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="3.20" steps="921825"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.1" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
   <goal name="insert_qbits&#39;vc.1.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="insert_qbits&#39;vc.1.0.0" expl="precondition" proved="true">
    <transf name="exists" proved="true" arg1="(if e&#39; &lt; k then e&#39; else if e&#39; &lt; k+i then e&#39; + n-k else (e&#39; - i) )">
     <goal name="insert_qbits&#39;vc.1.0.0.0" proved="true">
     <proof prover="9"><result status="valid" time="3.03" steps="925163"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits&#39;vc.1.1" expl="equality hypothesis" proved="true">
   <proof prover="0"><result status="valid" time="1.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.2" expl="assertion" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="insert_qbits&#39;vc.2.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec5">
    <goal name="insert_qbits&#39;vc.2.0.0" expl="assertion" proved="true">
    <proof prover="9"><result status="valid" time="3.89" steps="1095079"/></proof>
    </goal>
    <goal name="insert_qbits&#39;vc.2.0.1" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
     <goal name="insert_qbits&#39;vc.2.0.1.0" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="Ensures">
     </transf>
     </goal>
     <goal name="insert_qbits&#39;vc.2.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="3.97" steps="1095079"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.3" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
   <goal name="insert_qbits&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="3.20" steps="924925"/></proof>
   </goal>
   <goal name="insert_qbits&#39;vc.3.1" expl="equality hypothesis" proved="true">
   <proof prover="0"><result status="valid" time="1.12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="insert_qbits&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="insert_qbits&#39;vc.4.0.0" expl="VC for insert_qbits" proved="true">
    <proof prover="9"><result status="valid" time="2.27" steps="806511"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.23" steps="747278"/></proof>
  </goal>
  <goal name="insert_qbits&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="insert_qbits&#39;vc.6.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_bijective1">
    <goal name="insert_qbits&#39;vc.6.0.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="4.04" steps="1101340"/></proof>
    </goal>
    <goal name="insert_qbits&#39;vc.6.0.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="4.25" steps="1107145"/></proof>
    </goal>
    <goal name="insert_qbits&#39;vc.6.0.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="insert_qbits&#39;vc.6.0.2.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="insert_qbits&#39;vc.6.0.2.0.0" expl="apply premises" proved="true">
      <transf name="exists" proved="true" arg1="(if e&#39; &lt; k then e&#39; else if e&#39; &lt; (k + i) then e&#39; + n -k else e&#39; - i)">
       <goal name="insert_qbits&#39;vc.6.0.2.0.0.0" proved="true">
       <proof prover="9"><result status="valid" time="3.69" steps="1080426"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="3.04" steps="932829"/></proof>
  </goal>
  <goal name="insert_qbits&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.98" steps="932787"/></proof>
  </goal>
  <goal name="insert_qbits&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.91" steps="932890"/></proof>
  </goal>
  <goal name="insert_qbits&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.92" steps="932952"/></proof>
  </goal>
  <goal name="insert_qbits&#39;vc.11" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures7">
   <goal name="insert_qbits&#39;vc.11.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="parallel_angle">
    <goal name="insert_qbits&#39;vc.11.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
     <goal name="insert_qbits&#39;vc.11.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="insert_qbits&#39;vc.11.0.0.1" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="insert_qbits&#39;vc.11.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="insert_qbits&#39;vc.11.0.0.1.0.0" expl="rewrite premises" proved="true">
       <transf name="rewrite" proved="true" arg1="ids&#39;spec2">
        <goal name="insert_qbits&#39;vc.11.0.0.1.0.0.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.44" steps="898610"/></proof>
        </goal>
        <goal name="insert_qbits&#39;vc.11.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.47" steps="898619"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.12" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures7">
   <goal name="insert_qbits&#39;vc.12.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="insert_qbits&#39;vc.12.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(c_inv_func_int
   (fun (j1:int) -&gt;
     if j1 &lt; k then j1 else if j1 &lt; n then j1 + i else (j1 - n) + k)
   (width (parallel c (ids i))) @ j)" arg2="j">
     <goal name="insert_qbits&#39;vc.12.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
      <goal name="insert_qbits&#39;vc.12.0.0.0.0" expl="postcondition" proved="true">
      <transf name="eliminate_if" proved="true" >
       <goal name="insert_qbits&#39;vc.12.0.0.0.0.0" expl="VC for insert_qbits" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="insert_qbits&#39;vc.12.0.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="3.09" steps="961621"/></proof>
        </goal>
        <goal name="insert_qbits&#39;vc.12.0.0.0.0.0.1" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.03" steps="811369"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits&#39;vc.12.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
      <goal name="insert_qbits&#39;vc.12.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures24">
       <goal name="insert_qbits&#39;vc.12.0.0.1.0.0" expl="equality hypothesis" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="insert_qbits&#39;vc.12.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="2.01" steps="797441"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits&#39;vc.12.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.03" steps="797696"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits&#39;vc.12.0.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="2.18" steps="811339"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits&#39;vc.12.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="2.05" steps="797683"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.13" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures8">
   <goal name="insert_qbits&#39;vc.13.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="insert_qbits&#39;vc.13.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(c_inv_func_int
   (fun (j1:int) -&gt;
     if j1 &lt; k then j1 else if j1 &lt; n then j1 + i else (j1 - n) + k)
   (width (parallel c (ids i))) @ j)" arg2="(j-i)">
     <goal name="insert_qbits&#39;vc.13.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
      <goal name="insert_qbits&#39;vc.13.0.0.0.0" expl="postcondition" proved="true">
      <transf name="eliminate_if" proved="true" >
       <goal name="insert_qbits&#39;vc.13.0.0.0.0.0" expl="VC for insert_qbits" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="insert_qbits&#39;vc.13.0.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="3.15" steps="962361"/></proof>
        </goal>
        <goal name="insert_qbits&#39;vc.13.0.0.0.0.0.1" expl="postcondition" proved="true">
        <proof prover="9"><result status="valid" time="2.01" steps="811568"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits&#39;vc.13.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
      <goal name="insert_qbits&#39;vc.13.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures25">
       <goal name="insert_qbits&#39;vc.13.0.0.1.0.0" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="3.29" steps="946425"/></proof>
       </goal>
       <goal name="insert_qbits&#39;vc.13.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.07" steps="797993"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits&#39;vc.13.0.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="2.18" steps="811647"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits&#39;vc.13.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="2.10" steps="798014"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.14" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures9">
   <goal name="insert_qbits&#39;vc.14.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="insert_qbits&#39;vc.14.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(c_inv_func_int
   (fun (j1:int) -&gt;
     if j1 &lt; k then j1 else if j1 &lt; n then j1 + i else (j1 - n) + k)
   (width (parallel c (ids i))) @ j)" arg2="(j+n-k)">
     <goal name="insert_qbits&#39;vc.14.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
      <goal name="insert_qbits&#39;vc.14.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(if ((j + n) - k) &lt; width c
   then basis_ket c
        (fun (i1:int) -&gt;
          x
          @ (if i1 &lt; k then i1 else if i1 &lt; n then i1 + i else (i1 - n) + k))
        y ((j + n) - k)
   else basis_ket (ids i)
        (fun (k1:int) -&gt;
          (fun (i1:int) -&gt;
            x
            @ (if i1 &lt; k then i1 else if i1 &lt; n then i1 + i else (i1 - n) + k))
          @ (k1 + width c))
        (fun (k1:int) -&gt; y @ (k1 + range c)) (((j + n) - k) - width c))" arg2="(basis_ket (ids i)
        (fun (k1:int) -&gt;
          (fun (i1:int) -&gt;
            x
            @ (if i1 &lt; k then i1 else if i1 &lt; n then i1 + i else (i1 - n) + k))
          @ (k1 + width c))
        (fun (k1:int) -&gt; y @ (k1 + range c)) (((j + n) - k) - width c))">
       <goal name="insert_qbits&#39;vc.14.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="ids&#39;spec3">
          <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <proof prover="9"><result status="valid" time="2.76" steps="951603"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.64" steps="899404"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits&#39;vc.14.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="assert" proved="true" arg1="(width c &lt;= j+n-k)">
        <goal name="insert_qbits&#39;vc.14.0.0.0.0.1.0" expl="asserted formula" proved="true">
        <proof prover="9"><result status="valid" time="2.21" steps="797908"/></proof>
        </goal>
        <goal name="insert_qbits&#39;vc.14.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
        <transf name="eliminate_if" proved="true" >
         <goal name="insert_qbits&#39;vc.14.0.0.0.0.1.1.0" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="insert_qbits&#39;vc.14.0.0.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
          <proof prover="9"><result status="valid" time="1.36" steps="765949"/></proof>
          </goal>
          <goal name="insert_qbits&#39;vc.14.0.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
          <transf name="compute_specified" proved="true" >
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits&#39;vc.14.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="c_inv_func_int&#39;def">
      <goal name="insert_qbits&#39;vc.14.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="assert" proved="true" arg1="((c_inverse
   (fun (j1:int) -&gt;
     if j1 &lt; k then j1 else if j1 &lt; n then j1 + i else (j1 - n) + k)
   (width (parallel c (ids i))) @ j) = ( (fun (j1:int) -&gt;
     if j1 &lt; k then j1 else if j1 &lt; k+i then j1 + n-k else (j1 - i) )
   @ j))">
       <goal name="insert_qbits&#39;vc.14.0.0.1.0.0" expl="asserted formula" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="unic_inverse_c">
         <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="set_bijective1">
           <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="3.66" steps="1084898"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="3.69" steps="1085846"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0.0.2.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
             <transf name="exists" proved="true" arg1="(if e&#39; &lt; k then e&#39; else if e&#39; &lt; (k + i) then e&#39; + n -k else e&#39; - i)">
              <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.0.0.2.0.0.0" proved="true">
              <proof prover="9"><result status="valid" time="3.88" steps="1085936"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="eliminate_if" proved="true" >
            <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.41" steps="765432"/></proof>
             </goal>
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="2.18" steps="811929"/></proof>
             </goal>
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.31" steps="765441"/></proof>
             </goal>
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.34" steps="765553"/></proof>
             </goal>
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0.4" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.33" steps="765558"/></proof>
             </goal>
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0.5" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.39" steps="765555"/></proof>
             </goal>
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0.6" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.40" steps="765550"/></proof>
             </goal>
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0.7" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.38" steps="765553"/></proof>
             </goal>
             <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.1.0.0.0.8" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="2.26" steps="812249"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits&#39;vc.14.0.0.1.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="2.27" steps="798328"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits&#39;vc.14.0.0.1.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="h">
        <goal name="insert_qbits&#39;vc.14.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits&#39;vc.14.0.0.1.0.1.0.0" expl="equality hypothesis" proved="true">
         <proof prover="9"><result status="valid" time="2.18" steps="798883"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits&#39;vc.14.0.0.1.1" expl="rewrite premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="insert_qbits&#39;vc.14.0.0.1.1.0" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="set_bijective1">
        <goal name="insert_qbits&#39;vc.14.0.0.1.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits&#39;vc.14.0.0.1.1.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="3.73" steps="1084898"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits&#39;vc.14.0.0.1.1.0.1" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits&#39;vc.14.0.0.1.1.0.1.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="3.70" steps="1085846"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits&#39;vc.14.0.0.1.1.0.2" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits&#39;vc.14.0.0.1.1.0.2.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="insert_qbits&#39;vc.14.0.0.1.1.0.2.0.0" expl="apply premises" proved="true">
          <transf name="exists" proved="true" arg1="(if e&#39; &lt; k then e&#39; else if e&#39; &lt; (k + i) then e&#39; + n -k else e&#39; - i)">
           <goal name="insert_qbits&#39;vc.14.0.0.1.1.0.2.0.0.0" proved="true">
           <proof prover="9"><result status="valid" time="3.72" steps="1085936"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits&#39;vc.14.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="2.26" steps="798328"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="insert_qbits_gen&#39;vc" expl="VC for insert_qbits_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert_qbits_gen&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.10" steps="646972"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.10" steps="646984"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.07" steps="646990"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.92" steps="709671"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.94" steps="709752"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.95" steps="709934"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.87" steps="709938"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="insert_qbits_gen&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(i = 0)">
    <goal name="insert_qbits_gen&#39;vc.7.0.0" expl="true case (postcondition)" proved="true">
    <transf name="replace" proved="true" arg1="result" arg2="c">
     <goal name="insert_qbits_gen&#39;vc.7.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="apply" proved="true" arg1="ang_ind_invariant">
      <goal name="insert_qbits_gen&#39;vc.7.0.0.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="insert_qbits_gen&#39;vc.7.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="insert_qbits_gen&#39;vc.7.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="2.29" steps="851142"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits_gen&#39;vc.7.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.35" steps="800192"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_gen&#39;vc.7.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="2.24" steps="849907"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_gen&#39;vc.7.0.1" expl="false case (postcondition)" proved="true">
    <transf name="apply" proved="true" arg1="H4">
     <goal name="insert_qbits_gen&#39;vc.7.0.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.50" steps="814114"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.8" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H2">
   <goal name="insert_qbits_gen&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="insert_qbits_gen&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H4">
     <goal name="insert_qbits_gen&#39;vc.8.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="insert_qbits_gen&#39;vc.8.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.34" steps="800311"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits_gen&#39;vc.8.1" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(j-i)" arg2="j">
    <goal name="insert_qbits_gen&#39;vc.8.1.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="result" arg2="c">
     <goal name="insert_qbits_gen&#39;vc.8.1.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="basis_ket_invariant">
      <goal name="insert_qbits_gen&#39;vc.8.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="2.98" steps="848031"/></proof>
      </goal>
      <goal name="insert_qbits_gen&#39;vc.8.1.0.0.1" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.19" steps="666108"/></proof>
      </goal>
      <goal name="insert_qbits_gen&#39;vc.8.1.0.0.2" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.98" steps="708976"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_gen&#39;vc.8.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="1.25" steps="666110"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_gen&#39;vc.8.1.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="1.32" steps="679226"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="insert_qbits_gen&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(i = 0)">
    <goal name="insert_qbits_gen&#39;vc.9.0.0" expl="true case (postcondition)" proved="true">
    <transf name="replace" proved="true" arg1="result" arg2="c">
     <goal name="insert_qbits_gen&#39;vc.9.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="replace" proved="true" arg1="(j-i)" arg2="j">
      <goal name="insert_qbits_gen&#39;vc.9.0.0.0.0" expl="true case (postcondition)" proved="true">
      <transf name="apply" proved="true" arg1="basis_ket_invariant">
       <goal name="insert_qbits_gen&#39;vc.9.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="3.62" steps="996623"/></proof>
       </goal>
       <goal name="insert_qbits_gen&#39;vc.9.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.42" steps="800680"/></proof>
       </goal>
       <goal name="insert_qbits_gen&#39;vc.9.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.44" steps="850695"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits_gen&#39;vc.9.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="1.43" steps="800696"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_gen&#39;vc.9.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="2.39" steps="850345"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_gen&#39;vc.9.0.1" expl="false case (postcondition)" proved="true">
    <transf name="apply" proved="true" arg1="H4">
     <goal name="insert_qbits_gen&#39;vc.9.0.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.61" steps="814753"/></proof>
     </goal>
     <goal name="insert_qbits_gen&#39;vc.9.0.1.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.44" steps="800695"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.91" steps="837314"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="insert_qbits_path_sem&#39;vc" expl="VC for insert_qbits_path_sem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert_qbits_path_sem&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="3.33" steps="950017"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="insert_qbits_path_sem&#39;vc.1.0" expl="precondition" proved="true">
   <transf name="exists" proved="true" arg1="(if e&#39; &lt; k then e&#39; else if e&#39; &lt; k+i then e&#39; + n-k else (e&#39; - i) )">
    <goal name="insert_qbits_path_sem&#39;vc.1.0.0" proved="true">
    <proof prover="9"><result status="valid" time="3.22" steps="935350"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="3.37" steps="952682"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="insert_qbits_path_sem&#39;vc.3.0" expl="precondition" proved="true">
   <transf name="exists" proved="true" arg1="(if e&#39; &lt; k then e&#39; else if e&#39; &lt; n then e&#39; + i else (e&#39; - n) + k)">
    <goal name="insert_qbits_path_sem&#39;vc.3.0.0" proved="true">
    <proof prover="9"><result status="valid" time="3.24" steps="937710"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.4" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="( (width (parallel c (ids i))))" arg2="(n+i)">
   <goal name="insert_qbits_path_sem&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures10">
   </transf>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.4.1" expl="equality hypothesis" proved="true">
   <proof prover="0"><result status="valid" time="1.10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.5" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="insert_qbits_path_sem&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="3.20" steps="938132"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.35" steps="751644"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.14" steps="798407"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.30" steps="751778"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.9" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.16" steps="798020"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.10" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.16" steps="798548"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.11" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.28" steps="752409"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.12" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.30" steps="753172"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.13" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.28" steps="753677"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.14" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.31" steps="753955"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.15" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
   <goal name="insert_qbits_path_sem&#39;vc.15.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="3.54" steps="1015247"/></proof>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.15.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="4.20" steps="1062492"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.16" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="( (width (parallel c (ids i))))" arg2="(n+i)">
   <goal name="insert_qbits_path_sem&#39;vc.16.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="insert_qbits_path_sem&#39;vc.16.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
     <goal name="insert_qbits_path_sem&#39;vc.16.0.0.0" expl="precondition" proved="true">
     <proof prover="9"><result status="valid" time="2.65" steps="969320"/></proof>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.16.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.79" steps="969716"/></proof>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.16.0.0.2" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="Ensures94">
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.16.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="4.12" steps="1069011"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.17" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="insert_qbits_path_sem&#39;vc.17.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec4">
    <goal name="insert_qbits_path_sem&#39;vc.17.0.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="bv_to_ket_eq">
      <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="make_bv_length">
       <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="1.27"/></proof>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="1.30"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.0.1.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="1.30"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.71" steps="969506"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
        <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
          <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="eliminate_if" proved="true" >
           <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="concat_value_left">
             <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="0"><result status="valid" time="1.19"/></proof>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.83" steps="979739"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="concat_value_right">
             <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="concat_value_left">
              <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="hpart_length">
               <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="1.19"/></proof>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="1.67" steps="925073"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.82" steps="980097"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.81" steps="980100"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="concat_value_right">
             <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="concat_value_right">
              <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="htpart_value_b">
               <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="hpart_length">
                <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.22"/></proof>
                </goal>
                <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="1.59" steps="925077"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="1.68" steps="925077"/></proof>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="2.74" steps="979375"/></proof>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.0.3" expl="rewrite premises" proved="true">
               <transf name="rewrite" proved="true" arg1="hpart_length">
                <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.0.3.0" expl="rewrite premises" proved="true">
                <proof prover="0"><result status="valid" time="1.24"/></proof>
                </goal>
                <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.0.3.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="1.64" steps="925077"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
              <transf name="rewrite" proved="true" arg1="hpart_length">
               <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.1.0" expl="rewrite premises" proved="true">
               <transf name="rewrite" proved="true" arg1="tpart_length">
                <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.1.0.0" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="htpart_length">
                 <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.1.0.0.0" expl="rewrite premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.26"/></proof>
                 </goal>
                 <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.1.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.64" steps="925077"/></proof>
                 </goal>
                 <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.1.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="2.68" steps="979375"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.1.0.1" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="2.73" steps="979796"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.0.1.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="1.69" steps="925077"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="1.28"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
            <proof prover="0"><result status="valid" time="1.35"/></proof>
            </goal>
            <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="0"><result status="valid" time="1.37"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="2.72" steps="969693"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.35"/></proof>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.39"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.2" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
         <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.52" steps="910683"/></proof>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.2.1.0.0" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="1.32"/></proof>
           </goal>
           <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.2.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="1.36"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.17.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="2.69" steps="969693"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.17.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.62" steps="910665"/></proof>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.17.0.2" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
     <goal name="insert_qbits_path_sem&#39;vc.17.0.2.0" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="set_bijective1">
      <goal name="insert_qbits_path_sem&#39;vc.17.0.2.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="2.12"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.17.0.2.0.1" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="2.37"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.17.0.2.0.2" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="insert_qbits_path_sem&#39;vc.17.0.2.0.2.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="insert_qbits_path_sem&#39;vc.17.0.2.0.2.0.0" expl="apply premises" proved="true">
        <transf name="exists" proved="true" arg1="(if e&#39; &lt; k then e&#39; else if e&#39; &lt; k+i then e&#39; + n-k else (e&#39; - i) )">
         <goal name="insert_qbits_path_sem&#39;vc.17.0.2.0.2.0.0.0" proved="true">
         <proof prover="0"><result status="valid" time="2.07"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.17.0.2.1" expl="equality hypothesis" proved="true">
     <proof prover="0"><result status="valid" time="1.29"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.17.0.3" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
     <goal name="insert_qbits_path_sem&#39;vc.17.0.3.0" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.53" steps="910649"/></proof>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.17.0.3.1" expl="equality hypothesis" proved="true">
     <proof prover="0"><result status="valid" time="1.32"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.18" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ket_to_bv_concat">
   <goal name="insert_qbits_path_sem&#39;vc.18.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ket_to_bv_concat">
    <goal name="insert_qbits_path_sem&#39;vc.18.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
     <goal name="insert_qbits_path_sem&#39;vc.18.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
      <goal name="insert_qbits_path_sem&#39;vc.18.0.0.0.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_kron_">
       <goal name="insert_qbits_path_sem&#39;vc.18.0.0.0.0.0" expl="precondition" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_eq">
        <goal name="insert_qbits_path_sem&#39;vc.18.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="2.11" steps="827575"/></proof>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.18.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="1.16"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.18.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="4.23" steps="1081576"/></proof>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.18.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="2.30" steps="837190"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.19" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="3.41" steps="1024061"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.20" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.10" steps="756555"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.21" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.19" steps="806139"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.22" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.35" steps="757164"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.23" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="2.19" steps="807042"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.24" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.24" steps="757672"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.25" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
   <goal name="insert_qbits_path_sem&#39;vc.25.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="insert_qbits_path_sem&#39;vc.25.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="set_bijective1">
     <goal name="insert_qbits_path_sem&#39;vc.25.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert_qbits_path_sem&#39;vc.25.0.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="insert_qbits_path_sem&#39;vc.25.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="2.11"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.25.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert_qbits_path_sem&#39;vc.25.0.0.1.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="insert_qbits_path_sem&#39;vc.25.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="2.42"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.25.0.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert_qbits_path_sem&#39;vc.25.0.0.2.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="insert_qbits_path_sem&#39;vc.25.0.0.2.0.0" expl="apply premises" proved="true">
       <transf name="exists" proved="true" arg1="(if e&#39; &lt; k then e&#39; else if e&#39; &lt; i + k then e&#39; + n-k else (e&#39; - i) )">
        <goal name="insert_qbits_path_sem&#39;vc.25.0.0.2.0.0.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="insert_qbits_path_sem&#39;vc.25.0.0.2.0.0.0.0" proved="true">
         <proof prover="0"><result status="valid" time="2.40"/></proof>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.25.0.0.2.0.0.0.1" proved="true">
         <proof prover="0"><result status="valid" time="2.07"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.25.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="4.17" steps="1105839"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.26" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.26" steps="760342"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.27" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.20" steps="760596"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.28" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
   <goal name="insert_qbits_path_sem&#39;vc.28.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="insert_qbits_path_sem&#39;vc.28.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="set_bijective1">
     <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(c_inv_func_int
   (fun (j:int) -&gt; if j &lt; k then j else if j &lt; n then j + i else (j - n) + k)
   (n + i) @ e)" arg2="(( if e &lt; k then e else if e &lt; i + k then e + n - k else e-i)
   )">
       <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="2.11"/></proof>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="c_inv_func_int&#39;def">
        <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="replace" proved="true" arg1="(if e &lt; k then e else if e &lt; (i + k) then (e + n) - k else e - i)
" arg2="((fun j -&gt; if j &lt; k then j else if j &lt; (i + k) then (j + n) - k else j - i)
e)">
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="goal_comm">
          <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="unic_inverse_c">
           <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="Ensures162">
           </transf>
           </goal>
           <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="2.01"/></proof>
           </goal>
           <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="1.34"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
         <proof prover="0"><result status="valid" time="1.30"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.28.0.0.0.0.1.1" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="Ensures162">
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(c_inv_func_int
   (fun (j:int) -&gt; if j &lt; k then j else if j &lt; n then j + i else (j - n) + k)
   (n + i) @ e)" arg2="(( if e &lt; k then e else if e &lt; i + k then e + n - k else e-i)
   )">
       <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(c_inv_func_int
   (fun (j:int) -&gt; if j &lt; k then j else if j &lt; n then j + i else (j - n) + k)
   (n + i) @ e)" arg2="(( if e &lt; k then e else if e &lt; i + k then e + n - k else e-i)
   )">
        <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(c_inv_func_int
   (fun (j:int) -&gt; if j &lt; k then j else if j &lt; n then j + i else (j - n) + k)
   (n + i) @ e&#39;)" arg2="(( if e&#39; &lt; k then e&#39; else if e&#39; &lt; i + k then e&#39; + n - k else e&#39;-i)
   )">
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="2.79"/></proof>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="rewrite" proved="true" arg1="c_inv_func_int&#39;def">
          <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
          <transf name="replace" proved="true" arg1="(if e&#39; &lt; k then e&#39; else if e&#39; &lt; (i + k) then (e&#39; + n) - k else e&#39; - i)
" arg2="((fun j -&gt; if j &lt; k then j else if j &lt; (i + k) then (j + n) - k else j - i)
e&#39;)">
           <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
           <transf name="apply" proved="true" arg1="goal_comm">
            <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="unic_inverse_c">
             <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="Ensures162">
             </transf>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="0"><result status="valid" time="2.50"/></proof>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="0"><result status="valid" time="1.30"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
           <proof prover="0"><result status="valid" time="1.35"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="Ensures162">
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="replace" proved="true" arg1="(if e &lt; k then e else if e &lt; (i + k) then (e + n) - k else e - i)
" arg2="((fun j -&gt; if j &lt; k then j else if j &lt; (i + k) then (j + n) - k else j - i)
e)">
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
         <transf name="rewrite" proved="true" arg1="c_inv_func_int&#39;def">
          <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.1.0.0" expl="equality hypothesis" proved="true">
          <transf name="apply" proved="true" arg1="goal_comm">
           <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="unic_inverse_c">
            <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="Ensures162">
            </transf>
            </goal>
            <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="2.14"/></proof>
            </goal>
            <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="1.40"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="Ensures162">
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
         <transf name="compute_specified" proved="true" >
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.1" expl="equality hypothesis" proved="true">
       <transf name="replace" proved="true" arg1="(if e &lt; k then e else if e &lt; (i + k) then (e + n) - k else e - i)
" arg2="((fun j -&gt; if j &lt; k then j else if j &lt; (i + k) then (j + n) - k else j - i)
e)">
        <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="c_inv_func_int&#39;def">
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.1.0.0" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="goal_comm">
          <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="unic_inverse_c">
           <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="Ensures162">
           </transf>
           </goal>
           <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="2.39"/></proof>
           </goal>
           <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="1.35"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="Ensures162">
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.28.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2.0" expl="apply premises" proved="true">
      <transf name="exists" proved="true" arg1="(( if e&#39; &lt; k then e&#39; else if e&#39; &lt; n then e&#39; + i else e&#39;-n+k)
   )">
       <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2.0.0.0" proved="true">
        <proof prover="0"><result status="valid" time="2.08"/></proof>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2.0.0.1" proved="true">
        <transf name="replace" proved="true" arg1="(n+i)" arg2="(width (parallel c (ids i)))">
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2.0.0.1.0" proved="true">
         <transf name="apply" proved="true" arg1="Ensures13">
          <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2.0.0.1.0.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="1.32"/></proof>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2.0.0.1.0.1" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="2.20"/></proof>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2.0.0.1.0.2" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.28.0.0.2.0.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="0"><result status="valid" time="1.30"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.28.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="4.34" steps="1111080"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.29" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.39" steps="763112"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.30" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.29" steps="763492"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.31" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.37" steps="763746"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.32" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
   <goal name="insert_qbits_path_sem&#39;vc.32.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="3.69" steps="1071072"/></proof>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.32.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="4.39" steps="1123941"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.33" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="3.59" steps="1078797"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.34" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width(sequence
    (permutation_circuit (width (parallel c (ids i)))
     (fun (j:int) -&gt;
       if j &lt; k then j else if j &lt; n then j + i else (j - n) + k))
    (parallel c (ids i))))" arg2="(n+i)">
   <goal name="insert_qbits_path_sem&#39;vc.34.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="2.30" steps="827547"/></proof>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.34.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="sequence_width">
    <goal name="insert_qbits_path_sem&#39;vc.34.1.0" expl="equality hypothesis" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="insert_qbits_path_sem&#39;vc.34.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
      <goal name="insert_qbits_path_sem&#39;vc.34.1.0.0.0" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="1.27"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.34.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.51" steps="921339"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.34.1.0.0.2" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
       <goal name="insert_qbits_path_sem&#39;vc.34.1.0.0.2.0" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="Ensures207">
       </transf>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.34.1.0.0.2.1" expl="equality hypothesis" proved="true">
       <proof prover="0"><result status="valid" time="1.32"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.34.1.1" expl="rewrite premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="insert_qbits_path_sem&#39;vc.34.1.1.0" expl="rewrite premises" proved="true">
     <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
      <goal name="insert_qbits_path_sem&#39;vc.34.1.1.0.0" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.75" steps="921321"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.34.1.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.47" steps="921339"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.34.1.1.0.2" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
       <goal name="insert_qbits_path_sem&#39;vc.34.1.1.0.2.0" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="Ensures207">
       </transf>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.34.1.1.0.2.1" expl="equality hypothesis" proved="true">
       <proof prover="0"><result status="valid" time="1.22"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.35" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures111">
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.36" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="( path_sem
  (permutation_circuit (width (parallel c (ids i)))
   (c_inv_func_int
    (fun (j:int) -&gt; if j &lt; k then j else if j &lt; n then j + i else (j - n) + k)
    (width (parallel c (ids i)))))
  (kronecker im (kronecker im_d (bv_to_ket (htpart x k i)))))" arg2="( path_sem
  (permutation_circuit (width (parallel c (ids i)))
   (    (fun (j:int) -&gt; if j &lt; k then j else if j &lt; k+i then j + n-k else (j - i) )
    ))
  (kronecker im (kronecker im_d (bv_to_ket (htpart x k i)))))">
   <goal name="insert_qbits_path_sem&#39;vc.36.0" expl="precondition" proved="true">
   <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="im,k">
    <goal name="insert_qbits_path_sem&#39;vc.36.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0" expl="precondition" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_sum_">
        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0" expl="precondition" proved="true">
        <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
         <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="3.93" steps="1092249"/></proof>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.33" steps="767633"/></proof>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="3.70" steps="1092444"/></proof>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
           <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="im_d,(n-k)">
            <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="Hinst">
             <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="path_sem_sum_">
                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="bv_to_ket_length">
                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="5.02" steps="1272253"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.47" steps="866982"/></proof>
                   </goal>
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.49" steps="866982"/></proof>
                   </goal>
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                         <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                          <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                           <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="scalar_assoc">
                            <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                            <transf name="rewrite" proved="true" arg1="scalar_assoc">
                             <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                             <transf name="rewrite" proved="true" arg1="path_sem_scal">
                              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                              <transf name="apply" proved="true" arg1="scalar_eq_gen">
                               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                               <transf name="split_all_full" proved="true" >
                                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
                                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                 <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
                                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                  <transf name="replace" proved="true" arg1="(fun (j:int) -&gt;
     if j &lt; k then j else if j &lt; (k + i) then (j + n) - k else j - i)" arg2="(fun (j:int) -&gt;
     if j &lt; k then j else if j &lt; (k + i) then (j + (n - k)) else j - i)">
                                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                   <transf name="apply" proved="true" arg1="permutation_three_blocks">
                                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                    <proof prover="0"><result status="valid" time="1.44"/></proof>
                                    </goal>
                                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                                    <proof prover="9"><result status="valid" time="4.73" steps="1355097"/></proof>
                                    </goal>
                                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                                    <proof prover="9"><result status="valid" time="1.79" steps="1038660"/></proof>
                                    </goal>
                                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                                    <proof prover="9"><result status="valid" time="1.93" steps="1038660"/></proof>
                                    </goal>
                                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="apply premises" proved="true">
                                    <proof prover="9"><result status="valid" time="2.91" steps="1108318"/></proof>
                                    </goal>
                                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="apply premises" proved="true">
                                    <proof prover="9"><result status="valid" time="3.07" steps="1108345"/></proof>
                                    </goal>
                                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6" expl="apply premises" proved="true">
                                    <proof prover="9"><result status="valid" time="1.81" steps="1038676"/></proof>
                                    </goal>
                                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.7" expl="apply premises" proved="true">
                                    <proof prover="0"><result status="valid" time="1.39"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                                   <proof prover="9"><result status="valid" time="2.80" steps="1108720"/></proof>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                               <proof prover="9"><result status="valid" time="2.43" steps="930618"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                              <transf name="replace" proved="true" arg1="(width
   (permutation_circuit (width (parallel c (ids i)))
    (fun (j:int) -&gt;
      if j &lt; k then j else if j &lt; (k + i) then (j + n) - k else j - i)))" arg2="(k+ ((n-k)+i))">
                               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                                <proof prover="9"><result status="valid" time="1.32" steps="866996"/></proof>
                                </goal>
                                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                                <proof prover="9"><result status="valid" time="2.65" steps="930250"/></proof>
                                </goal>
                                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                                <proof prover="9"><result status="valid" time="4.21" steps="1201178"/></proof>
                                </goal>
                                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.3" expl="apply premises" proved="true">
                                <transf name="apply" proved="true" arg1="kronecker_ket_l">
                                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.3.0" expl="apply premises" proved="true">
                                 <proof prover="9"><result status="valid" time="2.61" steps="929801"/></proof>
                                 </goal>
                                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.3.1" expl="apply premises" proved="true">
                                 <proof prover="9"><result status="valid" time="2.61" steps="929828"/></proof>
                                 </goal>
                                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.3.2" expl="apply premises" proved="true">
                                 <proof prover="9"><result status="valid" time="4.19" steps="1201217"/></proof>
                                 </goal>
                                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.0.3.3" expl="apply premises" proved="true">
                                 <proof prover="9"><result status="valid" time="2.71" steps="969973"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                               <transf name="split_all_full" proved="true" >
                                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
                                <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
                                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
                                 <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
                                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="equality hypothesis" proved="true">
                                  <proof prover="9"><result status="valid" time="1.75" steps="1038679"/></proof>
                                  </goal>
                                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                                  <proof prover="9"><result status="valid" time="2.81" steps="1108756"/></proof>
                                  </goal>
                                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.1.0.0.2" expl="rewrite premises" proved="true">
                                  <proof prover="9"><result status="valid" time="4.22" steps="1356356"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
                                 <proof prover="0"><result status="valid" time="1.43"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="4.34" steps="1218751"/></proof>
                  </goal>
                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
                   <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
                     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="bv_to_ket_length">
                      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0.0.0.0" expl="rewrite premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="scalar_ket_length">
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0.0.0.0.0" expl="rewrite premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="bv_to_ket_length">
                        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="rewrite premises" proved="true">
                        <proof prover="0"><result status="valid" time="1.35"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="4.62" steps="1351584"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="3.09" steps="1108743"/></proof>
                     </goal>
                     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="9"><result status="valid" time="4.77" steps="1355363"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2.0.1" expl="equality hypothesis" proved="true">
                    <proof prover="9"><result status="valid" time="5.81" steps="1425939"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
                    <transf name="replace" proved="true" arg1="(width
   (permutation_circuit (width (parallel c (ids i)))
    (fun (j:int) -&gt;
      if j &lt; k then j else if j &lt; (k + i) then (j + n) - k else j - i)))" arg2="(k+((n-k)+i))">
                     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="kronecker_ket_l">
                      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="1.36" steps="866996"/></proof>
                      </goal>
                      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.63" steps="930250"/></proof>
                      </goal>
                      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.0.2" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="3.85" steps="1206196"/></proof>
                      </goal>
                      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.0.3" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="kronecker_ket_l">
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.0.3.0" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.46" steps="929801"/></proof>
                       </goal>
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.0.3.1" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.38" steps="929828"/></proof>
                       </goal>
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.0.3.2" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="3.76" steps="1206347"/></proof>
                       </goal>
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.0.3.3" expl="apply premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.63" steps="969973"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.1.0" expl="equality hypothesis" proved="true">
                      <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.1.0.0" expl="equality hypothesis" proved="true">
                       <proof prover="9"><result status="valid" time="5.67" steps="1427540"/></proof>
                       </goal>
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.1.0.1" expl="rewrite premises" proved="true">
                       <proof prover="9"><result status="valid" time="2.01" steps="1038676"/></proof>
                       </goal>
                       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.1.0.2" expl="rewrite premises" proved="true">
                       <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
                        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.1.0.2.0" expl="rewrite premises" proved="true">
                        <proof prover="9"><result status="valid" time="4.56" steps="1356356"/></proof>
                        </goal>
                        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3.0.0.1.0.2.1" expl="equality hypothesis" proved="true">
                        <proof prover="9"><result status="valid" time="5.51" steps="1426007"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="kronecker_ket_l">
                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.14" steps="929801"/></proof>
                    </goal>
                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.34" steps="956863"/></proof>
                    </goal>
                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="4.10" steps="1206347"/></proof>
                    </goal>
                    <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.1.0.0.3" expl="apply premises" proved="true">
                    <proof prover="9"><result status="valid" time="2.92" steps="956875"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="scalar_ket">
                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                  <proof prover="9"><result status="valid" time="4.08" steps="1199980"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="4.29" steps="1218753"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="3.73" steps="1206347"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="2.47" steps="930758"/></proof>
                </goal>
                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="3.65" steps="1218753"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                <transf name="replace" proved="true" arg1="(((n - k) + ket_length (bv_to_ket (htpart x k i)))
)" arg2="(i+ (n-k))">
                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="kronecker_ket_l">
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.56" steps="929828"/></proof>
                   </goal>
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.27" steps="929801"/></proof>
                   </goal>
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="2.59" steps="969973"/></proof>
                   </goal>
                   <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="3.67" steps="1206347"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="9"><result status="valid" time="2.55" steps="956955"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="scalar_ket">
                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="3.72" steps="1199980"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.0.3" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="3.76" steps="1218753"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.1.0" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                <proof prover="9"><result status="valid" time="4.17" steps="1206347"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="2.43" steps="930758"/></proof>
              </goal>
              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.0.3" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="4.24" steps="1218753"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.64" steps="929788"/></proof>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.72" steps="930651"/></proof>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.0.3.0.0.0.3" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.76" steps="930699"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="4.00" steps="1147174"/></proof>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
          <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="5.22" steps="1287299"/></proof>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.73" steps="921823"/></proof>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.2.0.2" expl="rewrite premises" proved="true">
          <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
           <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.2.0.2.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="4.34" steps="1223194"/></proof>
           </goal>
           <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.2.0.2.1" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="5.15" steps="1288280"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
           <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
            <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0" expl="rewrite premises" proved="true">
            <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(k+((n-k)+i))">
             <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="kronecker_ket_l">
              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="1.85" steps="1038489"/></proof>
              </goal>
              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="3.08" steps="1108614"/></proof>
              </goal>
              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="9"><result status="valid" time="4.68" steps="1349810"/></proof>
              </goal>
              <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.0.3" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_ket_l">
               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.0.3.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="3.06" steps="1108142"/></proof>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.0.3.1" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="3.09" steps="1108167"/></proof>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.0.3.2" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.88" steps="1038489"/></proof>
               </goal>
               <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.0.3.3" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="3.35" steps="1127690"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="5.48" steps="1415176"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="1.67" steps="1038505"/></proof>
            </goal>
            <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
            <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(k+((n-k)+i))">
             <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.2.0" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="4.18" steps="1350118"/></proof>
             </goal>
             <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.0.3.0.0.0.2.1" expl="equality hypothesis" proved="true">
             <proof prover="0"><result status="valid" time="1.27"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="4.09" steps="1199656"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="3.76" steps="1089337"/></proof>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="3.90" steps="1147187"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.1.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.1.0.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="4.01" steps="1199656"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="3.81" steps="1089337"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.36.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="4.09" steps="1147187"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.33" steps="767635"/></proof>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.39" steps="829051"/></proof>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.36.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.39" steps="829098"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.36.1" expl="equality hypothesis" proved="true">
   <transf name="apply" proved="true" arg1="permutation_circuit_equiv">
    <goal name="insert_qbits_path_sem&#39;vc.36.1.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.20" steps="767510"/></proof>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.36.1.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="3.39" steps="1090864"/></proof>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.36.1.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="c_inv_func_int&#39;def">
       <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="unic_inverse_c">
         <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
          <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="Ensures207">
          </transf>
          </goal>
          <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="0"><result status="valid" time="1.19"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="2.12"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.38" steps="921700"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.1" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
        <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="Ensures207">
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.36.1.2.0.0.1.1" expl="equality hypothesis" proved="true">
        <proof prover="0"><result status="valid" time="1.21"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.36.1.3" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(k+ ((n-k)+i))">
     <goal name="insert_qbits_path_sem&#39;vc.36.1.3.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="insert_qbits_path_sem&#39;vc.36.1.3.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.35" steps="767494"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.36.1.3.0.1" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="2.33" steps="828619"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.36.1.3.0.2" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.41" steps="767494"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.36.1.3.0.3" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="kronecker_ket_l">
       <goal name="insert_qbits_path_sem&#39;vc.36.1.3.0.3.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.37" steps="828162"/></proof>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.36.1.3.0.3.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.37" steps="828167"/></proof>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.36.1.3.0.3.2" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.37" steps="767494"/></proof>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.36.1.3.0.3.3" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.58" steps="868516"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.36.1.3.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="4.61" steps="1146647"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.37" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="sequence_width">
   <goal name="insert_qbits_path_sem&#39;vc.37.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="insert_qbits_path_sem&#39;vc.37.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
     <goal name="insert_qbits_path_sem&#39;vc.37.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec8">
      <goal name="insert_qbits_path_sem&#39;vc.37.0.0.0.0" expl="precondition" proved="true">
      <proof prover="9"><result status="valid" time="1.54" steps="921837"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.37.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.57" steps="921855"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.37.0.0.0.2" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="Ensures63">
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.37.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.59" steps="921855"/></proof>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.37.0.0.2" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
      <goal name="insert_qbits_path_sem&#39;vc.37.0.0.2.0" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="Ensures207">
      </transf>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.37.0.0.2.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="1.18"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.37.1" expl="rewrite premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="insert_qbits_path_sem&#39;vc.37.1.0" expl="rewrite premises" proved="true">
    <transf name="apply" proved="true" arg1="permutation_circuit&#39;spec8">
     <goal name="insert_qbits_path_sem&#39;vc.37.1.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.44" steps="921855"/></proof>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.37.1.0.1" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
      <goal name="insert_qbits_path_sem&#39;vc.37.1.0.1.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="Ensures207">
      </transf>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.37.1.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="1.17"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.38" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="insert_qbits_path_sem&#39;vc.38.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="insert_qbits&#39;def">
    <goal name="insert_qbits_path_sem&#39;vc.38.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="insert_qbits_path_sem&#39;vc.38.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec">
      <goal name="insert_qbits_path_sem&#39;vc.38.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="Ensures">
      </transf>
      </goal>
      <goal name="insert_qbits_path_sem&#39;vc.38.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(width (parallel c (ids i)))" arg2="(n+i)">
       <goal name="insert_qbits_path_sem&#39;vc.38.0.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="3.73" steps="1190682"/></proof>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.38.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="4.28" steps="1234424"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.38.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.24" steps="768412"/></proof>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.38.0.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.25" steps="768421"/></proof>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.38.0.3" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.19" steps="768414"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
