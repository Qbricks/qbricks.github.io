<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="7" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="qbricks.mlw"/>
<theory name="Circuit_semantics" proved="true">
 <goal name="positive_width&#39;vc" expl="VC for positive_width" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="positive_width&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.75" steps="988250"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="circ_to_pps_width&#39;vc" expl="VC for circ_to_pps_width" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="circ_to_pps_width&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.03" steps="809791"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="circ_to_pps_range&#39;vc" expl="VC for circ_to_pps_range" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="circ_to_pps_range&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.93" steps="809831"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="circ_to_pps_basis_ket&#39;vc" expl="VC for circ_to_pps_basis_ket" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="circ_to_pps_basis_ket&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.27" steps="881462"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="circ_to_pps_basis_ket_gen&#39;vc" expl="VC for circ_to_pps_basis_ket_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="circ_to_pps_basis_ket_gen&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="3.27" steps="1086999"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="circ_to_pps_angle&#39;vc" expl="VC for circ_to_pps_angle" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="circ_to_pps_angle&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.10" steps="871921"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sem&#39;vc" expl="VC for sem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sem&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.11" steps="752651"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_to_sem&#39;vc" expl="VC for path_sem_to_sem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_to_sem&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="path_sem_to_sem&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="sem&#39;def">
    <goal name="path_sem_to_sem&#39;vc.0.0.0" expl="VC for path_sem_to_sem" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="path_sem_to_sem&#39;vc.0.0.0.0" expl="VC for path_sem_to_sem" proved="true">
     <proof prover="7"><result status="valid" time="1.09" steps="752314"/></proof>
     </goal>
     <goal name="path_sem_to_sem&#39;vc.0.0.0.1" expl="VC for path_sem_to_sem" proved="true">
     <proof prover="7"><result status="valid" time="1.91" steps="809575"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sem_to_path_sem&#39;vc" expl="VC for sem_to_path_sem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sem_to_path_sem&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="sem_to_path_sem&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="sem&#39;def" arg2="in" arg3="Requires">
    <goal name="sem_to_path_sem&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="7"><result status="valid" time="1.93" steps="809703"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="get_path_sem&#39;vc" expl="VC for get_path_sem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_path_sem&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="get_path_sem&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="get_path_sem">
    <goal name="get_path_sem&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
     <goal name="get_path_sem&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="3.37" steps="991230"/></proof>
     </goal>
     <goal name="get_path_sem&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.36" steps="833804"/></proof>
     </goal>
     <goal name="get_path_sem&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.04" steps="810498"/></proof>
     </goal>
     <goal name="get_path_sem&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="get_path_sem&#39;vc.0.0.0.3.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="get_path_sem&#39;vc.0.0.0.3.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="scalar_eq_gen">
        <goal name="get_path_sem&#39;vc.0.0.0.3.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="unwire_path_sem_basis">
         <goal name="get_path_sem&#39;vc.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="1.44" steps="829469"/></proof>
         </goal>
         <goal name="get_path_sem&#39;vc.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.25" steps="1080021"/></proof>
         </goal>
         <goal name="get_path_sem&#39;vc.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="2.27" steps="890711"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="get_path_sem&#39;vc.0.0.0.3.0.0.1" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="1.39" steps="829469"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="get_path_sem&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.29" steps="833803"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="get_path_sem&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="1.08" steps="752886"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="get_path_sem_gen&#39;vc" expl="VC for get_path_sem_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_path_sem_gen&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="get_path_sem">
   <goal name="get_path_sem_gen&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="1.23" steps="753083"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_decomp&#39;vc" expl="VC for path_sem_decomp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_decomp&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="path_sem_decomp&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_decomp">
    <goal name="path_sem_decomp&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
     <goal name="path_sem_decomp&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="3.30" steps="991874"/></proof>
     </goal>
     <goal name="path_sem_decomp&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.31" steps="834206"/></proof>
     </goal>
     <goal name="path_sem_decomp&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.17" steps="810900"/></proof>
     </goal>
     <goal name="path_sem_decomp&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="path_sem_decomp&#39;vc.0.0.0.3.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="path_sem_decomp&#39;vc.0.0.0.3.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="scalar_eq">
        <goal name="path_sem_decomp&#39;vc.0.0.0.3.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="wire_path_sem">
         <goal name="path_sem_decomp&#39;vc.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="goal_comm">
          <goal name="path_sem_decomp&#39;vc.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="unwire_embedding_path_sem">
           <goal name="path_sem_decomp&#39;vc.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="1.30" steps="829867"/></proof>
           </goal>
           <goal name="path_sem_decomp&#39;vc.0.0.0.3.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="3.06" steps="1080730"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_decomp&#39;vc.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.37" steps="1080833"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_decomp&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.09" steps="834205"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_decomp&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="1.02" steps="753284"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ancilla_g&#39;vc" expl="VC for ancilla_g" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ancilla_g&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.38" steps="817775"/></proof>
  </goal>
  <goal name="ancilla_g&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.21" steps="817787"/></proof>
  </goal>
  <goal name="ancilla_g&#39;vc.2" expl="precondition" proved="true">
  <transf name="exists" proved="true" arg1="(path_sem_target x)">
   <goal name="ancilla_g&#39;vc.2.0" proved="true">
   <proof prover="7"><result status="valid" time="2.11" steps="876849"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ancilla_g&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.19" steps="834606"/></proof>
  </goal>
  <goal name="ancilla_g&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.28" steps="834609"/></proof>
  </goal>
  <goal name="ancilla_g&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.24" steps="834612"/></proof>
  </goal>
  <goal name="ancilla_g&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.30" steps="834615"/></proof>
  </goal>
  <goal name="ancilla_g&#39;vc.7" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures5">
  </transf>
  </goal>
  <goal name="ancilla_g&#39;vc.8" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures5">
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sequence_ghost_pps&#39;vc" expl="VC for sequence_ghost_pps" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sequence_ghost_pps&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.51" steps="871485"/></proof>
  </goal>
  <goal name="sequence_ghost_pps&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.41" steps="897920"/></proof>
  </goal>
  <goal name="sequence_ghost_pps&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.38" steps="897923"/></proof>
  </goal>
  <goal name="sequence_ghost_pps&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.53" steps="897926"/></proof>
  </goal>
  <goal name="sequence_ghost_pps&#39;vc.4" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_correct_pps">
   <goal name="sequence_ghost_pps&#39;vc.4.0" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="2.39" steps="958808"/></proof>
   </goal>
   <goal name="sequence_ghost_pps&#39;vc.4.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sequence_ghost_pps&#39;vc.4.1.0" expl="apply premises" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="sequence_ghost_pps&#39;vc.4.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="result&#39;def">
      <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_comp_">
       <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="instantiate" proved="true" arg1="pps_seq_pred" arg2="h,h&#39;,h&#39;&#39;">
        <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Hinst">
         <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(pps_apply h x)" arg2="(path_sem c x)">
          <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="get_correct_pps">
           <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="correct_path_sum&#39;def" arg2="in" arg3="Requires5">
            <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.27" steps="1100182"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="2.76" steps="960275"/></proof>
           </goal>
           <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="1.57" steps="898772"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="apply" proved="true" arg1="get_correct_pps">
           <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="correct_path_sum&#39;def" arg2="in" arg3="Requires6">
            <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.24" steps="1100087"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="2.29" steps="959655"/></proof>
           </goal>
           <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.0.1.2" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="1.38" steps="898772"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="replace" proved="true" arg1="(h_width h)" arg2="(width c)">
          <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="replace" proved="true" arg1="(h_width h&#39;)" arg2="(width c&#39;)">
           <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="2.28" steps="959207"/></proof>
           </goal>
           <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="correct_path_sum&#39;def" arg2="in" arg3="Requires5">
            <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
            <proof prover="7"><result status="valid" time="3.66" steps="1100182"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
          <transf name="rewrite" proved="true" arg1="correct_path_sum&#39;def" arg2="in" arg3="Requires6">
           <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
           <proof prover="7"><result status="valid" time="3.68" steps="1100087"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="1.60" steps="898772"/></proof>
         </goal>
         <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="Requires">
           <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="2.45" steps="959345"/></proof>
           </goal>
           <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.3.0.1" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="2.44" steps="959345"/></proof>
           </goal>
           <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.3.0.2" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="1.47" steps="899030"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.4" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="Requires1">
           <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.4.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="2.48" steps="959300"/></proof>
           </goal>
           <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.4.0.1" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="2.62" steps="959300"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.0.0.5" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="2.27" steps="959655"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="2.24" steps="958688"/></proof>
       </goal>
       <goal name="sequence_ghost_pps&#39;vc.4.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.30" steps="897834"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="parallel_ghost_pps&#39;vc" expl="VC for parallel_ghost_pps" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="parallel_ghost_pps&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_correct_pps">
   <goal name="parallel_ghost_pps&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="2.58" steps="935472"/></proof>
   </goal>
   <goal name="parallel_ghost_pps&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="parallel_ghost_pps&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="parallel_ghost_pps&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="result&#39;def">
      <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="x" arg2="(kronecker (bv_to_ket (hpart (ket_to_bv x) (width c))) (bv_to_ket (tpart (ket_to_bv x) (width c))))">
       <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="instantiate" proved="true" arg1="pps_par_pred" arg2="h,h&#39;,h&#39;&#39;">
        <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Hinst">
         <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="goal_comm">
          <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="path_sem_kron">
           <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.24" steps="1076176"/></proof>
           </goal>
           <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
            <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.48" steps="1080083"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="goal_comm">
            <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="get_correct_pps">
             <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="correct_path_sum&#39;def" arg2="in" arg3="Requires6">
              <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.01" steps="1075486"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0.0.2.0.1" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
              <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0.0.2.0.1.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.41" steps="1077574"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0.0.2.0.2" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="1.45" steps="875742"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="goal_comm">
            <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="get_correct_pps">
             <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="correct_path_sum&#39;def" arg2="in" arg3="Requires5">
              <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.32" steps="1075486"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0.0.3.0.1" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
              <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0.0.3.0.1.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.44" steps="1080083"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.0.0.3.0.2" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="1.50" steps="875742"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="correct_path_sum&#39;def" arg2="in" arg3="Requires5">
          <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="correct_path_sum&#39;def" arg2="in" arg3="Requires6">
           <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="3.16" steps="1076622"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="1.45" steps="875742"/></proof>
         </goal>
         <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
          <transf name="eliminate_if" proved="true" >
           <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.3.0.0" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="Requires1">
             <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="2.18" steps="953305"/></proof>
             </goal>
             <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="2.20" steps="953305"/></proof>
             </goal>
             <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.3.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="1.38" steps="892801"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="Requires">
             <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.3.0.0.1.0" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="2.37" steps="953300"/></proof>
             </goal>
             <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.3.0.0.1.1" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="2.40" steps="953300"/></proof>
             </goal>
             <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.3.0.0.1.2" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="1.44" steps="892821"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.4" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="Requires2">
           <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.4.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="2.13" steps="935077"/></proof>
           </goal>
           <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.4.0.1" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="2.63" steps="935077"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.5" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
          <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.5.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="correct_path_sum&#39;def" arg2="in" arg3="Requires6">
           <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.5.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.46" steps="1078962"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.6" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
          <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.6.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="correct_path_sum&#39;def" arg2="in" arg3="Requires5">
           <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.0.0.6.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.04" steps="1080265"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="parallel_ghost_pps&#39;vc.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="7"><result status="valid" time="3.29" steps="1076533"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="parallel_ghost_pps&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.36" steps="874780"/></proof>
  </goal>
  <goal name="parallel_ghost_pps&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.34" steps="874783"/></proof>
  </goal>
  <goal name="parallel_ghost_pps&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.37" steps="874786"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_scal_&#39;vc" expl="VC for path_sem_scal_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_scal_&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="path_sem_scal_&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="path_sem_scal_">
    <goal name="path_sem_scal_&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.94" steps="842782"/></proof>
    </goal>
    <goal name="path_sem_scal_&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.19" steps="819476"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_scal_&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="2.07" steps="819465"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_scal&#39;vc" expl="VC for path_sem_scal" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_scal&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.08" steps="819608"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_scal_rev&#39;vc" expl="VC for path_sem_scal_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_scal_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.37" steps="819710"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="parallel_basis_ket&#39;vc" expl="VC for parallel_basis_ket" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="parallel_basis_ket&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="parallel_basis_ket&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="(//)&#39;spec1">
    <goal name="parallel_basis_ket&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="parallel_angle&#39;vc" expl="VC for parallel_angle" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="parallel_angle&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="parallel_angle&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="(//)&#39;spec">
    <goal name="parallel_angle&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_add&#39;vc" expl="VC for path_sem_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_add&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.43"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_add_&#39;vc" expl="VC for path_sem_add_" proved="true">
 <proof prover="7"><result status="valid" time="2.19" steps="819676"/></proof>
 </goal>
 <goal name="path_sem_scal_add_ket_l&#39;vc" expl="VC for path_sem_scal_add_ket_l" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_scal_add_ket_l&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="n" arg2="(width c)">
   <goal name="path_sem_scal_add_ket_l&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="path_sem_add">
    <goal name="path_sem_scal_add_ket_l&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.27" steps="820890"/></proof>
    </goal>
    <goal name="path_sem_scal_add_ket_l&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.02" steps="820890"/></proof>
    </goal>
    <goal name="path_sem_scal_add_ket_l&#39;vc.0.0.2" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.19" steps="820911"/></proof>
    </goal>
    <goal name="path_sem_scal_add_ket_l&#39;vc.0.0.3" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.02" steps="820911"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_scal_add_ket_l&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="7"><result status="valid" time="1.19" steps="762964"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_substr&#39;vc" expl="VC for path_sem_substr" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_substr&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="path_sem_substr&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="path_sem_substr">
    <goal name="path_sem_substr&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.01" steps="844897"/></proof>
    </goal>
    <goal name="path_sem_substr&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.02" steps="844897"/></proof>
    </goal>
    <goal name="path_sem_substr&#39;vc.0.0.2" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.89" steps="821157"/></proof>
    </goal>
    <goal name="path_sem_substr&#39;vc.0.0.3" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.92" steps="821157"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_substr&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="2.86" steps="1006867"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_scal_add&#39;vc" expl="VC for path_sem_scal_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_scal_add&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.48"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_basis_apply&#39;vc" expl="VC for path_sem_basis_apply" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_basis_apply&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.07" steps="821600"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_basis_value&#39;vc" expl="VC for path_sem_basis_value" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_basis_value&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="path_sem_basis_value&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_basis&#39;def">
    <goal name="path_sem_basis_value&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
    <goal name="path_sem_basis_value&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.14" steps="763291"/></proof>
    </goal>
    <goal name="path_sem_basis_value&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.22" steps="763291"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_value_for_basis&#39;vc" expl="VC for path_sem_value_for_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_value_for_basis&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="get_path_sem_basis">
   <goal name="path_sem_value_for_basis&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="path_sem_basis_value">
    <goal name="path_sem_value_for_basis&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.12" steps="764027"/></proof>
    </goal>
    <goal name="path_sem_value_for_basis&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.13" steps="764027"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_value_for_basis&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="1.23" steps="764027"/></proof>
   </goal>
   <goal name="path_sem_value_for_basis&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="1.06" steps="764027"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="apply_path_sem_basis&#39;vc" expl="VC for apply_path_sem_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="apply_path_sem_basis&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.08" steps="822287"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_ket_l&#39;vc" expl="VC for path_sem_ket_l" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_ket_l&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.09" steps="822366"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_scal_substr&#39;vc" expl="VC for path_sem_scal_substr" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_scal_substr&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="path_sem_scal_substr&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="path_sem_scal_substr">
    <goal name="path_sem_scal_substr&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.29" steps="846202"/></proof>
    </goal>
    <goal name="path_sem_scal_substr&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.30" steps="846202"/></proof>
    </goal>
    <goal name="path_sem_scal_substr&#39;vc.0.0.2" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.27" steps="822507"/></proof>
    </goal>
    <goal name="path_sem_scal_substr&#39;vc.0.0.3" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.31" steps="822507"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_scal_substr&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="3.31" steps="1008681"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_sum&#39;vc" expl="VC for path_sem_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_sum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="3.97" steps="1132915"/></proof>
  </goal>
  <goal name="path_sem_sum&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="4.01" steps="1138453"/></proof>
  </goal>
  <goal name="path_sem_sum&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.53" steps="953395"/></proof>
  </goal>
  <goal name="path_sem_sum&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="3.85" steps="1139899"/></proof>
  </goal>
  <goal name="path_sem_sum&#39;vc.4" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="3.86" steps="1144306"/></proof>
  </goal>
  <goal name="path_sem_sum&#39;vc.5" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.79" steps="955938"/></proof>
  </goal>
  <goal name="path_sem_sum&#39;vc.6" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_sem_sum&#39;vc.6.0" expl="variant decrease" proved="true">
   <proof prover="7"><result status="valid" time="2.64" steps="954849"/></proof>
   </goal>
   <goal name="path_sem_sum&#39;vc.6.1" expl="variant decrease" proved="true">
   <proof prover="7"><result status="valid" time="3.94" steps="1144836"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_sum&#39;vc.7" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="3.99" steps="1144827"/></proof>
  </goal>
  <goal name="path_sem_sum&#39;vc.8" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.37" steps="893433"/></proof>
  </goal>
  <goal name="path_sem_sum&#39;vc.9" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="3.97" steps="1141243"/></proof>
  </goal>
  <goal name="path_sem_sum&#39;vc.10" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="3.43" steps="1141537"/></proof>
  </goal>
  <goal name="path_sem_sum&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.82"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_sum_diag&#39;vc" expl="VC for path_sem_sum_diag" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_sum_diag&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="path_sem_sum_diag&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ket_sum_l s (fun (x:bitvec) -&gt; (f @ x) *.. path_sem c (bv_to_ket x)) l)" arg2="(ket_sum_l s (fun (x:bitvec) -&gt; (f @ x) *.. path_sem1 (unwire c) (bv_to_ket x)) l)">
    <goal name="path_sem_sum_diag&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="path_sem_sum_diag">
     <goal name="path_sem_sum_diag&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.14" steps="765168"/></proof>
     </goal>
     <goal name="path_sem_sum_diag&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.02" steps="823149"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_sum_diag&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="ket_sum_eq">
     <goal name="path_sem_sum_diag&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="3.29" steps="1002068"/></proof>
     </goal>
     <goal name="path_sem_sum_diag&#39;vc.0.0.1.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.23" steps="765166"/></proof>
     </goal>
     <goal name="path_sem_sum_diag&#39;vc.0.0.1.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="path_sem_sum_diag&#39;vc.0.0.1.2.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="path_sem_sum_diag&#39;vc.0.0.1.2.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="3.74" steps="1112024"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_sum_diag&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="1.56"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_sum_&#39;vc" expl="VC for path_sem_sum_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_sum_&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="path_sem_sum_&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="( ket_sum_l s (fun (x:a) -&gt; path_sem c (f @ x)) n)" arg2="( ket_sum_l s (fun (x:a) -&gt; path_sem1 (unwire c) (f @ x)) n)">
    <goal name="path_sem_sum_&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="path_sem_sum_">
     <goal name="path_sem_sum_&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.37" steps="890089"/></proof>
     </goal>
     <goal name="path_sem_sum_&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.81" steps="953034"/></proof>
     </goal>
     <goal name="path_sem_sum_&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="3.60" steps="1135667"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_sum_&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="ket_sum_eq">
     <goal name="path_sem_sum_&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="3.48" steps="1133707"/></proof>
     </goal>
     <goal name="path_sem_sum_&#39;vc.0.0.1.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.38" steps="890087"/></proof>
     </goal>
     <goal name="path_sem_sum_&#39;vc.0.0.1.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="path_sem_sum_&#39;vc.0.0.1.2.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="path_sem_sum_&#39;vc.0.0.1.2.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="3.36" steps="1134502"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_sum_&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="3.33" steps="1136964"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_sum_gen&#39;vc" expl="VC for path_sem_sum_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_sum_gen&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_sum_">
   <goal name="path_sem_sum_gen&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="ket_sum_eq">
    <goal name="path_sem_sum_gen&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="3.37" steps="1134430"/></proof>
    </goal>
    <goal name="path_sem_sum_gen&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.46" steps="890898"/></proof>
    </goal>
    <goal name="path_sem_sum_gen&#39;vc.0.0.2" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="3.37" steps="1135829"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_sum_gen&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="1.43" steps="890900"/></proof>
   </goal>
   <goal name="path_sem_sum_gen&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="1.42" steps="890900"/></proof>
   </goal>
   <goal name="path_sem_sum_gen&#39;vc.0.3" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="2.46" steps="952502"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="scal_path_sem_sum_gen&#39;vc" expl="VC for scal_path_sem_sum_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="scal_path_sem_sum_gen&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="scalar_eq_gen">
   <goal name="scal_path_sem_sum_gen&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="Requires">
    <goal name="scal_path_sem_sum_gen&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="path_sem_sum_gen">
     <goal name="scal_path_sem_sum_gen&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.48" steps="891657"/></proof>
     </goal>
     <goal name="scal_path_sem_sum_gen&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.63" steps="906298"/></proof>
     </goal>
     <goal name="scal_path_sem_sum_gen&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.45" steps="953225"/></proof>
     </goal>
     <goal name="scal_path_sem_sum_gen&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.41" steps="953239"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="scal_path_sem_sum_gen&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="1.42" steps="891657"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="scal_path_sem_sum&#39;vc" expl="VC for scal_path_sem_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="scal_path_sem_sum&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="scal_path_sem_sum_gen">
   <goal name="scal_path_sem_sum&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="1.41" steps="892550"/></proof>
   </goal>
   <goal name="scal_path_sem_sum&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="1.40" steps="892550"/></proof>
   </goal>
   <goal name="scal_path_sem_sum&#39;vc.0.2" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="2.47" steps="953951"/></proof>
   </goal>
   <goal name="scal_path_sem_sum&#39;vc.0.3" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="2.59" steps="955189"/></proof>
   </goal>
   <goal name="scal_path_sem_sum&#39;vc.0.4" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="1.61" steps="892548"/></proof>
   </goal>
   <goal name="scal_path_sem_sum&#39;vc.0.5" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="1.40" steps="892548"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_scal_sum&#39;vc" expl="VC for path_sem_scal_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_scal_sum&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="path_sem_scal_sum&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_scal_sum">
    <goal name="path_sem_scal_sum&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="scalar_eq">
     <goal name="path_sem_scal_sum&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="ket_sum_eq">
      <goal name="path_sem_scal_sum&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="3.62" steps="1136524"/></proof>
      </goal>
      <goal name="path_sem_scal_sum&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.65" steps="893344"/></proof>
      </goal>
      <goal name="path_sem_scal_sum&#39;vc.0.0.0.0.2" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="path_sem_scal_sum&#39;vc.0.0.0.0.2.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="3.59" steps="1137481"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_scal_sum&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.42" steps="893346"/></proof>
    </goal>
    <goal name="path_sem_scal_sum&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.57" steps="955780"/></proof>
    </goal>
    <goal name="path_sem_scal_sum&#39;vc.0.0.3" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="3.58" steps="1138523"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_scal_sum&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="3.53" steps="1140231"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_sequence_parallel_basis&#39;vc" expl="VC for path_sem_sequence_parallel_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_sequence_parallel_basis&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="path_sem_sequence_parallel_basis&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(unwire ((a // b) -- (d // e)))" arg2="(sequence (unwire (a // b)) (unwire (d // e)))">
    <goal name="path_sem_sequence_parallel_basis&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(unwire (a // b))" arg2="(parallel (unwire a ) (unwire b))">
     <goal name="path_sem_sequence_parallel_basis&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(unwire (d // e))" arg2="(parallel (unwire d ) (unwire e))">
      <goal name="path_sem_sequence_parallel_basis&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_sequence_parallel_basis">
       <goal name="path_sem_sequence_parallel_basis&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="1.58"/></proof>
       </goal>
       <goal name="path_sem_sequence_parallel_basis&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.64"/></proof>
       </goal>
       <goal name="path_sem_sequence_parallel_basis&#39;vc.0.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="2.18" steps="849131"/></proof>
       </goal>
       <goal name="path_sem_sequence_parallel_basis&#39;vc.0.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="2.48" steps="849131"/></proof>
       </goal>
       <goal name="path_sem_sequence_parallel_basis&#39;vc.0.0.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.22" steps="767744"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_sequence_parallel_basis&#39;vc.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="7"><result status="valid" time="2.41" steps="825717"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_sequence_parallel_basis&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="7"><result status="valid" time="2.20" steps="825717"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_sequence_parallel_basis&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="path_sem_sequence_parallel_basis&#39;vc.0.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="path_sem_sequence_parallel_basis&#39;vc.0.0.1.0.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="unwire&#39;def">
       <goal name="path_sem_sequence_parallel_basis&#39;vc.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
       <transf name="eliminate_let" proved="true" >
        <goal name="path_sem_sequence_parallel_basis&#39;vc.0.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
        <proof prover="7"><result status="valid" time="4.01" steps="1235224"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_sequence_parallel_basis&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="1.57"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_sequence_parallel&#39;vc" expl="VC for path_sem_sequence_parallel" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_sequence_parallel&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="path_sem_sequence_parallel&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(unwire ((a // b) -- (d // e)))" arg2="(sequence (unwire (a // b)) (unwire (d // e)))">
    <goal name="path_sem_sequence_parallel&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(unwire (a // b))" arg2="(parallel (unwire a ) (unwire b))">
     <goal name="path_sem_sequence_parallel&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(unwire (d // e))" arg2="(parallel (unwire d ) (unwire e))">
      <goal name="path_sem_sequence_parallel&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_sequence_parallel">
       <goal name="path_sem_sequence_parallel&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="1.38"/></proof>
       </goal>
       <goal name="path_sem_sequence_parallel&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.41"/></proof>
       </goal>
       <goal name="path_sem_sequence_parallel&#39;vc.0.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="2.23" steps="849239"/></proof>
       </goal>
       <goal name="path_sem_sequence_parallel&#39;vc.0.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="2.20" steps="849239"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_sequence_parallel&#39;vc.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="7"><result status="valid" time="2.42" steps="825898"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_sequence_parallel&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="7"><result status="valid" time="2.18" steps="825898"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_sequence_parallel&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="path_sem_sequence_parallel&#39;vc.0.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="path_sem_sequence_parallel&#39;vc.0.0.1.0.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="unwire&#39;def">
       <goal name="path_sem_sequence_parallel&#39;vc.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
       <transf name="eliminate_let" proved="true" >
        <goal name="path_sem_sequence_parallel&#39;vc.0.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
        <proof prover="7"><result status="valid" time="3.99" steps="1233925"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_sequence_parallel&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="1.60"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_phase_basis&#39;vc" expl="VC for path_sem_phase_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_phase_basis&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="path_sem_phase_basis&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(unwire (phase k))" arg2="( (phase1 k))">
    <goal name="path_sem_phase_basis&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="7"><result status="valid" time="3.55" steps="1012907"/></proof>
    </goal>
    <goal name="path_sem_phase_basis&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="7"><result status="valid" time="2.11" steps="826018"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_phase_basis&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="2.21" steps="850890"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_phase_basis_inv&#39;vc" expl="VC for path_sem_phase_basis_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_phase_basis_inv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="path_sem_phase_basis_inv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_path_sem">
    <goal name="path_sem_phase_basis_inv&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="unwire_phase">
     <goal name="path_sem_phase_basis_inv&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="unwire_phase">
      <goal name="path_sem_phase_basis_inv&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_phase_basis_inv">
       <goal name="path_sem_phase_basis_inv&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.39" steps="768228"/></proof>
       </goal>
       <goal name="path_sem_phase_basis_inv&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.43" steps="768228"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_phase_basis_inv&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.56" steps="851080"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_phase_basis_inv&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="3.53" steps="1011795"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_phase_inv&#39;vc" expl="VC for path_sem_phase_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_phase_inv&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.43" steps="768334"/></proof>
  </goal>
  <goal name="path_sem_phase_inv&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.11" steps="826314"/></proof>
  </goal>
  <goal name="path_sem_phase_inv&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.20" steps="826323"/></proof>
  </goal>
  <goal name="path_sem_phase_inv&#39;vc.3" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="path_sem_phase_inv&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_path_sem">
    <goal name="path_sem_phase_inv&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="unwire_phase">
     <goal name="path_sem_phase_inv&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="unwire_phase">
      <goal name="path_sem_phase_inv&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_phase_inv">
       <goal name="path_sem_phase_inv&#39;vc.3.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.36" steps="828976"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_phase_inv&#39;vc.3.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.41" steps="913184"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_phase_inv&#39;vc.3.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="3.34" steps="1078355"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_rz_basis&#39;vc" expl="VC for path_sem_rz_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_rz_basis&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="3.25" steps="1025942"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_rz_basis_inv&#39;vc" expl="VC for path_sem_rz_basis_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_rz_basis_inv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="path_sem_rz_basis_inv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_path_sem">
    <goal name="path_sem_rz_basis_inv&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="unwire_rzp">
     <goal name="path_sem_rz_basis_inv&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="unwire_rzp">
      <goal name="path_sem_rz_basis_inv&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_rz_basis_inv">
       <goal name="path_sem_rz_basis_inv&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.18" steps="768550"/></proof>
       </goal>
       <goal name="path_sem_rz_basis_inv&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.40" steps="768550"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_rz_basis_inv&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.14" steps="851405"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_rz_basis_inv&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="3.25" steps="1011931"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_rz_inv&#39;vc" expl="VC for path_sem_rz_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_rz_inv&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.27" steps="768656"/></proof>
  </goal>
  <goal name="path_sem_rz_inv&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.19" steps="826639"/></proof>
  </goal>
  <goal name="path_sem_rz_inv&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.06" steps="826648"/></proof>
  </goal>
  <goal name="path_sem_rz_inv&#39;vc.3" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="path_sem_rz_inv&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_path_sem">
    <goal name="path_sem_rz_inv&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="unwire_rzp">
     <goal name="path_sem_rz_inv&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="unwire_rzp">
      <goal name="path_sem_rz_inv&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_rz_inv">
       <goal name="path_sem_rz_inv&#39;vc.3.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.33" steps="829298"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_rz_inv&#39;vc.3.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.59" steps="913504"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_rz_inv&#39;vc.3.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="3.60" steps="1078606"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_hadamard_zero&#39;vc" expl="VC for path_sem_hadamard_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_hadamard_zero&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.31" steps="826731"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_hadamard_one&#39;vc" expl="VC for path_sem_hadamard_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_hadamard_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.30" steps="826824"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_hadamard_plus&#39;vc" expl="VC for path_sem_hadamard_plus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_hadamard_plus&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.39" steps="826914"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_hadamard_minus&#39;vc" expl="VC for path_sem_hadamard_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_hadamard_minus&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.45" steps="827001"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_semnot_basis&#39;vc" expl="VC for path_semnot_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_semnot_basis&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.74"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_swap_basis&#39;vc" expl="VC for path_sem_swap_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_swap_basis&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.71"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="hadamard_invol&#39;vc" expl="VC for hadamard_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="hadamard_invol&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="3.66" steps="1017312"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="correct_seq&#39;vc" expl="VC for correct_seq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="correct_seq&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="unwire_correct_rev">
   <goal name="correct_seq&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_sequence">
    <goal name="correct_seq&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="correct_seq" arg2="with" arg3="h,h&#39;">
     <goal name="correct_seq&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.88" steps="945669"/></proof>
     </goal>
     <goal name="correct_seq&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.51" steps="945669"/></proof>
     </goal>
     <goal name="correct_seq&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.58" steps="968723"/></proof>
     </goal>
     <goal name="correct_seq&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.52" steps="945765"/></proof>
     </goal>
     <goal name="correct_seq&#39;vc.0.0.0.4" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.48" steps="884627"/></proof>
     </goal>
     <goal name="correct_seq&#39;vc.0.0.0.5" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="correct_seq&#39;vc.0.0.0.5.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="Requires1">
       <goal name="correct_seq&#39;vc.0.0.0.5.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="2.38" steps="944860"/></proof>
       </goal>
       <goal name="correct_seq&#39;vc.0.0.0.5.0.1" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="2.44" steps="944860"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="correct_seq&#39;vc.0.0.0.6" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="correct_seq&#39;vc.0.0.0.6.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="Requires">
       <goal name="correct_seq&#39;vc.0.0.0.6.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="2.41" steps="944905"/></proof>
       </goal>
       <goal name="correct_seq&#39;vc.0.0.0.6.0.1" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="2.40" steps="944905"/></proof>
       </goal>
       <goal name="correct_seq&#39;vc.0.0.0.6.0.2" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.69" steps="884885"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="correct_seq&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.47" steps="884627"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="correct_par&#39;vc" expl="VC for correct_par" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="correct_par&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="unwire_correct_rev">
   <goal name="correct_par&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_parallel">
    <goal name="correct_par&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="correct_par" arg2="with" arg3="h,h&#39;">
     <goal name="correct_par&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.53" steps="947216"/></proof>
     </goal>
     <goal name="correct_par&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="correct_par&#39;vc.0.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="2.88" steps="947216"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="correct_par&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.61" steps="970294"/></proof>
     </goal>
     <goal name="correct_par&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.61" steps="886174"/></proof>
     </goal>
     <goal name="correct_par&#39;vc.0.0.0.4" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="correct_par&#39;vc.0.0.0.4.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="Requires2">
       <goal name="correct_par&#39;vc.0.0.0.4.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="2.71" steps="946407"/></proof>
       </goal>
       <goal name="correct_par&#39;vc.0.0.0.4.0.1" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="2.76" steps="946407"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="correct_par&#39;vc.0.0.0.5" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.71" steps="946436"/></proof>
     </goal>
     <goal name="correct_par&#39;vc.0.0.0.6" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="correct_par&#39;vc.0.0.0.6.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="Requires">
       <goal name="correct_par&#39;vc.0.0.0.6.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="2.72" steps="946457"/></proof>
       </goal>
       <goal name="correct_par&#39;vc.0.0.0.6.0.1" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="2.43" steps="946457"/></proof>
       </goal>
       <goal name="correct_par&#39;vc.0.0.0.6.0.2" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.64" steps="886432"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_correct_main_path_sum&#39;vc" expl="VC for set_correct_main_path_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_correct_main_path_sum&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="set_correct_main_path_sum&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="correct_path_sum&#39;def">
    <goal name="set_correct_main_path_sum&#39;vc.0.0.0" expl="VC for set_correct_main_path_sum" proved="true">
    <transf name="apply" proved="true" arg1="set_pps_apply_equiv_sim">
     <goal name="set_correct_main_path_sum&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.55" steps="947056"/></proof>
     </goal>
     <goal name="set_correct_main_path_sum&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.58" steps="947056"/></proof>
     </goal>
     <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(((h_basis_ket h @ x) @ y) @ i)" arg2="(((h_basis_ket h @ (getbv (make_bv x (width c)))) @ (getbv (make_bv y (range c)))) @ i)">
       <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="Requires">
        <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="circ_to_pps_basis_ket">
         <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="basis_ket_invariant">
          <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
            <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.67" steps="886771"/></proof>
            </goal>
            <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="3.36" steps="1082882"/></proof>
            </goal>
            <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="1.43" steps="886782"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
            <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.39" steps="886771"/></proof>
            </goal>
            <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="3.34" steps="1082882"/></proof>
            </goal>
            <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="1.43" steps="886782"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.0.0.2" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.0.0.2.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="1.46" steps="886748"/></proof>
           </goal>
           <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.0.0.2.1" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="2.62" steps="959891"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.60" steps="959910"/></proof>
        </goal>
        <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.2" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="make_bv_length">
         <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.2.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="3.50" steps="1082836"/></proof>
         </goal>
         <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.2.1" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="2.64" steps="959893"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.3" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="make_bv_length">
         <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.3.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="3.40" steps="1082832"/></proof>
         </goal>
         <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.0.3.1" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="3.39" steps="1080894"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.1" expl="equality hypothesis" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="pps&#39;invariant1">
         <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.1.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.1.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
           <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.1.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="1.96" steps="1151446"/></proof>
           </goal>
           <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.1.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="4.32" steps="1361045"/></proof>
           </goal>
           <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.1.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="3.08" steps="1216325"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.1.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.1.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
           <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.1.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="1.96" steps="1151446"/></proof>
           </goal>
           <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.1.0.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="4.37" steps="1361063"/></proof>
           </goal>
           <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.1.0.1.0.2" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="3.13" steps="1216329"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="set_correct_main_path_sum&#39;vc.0.0.0.2.0.1.0.2" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="3.41" steps="1219945"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(((h_angle h @ x) @ y) )" arg2="(((h_angle h @ (getbv (make_bv x (width c)))) @ (getbv (make_bv y (range c)))) )">
       <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="Requires1">
        <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="circ_to_pps_angle">
         <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="ang_ind_invariant">
          <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
            <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.45" steps="886746"/></proof>
            </goal>
            <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="3.38" steps="1082085"/></proof>
            </goal>
            <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="1.41" steps="886757"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
            <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.43" steps="886746"/></proof>
            </goal>
            <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="3.29" steps="1082085"/></proof>
            </goal>
            <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="1.45" steps="886757"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="make_bv_length">
         <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="3.34" steps="1082024"/></proof>
         </goal>
         <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0.1.1" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="3.35" steps="1080131"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0.2" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="make_bv_length">
         <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0.2.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="3.34" steps="1082026"/></proof>
         </goal>
         <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.0.2.1" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="3.35" steps="1080131"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.1" expl="equality hypothesis" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="pps&#39;invariant">
         <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.1.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.1.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
           <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.1.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="1.93" steps="1151421"/></proof>
           </goal>
           <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.1.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="4.29" steps="1360320"/></proof>
           </goal>
           <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.1.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="3.08" steps="1216305"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.1.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.1.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
           <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.1.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="1.94" steps="1151421"/></proof>
           </goal>
           <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.1.0.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="4.29" steps="1360253"/></proof>
           </goal>
           <goal name="set_correct_main_path_sum&#39;vc.0.0.0.3.0.1.0.1.0.2" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="3.09" steps="1216309"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_path_sem_by_correct_pps&#39;vc" expl="VC for set_path_sem_by_correct_pps" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_path_sem_by_correct_pps&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="set_path_sem_by_correct_pps&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="correct_path_sum&#39;def" arg2="in" arg3="Requires2">
    <goal name="set_path_sem_by_correct_pps&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_apply">
     <goal name="set_path_sem_by_correct_pps&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="3.92"/></proof>
     </goal>
     <goal name="set_path_sem_by_correct_pps&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.29" steps="772805"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_path_sem_by_main_pps&#39;vc" expl="VC for set_path_sem_by_main_pps" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_path_sem_by_main_pps&#39;vc.0" expl="precondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="set_path_sem_by_main_pps&#39;vc.0.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="correct_path_sum&#39;def">
    <goal name="set_path_sem_by_main_pps&#39;vc.0.0.0" expl="VC for set_path_sem_by_main_pps" proved="true">
    <proof prover="7"><result status="valid" time="2.55" steps="950899"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="set_path_sem_by_main_pps&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.40" steps="953805"/></proof>
  </goal>
  <goal name="set_path_sem_by_main_pps&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.42" steps="890095"/></proof>
  </goal>
  <goal name="set_path_sem_by_main_pps&#39;vc.3" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="set_path_sem_by_main_pps&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
    <goal name="set_path_sem_by_main_pps&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="set_path_sem_by_main_pps&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
      <goal name="set_path_sem_by_main_pps&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="circ_to_pps_range">
       <goal name="set_path_sem_by_main_pps&#39;vc.3.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="circ_to_pps_angle">
        <goal name="set_path_sem_by_main_pps&#39;vc.3.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="circ_to_pps_basis_ket_gen">
         <goal name="set_path_sem_by_main_pps&#39;vc.3.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="circ_to_pps_width">
          <goal name="set_path_sem_by_main_pps&#39;vc.3.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
           <goal name="set_path_sem_by_main_pps&#39;vc.3.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="compute_specified" proved="true" >
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="set_path_sem_by_main_pps&#39;vc.3.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="3.15" steps="1171875"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="set_path_sem_by_main_pps&#39;vc.3.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.44" steps="953819"/></proof>
    </goal>
    <goal name="set_path_sem_by_main_pps&#39;vc.3.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.40" steps="890098"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_path_sem_by_correct_pps_gen&#39;vc" expl="VC for set_path_sem_by_correct_pps_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_path_sem_by_correct_pps_gen&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.10" steps="832071"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="set_correct_path_sum_sim&#39;vc" expl="VC for set_correct_path_sum_sim" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_correct_path_sum_sim&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="unwire_correct_rev">
   <goal name="set_correct_path_sum_sim&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="set_correct_path_sum_sim" arg2="with" arg3="h">
    <goal name="set_correct_path_sum_sim&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.46" steps="887638"/></proof>
    </goal>
    <goal name="set_correct_path_sum_sim&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.73" steps="887638"/></proof>
    </goal>
    <goal name="set_correct_path_sum_sim&#39;vc.0.0.2" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="3.57" steps="1136770"/></proof>
    </goal>
    <goal name="set_correct_path_sum_sim&#39;vc.0.0.3" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="3.60" steps="1139352"/></proof>
    </goal>
    <goal name="set_correct_path_sum_sim&#39;vc.0.0.4" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.53" steps="948694"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sum_equiv&#39;vc" expl="VC for path_sum_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sum_equiv&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.44" steps="888103"/></proof>
  </goal>
  <goal name="path_sum_equiv&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.49" steps="888106"/></proof>
  </goal>
  <goal name="path_sum_equiv&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.56" steps="949270"/></proof>
  </goal>
  <goal name="path_sum_equiv&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="3.54" steps="1137627"/></proof>
  </goal>
  <goal name="path_sum_equiv&#39;vc.4" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.74" steps="888419"/></proof>
  </goal>
  <goal name="path_sum_equiv&#39;vc.5" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.46" steps="888125"/></proof>
  </goal>
  <goal name="path_sum_equiv&#39;vc.6" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.44" steps="888136"/></proof>
  </goal>
  <goal name="path_sum_equiv&#39;vc.7" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.54" steps="949319"/></proof>
  </goal>
  <goal name="path_sum_equiv&#39;vc.8" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="3.57" steps="1139263"/></proof>
  </goal>
  <goal name="path_sum_equiv&#39;vc.9" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.44" steps="888450"/></proof>
  </goal>
  <goal name="path_sum_equiv&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_sum_equiv&#39;vc.10.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="1.43" steps="888129"/></proof>
   </goal>
   <goal name="path_sum_equiv&#39;vc.10.1" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="1.44" steps="888134"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="correct_to_path_sem&#39;vc" expl="VC for correct_to_path_sem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="correct_to_path_sem&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="correct_to_path_sem&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="correct_to_path_sem">
    <goal name="correct_to_path_sem&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.19" steps="836302"/></proof>
    </goal>
    <goal name="correct_to_path_sem&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.27" steps="859644"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="correct_to_path_sem&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="1.24" steps="774956"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="swap_invol_basis&#39;vc" expl="VC for swap_invol_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="swap_invol_basis&#39;vc.0" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="3.15" steps="1022981"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.19" steps="775115"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.15" steps="835161"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="3.15" steps="1031779"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.4" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.27" steps="775898"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.5" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.15" steps="835659"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.6" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="3.22" steps="1044490"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.7" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.48" steps="776244"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.8" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.51" steps="836047"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.9" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="3.21" steps="1057389"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.10" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.21" steps="776583"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.11" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.39" steps="836485"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.12" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="3.59" steps="1077495"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.13" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="3.54" steps="1073838"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.14" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="3.51" steps="1075457"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.15" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="3.45" steps="1060500"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.16" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="3.45" steps="1053159"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.17" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.34" steps="776973"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.18" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.23" steps="777197"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.19" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.30" steps="777353"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.20" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="3.21" steps="1065506"/></proof>
  </goal>
  <goal name="swap_invol_basis&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.10" steps="837480"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_to_correct&#39;vc" expl="VC for path_sem_to_correct" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_to_correct&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="3.03" steps="1019283"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="correct_main_path_sum&#39;vc" expl="VC for correct_main_path_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="correct_main_path_sum&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="correct_main_path_sum&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="correct_path_sum&#39;def">
    <goal name="correct_main_path_sum&#39;vc.0.0.0" expl="VC for correct_main_path_sum" proved="true">
    <proof prover="7"><result status="valid" time="2.11" steps="832450"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="correct_path_sum_bv&#39;vc" expl="VC for correct_path_sum_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="correct_path_sum_bv&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.17" steps="886923"/></proof>
  </goal>
  <goal name="correct_path_sum_bv&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.33" steps="829043"/></proof>
  </goal>
  <goal name="correct_path_sum_bv&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.43" steps="888192"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="correct_path_sum_to_bv&#39;vc" expl="VC for correct_path_sum_to_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="correct_path_sum_to_bv&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="3.37" steps="1121390"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="unwire_correct_bv&#39;vc" expl="VC for unwire_correct_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unwire_correct_bv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="unwire_correct_bv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="correct_path_sum_to_bv1">
    <goal name="unwire_correct_bv&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.90" steps="1093302"/></proof>
    </goal>
    <goal name="unwire_correct_bv&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="unwire_correct_bv&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="unwire_correct_bv&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="instantiate" proved="true" arg1="correct_path_sum_bv&#39;def1" arg2="c,r,k,a">
       <goal name="unwire_correct_bv&#39;vc.0.0.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="3.25" steps="1210557"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="unwire_correct_bv&#39;vc.0.0.2" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="4.03" steps="1331768"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unwire_correct_bv_rev&#39;vc" expl="VC for unwire_correct_bv_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unwire_correct_bv_rev&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="correct_path_sum_to_bv">
   <goal name="unwire_correct_bv_rev&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="1.34" steps="879063"/></proof>
   </goal>
   <goal name="unwire_correct_bv_rev&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="2.33" steps="938250"/></proof>
   </goal>
   <goal name="unwire_correct_bv_rev&#39;vc.0.2" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="unwire_correct_rev">
    <goal name="unwire_correct_bv_rev&#39;vc.0.2.0" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="unwire_correct_bv_rev&#39;vc.0.2.0.0" expl="apply premises" proved="true">
     <transf name="instantiate" proved="true" arg1="correct_path_sum_by_bv" arg2="(unwire c),r,k,a">
      <goal name="unwire_correct_bv_rev&#39;vc.0.2.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="unwire_width">
       <goal name="unwire_correct_bv_rev&#39;vc.0.2.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="Hinst">
        <goal name="unwire_correct_bv_rev&#39;vc.0.2.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="4.11" steps="1344175"/></proof>
        </goal>
        <goal name="unwire_correct_bv_rev&#39;vc.0.2.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="1.84" steps="1093661"/></proof>
        </goal>
        <goal name="unwire_correct_bv_rev&#39;vc.0.2.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="1.84" steps="1093661"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="wire_correct_bv&#39;vc" expl="VC for wire_correct_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="wire_correct_bv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="correct_path_sum_to_bv">
   <goal name="wire_correct_bv&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="1.31" steps="879267"/></proof>
   </goal>
   <goal name="wire_correct_bv&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="3.52" steps="1133535"/></proof>
   </goal>
   <goal name="wire_correct_bv&#39;vc.0.2" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="3.52" steps="1123090"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="correct_path_sum_by_bv&#39;vc" expl="VC for correct_path_sum_by_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="correct_path_sum_by_bv&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="3.55" steps="1121433"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="correct_path_sum_bv_main&#39;vc" expl="VC for correct_path_sum_bv_main" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="correct_path_sum_bv_main&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="unwire_correct_bv_rev">
   <goal name="correct_path_sum_bv_main&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="1.46" steps="894746"/></proof>
   </goal>
   <goal name="correct_path_sum_bv_main&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="2.59" steps="955728"/></proof>
   </goal>
   <goal name="correct_path_sum_bv_main&#39;vc.0.2" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="correct_path_sum_to_bv1">
    <goal name="correct_path_sum_bv_main&#39;vc.0.2.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.31" steps="894746"/></proof>
    </goal>
    <goal name="correct_path_sum_bv_main&#39;vc.0.2.1" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="3.68" steps="1147318"/></proof>
    </goal>
    <goal name="correct_path_sum_bv_main&#39;vc.0.2.2" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="unwire_correct">
     <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="set_correct_main_path_sum">
      <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.0" expl="apply premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec3">
        <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="3.20" steps="1174134"/></proof>
        </goal>
        <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="4.18" steps="1342926"/></proof>
        </goal>
        <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.72" steps="1108508"/></proof>
        </goal>
        <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="4.15" steps="1354031"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.1" expl="apply premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec2">
        <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="1.79" steps="1108508"/></proof>
        </goal>
        <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="4.10" steps="1342926"/></proof>
        </goal>
        <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.1.0.2" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.78" steps="1108508"/></proof>
        </goal>
        <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.1.0.3" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="4.20" steps="1354031"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.2" expl="apply premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.2.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.2.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec">
         <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.2.0.0.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="3.08" steps="1174180"/></proof>
         </goal>
         <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.2.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="4.21" steps="1350352"/></proof>
         </goal>
         <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.2.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="1.95" steps="1108540"/></proof>
         </goal>
         <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.2.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.18" steps="1181015"/></proof>
         </goal>
         <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.2.0.0.4" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.13" steps="1174227"/></proof>
         </goal>
         <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.2.0.0.5" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="2.94" steps="1172366"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.3" expl="apply premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.3.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.3.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec1">
         <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.3.0.0.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="4.16" steps="1352245"/></proof>
         </goal>
         <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.3.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.12" steps="1180312"/></proof>
         </goal>
         <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.3.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="1.86" steps="1108565"/></proof>
         </goal>
         <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.3.0.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.3.0.0.3.0" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="3.18" steps="1181007"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.3.0.0.4" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.15" steps="1174272"/></proof>
         </goal>
         <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.3.0.0.5" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="2.91" steps="1172411"/></proof>
         </goal>
         <goal name="correct_path_sum_bv_main&#39;vc.0.2.2.0.3.0.0.6" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.14" steps="1180336"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="correct_path_sum_bv_apply&#39;vc" expl="VC for correct_path_sum_bv_apply" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="correct_path_sum_bv_apply&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="correct_path_sum_bv_apply&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(width c)" arg2="(width1 (unwire c))">
    <goal name="correct_path_sum_bv_apply&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="correct_path_sum_bv_apply">
     <goal name="correct_path_sum_bv_apply&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.47" steps="880414"/></proof>
     </goal>
     <goal name="correct_path_sum_bv_apply&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.60" steps="963967"/></proof>
     </goal>
     <goal name="correct_path_sum_bv_apply&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.58" steps="940505"/></proof>
     </goal>
     <goal name="correct_path_sum_bv_apply&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="3.52" steps="1125218"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="correct_path_sum_bv_apply&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="7"><result status="valid" time="2.46" steps="940448"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="correct_path_sum_bv_apply&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="2.50" steps="940420"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="seq_pps_bv&#39;vc" expl="VC for seq_pps_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_pps_bv&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.39" steps="940371"/></proof>
  </goal>
  <goal name="seq_pps_bv&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.41" steps="941104"/></proof>
  </goal>
  <goal name="seq_pps_bv&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.50" steps="941754"/></proof>
  </goal>
  <goal name="seq_pps_bv&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.64" steps="1062992"/></proof>
  </goal>
  <goal name="seq_pps_bv&#39;vc.4" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.84" steps="1000306"/></proof>
  </goal>
  <goal name="seq_pps_bv&#39;vc.5" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="3.16" steps="1064417"/></proof>
  </goal>
  <goal name="seq_pps_bv&#39;vc.6" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.99" steps="1063310"/></proof>
  </goal>
  <goal name="seq_pps_bv&#39;vc.7" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.84" steps="1000677"/></proof>
  </goal>
  <goal name="seq_pps_bv&#39;vc.8" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.83" steps="1064902"/></proof>
  </goal>
  <goal name="seq_pps_bv&#39;vc.9" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="3.84" steps="1246984"/></proof>
  </goal>
  <goal name="seq_pps_bv&#39;vc.10" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width c)" arg2="(width c&#39;)">
   <goal name="seq_pps_bv&#39;vc.10.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="correct_path_sum_by_bv">
    <goal name="seq_pps_bv&#39;vc.10.0.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.68" steps="1001042"/></proof>
    </goal>
    <goal name="seq_pps_bv&#39;vc.10.0.1" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.88" steps="1065068"/></proof>
    </goal>
    <goal name="seq_pps_bv&#39;vc.10.0.2" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.68" steps="1001042"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="seq_pps_bv&#39;vc.10.1" expl="equality hypothesis" proved="true">
   <proof prover="7"><result status="valid" time="1.63" steps="1001042"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="seq_pps_bv&#39;vc.11" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.68" steps="1001053"/></proof>
  </goal>
  <goal name="seq_pps_bv&#39;vc.12" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.65" steps="1001056"/></proof>
  </goal>
  <goal name="seq_pps_bv&#39;vc.13" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.85" steps="1064918"/></proof>
  </goal>
  <goal name="seq_pps_bv&#39;vc.14" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="((h_angle (build_pps_bv (width c) r3 k3 a3) @ x) @ y)" arg2="((h_angle (build_pps_bv (width c) r3 k3 a3) @ (getbv (make_bv x (width c)))) @ (getbv (make_bv y r3)))">
   <goal name="seq_pps_bv&#39;vc.14.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures12">
    <goal name="seq_pps_bv&#39;vc.14.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Requires6">
     <goal name="seq_pps_bv&#39;vc.14.0.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="ang_add_eq">
      <goal name="seq_pps_bv&#39;vc.14.0.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="((h_angle (build_pps_bv (width c) r1 k1 a1) @ x) @ y)" arg2="((h_angle (build_pps_bv (width c) r1 k1 a1) @ (getbv (make_bv x (width c)))) @ (getbv (make_bv y r1)))
">
       <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures">
        <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(hpart (make_bv y r3) r1)" arg2="(make_bv y r1)">
         <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
         </transf>
         </goal>
         <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="set_equal_bv">
          <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="hpart_length">
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length">
            <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.66" steps="1001317"/></proof>
            </goal>
            <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="3.96" steps="1251601"/></proof>
            </goal>
            <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="1.68" steps="1001319"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="1.69" steps="1001319"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="hpart_value_b">
            <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="hpart_length" arg2="in" arg3="H">
             <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
              <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
               <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="1.95" steps="1001357"/></proof>
               </goal>
               <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="3.95" steps="1251522"/></proof>
               </goal>
               <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1.1.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="1.70" steps="1001368"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="3.98" steps="1251500"/></proof>
              </goal>
              <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="2.73" steps="1064728"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="1.69" steps="1001362"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="3.90" steps="1254475"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="1.65" steps="1001317"/></proof>
         </goal>
         <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="4.04" steps="1250633"/></proof>
         </goal>
         <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="2.81" steps="1063954"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="1.63" steps="1001317"/></proof>
         </goal>
         <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="4.00" steps="1251601"/></proof>
         </goal>
         <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.0.2.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="1.74" steps="1001319"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="pps&#39;invariant">
         <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="2.09" steps="1229704"/></proof>
           </goal>
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="4.69" steps="1474808"/></proof>
           </goal>
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="3.40" steps="1297612"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.1.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="2.10" steps="1229704"/></proof>
           </goal>
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="4.73" steps="1474995"/></proof>
           </goal>
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.0.1.0.1.0.2" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="3.33" steps="1297644"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="seq_pps_bv&#39;vc.14.0.0.0.1" expl="apply premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="((h_angle (build_pps_bv (width c) r2 k2 a2)
      @ ((h_basis_ket (build_pps_bv (width c) r1 k1 a1) @ x) @ y))
           @ (fun (k:int) -&gt; y @ (k +&#39; h_range (build_pps_bv (width c) r1 k1 a1))))
" arg2="((h_angle (build_pps_bv (width c) r2 k2 a2)
        @ (getbv (k1 (make_bv x (width c))  (hpart (make_bv y r3) r1))))
       @ (getbv(tpart (make_bv y r3)r1)))">
        <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures6">
         <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
         </transf>
         </goal>
         <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="Requires13">
          <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="2.42" steps="1229679"/></proof>
          </goal>
          <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.0.1.1.0" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="2.05" steps="1229679"/></proof>
           </goal>
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.0.1.1.1" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="4.96" steps="1474894"/></proof>
           </goal>
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.0.1.1.2" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="3.37" steps="1296524"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.0.1.2" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="4.67" steps="1475674"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="tpart_length">
          <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.0.2.0" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.0.2.0.0" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="2.07" steps="1229699"/></proof>
           </goal>
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.0.2.0.1" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="4.70" steps="1474895"/></proof>
           </goal>
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.0.2.0.2" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="3.33" steps="1297543"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.0.2.1" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.0.2.1.0" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="3.35" steps="1296560"/></proof>
           </goal>
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.0.2.1.1" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="5.36" steps="1474895"/></proof>
           </goal>
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.0.2.1.2" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="3.33" steps="1297543"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="pps&#39;invariant">
         <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(((h_basis_ket (build_pps_bv (width c) r1 k1 a1) @ x) @ y)i)" arg2="( ((h_basis_ket (build_pps_bv (width c) r1 k1 a1) @ (getbv (make_bv x (width c)))) @ (getbv(hpart (make_bv y r3) r1)))i)">
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec1">
            <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="2.38" steps="1229704"/></proof>
            </goal>
            <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="3.40" steps="1296574"/></proof>
            </goal>
            <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="2.16" steps="1229706"/></proof>
            </goal>
            <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="3.39" steps="1296706"/></proof>
            </goal>
            <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.0.4" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="make_bv_length">
             <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.0.4.0" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="2.15" steps="1229704"/></proof>
             </goal>
             <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.0.4.1" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="4.74" steps="1474823"/></proof>
             </goal>
             <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.0.4.2" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="3.37" steps="1296574"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.0.5" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="4.68" steps="1475715"/></proof>
            </goal>
            <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.0.6" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="3.41" steps="1297615"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant1">
            <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.1.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
              <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="2.15" steps="1229729"/></proof>
              </goal>
              <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="4.80" steps="1474978"/></proof>
              </goal>
              <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.1.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="3.44" steps="1297662"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.1.1" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.1.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="hpart_value_b">
              <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.1.1.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
               <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="2.12" steps="1229729"/></proof>
               </goal>
               <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="4.71" steps="1474851"/></proof>
               </goal>
               <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.1.1.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="3.42" steps="1297664"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.1.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="3.39" steps="1297694"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.1.2" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.1.2.0" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="2.15" steps="1229706"/></proof>
             </goal>
             <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.0.0.1.2.1" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.41" steps="1297615"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="tpart_value_b">
            <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
             <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec2">
              <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="2.12" steps="1229704"/></proof>
              </goal>
              <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="3.41" steps="1296574"/></proof>
              </goal>
              <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="2.13" steps="1229706"/></proof>
              </goal>
              <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0.0.0.0.3" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="3.32" steps="1296706"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="4.70" steps="1474807"/></proof>
             </goal>
             <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="3.41" steps="1297685"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="2.07" steps="1229706"/></proof>
            </goal>
            <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0.0.2" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec2" arg2="in" arg3="H">
             <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0.0.2.0" expl="rewrite premises" proved="true">
             <transf name="rewrite" proved="true" arg1="make_bv_length">
              <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0.0.2.0.0" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="3.31" steps="1296608"/></proof>
              </goal>
              <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0.0.2.0.1" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="4.76" steps="1474820"/></proof>
              </goal>
              <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0.0.2.0.2" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="3.41" steps="1297590"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0.0.2.1" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="3.39" steps="1296574"/></proof>
             </goal>
             <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0.0.2.2" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="2.09" steps="1229706"/></proof>
             </goal>
             <goal name="seq_pps_bv&#39;vc.14.0.0.0.1.0.1.1.0.0.2.3" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="3.45" steps="1296662"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="seq_pps_bv&#39;vc.14.0.0.1" expl="rewrite premises" proved="true">
     <transf name="rewrite" proved="true" arg1="make_bv_length">
      <goal name="seq_pps_bv&#39;vc.14.0.0.1.0" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.75" steps="1001317"/></proof>
      </goal>
      <goal name="seq_pps_bv&#39;vc.14.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="3.93" steps="1250633"/></proof>
      </goal>
      <goal name="seq_pps_bv&#39;vc.14.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="2.73" steps="1063954"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="seq_pps_bv&#39;vc.14.0.0.2" expl="rewrite premises" proved="true">
     <transf name="rewrite" proved="true" arg1="make_bv_length">
      <goal name="seq_pps_bv&#39;vc.14.0.0.2.0" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.68" steps="1001317"/></proof>
      </goal>
      <goal name="seq_pps_bv&#39;vc.14.0.0.2.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="3.95" steps="1251561"/></proof>
      </goal>
      <goal name="seq_pps_bv&#39;vc.14.0.0.2.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="2.78" steps="1064673"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="seq_pps_bv&#39;vc.14.0.1" expl="rewrite premises" proved="true">
    <transf name="rewrite" proved="true" arg1="make_bv_length">
     <goal name="seq_pps_bv&#39;vc.14.0.1.0" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.70" steps="1001317"/></proof>
     </goal>
     <goal name="seq_pps_bv&#39;vc.14.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="4.02" steps="1250633"/></proof>
     </goal>
     <goal name="seq_pps_bv&#39;vc.14.0.1.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="2.87" steps="1063954"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="seq_pps_bv&#39;vc.14.0.2" expl="rewrite premises" proved="true">
    <transf name="rewrite" proved="true" arg1="make_bv_length">
     <goal name="seq_pps_bv&#39;vc.14.0.2.0" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.75" steps="1001317"/></proof>
     </goal>
     <goal name="seq_pps_bv&#39;vc.14.0.2.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="3.93" steps="1251561"/></proof>
     </goal>
     <goal name="seq_pps_bv&#39;vc.14.0.2.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="2.76" steps="1064673"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="seq_pps_bv&#39;vc.14.1" expl="equality hypothesis" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="seq_pps_bv&#39;vc.14.1.0" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="pps&#39;invariant">
     <goal name="seq_pps_bv&#39;vc.14.1.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="seq_pps_bv&#39;vc.14.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
       <goal name="seq_pps_bv&#39;vc.14.1.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="2.11" steps="1229704"/></proof>
       </goal>
       <goal name="seq_pps_bv&#39;vc.14.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="4.66" steps="1474822"/></proof>
       </goal>
       <goal name="seq_pps_bv&#39;vc.14.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.34" steps="1297610"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="seq_pps_bv&#39;vc.14.1.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="seq_pps_bv&#39;vc.14.1.0.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
       <goal name="seq_pps_bv&#39;vc.14.1.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="2.07" steps="1229704"/></proof>
       </goal>
       <goal name="seq_pps_bv&#39;vc.14.1.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="4.63" steps="1475174"/></proof>
       </goal>
       <goal name="seq_pps_bv&#39;vc.14.1.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.36" steps="1297615"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="seq_pps_bv&#39;vc.15" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="seq_pps_bv&#39;vc.15.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(((h_basis_ket (build_pps_bv (width c) r3 k3 a3) @ x) @ y)i)" arg2="(((h_basis_ket (build_pps_bv (width c) r3 k3 a3) @ (getbv (make_bv x (width c)))) @ (getbv (make_bv y r3)))i)">
    <goal name="seq_pps_bv&#39;vc.15.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures13">
     <goal name="seq_pps_bv&#39;vc.15.0.0.0" expl="precondition" proved="true">
     <transf name="replace" proved="true" arg1="(((h_basis_ket (build_pps_bv (width c) r2 k2 a2)
       @ ((h_basis_ket (build_pps_bv (width c) r1 k1 a1) @ x) @ y))
      @ (fun (k:int) -&gt; y @ (k +&#39; h_range (build_pps_bv (width c) r1 k1 a1))))
     @ i)
" arg2="(((h_basis_ket (build_pps_bv (width c) r2 k2 a2)
       @ (getbv (make_bv ((h_basis_ket (build_pps_bv (width c) r1 k1 a1) @ x) @ y) (width c))))
      @ (getbv (make_bv (fun (k:int) -&gt; y @ (k +&#39; h_range (build_pps_bv (width c) r1 k1 a1))) r2)))
     @ i)
">
      <goal name="seq_pps_bv&#39;vc.15.0.0.0.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures7">
       <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0" expl="precondition" proved="true">
       <transf name="rewrite" proved="true" arg1="Requires6">
        <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0" expl="precondition" proved="true">
        <transf name="replace" proved="true" arg1="(make_bv ((h_basis_ket (build_pps_bv (width c) r1 k1 a1) @ x) @ y)
         (width c))" arg2="((k1 @ make_bv x (width c)) @ hpart (make_bv y r3) r1)">
         <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0" expl="precondition" proved="true">
         <transf name="replace" proved="true" arg1="(tpart (make_bv y r3) r1)" arg2="(make_bv
        (fun (k:int) -&gt; y @ (k +&#39; h_range (build_pps_bv (width c) r1 k1 a1)))
        r2)">
          <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.0" expl="precondition" proved="true">
          <transf name="compute_specified" proved="true" >
          </transf>
          </goal>
          <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="apply" proved="true" arg1="set_equal_bv">
           <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="tpart_length">
            <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="make_bv_length">
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="make_bv_length">
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="2.05" steps="1230110"/></proof>
              </goal>
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="4.68" steps="1475368"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="2.06" steps="1230092"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="4.65" steps="1475527"/></proof>
             </goal>
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="3.30" steps="1298036"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="make_bv_length">
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="3.35" steps="1297053"/></proof>
             </goal>
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="4.68" steps="1475527"/></proof>
             </goal>
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.0.1.2" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="3.29" steps="1298036"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="tpart_value_b">
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec2">
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="2.08" steps="1230133"/></proof>
                 </goal>
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.33" steps="1297088"/></proof>
                 </goal>
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="2.06" steps="1230135"/></proof>
                 </goal>
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.30" steps="1297220"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="4.66" steps="1479856"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
               <transf name="rewrite" proved="true" arg1="tpart_length" arg2="in" arg3="H">
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.0.2.0" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.0.2.0.0" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.35" steps="1297095"/></proof>
                 </goal>
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.0.2.0.1" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="4.72" steps="1479316"/></proof>
                 </goal>
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.0.2.0.2" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.40" steps="1298128"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.0.2.1" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="4.67" steps="1481871"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="4.75" steps="1479769"/></proof>
              </goal>
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.2" expl="rewrite premises" proved="true">
              <transf name="rewrite" proved="true" arg1="tpart_length" arg2="in" arg3="H">
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.2.0" expl="rewrite premises" proved="true">
               <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.2.0.0" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="3.33" steps="1298168"/></proof>
                </goal>
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.2.0.1" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="4.77" steps="1479316"/></proof>
                </goal>
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.2.0.2" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="3.50" steps="1298128"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.0.2.1" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="4.67" steps="1481871"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="2.08" steps="1230135"/></proof>
             </goal>
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.0.1.1.0.2" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="4.93" steps="1488746"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="set_equal_bv">
          <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="Requires14">
            <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="2.21" steps="1230090"/></proof>
            </goal>
            <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="make_bv_length">
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="4.73" steps="1475366"/></proof>
             </goal>
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.0.0.1.1" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.33" steps="1297017"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="4.87" steps="1476390"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="pps&#39;invariant3">
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="4.64" steps="1475484"/></proof>
             </goal>
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="4.72" steps="1475458"/></proof>
             </goal>
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.39" steps="1298107"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="pps&#39;invariant2">
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="5.04" steps="1475484"/></proof>
             </goal>
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.0.1.1.1" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="5.00" steps="1475458"/></proof>
             </goal>
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.0.1.1.2" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.20" steps="1298107"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="3.60" steps="1297017"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
            <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(((h_basis_ket (build_pps_bv (width c) r1 k1 a1) @ x) @ y)i)" arg2="( ((h_basis_ket (build_pps_bv (width c) r1 k1 a1) @ (getbv (make_bv x (width c)))) @ (getbv(make_bv y r1)))i)
">
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="Ensures1">
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(hpart (make_bv y r3) r1)" arg2="(make_bv y r1)">
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
               </transf>
               </goal>
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
               <transf name="apply" proved="true" arg1="set_equal_bv">
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0.1.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="hpart_length">
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="make_bv_length">
                  <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <proof prover="7"><result status="valid" time="2.28" steps="1230140"/></proof>
                  </goal>
                  <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="7"><result status="valid" time="4.80" steps="1479558"/></proof>
                  </goal>
                  <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="7"><result status="valid" time="2.18" steps="1230142"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.95" steps="1230142"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0.1.1" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="hpart_value_b">
                  <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                   <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                    <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="7"><result status="valid" time="2.17" steps="1230183"/></proof>
                    </goal>
                    <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="7"><result status="valid" time="5.09" steps="1483871"/></proof>
                    </goal>
                    <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="7"><result status="valid" time="4.75" steps="1482031"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="7"><result status="valid" time="5.28" steps="1483699"/></proof>
                   </goal>
                   <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0.1.1.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="7"><result status="valid" time="5.13" steps="1481867"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                  <proof prover="7"><result status="valid" time="5.11" steps="1482031"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="make_bv_length">
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.1.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="4.97" steps="1479514"/></proof>
               </goal>
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.1.1" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="3.53" steps="1297103"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="make_bv_length">
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.2.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="4.99" steps="1479558"/></proof>
               </goal>
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.2.1" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="2.21" steps="1230142"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.3" expl="rewrite premises" proved="true">
              <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.3.0" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="2.23" steps="1230126"/></proof>
               </goal>
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.3.1" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.3.1.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.3.1.0.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="4.97" steps="1479726"/></proof>
                 </goal>
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.3.1.0.1" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="4.99" steps="1479715"/></proof>
                 </goal>
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.3.1.0.2" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.57" steps="1298193"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.3.1.1" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.3.1.1.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="5.04" steps="1479726"/></proof>
                 </goal>
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.3.1.1.1" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="5.05" steps="1479715"/></proof>
                 </goal>
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.3.1.1.2" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.71" steps="1298193"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.0.3.2" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="3.62" steps="1297103"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
             <transf name="apply" proved="true" arg1="pps&#39;invariant1">
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.0" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="2.02" steps="1230165"/></proof>
                </goal>
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="4.54" steps="1479423"/></proof>
                </goal>
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="3.21" steps="1298191"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.1.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.1.0.0" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="2.30" steps="1230165"/></proof>
                </goal>
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="5.01" steps="1479610"/></proof>
                </goal>
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.1.0.2" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="3.54" steps="1298223"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.2" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.2.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="3.63" steps="1298107"/></proof>
               </goal>
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.2.1" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.2.1.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.2.1.0.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="5.12" steps="1479726"/></proof>
                 </goal>
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.2.1.0.1" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="5.10" steps="1479715"/></proof>
                 </goal>
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.2.1.0.2" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.20" steps="1298193"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.2.1.1" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.2.1.1.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="5.02" steps="1479726"/></proof>
                 </goal>
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.2.1.1.1" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="5.04" steps="1479715"/></proof>
                 </goal>
                 <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.2.1.1.2" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.62" steps="1298193"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.0.1.2.2" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="3.64" steps="1297103"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.1.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="pps&#39;invariant3">
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="4.79" steps="1479726"/></proof>
              </goal>
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.1.0.1" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="4.83" steps="1479715"/></proof>
              </goal>
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.1.0.2" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.43" steps="1298193"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.1.1" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="pps&#39;invariant2">
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.1.1.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="4.82" steps="1479726"/></proof>
              </goal>
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.1.1.1" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="4.75" steps="1479715"/></proof>
              </goal>
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.1.1.2" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.36" steps="1298193"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.2" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.2.0" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="2.08" steps="1230126"/></proof>
             </goal>
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.2.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.2.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="pps&#39;invariant3">
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.2.1.0.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="4.81" steps="1479726"/></proof>
               </goal>
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.2.1.0.1" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="4.87" steps="1479715"/></proof>
               </goal>
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.2.1.0.2" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="3.53" steps="1298193"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.2.1.1" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="pps&#39;invariant2">
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.2.1.1.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="4.78" steps="1479726"/></proof>
               </goal>
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.2.1.1.1" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="4.71" steps="1479715"/></proof>
               </goal>
               <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.2.1.1.2" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="3.34" steps="1298193"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.0.1.1.0.2.2" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="3.32" steps="1297103"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="make_bv_length">
         <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="5.03" steps="1475366"/></proof>
         </goal>
         <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.1.1" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="3.34" steps="1297017"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="make_bv_length">
         <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="4.77" steps="1475527"/></proof>
         </goal>
         <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.0.2.1" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="3.43" steps="1298036"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="make_bv_length">
        <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="pps&#39;invariant3">
          <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="4.72" steps="1475484"/></proof>
          </goal>
          <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="4.77" steps="1475458"/></proof>
          </goal>
          <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.48" steps="1298107"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.1.0.1" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="pps&#39;invariant2">
          <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="4.87" steps="1475484"/></proof>
          </goal>
          <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="4.79" steps="1475458"/></proof>
          </goal>
          <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.1.0.1.2" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.40" steps="1298107"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="3.44" steps="1297017"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.2" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="make_bv_length">
        <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.2.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.2.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="4.75" steps="1475020"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.2.0.1" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.2.0.1.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="4.76" steps="1475231"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.2.1" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="2.10" steps="1230092"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="seq_pps_bv&#39;vc.15.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.43" steps="1298058"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="seq_pps_bv&#39;vc.15.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="pps&#39;invariant1">
       <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
         <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="2.12" steps="1230115"/></proof>
         </goal>
         <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="pps&#39;invariant3">
           <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="4.75" steps="1475398"/></proof>
           </goal>
           <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.0.0.1.0.1" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="4.69" steps="1475387"/></proof>
           </goal>
           <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.0.0.1.0.2" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.43" steps="1298157"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="pps&#39;invariant2">
           <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.0.0.1.1.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="4.74" steps="1475398"/></proof>
           </goal>
           <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.0.0.1.1.1" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="4.77" steps="1475387"/></proof>
           </goal>
           <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.0.0.1.1.2" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.63" steps="1298157"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.60" steps="1298108"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.1" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
         <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.1.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
         </transf>
         </goal>
         <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.1.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="4.69" steps="1475643"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.40" steps="1298113"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.2" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.2.0" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="2.20" steps="1230092"/></proof>
        </goal>
        <goal name="seq_pps_bv&#39;vc.15.0.0.0.1.2.1" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="3.41" steps="1298045"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="seq_pps_bv&#39;vc.15.0.0.1" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="make_bv_length">
      <goal name="seq_pps_bv&#39;vc.15.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="4.78" steps="1475366"/></proof>
      </goal>
      <goal name="seq_pps_bv&#39;vc.15.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="3.42" steps="1297017"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="seq_pps_bv&#39;vc.15.0.0.2" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="make_bv_length">
      <goal name="seq_pps_bv&#39;vc.15.0.0.2.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="4.77" steps="1475527"/></proof>
      </goal>
      <goal name="seq_pps_bv&#39;vc.15.0.0.2.1" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="3.42" steps="1298036"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="seq_pps_bv&#39;vc.15.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="3.39" steps="1298058"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="seq_pps_bv&#39;vc.15.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="pps&#39;invariant1">
     <goal name="seq_pps_bv&#39;vc.15.0.1.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="seq_pps_bv&#39;vc.15.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
       <goal name="seq_pps_bv&#39;vc.15.0.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="2.20" steps="1230115"/></proof>
       </goal>
       <goal name="seq_pps_bv&#39;vc.15.0.1.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="4.72" steps="1475444"/></proof>
       </goal>
       <goal name="seq_pps_bv&#39;vc.15.0.1.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.32" steps="1298103"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="seq_pps_bv&#39;vc.15.0.1.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="seq_pps_bv&#39;vc.15.0.1.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
       <goal name="seq_pps_bv&#39;vc.15.0.1.1.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="2.14" steps="1230115"/></proof>
       </goal>
       <goal name="seq_pps_bv&#39;vc.15.0.1.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="4.77" steps="1475291"/></proof>
       </goal>
       <goal name="seq_pps_bv&#39;vc.15.0.1.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.57" steps="1298108"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="seq_pps_bv&#39;vc.15.0.1.2" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.20" steps="1230101"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="seq_pps_bv&#39;vc.16" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.78" steps="1001049"/></proof>
  </goal>
  <goal name="seq_pps_bv&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.83" steps="1027432"/></proof>
  </goal>
  <goal name="seq_pps_bv&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.87" steps="1027435"/></proof>
  </goal>
  <goal name="seq_pps_bv&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.00" steps="1027438"/></proof>
  </goal>
  <goal name="seq_pps_bv&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.82" steps="1027441"/></proof>
  </goal>
  <goal name="seq_pps_bv&#39;vc.21" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="correct_path_sum_to_bv">
   <goal name="seq_pps_bv&#39;vc.21.0" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="2.90" steps="1091504"/></proof>
   </goal>
   <goal name="seq_pps_bv&#39;vc.21.1" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="3.20" steps="1092069"/></proof>
   </goal>
   <goal name="seq_pps_bv&#39;vc.21.2" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="2.96" steps="1091502"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="correct_path_sum_bv_sim&#39;vc" expl="VC for correct_path_sum_bv_sim" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="correct_path_sum_bv_sim&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="unwire_correct_bv_rev">
   <goal name="correct_path_sum_bv_sim&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="2.58" steps="942363"/></proof>
   </goal>
   <goal name="correct_path_sum_bv_sim&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="correct_path_sum_bv_sim&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="((k2 @ x) @ y)" arg2="((k1 @ x) @ y)">
     <goal name="correct_path_sum_bv_sim&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.54" steps="943735"/></proof>
     </goal>
     <goal name="correct_path_sum_bv_sim&#39;vc.0.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="7"><result status="valid" time="2.75" steps="943699"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="correct_path_sum_bv_sim&#39;vc.0.2" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="correct_path_sum_bv_sim" arg2="with" arg3="r1,k1,a1">
    <goal name="correct_path_sum_bv_sim&#39;vc.0.2.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.55" steps="883574"/></proof>
    </goal>
    <goal name="correct_path_sum_bv_sim&#39;vc.0.2.1" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.56" steps="883574"/></proof>
    </goal>
    <goal name="correct_path_sum_bv_sim&#39;vc.0.2.2" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="3.81" steps="1137277"/></proof>
    </goal>
    <goal name="correct_path_sum_bv_sim&#39;vc.0.2.3" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="3.77" steps="1132761"/></proof>
    </goal>
    <goal name="correct_path_sum_bv_sim&#39;vc.0.2.4" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="3.79" steps="1132665"/></proof>
    </goal>
    <goal name="correct_path_sum_bv_sim&#39;vc.0.2.5" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="unwire_correct_bv">
     <goal name="correct_path_sum_bv_sim&#39;vc.0.2.5.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.60" steps="883574"/></proof>
     </goal>
     <goal name="correct_path_sum_bv_sim&#39;vc.0.2.5.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.59" steps="942479"/></proof>
     </goal>
     <goal name="correct_path_sum_bv_sim&#39;vc.0.2.5.2" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.52" steps="883574"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_comp&#39;vc" expl="VC for path_sem_comp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_comp&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.33" steps="842563"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_seq&#39;vc" expl="VC for path_seq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_seq&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.64" steps="19770"/></proof>
  </goal>
  <goal name="path_seq&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.69" steps="20020"/></proof>
  </goal>
  <goal name="path_seq&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="4.70" steps="211231"/></proof>
  </goal>
  <goal name="path_seq&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="4.84" steps="213544"/></proof>
  </goal>
  <goal name="path_seq&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.77" steps="20119"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_comp_&#39;vc" expl="VC for path_sem_comp_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_comp_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.30" steps="843306"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sem_comp&#39;vc" expl="VC for sem_comp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sem_comp&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="sem_comp&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="0"><result status="valid" time="1.47"/></proof>
   </goal>
   <goal name="sem_comp&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="3.40" steps="1062006"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_cnot_basis&#39;vc" expl="VC for path_sem_cnot_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_cnot_basis&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="3.39" steps="1067856"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron&#39;vc" expl="VC for place_kron" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="place_kron&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_place">
    <goal name="place_kron&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(0&lt;&#39;k)">
     <goal name="place_kron&#39;vc.0.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="case" proved="true" arg1="(width c +&#39; k &lt;&#39; n )">
      <goal name="place_kron&#39;vc.0.0.0.0.0" expl="true case (postcondition)" proved="true">
      <transf name="apply" proved="true" arg1="place_kron">
       <goal name="place_kron&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.40" steps="783299"/></proof>
       </goal>
       <goal name="place_kron&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="2.44" steps="880289"/></proof>
       </goal>
       <goal name="place_kron&#39;vc.0.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.37" steps="783297"/></proof>
       </goal>
       <goal name="place_kron&#39;vc.0.0.0.0.0.3" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="2.41" steps="880282"/></proof>
       </goal>
       <goal name="place_kron&#39;vc.0.0.0.0.0.4" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="2.57" steps="904919"/></proof>
       </goal>
       <goal name="place_kron&#39;vc.0.0.0.0.0.5" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="2.36" steps="843603"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_kron&#39;vc.0.0.0.0.1" expl="false case (true case. postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="place_kron_right">
       <goal name="place_kron&#39;vc.0.0.0.0.1.0" expl="false case (true case. postcondition)" proved="true">
       <transf name="replace" proved="true" arg1="(kronecker y&#39; z)" arg2="(get_ket z 0 *.. y&#39;)">
        <goal name="place_kron&#39;vc.0.0.0.0.1.0.0" expl="false case (true case. postcondition)" proved="true">
        <transf name="replace" proved="true" arg1="(kronecker y z)" arg2="(get_ket z 0 *.. y)">
         <goal name="place_kron&#39;vc.0.0.0.0.1.0.0.0" expl="false case (true case. postcondition)" proved="true">
         <proof prover="7"><result status="valid" time="3.52" steps="1072429"/></proof>
         </goal>
         <goal name="place_kron&#39;vc.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="set_equal_ket">
          <goal name="place_kron&#39;vc.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.43" steps="1066887"/></proof>
          </goal>
          <goal name="place_kron&#39;vc.0.0.0.0.1.0.0.1.1" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.40" steps="1066834"/></proof>
          </goal>
          <goal name="place_kron&#39;vc.0.0.0.0.1.0.0.1.2" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.42" steps="1071827"/></proof>
          </goal>
          <goal name="place_kron&#39;vc.0.0.0.0.1.0.0.1.3" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="place_kron&#39;vc.0.0.0.0.1.0.0.1.3.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
            <goal name="place_kron&#39;vc.0.0.0.0.1.0.0.1.3.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="scalar_ket_value">
             <goal name="place_kron&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(rows z)" arg2="1">
              <goal name="place_kron&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="2.35" steps="843001"/></proof>
              </goal>
              <goal name="place_kron&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="0"><result status="valid" time="1.54"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_kron&#39;vc.0.0.0.0.1.0.0.1.3.0.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="2.41" steps="843631"/></proof>
            </goal>
            <goal name="place_kron&#39;vc.0.0.0.0.1.0.0.1.3.0.2" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="2.35" steps="843659"/></proof>
            </goal>
            <goal name="place_kron&#39;vc.0.0.0.0.1.0.0.1.3.0.3" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="3.47" steps="1083980"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="place_kron&#39;vc.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="set_equal_ket">
         <goal name="place_kron&#39;vc.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.33"/></proof>
         </goal>
         <goal name="place_kron&#39;vc.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.33"/></proof>
         </goal>
         <goal name="place_kron&#39;vc.0.0.0.0.1.0.1.2" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="6.37" steps="1128892"/></proof>
         </goal>
         <goal name="place_kron&#39;vc.0.0.0.0.1.0.1.3" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="place_kron&#39;vc.0.0.0.0.1.0.1.3.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
           <goal name="place_kron&#39;vc.0.0.0.0.1.0.1.3.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="scalar_ket_value">
            <goal name="place_kron&#39;vc.0.0.0.0.1.0.1.3.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(rows z)" arg2="1">
             <goal name="place_kron&#39;vc.0.0.0.0.1.0.1.3.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="2.33" steps="843024"/></proof>
             </goal>
             <goal name="place_kron&#39;vc.0.0.0.0.1.0.1.3.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="0"><result status="valid" time="1.61"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="place_kron&#39;vc.0.0.0.0.1.0.1.3.0.1" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="1.62"/></proof>
           </goal>
           <goal name="place_kron&#39;vc.0.0.0.0.1.0.1.3.0.2" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="2.33" steps="843666"/></proof>
           </goal>
           <goal name="place_kron&#39;vc.0.0.0.0.1.0.1.3.0.3" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="1.80"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_kron&#39;vc.0.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.38" steps="783308"/></proof>
       </goal>
       <goal name="place_kron&#39;vc.0.0.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="2.47" steps="880559"/></proof>
       </goal>
       <goal name="place_kron&#39;vc.0.0.0.0.1.3" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.35" steps="783306"/></proof>
       </goal>
       <goal name="place_kron&#39;vc.0.0.0.0.1.4" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.42" steps="1066313"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="place_kron&#39;vc.0.0.0.1" expl="false case (postcondition)" proved="true">
     <transf name="replace" proved="true" arg1="k" arg2="0">
      <goal name="place_kron&#39;vc.0.0.0.1.0" expl="false case (postcondition)" proved="true">
      <transf name="replace" proved="true" arg1="(kronecker x (kronecker y z))" arg2="(get_ket x  0 *.. (kronecker y z))">
       <goal name="place_kron&#39;vc.0.0.0.1.0.0" expl="false case (postcondition)" proved="true">
       <transf name="replace" proved="true" arg1="(kronecker x (kronecker y&#39; z))" arg2="(get_ket x  0 *.. (kronecker y&#39; z))">
        <goal name="place_kron&#39;vc.0.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
        <transf name="case" proved="true" arg1="(width c = n)">
         <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0" expl="false case (true case. postcondition)" proved="true">
         <transf name="replace" proved="true" arg1="(kronecker y z)" arg2="(get_ket z  0 *.. y)">
          <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0" expl="false case (true case. postcondition)" proved="true">
          <transf name="replace" proved="true" arg1="(kronecker y&#39; z)" arg2="(get_ket z  0 *.. y&#39;)">
           <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.0" expl="false case (true case. postcondition)" proved="true">
           <transf name="replace" proved="true" arg1="(place1 (unwire c) 0 n)" arg2="(place_zero (unwire c) n)">
            <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.0.0" expl="false case (true case. postcondition)" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0" expl="false case (true case. postcondition)" proved="true">
             <transf name="rewrite" proved="true" arg1="place_zero&#39;def1">
              <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="false case (true case. postcondition)" proved="true">
              <transf name="rewrite" proved="true" arg1="wire_path_sem">
               <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="false case (true case. postcondition)" proved="true">
               <transf name="replace" proved="true" arg1="(path_sem (wire (unwire c)) (get_ket x 0 *.. (get_ket z 0 *.. y)))" arg2="(path_sem c (get_ket x 0 *.. (get_ket z 0 *.. y)))">
                <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="false case (true case. postcondition)" proved="true">
                <transf name="rewrite" proved="true" arg1="path_sem_scal">
                 <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (true case. postcondition)" proved="true">
                 <transf name="rewrite" proved="true" arg1="path_sem_scal">
                  <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (true case. postcondition)" proved="true">
                  <proof prover="7"><result status="valid" time="1.93" steps="1001709"/></proof>
                  </goal>
                  <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="7"><result status="valid" time="1.78" steps="986219"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="2.99" steps="1049170"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                <transf name="apply" proved="true" arg1="goal_comm">
                 <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="unwire_embedding_path_sem">
                  <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                  <proof prover="7"><result status="valid" time="4.05" steps="1226163"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="4.08" steps="1227038"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="2.98" steps="1048502"/></proof>
              </goal>
              <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="2.88" steps="1048519"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="7"><result status="valid" time="3.43" steps="1066779"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="apply" proved="true" arg1="set_equal_ket">
            <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="1.54"/></proof>
            </goal>
            <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.1.1" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="1.53"/></proof>
            </goal>
            <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.1.2" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="1.56"/></proof>
            </goal>
            <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.1.3" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.1.3.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
              <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.1.3.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="scalar_ket_value">
               <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.1.3.0.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(rows z)" arg2="1">
                <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.1.3.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="2.30" steps="843048"/></proof>
                </goal>
                <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.1.3.0.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="0"><result status="valid" time="1.58"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.1.3.0.1" expl="rewrite premises" proved="true">
              <proof prover="0"><result status="valid" time="1.53"/></proof>
              </goal>
              <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.1.3.0.2" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="2.61" steps="843685"/></proof>
              </goal>
              <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.0.1.3.0.3" expl="rewrite premises" proved="true">
              <proof prover="0"><result status="valid" time="1.94"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="apply" proved="true" arg1="set_equal_ket">
           <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.77" steps="1065675"/></proof>
           </goal>
           <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.81" steps="1066085"/></proof>
           </goal>
           <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.1.2" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.70" steps="1070620"/></proof>
           </goal>
           <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.1.3" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.1.3.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
             <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.1.3.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="scalar_ket_value">
              <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.1.3.0.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(rows z)" arg2="1">
               <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.1.3.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="2.16" steps="843025"/></proof>
               </goal>
               <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.1.3.0.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="0"><result status="valid" time="1.66"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.1.3.0.1" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="2.19" steps="843657"/></proof>
             </goal>
             <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.1.3.0.2" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="2.22" steps="843678"/></proof>
             </goal>
             <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.0.1.3.0.3" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="3.75" steps="1083134"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.1" expl="false case (postcondition)" proved="true">
         <transf name="rewrite" proved="true" arg1="path_sem_scal1">
          <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.1.0" expl="false case (postcondition)" proved="true">
          <transf name="apply" proved="true" arg1="scalar_eq">
           <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="place_kron_left">
            <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="2.64" steps="880367"/></proof>
            </goal>
            <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.1.0.0.1" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="2.58" steps="880385"/></proof>
            </goal>
            <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.1.0.0.2" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="1.59"/></proof>
            </goal>
            <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.1.0.0.3" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="2.17" steps="843701"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="place_kron&#39;vc.0.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.57"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="place_kron&#39;vc.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="set_equal_ket">
         <goal name="place_kron&#39;vc.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="6.44" steps="1124935"/></proof>
         </goal>
         <goal name="place_kron&#39;vc.0.0.0.1.0.0.1.1" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.63"/></proof>
         </goal>
         <goal name="place_kron&#39;vc.0.0.0.1.0.0.1.2" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.67"/></proof>
         </goal>
         <goal name="place_kron&#39;vc.0.0.0.1.0.0.1.3" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="place_kron&#39;vc.0.0.0.1.0.0.1.3.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
           <goal name="place_kron&#39;vc.0.0.0.1.0.0.1.3.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="scalar_ket_value">
            <goal name="place_kron&#39;vc.0.0.0.1.0.0.1.3.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="bound_eq_rev">
             <goal name="place_kron&#39;vc.0.0.0.1.0.0.1.3.0.0.0.0" expl="apply premises" proved="true">
             <transf name="assert" proved="true" arg1="(forall j. i &lt;&#39; j -&gt; div1 i j = 0)
">
              <goal name="place_kron&#39;vc.0.0.0.1.0.0.1.3.0.0.0.0.0" expl="asserted formula" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="place_kron&#39;vc.0.0.0.1.0.0.1.3.0.0.0.0.0.0" expl="asserted formula" proved="true">
               <proof prover="0"><result status="valid" time="1.41"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="place_kron&#39;vc.0.0.0.1.0.0.1.3.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="h">
               <goal name="place_kron&#39;vc.0.0.0.1.0.0.1.3.0.0.0.0.1.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="1.33" steps="783433"/></proof>
               </goal>
               <goal name="place_kron&#39;vc.0.0.0.1.0.0.1.3.0.0.0.0.1.1" expl="rewrite premises" proved="true">
               <proof prover="0"><result status="valid" time="1.81"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="place_kron&#39;vc.0.0.0.1.0.0.1.3.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="1.82"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="place_kron&#39;vc.0.0.0.1.0.0.1.3.0.1" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="2.33" steps="843651"/></proof>
           </goal>
           <goal name="place_kron&#39;vc.0.0.0.1.0.0.1.3.0.2" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="1.61"/></proof>
           </goal>
           <goal name="place_kron&#39;vc.0.0.0.1.0.0.1.3.0.3" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="1.72"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_kron&#39;vc.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="set_equal_ket">
        <goal name="place_kron&#39;vc.0.0.0.1.0.1.0" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="3.42" steps="1066485"/></proof>
        </goal>
        <goal name="place_kron&#39;vc.0.0.0.1.0.1.1" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="3.41" steps="1066874"/></proof>
        </goal>
        <goal name="place_kron&#39;vc.0.0.0.1.0.1.2" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="3.43" steps="1071533"/></proof>
        </goal>
        <goal name="place_kron&#39;vc.0.0.0.1.0.1.3" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="place_kron&#39;vc.0.0.0.1.0.1.3.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
          <goal name="place_kron&#39;vc.0.0.0.1.0.1.3.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="scalar_ket_value">
           <goal name="place_kron&#39;vc.0.0.0.1.0.1.3.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="bound_eq_rev">
            <goal name="place_kron&#39;vc.0.0.0.1.0.1.3.0.0.0.0" expl="apply premises" proved="true">
            <transf name="assert" proved="true" arg1="(forall j. i &lt;&#39; j -&gt; div1 i j = 0)
">
             <goal name="place_kron&#39;vc.0.0.0.1.0.1.3.0.0.0.0.0" expl="asserted formula" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="place_kron&#39;vc.0.0.0.1.0.1.3.0.0.0.0.0.0" expl="asserted formula" proved="true">
              <proof prover="0"><result status="valid" time="1.32"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="place_kron&#39;vc.0.0.0.1.0.1.3.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="h">
              <goal name="place_kron&#39;vc.0.0.0.1.0.1.3.0.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="1.35" steps="783433"/></proof>
              </goal>
              <goal name="place_kron&#39;vc.0.0.0.1.0.1.3.0.0.0.0.1.1" expl="rewrite premises" proved="true">
              <proof prover="0"><result status="valid" time="1.73"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_kron&#39;vc.0.0.0.1.0.1.3.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="0"><result status="valid" time="1.79"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="place_kron&#39;vc.0.0.0.1.0.1.3.0.1" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="2.35" steps="843640"/></proof>
          </goal>
          <goal name="place_kron&#39;vc.0.0.0.1.0.1.3.0.2" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="3.24" steps="1070653"/></proof>
          </goal>
          <goal name="place_kron&#39;vc.0.0.0.1.0.1.3.0.3" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="3.35" steps="1083707"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="place_kron&#39;vc.0.0.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="7"><result status="valid" time="2.27" steps="843198"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_kron&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.24" steps="783264"/></proof>
    </goal>
    <goal name="place_kron&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.26" steps="783264"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="place_kron&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="1.73"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_width&#39;vc" expl="VC for place_width" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_width&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.28"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="place_bv_in&#39;vc" expl="VC for place_bv_in" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_bv_in&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="place_bv_in&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="place&#39;spec1">
    <goal name="place_bv_in&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="place_bv_in&#39;vc.0.0.0.0" expl="VC for place_bv_in" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_bv_in&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
      <goal name="place_bv_in&#39;vc.0.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="7"><result status="valid" time="1.76" steps="1013124"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_bv_in&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.83" steps="998411"/></proof>
    </goal>
    <goal name="place_bv_in&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.82" steps="998411"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_bv_out&#39;vc" expl="VC for place_bv_out" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_bv_out&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="place_bv_out&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="place&#39;spec1">
    <goal name="place_bv_out&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="place_bv_out&#39;vc.0.0.0.0" expl="VC for place_bv_out" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_bv_out&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="7"><result status="valid" time="1.84" steps="1013633"/></proof>
      </goal>
      <goal name="place_bv_out&#39;vc.0.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="7"><result status="valid" time="1.86" steps="1013543"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_bv_out&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.81" steps="998928"/></proof>
    </goal>
    <goal name="place_bv_out&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.60" steps="998928"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sequence_width&#39;vc" expl="VC for sequence_width" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sequence_width&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.28"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron_bv&#39;vc" expl="VC for place_kron_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron_bv&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.24" steps="844284"/></proof>
  </goal>
  <goal name="place_kron_bv&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.40" steps="800355"/></proof>
  </goal>
  <goal name="place_kron_bv&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.30" steps="858008"/></proof>
  </goal>
  <goal name="place_kron_bv&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.34" steps="858965"/></proof>
  </goal>
  <goal name="place_kron_bv&#39;vc.4" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.36" steps="800635"/></proof>
  </goal>
  <goal name="place_kron_bv&#39;vc.5" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.28" steps="858305"/></proof>
  </goal>
  <goal name="place_kron_bv&#39;vc.6" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.38" steps="800755"/></proof>
  </goal>
  <goal name="place_kron_bv&#39;vc.7" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.31" steps="801103"/></proof>
  </goal>
  <goal name="place_kron_bv&#39;vc.8" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.35" steps="801106"/></proof>
  </goal>
  <goal name="place_kron_bv&#39;vc.9" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.28" steps="859545"/></proof>
  </goal>
  <goal name="place_kron_bv&#39;vc.10" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.29" steps="859557"/></proof>
  </goal>
  <goal name="place_kron_bv&#39;vc.11" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.56" steps="926796"/></proof>
  </goal>
  <goal name="place_kron_bv&#39;vc.12" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.34" steps="801158"/></proof>
  </goal>
  <goal name="place_kron_bv&#39;vc.13" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(kronecker (bv_to_ket (hpart bv k))
   (kronecker (bv_to_ket (htpart bv k (width c)))
    (bv_to_ket (tpart bv (k +&#39; width c)))))" arg2="(bv_to_ket bv)" arg3="in" arg4="Ensures">
   <goal name="place_kron_bv&#39;vc.13.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="place_kron_bv&#39;vc.13.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
     <goal name="place_kron_bv&#39;vc.13.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_kron_bv&#39;vc.13.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
    <goal name="place_kron_bv&#39;vc.13.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
     <goal name="place_kron_bv&#39;vc.13.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
      <goal name="place_kron_bv&#39;vc.13.1.0.0.0" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="1.88"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron_exp&#39;vc" expl="VC for place_kron_exp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron_exp&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="3.51" steps="1072016"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron_left&#39;vc" expl="VC for place_kron_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron_left&#39;vc.0" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(width c &lt;&#39; n )">
   <goal name="place_kron_left&#39;vc.0.0" expl="true case (postcondition)" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_path_sem">
    <goal name="place_kron_left&#39;vc.0.0.0" expl="true case (postcondition)" proved="true">
    <transf name="rewrite" proved="true" arg1="unwire_place">
     <goal name="place_kron_left&#39;vc.0.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="apply" proved="true" arg1="place_kron_left">
      <goal name="place_kron_left&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="2.70" steps="881353"/></proof>
      </goal>
      <goal name="place_kron_left&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="2.52" steps="881354"/></proof>
      </goal>
      <goal name="place_kron_left&#39;vc.0.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="2.57" steps="904806"/></proof>
      </goal>
      <goal name="place_kron_left&#39;vc.0.0.0.0.3" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="2.42" steps="845121"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="place_kron_left&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.31" steps="785338"/></proof>
     </goal>
     <goal name="place_kron_left&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.32" steps="785345"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="place_kron_left&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="1.46"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="place_kron_left&#39;vc.0.1" expl="false case (postcondition)" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="place_kron_left&#39;vc.0.1.0" expl="false case (postcondition)" proved="true">
    <transf name="replace" proved="true" arg1="(kronecker y z)" arg2="(kronecker kronecker_neutral (kronecker y z))">
     <goal name="place_kron_left&#39;vc.0.1.0.0" expl="false case (postcondition)" proved="true">
     <transf name="replace" proved="true" arg1="(kronecker y&#39; z)" arg2="(kronecker kronecker_neutral (kronecker y&#39; z))">
      <goal name="place_kron_left&#39;vc.0.1.0.0.0" expl="false case (postcondition)" proved="true">
      <transf name="apply" proved="true" arg1="place_kron">
       <goal name="place_kron_left&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.77" steps="988647"/></proof>
       </goal>
       <goal name="place_kron_left&#39;vc.0.1.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.78" steps="988654"/></proof>
       </goal>
       <goal name="place_kron_left&#39;vc.0.1.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.75" steps="989422"/></proof>
       </goal>
       <goal name="place_kron_left&#39;vc.0.1.0.0.0.3" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.76" steps="988640"/></proof>
       </goal>
       <goal name="place_kron_left&#39;vc.0.1.0.0.0.4" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.79" steps="988654"/></proof>
       </goal>
       <goal name="place_kron_left&#39;vc.0.1.0.0.0.5" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.74" steps="988640"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_kron_left&#39;vc.0.1.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="7"><result status="valid" time="2.89" steps="1052055"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="place_kron_left&#39;vc.0.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="7"><result status="valid" time="2.88" steps="1052051"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron_right&#39;vc" expl="VC for place_kron_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron_right&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="place_kron_right&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_place">
    <goal name="place_kron_right&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="unwire_path_sem">
     <goal name="place_kron_right&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="place_kron_right">
      <goal name="place_kron_right&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.23" steps="785547"/></proof>
      </goal>
      <goal name="place_kron_right&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="2.24" steps="845324"/></proof>
      </goal>
      <goal name="place_kron_right&#39;vc.0.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.27" steps="785545"/></proof>
      </goal>
      <goal name="place_kron_right&#39;vc.0.0.0.0.3" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.31" steps="785545"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="place_kron_right&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="2.20" steps="844142"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="place_kron_right&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.22" steps="844125"/></proof>
    </goal>
    <goal name="place_kron_right&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.45" steps="799422"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="place_kron_right&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="1.50"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_place&#39;vc" expl="VC for place_place" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_place&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="place_place&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_path_sem">
    <goal name="place_place&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="unwire_place">
     <goal name="place_place&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="unwire_place">
      <goal name="place_place&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="unwire_place">
       <goal name="place_place&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="place_place">
        <goal name="place_place&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="1.26" steps="785949"/></proof>
        </goal>
        <goal name="place_place&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="2.48" steps="880690"/></proof>
        </goal>
        <goal name="place_place&#39;vc.0.0.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="1.28" steps="785949"/></proof>
        </goal>
        <goal name="place_place&#39;vc.0.0.0.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="1.33" steps="785949"/></proof>
        </goal>
        <goal name="place_place&#39;vc.0.0.0.0.0.0.4" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="1.34" steps="785949"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_place&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="2.30" steps="845003"/></proof>
       </goal>
       <goal name="place_place&#39;vc.0.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="2.25" steps="845037"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_place&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.31" steps="785949"/></proof>
      </goal>
      <goal name="place_place&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.33" steps="785949"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="place_place&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.28" steps="785949"/></proof>
     </goal>
     <goal name="place_place&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="3.43" steps="1067418"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="place_place&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="3.74" steps="1094090"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="place_place&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="3.41" steps="1068909"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_get_ket&#39;vc" expl="VC for place_get_ket" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_get_ket&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="place_get_ket&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_path_sem">
    <goal name="place_get_ket&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(width c)" arg2="(width1 (unwire c))">
     <goal name="place_get_ket&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="unwire_place">
      <goal name="place_get_ket&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="place_get_ket">
       <goal name="place_get_ket&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.28" steps="786353"/></proof>
       </goal>
       <goal name="place_get_ket&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="2.42" steps="881082"/></proof>
       </goal>
       <goal name="place_get_ket&#39;vc.0.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.34" steps="786353"/></proof>
       </goal>
       <goal name="place_get_ket&#39;vc.0.0.0.0.0.3" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.35" steps="786353"/></proof>
       </goal>
       <goal name="place_get_ket&#39;vc.0.0.0.0.0.4" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.35" steps="786353"/></proof>
       </goal>
       <goal name="place_get_ket&#39;vc.0.0.0.0.0.5" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="2.32" steps="903800"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_get_ket&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.15" steps="786353"/></proof>
      </goal>
      <goal name="place_get_ket&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.22" steps="786353"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="place_get_ket&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="7"><result status="valid" time="2.38" steps="845838"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="place_get_ket&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
     <goal name="place_get_ket&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="make_bv_length">
      <goal name="place_get_ket&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="place_get_ket&#39;vc.0.0.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="3.70" steps="1081385"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_get_ket&#39;vc.0.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="3.69" steps="1070620"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_get_ket&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="3.79" steps="1072814"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_get_ket_hpart_null&#39;vc" expl="VC for place_get_ket_hpart_null" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_get_ket_hpart_null&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="place_get_ket_hpart_null&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_place">
    <goal name="place_get_ket_hpart_null&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="7"><result status="valid" time="3.87" steps="1075504"/></proof>
    </goal>
    <goal name="place_get_ket_hpart_null&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.42" steps="786976"/></proof>
    </goal>
    <goal name="place_get_ket_hpart_null&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.45" steps="786976"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="place_get_ket_hpart_null&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="3.75" steps="1072780"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_get_ket_tpart_null&#39;vc" expl="VC for place_get_ket_tpart_null" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_get_ket_tpart_null&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="place_get_ket_tpart_null&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_place">
    <goal name="place_get_ket_tpart_null&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="place_get_ket_tpart_null">
     <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.45" steps="787335"/></proof>
     </goal>
     <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.67" steps="881949"/></proof>
     </goal>
     <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.42" steps="787335"/></proof>
     </goal>
     <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.3" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.46" steps="787335"/></proof>
     </goal>
     <goal name="place_get_ket_tpart_null&#39;vc.0.0.0.4" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.61" steps="905032"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="place_get_ket_tpart_null&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.36" steps="787335"/></proof>
    </goal>
    <goal name="place_get_ket_tpart_null&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.35" steps="787335"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="place_get_ket_tpart_null&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="3.63" steps="1073179"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_hadamard&#39;vc" expl="VC for place_hadamard" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_hadamard&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.36" steps="787599"/></proof>
  </goal>
  <goal name="place_hadamard&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.30" steps="845713"/></proof>
  </goal>
  <goal name="place_hadamard&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.43" steps="814230"/></proof>
  </goal>
  <goal name="place_hadamard&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.56" steps="814242"/></proof>
  </goal>
  <goal name="place_hadamard&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.19" steps="800284"/></proof>
  </goal>
  <goal name="place_hadamard&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.56" steps="814260"/></proof>
  </goal>
  <goal name="place_hadamard&#39;vc.6" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="place_hadamard&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="place_hadamard&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="place_hadamard&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="place&#39;spec1">
      <goal name="place_hadamard&#39;vc.6.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="hadamard&#39;def1">
       <goal name="place_hadamard&#39;vc.6.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="eliminate_if" proved="true" >
        <goal name="place_hadamard&#39;vc.6.0.0.0.0.0.0" expl="VC for place_hadamard" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="place_hadamard&#39;vc.6.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="7"><result status="valid" time="2.22" steps="1078958"/></proof>
         </goal>
         <goal name="place_hadamard&#39;vc.6.0.0.0.0.0.0.1" expl="postcondition" proved="true">
         <proof prover="7"><result status="valid" time="3.17" steps="1125687"/></proof>
         </goal>
         <goal name="place_hadamard&#39;vc.6.0.0.0.0.0.0.2" expl="postcondition" proved="true">
         <proof prover="7"><result status="valid" time="3.21" steps="1124922"/></proof>
         </goal>
         <goal name="place_hadamard&#39;vc.6.0.0.0.0.0.0.3" expl="postcondition" proved="true">
         <proof prover="7"><result status="valid" time="1.75" steps="1063528"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="place_hadamard&#39;vc.6.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.85" steps="1050292"/></proof>
      </goal>
      <goal name="place_hadamard&#39;vc.6.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="3.03" steps="1109049"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place_hadamard&#39;vc.7" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="place_hadamard&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="place_hadamard&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="place_hadamard&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="place&#39;spec">
      <goal name="place_hadamard&#39;vc.7.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="hadamard&#39;def">
       <goal name="place_hadamard&#39;vc.7.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="place_hadamard&#39;vc.7.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.95" steps="1050421"/></proof>
      </goal>
      <goal name="place_hadamard&#39;vc.7.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="3.08" steps="1109239"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place_hadamard&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="place_hadamard&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="((((x @ k) *&#39; (y @ 0)) *&#39; power 2 (m -&#39;&#39; 1)) /./ m)" arg2="((((x @ k) *&#39; (y @ 0)) *&#39; power 2 (m -&#39;&#39; 1)) /./ (1 +&#39;(m-&#39;&#39;1)))">
    <goal name="place_hadamard&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="goal_comm">
     <goal name="place_hadamard&#39;vc.8.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="int_to_ang_up">
      <goal name="place_hadamard&#39;vc.8.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.38" steps="800551"/></proof>
      </goal>
      <goal name="place_hadamard&#39;vc.8.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.37" steps="800558"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_hadamard&#39;vc.8.0.1" expl="equality hypothesis" proved="true">
    <proof prover="7"><result status="valid" time="1.23" steps="800614"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place_hadamard&#39;vc.9" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures" arg2="with" arg3="m">
   <goal name="place_hadamard&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="decomp" arg2="( ((x @ k) *&#39; (y @ 0))),2">
    <goal name="place_hadamard&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="place_hadamard&#39;vc.9.0.0.0" expl="postcondition" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b c. (a+&#39;b) *&#39; c = a*&#39;c+&#39; b*&#39;c)">
      <goal name="place_hadamard&#39;vc.9.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="7"><result status="valid" time="1.24" steps="800849"/></proof>
      </goal>
      <goal name="place_hadamard&#39;vc.9.0.0.0.1" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="h">
       <goal name="place_hadamard&#39;vc.9.0.0.0.1.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="((2 *&#39; div1 ((x @ k) *&#39; (y @ 0)) 2) *&#39; power 2 (m -&#39;&#39; 1))" arg2="((div1 ((x @ k) *&#39; (y @ 0)) 2) *&#39; power 2 m)">
        <goal name="place_hadamard&#39;vc.9.0.0.0.1.0.0" expl="postcondition" proved="true">
        <transf name="assert" proved="true" arg1="(forall a b. a+&#39;b = b+&#39;a)">
         <goal name="place_hadamard&#39;vc.9.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
         <proof prover="7"><result status="valid" time="1.42" steps="800888"/></proof>
         </goal>
         <goal name="place_hadamard&#39;vc.9.0.0.0.1.0.0.1" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="h">
          <goal name="place_hadamard&#39;vc.9.0.0.0.1.0.0.1.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="int_to_ang_cycles_gen">
           <goal name="place_hadamard&#39;vc.9.0.0.0.1.0.0.1.0.0" expl="postcondition" proved="true">
           <transf name="apply" proved="true" arg1="goal_comm">
            <goal name="place_hadamard&#39;vc.9.0.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="h">
             <goal name="place_hadamard&#39;vc.9.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="assert" proved="true" arg1="(forall a b c. -&#39;(a*&#39;b +&#39;c) = (-&#39;a) *&#39; b +&#39; (-&#39;c))
">
              <goal name="place_hadamard&#39;vc.9.0.0.0.1.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
              <proof prover="7"><result status="valid" time="1.39" steps="800962"/></proof>
              </goal>
              <goal name="place_hadamard&#39;vc.9.0.0.0.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="h">
               <goal name="place_hadamard&#39;vc.9.0.0.0.1.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="h1">
                <goal name="place_hadamard&#39;vc.9.0.0.0.1.0.0.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="int_to_ang_cycles_gen">
                 <goal name="place_hadamard&#39;vc.9.0.0.0.1.0.0.1.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <proof prover="6"><result status="valid" time="5.16" steps="229765"/></proof>
                 </goal>
                 <goal name="place_hadamard&#39;vc.9.0.0.0.1.0.0.1.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="2.25" steps="858835"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="place_hadamard&#39;vc.9.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="2.25" steps="858760"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="place_hadamard&#39;vc.9.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <proof prover="0"><result status="valid" time="1.36"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="place_hadamard&#39;vc.9.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.37" steps="800788"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_hadamard&#39;vc.9.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="1.38" steps="800687"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_hadamard_bv&#39;vc" expl="VC for place_hadamard_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_hadamard_bv&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="place_hadamard_bv&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.21" steps="788853"/></proof>
   </goal>
   <goal name="place_hadamard_bv&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.30" steps="788868"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.30" steps="801509"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.29" steps="801512"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.3" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="place_hadamard_bv&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="place_hadamard_bv&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="place_hadamard&#39;def">
     <goal name="place_hadamard_bv&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="place_hadamard_bv&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="place&#39;spec4">
       <goal name="place_hadamard_bv&#39;vc.3.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="7"><result status="valid" time="1.70" steps="1052080"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.3.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.70" steps="1052080"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.3.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="2.86" steps="1110981"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="place_hadamard_bv&#39;vc.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.31" steps="801094"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.4" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="place_hadamard_bv&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="place_hadamard_bv&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="place_hadamard&#39;def">
     <goal name="place_hadamard_bv&#39;vc.4.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="place_hadamard_bv&#39;vc.4.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="place&#39;spec5">
       <goal name="place_hadamard_bv&#39;vc.4.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="7"><result status="valid" time="1.88" steps="1052083"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.4.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.73" steps="1052083"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.4.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.07" steps="1110986"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="place_hadamard_bv&#39;vc.4.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.22" steps="801097"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="3.15" steps="1075081"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.6" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures7">
  </transf>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="4.81" steps="209020"/></proof>
  </goal>
  <goal name="place_hadamard_bv&#39;vc.8" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="correct_path_sum_to_bv">
   <goal name="place_hadamard_bv&#39;vc.8.0" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="1.38" steps="801898"/></proof>
   </goal>
   <goal name="place_hadamard_bv&#39;vc.8.1" expl="apply premises" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="place_hadamard_bv&#39;vc.8.1.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="place_hadamard_bv&#39;vc.8.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="make_bv_length">
      <goal name="place_hadamard_bv&#39;vc.8.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.15" steps="801930"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.1.0.0.1" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="place_hadamard_bv&#39;vc.8.1.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.68" steps="1089185"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="2.35" steps="860326"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_hadamard_bv&#39;vc.8.2" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="set_correct_main_path_sum">
    <goal name="place_hadamard_bv&#39;vc.8.2.0" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="place_hadamard_bv&#39;vc.8.2.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="build_pps_bv&#39;spec3">
      <goal name="place_hadamard_bv&#39;vc.8.2.0.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="2.97" steps="1067567"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.2.0.0.1" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="2.00" steps="1005149"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.2.0.0.2" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="place_hadamard_bv&#39;vc.8.2.0.0.2.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="place_hadamard_bv&#39;vc.8.2.0.0.2.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="place_hadamard_bv&#39;vc.8.2.0.0.2.0.0.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="1.94" steps="1005181"/></proof>
         </goal>
         <goal name="place_hadamard_bv&#39;vc.8.2.0.0.2.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="place_hadamard_bv&#39;vc.8.2.0.0.2.0.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="3.73" steps="1253030"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_hadamard_bv&#39;vc.8.2.0.0.2.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="2.62" steps="1067619"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_hadamard_bv&#39;vc.8.2.1" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="place_hadamard_bv&#39;vc.8.2.1.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec2">
      <goal name="place_hadamard_bv&#39;vc.8.2.1.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.58" steps="1005149"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.2.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="2.64" steps="1067567"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.2.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.72" steps="1005149"/></proof>
      </goal>
      <goal name="place_hadamard_bv&#39;vc.8.2.1.0.3" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="place_hadamard_bv&#39;vc.8.2.1.0.3.0" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="place_hadamard_bv&#39;vc.8.2.1.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="place_hadamard_bv&#39;vc.8.2.1.0.3.0.0.0" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="1.68" steps="1005181"/></proof>
         </goal>
         <goal name="place_hadamard_bv&#39;vc.8.2.1.0.3.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="place_hadamard_bv&#39;vc.8.2.1.0.3.0.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="4.09" steps="1253030"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_hadamard_bv&#39;vc.8.2.1.0.3.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="2.84" steps="1067619"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_hadamard_bv&#39;vc.8.2.2" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="place_hadamard_bv&#39;vc.8.2.2.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_hadamard_bv&#39;vc.8.2.2.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec">
       <goal name="place_hadamard_bv&#39;vc.8.2.2.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="place_hadamard_bv&#39;vc.8.2.2.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="goal_comm">
         <goal name="place_hadamard_bv&#39;vc.8.2.2.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="Ensures">
          <goal name="place_hadamard_bv&#39;vc.8.2.2.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="2.85" steps="1067628"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.2.2.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="2.85" steps="1067630"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.2.2.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.53" steps="1005181"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.2.2.0.0.3" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="place_hadamard_bv&#39;vc.8.2.2.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="place_hadamard_bv&#39;vc.8.2.2.0.0.3.0.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="place_hadamard_bv&#39;vc.8.2.2.0.0.3.0.0.0" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="1.81" steps="1005213"/></proof>
          </goal>
          <goal name="place_hadamard_bv&#39;vc.8.2.2.0.0.3.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="place_hadamard_bv&#39;vc.8.2.2.0.0.3.0.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="4.00" steps="1258274"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="place_hadamard_bv&#39;vc.8.2.2.0.0.3.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="2.82" steps="1067682"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.2.2.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.75" steps="1005174"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.2.2.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.86" steps="1020326"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="place_hadamard_bv&#39;vc.8.2.3" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="place_hadamard_bv&#39;vc.8.2.3.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="build_pps_bv&#39;spec1">
       <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures2">
        <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
          <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
          </transf>
          </goal>
          <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="4.07" steps="1252734"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="2.82" steps="1067705"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.80" steps="1067705"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="2.87" steps="1067678"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.86" steps="1005206"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.3" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.3.0.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.3.0.0.0" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="1.85" steps="1005238"/></proof>
          </goal>
          <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.3.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.3.0.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="4.22" steps="1258345"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.3.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="2.92" steps="1067732"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.81" steps="1005199"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.84" steps="1020351"/></proof>
       </goal>
       <goal name="place_hadamard_bv&#39;vc.8.2.3.0.0.6" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.84" steps="1005208"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_cont&#39;vc" expl="VC for path_cont" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_cont&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="path_cont&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_cont">
    <goal name="path_cont&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="7"><result status="valid" time="3.17" steps="1083321"/></proof>
    </goal>
    <goal name="path_cont&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.41" steps="802270"/></proof>
    </goal>
    <goal name="path_cont&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="path_cont&#39;vc.0.0.2.0" proved="true">
     <proof prover="7"><result status="valid" time="1.79" steps="1006111"/></proof>
     </goal>
     <goal name="path_cont&#39;vc.0.0.2.1" proved="true">
     <proof prover="7"><result status="valid" time="1.83" steps="1006111"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_cont&#39;vc.0.0.3" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.36" steps="802261"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_cont&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="1.49"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_cont&#39;vc.1" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="path_cont&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_cont">
    <goal name="path_cont&#39;vc.1.0.0" expl="postcondition" proved="true">
    <proof prover="7"><result status="valid" time="3.57" steps="1084493"/></proof>
    </goal>
    <goal name="path_cont&#39;vc.1.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.33" steps="802382"/></proof>
    </goal>
    <goal name="path_cont&#39;vc.1.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.34" steps="802380"/></proof>
    </goal>
    <goal name="path_cont&#39;vc.1.0.3" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.40" steps="802373"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_cont&#39;vc.1.1" expl="rewrite premises" proved="true">
   <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
    <goal name="path_cont&#39;vc.1.1.0" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="4.88" steps="205671"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_width&#39;vc" expl="VC for cont_width" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_width&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.33"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_cont_ketz&#39;vc" expl="VC for path_cont_ketz" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_cont_ketz&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_cont_ketz&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.36" steps="803114"/></proof>
   </goal>
   <goal name="path_cont_ketz&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.35" steps="803125"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_cont_ketz&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_cont_ketz&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.38" steps="803123"/></proof>
   </goal>
   <goal name="path_cont_ketz&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.44" steps="803123"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_cont_ketz&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_cont_ketz&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.46" steps="803132"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_cont_ketz&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="3.81" steps="1085100"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_cont_keto&#39;vc" expl="VC for path_cont_keto" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_cont_keto&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_cont_keto&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.43" steps="803454"/></proof>
   </goal>
   <goal name="path_cont_keto&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.46" steps="803465"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_cont_keto&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_cont_keto&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.45" steps="803463"/></proof>
   </goal>
   <goal name="path_cont_keto&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.38" steps="803463"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_cont_keto&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_cont_keto&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.41" steps="803472"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_cont_keto&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="3.54" steps="1086026"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_cont_ketz_gen&#39;vc" expl="VC for path_cont_ketz_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_cont_ketz_gen&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="3.43" steps="1082439"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_cont_keto_gen&#39;vc" expl="VC for path_cont_keto_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_cont_keto_gen&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="3.46" steps="1083554"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cont_kron_left_bv_to_ket&#39;vc" expl="VC for cont_kron_left_bv_to_ket" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_kron_left_bv_to_ket&#39;vc.0" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="x,(n-&#39;&#39;1)">
   <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst">
    <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
     <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="path_sem_sum">
      <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="6"><result status="valid" time="4.67" steps="208460"/></proof>
      </goal>
      <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="bv_to_ket_length">
       <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="3.53" steps="1090718"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.2" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.2.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(width (cont c (n -&#39;&#39; 1) 0 n))" arg2="(n-&#39;&#39;1+&#39;1)">
         <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="2.56" steps="944129"/></proof>
          </goal>
          <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.2.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="1.54" steps="884262"/></proof>
          </goal>
          <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.2.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.95" steps="1191642"/></proof>
          </goal>
          <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.2.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="2.68" steps="945383"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.2.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="7"><result status="valid" time="4.00" steps="1187270"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
         <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="path_sem_scal">
          <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="scalar_eq">
           <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="path_cont_ketz">
            <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="2.60" steps="944150"/></proof>
            </goal>
            <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.64" steps="898930"/></proof>
            </goal>
            <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.70" steps="898927"/></proof>
            </goal>
            <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.0.0.3" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="n" arg2="(n-&#39;&#39;1+&#39;1)">
             <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.0.0.3.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="kronecker_ket_l">
              <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="2.63" steps="944129"/></proof>
              </goal>
              <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.0.0.3.0.1" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="1.58" steps="884262"/></proof>
              </goal>
              <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.0.0.3.0.2" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.97" steps="1187182"/></proof>
              </goal>
              <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.0.0.3.0.3" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="2.66" steps="945383"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.0.0.3.1" expl="equality hypothesis" proved="true">
             <proof prover="7"><result status="valid" time="1.55" steps="884269"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.0.0.4" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.95" steps="1187995"/></proof>
            </goal>
            <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.0.0.5" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
             <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.0.0.5.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
              <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.0.0.5.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="concat_value_right">
               <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.0.0.5.0.0.0" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="1.66"/></proof>
               </goal>
               <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.0.0.5.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="0"><result status="valid" time="1.96"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="replace" proved="true" arg1="(width (cont c (n -&#39;&#39; 1) 0 n))" arg2="(n-&#39;&#39;1+&#39;1)">
           <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_ket_l">
            <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.1.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="2.70" steps="944129"/></proof>
            </goal>
            <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.1.0.1" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.60" steps="884262"/></proof>
            </goal>
            <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.1.0.2" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.73" steps="1187182"/></proof>
            </goal>
            <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.1.0.3" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="2.90" steps="945383"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.0.3.0.0.0.1.1" expl="equality hypothesis" proved="true">
           <proof prover="7"><result status="valid" time="3.72" steps="1187270"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.1.0" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="3.69" steps="1191838"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="3.46" steps="1090253"/></proof>
     </goal>
     <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="6"><result status="valid" time="4.74" steps="208451"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.19" steps="862542"/></proof>
    </goal>
    <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.29" steps="863690"/></proof>
    </goal>
    <goal name="cont_kron_left_bv_to_ket&#39;vc.0.0.3" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.30" steps="863741"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_kron_left_bv_to_ket&#39;vc.1" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="x,(n-&#39;&#39;1)">
   <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst">
    <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
     <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_sum_">
      <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_sum_">
       <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
        <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="ket_sum_eq">
         <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="2.40" steps="900098"/></proof>
         </goal>
         <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="1.61" steps="804881"/></proof>
         </goal>
         <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
            <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="path_sem_scal">
             <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="path_sem_scal">
              <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
               <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="scalar_eq">
                <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="path_cont_keto">
                 <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="place_kron_left">
                  <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="7"><result status="valid" time="1.56" steps="899068"/></proof>
                  </goal>
                  <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="7"><result status="valid" time="3.94" steps="1187966"/></proof>
                  </goal>
                  <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                  <proof prover="7"><result status="valid" time="2.82" steps="945604"/></proof>
                  </goal>
                  <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                  <proof prover="7"><result status="valid" time="1.53" steps="884385"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="2.58" steps="944339"/></proof>
                 </goal>
                 <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.41" steps="899094"/></proof>
                 </goal>
                 <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.70" steps="899087"/></proof>
                 </goal>
                 <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                 <transf name="replace" proved="true" arg1="n" arg2="(n-&#39;&#39;1+&#39;1)">
                  <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="kronecker_ket_l">
                   <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.4.0.0" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="2.68" steps="944318"/></proof>
                   </goal>
                   <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.4.0.1" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="1.65" steps="884394"/></proof>
                   </goal>
                   <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.4.0.2" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="4.08" steps="1187871"/></proof>
                   </goal>
                   <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.4.0.3" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="2.77" steps="945572"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.4.1" expl="equality hypothesis" proved="true">
                  <proof prover="7"><result status="valid" time="1.56" steps="884401"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="4.15" steps="1188665"/></proof>
                 </goal>
                 <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                  <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.6.0" expl="rewrite premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                   <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.6.0.0" expl="rewrite premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="concat_value_right">
                    <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.6.0.0.0" expl="rewrite premises" proved="true">
                    <proof prover="0"><result status="valid" time="1.83"/></proof>
                    </goal>
                    <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.6.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="0"><result status="valid" time="1.82"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="4.23" steps="1187966"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="replace" proved="true" arg1="(width (cont c (n -&#39;&#39; 1) 0 n))" arg2="(n-&#39;&#39;1+&#39;1)">
              <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_ket_l">
               <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="2.82" steps="944318"/></proof>
               </goal>
               <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="1.66" steps="884394"/></proof>
               </goal>
               <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="3.89" steps="1187871"/></proof>
               </goal>
               <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.1.0.3" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="2.71" steps="945572"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.0.2.0.0.0.1.1" expl="equality hypothesis" proved="true">
              <proof prover="7"><result status="valid" time="3.75" steps="1187881"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="path_sem_ket_l">
           <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.79" steps="1192401"/></proof>
           </goal>
           <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="1.49" steps="884394"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="3.49" steps="1091037"/></proof>
        </goal>
        <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="6"><result status="valid" time="5.21" steps="208175"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="6"><result status="valid" time="4.73" steps="208183"/></proof>
       </goal>
       <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.34" steps="804890"/></proof>
       </goal>
       <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="3.79" steps="1192520"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="6"><result status="valid" time="4.93" steps="208183"/></proof>
      </goal>
      <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.2" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="bv_to_ket_length">
       <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.2.0" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.59" steps="1091355"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="replace" proved="true" arg1="(width (cont c (n -&#39;&#39; 1) 0 n))" arg2="(n-&#39;&#39;1+&#39;1)">
         <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="2.57" steps="944318"/></proof>
          </goal>
          <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="1.33" steps="884394"/></proof>
          </goal>
          <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.3.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.73" steps="1192346"/></proof>
          </goal>
          <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.3.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="2.63" steps="945572"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="7"><result status="valid" time="3.91" steps="1187881"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.1" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.1.0.0" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.75" steps="1192346"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="3.49" steps="1091037"/></proof>
     </goal>
     <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="6"><result status="valid" time="4.87" steps="208175"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.19" steps="862731"/></proof>
    </goal>
    <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.35" steps="863879"/></proof>
    </goal>
    <goal name="cont_kron_left_bv_to_ket&#39;vc.1.0.3" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.41" steps="863930"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron_left_path&#39;vc" expl="VC for place_kron_left_path" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron_left_path&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="3.37" steps="1074552"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="place_kron_left_sem&#39;vc" expl="VC for place_kron_left_sem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_kron_left_sem&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="place_kron_left_sem&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="replace" proved="true" arg1="(width (place c 0 n))" arg2="( width c +&#39; (n-&#39;&#39; width c ))">
    <goal name="place_kron_left_sem&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="3.39" steps="1071551"/></proof>
    </goal>
    <goal name="place_kron_left_sem&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="7"><result status="valid" time="3.39" steps="1070341"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="place_kron_left_sem&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="place_kron_left">
    <goal name="place_kron_left_sem&#39;vc.0.1.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.26" steps="850661"/></proof>
    </goal>
    <goal name="place_kron_left_sem&#39;vc.0.1.1" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.32" steps="851803"/></proof>
    </goal>
    <goal name="place_kron_left_sem&#39;vc.0.1.2" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.26" steps="793734"/></proof>
    </goal>
    <goal name="place_kron_left_sem&#39;vc.0.1.3" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.31" steps="851800"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_kron_pat_right&#39;vc" expl="VC for cont_kron_pat_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_kron_pat_right&#39;vc.0" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="y,(width c)">
   <goal name="cont_kron_pat_right&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst">
    <goal name="cont_kron_pat_right&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
     <goal name="cont_kron_pat_right&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_sum_">
      <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="ket_sum_eq">
       <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="3.46" steps="1091563"/></proof>
       </goal>
       <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.33" steps="805822"/></proof>
       </goal>
       <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
          <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_scal">
           <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="path_cont_ketz">
            <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.47" steps="885326"/></proof>
            </goal>
            <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="3.61" steps="1174864"/></proof>
            </goal>
            <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="2.49" steps="945990"/></proof>
            </goal>
            <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="1.59" steps="885349"/></proof>
            </goal>
            <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.0.4" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="Requires1">
             <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.0.4.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="kronecker_ket_l">
              <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.0.4.0.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="2.44" steps="945940"/></proof>
              </goal>
              <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.0.4.0.1" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.60" steps="1174861"/></proof>
              </goal>
              <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.0.4.0.2" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="1.51" steps="885328"/></proof>
              </goal>
              <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.0.4.0.3" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.66" steps="1175575"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.0.5" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="3.77" steps="1176560"/></proof>
            </goal>
            <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.0.6" expl="rewrite premises" proved="true">
            <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
             <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.0.6.0" expl="rewrite premises" proved="true">
             <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
              <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.0.6.0.0" expl="rewrite premises" proved="true">
              <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
               <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.0.6.0.0.0" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="3.99" steps="1180400"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.0.6.1" expl="equality hypothesis" proved="true">
             <proof prover="7"><result status="valid" time="2.78" steps="946352"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(width (cont c co k n))" arg2="(k+&#39;width c)">
            <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_ket_l">
             <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.1.0.0" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="2.47" steps="945940"/></proof>
             </goal>
             <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.1.0.1" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.62" steps="1174861"/></proof>
             </goal>
             <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.1.0.2" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="1.46" steps="885328"/></proof>
             </goal>
             <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.1.0.3" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.63" steps="1175575"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.0.2.0.0.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="7"><result status="valid" time="3.69" steps="1177384"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="6"><result status="valid" time="4.95" steps="206975"/></proof>
      </goal>
      <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(ket_length x)" arg2="k">
       <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.2.0" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.78" steps="1091865"/></proof>
       </goal>
       <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.2.1" expl="equality hypothesis" proved="true">
       <proof prover="7"><result status="valid" time="3.79" steps="1089715"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="replace" proved="true" arg1="(width (cont c co k n))" arg2="(k+&#39;width c)">
         <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="2.41" steps="945940"/></proof>
          </goal>
          <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.95" steps="1174861"/></proof>
          </goal>
          <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.3.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="1.41" steps="885328"/></proof>
          </goal>
          <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.3.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.54" steps="1179158"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_kron_pat_right&#39;vc.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="7"><result status="valid" time="3.51" steps="1177384"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_kron_pat_right&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="cont_kron_pat_right&#39;vc.0.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="cont_kron_pat_right&#39;vc.0.0.0.1.0.0" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.49" steps="1179158"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_kron_pat_right&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="2.28" steps="864799"/></proof>
     </goal>
     <goal name="cont_kron_pat_right&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="6"><result status="valid" time="4.86" steps="206950"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cont_kron_pat_right&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="3.28" steps="1089341"/></proof>
    </goal>
    <goal name="cont_kron_pat_right&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.50" steps="864768"/></proof>
    </goal>
    <goal name="cont_kron_pat_right&#39;vc.0.0.3" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.77" steps="864808"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_kron_pat_right&#39;vc.1" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="y,(width c)">
   <goal name="cont_kron_pat_right&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst">
    <goal name="cont_kron_pat_right&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
     <goal name="cont_kron_pat_right&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_sum_">
      <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_sum_">
       <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
        <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="ket_sum_eq">
         <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="4.11" steps="1092079"/></proof>
         </goal>
         <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="1.56" steps="805948"/></proof>
         </goal>
         <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
            <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="path_sem_scal">
             <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="path_sem_scal">
              <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
               <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="scalar_eq">
                <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="path_cont_keto_gen">
                 <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="place_kron_right">
                  <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="7"><result status="valid" time="3.01" steps="946111"/></proof>
                  </goal>
                  <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="7"><result status="valid" time="1.95" steps="885468"/></proof>
                  </goal>
                  <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                  <proof prover="7"><result status="valid" time="2.00" steps="885454"/></proof>
                  </goal>
                  <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                  <proof prover="7"><result status="valid" time="4.47" steps="1176165"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="4.38" steps="1175487"/></proof>
                 </goal>
                 <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="2.57" steps="946152"/></proof>
                 </goal>
                 <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.53" steps="885475"/></proof>
                 </goal>
                 <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="Requires1">
                  <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="kronecker_ket_l">
                   <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.4.0.0" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="2.73" steps="946102"/></proof>
                   </goal>
                   <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.4.0.1" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="4.12" steps="1175403"/></proof>
                   </goal>
                   <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.4.0.2" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="1.68" steps="885454"/></proof>
                   </goal>
                   <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.4.0.3" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="4.17" steps="1176045"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="4.16" steps="1177212"/></proof>
                 </goal>
                 <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                 <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
                  <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.6.0" expl="rewrite premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                   <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.6.0.0" expl="rewrite premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                    <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.6.0.0.0" expl="rewrite premises" proved="true">
                    <proof prover="7"><result status="valid" time="4.10" steps="1180954"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.6.1" expl="equality hypothesis" proved="true">
                  <proof prover="7"><result status="valid" time="2.79" steps="946514"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="4.01" steps="1176045"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="replace" proved="true" arg1="(width (cont c co k n))" arg2="(k+&#39;width c)">
              <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_ket_l">
               <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="2.66" steps="946102"/></proof>
               </goal>
               <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="4.11" steps="1175403"/></proof>
               </goal>
               <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="1.60" steps="885454"/></proof>
               </goal>
               <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.1.0.3" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="4.30" steps="1176045"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.0.2.0.0.0.1.1" expl="equality hypothesis" proved="true">
              <proof prover="7"><result status="valid" time="4.25" steps="1178007"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="path_sem_ket_l">
           <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.72" steps="1179709"/></proof>
           </goal>
           <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="1.41" steps="885452"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.59" steps="864961"/></proof>
        </goal>
        <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="6"><result status="valid" time="4.95" steps="207391"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="6"><result status="valid" time="4.78" steps="207413"/></proof>
       </goal>
       <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.40" steps="805948"/></proof>
       </goal>
       <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.69" steps="1179709"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="6"><result status="valid" time="4.74" steps="207413"/></proof>
      </goal>
      <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.2" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(ket_length x)" arg2="k">
       <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.2.0" expl="rewrite premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.2.0.0" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="4.09" steps="1257400"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.2.1" expl="equality hypothesis" proved="true">
       <proof prover="7"><result status="valid" time="3.58" steps="1090255"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="replace" proved="true" arg1="(width (cont c co k n))" arg2="(k+&#39;width c)">
         <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="2.60" steps="946102"/></proof>
          </goal>
          <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.83" steps="1175403"/></proof>
          </goal>
          <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.3.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="1.44" steps="885454"/></proof>
          </goal>
          <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.3.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.80" steps="1179709"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="cont_kron_pat_right&#39;vc.1.0.0.0.3.0.0.1.0" expl="equality hypothesis" proved="true">
          <proof prover="7"><result status="valid" time="4.44" steps="1360569"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_kron_pat_right&#39;vc.1.0.0.1" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="cont_kron_pat_right&#39;vc.1.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="cont_kron_pat_right&#39;vc.1.0.0.1.0.0" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.81" steps="1179709"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_kron_pat_right&#39;vc.1.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="2.44" steps="864961"/></proof>
     </goal>
     <goal name="cont_kron_pat_right&#39;vc.1.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="6"><result status="valid" time="4.88" steps="207391"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cont_kron_pat_right&#39;vc.1.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="3.77" steps="1089942"/></proof>
    </goal>
    <goal name="cont_kron_pat_right&#39;vc.1.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.54" steps="864930"/></proof>
    </goal>
    <goal name="cont_kron_pat_right&#39;vc.1.0.3" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.49" steps="864970"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_kron_zero&#39;vc" expl="VC for cont_kron_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_kron_zero&#39;vc.0" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="y,(width c)">
   <goal name="cont_kron_zero&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst">
    <goal name="cont_kron_zero&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
     <goal name="cont_kron_zero&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
      <goal name="cont_kron_zero&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_sum_">
       <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq">
        <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="3.64" steps="1098173"/></proof>
        </goal>
        <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="1.31" steps="806662"/></proof>
        </goal>
        <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
           <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
            <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="path_sem_scal">
             <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="path_cont_ketz_gen">
              <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="1.56" steps="886166"/></proof>
              </goal>
              <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="1.54" steps="886177"/></proof>
              </goal>
              <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="1.51" steps="886175"/></proof>
              </goal>
              <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.3" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="1.52" steps="886168"/></proof>
              </goal>
              <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.4" expl="rewrite premises" proved="true">
              <transf name="replace" proved="true" arg1="n" arg2="(k+&#39;width c +&#39; (n -&#39;&#39; k -&#39;&#39; width c))">
               <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.4.0.0" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="3.84" steps="1180941"/></proof>
                </goal>
                <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.4.0.1" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="1.52" steps="886175"/></proof>
                </goal>
                <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.4.0.2" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="kronecker_ket_l">
                 <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.4.0.2.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.50" steps="886168"/></proof>
                 </goal>
                 <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.4.0.2.1" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.79" steps="1181020"/></proof>
                 </goal>
                 <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.4.0.2.2" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.55" steps="886168"/></proof>
                 </goal>
                 <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.4.0.2.3" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.80" steps="1181651"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.4.0.3" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="1.54" steps="886168"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.4.1" expl="equality hypothesis" proved="true">
               <proof prover="7"><result status="valid" time="1.50" steps="886184"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.5" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="3.89" steps="1184508"/></proof>
              </goal>
              <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.6" expl="rewrite premises" proved="true">
              <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
               <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.6.0" expl="rewrite premises" proved="true">
               <transf name="replace" proved="true" arg1="z" arg2="(bv_to_ket (ket_to_bv z))">
                <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.6.0.0" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                 <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.6.0.0.0" expl="rewrite premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                  <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.6.0.0.0.0" expl="rewrite premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                   <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.6.0.0.0.0.0" expl="rewrite premises" proved="true">
                   <proof prover="0"><result status="valid" time="2.02"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.6.0.1" expl="equality hypothesis" proved="true">
                <proof prover="7"><result status="valid" time="2.72" steps="947359"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.6.1" expl="equality hypothesis" proved="true">
               <proof prover="7"><result status="valid" time="2.66" steps="947359"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="replace" proved="true" arg1="(width (cont c co k n))" arg2="(k+&#39;width c +&#39; (n -&#39;&#39; k -&#39;&#39; width c))">
              <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_ket_l">
               <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="3.87" steps="1180941"/></proof>
               </goal>
               <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="1.55" steps="886175"/></proof>
               </goal>
               <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.1.0.2" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.1.0.2.0" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="1.56" steps="886168"/></proof>
                </goal>
                <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.1.0.2.1" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="3.93" steps="1181020"/></proof>
                </goal>
                <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.1.0.2.2" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="1.58" steps="886168"/></proof>
                </goal>
                <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.1.0.2.3" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="3.88" steps="1181651"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.1.0.3" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="1.57" steps="886168"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.0.2.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
              <proof prover="7"><result status="valid" time="3.91" steps="1181549"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="6"><result status="valid" time="4.96" steps="207823"/></proof>
       </goal>
       <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.70" steps="1100560"/></proof>
       </goal>
       <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
         <transf name="replace" proved="true" arg1="(width (cont c co k n))" arg2="(k+&#39;width c +&#39; (n -&#39;&#39; k -&#39;&#39; width c))">
          <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_ket_l">
           <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.94" steps="1180941"/></proof>
           </goal>
           <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="1.54" steps="886175"/></proof>
           </goal>
           <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.3.0.0.0.2" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_ket_l">
            <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.3.0.0.0.2.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.55" steps="886168"/></proof>
            </goal>
            <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.3.0.0.0.2.1" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.68" steps="1181020"/></proof>
            </goal>
            <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.3.0.0.0.2.2" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.54" steps="886168"/></proof>
            </goal>
            <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.3.0.0.0.2.3" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.65" steps="1185019"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.3.0.0.0.3" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="1.48" steps="886168"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="cont_kron_zero&#39;vc.0.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="7"><result status="valid" time="3.65" steps="1181549"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_kron_zero&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="cont_kron_zero&#39;vc.0.0.0.0.1.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="cont_kron_zero&#39;vc.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
        <transf name="replace" proved="true" arg1="(width c +&#39; ket_length x)" arg2="(ket_length x +&#39; width c)">
         <goal name="cont_kron_zero&#39;vc.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="cont_kron_zero&#39;vc.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.66" steps="1181332"/></proof>
          </goal>
          <goal name="cont_kron_zero&#39;vc.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.75" steps="1181020"/></proof>
          </goal>
          <goal name="cont_kron_zero&#39;vc.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.75" steps="1181412"/></proof>
          </goal>
          <goal name="cont_kron_zero&#39;vc.0.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.75" steps="1185019"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_kron_zero&#39;vc.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="7"><result status="valid" time="1.48" steps="886193"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_kron_zero&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="2.41" steps="865982"/></proof>
      </goal>
      <goal name="cont_kron_zero&#39;vc.0.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="6"><result status="valid" time="4.68" steps="207803"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_kron_zero&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="cont_kron_zero&#39;vc.0.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="cont_kron_zero&#39;vc.0.0.0.1.0.0" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.69" steps="1185019"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_kron_zero&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="2.32" steps="865954"/></proof>
     </goal>
     <goal name="cont_kron_zero&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="6"><result status="valid" time="4.54" steps="207803"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cont_kron_zero&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="3.50" steps="1095457"/></proof>
    </goal>
    <goal name="cont_kron_zero&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.36" steps="865944"/></proof>
    </goal>
    <goal name="cont_kron_zero&#39;vc.0.0.3" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.35" steps="865984"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_kron_one&#39;vc" expl="VC for cont_kron_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_kron_one&#39;vc.0" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="y,(width c)">
   <goal name="cont_kron_one&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst">
    <goal name="cont_kron_one&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
     <goal name="cont_kron_one&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
      <goal name="cont_kron_one&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_sum_">
       <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_sum_">
        <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="ket_sum_eq">
         <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="3.70" steps="1099201"/></proof>
         </goal>
         <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="1.35" steps="807181"/></proof>
         </goal>
         <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
            <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
             <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="path_sem_scal">
              <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="path_sem_scal">
               <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="path_cont_keto_gen">
                <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="1.29" steps="886685"/></proof>
                </goal>
                <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="1.31" steps="886696"/></proof>
                </goal>
                <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="1.55" steps="886694"/></proof>
                </goal>
                <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="1.52" steps="886687"/></proof>
                </goal>
                <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                <transf name="replace" proved="true" arg1="n" arg2="(k+&#39;width c +&#39; (n -&#39;&#39; k -&#39;&#39; width c))">
                 <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="kronecker_ket_l">
                  <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.4.0.0" expl="apply premises" proved="true">
                  <proof prover="7"><result status="valid" time="3.88" steps="1181488"/></proof>
                  </goal>
                  <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.4.0.1" expl="apply premises" proved="true">
                  <proof prover="7"><result status="valid" time="1.28" steps="886694"/></proof>
                  </goal>
                  <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.4.0.2" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="kronecker_ket_l">
                   <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.4.0.2.0" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="1.53" steps="886687"/></proof>
                   </goal>
                   <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.4.0.2.1" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="4.06" steps="1181497"/></proof>
                   </goal>
                   <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.4.0.2.2" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="1.56" steps="886687"/></proof>
                   </goal>
                   <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.4.0.2.3" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="3.66" steps="1182146"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.4.0.3" expl="apply premises" proved="true">
                  <proof prover="7"><result status="valid" time="1.47" steps="886687"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.4.1" expl="equality hypothesis" proved="true">
                 <proof prover="7"><result status="valid" time="1.50" steps="886703"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="3.67" steps="1184970"/></proof>
                </goal>
                <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
                 <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.6.0" expl="rewrite premises" proved="true">
                 <transf name="replace" proved="true" arg1="z" arg2="(bv_to_ket (ket_to_bv z))">
                  <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.6.0.0" expl="rewrite premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                   <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.6.0.0.0" expl="rewrite premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                    <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.6.0.0.0.0" expl="rewrite premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                     <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.6.0.0.0.0.0" expl="rewrite premises" proved="true">
                     <proof prover="0"><result status="valid" time="1.98"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.6.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="7"><result status="valid" time="2.82" steps="947879"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.0.6.1" expl="equality hypothesis" proved="true">
                 <proof prover="7"><result status="valid" time="2.51" steps="947879"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <transf name="replace" proved="true" arg1="(width (place c k n))" arg2="(k+&#39;width c +&#39; (n -&#39;&#39; k -&#39;&#39; width c))">
                <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="kronecker_ket_l">
                 <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.66" steps="1181488"/></proof>
                 </goal>
                 <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.47" steps="886694"/></proof>
                 </goal>
                 <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="kronecker_ket_l">
                  <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.1.0.2.0" expl="apply premises" proved="true">
                  <proof prover="7"><result status="valid" time="1.67" steps="886687"/></proof>
                  </goal>
                  <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.1.0.2.1" expl="apply premises" proved="true">
                  <proof prover="7"><result status="valid" time="3.66" steps="1181497"/></proof>
                  </goal>
                  <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.1.0.2.2" expl="apply premises" proved="true">
                  <proof prover="7"><result status="valid" time="1.47" steps="886687"/></proof>
                  </goal>
                  <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.1.0.2.3" expl="apply premises" proved="true">
                  <proof prover="7"><result status="valid" time="3.64" steps="1182146"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.1.0.3" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.47" steps="886687"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                <proof prover="7"><result status="valid" time="3.63" steps="1182042"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="replace" proved="true" arg1="(width (cont c co k n))" arg2="(k+&#39;width c +&#39; (n -&#39;&#39; k -&#39;&#39; width c))">
               <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="3.65" steps="1181488"/></proof>
                </goal>
                <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="1.47" steps="886694"/></proof>
                </goal>
                <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="kronecker_ket_l">
                 <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.1.0.2.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.47" steps="886687"/></proof>
                 </goal>
                 <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.1.0.2.1" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.63" steps="1181497"/></proof>
                 </goal>
                 <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.1.0.2.2" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.47" steps="886687"/></proof>
                 </goal>
                 <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.1.0.2.3" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.60" steps="1182146"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.1.0.3" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="1.42" steps="886687"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
               <proof prover="7"><result status="valid" time="3.66" steps="1182072"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="6"><result status="valid" time="4.75" steps="207958"/></proof>
        </goal>
        <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="3.50" steps="1101445"/></proof>
        </goal>
        <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
          <transf name="replace" proved="true" arg1="(width (place c k n))" arg2="(k+&#39;width c +&#39; (n -&#39;&#39; k -&#39;&#39; width c))">
           <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_ket_l">
            <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.70" steps="1181488"/></proof>
            </goal>
            <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.50" steps="886694"/></proof>
            </goal>
            <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.3.0.0.0.2" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_ket_l">
             <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.3.0.0.0.2.0" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="1.45" steps="886687"/></proof>
             </goal>
             <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.3.0.0.0.2.1" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.74" steps="1181497"/></proof>
             </goal>
             <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.3.0.0.0.2.2" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="1.50" steps="886687"/></proof>
             </goal>
             <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.3.0.0.0.2.3" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.68" steps="1185776"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.3.0.0.0.3" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.47" steps="886687"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="cont_kron_one&#39;vc.0.0.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="7"><result status="valid" time="3.69" steps="1182042"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="cont_kron_one&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="6"><result status="valid" time="4.73" steps="207958"/></proof>
       </goal>
       <goal name="cont_kron_one&#39;vc.0.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.48" steps="1101580"/></proof>
       </goal>
       <goal name="cont_kron_one&#39;vc.0.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_kron_one&#39;vc.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="cont_kron_one&#39;vc.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
         <transf name="replace" proved="true" arg1="(width (cont c co k n))" arg2="(k+&#39;width c +&#39; (n -&#39;&#39; k -&#39;&#39; width c))">
          <goal name="cont_kron_one&#39;vc.0.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_ket_l">
           <goal name="cont_kron_one&#39;vc.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.74" steps="1181488"/></proof>
           </goal>
           <goal name="cont_kron_one&#39;vc.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="1.72" steps="886694"/></proof>
           </goal>
           <goal name="cont_kron_one&#39;vc.0.0.0.0.0.3.0.0.0.2" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_ket_l">
            <goal name="cont_kron_one&#39;vc.0.0.0.0.0.3.0.0.0.2.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.49" steps="886687"/></proof>
            </goal>
            <goal name="cont_kron_one&#39;vc.0.0.0.0.0.3.0.0.0.2.1" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.60" steps="1181497"/></proof>
            </goal>
            <goal name="cont_kron_one&#39;vc.0.0.0.0.0.3.0.0.0.2.2" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.71" steps="886687"/></proof>
            </goal>
            <goal name="cont_kron_one&#39;vc.0.0.0.0.0.3.0.0.0.2.3" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.66" steps="1185776"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="cont_kron_one&#39;vc.0.0.0.0.0.3.0.0.0.3" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="1.45" steps="886687"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="cont_kron_one&#39;vc.0.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="7"><result status="valid" time="3.70" steps="1182072"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_kron_one&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="cont_kron_one&#39;vc.0.0.0.0.1.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="cont_kron_one&#39;vc.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
        <transf name="replace" proved="true" arg1="(width c +&#39; ket_length x)" arg2="(ket_length x +&#39; width c)">
         <goal name="cont_kron_one&#39;vc.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="cont_kron_one&#39;vc.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.71" steps="1181866"/></proof>
          </goal>
          <goal name="cont_kron_one&#39;vc.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.65" steps="1181497"/></proof>
          </goal>
          <goal name="cont_kron_one&#39;vc.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.76" steps="1181897"/></proof>
          </goal>
          <goal name="cont_kron_one&#39;vc.0.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.64" steps="1185776"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_kron_one&#39;vc.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="7"><result status="valid" time="1.47" steps="886712"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_kron_one&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="2.36" steps="866544"/></proof>
      </goal>
      <goal name="cont_kron_one&#39;vc.0.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="6"><result status="valid" time="4.88" steps="207934"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_kron_one&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="cont_kron_one&#39;vc.0.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="cont_kron_one&#39;vc.0.0.0.1.0.0" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.81" steps="1185776"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_kron_one&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="2.80" steps="866516"/></proof>
     </goal>
     <goal name="cont_kron_one&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="6"><result status="valid" time="5.00" steps="207934"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cont_kron_one&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="3.61" steps="1096559"/></proof>
    </goal>
    <goal name="cont_kron_one&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.29" steps="866506"/></proof>
    </goal>
    <goal name="cont_kron_one&#39;vc.0.0.3" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.31" steps="866546"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_kron_pat_right_gen&#39;vc" expl="VC for cont_kron_pat_right_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_kron_pat_right_gen&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="cont_kron_pat_right_gen&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="cont_kron_pat_right1">
    <goal name="cont_kron_pat_right_gen&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.79" steps="1020248"/></proof>
    </goal>
    <goal name="cont_kron_pat_right_gen&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.84" steps="1020239"/></proof>
    </goal>
    <goal name="cont_kron_pat_right_gen&#39;vc.0.0.2" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.07" steps="1020239"/></proof>
    </goal>
    <goal name="cont_kron_pat_right_gen&#39;vc.0.0.3" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="3.01" steps="1086301"/></proof>
    </goal>
    <goal name="cont_kron_pat_right_gen&#39;vc.0.0.4" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="3.00" steps="1086319"/></proof>
    </goal>
    <goal name="cont_kron_pat_right_gen&#39;vc.0.0.5" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
     <goal name="cont_kron_pat_right_gen&#39;vc.0.0.5.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.81" steps="1020239"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_kron_pat_right_gen&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="cont_kron_pat_right_gen&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="cont_kron_pat_right">
    <goal name="cont_kron_pat_right_gen&#39;vc.1.0.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.81" steps="1020392"/></proof>
    </goal>
    <goal name="cont_kron_pat_right_gen&#39;vc.1.0.1" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.81" steps="1020383"/></proof>
    </goal>
    <goal name="cont_kron_pat_right_gen&#39;vc.1.0.2" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.82" steps="1020383"/></proof>
    </goal>
    <goal name="cont_kron_pat_right_gen&#39;vc.1.0.3" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="3.07" steps="1086520"/></proof>
    </goal>
    <goal name="cont_kron_pat_right_gen&#39;vc.1.0.4" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="3.02" steps="1086538"/></proof>
    </goal>
    <goal name="cont_kron_pat_right_gen&#39;vc.1.0.5" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
     <goal name="cont_kron_pat_right_gen&#39;vc.1.0.5.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.85" steps="1020383"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_kron_pat_right_gen_ket&#39;vc" expl="VC for cont_kron_pat_right_gen_ket" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_kron_pat_right_gen_ket&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.91"/></proof>
  </goal>
  <goal name="cont_kron_pat_right_gen_ket&#39;vc.1" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv  x))">
   <goal name="cont_kron_pat_right_gen_ket&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="cont_kron_pat_right_gen_ket&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="cont_kron_pat_right_gen">
     <goal name="cont_kron_pat_right_gen_ket&#39;vc.1.0.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.77" steps="1021422"/></proof>
     </goal>
     <goal name="cont_kron_pat_right_gen_ket&#39;vc.1.0.0.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.79" steps="1021413"/></proof>
     </goal>
     <goal name="cont_kron_pat_right_gen_ket&#39;vc.1.0.0.2" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.85" steps="1021413"/></proof>
     </goal>
     <goal name="cont_kron_pat_right_gen_ket&#39;vc.1.0.0.3" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="4.03" steps="1269260"/></proof>
     </goal>
     <goal name="cont_kron_pat_right_gen_ket&#39;vc.1.0.0.4" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.76" steps="1021413"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="cont_kron_pat_right_gen_ket&#39;vc.1.1" expl="equality hypothesis" proved="true">
   <proof prover="7"><result status="valid" time="2.16" steps="870706"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_last_qbit_kron&#39;vc" expl="VC for cont_last_qbit_kron" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_last_qbit_kron&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.25" steps="854407"/></proof>
  </goal>
  <goal name="cont_last_qbit_kron&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_last_qbit_kron&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.39" steps="797383"/></proof>
   </goal>
   <goal name="cont_last_qbit_kron&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.37" steps="797394"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_last_qbit_kron&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.35" steps="797437"/></proof>
  </goal>
  <goal name="cont_last_qbit_kron&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.28" steps="870359"/></proof>
  </goal>
  <goal name="cont_last_qbit_kron&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.37" steps="809318"/></proof>
  </goal>
  <goal name="cont_last_qbit_kron&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.33" steps="809321"/></proof>
  </goal>
  <goal name="cont_last_qbit_kron&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.34" steps="809324"/></proof>
  </goal>
  <goal name="cont_last_qbit_kron&#39;vc.7" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="cont_last_qbit_kron&#39;vc.7.0" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="3.45" steps="1091076"/></proof>
   </goal>
   <goal name="cont_last_qbit_kron&#39;vc.7.1" expl="apply premises" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="cont_last_qbit_kron&#39;vc.7.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="result&#39;def">
     <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(kronecker x (ket 1 1))" arg2="(kronecker(ket  0 0) (kronecker x (ket 1 1)) )">
      <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
       <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="cont_kron_one">
        <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
         <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="place_kron_exp">
          <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(path_sem c x)" arg2="y">
           <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.21" steps="1007769"/></proof>
           </goal>
           <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="7"><result status="valid" time="2.36" steps="867511"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="1.31" steps="808894"/></proof>
          </goal>
          <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="1.33" steps="808901"/></proof>
          </goal>
          <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="3.11" steps="1004889"/></proof>
          </goal>
          <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="2.28" steps="867514"/></proof>
          </goal>
          <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="2.40" steps="880418"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.15" steps="866291"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.35" steps="808919"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.34" steps="808908"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.4" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="3.22" steps="1004889"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.5" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.34" steps="867514"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.6" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.35" steps="880418"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.7" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="3.15" steps="1006401"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.8" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.43" steps="880421"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.9" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.20" steps="866317"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.0.0.10" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="3.15" steps="1007919"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_last_qbit_kron&#39;vc.7.1.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="7"><result status="valid" time="3.16" steps="1007765"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_last_qbit_kron&#39;vc.8" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="cont_last_qbit_kron&#39;vc.8.0" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures1">
    <goal name="cont_last_qbit_kron&#39;vc.8.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="kronecker_ket_l">
     <goal name="cont_last_qbit_kron&#39;vc.8.0.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.20" steps="870471"/></proof>
     </goal>
     <goal name="cont_last_qbit_kron&#39;vc.8.0.0.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.28" steps="809422"/></proof>
     </goal>
     <goal name="cont_last_qbit_kron&#39;vc.8.0.0.2" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.55" steps="809415"/></proof>
     </goal>
     <goal name="cont_last_qbit_kron&#39;vc.8.0.0.3" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.31" steps="809415"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="cont_last_qbit_kron&#39;vc.8.1" expl="apply premises" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="cont_last_qbit_kron&#39;vc.8.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="result&#39;def">
     <goal name="cont_last_qbit_kron&#39;vc.8.1.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(kronecker x (ket 1 0))" arg2="(kronecker(ket  0 0) (kronecker x (ket 1 0)) )
">
      <goal name="cont_last_qbit_kron&#39;vc.8.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
       <goal name="cont_last_qbit_kron&#39;vc.8.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="cont_kron_zero">
        <goal name="cont_last_qbit_kron&#39;vc.8.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="1.30" steps="808951"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.8.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.20" steps="866373"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.8.1.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.58" steps="808985"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.8.1.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.32" steps="808974"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.8.1.0.0.0.0.4" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="3.16" steps="1006842"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.8.1.0.0.0.0.5" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.53" steps="808953"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.8.1.0.0.0.0.6" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.38" steps="880994"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.8.1.0.0.0.0.7" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="3.20" steps="1008364"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.8.1.0.0.0.0.8" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.39" steps="880997"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.8.1.0.0.0.0.9" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.19" steps="866399"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.8.1.0.0.0.0.10" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="3.24" steps="1008686"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_last_qbit_kron&#39;vc.8.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
       <goal name="cont_last_qbit_kron&#39;vc.8.1.0.0.1.0" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_eq">
        <goal name="cont_last_qbit_kron&#39;vc.8.1.0.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="3.23" steps="1009100"/></proof>
        </goal>
        <goal name="cont_last_qbit_kron&#39;vc.8.1.0.0.1.0.1" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="1.32" steps="808951"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_last_qbit_kron_path&#39;vc" expl="VC for cont_last_qbit_kron_path" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_last_qbit_kron_path&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.82" steps="19589"/></proof>
  </goal>
  <goal name="cont_last_qbit_kron_path&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.83" steps="19574"/></proof>
  </goal>
  <goal name="cont_last_qbit_kron_path&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.85" steps="19574"/></proof>
  </goal>
  <goal name="cont_last_qbit_kron_path&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.90" steps="19831"/></proof>
  </goal>
  <goal name="cont_last_qbit_kron_path&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="19831"/></proof>
  </goal>
  <goal name="cont_last_qbit_kron_path&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.90" steps="19831"/></proof>
  </goal>
  <goal name="cont_last_qbit_kron_path&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.77" steps="19831"/></proof>
  </goal>
  <goal name="cont_last_qbit_kron_path&#39;vc.7" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="result" arg2="((cont_last_qbit_kron c))">
   <goal name="cont_last_qbit_kron_path&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="sem_to_path_sem">
    <goal name="cont_last_qbit_kron_path&#39;vc.7.0.0" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="cont_last_qbit_kron_path&#39;vc.7.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="cont_last_qbit_kron&#39;spec1">
      <goal name="cont_last_qbit_kron_path&#39;vc.7.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_to_sem">
       <goal name="cont_last_qbit_kron_path&#39;vc.7.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.82" steps="1023090"/></proof>
       </goal>
       <goal name="cont_last_qbit_kron_path&#39;vc.7.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.84" steps="1023090"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="cont_last_qbit_kron_path&#39;vc.7.1" expl="equality hypothesis" proved="true">
   <proof prover="7"><result status="valid" time="3.06" steps="1091317"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_last_qbit_kron_path&#39;vc.8" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="result" arg2="(cont c (width c) 0 (width c +&#39; 1))">
   <goal name="cont_last_qbit_kron_path&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="sem_to_path_sem">
    <goal name="cont_last_qbit_kron_path&#39;vc.8.0.0" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="cont_last_qbit_kron_path&#39;vc.8.0.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="3.84" steps="1265262"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="cont_last_qbit_kron_path&#39;vc.8.1" expl="equality hypothesis" proved="true">
   <proof prover="7"><result status="valid" time="1.22" steps="809842"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Circuit_macros" proved="true">
 <goal name="m_skip&#39;vc" expl="VC for m_skip" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="m_skip&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="m_skip&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="7"><result status="valid" time="1.81" steps="855435"/></proof>
   </goal>
   <goal name="m_skip&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="7"><result status="valid" time="1.08" steps="798173"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="m_skip&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.10" steps="856186"/></proof>
  </goal>
  <goal name="m_skip&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="m_skip&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="2.13" steps="855513"/></proof>
   </goal>
   <goal name="m_skip&#39;vc.2.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="m_skip&#39;vc.2.1.0" expl="postcondition" proved="true">
    <proof prover="7"><result status="valid" time="1.41" steps="824493"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="m_skip&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="m_skip&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="m_skip&#39;vc.3.0.0" expl="postcondition" proved="true">
    <proof prover="7"><result status="valid" time="3.27" steps="1072976"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="m_skip&#39;vc.3.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="m_skip&#39;vc.3.1.0" expl="postcondition" proved="true">
    <proof prover="7"><result status="valid" time="3.36" steps="1090820"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="m_skip&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="m_skip&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="1.96" steps="855562"/></proof>
   </goal>
   <goal name="m_skip&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="1.44" steps="824534"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="m_skip&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="m_skip&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="1.18" steps="798217"/></proof>
   </goal>
   <goal name="m_skip&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="1.27" steps="810387"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="m_skip&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="m_skip&#39;vc.6.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="2.01" steps="855576"/></proof>
   </goal>
   <goal name="m_skip&#39;vc.6.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="m_skip&#39;vc.6.1.0" expl="postcondition" proved="true">
    <proof prover="7"><result status="valid" time="1.47" steps="824558"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="m_skip&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="m_skip&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="2.03" steps="855599"/></proof>
   </goal>
   <goal name="m_skip&#39;vc.7.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="m_skip&#39;vc.7.1.0" expl="postcondition" proved="true">
    <proof prover="7"><result status="valid" time="2.09" steps="871666"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="m_skip&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="m_skip&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="2.10" steps="871908"/></proof>
   </goal>
   <goal name="m_skip&#39;vc.8.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="m_skip&#39;vc.8.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures7">
     <goal name="m_skip&#39;vc.8.1.0.0" expl="postcondition" proved="true">
     <transf name="eliminate_if" proved="true" >
      <goal name="m_skip&#39;vc.8.1.0.0.0" expl="VC for m_skip" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="m_skip&#39;vc.8.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="7"><result status="valid" time="2.06" steps="885331"/></proof>
       </goal>
       <goal name="m_skip&#39;vc.8.1.0.0.0.1" expl="postcondition" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="m_skip&#39;vc.8.1.0.0.0.1.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="skip&#39;def2">
         <goal name="m_skip&#39;vc.8.1.0.0.0.1.0.0" expl="postcondition" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="m_skip&#39;vc.8.1.0.0.0.1.0.0.0" expl="postcondition" proved="true">
          <proof prover="7"><result status="valid" time="1.49" steps="1066234"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="m_skip&#39;vc.9" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="m_skip&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="1.91" steps="871907"/></proof>
   </goal>
   <goal name="m_skip&#39;vc.9.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="m_skip&#39;vc.9.1.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="m_skip&#39;vc.9.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H">
      <goal name="m_skip&#39;vc.9.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
       <goal name="m_skip&#39;vc.9.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="7"><result status="valid" time="2.87" steps="1089931"/></proof>
       </goal>
       <goal name="m_skip&#39;vc.9.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="2.92" steps="1096335"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="m_skip&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.30" steps="908383"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="m_skip_path_sem&#39;vc" expl="VC for m_skip_path_sem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="m_skip_path_sem&#39;vc.0" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="x,k">
   <goal name="m_skip_path_sem&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst">
    <goal name="m_skip_path_sem&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_sum_">
     <goal name="m_skip_path_sem&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="ket_sum_eq">
      <goal name="m_skip_path_sem&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.91" steps="856116"/></proof>
      </goal>
      <goal name="m_skip_path_sem&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.14" steps="798833"/></proof>
      </goal>
      <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_scal">
         <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="scalar_eq_gen">
          <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="rewrite_path_sem_basis">
           <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
            <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
             <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
               <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="bv_to_ket_eq">
                <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="make_bv_length">
                 <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="( length1 a)" arg2="k">
                  <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.44"/></proof>
                  </goal>
                  <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="7"><result status="valid" time="3.23" steps="1169234"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                   <transf name="split_all_full" proved="true" >
                    <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                     <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="7"><result status="valid" time="3.69" steps="1365897"/></proof>
                     </goal>
                     <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                     <proof prover="7"><result status="valid" time="3.60" steps="1363695"/></proof>
                     </goal>
                     <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                     <proof prover="7"><result status="valid" time="1.56" steps="1106654"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                   <transf name="split_all_full" proved="true" >
                    <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                     <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                     <proof prover="7"><result status="valid" time="4.20" steps="1365897"/></proof>
                     </goal>
                     <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                     <proof prover="7"><result status="valid" time="4.17" steps="1363695"/></proof>
                     </goal>
                     <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                     <proof prover="7"><result status="valid" time="1.88" steps="1106654"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.62" steps="1173038"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                  <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                   <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="7"><result status="valid" time="4.31" steps="1366469"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                     <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                        <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                        <proof prover="7"><result status="valid" time="4.18" steps="1365416"/></proof>
                        </goal>
                        <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
                        <proof prover="7"><result status="valid" time="4.16" steps="1363531"/></proof>
                        </goal>
                        <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
                        <proof prover="7"><result status="valid" time="1.89" steps="1106679"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                        <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
                        <proof prover="7"><result status="valid" time="4.29" steps="1365416"/></proof>
                        </goal>
                        <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.1.0.1" expl="apply premises" proved="true">
                        <proof prover="7"><result status="valid" time="4.20" steps="1363531"/></proof>
                        </goal>
                        <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.1.0.2" expl="apply premises" proved="true">
                        <proof prover="7"><result status="valid" time="1.86" steps="1106679"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="7"><result status="valid" time="1.26" steps="877551"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                      <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="7"><result status="valid" time="4.74" steps="1466277"/></proof>
                      </goal>
                      <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                      <proof prover="7"><result status="valid" time="4.69" steps="1463860"/></proof>
                      </goal>
                      <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
                      <proof prover="7"><result status="valid" time="1.99" steps="1210728"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                      <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
                      <proof prover="7"><result status="valid" time="4.80" steps="1466277"/></proof>
                      </goal>
                      <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
                      <proof prover="7"><result status="valid" time="4.63" steps="1463860"/></proof>
                      </goal>
                      <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
                      <proof prover="7"><result status="valid" time="1.98" steps="1210728"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                  <proof prover="7"><result status="valid" time="3.25" steps="1272204"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="m_skip&#39;spec1">
                 <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="2.56" steps="1179134"/></proof>
                 </goal>
                 <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.93" steps="1106614"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="3.57" steps="1173038"/></proof>
             </goal>
             <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="1.61"/></proof>
             </goal>
             <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="scalar_ket_l">
               <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="make_bv_length">
                 <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.50" steps="877507"/></proof>
                 </goal>
                 <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.3.0.0.0.1.0" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.3.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                   <transf name="split_all_full" proved="true" >
                    <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.3.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                     <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.3.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="7"><result status="valid" time="4.38" steps="1365897"/></proof>
                     </goal>
                     <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                     <proof prover="7"><result status="valid" time="4.26" steps="1363695"/></proof>
                     </goal>
                     <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.3.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                     <proof prover="7"><result status="valid" time="1.63" steps="1106654"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.3.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                   <transf name="split_all_full" proved="true" >
                    <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.3.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                     <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                     <proof prover="7"><result status="valid" time="3.49" steps="1365897"/></proof>
                     </goal>
                     <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.3.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                     <proof prover="7"><result status="valid" time="3.44" steps="1363695"/></proof>
                     </goal>
                     <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.3.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                     <proof prover="7"><result status="valid" time="1.70" steps="1106654"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="2.88" steps="1173038"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="0"><result status="valid" time="1.30"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
            <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(length1 a)" arg2="k">
             <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <proof prover="0"><result status="valid" time="1.30"/></proof>
             </goal>
             <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
             <proof prover="7"><result status="valid" time="3.55" steps="1169234"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="2.59" steps="940002"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="1.47" steps="877507"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
         <transf name="replace" proved="true" arg1="(width (m_skip k))" arg2="k">
          <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="3.20" steps="1173214"/></proof>
          </goal>
          <goal name="m_skip_path_sem&#39;vc.0.0.0.0.2.0.0.1.1" expl="equality hypothesis" proved="true">
          <proof prover="0"><result status="valid" time="1.42"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="m_skip_path_sem&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <transf name="rewrite" proved="true" arg1="n_bvs_card">
      <goal name="m_skip_path_sem&#39;vc.0.0.0.1.0" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="2.94" steps="1082306"/></proof>
      </goal>
      <goal name="m_skip_path_sem&#39;vc.0.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.91" steps="856116"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="m_skip_path_sem&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.58"/></proof>
     </goal>
     <goal name="m_skip_path_sem&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="m_skip_path_sem&#39;vc.0.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="m_skip_path_sem&#39;vc.0.0.0.3.0.0" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="scalar_ket_l">
        <goal name="m_skip_path_sem&#39;vc.0.0.0.3.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
         <goal name="m_skip_path_sem&#39;vc.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(length1 x)" arg2="k">
          <goal name="m_skip_path_sem&#39;vc.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="1.70"/></proof>
          </goal>
          <goal name="m_skip_path_sem&#39;vc.0.0.0.3.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="7"><result status="valid" time="3.19" steps="1169234"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="m_skip_path_sem&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.88" steps="856116"/></proof>
    </goal>
    <goal name="m_skip_path_sem&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.94" steps="857256"/></proof>
    </goal>
    <goal name="m_skip_path_sem&#39;vc.0.0.3" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.94" steps="857267"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="swap_gen&#39;vc" expl="VC for swap_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="swap_gen&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.20" steps="856838"/></proof>
  </goal>
  <goal name="swap_gen&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.14" steps="798832"/></proof>
  </goal>
  <goal name="swap_gen&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.16" steps="798845"/></proof>
  </goal>
  <goal name="swap_gen&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.32" steps="798847"/></proof>
  </goal>
  <goal name="swap_gen&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.01" steps="871882"/></proof>
  </goal>
  <goal name="swap_gen&#39;vc.5" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="swap_gen&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="1.21" steps="824458"/></proof>
   </goal>
   <goal name="swap_gen&#39;vc.5.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="swap_gen&#39;vc.5.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="swap_gen&#39;vc.5.1.0.0" expl="postcondition" proved="true">
     <proof prover="7"><result status="valid" time="1.84" steps="1038616"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="swap_gen&#39;vc.6" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="swap_gen&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="swap_gen&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="permute_atom&#39;def1">
     <goal name="swap_gen&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <proof prover="7"><result status="valid" time="3.75" steps="1263513"/></proof>
     </goal>
     <goal name="swap_gen&#39;vc.6.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.65" steps="1024326"/></proof>
     </goal>
     <goal name="swap_gen&#39;vc.6.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.42" steps="1024326"/></proof>
     </goal>
     <goal name="swap_gen&#39;vc.6.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.55" steps="1038963"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="swap_gen&#39;vc.6.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="swap_gen&#39;vc.6.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="swap_gen&#39;vc.6.1.0.0" expl="postcondition" proved="true">
     <proof prover="7"><result status="valid" time="3.74" steps="1234841"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="swap_gen&#39;vc.7" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="swap_gen&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="1.22" steps="810500"/></proof>
   </goal>
   <goal name="swap_gen&#39;vc.7.1" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="1.10" steps="810753"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="swap_gen&#39;vc.8" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="swap_gen&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="1.32" steps="810503"/></proof>
   </goal>
   <goal name="swap_gen&#39;vc.8.1" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="1.18" steps="810756"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="swap_gen&#39;vc.9" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="swap_gen&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="2.16" steps="907954"/></proof>
   </goal>
   <goal name="swap_gen&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="2.29" steps="908363"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="swap_gen&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.28" steps="874349"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="permutation_circuit_pre&#39;vc" expl="VC for permutation_circuit_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permutation_circuit_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.16" steps="811171"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="3.05" steps="1090087"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.00" steps="872618"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="7"><result status="valid" time="2.38" steps="872119"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.4" expl="precondition" proved="true">
  <transf name="case" proved="true" arg1="( (c_inv_func_int f n @ (n -&#39;&#39; 1)) = (n -&#39;&#39; 1))">
   <goal name="permutation_circuit_pre&#39;vc.4.0" expl="true case (precondition)" proved="true">
   <proof prover="7"><result status="valid" time="2.40" steps="872909"/></proof>
   </goal>
   <goal name="permutation_circuit_pre&#39;vc.4.1" expl="false case (precondition)" proved="true">
   <proof prover="7"><result status="valid" time="2.04" steps="872909"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="permutation_circuit_pre&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.35" steps="811207"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.6" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.36" steps="811491"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.7" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.06" steps="873976"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.8" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.32" steps="812227"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.9" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.09" steps="874028"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.10" expl="precondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="permutation_circuit_pre&#39;vc.10.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.37" steps="812490"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.11" expl="precondition" proved="true">
  <transf name="case" proved="true" arg1="( (c_inv_func_int f n @ k) = k)">
   <goal name="permutation_circuit_pre&#39;vc.11.0" expl="true case (precondition)" proved="true">
   <transf name="assert" proved="true" arg1="(f k = k)">
    <goal name="permutation_circuit_pre&#39;vc.11.0.0" expl="asserted formula" proved="true">
    <proof prover="7"><result status="valid" time="3.59" steps="1095489"/></proof>
    </goal>
    <goal name="permutation_circuit_pre&#39;vc.11.0.1" expl="true case (precondition)" proved="true">
    <proof prover="7"><result status="valid" time="1.31" steps="812702"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="permutation_circuit_pre&#39;vc.11.1" expl="false case (precondition)" proved="true">
   <proof prover="7"><result status="valid" time="1.33" steps="812688"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.12" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="3.33" steps="1095964"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.13" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.19" steps="873934"/></proof>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.14" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="permutation_circuit_pre&#39;vc.14.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permutation_circuit_pre&#39;vc.14.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="permutation_circuit_pre&#39;vc.14.0.0.0" expl="postcondition" proved="true">
     <proof prover="7"><result status="valid" time="3.77" steps="1265247"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutation_circuit_pre&#39;vc.14.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permutation_circuit_pre&#39;vc.14.1.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="permutation_circuit_pre&#39;vc.14.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H7">
      <goal name="permutation_circuit_pre&#39;vc.14.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="permutation_circuit_pre&#39;def">
       <goal name="permutation_circuit_pre&#39;vc.14.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="qbit_permute_sequence&#39;def">
        <goal name="permutation_circuit_pre&#39;vc.14.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="unwire_sequence">
         <goal name="permutation_circuit_pre&#39;vc.14.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="7"><result status="valid" time="3.31" steps="1186566"/></proof>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.14.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.33" steps="1185422"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="permutation_circuit_pre&#39;vc.14.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="3.53" steps="1187394"/></proof>
        </goal>
        <goal name="permutation_circuit_pre&#39;vc.14.1.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="4.63" steps="1365975"/></proof>
        </goal>
        <goal name="permutation_circuit_pre&#39;vc.14.1.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="3.33" steps="1185447"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="permutation_circuit_pre&#39;vc.14.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.11" steps="1186487"/></proof>
       </goal>
       <goal name="permutation_circuit_pre&#39;vc.14.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.96" steps="1119337"/></proof>
       </goal>
       <goal name="permutation_circuit_pre&#39;vc.14.1.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.95" steps="1119346"/></proof>
       </goal>
       <goal name="permutation_circuit_pre&#39;vc.14.1.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.96" steps="1119335"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.15" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="permutation_circuit_pre&#39;vc.15.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permutation_circuit_pre&#39;vc.15.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="permutation_circuit_pre&#39;vc.15.0.0.0" expl="postcondition" proved="true">
     <proof prover="7"><result status="valid" time="1.61" steps="1026194"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutation_circuit_pre&#39;vc.15.1" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="2.74" steps="958325"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.16" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="permutation_circuit_pre&#39;vc.16.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permutation_circuit_pre&#39;vc.16.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="permutation_circuit_pre&#39;vc.16.0.0.0" expl="postcondition" proved="true">
     <proof prover="7"><result status="valid" time="3.08" steps="1089899"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutation_circuit_pre&#39;vc.16.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permutation_circuit_pre&#39;vc.16.1.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="permutation_circuit_pre&#39;vc.16.1.0.0" expl="postcondition" proved="true">
     <proof prover="7"><result status="valid" time="3.19" steps="1186597"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.17" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="permutation_circuit_pre&#39;vc.17.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="1.47" steps="812360"/></proof>
   </goal>
   <goal name="permutation_circuit_pre&#39;vc.17.1" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="3.65" steps="1182496"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.18" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="permutation_circuit_pre&#39;vc.18.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="1.33" steps="812363"/></proof>
   </goal>
   <goal name="permutation_circuit_pre&#39;vc.18.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permutation_circuit_pre&#39;vc.18.1.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="permutation_circuit_pre&#39;vc.18.1.0.0" expl="postcondition" proved="true">
     <proof prover="7"><result status="valid" time="3.13" steps="1186700"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.19" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="permutation_circuit_pre&#39;vc.19.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="3.68" steps="1094924"/></proof>
   </goal>
   <goal name="permutation_circuit_pre&#39;vc.19.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="permutation_circuit_pre&#39;vc.19.1.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="permutation_circuit_pre&#39;vc.19.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="permutation_circuit_pre&#39;def">
      <goal name="permutation_circuit_pre&#39;vc.19.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="qbit_permute_sequence&#39;def">
       <goal name="permutation_circuit_pre&#39;vc.19.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="H">
        <goal name="permutation_circuit_pre&#39;vc.19.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="sequence_angle">
         <goal name="permutation_circuit_pre&#39;vc.19.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="apply" proved="true" arg1="ang_add_eq">
          <goal name="permutation_circuit_pre&#39;vc.19.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="4.54" steps="1367992"/></proof>
          </goal>
          <goal name="permutation_circuit_pre&#39;vc.19.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="5.00" steps="1443405"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.19.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.13" steps="1187613"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="permutation_circuit_pre&#39;vc.19.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.08" steps="1187613"/></proof>
       </goal>
       <goal name="permutation_circuit_pre&#39;vc.19.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="4.44" steps="1365994"/></proof>
       </goal>
       <goal name="permutation_circuit_pre&#39;vc.19.1.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="2.89" steps="1185656"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="permutation_circuit_pre&#39;vc.19.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="3.24" steps="1186706"/></proof>
      </goal>
      <goal name="permutation_circuit_pre&#39;vc.19.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.98" steps="1119436"/></proof>
      </goal>
      <goal name="permutation_circuit_pre&#39;vc.19.1.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.90" steps="1119445"/></proof>
      </goal>
      <goal name="permutation_circuit_pre&#39;vc.19.1.0.0.4" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.93" steps="1119434"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit_pre&#39;vc.20" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H2">
   <goal name="permutation_circuit_pre&#39;vc.20.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="permutation_circuit_pre&#39;vc.20.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="permutation_circuit_pre&#39;vc.20.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H3">
      <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.0" expl="postcondition" proved="true">
      <transf name="eliminate_if" proved="true" >
       <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.0.0" expl="VC for permutation_circuit_pre" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="qbit_permutation&#39;spec1">
         <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="H">
          <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="rewrite" proved="true" arg1="permutation_circuit_pre&#39;spec2">
            <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <proof prover="7"><result status="valid" time="1.87" steps="1069117"/></proof>
            </goal>
            <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="3.09" steps="1133071"/></proof>
            </goal>
            <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="2.01" steps="1069119"/></proof>
            </goal>
            <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="2.00" steps="1069128"/></proof>
            </goal>
            <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="1.99" steps="1069153"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="4.20" steps="1280285"/></proof>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.24" steps="1114843"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.0.0.1" expl="postcondition" proved="true">
        <proof prover="7"><result status="valid" time="4.19" steps="1283995"/></proof>
        </goal>
        <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.0.0.2" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="qbit_permutation&#39;spec1">
         <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.0.0.2.0" expl="postcondition" proved="true">
         <proof prover="7"><result status="valid" time="4.22" steps="1282844"/></proof>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="4.12" steps="1280338"/></proof>
         </goal>
         <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.0.0.2.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.17" steps="1114911"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="permutation_circuit_pre&#39;vc.20.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.73" steps="1026338"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutation_circuit_pre&#39;vc.20.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="permutation_circuit_pre&#39;vc.20.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="permutation_circuit_pre&#39;vc.20.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H3">
      <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H36">
       <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="goal_comm">
         <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="permutation_circuit_pre&#39;def">
          <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="qbit_permute_sequence&#39;def">
           <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="sequence_basis_ket">
            <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="o10" arg2="(k +&#39; 1)">
              <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket_invariant1
">
               <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="H12">
                  <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="eliminate_if" proved="true" >
                   <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="7"><result status="valid" time="4.74" steps="1400529"/></proof>
                    </goal>
                    <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                    <proof prover="7"><result status="valid" time="4.37" steps="1382656"/></proof>
                    </goal>
                    <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="qbit_permutation&#39;spec1">
                     <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="permute_atom&#39;spec">
                      <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                      <proof prover="7"><result status="valid" time="1.94" steps="1134413"/></proof>
                      </goal>
                      <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
                      <proof prover="7"><result status="valid" time="1.97" steps="1134424"/></proof>
                      </goal>
                      <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.2" expl="rewrite premises" proved="true">
                      <proof prover="7"><result status="valid" time="4.31" steps="1380389"/></proof>
                      </goal>
                      <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.3" expl="rewrite premises" proved="true">
                      <proof prover="7"><result status="valid" time="3.14" steps="1201853"/></proof>
                      </goal>
                      <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.4" expl="rewrite premises" proved="true">
                      <proof prover="7"><result status="valid" time="1.98" steps="1134413"/></proof>
                      </goal>
                      <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.5" expl="rewrite premises" proved="true">
                      <proof prover="7"><result status="valid" time="1.90" steps="1134413"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
                     <proof prover="7"><result status="valid" time="4.39" steps="1380540"/></proof>
                     </goal>
                     <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.2" expl="rewrite premises" proved="true">
                     <proof prover="7"><result status="valid" time="3.37" steps="1209278"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="7"><result status="valid" time="3.11" steps="1186527"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.27" steps="1193784"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="3.11" steps="1186922"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="7"><result status="valid" time="1.98" steps="1119521"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="3.24" steps="1187766"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="3.25" steps="1187766"/></proof>
           </goal>
           <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="4.31" steps="1366107"/></proof>
           </goal>
           <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="3.20" steps="1185809"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="3.21" steps="1186866"/></proof>
          </goal>
          <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="2.00" steps="1119521"/></proof>
          </goal>
          <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="2.05" steps="1119530"/></proof>
          </goal>
          <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="2.08" steps="1119519"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="permutation_circuit_pre&#39;vc.20.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="2.06" steps="1119530"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutation_circuit&#39;vc" expl="VC for permutation_circuit" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permutation_circuit&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.39" steps="811675"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.33" steps="811679"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="3.28" steps="1090629"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.33" steps="811951"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.09" steps="811961"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.39" steps="811965"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.28" steps="811968"/></proof>
  </goal>
  <goal name="permutation_circuit&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="permutation_circuit&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="permutation_circuit&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="qbit_permutes&#39;spec">
     <goal name="permutation_circuit&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <proof prover="7"><result status="valid" time="1.77" steps="1026616"/></proof>
     </goal>
     <goal name="permutation_circuit&#39;vc.7.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="3.68" steps="1262736"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="permutation_circuit&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="permutation_circuit&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="qbit_permutation&#39;spec1">
     <goal name="permutation_circuit&#39;vc.8.0.0.0" expl="postcondition" proved="true">
     <proof prover="7"><result status="valid" time="3.69" steps="1265037"/></proof>
     </goal>
     <goal name="permutation_circuit&#39;vc.8.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="3.86" steps="1262670"/></proof>
     </goal>
     <goal name="permutation_circuit&#39;vc.8.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="3.02" steps="1097216"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutation_circuit&#39;vc.8.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="1.11" steps="812057"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_circuit&#39;vc.9" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="permutation_circuit&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="permutation_circuit&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures6">
     <goal name="permutation_circuit&#39;vc.9.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec4">
      <goal name="permutation_circuit&#39;vc.9.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
      <goal name="permutation_circuit&#39;vc.9.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.75" steps="1026792"/></proof>
      </goal>
      <goal name="permutation_circuit&#39;vc.9.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.74" steps="1026790"/></proof>
      </goal>
      <goal name="permutation_circuit&#39;vc.9.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.70" steps="1026790"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutation_circuit&#39;vc.9.1" expl="rewrite premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="permutation_circuit&#39;vc.9.1.0" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.97" steps="1091333"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="gen_phase&#39;vc" expl="VC for gen_phase" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="gen_phase&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.18" steps="811678"/></proof>
  </goal>
  <goal name="gen_phase&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.26" steps="872538"/></proof>
  </goal>
  <goal name="gen_phase&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.24" steps="826088"/></proof>
  </goal>
  <goal name="gen_phase&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.47" steps="826100"/></proof>
  </goal>
  <goal name="gen_phase&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.31" steps="812073"/></proof>
  </goal>
  <goal name="gen_phase&#39;vc.5" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures4">
   <goal name="gen_phase&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="gen_phase&#39;vc.5.0.0" expl="VC for gen_phase" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="gen_phase&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="gen_phase&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="7"><result status="valid" time="2.25" steps="886887"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="gen_phase&#39;vc.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures4">
   <goal name="gen_phase&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="gen_phase&#39;vc.6.0.0" expl="postcondition" proved="true">
    <proof prover="7"><result status="valid" time="2.40" steps="874251"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="crz&#39;vc" expl="VC for crz" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="crz&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="crz&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.20" steps="812112"/></proof>
   </goal>
   <goal name="crz&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.34" steps="812127"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="crz&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="crz&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.21" steps="812121"/></proof>
   </goal>
   <goal name="crz&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="2.27" steps="872903"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="crz&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="crz&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="2.26" steps="873724"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="crz&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.32" steps="812621"/></proof>
  </goal>
  <goal name="crz&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.46" steps="826684"/></proof>
  </goal>
  <goal name="crz&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.33" steps="826696"/></proof>
  </goal>
  <goal name="crz&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.40" steps="826708"/></proof>
  </goal>
  <goal name="crz&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures5">
   <goal name="crz&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="crz&#39;vc.7.0.0" expl="VC for crz" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="crz&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="crz&#39;vc.7.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures12">
       <goal name="crz&#39;vc.7.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="crz&#39;vc.7.0.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="7"><result status="valid" time="1.33" steps="829517"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="crz&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures5">
   <goal name="crz&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
    <goal name="crz&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="crz&#39;vc.8.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures12">
      <goal name="crz&#39;vc.8.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="crz&#39;vc.8.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="valid" time="1.45"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="crz&#39;vc.8.0.1" expl="rewrite premises" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_mult_int_neutral">
     <goal name="crz&#39;vc.8.0.1.0" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.19" steps="812705"/></proof>
     </goal>
     <goal name="crz&#39;vc.8.0.1.1" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="(arc_cos_ang (pow_inv_sqrt_2 (range (rzp k))))" arg2="ang_zero">
      <goal name="crz&#39;vc.8.0.1.1.0" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="2.09" steps="875107"/></proof>
      </goal>
      <goal name="crz&#39;vc.8.0.1.1.1" expl="equality hypothesis" proved="true">
      <proof prover="7"><result status="valid" time="4.73" steps="1156429"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="crz&#39;vc.9" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="crz&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="((((x @ c) *&#39; (x @ t)) *&#39; power 2 (k&#39; -&#39;&#39; k)) /./ k&#39;)" arg2="((((x @ c) *&#39; (x @ t)) *&#39; power 2 (k&#39; -&#39;&#39; k)) /./ (k+&#39;(k&#39;-&#39;&#39;k)))">
    <goal name="crz&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_ang_up">
     <goal name="crz&#39;vc.9.0.0.0" expl="postcondition" proved="true">
     <proof prover="7"><result status="valid" time="1.22" steps="812806"/></proof>
     </goal>
     <goal name="crz&#39;vc.9.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.34" steps="812808"/></proof>
     </goal>
     <goal name="crz&#39;vc.9.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.30" steps="812826"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="crz&#39;vc.9.0.1" expl="equality hypothesis" proved="true">
    <proof prover="7"><result status="valid" time="1.32" steps="812882"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="prz&#39;vc" expl="VC for prz" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="prz&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.35" steps="813001"/></proof>
  </goal>
  <goal name="prz&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.22" steps="873550"/></proof>
  </goal>
  <goal name="prz&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.21" steps="813417"/></proof>
  </goal>
  <goal name="prz&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.28" steps="827453"/></proof>
  </goal>
  <goal name="prz&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.55" steps="827465"/></proof>
  </goal>
  <goal name="prz&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.51" steps="827477"/></proof>
  </goal>
  <goal name="prz&#39;vc.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures5">
   <goal name="prz&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="prz&#39;vc.6.0.0" expl="VC for prz" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="prz&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures12">
      <goal name="prz&#39;vc.6.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="prz&#39;vc.6.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="7"><result status="valid" time="1.38" steps="830288"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="prz&#39;vc.6.0.0.1" expl="postcondition" proved="true">
     <proof prover="7"><result status="valid" time="1.28" steps="830258"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="prz&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures5">
   <goal name="prz&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures12">
    <goal name="prz&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="prz&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(((x @ t) *&#39; power 2 (n -&#39;&#39; k)) /./ n)" arg2="(((x @ t) *&#39; power 2 (n -&#39;&#39; k)) /./ (k+&#39;(n-&#39;&#39; k )))">
      <goal name="prz&#39;vc.7.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="6"><result status="valid" time="4.84" steps="217593"/></proof>
      </goal>
      <goal name="prz&#39;vc.7.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="7"><result status="valid" time="1.23" steps="813600"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="crzn&#39;vc" expl="VC for crzn" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="crzn&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.33" steps="813653"/></proof>
  </goal>
  <goal name="crzn&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.09" steps="873889"/></proof>
  </goal>
  <goal name="crzn&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.21" steps="874733"/></proof>
  </goal>
  <goal name="crzn&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.30" steps="814153"/></proof>
  </goal>
  <goal name="crzn&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.43" steps="828216"/></proof>
  </goal>
  <goal name="crzn&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.46" steps="828228"/></proof>
  </goal>
  <goal name="crzn&#39;vc.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures4">
   <goal name="crzn&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="crzn&#39;vc.6.0.0" expl="VC for crzn" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="crzn&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures11">
      <goal name="crzn&#39;vc.6.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="crzn&#39;vc.6.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="7"><result status="valid" time="1.39" steps="831038"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="crzn&#39;vc.6.0.0.1" expl="postcondition" proved="true">
     <proof prover="7"><result status="valid" time="1.14" steps="831009"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="crzn&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.46" steps="828288"/></proof>
  </goal>
  <goal name="crzn&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures5">
   <goal name="crzn&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
    <goal name="crzn&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures12">
     <goal name="crzn&#39;vc.8.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="crzn&#39;vc.8.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="((x @ c) *.* ((x @ t) /./ k))" arg2="(-&#39;(x @ c) *&#39; (x @ t) /./ -&#39;k)
">
       <goal name="crzn&#39;vc.8.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="((-&#39; (((x @ c) *&#39; (x @ t)) *&#39; power 2 (k&#39; +&#39; k))) /./ k&#39;)" arg2="(( ((-&#39;(x @ c) *&#39; (x @ t)) *&#39; power 2 (k&#39; +&#39; k))) /./ ((-&#39; k) +&#39;(k&#39; +&#39; k)  ))
">
        <goal name="crzn&#39;vc.8.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="int_to_ang_up">
         <goal name="crzn&#39;vc.8.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="7"><result status="valid" time="1.25" steps="814255"/></proof>
         </goal>
         <goal name="crzn&#39;vc.8.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="1.29" steps="814264"/></proof>
         </goal>
         <goal name="crzn&#39;vc.8.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="1.28" steps="814271"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="crzn&#39;vc.8.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="7"><result status="valid" time="1.24" steps="814355"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="crzn&#39;vc.8.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="7"><result status="valid" time="3.77" steps="1140558"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="crzn&#39;vc.8.0.1" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(arc_cos_ang (pow_inv_sqrt_2 (range (rzp k))))" arg2="ang_zero">
     <goal name="crzn&#39;vc.8.0.1.0" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="2.63" steps="915767"/></proof>
     </goal>
     <goal name="crzn&#39;vc.8.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="7"><result status="valid" time="4.57" steps="1157291"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="crzn_up&#39;vc" expl="VC for crzn_up" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="crzn_up&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.30" steps="814488"/></proof>
  </goal>
  <goal name="crzn_up&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.00" steps="874467"/></proof>
  </goal>
  <goal name="crzn_up&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.25" steps="875301"/></proof>
  </goal>
  <goal name="crzn_up&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.31" steps="814988"/></proof>
  </goal>
  <goal name="crzn_up&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.49" steps="829051"/></proof>
  </goal>
  <goal name="crzn_up&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.41" steps="829063"/></proof>
  </goal>
  <goal name="crzn_up&#39;vc.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures4">
   <goal name="crzn_up&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="crzn_up&#39;vc.6.0.0" expl="VC for crzn_up" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="crzn_up&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures11">
      <goal name="crzn_up&#39;vc.6.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="crzn_up&#39;vc.6.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="7"><result status="valid" time="1.38" steps="831873"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="crzn_up&#39;vc.6.0.0.1" expl="postcondition" proved="true">
     <proof prover="7"><result status="valid" time="1.38" steps="831844"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="crzn_up&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.48" steps="829123"/></proof>
  </goal>
  <goal name="crzn_up&#39;vc.8" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="result" arg2="(crzn c t k n)">
   <goal name="crzn_up&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="crzn_up&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="crzn&#39;spec">
     <goal name="crzn_up&#39;vc.8.0.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.85" steps="1033255"/></proof>
     </goal>
     <goal name="crzn_up&#39;vc.8.0.0.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.79" steps="1033255"/></proof>
     </goal>
     <goal name="crzn_up&#39;vc.8.0.0.2" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.77" steps="1033244"/></proof>
     </goal>
     <goal name="crzn_up&#39;vc.8.0.0.3" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.60" steps="1033246"/></proof>
     </goal>
     <goal name="crzn_up&#39;vc.8.0.0.4" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.82" steps="1033246"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="crzn_up&#39;vc.8.1" expl="equality hypothesis" proved="true">
   <proof prover="7"><result status="valid" time="3.15" steps="1107934"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="c_rzp_one&#39;vc" expl="VC for c_rzp_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="c_rzp_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.33" steps="807648"/></proof>
  </goal>
  <goal name="c_rzp_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.29" steps="807661"/></proof>
  </goal>
  <goal name="c_rzp_one&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.31" steps="807663"/></proof>
  </goal>
  <goal name="c_rzp_one&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.31" steps="818649"/></proof>
  </goal>
  <goal name="c_rzp_one&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.31" steps="818652"/></proof>
  </goal>
  <goal name="c_rzp_one&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.32" steps="818655"/></proof>
  </goal>
  <goal name="c_rzp_one&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.47" steps="878763"/></proof>
  </goal>
  <goal name="c_rzp_one&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.44" steps="818706"/></proof>
  </goal>
  <goal name="c_rzp_one&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="3.54" steps="1095398"/></proof>
  </goal>
  <goal name="c_rzp_one&#39;vc.9" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="c_rzp_one&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="c_rzp_one&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="bin_check_zero_two">
     <goal name="c_rzp_one&#39;vc.9.0.0.0" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(c =0)">
      <goal name="c_rzp_one&#39;vc.9.0.0.0.0" expl="true case (postcondition)" proved="true">
      <transf name="replace" proved="true" arg1="t" arg2="1">
       <goal name="c_rzp_one&#39;vc.9.0.0.0.0.0" expl="true case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="h">
        <goal name="c_rzp_one&#39;vc.9.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
        <transf name="eliminate_if" proved="true" >
         <goal name="c_rzp_one&#39;vc.9.0.0.0.0.0.0.0" expl="VC for c_rzp_one" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="c_rzp_one&#39;vc.9.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
          <proof prover="7"><result status="valid" time="2.16" steps="893870"/></proof>
          </goal>
          <goal name="c_rzp_one&#39;vc.9.0.0.0.0.0.0.0.1" expl="true case (postcondition)" proved="true">
          <transf name="replace" proved="true" arg1="((x @ 0) *&#39; (x @ 1))" arg2="0">
           <goal name="c_rzp_one&#39;vc.9.0.0.0.0.0.0.0.1.0" expl="true case (postcondition)" proved="true">
           <proof prover="7"><result status="valid" time="2.43" steps="894427"/></proof>
           </goal>
           <goal name="c_rzp_one&#39;vc.9.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
           <transf name="case" proved="true" arg1="(x 0 = 0)">
            <goal name="c_rzp_one&#39;vc.9.0.0.0.0.0.0.0.1.1.0" expl="true case (equality hypothesis)" proved="true">
            <transf name="case" proved="true" arg1="(x 1 = 0)">
             <goal name="c_rzp_one&#39;vc.9.0.0.0.0.0.0.0.1.1.0.0" expl="true case (equality hypothesis)" proved="true">
             <proof prover="7"><result status="valid" time="1.43" steps="849590"/></proof>
             </goal>
             <goal name="c_rzp_one&#39;vc.9.0.0.0.0.0.0.0.1.1.0.1" expl="false case (true case. equality hypothesis)" proved="true">
             <proof prover="7"><result status="valid" time="1.43" steps="849594"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="c_rzp_one&#39;vc.9.0.0.0.0.0.0.0.1.1.1" expl="false case (equality hypothesis)" proved="true">
            <proof prover="0"><result status="valid" time="4.44"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="c_rzp_one&#39;vc.9.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="7"><result status="valid" time="2.16" steps="878815"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="c_rzp_one&#39;vc.9.0.0.0.1" expl="false case (postcondition)" proved="true">
      <transf name="replace" proved="true" arg1="t" arg2="0">
       <goal name="c_rzp_one&#39;vc.9.0.0.0.1.0" expl="false case (postcondition)" proved="true">
       <transf name="replace" proved="true" arg1="c" arg2="1">
        <goal name="c_rzp_one&#39;vc.9.0.0.0.1.0.0" expl="false case (postcondition)" proved="true">
        <transf name="eliminate_if" proved="true" >
         <goal name="c_rzp_one&#39;vc.9.0.0.0.1.0.0.0" expl="VC for c_rzp_one" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="c_rzp_one&#39;vc.9.0.0.0.1.0.0.0.0" expl="false case (postcondition)" proved="true">
          <proof prover="7"><result status="valid" time="2.21" steps="893807"/></proof>
          </goal>
          <goal name="c_rzp_one&#39;vc.9.0.0.0.1.0.0.0.1" expl="false case (postcondition)" proved="true">
          <transf name="replace" proved="true" arg1="((x @ 1) *&#39; (x @ 0))" arg2="0">
           <goal name="c_rzp_one&#39;vc.9.0.0.0.1.0.0.0.1.0" expl="false case (postcondition)" proved="true">
           <transf name="case" proved="true" arg1="(x 0 = 0)">
            <goal name="c_rzp_one&#39;vc.9.0.0.0.1.0.0.0.1.0.0" expl="false case (true case. postcondition)" proved="true">
            <transf name="case" proved="true" arg1="(x 1 = 0)">
             <goal name="c_rzp_one&#39;vc.9.0.0.0.1.0.0.0.1.0.0.0" expl="false case (true case. postcondition)" proved="true">
             <proof prover="7"><result status="valid" time="2.57" steps="894413"/></proof>
             </goal>
             <goal name="c_rzp_one&#39;vc.9.0.0.0.1.0.0.0.1.0.0.1" expl="false case (true case. postcondition)" proved="true">
             <proof prover="7"><result status="valid" time="2.62" steps="894453"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="c_rzp_one&#39;vc.9.0.0.0.1.0.0.0.1.0.1" expl="false case (postcondition)" proved="true">
            <proof prover="7"><result status="valid" time="2.32" steps="894454"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="c_rzp_one&#39;vc.9.0.0.0.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
           <proof prover="0"><result status="valid" time="4.56"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="c_rzp_one&#39;vc.9.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <proof prover="7"><result status="valid" time="2.16" steps="878780"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="c_rzp_one&#39;vc.9.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="7"><result status="valid" time="2.19" steps="878793"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="c_rzp_one&#39;vc.9.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.45" steps="818362"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="repeat_had&#39;vc" expl="VC for repeat_had" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="repeat_had&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="7"><result status="valid" time="2.28" steps="866528"/></proof>
  </goal>
  <goal name="repeat_had&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.37" steps="867255"/></proof>
  </goal>
  <goal name="repeat_had&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.63" steps="948900"/></proof>
  </goal>
  <goal name="repeat_had&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.62" steps="949001"/></proof>
  </goal>
  <goal name="repeat_had&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.55" steps="949026"/></proof>
  </goal>
  <goal name="repeat_had&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.31" steps="913579"/></proof>
  </goal>
  <goal name="repeat_had&#39;vc.6" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="repeat_had&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="repeat_had&#39;vc.6.0.0" expl="postcondition" proved="true">
    <proof prover="7"><result status="valid" time="3.22" steps="1095229"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="repeat_had&#39;vc.6.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="repeat_had&#39;vc.6.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="repeat_pps_had&#39;def">
     <goal name="repeat_had&#39;vc.6.1.0.0" expl="postcondition" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="repeat_had&#39;vc.6.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H7">
       <goal name="repeat_had&#39;vc.6.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="eliminate_definition" proved="true" >
        <goal name="repeat_had&#39;vc.6.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="circ_to_pps&#39;def">
         <goal name="repeat_had&#39;vc.6.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="replace" proved="true" arg1="(repeat_pps_had (n -&#39;&#39; 1))" arg2="(circ_to_pps_pre (pre o))">
          <goal name="repeat_had&#39;vc.6.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="replace" proved="true" arg1="(pps_hadamard)" arg2="(circ_to_pps_pre (pre hadamard))">
           <goal name="repeat_had&#39;vc.6.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="instantiate" proved="true" arg1="circ_to_pps_pre&#39;def1" arg2="(pre (o // hadamard))">
            <goal name="repeat_had&#39;vc.6.1.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="H17">
             <goal name="repeat_had&#39;vc.6.1.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <transf name="apply" proved="true" arg1="Hinst">
              <goal name="repeat_had&#39;vc.6.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="4.50" steps="1290364"/></proof>
              </goal>
              <goal name="repeat_had&#39;vc.6.1.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.35" steps="1142788"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="repeat_had&#39;vc.6.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="7"><result status="valid" time="3.29" steps="1142632"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="repeat_had&#39;vc.6.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="replace" proved="true" arg1="(pps_hadamard)" arg2="(circ_to_pps_pre (pre hadamard))">
           <goal name="repeat_had&#39;vc.6.1.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
           <proof prover="7"><result status="valid" time="3.57" steps="1145371"/></proof>
           </goal>
           <goal name="repeat_had&#39;vc.6.1.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
           <proof prover="7"><result status="valid" time="2.78" steps="1142632"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="repeat_had&#39;vc.6.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.96" steps="1079618"/></proof>
     </goal>
     <goal name="repeat_had&#39;vc.6.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.75" steps="1079616"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="repeat_had&#39;vc.7" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="repeat_had&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="repeat_had&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="basis_ket&#39;spec2">
     <goal name="repeat_had&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="circ_to_pps&#39;def" arg2="in" arg3="Ensures">
      <goal name="repeat_had&#39;vc.7.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures">
       <goal name="repeat_had&#39;vc.7.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="7"><result status="valid" time="4.47" steps="1408565"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="repeat_had&#39;vc.8" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="repeat_had&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="repeat_had&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_ind&#39;spec">
     <goal name="repeat_had&#39;vc.8.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="circ_to_pps&#39;def" arg2="in" arg3="Ensures1">
      <goal name="repeat_had&#39;vc.8.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures1">
       <goal name="repeat_had&#39;vc.8.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="repeat_pps_had&#39;spec">
        <goal name="repeat_had&#39;vc.8.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="ang_sum_eq">
         <goal name="repeat_had&#39;vc.8.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="2.94" steps="1189836"/></proof>
         </goal>
         <goal name="repeat_had&#39;vc.8.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="repeat_had&#39;vc.8.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="repeat_had&#39;vc.8.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="eliminate_if" proved="true" >
            <goal name="repeat_had&#39;vc.8.0.0.0.0.0.0.1.0.0.0" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="repeat_had&#39;vc.8.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="4.62" steps="1353744"/></proof>
             </goal>
             <goal name="repeat_had&#39;vc.8.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="((x @ k) *&#39; (y @ k))" arg2="0">
              <goal name="repeat_had&#39;vc.8.0.0.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="4.54" steps="1354283"/></proof>
              </goal>
              <goal name="repeat_had&#39;vc.8.0.0.0.0.0.0.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
              <proof prover="0"><result status="valid" time="4.97"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="repeat_had&#39;vc.8.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.96" steps="1128813"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="repeat_had_basis_bv&#39;vc" expl="VC for repeat_had_basis_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="repeat_had_basis_bv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="repeat_had_basis_bv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem&#39;spec">
    <goal name="repeat_had_basis_bv&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="repeat_had&#39;spec2">
     <goal name="repeat_had_basis_bv&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="repeat_pps_had_basis_bv">
      <goal name="repeat_had_basis_bv&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.73" steps="1031730"/></proof>
      </goal>
      <goal name="repeat_had_basis_bv&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.90" steps="1031730"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="repeat_had_basis_bv&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.86" steps="1031730"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="repeat_had_basis_bv&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="3.74" steps="1274339"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="repeat_had_basis&#39;vc" expl="VC for repeat_had_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="repeat_had_basis&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="repeat_had_basis&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem&#39;spec">
    <goal name="repeat_had_basis&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="repeat_had&#39;spec2">
     <goal name="repeat_had_basis&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="repeat_pps_had_basis">
      <goal name="repeat_had_basis&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.65" steps="1032160"/></proof>
      </goal>
      <goal name="repeat_had_basis&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="repeat_had_basis&#39;vc.0.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.60" steps="1032160"/></proof>
       </goal>
       <goal name="repeat_had_basis&#39;vc.0.0.0.0.1.1" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.61" steps="1032175"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="repeat_had_basis&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.61" steps="1032160"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="repeat_had_basis&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="3.91" steps="1276577"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_repeat_had_superposition&#39;vc" expl="VC for path_sem_repeat_had_superposition" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_repeat_had_superposition&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.39" steps="810046"/></proof>
  </goal>
  <goal name="path_sem_repeat_had_superposition&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.47"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_repeat_had_invol&#39;vc" expl="VC for path_sem_repeat_had_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_repeat_had_invol&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.25" steps="810132"/></proof>
  </goal>
  <goal name="path_sem_repeat_had_invol&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.50"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_repeat_had_to_superposition&#39;vc" expl="VC for path_sem_repeat_had_to_superposition" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_repeat_had_to_superposition&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.19" steps="810215"/></proof>
  </goal>
  <goal name="path_sem_repeat_had_to_superposition&#39;vc.1" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="superposition_state&#39;def">
   <goal name="path_sem_repeat_had_to_superposition&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="path_sem_repeat_had_to_superposition&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem&#39;spec">
     <goal name="path_sem_repeat_had_to_superposition&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="repeat_had&#39;spec2">
      <goal name="path_sem_repeat_had_to_superposition&#39;vc.1.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="7"><result status="valid" time="1.62" steps="1032739"/></proof>
      </goal>
      <goal name="path_sem_repeat_had_to_superposition&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.63" steps="1032741"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_repeat_had_to_superposition&#39;vc.1.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="3.72" steps="1273762"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_repeat_had_to_superposition&#39;vc.1.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="1.26" steps="810248"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sem_ind_cnot&#39;vc" expl="VC for sem_ind_cnot" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sem_ind_cnot&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="rewrite_path_sem_basis">
   <goal name="sem_ind_cnot&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
    <goal name="sem_ind_cnot&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
     <goal name="sem_ind_cnot&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
       <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="(make_bv
   (fun (y3:int) -&gt;
     basis_ket (cnot c k n) (getbv (ket_to_bv ket)) (getbv (int_to_bv 0 0))
     y3)
   (width (cnot c k n)))" arg2="(ket_to_bv ket)">
        <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="7"><result status="valid" time="2.24" steps="887446"/></proof>
        </goal>
        <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="set_equal_bv">
         <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(width (cnot c k n))" arg2="n">
           <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.28" steps="1112822"/></proof>
           </goal>
           <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="0"><result status="valid" time="1.52"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
              <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="3.95" steps="1304501"/></proof>
               </goal>
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="3.99" steps="1304490"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.1.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="4.01" steps="1306344"/></proof>
               </goal>
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.1.1" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="3.92" steps="1306345"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.2.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="1.76" steps="1060427"/></proof>
               </goal>
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.2.1" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="1.79" steps="1060442"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
              <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="3.93" steps="1304501"/></proof>
               </goal>
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="4.33" steps="1304490"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.1.0.1.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="3.77" steps="1306344"/></proof>
               </goal>
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.1.0.1.1" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="4.02" steps="1306345"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.1.0.2.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="1.77" steps="1060427"/></proof>
               </goal>
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.1.0.2.1" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="1.75" steps="1060442"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="3.26" steps="1109408"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
           <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
              <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="case" proved="true" arg1="(i = k)">
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
               <transf name="rewrite" proved="true" arg1="cnot&#39;spec1">
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                <proof prover="7"><result status="valid" time="2.11" steps="1076024"/></proof>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="1.84" steps="1060447"/></proof>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="1.94" steps="1060447"/></proof>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="1.83" steps="1060436"/></proof>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="1.99" steps="1060438"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
               <transf name="rewrite" proved="true" arg1="cnot&#39;spec2">
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.0.1.0" expl="false case (apply premises)" proved="true">
                <proof prover="7"><result status="valid" time="1.85" steps="1060440"/></proof>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="1.88" steps="1060451"/></proof>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="1.79" steps="1060451"/></proof>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.0.1.3" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="1.73" steps="1060440"/></proof>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.0.1.4" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="1.77" steps="1060440"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                 <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="4.49" steps="1409816"/></proof>
                 </goal>
                 <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="4.69" steps="1410519"/></proof>
                 </goal>
                 <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.91" steps="1152157"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                 <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="4.41" steps="1409816"/></proof>
                 </goal>
                 <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="4.92" steps="1410519"/></proof>
                 </goal>
                 <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.1.0.1.2" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.92" steps="1152157"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="5.01" steps="1407872"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="4.87" steps="1409720"/></proof>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="4.37" steps="1409856"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="4.75" steps="1410315"/></proof>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.0.0.1.1" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="4.10" steps="1410309"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.0.0.2" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.0.0.2.0" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="1.92" steps="1152148"/></proof>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.0.0.2.1" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="1.99" steps="1152163"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.1.0.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="4.34" steps="1409720"/></proof>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.1.0.0.1" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="4.36" steps="1409856"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.1.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.1.0.1.0" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="4.18" steps="1410315"/></proof>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.1.0.1.1" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="3.71" steps="1410309"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.1.0.2" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.1.0.2.0" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="1.71" steps="1152148"/></proof>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.1.0.1.0.2.1" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="1.81" steps="1152163"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2" expl="rewrite premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
            <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.0" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.0.0" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="1.11" steps="827832"/></proof>
             </goal>
             <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.0.1" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="1.21" steps="827847"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.0" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.0.0.0" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="4.28" steps="1409720"/></proof>
                 </goal>
                 <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="4.24" steps="1409856"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.0.0.1" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.0.0.1.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.78" steps="1410315"/></proof>
                 </goal>
                 <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.0.0.1.1" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.83" steps="1410309"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.0.0.2" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.0.0.2.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.71" steps="1152148"/></proof>
                 </goal>
                 <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.0.0.2.1" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.68" steps="1152163"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.1" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.1.0.0" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.1.0.0.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.95" steps="1409720"/></proof>
                 </goal>
                 <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.1.0.0.1" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="4.62" steps="1409856"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.1.0.1" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.1.0.1.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.77" steps="1410315"/></proof>
                 </goal>
                 <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.1.0.1.1" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.74" steps="1410309"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.1.0.2" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.1.0.2.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.93" steps="1152148"/></proof>
                 </goal>
                 <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.1.0.1.0.2.1" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.95" steps="1152163"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.0.1.1.0.2.2" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="3.09" steps="1196047"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="cnot&#39;spec">
         <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="2.44" steps="1131609"/></proof>
         </goal>
         <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="1.76" steps="1060388"/></proof>
          </goal>
          <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="1.76" steps="1060403"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="1.59" steps="1060388"/></proof>
          </goal>
          <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="1.89" steps="1060403"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sem_ind_cnot&#39;vc.0.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="1.56" steps="1060386"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="sem_ind_cnot&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="3.30" steps="1109408"/></proof>
     </goal>
     <goal name="sem_ind_cnot&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.78"/></proof>
     </goal>
     <goal name="sem_ind_cnot&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="scalar_ket_l">
       <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
        <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="1.43" steps="827791"/></proof>
         </goal>
         <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
             <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.93" steps="1304501"/></proof>
              </goal>
              <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.89" steps="1304490"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.92" steps="1306344"/></proof>
              </goal>
              <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.0.0.1.1" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.92" steps="1306345"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.0.0.2.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="1.77" steps="1060427"/></proof>
              </goal>
              <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.0.0.2.1" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="1.79" steps="1060442"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
             <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.95" steps="1304501"/></proof>
              </goal>
              <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.91" steps="1304490"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.1.0.1.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.93" steps="1306344"/></proof>
              </goal>
              <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.1.0.1.1" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.88" steps="1306345"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.1.0.2.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="1.77" steps="1060427"/></proof>
              </goal>
              <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.1.0.1.0.2.1" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="1.76" steps="1060442"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="sem_ind_cnot&#39;vc.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.28" steps="1109408"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="sem_ind_cnot&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="1.74"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sem_ind_cnot&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="1.95"/></proof>
   </goal>
   <goal name="sem_ind_cnot&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="1.39" steps="827793"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sem_ind_cnot&#39;vc.1" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="ket" arg2="(bv_to_ket (ket_to_bv ket))">
   <goal name="sem_ind_cnot&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="path_sem_flat_mute_bv">
    <goal name="sem_ind_cnot&#39;vc.1.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="ket_to_bv_length">
     <goal name="sem_ind_cnot&#39;vc.1.0.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.41" steps="827909"/></proof>
     </goal>
     <goal name="sem_ind_cnot&#39;vc.1.0.0.1" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(width (cnot c k n))" arg2="n">
      <goal name="sem_ind_cnot&#39;vc.1.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="2.36" steps="887605"/></proof>
      </goal>
      <goal name="sem_ind_cnot&#39;vc.1.0.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="6"><result status="valid" time="5.02" steps="209841"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="sem_ind_cnot&#39;vc.1.0.1" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="make_bv_length">
     <goal name="sem_ind_cnot&#39;vc.1.0.1.0" expl="apply premises" proved="true">
     <proof prover="6"><result status="valid" time="5.03" steps="209841"/></proof>
     </goal>
     <goal name="sem_ind_cnot&#39;vc.1.0.1.1" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="sem_ind_cnot&#39;vc.1.0.1.1.0" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="sem_ind_cnot&#39;vc.1.0.1.1.0.0" expl="rewrite premises" proved="true">
       <transf name="rewrite" proved="true" arg1="ket_to_bv_to_ket">
        <goal name="sem_ind_cnot&#39;vc.1.0.1.1.0.0.0" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="3.39" steps="1114546"/></proof>
        </goal>
        <goal name="sem_ind_cnot&#39;vc.1.0.1.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.37" steps="827949"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="sem_ind_cnot&#39;vc.1.0.1.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.91" steps="1114985"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="sem_ind_cnot&#39;vc.1.0.1.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="2.26" steps="887148"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="sem_ind_cnot&#39;vc.1.0.2" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="5.04" steps="209586"/></proof>
    </goal>
    <goal name="sem_ind_cnot&#39;vc.1.0.3" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sem_ind_cnot&#39;vc.1.0.3.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
      <goal name="sem_ind_cnot&#39;vc.1.0.3.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
       <goal name="sem_ind_cnot&#39;vc.1.0.3.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="sem_ind_cnot&#39;vc.1.0.3.0.0.0.0" expl="apply premises" proved="true">
        <transf name="eliminate_if" proved="true" >
         <goal name="sem_ind_cnot&#39;vc.1.0.3.0.0.0.0.0" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="sem_ind_cnot&#39;vc.1.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="1.91"/></proof>
          </goal>
          <goal name="sem_ind_cnot&#39;vc.1.0.3.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="1.90"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="sem_ind_cnot&#39;vc.1.0.3.0.0.1" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="sem_ind_cnot&#39;vc.1.0.3.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="sem_ind_cnot&#39;vc.1.0.3.0.0.1.0.0" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.48" steps="1115012"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="sem_ind_cnot&#39;vc.1.0.3.0.0.1.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="sem_ind_cnot&#39;vc.1.0.3.0.0.1.1.0" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.43" steps="1114966"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="sem_ind_cnot&#39;vc.1.0.3.0.0.2" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="sem_ind_cnot&#39;vc.1.0.3.0.0.2.0" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.45" steps="827938"/></proof>
        </goal>
        <goal name="sem_ind_cnot&#39;vc.1.0.3.0.0.2.1" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="1.61"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="sem_ind_cnot&#39;vc.1.0.4" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sem_ind_cnot&#39;vc.1.0.4.0" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="sem_ind_cnot&#39;vc.1.0.4.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="cnot&#39;spec">
       <goal name="sem_ind_cnot&#39;vc.1.0.4.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.82" steps="1060519"/></proof>
       </goal>
       <goal name="sem_ind_cnot&#39;vc.1.0.4.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.88" steps="1060530"/></proof>
       </goal>
       <goal name="sem_ind_cnot&#39;vc.1.0.4.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.88" steps="1060530"/></proof>
       </goal>
       <goal name="sem_ind_cnot&#39;vc.1.0.4.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.91" steps="1060519"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sem_ind_cnot&#39;vc.1.1" expl="equality hypothesis" proved="true">
   <proof prover="7"><result status="valid" time="2.18" steps="887555"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sem_ind_cnot_zero&#39;vc" expl="VC for sem_ind_cnot_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sem_ind_cnot_zero&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="sem_ind_cnot_zero&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="ket1" arg2="(bv_to_ket (ket_to_bv ket1))">
    <goal name="sem_ind_cnot_zero&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(ket 1 (1-&#39;&#39;i))" arg2="(bv_to_ket (ket_to_bv (ket 1 (1-&#39;&#39;i))))">
     <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(ket 1 i)" arg2="(bv_to_ket (ket_to_bv (ket 1 i)))">
      <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
       <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
        <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="sem_ind_cnot">
         <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="apply" proved="true" arg1="bv_to_ket_eq">
          <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="4.78" steps="1352404"/></proof>
           </goal>
           <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
             <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="eliminate_if" proved="true" >
               <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0.0" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="3.69" steps="1322491"/></proof>
                </goal>
                <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="3.78" steps="1322766"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="4.29" steps="1312307"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="2.90" steps="1124592"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
            <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
              <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <transf name="eliminate_if" proved="true" >
               <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value_right">
                 <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="concat_value_right">
                  <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="replace" proved="true" arg1="(length1 (ket_to_bv ket1))" arg2="(n-&#39;&#39;1)">
                   <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="5.56" steps="1388275"/></proof>
                   </goal>
                   <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="7"><result status="valid" time="4.65" steps="1331146"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                   <proof prover="7"><result status="valid" time="4.28" steps="1331381"/></proof>
                   </goal>
                   <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                   <proof prover="7"><result status="valid" time="4.15" steps="1338531"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                  <proof prover="7"><result status="valid" time="4.19" steps="1331381"/></proof>
                  </goal>
                  <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                  <proof prover="7"><result status="valid" time="3.95" steps="1337792"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="4.44" steps="1348096"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="4.18" steps="1317914"/></proof>
              </goal>
              <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="4.02" steps="1317667"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
             <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.2.0.0" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="1.74" steps="1061205"/></proof>
              </goal>
              <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.2.0.1" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="1.79" steps="1061207"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.2.1.0.0" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="4.42" steps="1317914"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.2.1.1" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.2.1.1.0" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="4.35" steps="1317667"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="2.77" steps="1124792"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="2.77" steps="1124607"/></proof>
         </goal>
         <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="2.70" steps="1124592"/></proof>
          </goal>
          <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="1.76" steps="1061174"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="2.94" steps="1124587"/></proof>
         </goal>
         <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="1.77"/></proof>
         </goal>
         <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.5.0" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="3.15" steps="1126363"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="4.09" steps="1312646"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="7"><result status="valid" time="4.32" steps="1307787"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="sem_ind_cnot_zero&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="7"><result status="valid" time="4.14" steps="1307973"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="sem_ind_cnot_zero&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="7"><result status="valid" time="3.09" steps="1126352"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sem_ind_cnot_zero&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="sem_ind_cnot_zero&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(kronecker ket1 (ket 1 i))" arg2="(ket n (ket_to_int (kronecker ket1 (ket 1 i))))">
    <goal name="sem_ind_cnot_zero&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="sem_ind_cnot1">
     <goal name="sem_ind_cnot_zero&#39;vc.1.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="sem_ind_cnot_zero&#39;vc.1.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.82" steps="1061407"/></proof>
      </goal>
      <goal name="sem_ind_cnot_zero&#39;vc.1.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="2.90" steps="1124819"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="sem_ind_cnot_zero&#39;vc.1.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="sem_ind_cnot_zero&#39;vc.1.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="2.48" steps="1124818"/></proof>
      </goal>
      <goal name="sem_ind_cnot_zero&#39;vc.1.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.85" steps="1061409"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="sem_ind_cnot_zero&#39;vc.1.0.0.2" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.84" steps="1124896"/></proof>
     </goal>
     <goal name="sem_ind_cnot_zero&#39;vc.1.0.0.3" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="3.58" steps="1308804"/></proof>
     </goal>
     <goal name="sem_ind_cnot_zero&#39;vc.1.0.0.4" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="1.77"/></proof>
     </goal>
     <goal name="sem_ind_cnot_zero&#39;vc.1.0.0.5" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(ket n (ket_to_int (kronecker ket1 (ket 1 i))))" arg2="( ( (kronecker ket1 (ket 1 i))))">
      <goal name="sem_ind_cnot_zero&#39;vc.1.0.0.5.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="ket1" arg2="(bv_to_ket (ket_to_bv ket1))
">
       <goal name="sem_ind_cnot_zero&#39;vc.1.0.0.5.0.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(ket 1 i)" arg2="(bv_to_ket (ket_to_bv (ket 1 i)))
">
        <goal name="sem_ind_cnot_zero&#39;vc.1.0.0.5.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
         <goal name="sem_ind_cnot_zero&#39;vc.1.0.0.5.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
          <goal name="sem_ind_cnot_zero&#39;vc.1.0.0.5.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.63" steps="1312053"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="sem_ind_cnot_zero&#39;vc.1.0.0.5.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="7"><result status="valid" time="3.98" steps="1307746"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="sem_ind_cnot_zero&#39;vc.1.0.0.5.0.1" expl="equality hypothesis" proved="true">
       <proof prover="7"><result status="valid" time="2.99" steps="1126578"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="sem_ind_cnot_zero&#39;vc.1.0.0.5.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="1.82"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="sem_ind_cnot_zero&#39;vc.1.0.1" expl="equality hypothesis" proved="true">
    <proof prover="0"><result status="valid" time="1.75"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_neg_cnot&#39;vc" expl="VC for ind_neg_cnot" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_neg_cnot&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.30" steps="818951"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.30" steps="818964"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.32" steps="818966"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.07" steps="829470"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.4" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.83" steps="888186"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.5" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.85" steps="888976"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.6" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.22" steps="844106"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.7" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.09" steps="829908"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.8" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="ind_neg_cnot&#39;vc.8.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="ind_neg_cnot&#39;vc.8.0.0" expl="precondition" proved="true">
    <proof prover="7"><result status="valid" time="1.94" steps="890109"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.9" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.89" steps="890107"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.03" steps="972217"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.29" steps="910687"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.12" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures5">
   <goal name="ind_neg_cnot&#39;vc.12.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="ind_neg_cnot&#39;vc.12.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="ind_neg_cnot&#39;vc.12.0.0.0" expl="VC for ind_neg_cnot" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="ind_neg_cnot&#39;vc.12.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H">
       <goal name="ind_neg_cnot&#39;vc.12.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures19">
        <goal name="ind_neg_cnot&#39;vc.12.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="ind_neg_cnot&#39;vc.12.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="place_bv_in">
          <goal name="ind_neg_cnot&#39;vc.12.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="ind_neg_cnot&#39;vc.12.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="ind_neg_cnot&#39;vc.12.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="xx&#39;def1">
             <goal name="ind_neg_cnot&#39;vc.12.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <proof prover="7"><result status="valid" time="3.86" steps="1457172"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="ind_neg_cnot&#39;vc.12.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="1.33" steps="928512"/></proof>
          </goal>
          <goal name="ind_neg_cnot&#39;vc.12.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="2.17" steps="989611"/></proof>
          </goal>
          <goal name="ind_neg_cnot&#39;vc.12.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="1.30" steps="928512"/></proof>
          </goal>
          <goal name="ind_neg_cnot&#39;vc.12.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="1.44" steps="942706"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="ind_neg_cnot&#39;vc.12.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.33" steps="928519"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="ind_neg_cnot&#39;vc.12.0.0.0.1" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures18">
       <goal name="ind_neg_cnot&#39;vc.12.0.0.0.1.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="ind_neg_cnot&#39;vc.12.0.0.0.1.0.0" expl="postcondition" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="ind_neg_cnot&#39;vc.12.0.0.0.1.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures13">
          <goal name="ind_neg_cnot&#39;vc.12.0.0.0.1.0.0.0.0" expl="postcondition" proved="true">
          <transf name="case" proved="true" arg1="(k &lt;&#39; c)">
           <goal name="ind_neg_cnot&#39;vc.12.0.0.0.1.0.0.0.0.0" expl="true case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures12">
            <goal name="ind_neg_cnot&#39;vc.12.0.0.0.1.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
            <transf name="rewrite" proved="true" arg1="xx&#39;def1">
             <goal name="ind_neg_cnot&#39;vc.12.0.0.0.1.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="ind_neg_cnot&#39;vc.12.0.0.0.1.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
              <proof prover="7"><result status="valid" time="1.86" steps="1220835"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="ind_neg_cnot&#39;vc.12.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="1.75" steps="1205250"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="ind_neg_cnot&#39;vc.12.0.0.0.1.0.0.0.0.1" expl="false case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures11">
            <goal name="ind_neg_cnot&#39;vc.12.0.0.0.1.0.0.0.0.1.0" expl="false case (postcondition)" proved="true">
            <transf name="rewrite" proved="true" arg1="xx&#39;def1">
             <goal name="ind_neg_cnot&#39;vc.12.0.0.0.1.0.0.0.0.1.0.0" expl="false case (postcondition)" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="ind_neg_cnot&#39;vc.12.0.0.0.1.0.0.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
              <proof prover="7"><result status="valid" time="1.88" steps="1220841"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="ind_neg_cnot&#39;vc.12.0.0.0.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="2.84" steps="1274660"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="ind_neg_cnot&#39;vc.12.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="1.90" steps="1220696"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="ind_neg_cnot&#39;vc.12.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.26" steps="928545"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="ind_neg_cnot&#39;vc.12.0.0.0.2" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="ind_neg_cnot&#39;vc.12.0.0.0.2.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures20">
        <goal name="ind_neg_cnot&#39;vc.12.0.0.0.2.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="ind_neg_cnot&#39;vc.12.0.0.0.2.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures13">
          <goal name="ind_neg_cnot&#39;vc.12.0.0.0.2.0.0.0.0" expl="postcondition" proved="true">
          <transf name="case" proved="true" arg1="(k &lt;&#39; c)">
           <goal name="ind_neg_cnot&#39;vc.12.0.0.0.2.0.0.0.0.0" expl="true case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures12">
            <goal name="ind_neg_cnot&#39;vc.12.0.0.0.2.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
            <transf name="rewrite" proved="true" arg1="xx&#39;def1">
             <goal name="ind_neg_cnot&#39;vc.12.0.0.0.2.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="ind_neg_cnot&#39;vc.12.0.0.0.2.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
              <proof prover="0"><result status="valid" time="1.84"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="ind_neg_cnot&#39;vc.12.0.0.0.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="1.76" steps="1205254"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="ind_neg_cnot&#39;vc.12.0.0.0.2.0.0.0.0.1" expl="false case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures11">
            <goal name="ind_neg_cnot&#39;vc.12.0.0.0.2.0.0.0.0.1.0" expl="false case (postcondition)" proved="true">
            <transf name="rewrite" proved="true" arg1="xx&#39;def1">
             <goal name="ind_neg_cnot&#39;vc.12.0.0.0.2.0.0.0.0.1.0.0" expl="false case (postcondition)" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="ind_neg_cnot&#39;vc.12.0.0.0.2.0.0.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
              <proof prover="0"><result status="valid" time="1.65"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="ind_neg_cnot&#39;vc.12.0.0.0.2.0.0.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="2.85" steps="1274674"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="ind_neg_cnot&#39;vc.12.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="1.94" steps="1220700"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="ind_neg_cnot&#39;vc.12.0.0.0.2.0.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.72" steps="1205219"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="ind_neg_cnot&#39;vc.12.0.0.0.3" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="ind_neg_cnot&#39;vc.12.0.0.0.3.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="cnot&#39;spec2">
        <goal name="ind_neg_cnot&#39;vc.12.0.0.0.3.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="ind_neg_cnot&#39;vc.12.0.0.0.3.0.0.0" expl="postcondition" proved="true">
         <proof prover="7"><result status="valid" time="3.89" steps="1458810"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="ind_neg_cnot&#39;vc.12.0.0.0.3.0.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.72" steps="1205210"/></proof>
        </goal>
        <goal name="ind_neg_cnot&#39;vc.12.0.0.0.3.0.2" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.77" steps="1205210"/></proof>
        </goal>
        <goal name="ind_neg_cnot&#39;vc.12.0.0.0.3.0.3" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.78" steps="1205199"/></proof>
        </goal>
        <goal name="ind_neg_cnot&#39;vc.12.0.0.0.3.0.4" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.76" steps="1205199"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="ind_neg_cnot&#39;vc.12.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="2.13" steps="972803"/></proof>
   </goal>
   <goal name="ind_neg_cnot&#39;vc.12.2" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ind_neg_cnot&#39;vc.12.2.0" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.36" steps="910743"/></proof>
    </goal>
    <goal name="ind_neg_cnot&#39;vc.12.2.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.18" steps="972896"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.35" steps="1008793"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.99" steps="1191142"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.15" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="ind_neg_cnot&#39;vc.15.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="ind_neg_cnot&#39;vc.15.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="seq_flat_mute&#39;def">
     <goal name="ind_neg_cnot&#39;vc.15.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="ind_neg_cnot&#39;vc.15.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="(--)&#39;spec4">
       <goal name="ind_neg_cnot&#39;vc.15.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="7"><result status="valid" time="1.79" steps="1224406"/></proof>
       </goal>
       <goal name="ind_neg_cnot&#39;vc.15.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="2.65" steps="1274940"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ind_neg_cnot&#39;vc.15.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.97" steps="971751"/></proof>
     </goal>
     <goal name="ind_neg_cnot&#39;vc.15.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.28" steps="925055"/></proof>
     </goal>
     <goal name="ind_neg_cnot&#39;vc.15.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.19" steps="910714"/></proof>
     </goal>
     <goal name="ind_neg_cnot&#39;vc.15.0.0.4" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="ind_neg_cnot&#39;vc.15.0.0.4.0" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures13">
       <goal name="ind_neg_cnot&#39;vc.15.0.0.4.0.0" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="ind_neg_cnot&#39;vc.15.0.0.4.0.0.0" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.08" steps="972982"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ind_neg_cnot&#39;vc.15.0.0.5" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="2.11" steps="972967"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.17" steps="911020"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.17" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.05" steps="818876"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.18" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.78" steps="879208"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.19" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.06" steps="829424"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.20" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.10" steps="829437"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.21" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.09" steps="829439"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.22" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.76" steps="888786"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.23" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.06" steps="829798"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.24" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.72" steps="888800"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.25" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.95" steps="925214"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.26" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures7">
   <goal name="ind_neg_cnot&#39;vc.26.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="ind_neg_cnot&#39;vc.26.0.0" expl="precondition" proved="true">
    <proof prover="7"><result status="valid" time="1.96" steps="890195"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.27" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.50" steps="910581"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.98" steps="1191744"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.19" steps="1008741"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.30" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="ind_neg_cnot&#39;vc.30.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="ind_neg_cnot&#39;vc.30.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures19">
     <goal name="ind_neg_cnot&#39;vc.30.0.0.0" expl="postcondition" proved="true">
     <transf name="eliminate_if" proved="true" >
      <goal name="ind_neg_cnot&#39;vc.30.0.0.0.0" expl="VC for ind_neg_cnot" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="ind_neg_cnot&#39;vc.30.0.0.0.0.0" expl="VC for ind_neg_cnot" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="ind_neg_cnot&#39;vc.30.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="ind_neg_cnot&#39;vc.30.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="xx&#39;def1">
          <goal name="ind_neg_cnot&#39;vc.30.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="ind_neg_cnot&#39;vc.30.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures18">
            <goal name="ind_neg_cnot&#39;vc.30.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <proof prover="7"><result status="valid" time="2.66" steps="1275603"/></proof>
            </goal>
            <goal name="ind_neg_cnot&#39;vc.30.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="1.65" steps="1205970"/></proof>
            </goal>
            <goal name="ind_neg_cnot&#39;vc.30.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="1.61" steps="1206007"/></proof>
            </goal>
            <goal name="ind_neg_cnot&#39;vc.30.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="2.72" steps="1275555"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="ind_neg_cnot&#39;vc.30.0.0.0.0.0.1" expl="postcondition" proved="true">
        <proof prover="7"><result status="valid" time="2.15" steps="990358"/></proof>
        </goal>
        <goal name="ind_neg_cnot&#39;vc.30.0.0.0.0.0.2" expl="postcondition" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="ind_neg_cnot&#39;vc.30.0.0.0.0.0.2.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="xx&#39;def1">
          <goal name="ind_neg_cnot&#39;vc.30.0.0.0.0.0.2.0.0" expl="postcondition" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="ind_neg_cnot&#39;vc.30.0.0.0.0.0.2.0.0.0" expl="postcondition" proved="true">
           <proof prover="7"><result status="valid" time="4.22" steps="1499130"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="ind_neg_cnot&#39;vc.30.0.0.0.0.0.3" expl="postcondition" proved="true">
        <proof prover="7"><result status="valid" time="3.16" steps="1209666"/></proof>
        </goal>
        <goal name="ind_neg_cnot&#39;vc.30.0.0.0.0.0.4" expl="postcondition" proved="true">
        <proof prover="7"><result status="valid" time="3.23" steps="1209740"/></proof>
        </goal>
        <goal name="ind_neg_cnot&#39;vc.30.0.0.0.0.0.5" expl="postcondition" proved="true">
        <proof prover="7"><result status="valid" time="3.27" steps="1212943"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="ind_neg_cnot&#39;vc.30.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="2.20" steps="972264"/></proof>
   </goal>
   <goal name="ind_neg_cnot&#39;vc.30.2" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ind_neg_cnot&#39;vc.30.2.0" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.54" steps="910659"/></proof>
    </goal>
    <goal name="ind_neg_cnot&#39;vc.30.2.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.57" steps="972272"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.70" steps="1009003"/></proof>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.32" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_flat_mute_bv">
   <goal name="ind_neg_cnot&#39;vc.32.0" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="2.52" steps="972882"/></proof>
   </goal>
   <goal name="ind_neg_cnot&#39;vc.32.1" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="make_bv_length">
    <goal name="ind_neg_cnot&#39;vc.32.1.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.51" steps="972602"/></proof>
    </goal>
    <goal name="ind_neg_cnot&#39;vc.32.1.1" expl="rewrite premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="ind_neg_cnot&#39;vc.32.1.1.0" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="3.86" steps="1201413"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ind_neg_cnot&#39;vc.32.1.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.54" steps="973429"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ind_neg_cnot&#39;vc.32.2" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="1.58" steps="910898"/></proof>
   </goal>
   <goal name="ind_neg_cnot&#39;vc.32.3" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ind_neg_cnot&#39;vc.32.3.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
     <goal name="ind_neg_cnot&#39;vc.32.3.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures1">
      <goal name="ind_neg_cnot&#39;vc.32.3.0.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="3.34" steps="1197542"/></proof>
      </goal>
      <goal name="ind_neg_cnot&#39;vc.32.3.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="3.28" steps="1194639"/></proof>
      </goal>
      <goal name="ind_neg_cnot&#39;vc.32.3.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="2.22" steps="973525"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="ind_neg_cnot&#39;vc.32.3.0.1" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="ind_neg_cnot&#39;vc.32.3.0.1.0" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="3.78" steps="1201332"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="ind_neg_cnot&#39;vc.32.3.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="2.21" steps="973525"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="ind_neg_cnot&#39;vc.32.4" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="2.31" steps="973956"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_neg_cnot&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.56" steps="972850"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sem_ind_neg_cnot_zero&#39;vc" expl="VC for sem_ind_neg_cnot_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sem_ind_neg_cnot_zero&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sem_ind_neg_cnot_zero&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.45" steps="819875"/></proof>
   </goal>
   <goal name="sem_ind_neg_cnot_zero&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="2.38" steps="880037"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sem_ind_neg_cnot_zero&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sem_ind_neg_cnot_zero&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.37" steps="819913"/></proof>
   </goal>
   <goal name="sem_ind_neg_cnot_zero&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.36" steps="819915"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sem_ind_neg_cnot_zero&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sem_ind_neg_cnot_zero&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="2.30" steps="880091"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sem_ind_neg_cnot_zero&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.21" steps="830496"/></proof>
  </goal>
  <goal name="sem_ind_neg_cnot_zero&#39;vc.4" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures2">
   <goal name="sem_ind_neg_cnot_zero&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="2.11" steps="890468"/></proof>
   </goal>
   <goal name="sem_ind_neg_cnot_zero&#39;vc.4.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="2.34" steps="948019"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sem_ind_neg_cnot_zero&#39;vc.5" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(ket 1 1)" arg2="(bv_to_ket (int_to_bv 1 1))">
   <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ket n i)" arg2="(bv_to_ket (int_to_bv i n))">
    <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(ket 1 0)" arg2="(bv_to_ket (int_to_bv 0 1))">
     <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
      <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
       <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures2">
        <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="bv_to_ket_eq">
         <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="1.63"/></proof>
          </goal>
          <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="3.91" steps="1415098"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="4.34" steps="1415234"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="2.17" steps="972355"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
            <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="eliminate_if" proved="true" >
              <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.0.0.0.0" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="concat_value_right">
                <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value_right">
                 <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="4.05" steps="1269403"/></proof>
                 </goal>
                 <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.69" steps="1221024"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="3.74" steps="1225345"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="3.72" steps="1221162"/></proof>
               </goal>
               <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="concat_value_left">
                <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="concat_value_left">
                 <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.62" steps="929281"/></proof>
                 </goal>
                 <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.97" steps="1218823"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="3.95" steps="1218823"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="3.36" steps="1201546"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="1.42" steps="911183"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="4.03" steps="1420100"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="4.04" steps="1420107"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="2.23" steps="972577"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="3.92" steps="1235563"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="7"><result status="valid" time="3.39" steps="1192919"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="sem_ind_neg_cnot_zero&#39;vc.5.0.1" expl="equality hypothesis" proved="true">
    <proof prover="7"><result status="valid" time="3.14" steps="1194771"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sem_ind_neg_cnot_zero&#39;vc.5.1" expl="equality hypothesis" proved="true">
   <proof prover="7"><result status="valid" time="3.05" steps="1193026"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sem_ind_neg_cnot_zero&#39;vc.6" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(ket n i)" arg2="(bv_to_ket (int_to_bv i n))">
   <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ket 1 0)" arg2="(bv_to_ket (int_to_bv 0 1))">
    <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
     <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures3">
      <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="bv_to_ket_eq">
       <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="make_bv_length">
        <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="1.40"/></proof>
        </goal>
        <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="4.11" steps="1427216"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="4.51" steps="1427104"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.71" steps="972489"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
         <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
          <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
           <transf name="eliminate_if" proved="true" >
            <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.0.0.0.0" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="concat_value_right">
              <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="1.75"/></proof>
              </goal>
              <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="3.72" steps="1220415"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="1.61" steps="929455"/></proof>
             </goal>
             <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="1.67" steps="929419"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="3.74" steps="1201474"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="1.35" steps="911321"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="4.56" steps="1432310"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="4.61" steps="1432229"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="2.64" steps="972711"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="1.68"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="sem_ind_neg_cnot_zero&#39;vc.6.0.1" expl="equality hypothesis" proved="true">
    <proof prover="7"><result status="valid" time="3.76" steps="1193178"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sem_ind_neg_cnot_zero&#39;vc.6.1" expl="equality hypothesis" proved="true">
   <proof prover="7"><result status="valid" time="3.75" steps="1194990"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sem_ind_neg_cnot_zero&#39;vc.7" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="ket" arg2="(bv_to_ket (ket_to_bv ket))">
   <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures4">
    <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="bv_to_ket_eq">
     <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="make_bv_length">
      <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="4.25" steps="1237977"/></proof>
      </goal>
      <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.58" steps="1196036"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="2.48" steps="972613"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.1" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="make_bv_length">
      <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
        <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.1.0.0.0.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="1.69" steps="943676"/></proof>
           </goal>
           <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="1.59" steps="929570"/></proof>
           </goal>
           <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="1.55" steps="929559"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.67" steps="1196108"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.66" steps="911461"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.1.1" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.1.1.0" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.61" steps="1196036"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="2.46" steps="972613"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="sem_ind_neg_cnot_zero&#39;vc.7.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="4.18" steps="1237894"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sem_ind_neg_cnot_zero&#39;vc.7.1" expl="equality hypothesis" proved="true">
   <proof prover="7"><result status="valid" time="2.61" steps="973770"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sem_ind_neg_cnot_zero&#39;vc.8" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="ket" arg2="(bv_to_ket (ket_to_bv ket))">
   <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures5">
    <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="bv_to_ket_eq">
     <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="make_bv_length">
      <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="make_bv_length">
       <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.60" steps="911525"/></proof>
       </goal>
       <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.0.0.1.0" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="3.64" steps="1199856"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="2.43" steps="972729"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.65" steps="1199457"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="2.49" steps="972729"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="make_bv_length">
      <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
        <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
         <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="eliminate_if" proved="true" >
           <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.0.0.0.0.0.0" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="2.78" steps="1027731"/></proof>
            </goal>
            <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.72" steps="929727"/></proof>
            </goal>
            <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.75" steps="929727"/></proof>
            </goal>
            <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.0.0.0.0.0.0.3" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.70" steps="929721"/></proof>
            </goal>
            <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.0.0.0.0.0.0.4" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.72" steps="929723"/></proof>
            </goal>
            <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.0.0.0.0.0.0.5" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="2.76" steps="1027196"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="3.66" steps="1199878"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="1.63" steps="911576"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="4.21" steps="1199488"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.65" steps="911576"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.1" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.1.0" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.67" steps="1199457"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="2.46" steps="972729"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="sem_ind_neg_cnot_zero&#39;vc.8.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="4.33" steps="1237065"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sem_ind_neg_cnot_zero&#39;vc.8.1" expl="equality hypothesis" proved="true">
   <proof prover="7"><result status="valid" time="2.62" steps="973886"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="repeat_xx&#39;vc" expl="VC for repeat_xx" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="repeat_xx&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="repeat_xx&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="7"><result status="valid" time="2.24" steps="880851"/></proof>
   </goal>
   <goal name="repeat_xx&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="7"><result status="valid" time="1.34" steps="820890"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="repeat_xx&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.32" steps="881607"/></proof>
  </goal>
  <goal name="repeat_xx&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="repeat_xx&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="2.30" steps="880928"/></proof>
   </goal>
   <goal name="repeat_xx&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="2.26" steps="890745"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="repeat_xx&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="repeat_xx&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="repeat_xx&#39;vc.3.0.0" expl="postcondition" proved="true">
    <proof prover="7"><result status="valid" time="2.26" steps="881087"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="repeat_xx&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="1.44" steps="846076"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="repeat_xx&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="repeat_xx&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="2.22" steps="880960"/></proof>
   </goal>
   <goal name="repeat_xx&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="2.31" steps="891030"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="repeat_xx&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="repeat_xx&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="2.33" steps="881012"/></proof>
   </goal>
   <goal name="repeat_xx&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="1.55" steps="846109"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="repeat_xx&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="repeat_xx&#39;vc.6.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="3.59" steps="1109097"/></proof>
   </goal>
   <goal name="repeat_xx&#39;vc.6.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="repeat_xx&#39;vc.6.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures5">
     <goal name="repeat_xx&#39;vc.6.1.0.0" expl="postcondition" proved="true">
     <transf name="eliminate_if" proved="true" >
      <goal name="repeat_xx&#39;vc.6.1.0.0.0" expl="VC for repeat_xx" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="repeat_xx&#39;vc.6.1.0.0.0.0" expl="VC for repeat_xx" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="repeat_xx&#39;vc.6.1.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="7"><result status="valid" time="3.68" steps="1128950"/></proof>
        </goal>
        <goal name="repeat_xx&#39;vc.6.1.0.0.0.0.1" expl="postcondition" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="repeat_xx&#39;vc.6.1.0.0.0.0.1.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="xx&#39;def1">
          <goal name="repeat_xx&#39;vc.6.1.0.0.0.0.1.0.0" expl="postcondition" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="repeat_xx&#39;vc.6.1.0.0.0.0.1.0.0.0" expl="postcondition" proved="true">
           <proof prover="7"><result status="valid" time="2.04" steps="1117558"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="repeat_xx&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="repeat_xx&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="2.46" steps="926238"/></proof>
   </goal>
   <goal name="repeat_xx&#39;vc.7.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="repeat_xx&#39;vc.7.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures5">
     <goal name="repeat_xx&#39;vc.7.1.0.0" expl="postcondition" proved="true">
     <proof prover="7"><result status="valid" time="2.74" steps="927937"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="with_permutation&#39;vc" expl="VC for with_permutation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="with_permutation&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.38" steps="832288"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.48" steps="832292"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.47" steps="832656"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.78" steps="975576"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="4.20" steps="1197284"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.84" steps="975107"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.48" steps="974863"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures4">
   <goal name="with_permutation&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_zero_add">
    <goal name="with_permutation&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="with_permutation&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="ang_ind_invariant">
      <goal name="with_permutation&#39;vc.7.0.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="with_permutation&#39;vc.7.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="with_permutation&#39;vc.7.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="3.58" steps="1196738"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="with_permutation&#39;vc.7.0.0.0.1" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="with_permutation&#39;vc.7.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.80" steps="927925"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="with_permutation&#39;vc.7.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.66" steps="976047"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="with_permutation&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="with_permutation&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="basis_ket_invariant">
     <goal name="with_permutation&#39;vc.8.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="with_permutation&#39;vc.8.0.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="with_permutation&#39;vc.8.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="3.75" steps="1196853"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="with_permutation&#39;vc.8.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="with_permutation&#39;vc.8.0.0.1.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="with_permutation&#39;vc.8.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.68" steps="927993"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="with_permutation&#39;vc.8.0.0.2" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.51" steps="913657"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.51" steps="913788"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.10" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.43" steps="832272"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.11" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.36" steps="832980"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.12" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.41" steps="832984"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.13" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.38" steps="892824"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.55"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.65" steps="976622"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="3.89" steps="1200459"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.61" steps="976156"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.58" steps="976173"/></proof>
  </goal>
  <goal name="with_permutation&#39;vc.19" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures5">
   <goal name="with_permutation&#39;vc.19.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="with_permutation&#39;vc.19.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
     <goal name="with_permutation&#39;vc.19.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures13">
      <goal name="with_permutation&#39;vc.19.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="with_permutation&#39;vc.19.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="2.78" steps="977170"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.20" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures7">
   <goal name="with_permutation&#39;vc.20.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="with_permutation&#39;vc.20.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures20">
     <goal name="with_permutation&#39;vc.20.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="with_permutation&#39;vc.20.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="Ensures13">
       <goal name="with_permutation&#39;vc.20.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="3.84" steps="1199136"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="with_permutation&#39;vc.20.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.56" steps="914727"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.21" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="with_permutation&#39;vc.21.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="with_permutation&#39;vc.21.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="basis_ket_invariant">
     <goal name="with_permutation&#39;vc.21.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="with_permutation&#39;vc.21.0.0.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="with_permutation&#39;vc.21.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="3.82" steps="1201857"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="with_permutation&#39;vc.21.0.0.1" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="with_permutation&#39;vc.21.0.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="with_permutation&#39;vc.21.0.0.2.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="3.76" steps="1199381"/></proof>
      </goal>
      <goal name="with_permutation&#39;vc.21.0.0.2.1" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="3.76" steps="1199070"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="with_permutation&#39;vc.21.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="1.57" steps="914903"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation&#39;vc.22" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.60" steps="915041"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="unwire_with_permutation&#39;vc" expl="VC for unwire_with_permutation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unwire_with_permutation&#39;vc.0" expl="postcondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="unwire_with_permutation&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="unwire_with_permutation&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="unwire_path_sem">
     <goal name="unwire_with_permutation&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="7"><result status="valid" time="3.18" steps="1143862"/></proof>
     </goal>
     <goal name="unwire_with_permutation&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="3.05" steps="1143826"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="with_permutation_kronecker_gen&#39;vc" expl="VC for with_permutation_kronecker_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="with_permutation_kronecker_gen&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.28" steps="883761"/></proof>
  </goal>
  <goal name="with_permutation_kronecker_gen&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.31" steps="822911"/></proof>
  </goal>
  <goal name="with_permutation_kronecker_gen&#39;vc.2" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_bijective_auto">
   <goal name="with_permutation_kronecker_gen&#39;vc.2.0" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="3.86" steps="1211395"/></proof>
   </goal>
   <goal name="with_permutation_kronecker_gen&#39;vc.2.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="with_permutation_kronecker_gen&#39;vc.2.1.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="with_permutation_kronecker_gen&#39;vc.2.1.0.0" expl="apply premises" proved="true">
     <transf name="exists" proved="true" arg1="(if e&#39; &lt;&#39; n-&#39;&#39;k then e&#39; +&#39; k else e&#39; -&#39;&#39;n +&#39;k)
">
      <goal name="with_permutation_kronecker_gen&#39;vc.2.1.0.0.0" proved="true">
      <proof prover="7"><result status="valid" time="3.57" steps="1189319"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="with_permutation_kronecker_gen&#39;vc.3" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="with_permutation_kronecker_gen&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="with_permutation_kronecker_gen">
    <goal name="with_permutation_kronecker_gen&#39;vc.3.0.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="2.35" steps="893725"/></proof>
    </goal>
    <goal name="with_permutation_kronecker_gen&#39;vc.3.0.1" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.34" steps="833468"/></proof>
    </goal>
    <goal name="with_permutation_kronecker_gen&#39;vc.3.0.2" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.14" steps="833459"/></proof>
    </goal>
    <goal name="with_permutation_kronecker_gen&#39;vc.3.0.3" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.16" steps="833459"/></proof>
    </goal>
    <goal name="with_permutation_kronecker_gen&#39;vc.3.0.4" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.37" steps="833459"/></proof>
    </goal>
    <goal name="with_permutation_kronecker_gen&#39;vc.3.0.5" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.38" steps="833459"/></proof>
    </goal>
    <goal name="with_permutation_kronecker_gen&#39;vc.3.0.6" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.39" steps="833459"/></proof>
    </goal>
    <goal name="with_permutation_kronecker_gen&#39;vc.3.0.7" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="1.37" steps="833459"/></proof>
    </goal>
    <goal name="with_permutation_kronecker_gen&#39;vc.3.0.8" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="unwire_path_sem" arg2="in" arg3="H">
     <goal name="with_permutation_kronecker_gen&#39;vc.3.0.8.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.37" steps="833459"/></proof>
     </goal>
     <goal name="with_permutation_kronecker_gen&#39;vc.3.0.8.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="3.52" steps="1142119"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="with_permutation_kronecker_gen&#39;vc.3.1" expl="rewrite premises" proved="true">
   <transf name="replace" proved="true" arg1="(width c)" arg2="(n-&#39;&#39;k+&#39;k)">
    <goal name="with_permutation_kronecker_gen&#39;vc.3.1.0" expl="rewrite premises" proved="true">
    <transf name="apply" proved="true" arg1="kronecker_ket_l">
     <goal name="with_permutation_kronecker_gen&#39;vc.3.1.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.32" steps="892560"/></proof>
     </goal>
     <goal name="with_permutation_kronecker_gen&#39;vc.3.1.0.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.34" steps="833459"/></proof>
     </goal>
     <goal name="with_permutation_kronecker_gen&#39;vc.3.1.0.2" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.34" steps="833459"/></proof>
     </goal>
     <goal name="with_permutation_kronecker_gen&#39;vc.3.1.0.3" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.16" steps="833459"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="with_permutation_kronecker_gen&#39;vc.3.1.1" expl="equality hypothesis" proved="true">
    <proof prover="7"><result status="valid" time="1.14" steps="833473"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permutation_three_blocks&#39;vc" expl="VC for permutation_three_blocks" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permutation_three_blocks&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.31" steps="833439"/></proof>
  </goal>
  <goal name="permutation_three_blocks&#39;vc.1" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_bijective_auto">
   <goal name="permutation_three_blocks&#39;vc.1.0" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="3.83" steps="1211671"/></proof>
   </goal>
   <goal name="permutation_three_blocks&#39;vc.1.1" expl="apply premises" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="permutation_three_blocks&#39;vc.1.1.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="permutation_three_blocks&#39;vc.1.1.0.0" expl="apply premises" proved="true">
     <transf name="exists" proved="true" arg1="(if e&#39; &lt;&#39; n1 then e&#39; else if e&#39; &lt;&#39; (n1 +&#39; n2) then e&#39; +&#39; n3 else e&#39; -&#39;&#39; n2)
">
      <goal name="permutation_three_blocks&#39;vc.1.1.0.0.0" proved="true">
      <proof prover="7"><result status="valid" time="3.60" steps="1188031"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permutation_three_blocks&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.37" steps="834373"/></proof>
  </goal>
  <goal name="permutation_three_blocks&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.37" steps="834376"/></proof>
  </goal>
  <goal name="permutation_three_blocks&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.34" steps="834379"/></proof>
  </goal>
  <goal name="permutation_three_blocks&#39;vc.5" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="permutation_three_blocks&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures10">
    <goal name="permutation_three_blocks&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="permutation_three_blocks">
     <goal name="permutation_three_blocks&#39;vc.5.0.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.35" steps="834430"/></proof>
     </goal>
     <goal name="permutation_three_blocks&#39;vc.5.0.0.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.35" steps="834430"/></proof>
     </goal>
     <goal name="permutation_three_blocks&#39;vc.5.0.0.2" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.35" steps="834430"/></proof>
     </goal>
     <goal name="permutation_three_blocks&#39;vc.5.0.0.3" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.34" steps="834430"/></proof>
     </goal>
     <goal name="permutation_three_blocks&#39;vc.5.0.0.4" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.36" steps="834430"/></proof>
     </goal>
     <goal name="permutation_three_blocks&#39;vc.5.0.0.5" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.35" steps="834430"/></proof>
     </goal>
     <goal name="permutation_three_blocks&#39;vc.5.0.0.6" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.32" steps="834432"/></proof>
     </goal>
     <goal name="permutation_three_blocks&#39;vc.5.0.0.7" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.35" steps="834430"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permutation_three_blocks&#39;vc.5.1" expl="rewrite premises" proved="true">
   <transf name="replace" proved="true" arg1="(width result )" arg2="(n1+&#39;n2+&#39;n3)">
    <goal name="permutation_three_blocks&#39;vc.5.1.0" expl="rewrite premises" proved="true">
    <transf name="apply" proved="true" arg1="kronecker_ket_l">
     <goal name="permutation_three_blocks&#39;vc.5.1.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.28" steps="894792"/></proof>
     </goal>
     <goal name="permutation_three_blocks&#39;vc.5.1.0.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.37" steps="834430"/></proof>
     </goal>
     <goal name="permutation_three_blocks&#39;vc.5.1.0.2" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="permutation_three_blocks&#39;vc.5.1.0.2.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.38" steps="834430"/></proof>
      </goal>
      <goal name="permutation_three_blocks&#39;vc.5.1.0.2.1" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.39" steps="834430"/></proof>
      </goal>
      <goal name="permutation_three_blocks&#39;vc.5.1.0.2.2" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="1.48"/></proof>
      </goal>
      <goal name="permutation_three_blocks&#39;vc.5.1.0.2.3" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="1.49"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="permutation_three_blocks&#39;vc.5.1.0.3" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="2.46" steps="895192"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="permutation_three_blocks&#39;vc.5.1.1" expl="equality hypothesis" proved="true">
    <proof prover="7"><result status="valid" time="2.47" steps="894846"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="insert_qbits&#39;vc" expl="VC for insert_qbits" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert_qbits&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="4.21" steps="1229947"/></proof>
  </goal>
  <goal name="insert_qbits&#39;vc.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="insert_qbits&#39;vc.1.0" expl="precondition" proved="true">
   <transf name="exists" proved="true" arg1="(if e&#39; &lt;&#39; k then e&#39; else if e&#39; &lt;&#39; k+&#39;i then e&#39; +&#39; n-&#39;&#39;k else (e&#39; -&#39;&#39; i) )
">
    <goal name="insert_qbits&#39;vc.1.0.0" proved="true">
    <proof prover="7"><result status="valid" time="3.88" steps="1206431"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.2" expl="assertion" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="insert_qbits&#39;vc.2.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec5">
    <goal name="insert_qbits&#39;vc.2.0.0" expl="assertion" proved="true">
    <proof prover="7"><result status="valid" time="5.21" steps="1456758"/></proof>
    </goal>
    <goal name="insert_qbits&#39;vc.2.0.1" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (c // m_skip i))" arg2="(n+&#39;i)">
     <goal name="insert_qbits&#39;vc.2.0.1.0" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="Ensures">
     </transf>
     </goal>
     <goal name="insert_qbits&#39;vc.2.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="7"><result status="valid" time="5.20" steps="1456621"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.3" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_bijective_auto">
   <goal name="insert_qbits&#39;vc.3.0" expl="apply premises" proved="true">
   <proof prover="7"><result status="valid" time="4.15" steps="1233136"/></proof>
   </goal>
   <goal name="insert_qbits&#39;vc.3.1" expl="apply premises" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="insert_qbits&#39;vc.3.1.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="insert_qbits&#39;vc.3.1.0.0" expl="apply premises" proved="true">
     <transf name="exists" proved="true" arg1="(if e&#39; &lt;&#39; k then e&#39; else if e&#39; &lt;&#39; k+&#39;i then e&#39; +&#39; n -&#39;&#39; k else (e&#39; -&#39;&#39;i ) )
">
      <goal name="insert_qbits&#39;vc.3.1.0.0.0" proved="true">
      <proof prover="7"><result status="valid" time="3.82" steps="1208540"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="insert_qbits&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="2.79" steps="983704"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.5" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.56" steps="920190"/></proof>
  </goal>
  <goal name="insert_qbits&#39;vc.6" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (c // m_skip i))" arg2="(n+&#39;i)">
   <goal name="insert_qbits&#39;vc.6.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="3.86" steps="1210668"/></proof>
   </goal>
   <goal name="insert_qbits&#39;vc.6.1" expl="equality hypothesis" proved="true">
   <proof prover="7"><result status="valid" time="2.80" steps="1019867"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.60" steps="986539"/></proof>
  </goal>
  <goal name="insert_qbits&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.84" steps="1022955"/></proof>
  </goal>
  <goal name="insert_qbits&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.59" steps="987136"/></proof>
  </goal>
  <goal name="insert_qbits&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.58" steps="986648"/></proof>
  </goal>
  <goal name="insert_qbits&#39;vc.11" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures7">
   <goal name="insert_qbits&#39;vc.11.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="insert_qbits&#39;vc.11.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="insert_qbits&#39;vc.11.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="parallel_angle">
      <goal name="insert_qbits&#39;vc.11.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
       <goal name="insert_qbits&#39;vc.11.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
       <goal name="insert_qbits&#39;vc.11.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.68" steps="1253336"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.12" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures7">
   <goal name="insert_qbits&#39;vc.12.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="insert_qbits&#39;vc.12.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="insert_qbits&#39;vc.12.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(c_inv_func_int
   (fun (j1:int) -&gt;
     if j1 &lt;&#39; k then j1 else if j1 &lt;&#39; n then j1 +&#39; i else (j1 -&#39;&#39; n) +&#39; k)
   (width (c // m_skip i)) @ j)" arg2="j">
      <goal name="insert_qbits&#39;vc.12.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
       <goal name="insert_qbits&#39;vc.12.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="case" proved="true" arg1="(j &lt;&#39; width c)">
        <goal name="insert_qbits&#39;vc.12.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
        <transf name="replace" proved="true" arg1="(if j &lt;&#39; width c
   then basis_ket c
        (fun (i1:int) -&gt;
          x
          @ (if i1 &lt;&#39; k then i1 else if i1 &lt;&#39; n then i1 +&#39; i else (i1 -&#39;&#39; n) +&#39; k))
        y j
   else basis_ket (m_skip i)
        (fun (k1:int) -&gt;
          (fun (i1:int) -&gt;
            x
            @ (if i1 &lt;&#39; k then i1 else if i1 &lt;&#39; n then i1 +&#39; i else (i1 -&#39;&#39; n) +&#39; k))
          @ (k1 +&#39; width c))
        (fun (k1:int) -&gt; y @ (k1 +&#39; range c)) (j -&#39;&#39; width c))" arg2="(basis_ket c
        (fun (i1:int) -&gt;
          x
          @ (if i1 &lt;&#39; k then i1 else if i1 &lt;&#39; n then i1 +&#39; i else (i1 -&#39;&#39; n) +&#39; k))
        y j)">
         <goal name="insert_qbits&#39;vc.12.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
         <transf name="compute_specified" proved="true" >
         </transf>
         </goal>
         <goal name="insert_qbits&#39;vc.12.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="insert_qbits&#39;vc.12.0.0.0.0.0.0.1.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="insert_qbits&#39;vc.12.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
           <transf name="compute_specified" proved="true" >
           </transf>
           </goal>
           <goal name="insert_qbits&#39;vc.12.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
           <proof prover="7"><result status="valid" time="2.26" steps="1194510"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits&#39;vc.12.0.0.0.0.0.1" expl="false case (postcondition)" proved="true">
        <proof prover="7"><result status="valid" time="3.26" steps="1247154"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits&#39;vc.12.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(width (c // m_skip i))" arg2="(n+&#39;i)">
       <goal name="insert_qbits&#39;vc.12.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures30">
        <goal name="insert_qbits&#39;vc.12.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits&#39;vc.12.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
         <proof prover="7"><result status="valid" time="3.23" steps="1245396"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits&#39;vc.12.0.0.0.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="3.32" steps="1246308"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits&#39;vc.12.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="7"><result status="valid" time="3.98" steps="1253482"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits&#39;vc.12.1" expl="rewrite premises" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="insert_qbits&#39;vc.12.1.0" expl="rewrite premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="insert_qbits&#39;vc.12.1.0.0" proved="true">
     <proof prover="7"><result status="valid" time="2.12" steps="1176252"/></proof>
     </goal>
     <goal name="insert_qbits&#39;vc.12.1.0.1" proved="true">
     <transf name="replace" proved="true" arg1="(c_inv_func_int
   (fun (j1:int) -&gt;
     if j1 &lt;&#39; k then j1 else if j1 &lt;&#39; n then j1 +&#39; i else (j1 -&#39;&#39; n) +&#39; k)
   (width (c // m_skip i)) @ j)" arg2="j">
      <goal name="insert_qbits&#39;vc.12.1.0.1.0" proved="true">
      <proof prover="7"><result status="valid" time="3.41" steps="1246259"/></proof>
      </goal>
      <goal name="insert_qbits&#39;vc.12.1.0.1.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(width (c // m_skip i))" arg2="(n+&#39;i)">
       <goal name="insert_qbits&#39;vc.12.1.0.1.1.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures30">
        <goal name="insert_qbits&#39;vc.12.1.0.1.1.0.0" expl="equality hypothesis" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="insert_qbits&#39;vc.12.1.0.1.1.0.0.0" expl="equality hypothesis" proved="true">
         <proof prover="7"><result status="valid" time="3.31" steps="1245396"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits&#39;vc.12.1.0.1.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="3.18" steps="1246308"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits&#39;vc.12.1.0.1.1.1" expl="equality hypothesis" proved="true">
       <proof prover="7"><result status="valid" time="3.34" steps="1253482"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.13" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures8">
   <goal name="insert_qbits&#39;vc.13.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="insert_qbits&#39;vc.13.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(width (c // m_skip i))" arg2="(n+&#39;i)">
     <goal name="insert_qbits&#39;vc.13.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures31">
      <goal name="insert_qbits&#39;vc.13.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="insert_qbits&#39;vc.13.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="(if j &lt;&#39; k then j else if j &lt;&#39; (k +&#39; i) then (j +&#39; n) -&#39;&#39; k else j -&#39;&#39; i)" arg2="(j-&#39;&#39;i)
">
        <goal name="insert_qbits&#39;vc.13.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
         <goal name="insert_qbits&#39;vc.13.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="insert_qbits&#39;vc.13.0.0.0.0.0.0.0.0" expl="VC for insert_qbits" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="insert_qbits&#39;vc.13.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <proof prover="7"><result status="valid" time="4.43" steps="1267554"/></proof>
           </goal>
           <goal name="insert_qbits&#39;vc.13.0.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
           <proof prover="7"><result status="valid" time="2.68" steps="1007045"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits&#39;vc.13.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="7"><result status="valid" time="2.98" steps="1024011"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits&#39;vc.13.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="2.78" steps="987956"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits&#39;vc.13.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="7"><result status="valid" time="2.87" steps="1023796"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits&#39;vc.13.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="2.72" steps="987987"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits&#39;vc.14" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures9">
   <goal name="insert_qbits&#39;vc.14.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(width (c // m_skip i))" arg2="(n+&#39;i)">
    <goal name="insert_qbits&#39;vc.14.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures32">
     <goal name="insert_qbits&#39;vc.14.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="insert_qbits&#39;vc.14.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(if j &lt;&#39; k then j else if j &lt;&#39; (k +&#39; i) then (j +&#39; n) -&#39;&#39; k else j -&#39;&#39; i)" arg2="(j+&#39;n-&#39;&#39;k)
">
       <goal name="insert_qbits&#39;vc.14.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="parallel_basis_ket">
        <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="replace" proved="true" arg1="(x j)" arg2="(basis_ket (m_skip i)
        (fun (k1:int) -&gt;
          (fun (i1:int) -&gt;
            x
            @ (if i1 &lt;&#39; k then i1 else if i1 &lt;&#39; n then i1 +&#39; i else (i1 -&#39;&#39; n) +&#39; k))
          @ (k1 +&#39; width c))
        (fun (k1:int) -&gt; y @ (k1 +&#39; range c)) (((j +&#39; n) -&#39;&#39; k) -&#39;&#39; width c))
">
         <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0.0.0" expl="VC for insert_qbits" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <proof prover="7"><result status="valid" time="2.56" steps="1007705"/></proof>
           </goal>
           <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
           <transf name="compute_specified" proved="true" >
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="m_skip&#39;spec2">
            <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
             <proof prover="7"><result status="valid" time="3.32" steps="1247816"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="insert_qbits&#39;vc.14.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="1.95" steps="1176828"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits&#39;vc.14.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="7"><result status="valid" time="2.63" steps="988984"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits&#39;vc.14.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="2.62" steps="988586"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits&#39;vc.14.0.1" expl="equality hypothesis" proved="true">
    <proof prover="7"><result status="valid" time="2.82" steps="1024378"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits&#39;vc.14.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="2.63" steps="988559"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="insert_qbits_path_sem&#39;vc" expl="VC for insert_qbits_path_sem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert_qbits_path_sem&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.44" steps="887354"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.40" steps="827395"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.40" steps="827401"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.39" steps="827405"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.4" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.42" steps="827408"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.5" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.42" steps="827411"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.6" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="3.97" steps="1158936"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="insert_qbits_path_sem&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="insert_qbits&#39;def">
    <goal name="insert_qbits_path_sem&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="insert_qbits&#39;def1" arg2="in" arg3="Ensures">
     <goal name="insert_qbits_path_sem&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="insert_qbits_path_sem&#39;vc.7.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec8">
       <goal name="insert_qbits_path_sem&#39;vc.7.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="unwire_parallel">
        <goal name="insert_qbits_path_sem&#39;vc.7.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="replace" proved="true" arg1="(unwire (m_skip i))" arg2="(ids i)">
         <goal name="insert_qbits_path_sem&#39;vc.7.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="apply" proved="true" arg1="Ensures">
         </transf>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.7.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="7"><result status="valid" time="4.47" steps="1329424"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits_path_sem&#39;vc.7.0.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (c // m_skip i))" arg2="(n+&#39;i)">
        <goal name="insert_qbits_path_sem&#39;vc.7.0.0.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="set_bijective_auto">
         <goal name="insert_qbits_path_sem&#39;vc.7.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="insert_qbits_path_sem&#39;vc.7.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="insert_qbits_path_sem&#39;vc.7.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="4.53" steps="1419137"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits_path_sem&#39;vc.7.0.0.0.0.1.0.1" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="insert_qbits_path_sem&#39;vc.7.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="insert_qbits_path_sem&#39;vc.7.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
           <transf name="exists" proved="true" arg1="(if e&#39; &lt;&#39; k then e&#39; else if e&#39; &lt;&#39; k+&#39;i then e&#39; +&#39; n-&#39;&#39;k else (e&#39; -&#39;&#39; i) )
">
            <goal name="insert_qbits_path_sem&#39;vc.7.0.0.0.0.1.0.1.0.0.0" proved="true">
            <proof prover="7"><result status="valid" time="4.58" steps="1420022"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem&#39;vc.7.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
        <proof prover="7"><result status="valid" time="4.79" steps="1333295"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.7.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="2.66" steps="887449"/></proof>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.7.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.43" steps="827443"/></proof>
     </goal>
     <goal name="insert_qbits_path_sem&#39;vc.7.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.40" steps="827436"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.7.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.52" steps="827434"/></proof>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.7.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.42" steps="827443"/></proof>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.7.0.3" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.44" steps="827436"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits_path_sem&#39;vc.7.1" expl="rewrite premises" proved="true">
   <transf name="replace" proved="true" arg1="(width (insert_qbits c k n i))" arg2="(n+&#39;i)">
    <goal name="insert_qbits_path_sem&#39;vc.7.1.0" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.52" steps="887419"/></proof>
    </goal>
    <goal name="insert_qbits_path_sem&#39;vc.7.1.1" expl="equality hypothesis" proved="true">
    <proof prover="0"><result status="valid" time="1.64"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="insert_qbits_path_sem_basis&#39;vc" expl="VC for insert_qbits_path_sem_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert_qbits_path_sem_basis&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="3.71" steps="1150464"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem_basis&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.58" steps="906596"/></proof>
  </goal>
  <goal name="insert_qbits_path_sem_basis&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert_qbits_path_sem_basis&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.56" steps="906599"/></proof>
   </goal>
   <goal name="insert_qbits_path_sem_basis&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.55" steps="906614"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem_basis&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert_qbits_path_sem_basis&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.54" steps="906610"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem_basis&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert_qbits_path_sem_basis&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="ket_to_bv_length">
    <goal name="insert_qbits_path_sem_basis&#39;vc.4.0.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="3.98" steps="1255184"/></proof>
    </goal>
    <goal name="insert_qbits_path_sem_basis&#39;vc.4.0.1" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="4.66" steps="1302542"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem_basis&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert_qbits_path_sem_basis&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.56" steps="906632"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem_basis&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert_qbits_path_sem_basis&#39;vc.6.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.57" steps="906635"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem_basis&#39;vc.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert_qbits_path_sem_basis&#39;vc.7.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(hpart (ket_to_bv (kronecker (kronecker x y) z)) k)" arg2="(ket_to_bv x)">
    <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(tpart (ket_to_bv (kronecker (kronecker x y) z)) (k +&#39; i))" arg2="(ket_to_bv z)">
     <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.0.0" expl="precondition" proved="true">
     <proof prover="7"><result status="valid" time="3.81" steps="1239778"/></proof>
     </goal>
     <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="set_equal_bv">
      <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="3.96" steps="1255511"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.0.1.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.0.1.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="tpart_value_b">
        <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.0.1.1.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(kronecker (kronecker x y) z)" arg2="(bv_to_ket (concat1(concat1 (ket_to_bv x)(ket_to_bv y)) (ket_to_bv z)))">
         <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.0.1.1.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
          <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="concat_value_right">
           <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="2.32"/></proof>
           </goal>
           <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="4.03" steps="1257316"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="7"><result status="valid" time="3.77" steps="1244302"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.0.1.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.41" steps="968954"/></proof>
        </goal>
        <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.0.1.1.0.2" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="3.89" steps="1251415"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.1" expl="equality hypothesis" proved="true">
    <transf name="replace" proved="true" arg1="(kronecker (kronecker x y) z)" arg2="(bv_to_ket (concat1(concat1 (ket_to_bv x)(ket_to_bv y)) (ket_to_bv z)))">
     <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="set_equal_bv">
      <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="4.06" steps="1246410"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.1.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.1.0.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="hpart_value_b">
        <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.1.0.1.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
         <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.1.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="concat_value_left">
          <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="4.08" steps="1259126"/></proof>
          </goal>
          <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="4.08" steps="1248343"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.1.0.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="4.09" steps="1244713"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_path_sem_basis&#39;vc.7.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="7"><result status="valid" time="4.01" steps="1239597"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_path_sem_basis&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ket_to_bv_to_ket" arg2="in" arg3="Ensures">
   <goal name="insert_qbits_path_sem_basis&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev" arg2="in" arg3="Ensures">
    <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures">
     <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_eq">
      <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.58" steps="906671"/></proof>
      </goal>
      <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="kronecker_eq">
       <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(htpart (ket_to_bv (kronecker x (kronecker y z))) k i)" arg2="(ket_to_bv y)">
        <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="7"><result status="valid" time="2.75" steps="969303"/></proof>
        </goal>
        <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="set_equal_bv">
         <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1.0.1.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="4.10" steps="1270475"/></proof>
         </goal>
         <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1.0.1.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="htpart_value_b">
           <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(kronecker x (kronecker y z))" arg2="(bv_to_ket (concat1 (ket_to_bv x) (concat1 (ket_to_bv y) (ket_to_bv z))))
">
            <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
             <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1.0.1.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="concat_value_right">
              <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="concat_value_left">
               <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="2.31"/></proof>
               </goal>
               <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1.0.1.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="4.10" steps="1277019"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="7"><result status="valid" time="4.09" steps="1278019"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="7"><result status="valid" time="4.07" steps="1268599"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="1.56" steps="906702"/></proof>
           </goal>
           <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1.0.1.1.0.2" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="2.60" steps="968183"/></proof>
           </goal>
           <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1.0.1.1.0.3" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="4.02" steps="1267288"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="insert_qbits_path_sem_basis&#39;vc.8.0.0.0.1.1" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.60" steps="906671"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits_path_sem_basis&#39;vc.8.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="3.81" steps="1259289"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="insert_qbits_gen&#39;vc" expl="VC for insert_qbits_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert_qbits_gen&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.57" steps="828319"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.57" steps="828331"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.36" steps="828337"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.29" steps="899460"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.33" steps="899546"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.63" steps="899763"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.35" steps="899731"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.7" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="insert_qbits_gen&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="insert_qbits_gen&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="H3">
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits_gen&#39;vc.7.1" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="insert_qbits_gen&#39;vc.7.1.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="ang_ind_invariant">
     <goal name="insert_qbits_gen&#39;vc.7.1.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="insert_qbits_gen&#39;vc.7.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.53" steps="852568"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_gen&#39;vc.7.1.0.1" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.47" steps="828428"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.8" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H2">
   <goal name="insert_qbits_gen&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="insert_qbits_gen&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="H4">
     <goal name="insert_qbits_gen&#39;vc.8.0.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.90" steps="1076738"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits_gen&#39;vc.8.1" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(j-&#39;&#39;i)" arg2="j">
    <goal name="insert_qbits_gen&#39;vc.8.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H2">
     <goal name="insert_qbits_gen&#39;vc.8.1.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="basis_ket_invariant">
      <goal name="insert_qbits_gen&#39;vc.8.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="3.85" steps="1142904"/></proof>
      </goal>
      <goal name="insert_qbits_gen&#39;vc.8.1.0.0.1" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.45" steps="838211"/></proof>
      </goal>
      <goal name="insert_qbits_gen&#39;vc.8.1.0.0.2" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="2.34" steps="898506"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_gen&#39;vc.8.1.1" expl="equality hypothesis" proved="true">
    <proof prover="0"><result status="valid" time="1.71"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.9" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H2">
   <goal name="insert_qbits_gen&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="insert_qbits_gen&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="H3">
     <goal name="insert_qbits_gen&#39;vc.9.0.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="1.86" steps="1077008"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits_gen&#39;vc.9.1" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H2">
    <goal name="insert_qbits_gen&#39;vc.9.1.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(j-&#39;&#39;i)" arg2="j">
     <goal name="insert_qbits_gen&#39;vc.9.1.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="basis_ket_invariant">
      <goal name="insert_qbits_gen&#39;vc.9.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="3.81" steps="1143838"/></proof>
      </goal>
      <goal name="insert_qbits_gen&#39;vc.9.1.0.0.1" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.19" steps="838493"/></proof>
      </goal>
      <goal name="insert_qbits_gen&#39;vc.9.1.0.0.2" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="2.31" steps="898984"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_gen&#39;vc.9.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="7"><result status="valid" time="1.52" steps="852975"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="3.39" steps="1124913"/></proof>
  </goal>
  <goal name="insert_qbits_gen&#39;vc.11" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H5">
   <goal name="insert_qbits_gen&#39;vc.11.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="insert_qbits_gen&#39;vc.11.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H13">
     <goal name="insert_qbits_gen&#39;vc.11.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H2">
      <goal name="insert_qbits_gen&#39;vc.11.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="insert_qbits_path_sem">
       <goal name="insert_qbits_gen&#39;vc.11.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.72" steps="1077479"/></proof>
       </goal>
       <goal name="insert_qbits_gen&#39;vc.11.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.77" steps="1077488"/></proof>
       </goal>
       <goal name="insert_qbits_gen&#39;vc.11.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.77" steps="1077481"/></proof>
       </goal>
       <goal name="insert_qbits_gen&#39;vc.11.0.0.0.0.3" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.77" steps="1077479"/></proof>
       </goal>
       <goal name="insert_qbits_gen&#39;vc.11.0.0.0.0.4" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.83" steps="1077479"/></proof>
       </goal>
       <goal name="insert_qbits_gen&#39;vc.11.0.0.0.0.5" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.75" steps="1077479"/></proof>
       </goal>
       <goal name="insert_qbits_gen&#39;vc.11.0.0.0.0.6" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="1.73" steps="1077479"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="insert_qbits_gen&#39;vc.11.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="insert_qbits_gen&#39;vc.11.1.0" expl="postcondition" proved="true">
    <proof prover="7"><result status="valid" time="4.41" steps="1339596"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="swap_lists&#39;vc" expl="VC for swap_lists" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="swap_lists&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.38" steps="831111"/></proof>
  </goal>
  <goal name="swap_lists&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.35" steps="889603"/></proof>
  </goal>
  <goal name="swap_lists&#39;vc.2" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.41" steps="831126"/></proof>
  </goal>
  <goal name="swap_lists&#39;vc.3" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.40" steps="831145"/></proof>
  </goal>
  <goal name="swap_lists&#39;vc.4" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.40" steps="831168"/></proof>
  </goal>
  <goal name="swap_lists&#39;vc.5" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.34" steps="831325"/></proof>
  </goal>
  <goal name="swap_lists&#39;vc.6" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.37" steps="889865"/></proof>
  </goal>
  <goal name="swap_lists&#39;vc.7" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.41" steps="890652"/></proof>
  </goal>
  <goal name="swap_lists&#39;vc.8" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.42" steps="842093"/></proof>
  </goal>
  <goal name="swap_lists&#39;vc.9" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="2.43" steps="905200"/></proof>
  </goal>
  <goal name="swap_lists&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="2.39" steps="905673"/></proof>
  </goal>
  <goal name="swap_lists&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.59" steps="856800"/></proof>
  </goal>
  <goal name="swap_lists&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="1.40" steps="842523"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="swap_lists_kets_basis&#39;vc" expl="VC for swap_lists_kets_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="swap_lists_kets_basis&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="swap_lists&#39;def">
   <goal name="swap_lists_kets_basis&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
    <goal name="swap_lists_kets_basis&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
     <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
      <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="place_kron_left">
       <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="insert_qbits_gen&#39;spec7">
         <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="1.84" steps="1073520"/></proof>
         </goal>
         <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="1.42"/></proof>
         </goal>
         <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.08" steps="1141419"/></proof>
         </goal>
         <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="4.11" steps="1329402"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="insert_qbits_gen&#39;spec7">
         <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.71"/></proof>
         </goal>
         <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="1.52"/></proof>
         </goal>
         <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.01" steps="1141419"/></proof>
         </goal>
         <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="4.16" steps="1329402"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.2" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.2.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="insert_qbits_gen&#39;spec7">
         <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="1.98" steps="1073531"/></proof>
         </goal>
         <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="1.66"/></proof>
         </goal>
         <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.2.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="2.83" steps="1141419"/></proof>
         </goal>
         <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.2.0.3" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="4.21" steps="1329402"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
         <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="a" arg2="(bv_to_ket (ket_to_bv a))">
          <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="y" arg2="(bv_to_ket (ket_to_bv y))">
           <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
            <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
             <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="insert_qbits_gen&#39;spec">
              <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="1.60"/></proof>
              </goal>
              <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="2.85" steps="1141419"/></proof>
              </goal>
              <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="4.16" steps="1329402"/></proof>
              </goal>
              <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.3" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.15" steps="1149396"/></proof>
              </goal>
              <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.4" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.10" steps="1149418"/></proof>
              </goal>
              <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.5" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="bv_to_ket_eq">
               <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.5.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="4.12" steps="1342539"/></proof>
               </goal>
               <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.5.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.5.1.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="htpart_value_b">
                 <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.5.1.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="concat_value_left">
                  <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.5.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="concat_value_right">
                   <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.5.1.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.73"/></proof>
                   </goal>
                   <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.5.1.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="7"><result status="valid" time="4.13" steps="1342519"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.5.1.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="7"><result status="valid" time="4.19" steps="1340410"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.5.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="2.93" steps="1141445"/></proof>
                 </goal>
                 <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.5.1.0.2" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="4.06" steps="1333994"/></proof>
                 </goal>
                 <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.5.1.0.3" expl="rewrite premises" proved="true">
                 <proof prover="7"><result status="valid" time="4.25" steps="1335944"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.6" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="4.76" steps="1380505"/></proof>
              </goal>
              <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="permutation_three_blocks&#39;def">
               <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="permutation_circuit&#39;spec">
                <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                 <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="bv_to_ket_eq">
                  <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="make_bv_length">
                   <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="4.86" steps="1380549"/></proof>
                   </goal>
                   <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                     <proof prover="7"><result status="valid" time="4.07" steps="1335441"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                     <proof prover="7"><result status="valid" time="4.15" steps="1335232"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="7"><result status="valid" time="2.86" steps="1141394"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                    <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                     <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="eliminate_if" proved="true" >
                       <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0.0.0.0" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <proof prover="7"><result status="valid" time="1.92" steps="1098483"/></proof>
                        </goal>
                        <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                        <proof prover="0"><result status="valid" time="1.75"/></proof>
                        </goal>
                        <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="concat_value_left">
                         <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="hpart_value_b">
                          <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="concat_value_left">
                           <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                           <proof prover="0"><result status="valid" time="1.82"/></proof>
                           </goal>
                           <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
                           <proof prover="7"><result status="valid" time="4.13" steps="1347467"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
                          <proof prover="7"><result status="valid" time="1.92" steps="1091163"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
                         <proof prover="7"><result status="valid" time="4.16" steps="1347936"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                       <proof prover="7"><result status="valid" time="4.10" steps="1335628"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0.1.1.0" expl="rewrite premises" proved="true">
                       <proof prover="7"><result status="valid" time="4.20" steps="1335448"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="7"><result status="valid" time="1.87" steps="1073555"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                      <proof prover="7"><result status="valid" time="4.16" steps="1340598"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
                      <proof prover="7"><result status="valid" time="4.23" steps="1340460"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                    <proof prover="7"><result status="valid" time="2.94" steps="1146031"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.1" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="1.84" steps="1073515"/></proof>
                </goal>
                <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.2" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="set_bijective_auto">
                 <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.2.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.2.0.0" expl="apply premises" proved="true">
                  <proof prover="7"><result status="valid" time="4.65" steps="1431947"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.2.1" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.2.1.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.2.1.0.0" expl="apply premises" proved="true">
                   <transf name="exists" proved="true" arg1="(if e&#39; &lt;&#39; 0 then e&#39; else if e&#39; &lt;&#39; (0 +&#39; l) then e&#39; +&#39; l else e&#39; -&#39;&#39; l)
">
                    <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.2.1.0.0.0" proved="true">
                    <proof prover="7"><result status="valid" time="4.59" steps="1432465"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.0.3" expl="rewrite premises" proved="true">
                <proof prover="7"><result status="valid" time="4.91" steps="1382091"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.1" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="1.97" steps="1073506"/></proof>
               </goal>
               <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.2" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="3.02" steps="1141387"/></proof>
               </goal>
               <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.3" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="2.96" steps="1141387"/></proof>
               </goal>
               <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.4" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="1.86" steps="1073515"/></proof>
               </goal>
               <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.0.0.0.7.5" expl="rewrite premises" proved="true">
               <proof prover="7"><result status="valid" time="1.85" steps="1073525"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="7"><result status="valid" time="3.07" steps="1143145"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="7"><result status="valid" time="3.08" steps="1143145"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="swap_lists_kets_basis&#39;vc.0.0.0.0.0.3.0.1" expl="equality hypothesis" proved="true">
         <proof prover="7"><result status="valid" time="3.08" steps="1143145"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="swap_lists_kets_basis&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="3.50" steps="1125919"/></proof>
   </goal>
   <goal name="swap_lists_kets_basis&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="1.37" steps="831897"/></proof>
   </goal>
   <goal name="swap_lists_kets_basis&#39;vc.0.3" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="1.39" steps="831895"/></proof>
   </goal>
   <goal name="swap_lists_kets_basis&#39;vc.0.4" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="3.56" steps="1123887"/></proof>
   </goal>
   <goal name="swap_lists_kets_basis&#39;vc.0.5" expl="rewrite premises" proved="true">
   <proof prover="7"><result status="valid" time="3.54" steps="1123944"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="swap_lists_kets&#39;vc" expl="VC for swap_lists_kets" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="swap_lists_kets&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.38" steps="832320"/></proof>
  </goal>
  <goal name="swap_lists_kets&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.38" steps="832331"/></proof>
  </goal>
  <goal name="swap_lists_kets&#39;vc.2" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="z,(n-&#39;&#39;c2-&#39;&#39;l)">
   <goal name="swap_lists_kets&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst">
    <goal name="swap_lists_kets&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
     <goal name="swap_lists_kets&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
      <goal name="swap_lists_kets&#39;vc.2.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
       <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
        <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_sum_">
         <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
          <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.61" steps="1131550"/></proof>
          </goal>
          <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
          </transf>
          </goal>
          <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.70" steps="1135095"/></proof>
          </goal>
          <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
             <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
              <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
               <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="path_sem_scal">
                 <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="4.07" steps="1230935"/></proof>
                 </goal>
                 <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <transf name="replace" proved="true" arg1="(width (swap_lists 0 c2 l n))" arg2="(l+&#39;(c2-&#39;&#39;l+&#39;l+&#39;((n -&#39;&#39; c2) -&#39;&#39; l)) )">
                  <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="kronecker_ket_l">
                   <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="2.61" steps="974139"/></proof>
                   </goal>
                   <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="3.98" steps="1214758"/></proof>
                   </goal>
                   <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="1.59" steps="911498"/></proof>
                   </goal>
                   <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.3" expl="apply premises" proved="true">
                   <transf name="apply" proved="true" arg1="kronecker_ket_l">
                    <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.3.0" expl="apply premises" proved="true">
                    <proof prover="7"><result status="valid" time="3.97" steps="1214701"/></proof>
                    </goal>
                    <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.3.1" expl="apply premises" proved="true">
                    <proof prover="7"><result status="valid" time="1.57" steps="911498"/></proof>
                    </goal>
                    <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.3.2" expl="apply premises" proved="true">
                    <proof prover="7"><result status="valid" time="3.88" steps="1214819"/></proof>
                    </goal>
                    <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.3.3" expl="apply premises" proved="true">
                    <proof prover="7"><result status="valid" time="3.81" steps="1213408"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                  <proof prover="7"><result status="valid" time="3.84" steps="1217107"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="6"><result status="valid" time="4.73" steps="210495"/></proof>
         </goal>
         <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="4.05" steps="1157341"/></proof>
         </goal>
         <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(width (swap_lists 0 c2 l n))" arg2="(l+&#39; (c2-&#39;&#39;l+&#39;l+&#39; ((n -&#39;&#39; c2) -&#39;&#39; l)))">
            <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_ket_l">
             <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="2.57" steps="974139"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="4.02" steps="1214758"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.3.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="1.62" steps="911498"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.3.0.0.0.3" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="kronecker_ket_l">
              <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.3.0.0.0.3.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="4.05" steps="1214701"/></proof>
              </goal>
              <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.3.0.0.0.3.1" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="1.62" steps="911498"/></proof>
              </goal>
              <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.3.0.0.0.3.2" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.83" steps="1214819"/></proof>
              </goal>
              <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.3.0.0.0.3.3" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.71" steps="1217712"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="7"><result status="valid" time="3.76" steps="1217107"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
          <transf name="replace" proved="true" arg1="(((n -&#39;&#39; c2) -&#39;&#39; l) +&#39; ket_length (kronecker a x))" arg2="( ket_length (kronecker a x) +&#39; ((n -&#39;&#39; c2) -&#39;&#39; l) )">
           <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_ket_l">
            <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.71" steps="1214974"/></proof>
            </goal>
            <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.53" steps="911498"/></proof>
            </goal>
            <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.83" steps="1214983"/></proof>
            </goal>
            <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.97" steps="1217712"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="7"><result status="valid" time="1.45" steps="911530"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.67" steps="892566"/></proof>
        </goal>
        <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="6"><result status="valid" time="5.11" steps="210491"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.64" steps="1217712"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.82" steps="1128902"/></proof>
       </goal>
       <goal name="swap_lists_kets&#39;vc.2.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="6"><result status="valid" time="4.66" steps="210491"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="swap_lists_kets&#39;vc.2.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="swap_lists_kets&#39;vc.2.0.0.0.1.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="swap_lists_kets&#39;vc.2.0.0.0.1.0.0" expl="rewrite premises" proved="true">
        <transf name="replace" proved="true" arg1="(((n -&#39;&#39; c2) -&#39;&#39; l) +&#39; ket_length (kronecker a y))" arg2="(ket_length (kronecker a y) +&#39;  (((n -&#39;&#39; c2) -&#39;&#39; l) ))">
         <goal name="swap_lists_kets&#39;vc.2.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="swap_lists_kets&#39;vc.2.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.85" steps="1214976"/></proof>
          </goal>
          <goal name="swap_lists_kets&#39;vc.2.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="1.57" steps="911498"/></proof>
          </goal>
          <goal name="swap_lists_kets&#39;vc.2.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.95" steps="1214985"/></proof>
          </goal>
          <goal name="swap_lists_kets&#39;vc.2.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="4.03" steps="1217712"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="swap_lists_kets&#39;vc.2.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="7"><result status="valid" time="1.57" steps="911530"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="swap_lists_kets&#39;vc.2.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="2.56" steps="892566"/></proof>
      </goal>
      <goal name="swap_lists_kets&#39;vc.2.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="6"><result status="valid" time="4.95" steps="210491"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="swap_lists_kets&#39;vc.2.0.0.1" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="swap_lists_kets&#39;vc.2.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="swap_lists_kets&#39;vc.2.0.0.1.0.0" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.97" steps="1217712"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="swap_lists_kets&#39;vc.2.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="3.67" steps="1128904"/></proof>
     </goal>
     <goal name="swap_lists_kets&#39;vc.2.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="6"><result status="valid" time="4.89" steps="210491"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="swap_lists_kets&#39;vc.2.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.44" steps="832824"/></proof>
    </goal>
    <goal name="swap_lists_kets&#39;vc.2.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.49" steps="892563"/></proof>
    </goal>
    <goal name="swap_lists_kets&#39;vc.2.0.3" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.43" steps="892602"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="swap_lists_kets&#39;vc.3" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="a,(c2-&#39;&#39;l)">
   <goal name="swap_lists_kets&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst">
    <goal name="swap_lists_kets&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
     <goal name="swap_lists_kets&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
      <goal name="swap_lists_kets&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
       <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
        <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
         <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
          <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_sum_">
           <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
            <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.41" steps="1128642"/></proof>
            </goal>
            <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.31" steps="833011"/></proof>
            </goal>
            <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.34" steps="833066"/></proof>
            </goal>
            <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
               <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                 <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                  <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                   <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                    <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="path_sem_scal">
                     <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="7"><result status="valid" time="3.67" steps="1228248"/></proof>
                     </goal>
                     <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <transf name="replace" proved="true" arg1="(width (swap_lists 0 c2 l n))" arg2="(l+&#39; (c2-&#39;&#39;l+&#39;l+&#39;(n-&#39;&#39;c2-&#39;&#39;l)))">
                      <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="kronecker_ket_l">
                       <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                       <proof prover="7"><result status="valid" time="2.45" steps="974311"/></proof>
                       </goal>
                       <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                       <proof prover="7"><result status="valid" time="3.66" steps="1211726"/></proof>
                       </goal>
                       <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                       <proof prover="7"><result status="valid" time="1.52" steps="911687"/></proof>
                       </goal>
                       <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.3" expl="apply premises" proved="true">
                       <transf name="apply" proved="true" arg1="kronecker_ket_l">
                        <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.3.0" expl="apply premises" proved="true">
                        <proof prover="7"><result status="valid" time="3.61" steps="1211771"/></proof>
                        </goal>
                        <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.3.1" expl="apply premises" proved="true">
                        <proof prover="7"><result status="valid" time="1.46" steps="911694"/></proof>
                        </goal>
                        <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.3.2" expl="apply premises" proved="true">
                        <proof prover="7"><result status="valid" time="4.16" steps="1214123"/></proof>
                        </goal>
                        <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.3.3" expl="apply premises" proved="true">
                        <proof prover="7"><result status="valid" time="1.47" steps="911687"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                      <proof prover="7"><result status="valid" time="3.82" steps="1215979"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="6"><result status="valid" time="4.61" steps="209928"/></proof>
           </goal>
           <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(width (swap_lists 0 c2 l n))" arg2="(c2-&#39;&#39;l +&#39; l+&#39; (n-&#39;&#39;c2-&#39;&#39;l) +&#39; l)">
            <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="4.03" steps="1161930"/></proof>
            </goal>
            <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.2.1" expl="equality hypothesis" proved="true">
            <proof prover="7"><result status="valid" time="3.54" steps="1129820"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
             <transf name="replace" proved="true" arg1="(width (swap_lists 0 c2 l n))" arg2="(l +&#39; ( (c2-&#39;&#39;l) +&#39; l +&#39; (n-&#39;&#39;c2-&#39;&#39;l)))">
              <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_ket_l">
               <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="2.70" steps="974311"/></proof>
               </goal>
               <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="3.87" steps="1211726"/></proof>
               </goal>
               <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.3.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="1.61" steps="911687"/></proof>
               </goal>
               <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.3.0.0.0.3" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.3.0.0.0.3.0" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="3.75" steps="1211771"/></proof>
                </goal>
                <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.3.0.0.0.3.1" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="1.55" steps="911694"/></proof>
                </goal>
                <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.3.0.0.0.3.2" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="kronecker_ket_l">
                 <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.3.0.0.0.3.2.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.75" steps="1211689"/></proof>
                 </goal>
                 <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.3.0.0.0.3.2.1" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="2.78" steps="974311"/></proof>
                 </goal>
                 <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.3.0.0.0.3.2.2" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.72" steps="1215135"/></proof>
                 </goal>
                 <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.3.0.0.0.3.2.3" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="1.64" steps="911687"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.3.0.0.0.3.3" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="1.33" steps="911687"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="7"><result status="valid" time="4.09" steps="1215979"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_ket_l">
             <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.75" steps="1213909"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.71" steps="1212157"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="kronecker_ket_l">
              <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.1.0.0.2.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.72" steps="1211689"/></proof>
              </goal>
              <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.1.0.0.2.1" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.74" steps="1212027"/></proof>
              </goal>
              <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.1.0.0.2.2" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.74" steps="1215135"/></proof>
              </goal>
              <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.1.0.0.2.3" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.62" steps="1211998"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.1.0.0.3" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.80" steps="1212128"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="7"><result status="valid" time="2.20" steps="892901"/></proof>
          </goal>
          <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="6"><result status="valid" time="4.77" steps="209895"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_ket_l">
            <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.79" steps="1213914"/></proof>
            </goal>
            <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.77" steps="1212157"/></proof>
            </goal>
            <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_ket_l">
             <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.1.0.0.2.0" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.73" steps="1211689"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.1.0.0.2.1" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.28" steps="1212027"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.1.0.0.2.2" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.97" steps="1215135"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.1.0.0.2.3" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.77" steps="1211998"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.1.0.0.3" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.71" steps="1212128"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="2.38" steps="892901"/></proof>
         </goal>
         <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="6"><result status="valid" time="4.63" steps="209895"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_ket_l">
           <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.82" steps="1211689"/></proof>
           </goal>
           <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.80" steps="1212027"/></proof>
           </goal>
           <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.93" steps="1215135"/></proof>
           </goal>
           <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.1.0.0.3" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.92" steps="1211998"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.58" steps="892929"/></proof>
        </goal>
        <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="6"><result status="valid" time="5.01" steps="209895"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="4.05" steps="1215135"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="2.56" steps="892901"/></proof>
       </goal>
       <goal name="swap_lists_kets&#39;vc.3.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="6"><result status="valid" time="4.66" steps="209895"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="swap_lists_kets&#39;vc.3.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="swap_lists_kets&#39;vc.3.0.0.0.1.0" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="swap_lists_kets&#39;vc.3.0.0.0.1.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_ket_l">
         <goal name="swap_lists_kets&#39;vc.3.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="4.00" steps="1211689"/></proof>
         </goal>
         <goal name="swap_lists_kets&#39;vc.3.0.0.0.1.0.0.1" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="3.99" steps="1212027"/></proof>
         </goal>
         <goal name="swap_lists_kets&#39;vc.3.0.0.0.1.0.0.2" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="4.03" steps="1215135"/></proof>
         </goal>
         <goal name="swap_lists_kets&#39;vc.3.0.0.0.1.0.0.3" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="3.97" steps="1211998"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="swap_lists_kets&#39;vc.3.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="2.58" steps="892929"/></proof>
      </goal>
      <goal name="swap_lists_kets&#39;vc.3.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="6"><result status="valid" time="4.55" steps="209895"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="swap_lists_kets&#39;vc.3.0.0.1" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="swap_lists_kets&#39;vc.3.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="swap_lists_kets&#39;vc.3.0.0.1.0.0" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.83" steps="1215135"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="swap_lists_kets&#39;vc.3.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="2.20" steps="892901"/></proof>
     </goal>
     <goal name="swap_lists_kets&#39;vc.3.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="6"><result status="valid" time="4.95" steps="209895"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="swap_lists_kets&#39;vc.3.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="3.68" steps="1125678"/></proof>
    </goal>
    <goal name="swap_lists_kets&#39;vc.3.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.53" steps="892906"/></proof>
    </goal>
    <goal name="swap_lists_kets&#39;vc.3.0.3" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="3.71" steps="1125701"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="swap_lists_kets&#39;vc.4" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="y,l">
   <goal name="swap_lists_kets&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst">
    <goal name="swap_lists_kets&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
     <goal name="swap_lists_kets&#39;vc.4.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
      <goal name="swap_lists_kets&#39;vc.4.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
       <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
        <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_sum_">
         <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
          <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.76" steps="1183252"/></proof>
          </goal>
          <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="1.22" steps="832973"/></proof>
          </goal>
          <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.94" steps="1190905"/></proof>
          </goal>
          <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
             <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
              <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
               <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="path_sem_scal">
                 <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="scalar_eq">
                  <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="Ensures">
                   <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="1.35" steps="911649"/></proof>
                   </goal>
                   <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="1.35" steps="911649"/></proof>
                   </goal>
                   <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="3.81" steps="1246182"/></proof>
                   </goal>
                   <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="1.30" steps="911649"/></proof>
                   </goal>
                   <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.4" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="1.50" steps="911649"/></proof>
                   </goal>
                   <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.5" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="2.63" steps="975476"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <transf name="replace" proved="true" arg1="(width (swap_lists 0 c2 l n))" arg2="(l+&#39; (c2-&#39;&#39;l+&#39;l+&#39; (n-&#39;&#39;c2-&#39;&#39;l)))">
                  <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="kronecker_ket_l">
                   <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="2.53" steps="974250"/></proof>
                   </goal>
                   <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="3.92" steps="1247415"/></proof>
                   </goal>
                   <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="1.50" steps="911649"/></proof>
                   </goal>
                   <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.3" expl="apply premises" proved="true">
                   <transf name="apply" proved="true" arg1="kronecker_ket_l">
                    <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.3.0" expl="apply premises" proved="true">
                    <proof prover="7"><result status="valid" time="3.85" steps="1247538"/></proof>
                    </goal>
                    <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.3.1" expl="apply premises" proved="true">
                    <proof prover="7"><result status="valid" time="1.50" steps="911656"/></proof>
                    </goal>
                    <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.3.2" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="kronecker_ket_l">
                     <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.3.2.0" expl="apply premises" proved="true">
                     <proof prover="7"><result status="valid" time="3.85" steps="1245595"/></proof>
                     </goal>
                     <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.3.2.1" expl="apply premises" proved="true">
                     <proof prover="7"><result status="valid" time="2.46" steps="974250"/></proof>
                     </goal>
                     <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.3.2.2" expl="apply premises" proved="true">
                     <proof prover="7"><result status="valid" time="1.33" steps="911649"/></proof>
                     </goal>
                     <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.3.2.3" expl="apply premises" proved="true">
                     <proof prover="7"><result status="valid" time="3.84" steps="1246182"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.0.3.3" expl="apply premises" proved="true">
                    <proof prover="7"><result status="valid" time="1.34" steps="911649"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                  <proof prover="7"><result status="valid" time="4.00" steps="1249568"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="6"><result status="valid" time="4.87" steps="209919"/></proof>
         </goal>
         <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="replace" proved="true" arg1="(width (swap_lists 0 c2 l n))" arg2="(l+&#39; (c2-&#39;&#39;l+&#39;(n-&#39;&#39;c2-&#39;&#39;l)+&#39;l))">
          <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.80"/></proof>
          </goal>
          <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.2.1" expl="equality hypothesis" proved="true">
          <proof prover="7"><result status="valid" time="3.65" steps="1164519"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(width (swap_lists 0 c2 l n))" arg2="(l+&#39; (c2-&#39;&#39;l+&#39;l+&#39; (n-&#39;&#39;c2-&#39;&#39;l)))">
            <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_ket_l">
             <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="2.56" steps="974250"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.99" steps="1247415"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.3.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="1.32" steps="911649"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.3.0.0.0.3" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="kronecker_ket_l">
              <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.3.0.0.0.3.0" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="3.80" steps="1247538"/></proof>
              </goal>
              <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.3.0.0.0.3.1" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="1.59" steps="911656"/></proof>
              </goal>
              <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.3.0.0.0.3.2" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_ket_l">
               <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.3.0.0.0.3.2.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="3.86" steps="1245595"/></proof>
               </goal>
               <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.3.0.0.0.3.2.1" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="2.30" steps="974250"/></proof>
               </goal>
               <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.3.0.0.0.3.2.2" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="1.36" steps="911649"/></proof>
               </goal>
               <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.3.0.0.0.3.2.3" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="3.88" steps="1252900"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.3.0.0.0.3.3" expl="apply premises" proved="true">
              <proof prover="7"><result status="valid" time="1.34" steps="911649"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="7"><result status="valid" time="3.93" steps="1249568"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
          <transf name="replace" proved="true" arg1="((l +&#39; ket_length a) +&#39; ket_length z)" arg2="((c2-&#39;&#39;l +&#39; l+&#39; (n-&#39;&#39;c2-&#39;&#39;l)))">
           <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_ket_l">
            <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.84" steps="1247538"/></proof>
            </goal>
            <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.36" steps="911656"/></proof>
            </goal>
            <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_ket_l">
             <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.1.0.0.0.2.0" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.82" steps="1245595"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.1.0.0.0.2.1" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="2.61" steps="974250"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.1.0.0.0.2.2" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="1.50" steps="911649"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.1.0.0.0.2.3" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.85" steps="1252900"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="1.37" steps="911649"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="7"><result status="valid" time="4.37" steps="1282869"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.41" steps="892731"/></proof>
        </goal>
        <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="6"><result status="valid" time="4.76" steps="209911"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="3.89" steps="1252900"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="4.05" steps="1200697"/></proof>
       </goal>
       <goal name="swap_lists_kets&#39;vc.4.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="6"><result status="valid" time="4.77" steps="209911"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="swap_lists_kets&#39;vc.4.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="swap_lists_kets&#39;vc.4.0.0.0.1.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="swap_lists_kets&#39;vc.4.0.0.0.1.0.0" expl="rewrite premises" proved="true">
        <transf name="replace" proved="true" arg1="(l +&#39; ket_length a)" arg2="(ket_length a +&#39; l)">
         <goal name="swap_lists_kets&#39;vc.4.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="swap_lists_kets&#39;vc.4.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.94" steps="1245896"/></proof>
          </goal>
          <goal name="swap_lists_kets&#39;vc.4.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="2.56" steps="974250"/></proof>
          </goal>
          <goal name="swap_lists_kets&#39;vc.4.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.84" steps="1246082"/></proof>
          </goal>
          <goal name="swap_lists_kets&#39;vc.4.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.92" steps="1252900"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="swap_lists_kets&#39;vc.4.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="7"><result status="valid" time="1.37" steps="911674"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="swap_lists_kets&#39;vc.4.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="2.47" steps="892839"/></proof>
      </goal>
      <goal name="swap_lists_kets&#39;vc.4.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="6"><result status="valid" time="4.74" steps="209911"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="swap_lists_kets&#39;vc.4.0.0.1" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="swap_lists_kets&#39;vc.4.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="swap_lists_kets&#39;vc.4.0.0.1.0.0" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="3.90" steps="1252900"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="swap_lists_kets&#39;vc.4.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="2.53" steps="892752"/></proof>
     </goal>
     <goal name="swap_lists_kets&#39;vc.4.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="6"><result status="valid" time="4.56" steps="209911"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="swap_lists_kets&#39;vc.4.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.25" steps="891578"/></proof>
    </goal>
    <goal name="swap_lists_kets&#39;vc.4.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.55" steps="892713"/></proof>
    </goal>
    <goal name="swap_lists_kets&#39;vc.4.0.3" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.51" steps="892729"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="swap_lists_kets&#39;vc.5" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="x,l">
   <goal name="swap_lists_kets&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst">
    <goal name="swap_lists_kets&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
     <goal name="swap_lists_kets&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
      <goal name="swap_lists_kets&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
       <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
        <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_sum_">
         <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
          <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.73" steps="1144379"/></proof>
          </goal>
          <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="1.46" steps="832935"/></proof>
          </goal>
          <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="3.68" steps="1147189"/></proof>
          </goal>
          <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
             <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
              <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="path_sem_scal">
               <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                 <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="scalar_eq">
                  <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="Ensures">
                   <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="1.69" steps="911611"/></proof>
                   </goal>
                   <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="3.89" steps="1223668"/></proof>
                   </goal>
                   <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="1.59" steps="911611"/></proof>
                   </goal>
                   <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="1.57" steps="911611"/></proof>
                   </goal>
                   <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.4" expl="apply premises" proved="true">
                   <proof prover="7"><result status="valid" time="2.69" steps="975437"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0.0.0.1" expl="rewrite premises" proved="true">
               <transf name="replace" proved="true" arg1="(width (swap_lists 0 c2 l n))" arg2="(l +&#39; ((c2-&#39;&#39;l +&#39; l) +&#39;(n-&#39;&#39;c2-&#39;&#39;l)))">
                <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="kronecker_ket_l">
                 <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="2.26" steps="974206"/></proof>
                 </goal>
                 <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.95" steps="1224990"/></proof>
                 </goal>
                 <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                 <proof prover="7"><result status="valid" time="3.91" steps="1223668"/></proof>
                 </goal>
                 <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0.0.0.1.0.3" expl="apply premises" proved="true">
                 <proof prover="0"><result status="valid" time="2.03"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.0.3.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                <proof prover="7"><result status="valid" time="4.00" steps="1226995"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="6"><result status="valid" time="4.81" steps="209623"/></proof>
         </goal>
         <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="4.21" steps="1180458"/></proof>
         </goal>
         <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(width (swap_lists 0 c2 l n))" arg2="(l+&#39;(c2-&#39;&#39;l+&#39;l+&#39; (n-&#39;&#39;c2-&#39;&#39;l)))">
            <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_ket_l">
             <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="2.59" steps="974206"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.87" steps="1224990"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.3.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.89" steps="1227185"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.3.0.0.0.3" expl="apply premises" proved="true">
             <proof prover="0"><result status="valid" time="2.12"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="7"><result status="valid" time="3.92" steps="1226995"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
          <transf name="replace" proved="true" arg1="(l +&#39; ket_length a)" arg2="(ket_length a+&#39;l)">
           <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_ket_l">
            <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.92" steps="1225354"/></proof>
            </goal>
            <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.86" steps="1223429"/></proof>
            </goal>
            <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_ket_l">
             <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.1.0.0.0.2.0" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.83" steps="1223425"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.1.0.0.0.2.1" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="2.27" steps="974206"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.1.0.0.0.2.2" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.93" steps="1223456"/></proof>
             </goal>
             <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.1.0.0.0.2.3" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="3.98" steps="1227185"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="3.96" steps="1223460"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="7"><result status="valid" time="1.67" steps="911636"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="2.53" steps="892742"/></proof>
        </goal>
        <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="6"><result status="valid" time="4.50" steps="209614"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
         <transf name="replace" proved="true" arg1="(l +&#39; ket_length a)" arg2="(ket_length a+&#39;l)">
          <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_ket_l">
           <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.97" steps="1223425"/></proof>
           </goal>
           <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="2.66" steps="974206"/></proof>
           </goal>
           <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.96" steps="1223456"/></proof>
           </goal>
           <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="3.94" steps="1227185"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="7"><result status="valid" time="1.57" steps="911636"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="2.51" steps="892770"/></proof>
       </goal>
       <goal name="swap_lists_kets&#39;vc.5.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="6"><result status="valid" time="4.97" steps="209614"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="swap_lists_kets&#39;vc.5.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="swap_lists_kets&#39;vc.5.0.0.0.1.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="swap_lists_kets&#39;vc.5.0.0.0.1.0.0" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="3.93" steps="1227185"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="swap_lists_kets&#39;vc.5.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="2.49" steps="892683"/></proof>
      </goal>
      <goal name="swap_lists_kets&#39;vc.5.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="6"><result status="valid" time="4.74" steps="209614"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="swap_lists_kets&#39;vc.5.0.0.1" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="swap_lists_kets&#39;vc.5.0.0.1.0" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="3.81" steps="1227194"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="swap_lists_kets&#39;vc.5.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="3.55" steps="1141939"/></proof>
     </goal>
     <goal name="swap_lists_kets&#39;vc.5.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="6"><result status="valid" time="4.82" steps="209614"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="swap_lists_kets&#39;vc.5.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.43" steps="891504"/></proof>
    </goal>
    <goal name="swap_lists_kets&#39;vc.5.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.54" steps="892644"/></proof>
    </goal>
    <goal name="swap_lists_kets&#39;vc.5.0.3" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.54" steps="892655"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="notc&#39;vc" expl="VC for notc" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="notc&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="notc&#39;vc.0.0" expl="VC for notc" proved="true">
   <proof prover="7"><result status="valid" time="1.21" steps="832704"/></proof>
   </goal>
   <goal name="notc&#39;vc.0.1" expl="VC for notc" proved="true">
   <proof prover="7"><result status="valid" time="1.41" steps="832706"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="notc&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="notc&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.41" steps="832728"/></proof>
   </goal>
   <goal name="notc&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.39" steps="832730"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="notc&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="notc&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.46" steps="832752"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
