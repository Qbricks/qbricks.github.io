<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="7" name="Z3" version="4.8.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="8" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="9" name="Z3" version="4.8.6" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="pps.mlw"/>
<theory name="Pps" proved="true">
 <goal name="pps&#39;vc" expl="VC for pps" proved="true">
 <transf name="compute_specified" proved="true" >
 </transf>
 </goal>
 <goal name="inv_func_int&#39;vc" expl="VC for inv_func_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="inv_func_int&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.86" steps="522401"/></proof>
  </goal>
  <goal name="inv_func_int&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.86" steps="522397"/></proof>
  </goal>
  <goal name="inv_func_int&#39;vc.2" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(mem (inverse f (to_fset 0 n) (to_fset 0 n) @ a) (to_fset 0 n))">
   <goal name="inv_func_int&#39;vc.2.0" expl="asserted formula" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="inv_func_int&#39;vc.2.0.0" expl="asserted formula" proved="true">
    <transf name="apply" proved="true" arg1="inverse&#39;spec2">
     <goal name="inv_func_int&#39;vc.2.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="0.98" steps="605485"/></proof>
     </goal>
     <goal name="inv_func_int&#39;vc.2.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.15" steps="701438"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="inv_func_int&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="1.86" steps="611785"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="inv_func_int&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="inv_func_int&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="inv_func_int&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="result&#39;def">
     <goal name="inv_func_int&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="inverse&#39;spec1">
      <goal name="inv_func_int&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="0.95" steps="605232"/></proof>
      </goal>
      <goal name="inv_func_int&#39;vc.3.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.02" steps="605234"/></proof>
      </goal>
      <goal name="inv_func_int&#39;vc.3.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.11" steps="696262"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="inv_func_int&#39;vc.4" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(result (f a ) = a)">
   <goal name="inv_func_int&#39;vc.4.0" expl="true case (postcondition)" proved="true">
   <proof prover="8"><result status="valid" time="0.74" steps="522706"/></proof>
   </goal>
   <goal name="inv_func_int&#39;vc.4.1" expl="false case (postcondition)" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="inv_func_int&#39;vc.4.1.0" expl="false case (postcondition)" proved="true">
    <transf name="rewrite" proved="true" arg1="result&#39;def" arg2="in" arg3="h">
     <goal name="inv_func_int&#39;vc.4.1.0.0" expl="false case (postcondition)" proved="true">
     <transf name="case" proved="true" arg1="(f  (inverse f (to_fset 0 n) (to_fset 0 n) @ (f @ a)) &lt;&gt; f a)">
      <goal name="inv_func_int&#39;vc.4.1.0.0.0" expl="false case (true case. postcondition)" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="inv_func_int&#39;vc.4.1.0.0.0.0" expl="false case (true case. postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="inverse&#39;spec1" arg2="in" arg3="h">
        <goal name="inv_func_int&#39;vc.4.1.0.0.0.0.0" expl="false case (true case. postcondition)" proved="true">
        <proof prover="8"><result status="valid" time="1.05" steps="619825"/></proof>
        </goal>
        <goal name="inv_func_int&#39;vc.4.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.01" steps="619830"/></proof>
        </goal>
        <goal name="inv_func_int&#39;vc.4.1.0.0.0.0.2" expl="rewrite premises" proved="true">
        <transf name="instantiate" proved="true" arg1="get_bijective3" arg2="f,(to_fset 0 n),(to_fset 0 n)">
         <goal name="inv_func_int&#39;vc.4.1.0.0.0.0.2.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="Hinst">
          <goal name="inv_func_int&#39;vc.4.1.0.0.0.0.2.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="0.97" steps="619891"/></proof>
          </goal>
          <goal name="inv_func_int&#39;vc.4.1.0.0.0.0.2.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.85" steps="710251"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="inv_func_int&#39;vc.4.1.0.0.1" expl="false case (postcondition)" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="inv_func_int&#39;vc.4.1.0.0.1.0" expl="false case (postcondition)" proved="true">
       <transf name="assert" proved="true" arg1="(not (f @ (inverse f (to_fset 0 n) (to_fset 0 n) @ (f @ a))) = (f @ a))">
        <goal name="inv_func_int&#39;vc.4.1.0.0.1.0.0" expl="asserted formula" proved="true">
        <transf name="instantiate" proved="true" arg1="get_bijective2" arg2="f,(to_fset 0 n),(to_fset 0 n)">
         <goal name="inv_func_int&#39;vc.4.1.0.0.1.0.0.0" expl="asserted formula" proved="true">
         <transf name="apply" proved="true" arg1="Hinst">
          <goal name="inv_func_int&#39;vc.4.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.00" steps="619939"/></proof>
          </goal>
          <goal name="inv_func_int&#39;vc.4.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(inverse f (to_fset 0 n) (to_fset 0 n) @ (f @ a))" arg2="(result (f a))">
           <goal name="inv_func_int&#39;vc.4.1.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="assert" proved="true" arg1="(mem (f a ) (to_fset 0 n))">
            <goal name="inv_func_int&#39;vc.4.1.0.0.1.0.0.0.1.0.0" expl="asserted formula" proved="true">
            <transf name="instantiate" proved="true" arg1="get_bijective3" arg2="f,(to_fset 0 n),(to_fset 0 n)">
             <goal name="inv_func_int&#39;vc.4.1.0.0.1.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
             <transf name="apply" proved="true" arg1="Hinst">
              <goal name="inv_func_int&#39;vc.4.1.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="1.00" steps="620000"/></proof>
              </goal>
              <goal name="inv_func_int&#39;vc.4.1.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="2.26" steps="710303"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="inv_func_int&#39;vc.4.1.0.0.1.0.0.0.1.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.82" steps="656679"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="inv_func_int&#39;vc.4.1.0.0.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="1.10" steps="631872"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="inv_func_int&#39;vc.4.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.99" steps="710217"/></proof>
          </goal>
          <goal name="inv_func_int&#39;vc.4.1.0.0.1.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="0.90" steps="619937"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="inv_func_int&#39;vc.4.1.0.0.1.0.1" expl="false case (postcondition)" proved="true">
        <proof prover="8"><result status="valid" time="1.05" steps="619848"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="inv_func_int&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="611428"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="binary_h_basis_ket&#39;vc" expl="VC for binary_h_basis_ket" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="binary_h_basis_ket&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_binary_l">
   <goal name="binary_h_basis_ket&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="binary_h_basis_ket&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="binary_h_basis_ket&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="pps&#39;invariant3">
      <goal name="binary_h_basis_ket&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.75" steps="608086"/></proof>
      </goal>
      <goal name="binary_h_basis_ket&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.85" steps="608086"/></proof>
      </goal>
      <goal name="binary_h_basis_ket&#39;vc.0.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.38" steps="550170"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="binary_h_basis_ket&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="binary_h_basis_ket&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="pps&#39;invariant2">
      <goal name="binary_h_basis_ket&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.67" steps="608086"/></proof>
      </goal>
      <goal name="binary_h_basis_ket&#39;vc.0.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.64" steps="608086"/></proof>
      </goal>
      <goal name="binary_h_basis_ket&#39;vc.0.0.1.0.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.28" steps="550170"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="swap_int&#39;vc" expl="VC for swap_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="swap_int&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.23" steps="531580"/></proof>
  </goal>
  <goal name="swap_int&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.23" steps="532251"/></proof>
  </goal>
  <goal name="swap_int&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.25" steps="532239"/></proof>
  </goal>
  <goal name="swap_int&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="swap_int&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_bijective1">
    <goal name="swap_int&#39;vc.3.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.66" steps="682113"/></proof>
    </goal>
    <goal name="swap_int&#39;vc.3.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.28" steps="624902"/></proof>
    </goal>
    <goal name="swap_int&#39;vc.3.0.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="swap_int&#39;vc.3.0.2.0" expl="apply premises" proved="true">
     <transf name="exists" proved="true" arg1="(result e&#39;)">
      <goal name="swap_int&#39;vc.3.0.2.0.0" proved="true">
      <proof prover="8"><result status="valid" time="1.64" steps="682466"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="swap_int&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.91" steps="1005889"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="build_pps&#39;vc" expl="VC for build_pps" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="build_pps&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.80" steps="559941"/></proof>
  </goal>
  <goal name="build_pps&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.81" steps="560152"/></proof>
  </goal>
  <goal name="build_pps&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.82" steps="560155"/></proof>
  </goal>
  <goal name="build_pps&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="build_pps&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.36" steps="594088"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="build_pps&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="build_pps&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="mod_eq">
    <goal name="build_pps&#39;vc.4.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(fun (i1:int) -&gt; if 0 &lt;= i1 /\ i1 &lt; w then x @ i1 else 0)" arg2="(fun (i1:int) -&gt; if 0 &lt;= i1 /\ i1 &lt; w then x&#39; @ i1 else 0)">
     <goal name="build_pps&#39;vc.4.0.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(fun (i1:int) -&gt; if 0 &lt;= i1 /\ i1 &lt; r then y @ i1 else 0)" arg2="(fun (i1:int) -&gt; if 0 &lt;= i1 /\ i1 &lt; r then y&#39; @ i1 else 0)">
      <goal name="build_pps&#39;vc.4.0.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
      <goal name="build_pps&#39;vc.4.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="1.83" steps="649940"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="build_pps&#39;vc.4.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.82" steps="649940"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="build_pps&#39;vc.5" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="build_pps&#39;vc.5.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(fun (i1:int) -&gt; if 0 &lt;= i1 /\ i1 &lt; r then y @ i1 else 0)" arg2="(fun (i1:int) -&gt; if 0 &lt;= i1 /\ i1 &lt; r then y&#39; @ i1 else 0)">
    <goal name="build_pps&#39;vc.5.0.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(fun (i1:int) -&gt; if 0 &lt;= i1 /\ i1 &lt; w then x @ i1 else 0)" arg2="(fun (i1:int) -&gt; if 0 &lt;= i1 /\ i1 &lt; w then x&#39; @ i1 else 0)">
     <goal name="build_pps&#39;vc.5.0.0.0" expl="precondition" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="build_pps&#39;vc.5.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.80" steps="651448"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="build_pps&#39;vc.5.0.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.52" steps="651448"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="build_pps&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.70" steps="560871"/></proof>
  </goal>
  <goal name="build_pps&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.70" steps="560874"/></proof>
  </goal>
  <goal name="build_pps&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H5">
   <goal name="build_pps&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="build_pps&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="mod_eq">
     <goal name="build_pps&#39;vc.8.0.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(fun (i1:int) -&gt; if 0 &lt;= i1 /\ i1 &lt; w then getbv x @ i1 else 0)" arg2="(getbv x)">
      <goal name="build_pps&#39;vc.8.0.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(fun (i1:int) -&gt; if 0 &lt;= i1 /\ i1 &lt; r then getbv y @ i1 else 0)" arg2="(getbv y)">
       <goal name="build_pps&#39;vc.8.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
       <goal name="build_pps&#39;vc.8.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="set_equal_func">
        <goal name="build_pps&#39;vc.8.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="build_pps&#39;vc.8.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="build_pps&#39;vc.8.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.60" steps="654267"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="build_pps&#39;vc.8.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="set_equal_func">
       <goal name="build_pps&#39;vc.8.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="build_pps&#39;vc.8.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="build_pps&#39;vc.8.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.57" steps="654222"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="build_pps&#39;vc.9" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H2">
   <goal name="build_pps&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="build_pps&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(fun (i1:int) -&gt; if 0 &lt;= i1 /\ i1 &lt; w then getbv x @ i1 else 0)" arg2="(getbv x)">
     <goal name="build_pps&#39;vc.9.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(fun (i1:int) -&gt; if 0 &lt;= i1 /\ i1 &lt; r then getbv y @ i1 else 0)" arg2="(getbv y)">
      <goal name="build_pps&#39;vc.9.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
      <goal name="build_pps&#39;vc.9.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="set_equal_func">
       <goal name="build_pps&#39;vc.9.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="build_pps&#39;vc.9.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="build_pps&#39;vc.9.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.55" steps="654632"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="build_pps&#39;vc.9.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="set_equal_func">
      <goal name="build_pps&#39;vc.9.0.0.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="build_pps&#39;vc.9.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="build_pps&#39;vc.9.0.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.63" steps="654587"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="build_pps_bv&#39;vc" expl="VC for build_pps_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="build_pps_bv&#39;vc.0" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="build_pps_bv&#39;vc.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="build_pps_bv&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.21" steps="540182"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="build_pps_bv&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.76" steps="509275"/></proof>
  </goal>
  <goal name="build_pps_bv&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="build_pps_bv&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="build_pps_bv&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.31" steps="541239"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="build_pps_bv&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.77" steps="510319"/></proof>
  </goal>
  <goal name="build_pps_bv&#39;vc.6" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="build_pps_bv&#39;vc.7" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="build_pps_bv&#39;vc.7.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.22" steps="642634"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="build_pps_bv&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.75" steps="609324"/></proof>
  </goal>
  <goal name="build_pps_bv&#39;vc.9" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="build_pps_bv&#39;vc.10" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="build_pps_bv&#39;vc.10.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.22" steps="643721"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="build_pps_bv&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.75" steps="610368"/></proof>
  </goal>
  <goal name="build_pps_bv&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.98" steps="670712"/></proof>
  </goal>
  <goal name="build_pps_bv&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.98" steps="670715"/></proof>
  </goal>
  <goal name="build_pps_bv&#39;vc.14" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="build_pps_bv&#39;vc.14.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.07" steps="765366"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="build_pps_bv&#39;vc.15" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="build_pps_bv&#39;vc.15.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(make_bv (fun (i1:int) -&gt; mod (x @ i1) 2) w)" arg2="(make_bv (fun (i1:int) -&gt; mod (x&#39; @ i1) 2) w)">
    <goal name="build_pps_bv&#39;vc.15.0.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(make_bv (fun (i1:int) -&gt; mod (y @ i1) 2) r)" arg2="(make_bv (fun (i1:int) -&gt; mod (y&#39; @ i1) 2) r)">
     <goal name="build_pps_bv&#39;vc.15.0.0.0" expl="precondition" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="build_pps_bv&#39;vc.15.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="set_equal_bv">
      <goal name="build_pps_bv&#39;vc.15.0.0.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="make_bv_length">
       <goal name="build_pps_bv&#39;vc.15.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="make_bv_length">
        <goal name="build_pps_bv&#39;vc.15.0.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.88" steps="672322"/></proof>
        </goal>
        <goal name="build_pps_bv&#39;vc.15.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="build_pps_bv&#39;vc.15.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.43" steps="707799"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="build_pps_bv&#39;vc.15.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.89" steps="672324"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="build_pps_bv&#39;vc.15.0.0.1.0.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="build_pps_bv&#39;vc.15.0.0.1.0.1.0" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.46" steps="707799"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="build_pps_bv&#39;vc.15.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.87" steps="672324"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="build_pps_bv&#39;vc.15.0.0.1.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
        <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
          <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
            <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.00" steps="765998"/></proof>
            </goal>
            <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.44" steps="708022"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="0.85" steps="672521"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.0.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.43" steps="708022"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.0.0.2.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.86" steps="672373"/></proof>
           </goal>
           <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.0.0.2.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.0.0.2.1.0" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.45" steps="708022"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.0.0.2.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.85" steps="672521"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.51" steps="708022"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.2" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
         <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.2.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.88" steps="672373"/></proof>
         </goal>
         <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.2.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.2.1.0" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.40" steps="708022"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="build_pps_bv&#39;vc.15.0.0.1.1.0.2.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.84" steps="672521"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="build_pps_bv&#39;vc.15.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="set_equal_bv">
     <goal name="build_pps_bv&#39;vc.15.0.1.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="make_bv_length">
      <goal name="build_pps_bv&#39;vc.15.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="make_bv_length">
       <goal name="build_pps_bv&#39;vc.15.0.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="0.87" steps="672322"/></proof>
       </goal>
       <goal name="build_pps_bv&#39;vc.15.0.1.0.0.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="build_pps_bv&#39;vc.15.0.1.0.0.1.0" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.44" steps="707799"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="build_pps_bv&#39;vc.15.0.1.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.87" steps="672324"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="build_pps_bv&#39;vc.15.0.1.0.1" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="build_pps_bv&#39;vc.15.0.1.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.42" steps="707799"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="build_pps_bv&#39;vc.15.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.88" steps="672324"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="build_pps_bv&#39;vc.15.0.1.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="build_pps_bv&#39;vc.15.0.1.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
       <goal name="build_pps_bv&#39;vc.15.0.1.1.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="build_pps_bv&#39;vc.15.0.1.1.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
         <goal name="build_pps_bv&#39;vc.15.0.1.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="build_pps_bv&#39;vc.15.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="build_pps_bv&#39;vc.15.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.05" steps="765998"/></proof>
           </goal>
           <goal name="build_pps_bv&#39;vc.15.0.1.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="build_pps_bv&#39;vc.15.0.1.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.49" steps="708022"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="build_pps_bv&#39;vc.15.0.1.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.87" steps="672521"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="build_pps_bv&#39;vc.15.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="build_pps_bv&#39;vc.15.0.1.1.0.0.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.44" steps="708022"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="build_pps_bv&#39;vc.15.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
          <goal name="build_pps_bv&#39;vc.15.0.1.1.0.0.0.2.0" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.84" steps="672373"/></proof>
          </goal>
          <goal name="build_pps_bv&#39;vc.15.0.1.1.0.0.0.2.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="build_pps_bv&#39;vc.15.0.1.1.0.0.0.2.1.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.42" steps="708022"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="build_pps_bv&#39;vc.15.0.1.1.0.0.0.2.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.84" steps="672521"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="build_pps_bv&#39;vc.15.0.1.1.0.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="build_pps_bv&#39;vc.15.0.1.1.0.1.0" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.47" steps="708022"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="build_pps_bv&#39;vc.15.0.1.1.0.2" expl="rewrite premises" proved="true">
       <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
        <goal name="build_pps_bv&#39;vc.15.0.1.1.0.2.0" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.88" steps="672373"/></proof>
        </goal>
        <goal name="build_pps_bv&#39;vc.15.0.1.1.0.2.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="build_pps_bv&#39;vc.15.0.1.1.0.2.1.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.46" steps="708022"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="build_pps_bv&#39;vc.15.0.1.1.0.2.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.88" steps="672521"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="build_pps_bv&#39;vc.16" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="build_pps_bv&#39;vc.16.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(make_bv (fun (i1:int) -&gt; mod (x @ i1) 2) w)" arg2="(make_bv (fun (i1:int) -&gt; mod (x&#39; @ i1) 2) w)">
    <goal name="build_pps_bv&#39;vc.16.0.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(make_bv (fun (i1:int) -&gt; mod (y @ i1) 2) r)" arg2="(make_bv (fun (i1:int) -&gt; mod (y&#39; @ i1) 2) r)">
     <goal name="build_pps_bv&#39;vc.16.0.0.0" expl="precondition" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="build_pps_bv&#39;vc.16.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="set_equal_bv">
      <goal name="build_pps_bv&#39;vc.16.0.0.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="make_bv_length">
       <goal name="build_pps_bv&#39;vc.16.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="make_bv_length">
        <goal name="build_pps_bv&#39;vc.16.0.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.86" steps="673550"/></proof>
        </goal>
        <goal name="build_pps_bv&#39;vc.16.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="build_pps_bv&#39;vc.16.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.45" steps="709034"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="build_pps_bv&#39;vc.16.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.85" steps="673552"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="build_pps_bv&#39;vc.16.0.0.1.0.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="build_pps_bv&#39;vc.16.0.0.1.0.1.0" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.43" steps="709034"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="build_pps_bv&#39;vc.16.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.85" steps="673552"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="build_pps_bv&#39;vc.16.0.0.1.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
        <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
          <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
            <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.08" steps="767387"/></proof>
            </goal>
            <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.53" steps="709267"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="0.88" steps="673749"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.0.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.43" steps="709267"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.0.0.2.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.86" steps="673601"/></proof>
           </goal>
           <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.0.0.2.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.0.0.2.1.0" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.45" steps="709267"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.0.0.2.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.87" steps="673749"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.42" steps="709267"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.2" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
         <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.2.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.88" steps="673601"/></proof>
         </goal>
         <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.2.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.2.1.0" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.61" steps="709267"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="build_pps_bv&#39;vc.16.0.0.1.1.0.2.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.90" steps="673749"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="build_pps_bv&#39;vc.16.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="set_equal_bv">
     <goal name="build_pps_bv&#39;vc.16.0.1.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="make_bv_length">
      <goal name="build_pps_bv&#39;vc.16.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="make_bv_length">
       <goal name="build_pps_bv&#39;vc.16.0.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="0.86" steps="673550"/></proof>
       </goal>
       <goal name="build_pps_bv&#39;vc.16.0.1.0.0.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="build_pps_bv&#39;vc.16.0.1.0.0.1.0" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.69" steps="709034"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="build_pps_bv&#39;vc.16.0.1.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.91" steps="673552"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="build_pps_bv&#39;vc.16.0.1.0.1" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="build_pps_bv&#39;vc.16.0.1.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.43" steps="709034"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="build_pps_bv&#39;vc.16.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.86" steps="673552"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="build_pps_bv&#39;vc.16.0.1.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="build_pps_bv&#39;vc.16.0.1.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
       <goal name="build_pps_bv&#39;vc.16.0.1.1.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="build_pps_bv&#39;vc.16.0.1.1.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
         <goal name="build_pps_bv&#39;vc.16.0.1.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="build_pps_bv&#39;vc.16.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="build_pps_bv&#39;vc.16.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.32" steps="767387"/></proof>
           </goal>
           <goal name="build_pps_bv&#39;vc.16.0.1.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="build_pps_bv&#39;vc.16.0.1.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.68" steps="709267"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="build_pps_bv&#39;vc.16.0.1.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.88" steps="673749"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="build_pps_bv&#39;vc.16.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="build_pps_bv&#39;vc.16.0.1.1.0.0.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.47" steps="709267"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="build_pps_bv&#39;vc.16.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
          <goal name="build_pps_bv&#39;vc.16.0.1.1.0.0.0.2.0" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.89" steps="673601"/></proof>
          </goal>
          <goal name="build_pps_bv&#39;vc.16.0.1.1.0.0.0.2.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="build_pps_bv&#39;vc.16.0.1.1.0.0.0.2.1.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.53" steps="709267"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="build_pps_bv&#39;vc.16.0.1.1.0.0.0.2.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.88" steps="673749"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="build_pps_bv&#39;vc.16.0.1.1.0.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="build_pps_bv&#39;vc.16.0.1.1.0.1.0" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.43" steps="709267"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="build_pps_bv&#39;vc.16.0.1.1.0.2" expl="rewrite premises" proved="true">
       <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
        <goal name="build_pps_bv&#39;vc.16.0.1.1.0.2.0" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.86" steps="673601"/></proof>
        </goal>
        <goal name="build_pps_bv&#39;vc.16.0.1.1.0.2.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="build_pps_bv&#39;vc.16.0.1.1.0.2.1.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.42" steps="709267"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="build_pps_bv&#39;vc.16.0.1.1.0.2.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.87" steps="673749"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="build_pps_bv&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.98" steps="672934"/></proof>
  </goal>
  <goal name="build_pps_bv&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.95" steps="672937"/></proof>
  </goal>
  <goal name="build_pps_bv&#39;vc.19" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures3">
   <goal name="build_pps_bv&#39;vc.19.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(forall i. 0&lt;=i &lt; 2 -&gt; mod i 2 = i)">
    <goal name="build_pps_bv&#39;vc.19.0.0" expl="asserted formula" proved="true">
    <proof prover="8"><result status="valid" time="1.61" steps="709048"/></proof>
    </goal>
    <goal name="build_pps_bv&#39;vc.19.0.1" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="h">
     <goal name="build_pps_bv&#39;vc.19.0.1.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="build_pps_bv&#39;vc.19.0.1.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(make_bv (fun (i1:int) -&gt; mod (getbv x @ i1) 2) w)" arg2="x">
       <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="(make_bv (fun (i1:int) -&gt; mod (getbv y @ i1) 2) r)" arg2="y">
        <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
        <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="set_equal_bv">
         <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="0.93" steps="673233"/></proof>
          </goal>
          <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.58" steps="709081"/></proof>
            </goal>
            <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.58" steps="709082"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.00" steps="673226"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
           <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.1.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.85" steps="773143"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.1.0.1.0" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.59" steps="709580"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.1.0.2" expl="rewrite premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
            <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.1.0.2.0" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="0.93" steps="673275"/></proof>
            </goal>
            <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.1.0.2.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.1.0.2.1.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.1.0.2.1.0.0" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.57" steps="709307"/></proof>
              </goal>
              <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.1.0.2.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.55" steps="709308"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="build_pps_bv&#39;vc.19.0.1.0.0.0.1.1.0.2.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="0.94" steps="673417"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="set_equal_bv">
        <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="0.95" steps="673233"/></proof>
         </goal>
         <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.61" steps="709077"/></proof>
           </goal>
           <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.58" steps="709078"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.94" steps="673226"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
          <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.1.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.17" steps="771922"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.1.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.1.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.63" steps="709566"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.1.0.2" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.1.0.2.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.92" steps="673275"/></proof>
           </goal>
           <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.1.0.2.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.1.0.2.1.0" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.1.0.2.1.0.0" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.56" steps="709303"/></proof>
             </goal>
             <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.1.0.2.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.58" steps="709304"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="build_pps_bv&#39;vc.19.0.1.0.0.1.1.0.2.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.98" steps="673417"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="build_pps_bv&#39;vc.19.0.1.1" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="build_pps_bv&#39;vc.19.0.1.1.0" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.17" steps="772196"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="build_pps_bv&#39;vc.19.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.96" steps="673012"/></proof>
   </goal>
   <goal name="build_pps_bv&#39;vc.19.2" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.94" steps="673012"/></proof>
   </goal>
   <goal name="build_pps_bv&#39;vc.19.3" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.93" steps="673021"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="build_pps_bv&#39;vc.20" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures3">
   <goal name="build_pps_bv&#39;vc.20.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="build_pps_bv&#39;vc.20.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(make_bv (fun (i1:int) -&gt; mod (getbv x @ i1) 2) w)" arg2="x">
     <goal name="build_pps_bv&#39;vc.20.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(make_bv (fun (i1:int) -&gt; mod (getbv y @ i1) 2) r)" arg2="y">
      <goal name="build_pps_bv&#39;vc.20.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
      <goal name="build_pps_bv&#39;vc.20.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="set_equal_bv">
       <goal name="build_pps_bv&#39;vc.20.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="make_bv_length">
        <goal name="build_pps_bv&#39;vc.20.0.0.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.94" steps="673181"/></proof>
        </goal>
        <goal name="build_pps_bv&#39;vc.20.0.0.0.1.0.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="build_pps_bv&#39;vc.20.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="build_pps_bv&#39;vc.20.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.58" steps="709081"/></proof>
          </goal>
          <goal name="build_pps_bv&#39;vc.20.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.57" steps="709082"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="build_pps_bv&#39;vc.20.0.0.0.1.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.96" steps="673174"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="build_pps_bv&#39;vc.20.0.0.0.1.1" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="build_pps_bv&#39;vc.20.0.0.0.1.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
         <goal name="build_pps_bv&#39;vc.20.0.0.0.1.1.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="build_pps_bv&#39;vc.20.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.25" steps="772998"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="build_pps_bv&#39;vc.20.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="build_pps_bv&#39;vc.20.0.0.0.1.1.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.62" steps="709570"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="build_pps_bv&#39;vc.20.0.0.0.1.1.0.2" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
          <goal name="build_pps_bv&#39;vc.20.0.0.0.1.1.0.2.0" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.95" steps="673223"/></proof>
          </goal>
          <goal name="build_pps_bv&#39;vc.20.0.0.0.1.1.0.2.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="build_pps_bv&#39;vc.20.0.0.0.1.1.0.2.1.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="build_pps_bv&#39;vc.20.0.0.0.1.1.0.2.1.0.0" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.54" steps="709312"/></proof>
            </goal>
            <goal name="build_pps_bv&#39;vc.20.0.0.0.1.1.0.2.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.48" steps="709313"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="build_pps_bv&#39;vc.20.0.0.0.1.1.0.2.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.94" steps="673375"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="build_pps_bv&#39;vc.20.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="set_equal_bv">
      <goal name="build_pps_bv&#39;vc.20.0.0.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="make_bv_length">
       <goal name="build_pps_bv&#39;vc.20.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="0.97" steps="673181"/></proof>
       </goal>
       <goal name="build_pps_bv&#39;vc.20.0.0.1.0.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="build_pps_bv&#39;vc.20.0.0.1.0.1.0" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="build_pps_bv&#39;vc.20.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.59" steps="709077"/></proof>
         </goal>
         <goal name="build_pps_bv&#39;vc.20.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.40" steps="709078"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="build_pps_bv&#39;vc.20.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.82" steps="673174"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="build_pps_bv&#39;vc.20.0.0.1.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="build_pps_bv&#39;vc.20.0.0.1.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
        <goal name="build_pps_bv&#39;vc.20.0.0.1.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="build_pps_bv&#39;vc.20.0.0.1.1.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.13" steps="772985"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="build_pps_bv&#39;vc.20.0.0.1.1.0.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="build_pps_bv&#39;vc.20.0.0.1.1.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.34" steps="709556"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="build_pps_bv&#39;vc.20.0.0.1.1.0.2" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
         <goal name="build_pps_bv&#39;vc.20.0.0.1.1.0.2.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.80" steps="673223"/></proof>
         </goal>
         <goal name="build_pps_bv&#39;vc.20.0.0.1.1.0.2.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="build_pps_bv&#39;vc.20.0.0.1.1.0.2.1.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="build_pps_bv&#39;vc.20.0.0.1.1.0.2.1.0.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.38" steps="709308"/></proof>
           </goal>
           <goal name="build_pps_bv&#39;vc.20.0.0.1.1.0.2.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.44" steps="709309"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="build_pps_bv&#39;vc.20.0.0.1.1.0.2.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.98" steps="673375"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="build_pps_bv&#39;vc.20.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.03" steps="673174"/></proof>
   </goal>
   <goal name="build_pps_bv&#39;vc.20.2" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.98" steps="673174"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="h_basis_ket_bv&#39;vc" expl="VC for h_basis_ket_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="h_basis_ket_bv&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="h_basis_ket_bv&#39;vc.0.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="h_basis_ket_bv&#39;vc.0.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="pps&#39;invariant3">
     <goal name="h_basis_ket_bv&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="h_basis_ket_bv&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.40" steps="626654"/></proof>
      </goal>
      <goal name="h_basis_ket_bv&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.43" steps="626648"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="h_basis_ket_bv&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="h_basis_ket_bv&#39;vc.0.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.45" steps="626709"/></proof>
      </goal>
      <goal name="h_basis_ket_bv&#39;vc.0.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.49" steps="626703"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="h_basis_ket_bv&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="h_basis_ket_bv&#39;vc.0.0.0.2.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="0.60" steps="497721"/></proof>
      </goal>
      <goal name="h_basis_ket_bv&#39;vc.0.0.0.2.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="0.63" steps="497736"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="h_basis_ket_bv&#39;vc.0.1" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="h_basis_ket_bv&#39;vc.0.1.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="pps&#39;invariant2">
     <goal name="h_basis_ket_bv&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.56" steps="626770"/></proof>
     </goal>
     <goal name="h_basis_ket_bv&#39;vc.0.1.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.53" steps="626825"/></proof>
     </goal>
     <goal name="h_basis_ket_bv&#39;vc.0.1.0.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="0.63" steps="497730"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="h_basis_ket_bv&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.42" steps="601792"/></proof>
  </goal>
  <goal name="h_basis_ket_bv&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.65" steps="513417"/></proof>
  </goal>
  <goal name="h_basis_ket_bv&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.44" steps="607458"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="h_angle_bv&#39;vc" expl="VC for h_angle_bv" proved="true">
 <proof prover="8"><result status="valid" time="0.57" steps="427218"/></proof>
 </goal>
 <goal name="pps_ket_bound&#39;vc" expl="VC for pps_ket_bound" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_ket_bound&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="pps_ket_bound&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="pps_ket_bound&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="pps&#39;invariant3">
     <goal name="pps_ket_bound&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_ket_bound&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.42" steps="622767"/></proof>
      </goal>
      <goal name="pps_ket_bound&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.52" steps="622766"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_ket_bound&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_ket_bound&#39;vc.0.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.55" steps="622768"/></proof>
      </goal>
      <goal name="pps_ket_bound&#39;vc.0.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.41" steps="622767"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_ket_bound&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_ket_bound&#39;vc.0.0.0.2.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="0.66" steps="531204"/></proof>
      </goal>
      <goal name="pps_ket_bound&#39;vc.0.0.0.2.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="0.65" steps="531215"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pps_ket_bound&#39;vc.0.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="pps_ket_bound&#39;vc.0.1.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="pps&#39;invariant2">
     <goal name="pps_ket_bound&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.43" steps="622879"/></proof>
     </goal>
     <goal name="pps_ket_bound&#39;vc.0.1.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.41" steps="622880"/></proof>
     </goal>
     <goal name="pps_ket_bound&#39;vc.0.1.0.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="0.65" steps="531213"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="low_pps_ket_bound&#39;vc" expl="VC for low_pps_ket_bound" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="low_pps_ket_bound&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="low_pps_ket_bound&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="1.39" steps="600125"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="high_pps_ket_bound&#39;vc" expl="VC for high_pps_ket_bound" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="high_pps_ket_bound&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="high_pps_ket_bound&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="1.41" steps="600588"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_basis&#39;vc" expl="VC for pps_apply_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_basis&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="pps_apply_basis&#39;vc.0.0" expl="VC for pps_apply_basis" proved="true">
   <transf name="apply" proved="true" arg1="pps&#39;invariant3">
    <goal name="pps_apply_basis&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.51" steps="628223"/></proof>
    </goal>
    <goal name="pps_apply_basis&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.46" steps="628387"/></proof>
    </goal>
    <goal name="pps_apply_basis&#39;vc.0.0.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="0.65" steps="532500"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_basis&#39;vc.0.1" expl="VC for pps_apply_basis" proved="true">
   <transf name="apply" proved="true" arg1="pps&#39;invariant2">
    <goal name="pps_apply_basis&#39;vc.0.1.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.45" steps="628223"/></proof>
    </goal>
    <goal name="pps_apply_basis&#39;vc.0.1.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.48" steps="628387"/></proof>
    </goal>
    <goal name="pps_apply_basis&#39;vc.0.1.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="0.66" steps="532500"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_apply_basis&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.49" steps="602545"/></proof>
  </goal>
  <goal name="pps_apply_basis&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="703157"/></proof>
  </goal>
  <goal name="pps_apply_basis&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.02" steps="775661"/></proof>
  </goal>
  <goal name="pps_apply_basis&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.19" steps="814500"/></proof>
  </goal>
  <goal name="pps_apply_basis&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.33" steps="824677"/></proof>
  </goal>
  <goal name="pps_apply_basis&#39;vc.6" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="pps_apply_basis&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="pps_apply_basis&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="scalar_ket_value">
     <goal name="pps_apply_basis&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="get_ket_sum_l_value">
      <goal name="pps_apply_basis&#39;vc.6.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="pps_apply_basis&#39;vc.6.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="scalar_ket_value">
        <goal name="pps_apply_basis&#39;vc.6.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="mult_eq_t">
         <goal name="pps_apply_basis&#39;vc.6.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
         </transf>
         </goal>
         <goal name="pps_apply_basis&#39;vc.6.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="sum_eq">
          <goal name="pps_apply_basis&#39;vc.6.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="pps_apply_basis&#39;vc.6.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="pps_apply_basis&#39;vc.6.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="mult_eq_t">
             <goal name="pps_apply_basis&#39;vc.6.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
             </transf>
             </goal>
             <goal name="pps_apply_basis&#39;vc.6.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="get_ket_bv_to_ket_length">
              <goal name="pps_apply_basis&#39;vc.6.0.0.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="pps_apply_basis&#39;vc.6.0.0.0.0.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.32" steps="824642"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_basis&#39;vc.6.0.0.0.0.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
              <proof prover="0"><result status="valid" time="3.18"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_basis&#39;vc.6.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.31" steps="821018"/></proof>
      </goal>
      <goal name="pps_apply_basis&#39;vc.6.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.00" steps="714715"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_basis_decomp&#39;vc" expl="VC for pps_apply_basis_decomp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_basis_decomp&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equal_ket_l">
   <goal name="pps_apply_basis_decomp&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="exists" proved="true" arg1="(h_width h)">
    <goal name="pps_apply_basis_decomp&#39;vc.0.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="pps_apply_basis_decomp&#39;vc.0.0.0.0" proved="true">
     <proof prover="0"><result status="valid" time="0.57"/></proof>
     </goal>
     <goal name="pps_apply_basis_decomp&#39;vc.0.0.0.1" proved="true">
     <proof prover="8"><result status="valid" time="1.35" steps="564342"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_basis_decomp&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_apply_basis_decomp&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="get_ket_sum_l_value">
     <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="instantiate" proved="true" arg1="sum_null_but_maybe_one_elt" arg2="(fun (e1:bitvec) -&gt;
      get_ket
      ((pow_inv_sqrt_2 (h_range h)
        *. sum (n_bvs (h_range h))
           (fun (y:bitvec) -&gt;
             ang_exp ((h_angle h @ getbv x) @ getbv y)
             *. indic (h_basis_ket_bv h x y) e1))
       *.. ket (h_width h) (bv_to_int e1))
      i),(n_bvs (h_width h)),(int_to_bv  i (h_width h))">
        <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Hinst">
         <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="scalar_ket_value">
           <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;spec">
            <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="mult_assoc1">
             <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="mult_eq_t">
              <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="0.62" steps="502003"/></proof>
              </goal>
              <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="goal_comm">
               <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="mult_one_t">
                <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="sum_eq">
                 <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;def">
                    <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="mult_eq_t">
                     <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="0.80" steps="583775"/></proof>
                     </goal>
                     <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="get_indic">
                      <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="get_indic">
                       <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                       <transf name="eliminate_if" proved="true" >
                        <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="0.86" steps="689265"/></proof>
                         </goal>
                         <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="H1" arg2="in" arg3="H">
                          <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv" arg2="in" arg3="H">
                           <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
                           <proof prover="8"><result status="valid" time="0.87" steps="689262"/></proof>
                           </goal>
                           <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                           <proof prover="8"><result status="valid" time="1.96" steps="794552"/></proof>
                           </goal>
                           <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                           <transf name="replace" proved="true" arg1="(ket_length (pps_apply_basis h x1))" arg2="(h_width h)" arg3="in" arg4="H3">
                            <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
                            <proof prover="8"><result status="valid" time="0.88" steps="689269"/></proof>
                            </goal>
                            <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.0.2.1" expl="equality hypothesis" proved="true">
                            <transf name="assert" proved="true" arg1="(is_a_ket_l (pps_apply_basis h x1)  (h_width h))">
                             <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.0.2.1.0" expl="asserted formula" proved="true">
                             <proof prover="8"><result status="valid" time="1.51" steps="728079"/></proof>
                             </goal>
                             <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.0.2.1.1" expl="equality hypothesis" proved="true">
                             <proof prover="8"><result status="valid" time="1.51" steps="728184"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                         <transf name="replace" proved="true" arg1="i" arg2="(bv_to_int (make_bv ((h_basis_ket h @ getbv x1) @ getbv x) (h_width h)))" arg3="in" arg4="H1">
                          <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2.0" expl="apply premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="int_to_bv_to_int_" arg2="in" arg3="H1">
                           <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2.0.0" expl="apply premises" proved="true">
                           <proof prover="8"><result status="valid" time="0.95" steps="689254"/></proof>
                           </goal>
                           <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2.0.1" expl="rewrite premises" proved="true">
                           <proof prover="8"><result status="valid" time="2.00" steps="794835"/></proof>
                           </goal>
                           <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2.0.2" expl="rewrite premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="make_bv_length">
                            <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2.0.2.0" expl="rewrite premises" proved="true">
                            <proof prover="8"><result status="valid" time="0.90" steps="689276"/></proof>
                            </goal>
                            <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2.0.2.1" expl="rewrite premises" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2.0.2.1.0" expl="rewrite premises" proved="true">
                             <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                              <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2.0.2.1.0.0" expl="apply premises" proved="true">
                              <proof prover="8"><result status="valid" time="1.96" steps="796948"/></proof>
                              </goal>
                              <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2.0.2.1.0.1" expl="apply premises" proved="true">
                              <proof prover="8"><result status="valid" time="2.01" steps="797105"/></proof>
                              </goal>
                              <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2.0.2.1.0.2" expl="apply premises" proved="true">
                              <proof prover="8"><result status="valid" time="0.89" steps="689312"/></proof>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2.0.2.1.1" expl="rewrite premises" proved="true">
                             <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                              <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2.0.2.1.1.0" expl="apply premises" proved="true">
                              <proof prover="8"><result status="valid" time="1.90" steps="796948"/></proof>
                              </goal>
                              <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2.0.2.1.1.1" expl="apply premises" proved="true">
                              <proof prover="8"><result status="valid" time="1.96" steps="797105"/></proof>
                              </goal>
                              <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2.0.2.1.1.2" expl="apply premises" proved="true">
                              <proof prover="8"><result status="valid" time="0.84" steps="689312"/></proof>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2.0.2.2" expl="rewrite premises" proved="true">
                            <proof prover="8"><result status="valid" time="1.99" steps="794835"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2.1" expl="equality hypothesis" proved="true">
                          <proof prover="8"><result status="valid" time="0.94" steps="689278"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="0.96" steps="689273"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="8"><result status="valid" time="0.79" steps="583777"/></proof>
                    </goal>
                    <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.60" steps="686337"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="get__ket_value">
                 <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
                  <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.37" steps="597276"/></proof>
                  </goal>
                  <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.35" steps="596412"/></proof>
                  </goal>
                  <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.1.0.2" expl="rewrite premises" proved="true">
                  <transf name="replace" proved="true" arg1="(ket_length (pps_apply_basis h x))" arg2="(h_width h)" arg3="in" arg4="H">
                   <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.1.0.2.0" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="0.61" steps="502003"/></proof>
                   </goal>
                   <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.1.0.2.1" expl="equality hypothesis" proved="true">
                   <proof prover="8"><result status="valid" time="2.62" steps="615348"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.31" steps="596412"/></proof>
                 </goal>
                 <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.1.2" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.38" steps="598117"/></proof>
                 </goal>
                 <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.1.3" expl="rewrite premises" proved="true">
                 <transf name="replace" proved="true" arg1="(ket_length (pps_apply_basis h x))" arg2="(h_width h)" arg3="in" arg4="H">
                  <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.1.3.0" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="0.65" steps="502003"/></proof>
                  </goal>
                  <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1.0.1.3.1" expl="equality hypothesis" proved="true">
                  <proof prover="8"><result status="valid" time="2.77" steps="615348"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="0.70" steps="502005"/></proof>
            </goal>
            <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <transf name="replace" proved="true" arg1="(ket_length (pps_apply_basis h x))" arg2="(h_width h)" arg3="in" arg4="H">
             <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="0.62" steps="502003"/></proof>
             </goal>
             <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.0.0.0.2.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="2.58" steps="615348"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="2.54" steps="698246"/></proof>
         </goal>
         <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
           <transf name="rewrite" proved="true" arg1="scalar_ket_value">
            <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="mult_zero_t">
             <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="get__ket_value">
              <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="case" proved="true" arg1="(i =(bv_to_int k))">
               <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises (true case)" proved="true">
               <proof prover="8"><result status="valid" time="1.84" steps="686232"/></proof>
               </goal>
               <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.2.0.0.0.0.0.1" expl="apply premises (false case)" proved="true">
               <proof prover="8"><result status="valid" time="1.57" steps="685320"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.64" steps="683877"/></proof>
              </goal>
              <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.2.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.61" steps="685800"/></proof>
              </goal>
              <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.2.0.0.0.0.3" expl="rewrite premises" proved="true">
              <transf name="replace" proved="true" arg1="(ket_length (pps_apply_basis h x))" arg2="(h_width h)" arg3="in" arg4="H2">
               <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.2.0.0.0.0.3.0" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="0.70" steps="583790"/></proof>
               </goal>
               <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.0.0.0.0.2.0.0.0.0.3.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="3.06" steps="701921"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.18" steps="513432"/></proof>
     </goal>
     <goal name="pps_apply_basis_decomp&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="5.75" steps="3666890"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_basis_ket_l&#39;vc" expl="VC for pps_apply_basis_ket_l" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_basis_ket_l&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.54"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_basis_ket_length&#39;vc" expl="VC for pps_apply_basis_ket_length" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_basis_ket_length&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="pps_apply_basis_ket_length&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="ket_l_to_ket">
    <goal name="pps_apply_basis_ket_length&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.10" steps="535074"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_basis_bv&#39;vc" expl="VC for pps_apply_basis_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_basis_bv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
   <goal name="pps_apply_basis_bv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="scalar_eq">
    <goal name="pps_apply_basis_bv&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="ket_sum_eq">
     <goal name="pps_apply_basis_bv&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.38" steps="512548"/></proof>
     </goal>
     <goal name="pps_apply_basis_bv&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="0.55" steps="430189"/></proof>
     </goal>
     <goal name="pps_apply_basis_bv&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_apply_basis_bv&#39;vc.0.0.0.2.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="pps_apply_basis_bv&#39;vc.0.0.0.2.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="scalar_eq_gen">
        <goal name="pps_apply_basis_bv&#39;vc.0.0.0.2.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.67" steps="681293"/></proof>
        </goal>
        <goal name="pps_apply_basis_bv&#39;vc.0.0.0.2.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.62" steps="670500"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_basis_bv&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.53" steps="430191"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_basis_value&#39;vc" expl="VC for pps_apply_basis_value" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_basis_value&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="pps_apply_basis_value&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;spec">
    <goal name="pps_apply_basis_value&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="mult_eq_t">
     <goal name="pps_apply_basis_value&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="0.63" steps="501925"/></proof>
     </goal>
     <goal name="pps_apply_basis_value&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="sum_eq">
      <goal name="pps_apply_basis_value&#39;vc.0.0.0.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_apply_basis_value&#39;vc.0.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_apply_basis_value&#39;vc.0.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="mult_eq_t">
         <goal name="pps_apply_basis_value&#39;vc.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.84" steps="774250"/></proof>
         </goal>
         <goal name="pps_apply_basis_value&#39;vc.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="get_indic">
          <goal name="pps_apply_basis_value&#39;vc.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="get_indic">
           <goal name="pps_apply_basis_value&#39;vc.0.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="eliminate_if" proved="true" >
            <goal name="pps_apply_basis_value&#39;vc.0.0.0.1.0.0.0.1.0.0.0" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="pps_apply_basis_value&#39;vc.0.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.90" steps="689222"/></proof>
             </goal>
             <goal name="pps_apply_basis_value&#39;vc.0.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.92" steps="792030"/></proof>
             </goal>
             <goal name="pps_apply_basis_value&#39;vc.0.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.87" steps="790975"/></proof>
             </goal>
             <goal name="pps_apply_basis_value&#39;vc.0.0.0.1.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.91" steps="689230"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_apply_basis_value&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.69" steps="501927"/></proof>
    </goal>
    <goal name="pps_apply_basis_value&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.71" steps="501936"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_basis_value_filter&#39;vc" expl="VC for pps_apply_basis_value_filter" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_basis_value_filter&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_apply_basis_value">
   <goal name="pps_apply_basis_value_filter&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="mult_eq_t">
    <goal name="pps_apply_basis_value_filter&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="0.60" steps="430838"/></proof>
    </goal>
    <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="instantiate" proved="true" arg1="sum_partition" arg2="(my_filter (n_bvs (h_range h))
     (fun (y:bitvec) -&gt; h_basis_ket_bv h x y = int_to_bv k (h_width h))),(my_filter (n_bvs (h_range h))
     (fun (y:bitvec) -&gt; h_basis_ket_bv h x y &lt;&gt; int_to_bv k (h_width h))),(fun (y:bitvec) -&gt;
    ang_exp (h_angle_bv h x y)
    *. indic (h_basis_ket_bv h x y) (int_to_bv k (h_width h)))">
     <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(sum (n_bvs (h_range h))
  (fun (y:bitvec) -&gt;
    ang_exp (h_angle_bv h x y)
    *. indic (h_basis_ket_bv h x y) (int_to_bv k (h_width h))))" arg2="(sum 
 (union
   (my_filter (n_bvs (h_range h))
    (fun (y:bitvec) -&gt; h_basis_ket_bv h x y = int_to_bv k (h_width h)))
   (my_filter (n_bvs (h_range h))
    (fun (y:bitvec) -&gt; not h_basis_ket_bv h x y = int_to_bv k (h_width h)))) (fun (y:bitvec) -&gt;
    ang_exp (h_angle_bv h x y)
    *. indic (h_basis_ket_bv h x y) (int_to_bv k (h_width h))))">
      <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="Hinst">
       <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="add_zero_t">
        <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="sum_eq">
         <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="mult_one_t">
            <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="h_angle_bv&#39;def">
             <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.66" steps="524744"/></proof>
             </goal>
             <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="0.65" steps="524746"/></proof>
             </goal>
             <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="0.71"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.48" steps="622623"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="sum_null_">
         <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="mult_zero_t">
            <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.50" steps="622597"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.1" expl="rewrite premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
         <transf name="assert" proved="true" arg1="(h_basis_ket_bv h x e  = int_to_bv k (h_width h))">
          <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.1.0.0.0" expl="asserted formula" proved="true">
          <proof prover="8"><result status="valid" time="1.79" steps="714571"/></proof>
          </goal>
          <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.64" steps="714947"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(union
     (my_filter (n_bvs (h_range h))
      (fun (y:bitvec) -&gt; h_basis_ket_bv h x y = int_to_bv k (h_width h)))
     (my_filter (n_bvs (h_range h))
      (fun (y:bitvec) -&gt; not h_basis_ket_bv h x y = int_to_bv k (h_width h))))" arg2="(n_bvs (h_range h))">
       <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
       <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="set_equal">
        <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.1.1.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
         <transf name="case" proved="true" arg1="( h_basis_ket_bv h x e = int_to_bv k (h_width h))">
          <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.1.1.0.0.0" expl="apply premises (true case)" proved="true">
          <proof prover="8"><result status="valid" time="2.70" steps="644063"/></proof>
          </goal>
          <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.1.1.0.0.1" expl="apply premises (false case)" proved="true">
          <proof prover="8"><result status="valid" time="2.73" steps="644063"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.1.1.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.1.1.1.0" expl="apply premises" proved="true">
         <transf name="case" proved="true" arg1="(h_basis_ket_bv h x e = int_to_bv k (h_width h))">
          <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.1.1.1.0.0" expl="apply premises (true case)" proved="true">
          <transf name="assert" proved="true" arg1="(mem e (my_filter (n_bvs (h_range h1))
    (fun (y:bitvec) -&gt; h_basis_ket_bv h1 x y = int_to_bv k (h_width h1))))">
           <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.1.1.1.0.0.0" expl="asserted formula" proved="true">
           <proof prover="8"><result status="valid" time="1.77" steps="620744"/></proof>
           </goal>
           <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.1.1.1.0.0.1" expl="apply premises (true case)" proved="true">
           <proof prover="0"><result status="valid" time="0.59"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.1.1.1.0.1" expl="apply premises (false case)" proved="true">
          <transf name="assert" proved="true" arg1="(mem e (my_filter (n_bvs (h_range h1))
    (fun (y:bitvec) -&gt; not h_basis_ket_bv h1 x y = int_to_bv k (h_width h1))))">
           <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.1.1.1.0.1.0" expl="asserted formula" proved="true">
           <proof prover="8"><result status="valid" time="1.49" steps="620755"/></proof>
           </goal>
           <goal name="pps_apply_basis_value_filter&#39;vc.0.0.1.0.1.1.1.0.1.1" expl="apply premises (false case)" proved="true">
           <proof prover="8"><result status="valid" time="1.54" steps="626588"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_basis_value_filter&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.52" steps="430840"/></proof>
   </goal>
   <goal name="pps_apply_basis_value_filter&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.67" steps="430849"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_basis_value_filter_gen&#39;vc" expl="VC for pps_apply_basis_value_filter_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_basis_value_filter_gen&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="pps_apply_basis_value_filter">
   <goal name="pps_apply_basis_value_filter_gen&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="0.58" steps="431427"/></proof>
   </goal>
   <goal name="pps_apply_basis_value_filter_gen&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="0.54" steps="431436"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_basis_ht&#39;vc" expl="VC for pps_apply_basis_ht" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_basis_ht&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.68" steps="431959"/></proof>
  </goal>
  <goal name="pps_apply_basis_ht&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.80" steps="513600"/></proof>
  </goal>
  <goal name="pps_apply_basis_ht&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.63" steps="509479"/></proof>
  </goal>
  <goal name="pps_apply_basis_ht&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.19" steps="540833"/></proof>
  </goal>
  <goal name="pps_apply_basis_ht&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.21" steps="540896"/></proof>
  </goal>
  <goal name="pps_apply_basis_ht&#39;vc.5" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(ket_sum_l (n_bvs s)
    (fun (z:bitvec) -&gt;
      ket_sum_l (n_bvs (h_width h - s))
      (fun (t:bitvec) -&gt;
        get_ket (pps_apply_basis h x) (bv_to_int (concat z t))
        *.. bv_to_ket (concat z t))
      (h_width h))
    (h_width h))" arg2="(ket_sum_l (n_bvs s)
  (fun (bvy:bitvec) -&gt;
    ket_sum_l (n_bvs (h_width h - s))
    (fun (bvx:bitvec) -&gt;
      ((fun (z:bitvec) (t:bitvec) -&gt;
         get_ket (pps_apply_basis h x) (bv_to_int (concat z t))
         *.. bv_to_ket (concat z t))
       @ bvy)
      @ bvx)
    (h_width h))
  (h_width h))">
   <goal name="pps_apply_basis_ht&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="pps_apply_basis_ht&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(ket_sum_l (n_bvs ((h_width h - s) + s))
    (fun (bv:bitvec) -&gt;
      ((fun (z:bitvec) (t:bitvec) -&gt;
         get_ket (pps_apply_basis h x) (bv_to_int (concat z t))
         *.. bv_to_ket (concat z t))
       @ hpart bv s)
      @ tpart bv s)
    (h_width h))" arg2="(ket_sum_l (n_bvs (h_width h))
    (fun (z:bitvec) -&gt;
      (pow_inv_sqrt_2 (h_range h)
       *. sum (n_bvs (h_range h))
          (fun (y:bitvec) -&gt;
            ang_exp ((h_angle h @ getbv x) @ getbv y)
            *. indic (h_basis_ket_bv h x y) z))
      *.. ket (h_width h) (bv_to_int z))
    (h_width h))">
     <goal name="pps_apply_basis_ht&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="Ensures1">
     </transf>
     </goal>
     <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
      <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.19" steps="541197"/></proof>
      </goal>
      <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="0.76" steps="509778"/></proof>
      </goal>
      <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="0.80" steps="509769"/></proof>
      </goal>
      <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="pps_apply_basis_value">
         <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="scalar_eq_gen">
           <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(concat (hpart a s) (tpart a s))" arg2="a">
            <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.83" steps="648462"/></proof>
            </goal>
            <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="0"><result status="valid" time="0.63"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="mult_eq_t">
            <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="0.65" steps="558516"/></proof>
            </goal>
            <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.0.0.1.1" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="sum_eq_gen">
             <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.0.0.1.1.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.83" steps="558516"/></proof>
             </goal>
             <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.0.0.1.1.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.0.0.1.1.1.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.0.0.1.1.1.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(concat (hpart a s) (tpart a s))" arg2="a">
                <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.0.0.1.1.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="0.89"/></proof>
                </goal>
                <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.0.0.1.1.1.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="0"><result status="valid" time="0.74"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.85" steps="558518"/></proof>
         </goal>
         <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.2" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.2.0" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.76" steps="649080"/></proof>
          </goal>
          <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.2.1" expl="rewrite premises" proved="true">
          <transf name="replace" proved="true" arg1="(concat (hpart a s) (tpart a s))" arg2="a">
           <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.2.1.0" expl="rewrite premises" proved="true">
           <proof prover="7"><result status="valid" time="1.17" steps="5988630"/></proof>
           </goal>
           <goal name="pps_apply_basis_ht&#39;vc.5.0.0.1.3.0.0.2.1.1" expl="equality hypothesis" proved="true">
           <proof prover="0"><result status="valid" time="0.77"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_basis_ht&#39;vc.5.1" expl="equality hypothesis" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply&#39;vc" expl="VC for pps_apply" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.56" steps="432356"/></proof>
  </goal>
  <goal name="pps_apply&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.49" steps="562893"/></proof>
  </goal>
  <goal name="pps_apply&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.60" steps="632323"/></proof>
  </goal>
  <goal name="pps_apply&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.84" steps="578299"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="get_pps_apply&#39;vc" expl="VC for get_pps_apply" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_pps_apply&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_apply&#39;def">
   <goal name="get_pps_apply&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
    <goal name="get_pps_apply&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.48" steps="513677"/></proof>
    </goal>
    <goal name="get_pps_apply&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="get_pps_apply&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="get_pps_apply&#39;vc.0.0.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="0.53" steps="432606"/></proof>
    </goal>
    <goal name="get_pps_apply&#39;vc.0.0.3" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="get_pps_apply&#39;vc.0.0.3.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.40" steps="592227"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="get_pps_apply&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.56" steps="432608"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rewrite_pps_apply_basis&#39;vc" expl="VC for rewrite_pps_apply_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rewrite_pps_apply_basis&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="get_pps_apply">
   <goal name="rewrite_pps_apply_basis&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(0=(h_width h))">
    <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0" expl="true case (postcondition)" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l_cardone">
     <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.0.0" expl="true case (postcondition)" proved="true">
      <transf name="replace" proved="true" arg1="(choose (n_bvs (h_width h1)))" arg2="(ket_to_bv x)">
       <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
       <transf name="replace" proved="true" arg1="(get_ket x (bv_to_int (ket_to_bv x)))" arg2="c_one">
        <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
        <proof prover="8"><result status="valid" time="0.94" steps="462830"/></proof>
        </goal>
        <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_to_bv&#39;def">
         <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
         <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
          <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
          <proof prover="0"><result status="valid" time="0.55"/></proof>
          </goal>
          <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.25" steps="514238"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.0.0.0.1.0.2.0" proved="true">
           <transf name="rewrite" proved="true" arg1="ket_to_int&#39;spec1">
            <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.0.0.0.1.0.2.0.0" proved="true">
            <proof prover="8"><result status="valid" time="1.68" steps="594195"/></proof>
            </goal>
            <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.0.0.0.1.0.2.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="0.76" steps="504321"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.0.0.0.1.0.2.1" proved="true">
           <proof prover="8"><result status="valid" time="1.68" steps="594737"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.52" steps="432820"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="assert" proved="true" arg1="(mem (ket_to_bv x) (n_bvs (h_width h1)))">
        <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
        <proof prover="8"><result status="valid" time="1.73" steps="587543"/></proof>
        </goal>
        <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="1.30" steps="525908"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.64" steps="443178"/></proof>
     </goal>
     <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.09" steps="502060"/></proof>
     </goal>
     <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="rewrite_pps_apply_basis&#39;vc.0.0.0.3.0" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.70" steps="968972"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1" expl="false case (postcondition)" proved="true">
    <transf name="instantiate" proved="true" arg1="ket_sum_l_null_but_maybe_one_elt" arg2="(fun (y:bitvec) -&gt; get_ket x (bv_to_int y) *.. pps_apply_basis h1 y),(n_bvs (h_width h1)),(ket_to_bv x),(h_width h1)
">
     <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0" expl="false case (postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="Hinst">
      <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0" expl="false case (postcondition)" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
       <transf name="replace" proved="true" arg1="(get_ket x (bv_to_int (ket_to_bv x)))" arg2="c_one">
        <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0.0" expl="false case (postcondition)" proved="true">
        <transf name="apply" proved="true" arg1="set_equal_ket_l">
         <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="exists" proved="true" arg1="(h_width h1)">
          <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0.0.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0.0.0.0.0" proved="true">
           <proof prover="8"><result status="valid" time="1.49" steps="558425"/></proof>
           </goal>
           <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0.0.0.0.1" proved="true">
           <proof prover="8"><result status="valid" time="1.52" steps="518647"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="2.42" steps="5268411"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_to_bv&#39;def">
         <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
         <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
          <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
          <proof prover="0"><result status="valid" time="0.57"/></proof>
          </goal>
          <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.36" steps="518002"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0.1.0.2" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0.1.0.2.0" proved="true">
           <transf name="rewrite" proved="true" arg1="ket_to_int&#39;spec1">
            <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0.1.0.2.0.0" proved="true">
            <proof prover="8"><result status="valid" time="1.54" steps="598794"/></proof>
            </goal>
            <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0.1.0.2.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="0.72" steps="505047"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0.1.0.2.1" proved="true">
           <proof prover="8"><result status="valid" time="1.61" steps="599140"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.63" steps="433546"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.37" steps="517664"/></proof>
      </goal>
      <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.2" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="n_bvs_card">
       <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.2.0" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.38" steps="519136"/></proof>
       </goal>
       <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.2.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.44" steps="517664"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.68" steps="592115"/></proof>
      </goal>
      <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="get_ket_scalar">
         <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="zero_mult_t">
          <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="x" arg2="(ket (h_width h1)(ket_to_int x))">
           <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="get__ket_value">
            <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="case" proved="true" arg1="( (bv_to_int e&#39;) = (ket_to_int x))">
             <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.0.0" expl="apply premises (true case)" proved="true">
             <transf name="assert" proved="true" arg1="( e&#39; = ket_to_bv x)">
              <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
              <transf name="replace" proved="true" arg1="e&#39;" arg2="(int_to_bv (bv_to_int e&#39;) (h_width h3))">
               <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
               <proof prover="8"><result status="valid" time="1.65" steps="595814"/></proof>
               </goal>
               <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
               <transf name="rewrite" proved="true" arg1="int_to_bv_to_int_gen">
                <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
                <proof prover="8"><result status="valid" time="0.70" steps="503141"/></proof>
                </goal>
                <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="1.64" steps="596711"/></proof>
                </goal>
                <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="1.63" steps="596465"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.0.0.1" expl="apply premises (true case)" proved="true">
              <proof prover="8"><result status="valid" time="0.71" steps="503998"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.0.1" expl="apply premises (false case)" proved="true">
             <proof prover="8"><result status="valid" time="1.57" steps="596503"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.53" steps="594572"/></proof>
            </goal>
            <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.2.0" proved="true">
             <proof prover="8"><result status="valid" time="1.79" steps="686245"/></proof>
             </goal>
             <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.2.1" proved="true">
             <transf name="replace" proved="true" arg1="(h_width h1)" arg2="(ket_length x)">
              <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.2.1.0" proved="true">
              <proof prover="8"><result status="valid" time="1.80" steps="686807"/></proof>
              </goal>
              <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.2.1.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="1.40" steps="623966"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.3" expl="rewrite premises" proved="true">
            <transf name="replace" proved="true" arg1="(h_width h1)" arg2="(length e&#39;)">
             <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.55" steps="595001"/></proof>
              </goal>
              <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.3.0.1" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.62" steps="597393"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.0.3.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="1.61" steps="596334"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="rewrite_pps_apply_basis&#39;vc.0.0.1.0.4.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="1.59" steps="595358"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="rewrite_pps_apply_basis&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.63" steps="432809"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rewrite_pps_apply_basis_&#39;vc" expl="VC for rewrite_pps_apply_basis_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rewrite_pps_apply_basis_&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.63" steps="432896"/></proof>
  </goal>
  <goal name="rewrite_pps_apply_basis_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.63" steps="432899"/></proof>
  </goal>
  <goal name="rewrite_pps_apply_basis_&#39;vc.2" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
   <goal name="rewrite_pps_apply_basis_&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
    <goal name="rewrite_pps_apply_basis_&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
    <goal name="rewrite_pps_apply_basis_&#39;vc.2.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.46" steps="516281"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="rewrite_pps_apply_basis_&#39;vc.2.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.62" steps="432925"/></proof>
   </goal>
   <goal name="rewrite_pps_apply_basis_&#39;vc.2.2" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.65" steps="432925"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rewrite_pps_apply_basis_rev&#39;vc" expl="VC for rewrite_pps_apply_basis_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rewrite_pps_apply_basis_rev&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="( pps_apply_basis h x)" arg2="( pps_apply_basis h (ket_to_bv(bv_to_ket x)))">
   <goal name="rewrite_pps_apply_basis_rev&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
    <goal name="rewrite_pps_apply_basis_rev&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
    <goal name="rewrite_pps_apply_basis_rev&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.09" steps="463178"/></proof>
    </goal>
    <goal name="rewrite_pps_apply_basis_rev&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.09" steps="463162"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="rewrite_pps_apply_basis_rev&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="8"><result status="valid" time="1.16" steps="465914"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_decomp&#39;vc" expl="VC for pps_apply_decomp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_decomp&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="get_pps_apply">
   <goal name="pps_apply_decomp&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_equal_ket_l">
    <goal name="pps_apply_decomp&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="exists" proved="true" arg1="(h_width h)">
     <goal name="pps_apply_decomp&#39;vc.0.0.0.0" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_apply_decomp&#39;vc.0.0.0.0.0" proved="true">
      <proof prover="8"><result status="valid" time="1.49" steps="566611"/></proof>
      </goal>
      <goal name="pps_apply_decomp&#39;vc.0.0.0.0.1" proved="true">
      <proof prover="8"><result status="valid" time="1.46" steps="566615"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_apply_decomp&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="pps_apply_decomp&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="get_ket_sum_l_value">
      <goal name="pps_apply_decomp&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="get_ket_sum_l_value">
       <goal name="pps_apply_decomp&#39;vc.0.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="sum_eq">
        <goal name="pps_apply_decomp&#39;vc.0.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="pps_apply_decomp&#39;vc.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_apply_decomp&#39;vc.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
           <goal name="pps_apply_decomp&#39;vc.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
            <goal name="pps_apply_decomp&#39;vc.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="0.76" steps="534016"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="pps_apply_decomp&#39;vc.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.51" steps="622701"/></proof>
           </goal>
           <goal name="pps_apply_decomp&#39;vc.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.20" steps="566851"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_decomp&#39;vc.0.0.1.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.37" steps="568246"/></proof>
       </goal>
       <goal name="pps_apply_decomp&#39;vc.0.0.1.0.0.2" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="pps_apply_decomp&#39;vc.0.0.1.0.0.2.0" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.66" steps="482790"/></proof>
        </goal>
        <goal name="pps_apply_decomp&#39;vc.0.0.1.0.0.2.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.38" steps="582587"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_decomp&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.31" steps="568246"/></proof>
      </goal>
      <goal name="pps_apply_decomp&#39;vc.0.0.1.0.2" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_apply_decomp&#39;vc.0.0.1.0.2.0" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.58" steps="482790"/></proof>
       </goal>
       <goal name="pps_apply_decomp&#39;vc.0.0.1.0.2.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.44" steps="582587"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_decomp&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.52" steps="433270"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_scal&#39;vc" expl="VC for pps_apply_scal" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_scal&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="get_pps_apply">
   <goal name="pps_apply_scal&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="get_pps_apply">
    <goal name="pps_apply_scal&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_scalar_rev_l">
     <goal name="pps_apply_scal&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="ket_sum_eq">
      <goal name="pps_apply_scal&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.22" steps="514628"/></proof>
      </goal>
      <goal name="pps_apply_scal&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="0.53" steps="433466"/></proof>
      </goal>
      <goal name="pps_apply_scal&#39;vc.0.0.0.0.2" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="pps_apply_scal&#39;vc.0.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="pps_apply_scal&#39;vc.0.0.0.0.2.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.37" steps="593622"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_scal&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.16" steps="514628"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="pps_apply_scal&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.51" steps="433468"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_scal&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.87" steps="463445"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_add&#39;vc" expl="VC for pps_apply_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_add&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="get_pps_apply">
   <goal name="pps_apply_add&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="get_pps_apply">
    <goal name="pps_apply_add&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="get_pps_apply">
     <goal name="pps_apply_add&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Requires">
      <goal name="pps_apply_add&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ket_sum_comp_l_rev">
       <goal name="pps_apply_add&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq">
        <goal name="pps_apply_add&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.18" steps="515429"/></proof>
        </goal>
        <goal name="pps_apply_add&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.55" steps="433574"/></proof>
        </goal>
        <goal name="pps_apply_add&#39;vc.0.0.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="pps_apply_add&#39;vc.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_apply_add&#39;vc.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="add_ket_l_value">
           <goal name="pps_apply_add&#39;vc.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="1.41" steps="596516"/></proof>
           </goal>
           <goal name="pps_apply_add&#39;vc.0.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.38" steps="591225"/></proof>
           </goal>
           <goal name="pps_apply_add&#39;vc.0.0.0.0.0.0.2.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.43" steps="589352"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_add&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.25" steps="515429"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_add&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.53" steps="433576"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="pps_apply_add&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.54" steps="433576"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_add&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.24" steps="515748"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_sum&#39;vc" expl="VC for pps_apply_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_sum&#39;vc.0" expl="assertion" proved="true">
  <proof prover="8"><result status="valid" time="1.15" steps="579929"/></proof>
  </goal>
  <goal name="pps_apply_sum&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="633403"/></proof>
  </goal>
  <goal name="pps_apply_sum&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="636417"/></proof>
  </goal>
  <goal name="pps_apply_sum&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.21" steps="581545"/></proof>
  </goal>
  <goal name="pps_apply_sum&#39;vc.4" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="pps_apply_sum&#39;vc.4.0" expl="variant decrease" proved="true">
   <proof prover="8"><result status="valid" time="1.15" steps="584370"/></proof>
   </goal>
   <goal name="pps_apply_sum&#39;vc.4.1" expl="variant decrease" proved="true">
   <proof prover="8"><result status="valid" time="1.55" steps="640763"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_apply_sum&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="640742"/></proof>
  </goal>
  <goal name="pps_apply_sum&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="639991"/></proof>
  </goal>
  <goal name="pps_apply_sum&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.69" steps="551413"/></proof>
  </goal>
  <goal name="pps_apply_sum&#39;vc.8" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="pps_apply_sum&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ket_sum_l_cardone">
    <goal name="pps_apply_sum&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l_cardone">
     <goal name="pps_apply_sum&#39;vc.8.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="pps_apply_sum&#39;vc.8.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.48" steps="633399"/></proof>
     </goal>
     <goal name="pps_apply_sum&#39;vc.8.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.66" steps="546959"/></proof>
     </goal>
     <goal name="pps_apply_sum&#39;vc.8.0.0.3" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="pps_apply_sum&#39;vc.8.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="Requires">
       <goal name="pps_apply_sum&#39;vc.8.0.0.3.0.0" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.61" steps="635202"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_apply_sum&#39;vc.8.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.60" steps="633399"/></proof>
    </goal>
    <goal name="pps_apply_sum&#39;vc.8.0.2" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.74" steps="546959"/></proof>
    </goal>
    <goal name="pps_apply_sum&#39;vc.8.0.3" expl="rewrite premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Requires">
     <goal name="pps_apply_sum&#39;vc.8.0.3.0" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.70" steps="635016"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_sum&#39;vc.8.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="pps_apply_sum&#39;vc.8.1.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="pps_apply_sum&#39;vc.8.1.0.0" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="ket_sum_l_plus_one" arg2="(remove (choose s) s),(choose s),(fun (e1:a) -&gt; pps_apply h (f @ e1)),l">
      <goal name="pps_apply_sum&#39;vc.8.1.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="s" arg2="(add (choose s) (remove (choose s) s))">
       <goal name="pps_apply_sum&#39;vc.8.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="H1">
        <goal name="pps_apply_sum&#39;vc.8.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="pps_apply_add">
         <goal name="pps_apply_sum&#39;vc.8.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="Hinst">
          <goal name="pps_apply_sum&#39;vc.8.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="apply" proved="true" arg1="add_ket_l_eq">
           <goal name="pps_apply_sum&#39;vc.8.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="1.99" steps="743665"/></proof>
           </goal>
           <goal name="pps_apply_sum&#39;vc.8.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="H">
           </transf>
           </goal>
           <goal name="pps_apply_sum&#39;vc.8.1.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="1.58" steps="682678"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="pps_apply_sum&#39;vc.8.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.05" steps="743665"/></proof>
          </goal>
          <goal name="pps_apply_sum&#39;vc.8.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.03" steps="745769"/></proof>
          </goal>
          <goal name="pps_apply_sum&#39;vc.8.1.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.49" steps="682595"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="pps_apply_sum&#39;vc.8.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="2.03" steps="743516"/></proof>
         </goal>
         <goal name="pps_apply_sum&#39;vc.8.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.77" steps="744122"/></proof>
         </goal>
         <goal name="pps_apply_sum&#39;vc.8.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.90" steps="643728"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_sum&#39;vc.8.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="1.97" steps="744131"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_id&#39;vc" expl="VC for pps_id" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_id&#39;vc.0" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_id&#39;vc.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_id&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_id&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.70" steps="656963"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_id&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_id&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.53" steps="657532"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_id&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_id&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.80" steps="569929"/></proof>
  </goal>
  <goal name="pps_id&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.75" steps="569932"/></proof>
  </goal>
  <goal name="pps_id&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.27" steps="603381"/></proof>
  </goal>
  <goal name="pps_id&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.35" steps="603409"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_swap&#39;vc" expl="VC for pps_swap" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_swap&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.67" steps="510984"/></proof>
  </goal>
  <goal name="pps_swap&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.66" steps="510997"/></proof>
  </goal>
  <goal name="pps_swap&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_swap&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.23" steps="603200"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_swap&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_swap&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_swap&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.62" steps="662945"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_swap&#39;vc.5" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_swap&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.53" steps="663711"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_swap&#39;vc.6" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_swap&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.92" steps="570162"/></proof>
  </goal>
  <goal name="pps_swap&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.72" steps="570165"/></proof>
  </goal>
  <goal name="pps_swap&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.30" steps="603827"/></proof>
  </goal>
  <goal name="pps_swap&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.30" steps="603842"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_phase&#39;vc" expl="VC for pps_phase" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_phase&#39;vc.0" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_phase&#39;vc.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_phase&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_phase&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.63" steps="657987"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_phase&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_phase&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.82" steps="658566"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_phase&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_phase&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.70" steps="570498"/></proof>
  </goal>
  <goal name="pps_phase&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.90" steps="570501"/></proof>
  </goal>
  <goal name="pps_phase&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.48" steps="604053"/></proof>
  </goal>
  <goal name="pps_phase&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="604074"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_rz&#39;vc" expl="VC for pps_rz" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_rz&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.66" steps="570582"/></proof>
  </goal>
  <goal name="pps_rz&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.64" steps="570593"/></proof>
  </goal>
  <goal name="pps_rz&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="pps_rz&#39;vc.2.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="pps_rz&#39;vc.2.0.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="1.69" steps="658177"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_rz&#39;vc.2.1" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="pps_rz&#39;vc.2.1.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="1.71" steps="658171"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_rz&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_rz&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.65" steps="658812"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_rz&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_rz&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.69" steps="660885"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_rz&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.83" steps="570723"/></proof>
  </goal>
  <goal name="pps_rz&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.82" steps="570726"/></proof>
  </goal>
  <goal name="pps_rz&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.38" steps="604286"/></proof>
  </goal>
  <goal name="pps_rz&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.37" steps="604313"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_rx&#39;vc" expl="VC for pps_rx" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_rx&#39;vc.0" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_rx&#39;vc.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_rx&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_rx&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.71" steps="659258"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_rx&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_rx&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.72" steps="659881"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_rx&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_rx&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.64"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_rx&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.76" steps="571585"/></proof>
  </goal>
  <goal name="pps_rx&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.73" steps="571588"/></proof>
  </goal>
  <goal name="pps_rx&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.37" steps="605339"/></proof>
  </goal>
  <goal name="pps_rx&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="661990"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_xx&#39;vc" expl="VC for pps_xx" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_xx&#39;vc.0" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_xx&#39;vc.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_xx&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_xx&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.50" steps="659523"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_xx&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_xx&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.65" steps="660145"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_xx&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_xx&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.83" steps="571769"/></proof>
  </goal>
  <goal name="pps_xx&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.87" steps="571772"/></proof>
  </goal>
  <goal name="pps_xx&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.84" steps="660125"/></proof>
  </goal>
  <goal name="pps_xx&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.38" steps="605526"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_yy&#39;vc" expl="VC for pps_yy" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_yy&#39;vc.0" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_yy&#39;vc.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_yy&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_yy&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.72" steps="660051"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_yy&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_yy&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.62" steps="660678"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_yy&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_yy&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.75" steps="662184"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_yy&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.72" steps="571958"/></proof>
  </goal>
  <goal name="pps_yy&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.74" steps="571961"/></proof>
  </goal>
  <goal name="pps_yy&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.66" steps="660663"/></proof>
  </goal>
  <goal name="pps_yy&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.45" steps="605761"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_zz&#39;vc" expl="VC for pps_zz" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_zz&#39;vc.0" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_zz&#39;vc.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_zz&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_zz&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.59" steps="660538"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_zz&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_zz&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.80" steps="661117"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_zz&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_zz&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.49" steps="662977"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_zz&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.70" steps="572104"/></proof>
  </goal>
  <goal name="pps_zz&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.75" steps="572107"/></proof>
  </goal>
  <goal name="pps_zz&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.23" steps="605891"/></proof>
  </goal>
  <goal name="pps_zz&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.25" steps="605918"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_ry&#39;vc" expl="VC for pps_ry" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_ry&#39;vc.0" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_ry&#39;vc.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_ry&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_ry&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.66" steps="661208"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_ry&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_ry&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.70" steps="661821"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_ry&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_ry&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.68"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_ry&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.73" steps="572449"/></proof>
  </goal>
  <goal name="pps_ry&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.71" steps="572452"/></proof>
  </goal>
  <goal name="pps_ry&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.27" steps="606383"/></proof>
  </goal>
  <goal name="pps_ry&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H">
   <goal name="pps_ry&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_rz_b&#39;vc" expl="VC for pps_rz_b" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_rz_b&#39;vc.0" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_rz_b&#39;vc.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_rz_b&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_rz_b&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.66" steps="661472"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_rz_b&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_rz_b&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.72" steps="662016"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_rz_b&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_rz_b&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_rz_b&#39;vc.4.0.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="pps_rz_b&#39;vc.4.0.0.0" expl="precondition" proved="true">
     <proof prover="0"><result status="valid" time="0.71"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_rz_b&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.70" steps="572645"/></proof>
  </goal>
  <goal name="pps_rz_b&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.71" steps="572648"/></proof>
  </goal>
  <goal name="pps_rz_b&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.26" steps="606524"/></proof>
  </goal>
  <goal name="pps_rz_b&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.65" steps="662939"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_hadamard&#39;vc" expl="VC for pps_hadamard" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_hadamard&#39;vc.0" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_hadamard&#39;vc.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_hadamard&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_hadamard&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.69" steps="661756"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_hadamard&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_hadamard&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.81" steps="662328"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_hadamard&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_hadamard&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.78" steps="664656"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_hadamard&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.71" steps="572888"/></proof>
  </goal>
  <goal name="pps_hadamard&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.73" steps="572891"/></proof>
  </goal>
  <goal name="pps_hadamard&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.21" steps="606784"/></proof>
  </goal>
  <goal name="pps_hadamard&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="662794"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_cnot&#39;vc" expl="VC for pps_cnot" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_cnot&#39;vc.0" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_cnot&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.29" steps="606666"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_cnot&#39;vc.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_cnot&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_cnot&#39;vc.2.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_cnot&#39;vc.2.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.71"/></proof>
    </goal>
    <goal name="pps_cnot&#39;vc.2.0.1" expl="precondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="pps_cnot&#39;vc.2.0.1.0" expl="VC for pps_cnot" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_cnot&#39;vc.2.0.1.0.0" expl="precondition" proved="true">
      <transf name="case" proved="true" arg1="(x c= 0)">
       <goal name="pps_cnot&#39;vc.2.0.1.0.0.0" expl="true case (precondition)" proved="true">
       <proof prover="8"><result status="valid" time="1.81" steps="668225"/></proof>
       </goal>
       <goal name="pps_cnot&#39;vc.2.0.1.0.0.1" expl="false case (precondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="one_mult">
        <goal name="pps_cnot&#39;vc.2.0.1.0.0.1.0" expl="false case (precondition)" proved="true">
        <proof prover="0"><result status="valid" time="0.52"/></proof>
        </goal>
        <goal name="pps_cnot&#39;vc.2.0.1.0.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.86" steps="668367"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_cnot&#39;vc.2.0.1.0.1" expl="precondition" proved="true">
      <proof prover="8"><result status="valid" time="1.79" steps="668042"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_cnot&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_cnot&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.67"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_cnot&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_cnot&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.73" steps="573265"/></proof>
  </goal>
  <goal name="pps_cnot&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.75" steps="573268"/></proof>
  </goal>
  <goal name="pps_cnot&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.66" steps="663511"/></proof>
  </goal>
  <goal name="pps_cnot&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H2">
   <goal name="pps_cnot&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="pps_cnot&#39;vc.8.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="1.69" steps="669290"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_cnot&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.25" steps="607561"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_toffoli&#39;vc" expl="VC for pps_toffoli" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_toffoli&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.26" steps="607526"/></proof>
  </goal>
  <goal name="pps_toffoli&#39;vc.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_toffoli&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_toffoli&#39;vc.2.0" expl="precondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="pps_toffoli&#39;vc.2.0.0" expl="precondition" proved="true">
    <transf name="case" proved="true" arg1="(x c1 = 0)">
     <goal name="pps_toffoli&#39;vc.2.0.0.0" expl="true case (precondition)" proved="true">
     <proof prover="0"><result status="valid" time="0.58"/></proof>
     </goal>
     <goal name="pps_toffoli&#39;vc.2.0.0.1" expl="false case (precondition)" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_toffoli&#39;vc.2.0.0.1.0" expl="VC for pps_toffoli" proved="true">
      <proof prover="0"><result status="valid" time="0.69"/></proof>
      </goal>
      <goal name="pps_toffoli&#39;vc.2.0.0.1.1" expl="VC for pps_toffoli" proved="true">
      <proof prover="8"><result status="valid" time="1.80" steps="669155"/></proof>
      </goal>
      <goal name="pps_toffoli&#39;vc.2.0.0.1.2" expl="VC for pps_toffoli" proved="true">
      <proof prover="0"><result status="valid" time="0.69"/></proof>
      </goal>
      <goal name="pps_toffoli&#39;vc.2.0.0.1.3" expl="VC for pps_toffoli" proved="true">
      <proof prover="8"><result status="valid" time="1.89" steps="669149"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_toffoli&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_toffoli&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.69"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_toffoli&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_toffoli&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.71" steps="574047"/></proof>
  </goal>
  <goal name="pps_toffoli&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.72" steps="574050"/></proof>
  </goal>
  <goal name="pps_toffoli&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.93" steps="664614"/></proof>
  </goal>
  <goal name="pps_toffoli&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H2">
   <goal name="pps_toffoli&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="pps_toffoli&#39;vc.8.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="0.97" steps="584758"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_toffoli&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.24" steps="608499"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_fredkin&#39;vc" expl="VC for pps_fredkin" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_fredkin&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.34" steps="608468"/></proof>
  </goal>
  <goal name="pps_fredkin&#39;vc.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_fredkin&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_fredkin&#39;vc.2.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_fredkin&#39;vc.2.0.0" expl="precondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="pps_fredkin&#39;vc.2.0.0.0" expl="VC for pps_fredkin" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_fredkin&#39;vc.2.0.0.0.0" expl="precondition" proved="true">
      <proof prover="0"><result status="valid" time="0.53"/></proof>
      </goal>
      <goal name="pps_fredkin&#39;vc.2.0.0.0.1" expl="precondition" proved="true">
      <proof prover="0"><result status="valid" time="0.55"/></proof>
      </goal>
      <goal name="pps_fredkin&#39;vc.2.0.0.0.2" expl="precondition" proved="true">
      <proof prover="8"><result status="valid" time="1.64" steps="670198"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_fredkin&#39;vc.2.0.1" expl="precondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="pps_fredkin&#39;vc.2.0.1.0" expl="VC for pps_fredkin" proved="true">
     <transf name="case" proved="true" arg1="(x c = 0)">
      <goal name="pps_fredkin&#39;vc.2.0.1.0.0" expl="true case" proved="true">
      <proof prover="0"><result status="valid" time="0.57"/></proof>
      </goal>
      <goal name="pps_fredkin&#39;vc.2.0.1.0.1" expl="false case" proved="true">
      <proof prover="0"><result status="valid" time="0.69"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_fredkin&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_fredkin&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.71"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_fredkin&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="pps_fredkin&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.72" steps="574984"/></proof>
  </goal>
  <goal name="pps_fredkin&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.72" steps="574987"/></proof>
  </goal>
  <goal name="pps_fredkin&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H2">
   <goal name="pps_fredkin&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="pps_fredkin&#39;vc.7.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="0.81" steps="585607"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_fredkin&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H2">
   <goal name="pps_fredkin&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="pps_fredkin&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="pps_fredkin&#39;vc.8.0.0.0" expl="VC for pps_fredkin" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_fredkin&#39;vc.8.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="0.79" steps="591885"/></proof>
      </goal>
      <goal name="pps_fredkin&#39;vc.8.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="0.74" steps="581406"/></proof>
      </goal>
      <goal name="pps_fredkin&#39;vc.8.0.0.0.2" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="0.69" steps="581480"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_fredkin&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.65" steps="666436"/></proof>
  </goal>
  <goal name="pps_fredkin&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.26" steps="609649"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_id_apply_basis&#39;vc" expl="VC for pps_id_apply_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_id_apply_basis&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
   <goal name="pps_id_apply_basis&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
    <goal name="pps_id_apply_basis&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l_cardone">
     <goal name="pps_id_apply_basis&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="pps_id_apply_basis&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
       <goal name="pps_id_apply_basis&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="pps_id_apply_basis&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="replace" proved="true" arg1="(make_bv
   ((h_basis_ket pps_id @ getbv x) @ getbv (choose (n_bvs (h_range pps_id))))
   (h_width pps_id))" arg2="x">
         <goal name="pps_id_apply_basis&#39;vc.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="8"><result status="valid" time="0.61" steps="516714"/></proof>
         </goal>
         <goal name="pps_id_apply_basis&#39;vc.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="set_equal_bv">
          <goal name="pps_id_apply_basis&#39;vc.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="pps_id_apply_basis&#39;vc.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="0.70" steps="527722"/></proof>
           </goal>
           <goal name="pps_id_apply_basis&#39;vc.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.70" steps="724836"/></proof>
           </goal>
           <goal name="pps_id_apply_basis&#39;vc.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.69" steps="527726"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="pps_id_apply_basis&#39;vc.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_id_apply_basis&#39;vc.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
            <goal name="pps_id_apply_basis&#39;vc.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.30" steps="660707"/></proof>
            </goal>
            <goal name="pps_id_apply_basis&#39;vc.0.0.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.71" steps="726757"/></proof>
            </goal>
            <goal name="pps_id_apply_basis&#39;vc.0.0.0.0.0.0.0.1.1.0.2" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
             <goal name="pps_id_apply_basis&#39;vc.0.0.0.0.0.0.0.1.1.0.2.0" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="0.63" steps="516750"/></proof>
             </goal>
             <goal name="pps_id_apply_basis&#39;vc.0.0.0.0.0.0.0.1.1.0.2.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.72" steps="726757"/></proof>
             </goal>
             <goal name="pps_id_apply_basis&#39;vc.0.0.0.0.0.0.0.1.1.0.2.2" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="0.85" steps="634775"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_id_apply_basis&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.14" steps="559006"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_id_apply_basis&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.60" steps="452064"/></proof>
     </goal>
     <goal name="pps_id_apply_basis&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.99" steps="511808"/></proof>
     </goal>
     <goal name="pps_id_apply_basis&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="pps_id_apply_basis&#39;vc.0.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="scalar_ket_l">
       <goal name="pps_id_apply_basis&#39;vc.0.0.0.3.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.68"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_id_apply_basis&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.36" steps="530462"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_id_apply_basis&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.57" steps="452060"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_swap_apply_basis&#39;vc" expl="VC for pps_swap_apply_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_swap_apply_basis&#39;vc.0" expl="assertion" proved="true">
  <transf name="replace" proved="true" arg1="x" arg2="(int_to_bv (bv_to_int x) 2)">
   <goal name="pps_swap_apply_basis&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="int_to_bv_value">
    <goal name="pps_swap_apply_basis&#39;vc.0.0.0" expl="assertion" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="pps_swap_apply_basis&#39;vc.0.0.0.0" expl="VC for pps_swap_apply_basis" proved="true">
     <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
      <goal name="pps_swap_apply_basis&#39;vc.0.0.0.0.0" expl="VC for pps_swap_apply_basis" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_swap_apply_basis&#39;vc.0.0.0.0.0.0" expl="assertion" proved="true">
       <transf name="replace" proved="true" arg1="(power 2 ((2 - 0) - 1))" arg2="2">
        <goal name="pps_swap_apply_basis&#39;vc.0.0.0.0.0.0.0" expl="assertion" proved="true">
        <proof prover="8"><result status="valid" time="0.92" steps="480502"/></proof>
        </goal>
        <goal name="pps_swap_apply_basis&#39;vc.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="0.90" steps="477557"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_swap_apply_basis&#39;vc.0.0.0.0.0.1" expl="assertion" proved="true">
       <transf name="replace" proved="true" arg1="(power 2 ((2 - 0) - 1))" arg2="2">
        <goal name="pps_swap_apply_basis&#39;vc.0.0.0.0.0.1.0" expl="assertion" proved="true">
        <proof prover="8"><result status="valid" time="1.43" steps="537182"/></proof>
        </goal>
        <goal name="pps_swap_apply_basis&#39;vc.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="0.91" steps="477575"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_swap_apply_basis&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.53" steps="446758"/></proof>
      </goal>
      <goal name="pps_swap_apply_basis&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_swap_apply_basis&#39;vc.0.0.0.0.2.0" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.24" steps="531580"/></proof>
       </goal>
       <goal name="pps_swap_apply_basis&#39;vc.0.0.0.0.2.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.23" steps="533147"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_swap_apply_basis&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.55" steps="441738"/></proof>
    </goal>
    <goal name="pps_swap_apply_basis&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.21" steps="528564"/></proof>
    </goal>
    <goal name="pps_swap_apply_basis&#39;vc.0.0.3" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.53" steps="441752"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_swap_apply_basis&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="8"><result status="valid" time="1.22" steps="527712"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_swap_apply_basis&#39;vc.1" expl="assertion" proved="true">
  <transf name="replace" proved="true" arg1="x" arg2="(int_to_bv (bv_to_int x) 2)">
   <goal name="pps_swap_apply_basis&#39;vc.1.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="int_to_bv_value">
    <goal name="pps_swap_apply_basis&#39;vc.1.0.0" expl="assertion" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="pps_swap_apply_basis&#39;vc.1.0.0.0" expl="assertion" proved="true">
     <transf name="replace" proved="true" arg1="(power 2 ((2 - 1) - 1))" arg2="1">
      <goal name="pps_swap_apply_basis&#39;vc.1.0.0.0.0" expl="assertion" proved="true">
      <proof prover="8"><result status="valid" time="1.64" steps="570926"/></proof>
      </goal>
      <goal name="pps_swap_apply_basis&#39;vc.1.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="0.97" steps="505265"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_swap_apply_basis&#39;vc.1.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.60" steps="468736"/></proof>
    </goal>
    <goal name="pps_swap_apply_basis&#39;vc.1.0.2" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.36" steps="559940"/></proof>
    </goal>
    <goal name="pps_swap_apply_basis&#39;vc.1.0.3" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.61" steps="468750"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_swap_apply_basis&#39;vc.1.1" expl="equality hypothesis" proved="true">
   <proof prover="8"><result status="valid" time="1.33" steps="559110"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_swap_apply_basis&#39;vc.2" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
   <goal name="pps_swap_apply_basis&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
    <goal name="pps_swap_apply_basis&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l_cardone">
     <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
       <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="eliminate_definition" proved="true" >
         <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="bv_to_ket&#39;def">
          <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="apply" proved="true" arg1="ket_eq">
            <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.54" steps="643056"/></proof>
            </goal>
            <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.48" steps="643047"/></proof>
            </goal>
            <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
             <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="make_bv_length">
              <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="ind_isum_plus_one">
               <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="ind_isum_one">
                <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                   <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                    <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="pps_swap&#39;def1">
                     <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="pps_swap&#39;def1">
                      <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="replace" proved="true" arg1="(power 2 (h_width (pps_swap 0 1 2) - 1))" arg2="2
">
                       <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="power&#39;def">
                        <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="power_pre&#39;def1">
                         <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="1.84" steps="668584"/></proof>
                         </goal>
                         <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="8"><result status="valid" time="1.51" steps="655468"/></proof>
                         </goal>
                         <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                         <proof prover="8"><result status="valid" time="1.84" steps="655023"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                        <proof prover="8"><result status="valid" time="1.56" steps="655470"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                       <proof prover="8"><result status="valid" time="1.52" steps="657647"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="8"><result status="valid" time="0.66" steps="560402"/></proof>
                      </goal>
                      <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="8"><result status="valid" time="0.70" steps="560402"/></proof>
                      </goal>
                      <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                      <proof prover="8"><result status="valid" time="0.71" steps="560386"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="8"><result status="valid" time="0.69" steps="560402"/></proof>
                     </goal>
                     <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="8"><result status="valid" time="0.68" steps="560402"/></proof>
                     </goal>
                     <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                     <proof prover="8"><result status="valid" time="0.68" steps="560386"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                      <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="1.55" steps="656709"/></proof>
                      </goal>
                      <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="1.84" steps="666620"/></proof>
                      </goal>
                      <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="0.68" steps="560427"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                      <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="1.80" steps="656709"/></proof>
                      </goal>
                      <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="1.81" steps="666620"/></proof>
                      </goal>
                      <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.1.2" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="0.84" steps="560427"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.67" steps="655469"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                     <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.50" steps="656709"/></proof>
                     </goal>
                     <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.52" steps="666620"/></proof>
                     </goal>
                     <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="0.68" steps="560427"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                     <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.49" steps="656709"/></proof>
                     </goal>
                     <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.52" steps="666620"/></proof>
                     </goal>
                     <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1.2" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="0.66" steps="560427"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="1.80" steps="655474"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="1.83" steps="643067"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="1.56" steps="643506"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.84" steps="644750"/></proof>
                </goal>
                <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.71" steps="654041"/></proof>
                </goal>
                <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="0.65" steps="547888"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.1.1" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.1.1.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.47" steps="644750"/></proof>
                </goal>
                <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.1.1.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.72" steps="654041"/></proof>
                </goal>
                <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.1.1.2" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="0.64" steps="547888"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.2" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.71" steps="643048"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="pps&#39;invariant3">
             <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.75" steps="644750"/></proof>
             </goal>
             <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.78" steps="654041"/></proof>
             </goal>
             <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.65" steps="547888"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="pps&#39;invariant2">
             <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.76" steps="644750"/></proof>
             </goal>
             <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.75" steps="654041"/></proof>
             </goal>
             <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.1.1.2" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.65" steps="547888"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.79" steps="643048"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_swap_apply_basis&#39;vc.2.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="0.64"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_swap_apply_basis&#39;vc.2.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.25" steps="560264"/></proof>
     </goal>
     <goal name="pps_swap_apply_basis&#39;vc.2.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="0.64"/></proof>
     </goal>
     <goal name="pps_swap_apply_basis&#39;vc.2.0.0.3" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="pps_swap_apply_basis&#39;vc.2.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="scalar_ket_l">
       <goal name="pps_swap_apply_basis&#39;vc.2.0.0.3.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
        <goal name="pps_swap_apply_basis&#39;vc.2.0.0.3.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="pps_swap_apply_basis&#39;vc.2.0.0.3.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="0.56" steps="468750"/></proof>
         </goal>
         <goal name="pps_swap_apply_basis&#39;vc.2.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="pps_swap_apply_basis&#39;vc.2.0.0.3.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_swap_apply_basis&#39;vc.2.0.0.3.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant3">
            <goal name="pps_swap_apply_basis&#39;vc.2.0.0.3.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.73" steps="650826"/></proof>
            </goal>
            <goal name="pps_swap_apply_basis&#39;vc.2.0.0.3.0.0.0.1.0.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.52" steps="660190"/></proof>
            </goal>
            <goal name="pps_swap_apply_basis&#39;vc.2.0.0.3.0.0.0.1.0.0.2" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="0.63" steps="548372"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_swap_apply_basis&#39;vc.2.0.0.3.0.0.0.1.1" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_swap_apply_basis&#39;vc.2.0.0.3.0.0.0.1.1.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant2">
            <goal name="pps_swap_apply_basis&#39;vc.2.0.0.3.0.0.0.1.1.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.81" steps="650826"/></proof>
            </goal>
            <goal name="pps_swap_apply_basis&#39;vc.2.0.0.3.0.0.0.1.1.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.89" steps="660190"/></proof>
            </goal>
            <goal name="pps_swap_apply_basis&#39;vc.2.0.0.3.0.0.0.1.1.0.2" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="0.65" steps="548372"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_swap_apply_basis&#39;vc.2.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.24" steps="560264"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_swap_apply_basis&#39;vc.2.0.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.54"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_swap_apply_basis&#39;vc.2.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.60"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_cnot_apply_basis&#39;vc" expl="VC for pps_cnot_apply_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_cnot_apply_basis&#39;vc.0" expl="assertion" proved="true">
  <transf name="replace" proved="true" arg1="x" arg2="(int_to_bv (bv_to_int x) 2)">
   <goal name="pps_cnot_apply_basis&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="int_to_bv_value">
    <goal name="pps_cnot_apply_basis&#39;vc.0.0.0" expl="assertion" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0" expl="VC for pps_cnot_apply_basis" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.0" expl="assertion" proved="true">
      <transf name="replace" proved="true" arg1="(power 2 ((2 - 0) - 1))" arg2="2">
       <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.0.0" expl="assertion" proved="true">
       <proof prover="8"><result status="valid" time="1.33" steps="533949"/></proof>
       </goal>
       <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="0.91" steps="477822"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.1" expl="assertion" proved="true">
      <transf name="replace" proved="true" arg1="(div (bv_to_int x) (power 2 ((2 - 0) - 1)))" arg2="1">
       <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.1.0" expl="assertion" proved="true">
       <proof prover="8"><result status="valid" time="0.54" steps="447060"/></proof>
       </goal>
       <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv" arg2="in" arg3="H">
        <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
        <transf name="replace" proved="true" arg1="(power 2 ((2 - 0) - 1))" arg2="2">
         <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
         <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="(bv_to_int x),2,1,(mod (bv_to_int x) 2)">
          <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.1.1.0.0.0" expl="equality hypothesis" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.1.1.0.0.0.0" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="Hinst1">
            <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.1.1.0.0.0.0.0" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="0.67" steps="529885"/></proof>
            </goal>
            <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="0.64" steps="529889"/></proof>
            </goal>
            <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.1.1.0.0.0.0.2" expl="rewrite premises" proved="true">
            <transf name="assert" proved="true" arg1="(2&lt;= bv_to_int x &lt;4)">
             <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.1.1.0.0.0.0.2.0" expl="asserted formula" proved="true">
             <transf name="replace" proved="true" arg1="4" arg2="(power 2 2)">
              <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.1.1.0.0.0.0.2.0.0" expl="asserted formula" proved="true">
              <proof prover="8"><result status="valid" time="1.62" steps="625064"/></proof>
              </goal>
              <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.1.1.0.0.0.0.2.0.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="1.49" steps="624593"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.1.1.0.0.0.0.2.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.43" steps="565765"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.1.1.0.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.35" steps="563720"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="1.18" steps="477829"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.53" steps="447057"/></proof>
        </goal>
        <goal name="pps_cnot_apply_basis&#39;vc.0.0.0.0.1.1.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.48" steps="534636"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_cnot_apply_basis&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.56" steps="441868"/></proof>
    </goal>
    <goal name="pps_cnot_apply_basis&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.51" steps="528805"/></proof>
    </goal>
    <goal name="pps_cnot_apply_basis&#39;vc.0.0.3" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.53" steps="441882"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_cnot_apply_basis&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="8"><result status="valid" time="1.52" steps="527953"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_cnot_apply_basis&#39;vc.1" expl="assertion" proved="true">
  <transf name="replace" proved="true" arg1="x" arg2="(int_to_bv (bv_to_int x) 2)">
   <goal name="pps_cnot_apply_basis&#39;vc.1.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="int_to_bv_value">
    <goal name="pps_cnot_apply_basis&#39;vc.1.0.0" expl="assertion" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="pps_cnot_apply_basis&#39;vc.1.0.0.0" expl="assertion" proved="true">
     <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
      <goal name="pps_cnot_apply_basis&#39;vc.1.0.0.0.0" expl="assertion" proved="true">
      <transf name="replace" proved="true" arg1="(power 2 ((2 - 1) - 1))" arg2="1">
       <goal name="pps_cnot_apply_basis&#39;vc.1.0.0.0.0.0" expl="assertion" proved="true">
       <proof prover="8"><result status="valid" time="0.76" steps="474354"/></proof>
       </goal>
       <goal name="pps_cnot_apply_basis&#39;vc.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="1.26" steps="505519"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_cnot_apply_basis&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.57" steps="474337"/></proof>
      </goal>
      <goal name="pps_cnot_apply_basis&#39;vc.1.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.39" steps="564843"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_cnot_apply_basis&#39;vc.1.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.60" steps="468871"/></proof>
    </goal>
    <goal name="pps_cnot_apply_basis&#39;vc.1.0.2" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.35" steps="560186"/></proof>
    </goal>
    <goal name="pps_cnot_apply_basis&#39;vc.1.0.3" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.76" steps="468885"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_cnot_apply_basis&#39;vc.1.1" expl="equality hypothesis" proved="true">
   <proof prover="8"><result status="valid" time="1.33" steps="559361"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_cnot_apply_basis&#39;vc.2" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
   <goal name="pps_cnot_apply_basis&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
    <goal name="pps_cnot_apply_basis&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l_cardone">
     <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
       <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="eliminate_definition" proved="true" >
         <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="bv_to_ket&#39;def">
          <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="apply" proved="true" arg1="ket_eq">
            <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.55" steps="643302"/></proof>
            </goal>
            <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.53" steps="643293"/></proof>
            </goal>
            <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
             <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="make_bv_length">
              <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="ind_isum_plus_one">
               <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="ind_isum_one">
                <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                   <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                    <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="pps_cnot&#39;def2">
                     <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="pps_cnot&#39;def1">
                      <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="replace" proved="true" arg1="(power 2 (h_width (pps_cnot 0 1 2) - 1))" arg2="2">
                       <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="eliminate_if" proved="true" >
                        <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="4"><result status="valid" time="0.36" steps="4867"/></proof>
                         </goal>
                         <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="zero_add">
                          <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="zero_add">
                           <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="one_mult">
                            <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                            <proof prover="8"><result status="valid" time="1.64" steps="662006"/></proof>
                            </goal>
                            <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                            <proof prover="4"><result status="valid" time="0.33" steps="4837"/></proof>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                           <proof prover="0"><result status="valid" time="3.06"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                          <proof prover="8"><result status="valid" time="1.48" steps="597708"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                         <transf name="assert" proved="true" arg1="(forall a b c d e. a = 2 -&gt; b = 1 -&gt; c = 1 -&gt; d = 0 -&gt; e = 1 -&gt; (a+ ((b*c)+d) * e) = 3)">
                          <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="asserted formula" proved="true">
                          <proof prover="8"><result status="valid" time="0.70" steps="563951"/></proof>
                          </goal>
                          <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.2.1" expl="apply premises" proved="true">
                          <transf name="apply" proved="true" arg1="h">
                           <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.2.1.0" expl="apply premises" proved="true">
                           <proof prover="8"><result status="valid" time="0.98" steps="575054"/></proof>
                           </goal>
                           <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.2.1.1" expl="apply premises" proved="true">
                           <proof prover="8"><result status="valid" time="0.78" steps="575040"/></proof>
                           </goal>
                           <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.2.1.2" expl="apply premises" proved="true">
                           <proof prover="8"><result status="valid" time="1.18" steps="598079"/></proof>
                           </goal>
                           <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.2.1.3" expl="apply premises" proved="true">
                           <proof prover="0"><result status="valid" time="2.93"/></proof>
                           </goal>
                           <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.2.1.4" expl="apply premises" proved="true">
                           <proof prover="8"><result status="valid" time="1.72" steps="662462"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                         <transf name="assert" proved="true" arg1="(forall a b c d e. a = 2 -&gt; b = 1 -&gt; c = 0 -&gt; d = 0 -&gt; e = 1 -&gt; (a+ ((b*c)+d) * e) = 2)">
                          <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.3.0" expl="asserted formula" proved="true">
                          <proof prover="8"><result status="valid" time="0.90" steps="563941"/></proof>
                          </goal>
                          <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.3.1" expl="apply premises" proved="true">
                          <transf name="apply" proved="true" arg1="h">
                           <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.3.1.0" expl="apply premises" proved="true">
                           <proof prover="8"><result status="valid" time="1.37" steps="598304"/></proof>
                           </goal>
                           <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.3.1.1" expl="apply premises" proved="true">
                           <proof prover="8"><result status="valid" time="1.38" steps="598290"/></proof>
                           </goal>
                           <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.3.1.2" expl="apply premises" proved="true">
                           <proof prover="8"><result status="valid" time="1.65" steps="662098"/></proof>
                           </goal>
                           <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.3.1.3" expl="apply premises" proved="true">
                           <proof prover="0"><result status="valid" time="3.76"/></proof>
                           </goal>
                           <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.3.1.4" expl="apply premises" proved="true">
                           <proof prover="8"><result status="valid" time="2.00" steps="662577"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                       <proof prover="8"><result status="valid" time="1.63" steps="657893"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="8"><result status="valid" time="0.92" steps="560537"/></proof>
                      </goal>
                      <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="8"><result status="valid" time="0.74" steps="560537"/></proof>
                      </goal>
                      <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                      <proof prover="8"><result status="valid" time="0.90" steps="560521"/></proof>
                      </goal>
                      <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                      <proof prover="8"><result status="valid" time="0.91" steps="560512"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="8"><result status="valid" time="0.91" steps="560537"/></proof>
                     </goal>
                     <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="8"><result status="valid" time="0.91" steps="560537"/></proof>
                     </goal>
                     <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                     <proof prover="8"><result status="valid" time="0.89" steps="560521"/></proof>
                     </goal>
                     <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                     <proof prover="8"><result status="valid" time="0.91" steps="560521"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                      <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="1.95" steps="656945"/></proof>
                      </goal>
                      <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="1.67" steps="666871"/></proof>
                      </goal>
                      <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="0.88" steps="560562"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                      <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="1.98" steps="656945"/></proof>
                      </goal>
                      <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="1.70" steps="666871"/></proof>
                      </goal>
                      <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.1.2" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="0.69" steps="560562"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.66" steps="655715"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                     <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.89" steps="656945"/></proof>
                     </goal>
                     <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.00" steps="666871"/></proof>
                     </goal>
                     <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="0.87" steps="560562"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                     <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.65" steps="656945"/></proof>
                     </goal>
                     <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.65" steps="666871"/></proof>
                     </goal>
                     <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1.2" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="0.90" steps="560562"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="1.66" steps="655725"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="1.63" steps="643313"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="1.92" steps="643752"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.87" steps="644996"/></proof>
                </goal>
                <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.60" steps="654287"/></proof>
                </goal>
                <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="0.85" steps="548023"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.1.1" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.1.1.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.57" steps="644996"/></proof>
                </goal>
                <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.1.1.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.60" steps="654287"/></proof>
                </goal>
                <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.1.1.2" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="0.86" steps="548023"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.0.2.0.2" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.50" steps="643294"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="pps&#39;invariant3">
             <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.54" steps="644996"/></proof>
             </goal>
             <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.66" steps="654287"/></proof>
             </goal>
             <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.87" steps="548023"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="pps&#39;invariant2">
             <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.66" steps="644996"/></proof>
             </goal>
             <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.94" steps="654287"/></proof>
             </goal>
             <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.1.1.2" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.85" steps="548023"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.89" steps="643294"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="pps_cnot&#39;def">
         <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.48" steps="584583"/></proof>
         </goal>
         <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.85" steps="548482"/></proof>
         </goal>
         <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.67" steps="548472"/></proof>
         </goal>
         <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.69" steps="548466"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.36" steps="560510"/></proof>
     </goal>
     <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="0.67"/></proof>
     </goal>
     <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.3" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="scalar_ket_l">
       <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.3.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
        <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.3.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.3.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="0.74" steps="468885"/></proof>
         </goal>
         <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.3.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.3.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant3">
            <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.3.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.86" steps="651069"/></proof>
            </goal>
            <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.3.0.0.0.1.0.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.92" steps="660436"/></proof>
            </goal>
            <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.3.0.0.0.1.0.0.2" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="0.87" steps="548507"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.3.0.0.0.1.1" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.3.0.0.0.1.1.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant2">
            <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.3.0.0.0.1.1.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.89" steps="651069"/></proof>
            </goal>
            <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.3.0.0.0.1.1.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.94" steps="660436"/></proof>
            </goal>
            <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.3.0.0.0.1.1.0.2" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="0.69" steps="548507"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_cnot_apply_basis&#39;vc.2.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.61" steps="560510"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_cnot_apply_basis&#39;vc.2.0.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.56"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_cnot_apply_basis&#39;vc.2.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.62"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_phase_apply_basis&#39;vc" expl="VC for pps_phase_apply_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_phase_apply_basis&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
   <goal name="pps_phase_apply_basis&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
    <goal name="pps_phase_apply_basis&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l_cardone">
     <goal name="pps_phase_apply_basis&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="pps_phase_apply_basis&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="scalar_eq_gen">
       <goal name="pps_phase_apply_basis&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="bv_to_ket_eq">
        <goal name="pps_phase_apply_basis&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="pps_phase_apply_basis&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.17" steps="472630"/></proof>
         </goal>
         <goal name="pps_phase_apply_basis&#39;vc.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.61"/></proof>
         </goal>
         <goal name="pps_phase_apply_basis&#39;vc.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.16" steps="475357"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="pps_phase_apply_basis&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="pps_phase_apply_basis&#39;vc.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
          <goal name="pps_phase_apply_basis&#39;vc.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.41" steps="567616"/></proof>
          </goal>
          <goal name="pps_phase_apply_basis&#39;vc.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="0.79"/></proof>
          </goal>
          <goal name="pps_phase_apply_basis&#39;vc.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="pps_phase_apply_basis&#39;vc.0.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.56" steps="442032"/></proof>
           </goal>
           <goal name="pps_phase_apply_basis&#39;vc.0.0.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="0.79"/></proof>
           </goal>
           <goal name="pps_phase_apply_basis&#39;vc.0.0.0.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.14" steps="570302"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_phase_apply_basis&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.38" steps="560863"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_phase_apply_basis&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.14" steps="475357"/></proof>
     </goal>
     <goal name="pps_phase_apply_basis&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.25" steps="515081"/></proof>
     </goal>
     <goal name="pps_phase_apply_basis&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="pps_phase_apply_basis&#39;vc.0.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="scalar_ket_l">
       <goal name="pps_phase_apply_basis&#39;vc.0.0.0.3.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.77"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_phase_apply_basis&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.55" steps="531199"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_phase_apply_basis&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.19" steps="472630"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_rz_apply_basis&#39;vc" expl="VC for pps_rz_apply_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_rz_apply_basis&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
   <goal name="pps_rz_apply_basis&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
    <goal name="pps_rz_apply_basis&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l_cardone">
     <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(make_bv
        ((h_basis_ket (pps_rz k) @ getbv x)
         @ getbv (choose (n_bvs (h_range (pps_rz k)))))
        (h_width (pps_rz k)))" arg2="x">
       <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="eliminate_if" proved="true" >
        <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="scalar_eq_gen">
         <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="0.56" steps="447332"/></proof>
         </goal>
         <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.49" steps="565424"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="set_equal_bv">
        <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.23" steps="472719"/></proof>
         </goal>
         <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant3">
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.83" steps="647365"/></proof>
             </goal>
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.78" steps="647349"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.55" steps="592609"/></proof>
             </goal>
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.1.0.0.1.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.57" steps="592603"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.1.0.0.2" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.1.0.0.2.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.79" steps="517161"/></proof>
             </goal>
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.1.0.0.2.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.64" steps="517176"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant2">
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.82" steps="647448"/></proof>
            </goal>
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.1.1.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.45" steps="592713"/></proof>
            </goal>
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.1.1.0.2" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="0.65" steps="517170"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.16" steps="475446"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="assert_make_bv">
         <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.95" steps="632756"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.1.0" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.1.0.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant3">
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.1.0.0.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.1.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.88" steps="647365"/></proof>
             </goal>
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.1.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.92" steps="647349"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.1.0.0.1" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.1.0.0.1.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.51" steps="592609"/></proof>
             </goal>
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.1.0.0.1.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.48" steps="592603"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.1.0.0.2" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.1.0.0.2.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.64" steps="517161"/></proof>
             </goal>
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.1.0.0.2.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.84" steps="517176"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.1.1" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.1.1.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant2">
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.1.1.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.87" steps="647448"/></proof>
            </goal>
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.1.1.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.24" steps="592713"/></proof>
            </goal>
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.1.1.0.2" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="0.82" steps="517170"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_rz_apply_basis&#39;vc.0.0.0.0.0.1.1.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.97" steps="475446"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_rz_apply_basis&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.16" steps="475446"/></proof>
     </goal>
     <goal name="pps_rz_apply_basis&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.31" steps="515170"/></proof>
     </goal>
     <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(make_bv
        ((h_basis_ket (pps_rz k) @ getbv x)
         @ getbv (choose (n_bvs (h_range (pps_rz k)))))
        (h_width (pps_rz k)))" arg2="x">
       <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.0" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.85" steps="616603"/></proof>
       </goal>
       <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="set_equal_bv">
        <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="0.76"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
           <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="1.20" steps="567674"/></proof>
           </goal>
           <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="pps&#39;invariant3">
              <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.54" steps="647375"/></proof>
               </goal>
               <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.59" steps="647369"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.1.0.0.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.22" steps="592654"/></proof>
               </goal>
               <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.1.0.0.1.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.21" steps="592648"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.1.0.0.2" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.1.0.0.2.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="0.64" steps="517186"/></proof>
               </goal>
               <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.1.0.0.2.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="0.80" steps="517201"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.1.1" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.1.1.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="pps&#39;invariant2">
              <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.1.1.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="1.54" steps="647493"/></proof>
              </goal>
              <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.1.1.0.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="1.20" steps="592758"/></proof>
              </goal>
              <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.1.1.0.2" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="0.66" steps="517195"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.54" steps="442120"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.1" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.1.0" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.1.0.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant3">
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.1.0.0.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.1.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.55" steps="647365"/></proof>
             </goal>
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.1.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.54" steps="647349"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.1.0.0.1" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.1.0.0.1.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.22" steps="592609"/></proof>
             </goal>
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.1.0.0.1.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.53" steps="592603"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.1.0.0.2" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.1.0.0.2.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.65" steps="517161"/></proof>
             </goal>
             <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.1.0.0.2.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.65" steps="517176"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.1.1" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.1.1.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant2">
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.1.1.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.82" steps="647448"/></proof>
            </goal>
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.1.1.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.45" steps="592713"/></proof>
            </goal>
            <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.1.1.0.2" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="0.65" steps="517170"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_rz_apply_basis&#39;vc.0.0.0.3.0.1.1.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.12" steps="475446"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_rz_apply_basis&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.56" steps="531288"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_rz_apply_basis&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.17" steps="472719"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_hadamard_apply_basis&#39;vc" expl="VC for pps_hadamard_apply_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_hadamard_apply_basis&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
   <goal name="pps_hadamard_apply_basis&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="scalar_eq_gen">
    <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(h_range pps_hadamard)" arg2="1">
     <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_one">
      <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(h_range pps_hadamard)" arg2="1">
       <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(h_width pps_hadamard)" arg2="1">
         <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="eliminate_definition" proved="true" >
          <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="bv_to_ket&#39;def">
           <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length">
            <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="add_ket_l_eq">
             <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.68" steps="441843"/></proof>
             </goal>
             <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
              <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="ket_eq">
               <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="0.67" steps="441843"/></proof>
               </goal>
               <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="0.52" steps="441834"/></proof>
               </goal>
               <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
                <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="ind_isum_one">
                 <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.0.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="zero_mult_int">
                   <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                    <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.84" steps="617254"/></proof>
                    </goal>
                    <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.87" steps="617759"/></proof>
                    </goal>
                    <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="8"><result status="valid" time="0.72" steps="441859"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.1" expl="rewrite premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="make_bv_length">
                  <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.1.0" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="0.57" steps="441850"/></proof>
                  </goal>
                  <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.1.1" expl="rewrite premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.1.1.0" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.1.1.0.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                     <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.1.1.0.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.91" steps="652941"/></proof>
                     </goal>
                     <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.1.1.0.0.1" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.92" steps="654095"/></proof>
                     </goal>
                     <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.1.1.0.0.2" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.39" steps="559499"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.1.1.1" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.1.1.1.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                     <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.1.1.1.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.94" steps="652941"/></proof>
                     </goal>
                     <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.1.1.1.0.1" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.90" steps="654095"/></proof>
                     </goal>
                     <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.1.1.1.0.2" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.33" steps="559499"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.1.2" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="0.70" steps="441843"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
               <transf name="rewrite" proved="true" arg1="pps_hadamard&#39;def">
                <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
                <transf name="replace" proved="true" arg1="(getbv (int_to_bv 0 1) 0)" arg2="0">
                 <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.48" steps="596140"/></proof>
                 </goal>
                 <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="8"><result status="valid" time="1.91" steps="654047"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="( (int_to_bv 1 1))" arg2="(ket_to_bv (ket 1 1))">
              <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="scalar_eq_gen">
               <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(make_bv
   ((h_basis_ket pps_hadamard @ getbv x) @ getbv (ket_to_bv (ket 1 1))) 1)" arg2="(make_bv (fun i -&gt; 1)1)">
                <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="set_equal_ket">
                 <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.35" steps="556334"/></proof>
                 </goal>
                 <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.26" steps="526374"/></proof>
                 </goal>
                 <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.2" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="3.29" steps="1039071"/></proof>
                 </goal>
                 <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="get_ket_bv_to_ket_length">
                   <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.0" expl="apply premises" proved="true">
                   <transf name="replace" proved="true" arg1="(bv_to_int (make_bv (fun (i1:int) -&gt; 1) 1))" arg2="1">
                    <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="3.30" steps="1049592"/></proof>
                    </goal>
                    <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
                    <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
                     <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.0.1.0" expl="equality hypothesis" proved="true">
                     <transf name="rewrite" proved="true" arg1="ind_isum_one">
                      <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.0.1.0.0" expl="equality hypothesis" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                       <transf name="rewrite" proved="true" arg1="make_bv_length">
                        <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
                        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                         <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.0.1.0.0.0.0.0" expl="equality hypothesis" proved="true">
                         <transf name="compute_specified" proved="true" >
                          <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.0.1.0.0.0.0.0.0" expl="equality hypothesis" proved="true">
                          <proof prover="8"><result status="valid" time="0.98" steps="500316"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="8"><result status="valid" time="1.07" steps="504329"/></proof>
                         </goal>
                         <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                         <proof prover="8"><result status="valid" time="0.58" steps="468998"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                        <proof prover="8"><result status="valid" time="1.01" steps="504329"/></proof>
                        </goal>
                        <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                        <proof prover="8"><result status="valid" time="0.73" steps="468982"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.0.1.0.1" expl="rewrite premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="make_bv_length">
                       <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                       <proof prover="8"><result status="valid" time="0.76" steps="468989"/></proof>
                       </goal>
                       <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                       <proof prover="8"><result status="valid" time="1.25" steps="504329"/></proof>
                       </goal>
                       <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.0.1.0.1.2" expl="rewrite premises" proved="true">
                       <proof prover="8"><result status="valid" time="0.74" steps="468982"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.1" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.1.0" expl="rewrite premises" proved="true">
                    <proof prover="8"><result status="valid" time="0.59" steps="468975"/></proof>
                    </goal>
                    <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.3.0.1.1" expl="rewrite premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.09" steps="507008"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.1" expl="equality hypothesis" proved="true">
                <transf name="apply" proved="true" arg1="set_equal_bv_make_">
                 <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.1.0" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="0.55" steps="441843"/></proof>
                 </goal>
                 <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.1.1" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.51" steps="617792"/></proof>
                 </goal>
                 <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.0.1.2" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.50" steps="617500"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.1" expl="apply premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.1.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="pps_hadamard&#39;def">
                 <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.1.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="(getbv (ket_to_bv (ket 1 1)) @ 0)" arg2="1">
                  <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.1.0.0.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="0.89" steps="560799"/></proof>
                  </goal>
                  <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.0.1.0.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="8"><result status="valid" time="1.57" steps="654142"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="1.26" steps="526751"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="pps&#39;invariant3">
               <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.56" steps="652941"/></proof>
               </goal>
               <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.55" steps="654095"/></proof>
               </goal>
               <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.06" steps="559499"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="pps&#39;invariant2">
               <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.56" steps="652941"/></proof>
               </goal>
               <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.58" steps="654095"/></proof>
               </goal>
               <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.09" steps="559499"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="0.54" steps="441843"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="0.54" steps="442190"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="0.55" steps="442190"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.74" steps="452588"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_hadamard_apply_basis&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="0.52" steps="442190"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="pps_hadamard_apply_basis&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="0.74" steps="452588"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_hadamard_apply_basis&#39;vc.0.1" expl="rewrite premises" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="pps_hadamard_apply_basis&#39;vc.0.1.0" expl="rewrite premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="pps_hadamard_apply_basis&#39;vc.0.1.0.0" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.61" steps="457823"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_seq&#39;vc" expl="VC for pps_seq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_seq&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="666345"/></proof>
  </goal>
  <goal name="pps_seq&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="666621"/></proof>
  </goal>
  <goal name="pps_seq&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_seq&#39;vc.2.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_seq&#39;vc.2.0.0" expl="precondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="pps_seq&#39;vc.2.0.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="pps&#39;invariant3">
      <goal name="pps_seq&#39;vc.2.0.0.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_seq&#39;vc.2.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="pps&#39;invariant3">
        <goal name="pps_seq&#39;vc.2.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.17" steps="774831"/></proof>
        </goal>
        <goal name="pps_seq&#39;vc.2.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.21" steps="775688"/></proof>
        </goal>
        <goal name="pps_seq&#39;vc.2.0.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.37" steps="713371"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_seq&#39;vc.2.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="pps&#39;invariant2">
        <goal name="pps_seq&#39;vc.2.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.88" steps="774831"/></proof>
        </goal>
        <goal name="pps_seq&#39;vc.2.0.0.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.87" steps="775688"/></proof>
        </goal>
        <goal name="pps_seq&#39;vc.2.0.0.0.0.1.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.47" steps="713371"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_seq&#39;vc.2.0.0.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_seq&#39;vc.2.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_seq&#39;vc.2.0.0.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.89" steps="775040"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_seq&#39;vc.2.0.0.0.1.1" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_seq&#39;vc.2.0.0.0.1.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.87" steps="775036"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_seq&#39;vc.2.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.38" steps="713343"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_seq&#39;vc.2.0.1" expl="precondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="pps_seq&#39;vc.2.0.1.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="pps&#39;invariant2">
      <goal name="pps_seq&#39;vc.2.0.1.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_seq&#39;vc.2.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="pps&#39;invariant3">
        <goal name="pps_seq&#39;vc.2.0.1.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.88" steps="774831"/></proof>
        </goal>
        <goal name="pps_seq&#39;vc.2.0.1.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.90" steps="775688"/></proof>
        </goal>
        <goal name="pps_seq&#39;vc.2.0.1.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.41" steps="713371"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_seq&#39;vc.2.0.1.0.0.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="pps&#39;invariant2">
        <goal name="pps_seq&#39;vc.2.0.1.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.89" steps="774831"/></proof>
        </goal>
        <goal name="pps_seq&#39;vc.2.0.1.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.94" steps="775688"/></proof>
        </goal>
        <goal name="pps_seq&#39;vc.2.0.1.0.0.1.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.61" steps="713371"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_seq&#39;vc.2.0.1.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_seq&#39;vc.2.0.1.0.1.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_seq&#39;vc.2.0.1.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.17" steps="775040"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_seq&#39;vc.2.0.1.0.1.1" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_seq&#39;vc.2.0.1.0.1.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.89" steps="775036"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_seq&#39;vc.2.0.1.0.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.46" steps="713343"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_seq&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_seq&#39;vc.3.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="pps_seq&#39;vc.3.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="pps&#39;invariant1">
     <goal name="pps_seq&#39;vc.3.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_seq&#39;vc.3.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="pps&#39;invariant1">
       <goal name="pps_seq&#39;vc.3.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.60" steps="713940"/></proof>
       </goal>
       <goal name="pps_seq&#39;vc.3.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.10" steps="775977"/></proof>
       </goal>
       <goal name="pps_seq&#39;vc.3.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.60" steps="714004"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_seq&#39;vc.3.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_seq&#39;vc.3.0.0.1.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="pps_seq&#39;vc.3.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="H4">
        <goal name="pps_seq&#39;vc.3.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="pps_seq&#39;vc.3.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.11" steps="775706"/></proof>
         </goal>
         <goal name="pps_seq&#39;vc.3.0.0.1.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.00" steps="674880"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_seq&#39;vc.3.0.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_seq&#39;vc.3.0.0.2.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="0.99" steps="674830"/></proof>
      </goal>
      <goal name="pps_seq&#39;vc.3.0.0.2.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.37" steps="713956"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_seq&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_seq&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="ang_add_eq">
    <goal name="pps_seq&#39;vc.4.0.0" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="pps_seq&#39;vc.4.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="pps&#39;invariant">
      <goal name="pps_seq&#39;vc.4.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.61" steps="714505"/></proof>
      </goal>
      <goal name="pps_seq&#39;vc.4.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.19" steps="776658"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_seq&#39;vc.4.0.1" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="pps_seq&#39;vc.4.0.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="pps&#39;invariant">
      <goal name="pps_seq&#39;vc.4.0.1.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_seq&#39;vc.4.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="pps&#39;invariant1">
        <goal name="pps_seq&#39;vc.4.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="pps_seq&#39;vc.4.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.15" steps="776314"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="pps_seq&#39;vc.4.0.1.0.0.0.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="pps_seq&#39;vc.4.0.1.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.16" steps="776614"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="pps_seq&#39;vc.4.0.1.0.0.0.2" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="pps_seq&#39;vc.4.0.1.0.0.0.2.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.00" steps="675509"/></proof>
         </goal>
         <goal name="pps_seq&#39;vc.4.0.1.0.0.0.2.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.57" steps="714588"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_seq&#39;vc.4.0.1.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_seq&#39;vc.4.0.1.0.1.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_seq&#39;vc.4.0.1.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.26" steps="776603"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_seq&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.95" steps="576683"/></proof>
  </goal>
  <goal name="pps_seq&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.94" steps="576686"/></proof>
  </goal>
  <goal name="pps_seq&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H1">
   <goal name="pps_seq&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_seq&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H">
   <goal name="pps_seq&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_place&#39;vc" expl="VC for pps_place" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_place&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.60" steps="667159"/></proof>
  </goal>
  <goal name="pps_place&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.87" steps="666925"/></proof>
  </goal>
  <goal name="pps_place&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_place&#39;vc.2.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="pps_place&#39;vc.2.0.0" expl="VC for pps_place" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="pps_place&#39;vc.2.0.0.0" expl="VC for pps_place" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_place&#39;vc.2.0.0.0.0" expl="VC for pps_place" proved="true">
      <transf name="apply" proved="true" arg1="pps&#39;invariant3">
       <goal name="pps_place&#39;vc.2.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_place&#39;vc.2.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.94" steps="781971"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_place&#39;vc.2.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.89" steps="778353"/></proof>
       </goal>
       <goal name="pps_place&#39;vc.2.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="0.88" steps="679469"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_place&#39;vc.2.0.0.0.1" expl="VC for pps_place" proved="true">
      <proof prover="8"><result status="valid" time="1.92" steps="778271"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_place&#39;vc.2.0.1" expl="VC for pps_place" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="pps_place&#39;vc.2.0.1.0" expl="VC for pps_place" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_place&#39;vc.2.0.1.0.0" expl="VC for pps_place" proved="true">
      <transf name="apply" proved="true" arg1="pps&#39;invariant2">
       <goal name="pps_place&#39;vc.2.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_place&#39;vc.2.0.1.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.95" steps="781971"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_place&#39;vc.2.0.1.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.90" steps="778353"/></proof>
       </goal>
       <goal name="pps_place&#39;vc.2.0.1.0.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="0.84" steps="679469"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_place&#39;vc.2.0.1.0.1" expl="VC for pps_place" proved="true">
      <proof prover="8"><result status="valid" time="1.94" steps="778260"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_place&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_place&#39;vc.3.0" expl="precondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="pps_place&#39;vc.3.0.0" expl="VC for pps_place" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="pps_place&#39;vc.3.0.0.0" expl="precondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="pps_place&#39;vc.3.0.0.0.0" expl="precondition" proved="true">
      <transf name="apply" proved="true" arg1="pps&#39;invariant1">
       <goal name="pps_place&#39;vc.3.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_place&#39;vc.3.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.35" steps="791189"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_place&#39;vc.3.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_place&#39;vc.3.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.68" steps="726641"/></proof>
        </goal>
       </transf>
       <transf name="split_vc" proved="true" >
        <goal name="pps_place&#39;vc.3.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.96" steps="787556"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_place&#39;vc.3.0.0.0.0.2" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="pps_place&#39;vc.3.0.0.0.0.2.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.91" steps="689015"/></proof>
        </goal>
        <goal name="pps_place&#39;vc.3.0.0.0.0.2.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.91" steps="689017"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_place&#39;vc.3.0.0.1" expl="precondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="pps_place&#39;vc.3.0.0.1.0" expl="precondition" proved="true">
      <proof prover="8"><result status="valid" time="1.03" steps="689095"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_place&#39;vc.3.0.0.2" expl="precondition" proved="true">
     <proof prover="8"><result status="valid" time="0.88" steps="584695"/></proof>
     </goal>
     <goal name="pps_place&#39;vc.3.0.0.3" expl="precondition" proved="true">
     <proof prover="8"><result status="valid" time="1.82" steps="674330"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_place&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_place&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="pps_place&#39;vc.4.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="pps&#39;invariant">
     <goal name="pps_place&#39;vc.4.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="pps_place&#39;vc.4.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.18" steps="780809"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_place&#39;vc.4.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.40" steps="715474"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_place&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.72" steps="577356"/></proof>
  </goal>
  <goal name="pps_place&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.92" steps="577359"/></proof>
  </goal>
  <goal name="pps_place&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H1">
   <goal name="pps_place&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_place&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H">
   <goal name="pps_place&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_cont&#39;vc" expl="VC for pps_cont" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_cont&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.20" steps="534947"/></proof>
  </goal>
  <goal name="pps_cont&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="pps_cont&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.82" steps="552322"/></proof>
   </goal>
   <goal name="pps_cont&#39;vc.1.1" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pow_inv_sqrt_2_values">
    <goal name="pps_cont&#39;vc.1.1.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="1.26" steps="540677"/></proof>
    </goal>
    <goal name="pps_cont&#39;vc.1.1.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.21" steps="539148"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_cont&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.18" steps="615123"/></proof>
  </goal>
  <goal name="pps_cont&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="674237"/></proof>
  </goal>
  <goal name="pps_cont&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_cont&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="pps_cont&#39;vc.4.0.0" expl="VC for pps_cont" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="pps_cont&#39;vc.4.0.0.0" expl="VC for pps_cont" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_cont&#39;vc.4.0.0.0.0" expl="VC for pps_cont" proved="true">
      <transf name="apply" proved="true" arg1="pps&#39;invariant3">
       <goal name="pps_cont&#39;vc.4.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_cont&#39;vc.4.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.05" steps="787323"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_cont&#39;vc.4.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.91" steps="786264"/></proof>
       </goal>
       <goal name="pps_cont&#39;vc.4.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="0.90" steps="683727"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_cont&#39;vc.4.0.0.0.1" expl="VC for pps_cont" proved="true">
      <proof prover="8"><result status="valid" time="2.01" steps="786127"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_cont&#39;vc.4.0.1" expl="VC for pps_cont" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="pps_cont&#39;vc.4.0.1.0" expl="VC for pps_cont" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_cont&#39;vc.4.0.1.0.0" expl="VC for pps_cont" proved="true">
      <transf name="apply" proved="true" arg1="pps&#39;invariant2">
       <goal name="pps_cont&#39;vc.4.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_cont&#39;vc.4.0.1.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.07" steps="787323"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_cont&#39;vc.4.0.1.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.01" steps="786264"/></proof>
       </goal>
       <goal name="pps_cont&#39;vc.4.0.1.0.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.05" steps="683727"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_cont&#39;vc.4.0.1.0.1" expl="VC for pps_cont" proved="true">
      <proof prover="8"><result status="valid" time="2.25" steps="786121"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_cont&#39;vc.5" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_cont&#39;vc.5.0" expl="precondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="pps_cont&#39;vc.5.0.0" expl="VC for pps_cont" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="pps_cont&#39;vc.5.0.0.0" expl="precondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="pps_cont&#39;vc.5.0.0.0.0" expl="precondition" proved="true">
      <transf name="apply" proved="true" arg1="pps&#39;invariant1">
       <goal name="pps_cont&#39;vc.5.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_cont&#39;vc.5.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.30" steps="797908"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_cont&#39;vc.5.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_cont&#39;vc.5.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.66" steps="732735"/></proof>
        </goal>
       </transf>
       <transf name="split_vc" proved="true" >
        <goal name="pps_cont&#39;vc.5.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.03" steps="796839"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_cont&#39;vc.5.0.0.0.0.2" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="pps_cont&#39;vc.5.0.0.0.0.2.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.94" steps="693844"/></proof>
        </goal>
        <goal name="pps_cont&#39;vc.5.0.0.0.0.2.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.04" steps="693846"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_cont&#39;vc.5.0.0.1" expl="precondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="pps_cont&#39;vc.5.0.0.1.0" expl="precondition" proved="true">
      <proof prover="8"><result status="valid" time="2.28" steps="797417"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_cont&#39;vc.5.0.0.2" expl="precondition" proved="true">
     <proof prover="8"><result status="valid" time="1.90" steps="682920"/></proof>
     </goal>
     <goal name="pps_cont&#39;vc.5.0.0.3" expl="precondition" proved="true">
     <proof prover="8"><result status="valid" time="1.94" steps="682291"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_cont&#39;vc.6" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_cont&#39;vc.6.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="ang_add_eq">
    <goal name="pps_cont&#39;vc.6.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="ang_mult_int_eq">
     <goal name="pps_cont&#39;vc.6.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.92" steps="677104"/></proof>
     </goal>
     <goal name="pps_cont&#39;vc.6.0.0.1" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="pps_cont&#39;vc.6.0.0.1.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="pps&#39;invariant">
       <goal name="pps_cont&#39;vc.6.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_cont&#39;vc.6.0.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.22" steps="785648"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_cont&#39;vc.6.0.0.1.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.61" steps="719798"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_cont&#39;vc.6.0.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="ang_mult_int_eq">
     <goal name="pps_cont&#39;vc.6.0.1.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.86" steps="677129"/></proof>
     </goal>
     <goal name="pps_cont&#39;vc.6.0.1.1" expl="apply premises" proved="true">
     <transf name="case" proved="true" arg1="(h_range h = 0)">
      <goal name="pps_cont&#39;vc.6.0.1.1.0" expl="apply premises (true case)" proved="true">
      <transf name="replace" proved="true" arg1="(arc_cos_ang (pow_inv_sqrt_2 (h_range h1)))" arg2="ang_zero">
       <goal name="pps_cont&#39;vc.6.0.1.1.0.0" expl="apply premises (true case)" proved="true">
       <transf name="replace" proved="true" arg1="(ang_zero -^ (y @ 0))" arg2="ang_zero">
        <goal name="pps_cont&#39;vc.6.0.1.1.0.0.0" expl="apply premises (true case)" proved="true">
        <transf name="replace" proved="true" arg1="(ang_zero -^ (y&#39; @ 0))" arg2="ang_zero">
         <goal name="pps_cont&#39;vc.6.0.1.1.0.0.0.0" expl="apply premises (true case)" proved="true">
         <proof prover="8"><result status="valid" time="0.83" steps="582588"/></proof>
         </goal>
         <goal name="pps_cont&#39;vc.6.0.1.1.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="case" proved="true" arg1="(even (y&#39; 0))">
          <goal name="pps_cont&#39;vc.6.0.1.1.0.0.0.1.0" expl="equality hypothesis (true case)" proved="true">
          <proof prover="8"><result status="valid" time="1.45" steps="617901"/></proof>
          </goal>
          <goal name="pps_cont&#39;vc.6.0.1.1.0.0.0.1.1" expl="equality hypothesis (false case)" proved="true">
          <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
           <goal name="pps_cont&#39;vc.6.0.1.1.0.0.0.1.1.0" expl="equality hypothesis (false case)" proved="true">
           <proof prover="8"><result status="valid" time="1.90" steps="677737"/></proof>
           </goal>
           <goal name="pps_cont&#39;vc.6.0.1.1.0.0.0.1.1.1" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="1.41" steps="56475"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="pps_cont&#39;vc.6.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="case" proved="true" arg1="(even (y 0))">
         <goal name="pps_cont&#39;vc.6.0.1.1.0.0.1.0" expl="equality hypothesis (true case)" proved="true">
         <proof prover="8"><result status="valid" time="1.43" steps="617901"/></proof>
         </goal>
         <goal name="pps_cont&#39;vc.6.0.1.1.0.0.1.1" expl="equality hypothesis (false case)" proved="true">
         <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
          <goal name="pps_cont&#39;vc.6.0.1.1.0.0.1.1.0" expl="equality hypothesis (false case)" proved="true">
          <proof prover="8"><result status="valid" time="1.86" steps="677737"/></proof>
          </goal>
          <goal name="pps_cont&#39;vc.6.0.1.1.0.0.1.1.1" expl="rewrite premises" proved="true">
          <proof prover="4"><result status="valid" time="1.36" steps="56475"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_cont&#39;vc.6.0.1.1.0.1" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="4.29" steps="1221999"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_cont&#39;vc.6.0.1.1.1" expl="apply premises (false case)" proved="true">
      <proof prover="8"><result status="valid" time="1.85" steps="677370"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_cont&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.74" steps="580928"/></proof>
  </goal>
  <goal name="pps_cont&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.93" steps="580931"/></proof>
  </goal>
  <goal name="pps_cont&#39;vc.9" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H1">
   <goal name="pps_cont&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_cont&#39;vc.10" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H">
   <goal name="pps_cont&#39;vc.10.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_cont&#39;vc" expl="VC for pps_apply_cont" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_cont&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
   <goal name="pps_apply_cont&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(h_width (pps_cont h co t n))" arg2="n">
    <goal name="pps_apply_cont&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(h_range (pps_cont h co t n))" arg2="(h_range h)">
     <goal name="pps_apply_cont&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="((h_range h) = 0)">
      <goal name="pps_apply_cont&#39;vc.0.0.0.0.0" expl="true case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
       <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
        <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
         <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
          <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
          <transf name="apply" proved="true" arg1="bv_to_ket_eq">
           <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length">
            <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="0.74" steps="474840"/></proof>
            </goal>
            <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.94" steps="663592"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.94" steps="664974"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.66" steps="663021"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.63" steps="663592"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.94" steps="664974"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.93" steps="663021"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.19" steps="506789"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
             <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <proof prover="0"><result status="valid" time="0.68"/></proof>
             </goal>
             <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.88" steps="735226"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.87" steps="735753"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.1.0.1.0.0.2" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.21" steps="734550"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.20" steps="735226"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.1.0.1.1.0.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.21" steps="735753"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.1.0.1.1.0.2" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.87" steps="734550"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="0.71"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="case" proved="true" arg1="( (t + h_width h1) &lt;= co)">
            <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises (true case)" proved="true">
            <transf name="rewrite" proved="true" arg1="pps_cont&#39;spec">
             <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises (true case)" proved="true">
             <transf name="rewrite" proved="true" arg1="ang_zero_add">
              <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="rewrite premises (true case)" proved="true">
              <transf name="replace" proved="true" arg1="(arc_cos_ang (pow_inv_sqrt_2 (h_range h2)))" arg2="ang_zero">
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="rewrite premises (true case)" proved="true">
               <transf name="replace" proved="true" arg1="(ang_zero -^ (getbv (int_to_bv 0 0) @ 0))" arg2="ang_zero">
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="rewrite premises (true case)" proved="true">
                <proof prover="8"><result status="valid" time="1.30" steps="594737"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="8"><result status="valid" time="1.40" steps="593735"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="4.22" steps="1180239"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.69" steps="651510"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="0.69" steps="557618"/></proof>
             </goal>
             <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="0.85" steps="557620"/></proof>
             </goal>
             <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.0.3" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="0.69" steps="557611"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises (false case)" proved="true">
            <transf name="rewrite" proved="true" arg1="pps_cont&#39;spec4">
             <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises (false case)" proved="true">
             <transf name="rewrite" proved="true" arg1="ang_zero_add">
              <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises (false case)" proved="true">
              <transf name="replace" proved="true" arg1="(arc_cos_ang (pow_inv_sqrt_2 (h_range h2)))" arg2="ang_zero">
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises (false case)" proved="true">
               <proof prover="8"><result status="valid" time="1.50" steps="594747"/></proof>
               </goal>
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="4.35" steps="1180191"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.55" steps="651506"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="0.87" steps="557623"/></proof>
             </goal>
             <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.1.2" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="0.88" steps="557625"/></proof>
             </goal>
             <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.0.0.1.0.1.3" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="0.87" steps="557616"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.22" steps="506789"/></proof>
        </goal>
        <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.57" steps="474833"/></proof>
        </goal>
        <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.87"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_cont&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.44" steps="572714"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_cont&#39;vc.0.0.0.0.1" expl="false case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="ket_sum_n_bvs_pos">
       <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0" expl="false case (postcondition)" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0" expl="false case (postcondition)" proved="true">
        <transf name="replace" proved="true" arg1="(ket_sum_l (n_bvs (h_range h1 - 1))
        (fun (bv1:bitvec) -&gt;
          ang_exp
          ((h_angle (pps_cont h1 co t n) @ getbv bv) @ getbv (concat_l bv1 0))
          *.. bv_to_ket
              (make_bv
               ((h_basis_ket (pps_cont h1 co t n) @ getbv bv)
                @ getbv (concat_l bv1 0))
               n))
        n)" arg2="(ket_sum_l (n_bvs (h_range h1 - 1))
        (fun (bv1:bitvec) -&gt; ang_exp (arc_cos_ang (pow_inv_sqrt_2 (h_range h1)))*.. bv_to_ket bv)
        n)">
         <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
         <transf name="replace" proved="true" arg1="(ket_sum_l (n_bvs (h_range h1 - 1))
        (fun (bv1:bitvec) -&gt;
          ang_exp
          ((h_angle (pps_cont h1 co t n) @ getbv bv) @ getbv (concat_l bv1 1))
          *.. bv_to_ket
              (make_bv
               ((h_basis_ket (pps_cont h1 co t n) @ getbv bv)
                @ getbv (concat_l bv1 1))
               n))
        n)" arg2="(ket_sum_l (n_bvs (h_range h1 - 1))
        (fun (bv1:bitvec) -&gt; ang_exp (ang_inv(arc_cos_ang (pow_inv_sqrt_2 (h_range h1))))*.. bv_to_ket bv)
        n)">
          <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0" expl="false case (postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="ket_sum_const">
           <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="ket_sum_const">
            <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
            <transf name="rewrite" proved="true" arg1="add_ket_l_scal">
             <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
             <transf name="rewrite" proved="true" arg1="add_ket_scal_fact">
              <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
              <transf name="rewrite" proved="true" arg1="arc_cos_ang_exp_plus_inv">
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
               <transf name="rewrite" proved="true" arg1="scalar_assoc">
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
                <transf name="rewrite" proved="true" arg1="scalar_assoc">
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
                 <transf name="rewrite" proved="true" arg1="n_bvs_card">
                  <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
                  <transf name="assert" proved="true" arg1="(forall a b c d. (a*.b)*.(c*.d) = (a*.d) *. (b*.c))">
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                   <proof prover="8"><result status="valid" time="1.39" steps="572467"/></proof>
                   </goal>
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="false case (postcondition)" proved="true">
                   <transf name="rewrite" proved="true" arg1="h">
                    <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="false case (postcondition)" proved="true">
                    <transf name="apply" proved="true" arg1="scalar_c_one_gen">
                     <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                     <transf name="replace" proved="true" arg1="(pow_inv_sqrt_2 (h_range h2) *. pow_inv_sqrt_2 (h_range h2))" arg2="(pow_inv_2 (h_range h2))">
                      <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="1.65" steps="573009"/></proof>
                      </goal>
                      <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                      <proof prover="8"><result status="valid" time="1.71" steps="569915"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.63" steps="568823"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0" proved="true">
                <proof prover="8"><result status="valid" time="1.88" steps="579797"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.0.1.1" proved="true">
                <proof prover="8"><result status="valid" time="1.39" steps="569383"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.25" steps="507131"/></proof>
              </goal>
              <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="0.98" steps="506803"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.34" steps="569653"/></proof>
             </goal>
             <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.37" steps="569834"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="0.98" steps="506803"/></proof>
            </goal>
            <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.37" steps="569834"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.19" steps="506803"/></proof>
           </goal>
           <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.44" steps="569653"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
           <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="1.24" steps="506803"/></proof>
           </goal>
           <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="0.61" steps="474835"/></proof>
           </goal>
           <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.2" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="0.75" steps="474835"/></proof>
           </goal>
           <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="scalar_eq_gen">
              <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="bv_to_ket_eq">
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="make_bv_length">
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="0.70" steps="545485"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.0.1" expl="rewrite premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                    <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.28" steps="750182"/></proof>
                    </goal>
                    <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.94" steps="751292"/></proof>
                    </goal>
                    <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.25" steps="749666"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                    <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.23" steps="750182"/></proof>
                    </goal>
                    <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.22" steps="751292"/></proof>
                    </goal>
                    <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.19" steps="749666"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="1.42" steps="579690"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="0"><result status="valid" time="0.69"/></proof>
                 </goal>
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                    <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.27" steps="822496"/></proof>
                    </goal>
                    <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1.0.1.0.0.1.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.24" steps="822737"/></proof>
                     </goal>
                     <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1.0.1.0.0.1.1" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.12" steps="822731"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1.0.1.0.0.2" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.14" steps="821930"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                    <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.51" steps="822496"/></proof>
                    </goal>
                    <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1.0.1.1.0.1" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1.0.1.1.0.1.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.53" steps="822737"/></proof>
                     </goal>
                     <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1.0.1.1.0.1.1" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.11" steps="822731"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1.0.1.1.0.2" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.11" steps="821930"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                 <proof prover="0"><result status="valid" time="0.98"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1" expl="apply premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0" expl="apply premises" proved="true">
               <transf name="case" proved="true" arg1="((t + h_width h1) &lt;= co)">
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0.0" expl="apply premises (true case)" proved="true">
                <transf name="rewrite" proved="true" arg1="pps_cont&#39;spec">
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0.0.0" expl="apply premises (true case)" proved="true">
                 <transf name="rewrite" proved="true" arg1="ang_zero_add">
                  <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0.0.0.0" expl="apply premises (true case)" proved="true">
                  <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0.0.0.0.0" expl="apply premises (true case)" proved="true">
                   <proof prover="8"><result status="valid" time="1.49" steps="680011"/></proof>
                   </goal>
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="1.94" steps="755562"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.59" steps="736765"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.06" steps="640322"/></proof>
                 </goal>
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.00" steps="640324"/></proof>
                 </goal>
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0.0.3" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.00" steps="640315"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0.1" expl="apply premises (false case)" proved="true">
                <transf name="rewrite" proved="true" arg1="pps_cont&#39;spec4">
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0.1.0" expl="apply premises (false case)" proved="true">
                 <transf name="rewrite" proved="true" arg1="ang_zero_add">
                  <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0.1.0.0" expl="apply premises (false case)" proved="true">
                  <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0.1.0.0.0" expl="apply premises (false case)" proved="true">
                   <proof prover="8"><result status="valid" time="1.69" steps="680007"/></proof>
                   </goal>
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.23" steps="755535"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.90" steps="736756"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.02" steps="640327"/></proof>
                 </goal>
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0.1.2" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="0.95" steps="640329"/></proof>
                 </goal>
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.0.1.3.0.0.1.0.1.3" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.01" steps="640320"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
          <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.21" steps="506803"/></proof>
          </goal>
          <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="0.75" steps="474835"/></proof>
          </goal>
          <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="0.73" steps="474835"/></proof>
          </goal>
          <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="scalar_eq_gen">
             <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="bv_to_ket_eq">
              <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="make_bv_length">
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="0.69" steps="545485"/></proof>
               </goal>
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.0.1" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.14" steps="750182"/></proof>
                   </goal>
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.23" steps="751278"/></proof>
                   </goal>
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.25" steps="749666"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.24" steps="750182"/></proof>
                   </goal>
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.16" steps="751278"/></proof>
                   </goal>
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.13" steps="749666"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="1.36" steps="579690"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="0.69"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.58" steps="822482"/></proof>
                   </goal>
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1.0.1.0.0.1.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.62" steps="822728"/></proof>
                    </goal>
                    <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1.0.1.0.0.1.1" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.49" steps="822717"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1.0.1.0.0.2" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.48" steps="821916"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.52" steps="822482"/></proof>
                   </goal>
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1.0.1.1.0.1" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1.0.1.1.0.1.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.22" steps="822728"/></proof>
                    </goal>
                    <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1.0.1.1.0.1.1" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.52" steps="822717"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1.0.1.1.0.2" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.60" steps="821916"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                <proof prover="0"><result status="valid" time="0.81"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1" expl="apply premises" proved="true">
             <transf name="case" proved="true" arg1="((t + h_width h1) &lt;= co)">
              <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.0" expl="apply premises (true case)" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.0.0" expl="apply premises (true case)" proved="true">
               <transf name="rewrite" proved="true" arg1="pps_cont&#39;spec">
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.0.0.0" expl="apply premises (true case)" proved="true">
                <transf name="rewrite" proved="true" arg1="ang_zero_add">
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.0.0.0.0" expl="apply premises (true case)" proved="true">
                 <transf name="rewrite" proved="true" arg1="Even_phase_inv">
                  <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.0.0.0.0.0" expl="apply premises (true case)" proved="true">
                  <proof prover="8"><result status="valid" time="1.70" steps="680007"/></proof>
                  </goal>
                  <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.86" steps="751958"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.57" steps="736765"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="1.05" steps="640322"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="0.81" steps="640324"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.0.0.3" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="1.00" steps="640315"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.1" expl="apply premises (false case)" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.1.0" expl="apply premises (false case)" proved="true">
               <transf name="rewrite" proved="true" arg1="pps_cont&#39;spec4">
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.1.0.0" expl="apply premises (false case)" proved="true">
                <transf name="rewrite" proved="true" arg1="ang_zero_add">
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.1.0.0.0" expl="apply premises (false case)" proved="true">
                 <transf name="rewrite" proved="true" arg1="Even_phase_inv">
                  <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.1.0.0.0.0" expl="apply premises (false case)" proved="true">
                  <proof prover="8"><result status="valid" time="1.41" steps="680003"/></proof>
                  </goal>
                  <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.84" steps="751933"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.84" steps="736756"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="1.01" steps="640327"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.1.0.2" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="1.01" steps="640329"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.0.0.1.3.0.0.1.1.0.3" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="0.98" steps="640320"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.17" steps="506803"/></proof>
       </goal>
       <goal name="pps_apply_cont&#39;vc.0.0.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.37" steps="568812"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_cont&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="0"><result status="valid" time="0.63"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="pps_apply_cont&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="0"><result status="valid" time="0.62"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_cont&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.63"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_apply_cont&#39;vc.1" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
   <goal name="pps_apply_cont&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
    <goal name="pps_apply_cont&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="scalar_eq_gen">
     <goal name="pps_apply_cont&#39;vc.1.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
      <goal name="pps_apply_cont&#39;vc.1.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.41" steps="569359"/></proof>
      </goal>
      <goal name="pps_apply_cont&#39;vc.1.0.0.0.1" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(h_range (pps_place h t n))" arg2="(h_range h)">
       <goal name="pps_apply_cont&#39;vc.1.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="pps_apply_cont&#39;vc.1.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="case" proved="true" arg1="((t + h_width h) &lt;= co)">
         <goal name="pps_apply_cont&#39;vc.1.0.0.0.1.0.0.0" expl="apply premises (true case)" proved="true">
         <proof prover="8"><result status="valid" time="1.68" steps="662762"/></proof>
         </goal>
         <goal name="pps_apply_cont&#39;vc.1.0.0.0.1.0.0.1" expl="apply premises (false case)" proved="true">
         <proof prover="8"><result status="valid" time="1.69" steps="662726"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_cont&#39;vc.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="0"><result status="valid" time="0.66"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_cont&#39;vc.1.0.0.0.2" expl="apply premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="pps_apply_cont&#39;vc.1.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="case" proved="true" arg1="((t + h_width h) &lt;= co)">
        <goal name="pps_apply_cont&#39;vc.1.0.0.0.2.0.0" expl="apply premises (true case)" proved="true">
        <proof prover="8"><result status="valid" time="1.98" steps="662837"/></proof>
        </goal>
        <goal name="pps_apply_cont&#39;vc.1.0.0.0.2.0.1" expl="apply premises (false case)" proved="true">
        <proof prover="8"><result status="valid" time="1.97" steps="662796"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_cont&#39;vc.1.0.0.0.3" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="scalar_eq_gen">
         <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="bv_to_ket_eq">
          <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length">
            <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="case" proved="true" arg1="((t + h_width h) &lt;= co)">
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises (true case)" proved="true">
              <proof prover="8"><result status="valid" time="2.24" steps="749243"/></proof>
              </goal>
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.0.0.0.1" expl="apply premises (false case)" proved="true">
              <proof prover="8"><result status="valid" time="1.89" steps="749207"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="pps&#39;invariant3">
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.81" steps="750643"/></proof>
               </goal>
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.16" steps="751349"/></proof>
               </goal>
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="0.99" steps="640446"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="pps&#39;invariant2">
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.19" steps="750643"/></proof>
               </goal>
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.15" steps="751349"/></proof>
               </goal>
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.03" steps="640446"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.87" steps="644931"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="pps&#39;invariant3">
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="2.12" steps="750115"/></proof>
              </goal>
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="2.10" steps="750816"/></proof>
              </goal>
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="0.80" steps="640436"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.1.1" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="pps&#39;invariant2">
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="2.16" steps="750115"/></proof>
              </goal>
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="2.13" steps="750816"/></proof>
              </goal>
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="1.01" steps="640436"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.60" steps="644561"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
            <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
             <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0" expl="apply premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <transf name="case" proved="true" arg1="((t + h_width h) &lt;= co)">
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.0" expl="apply premises (true case)" proved="true">
               <transf name="rewrite" proved="true" arg1="pps_cont&#39;spec1">
                <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.0.0" expl="apply premises (true case)" proved="true">
                <transf name="rewrite" proved="true" arg1="pps_place&#39;spec1">
                 <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises (true case)" proved="true">
                 <transf name="eliminate_if" proved="true" >
                  <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.0.0.0.0" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises (true case)" proved="true">
                   <transf name="compute_specified" proved="true" >
                   </transf>
                   </goal>
                   <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.0.0.0.0.1" expl="apply premises (true case)" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.0.0.0.0.1.0" expl="apply premises (true case)" proved="true">
                    <proof prover="8"><result status="valid" time="1.01" steps="712837"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.0.0.0.0.2" expl="apply premises (true case)" proved="true">
                   <proof prover="8"><result status="valid" time="1.15" steps="712838"/></proof>
                   </goal>
                   <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.0.0.0.0.3" expl="apply premises (true case)" proved="true">
                   <proof prover="8"><result status="valid" time="1.15" steps="712747"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="0.91" steps="707687"/></proof>
                 </goal>
                 <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.11" steps="707694"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="1.14" steps="707694"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="1.15" steps="707696"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="1.12" steps="707687"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.1" expl="apply premises (false case)" proved="true">
               <transf name="rewrite" proved="true" arg1="pps_place&#39;spec1">
                <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.1.0" expl="apply premises (false case)" proved="true">
                <transf name="rewrite" proved="true" arg1="pps_cont&#39;spec5">
                 <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.1.0.0" expl="apply premises (false case)" proved="true">
                 <transf name="eliminate_if" proved="true" >
                  <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.1.0.0.0" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.1.0.0.0.0" expl="apply premises (false case)" proved="true">
                   <transf name="compute_specified" proved="true" >
                   </transf>
                   </goal>
                   <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.1.0.0.0.1" expl="apply premises (false case)" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.1.0.0.0.1.0" expl="apply premises (false case)" proved="true">
                    <proof prover="8"><result status="valid" time="0.98" steps="712842"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.1.0.0.0.2" expl="apply premises (false case)" proved="true">
                   <proof prover="8"><result status="valid" time="1.09" steps="712843"/></proof>
                   </goal>
                   <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.1.0.0.0.3" expl="apply premises (false case)" proved="true">
                   <proof prover="8"><result status="valid" time="1.15" steps="712752"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.15" steps="707699"/></proof>
                 </goal>
                 <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.17" steps="707701"/></proof>
                 </goal>
                 <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="0.89" steps="707692"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="0.90" steps="707692"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="0.96" steps="707699"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.16" steps="822714"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.1.0.0.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.48" steps="822930"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.1.0.0.2" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="0.91" steps="707732"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.1.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.1.1.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.12" steps="822714"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.1.1.0.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.12" steps="822930"/></proof>
                </goal>
                <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.1.1.0.2" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.14" steps="707732"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="0.72"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="pps&#39;invariant3">
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.55" steps="822218"/></proof>
               </goal>
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.58" steps="822429"/></proof>
               </goal>
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.1.0.0.2" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="0.94" steps="707718"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="pps&#39;invariant2">
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.46" steps="822218"/></proof>
               </goal>
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.1.1.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.41" steps="822429"/></proof>
               </goal>
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.1.1.0.2" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="0.90" steps="707718"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.0.1.0.2" expl="rewrite premises" proved="true">
            <proof prover="0"><result status="valid" time="0.71"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1" expl="apply premises" proved="true">
         <transf name="case" proved="true" arg1="((t + h_width h) &lt;= co)">
          <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.0" expl="apply premises (true case)" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.0.0" expl="apply premises (true case)" proved="true">
           <transf name="rewrite" proved="true" arg1="pps_cont&#39;spec">
            <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.0.0.0" expl="apply premises (true case)" proved="true">
            <transf name="rewrite" proved="true" arg1="pps_place&#39;spec">
             <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.0.0.0.0" expl="apply premises (true case)" proved="true">
             <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.0.0.0.0.0" expl="apply premises (true case)" proved="true">
              <transf name="rewrite" proved="true" arg1="ang_mult_int_one">
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.0.0.0.0.0.0" expl="apply premises (true case)" proved="true">
               <transf name="compute_specified" proved="true" >
               </transf>
               </goal>
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="0.84" steps="640401"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.75" steps="679196"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.01" steps="640401"/></proof>
             </goal>
             <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.04" steps="640408"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.06" steps="640408"/></proof>
            </goal>
            <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.04" steps="640410"/></proof>
            </goal>
            <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.01" steps="640401"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.1" expl="apply premises (false case)" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.1.0" expl="apply premises (false case)" proved="true">
           <transf name="rewrite" proved="true" arg1="pps_cont&#39;spec4">
            <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.1.0.0" expl="apply premises (false case)" proved="true">
            <transf name="rewrite" proved="true" arg1="pps_place&#39;spec">
             <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.1.0.0.0" expl="apply premises (false case)" proved="true">
             <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.1.0.0.0.0" expl="apply premises (false case)" proved="true">
              <transf name="rewrite" proved="true" arg1="ang_mult_int_one">
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.1.0.0.0.0.0" expl="apply premises (false case)" proved="true">
               <transf name="compute_specified" proved="true" >
               </transf>
               </goal>
               <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="1.06" steps="640406"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.79" steps="679182"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.07" steps="640406"/></proof>
             </goal>
             <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.1.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.10" steps="640413"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.07" steps="640413"/></proof>
            </goal>
            <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.1.0.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.12" steps="640415"/></proof>
            </goal>
            <goal name="pps_apply_cont&#39;vc.1.0.0.0.3.0.0.1.1.0.3" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.11" steps="640406"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_cont&#39;vc.1.0.0.1" expl="apply premises" proved="true">
     <transf name="case" proved="true" arg1="((t + h_width h) &lt;= co)">
      <goal name="pps_apply_cont&#39;vc.1.0.0.1.0" expl="apply premises (true case)" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="pps_apply_cont&#39;vc.1.0.0.1.0.0" expl="apply premises (true case)" proved="true">
       <proof prover="8"><result status="valid" time="2.03" steps="663363"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_cont&#39;vc.1.0.0.1.1" expl="apply premises (false case)" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="pps_apply_cont&#39;vc.1.0.0.1.1.0" expl="apply premises (false case)" proved="true">
       <proof prover="8"><result status="valid" time="1.77" steps="663322"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_apply_cont&#39;vc.1.0.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.64"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_cont&#39;vc.1.1" expl="rewrite premises" proved="true">
   <proof prover="4"><result status="valid" time="1.42" steps="56693"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="h_basis_ket_bv_seq&#39;vc" expl="VC for h_basis_ket_bv_seq" proved="true">
 <transf name="split_all_full" proved="true" >
  <goal name="h_basis_ket_bv_seq&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="h_basis_ket_bv_seq&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_equal_bv">
    <goal name="h_basis_ket_bv_seq&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;spec1">
     <goal name="h_basis_ket_bv_seq&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.87" steps="641734"/></proof>
     </goal>
     <goal name="h_basis_ket_bv_seq&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.13" steps="566141"/></proof>
     </goal>
     <goal name="h_basis_ket_bv_seq&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.85" steps="634257"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;spec">
      <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;spec">
       <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="pps_seq&#39;spec1">
        <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="pps&#39;invariant1">
         <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;spec">
           <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant1">
            <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="0.82" steps="528807"/></proof>
            </goal>
            <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.92" steps="670488"/></proof>
            </goal>
            <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.30" steps="565550"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.79" steps="528809"/></proof>
           </goal>
           <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.78" steps="637385"/></proof>
           </goal>
           <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.10" steps="565550"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.65" steps="672283"/></proof>
         </goal>
         <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.56" steps="642854"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.79" steps="528784"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.52" steps="637743"/></proof>
       </goal>
       <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.85" steps="642335"/></proof>
       </goal>
       <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.59" steps="642854"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.14" steps="566200"/></proof>
      </goal>
      <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.80" steps="636252"/></proof>
      </goal>
      <goal name="h_basis_ket_bv_seq&#39;vc.0.0.1.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.54" steps="643315"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="h_angle_bv_seq&#39;vc" expl="VC for h_angle_bv_seq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="h_angle_bv_seq&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="h_angle_bv&#39;def">
   <goal name="h_angle_bv_seq&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="h_angle_bv_seq&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_seq&#39;spec">
     <goal name="h_angle_bv_seq&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="ang_add_eq">
      <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="h_angle_bv&#39;def">
       <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="pps&#39;invariant">
        <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.65" steps="528914"/></proof>
        </goal>
        <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.58" steps="668720"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.65" steps="528916"/></proof>
       </goal>
       <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.43" steps="635089"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="h_angle_bv&#39;def">
       <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="pps&#39;invariant">
        <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;def">
          <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
           <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant1">
            <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="0.65" steps="528939"/></proof>
            </goal>
            <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.53" steps="668771"/></proof>
            </goal>
            <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.05" steps="565644"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="pps&#39;invariant3">
             <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.55" steps="666127"/></proof>
             </goal>
             <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0.0.0.1.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.54" steps="667159"/></proof>
             </goal>
             <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0.0.0.1.0.2" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.65" steps="528975"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="pps&#39;invariant2">
             <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0.0.0.1.1.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.51" steps="666127"/></proof>
             </goal>
             <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0.0.0.1.1.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.52" steps="667159"/></proof>
             </goal>
             <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0.0.0.1.1.2" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.62" steps="528975"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.03" steps="565644"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.65" steps="528941"/></proof>
          </goal>
          <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.42" steps="635107"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.57" steps="670418"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.43" steps="635395"/></proof>
       </goal>
       <goal name="h_angle_bv_seq&#39;vc.0.0.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.43" steps="638448"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="h_angle_bv_seq&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.65" steps="528916"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="h_angle_bv_seq&#39;vc.0.1" expl="rewrite premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="h_angle_bv_seq&#39;vc.0.1.0" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.11" steps="566305"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="h_angle_bv_seq&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.57"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_par&#39;vc" expl="VC for pps_par" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_par&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.72" steps="676817"/></proof>
  </goal>
  <goal name="pps_par&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="676850"/></proof>
  </goal>
  <goal name="pps_par&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_par&#39;vc.2.0" expl="precondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="pps_par&#39;vc.2.0.0" expl="precondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="pps_par&#39;vc.2.0.0.0" expl="VC for pps_par" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_par&#39;vc.2.0.0.0.0" expl="VC for pps_par" proved="true">
      <transf name="apply" proved="true" arg1="pps&#39;invariant3">
       <goal name="pps_par&#39;vc.2.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.17" steps="806567"/></proof>
       </goal>
       <goal name="pps_par&#39;vc.2.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.12" steps="806446"/></proof>
       </goal>
       <goal name="pps_par&#39;vc.2.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="0.90" steps="700486"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_par&#39;vc.2.0.0.1" expl="VC for pps_par" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_par&#39;vc.2.0.0.1.0" expl="VC for pps_par" proved="true">
      <transf name="apply" proved="true" arg1="pps&#39;invariant3">
       <goal name="pps_par&#39;vc.2.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="pps_par&#39;vc.2.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="pps_par&#39;vc.2.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.11" steps="805819"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="pps_par&#39;vc.2.0.0.1.0.0.1" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="pps_par&#39;vc.2.0.0.1.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.18" steps="805808"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_par&#39;vc.2.0.0.1.0.1" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="pps_par&#39;vc.2.0.0.1.0.1.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="pps_par&#39;vc.2.0.0.1.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.28" steps="805824"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="pps_par&#39;vc.2.0.0.1.0.1.1" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="pps_par&#39;vc.2.0.0.1.0.1.1.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.34" steps="805803"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_par&#39;vc.2.0.0.1.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="0.98" steps="700516"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_par&#39;vc.2.0.0.2" expl="VC for pps_par" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_par&#39;vc.2.0.0.2.0" expl="VC for pps_par" proved="true">
      <transf name="apply" proved="true" arg1="pps&#39;invariant2">
       <goal name="pps_par&#39;vc.2.0.0.2.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.22" steps="806567"/></proof>
       </goal>
       <goal name="pps_par&#39;vc.2.0.0.2.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.21" steps="806446"/></proof>
       </goal>
       <goal name="pps_par&#39;vc.2.0.0.2.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="0.95" steps="700486"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_par&#39;vc.2.0.0.3" expl="VC for pps_par" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_par&#39;vc.2.0.0.3.0" expl="VC for pps_par" proved="true">
      <transf name="apply" proved="true" arg1="pps&#39;invariant2">
       <goal name="pps_par&#39;vc.2.0.0.3.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_par&#39;vc.2.0.0.3.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.02" steps="806470"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_par&#39;vc.2.0.0.3.0.1" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_par&#39;vc.2.0.0.3.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.01" steps="806465"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_par&#39;vc.2.0.0.3.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="0.91" steps="700516"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_par&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_par&#39;vc.3.0" expl="precondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="pps_par&#39;vc.3.0.0" expl="VC for pps_par" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="pps_par&#39;vc.3.0.0.0" expl="precondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="pps_par&#39;vc.3.0.0.0.0" expl="precondition" proved="true">
      <transf name="apply" proved="true" arg1="pps&#39;invariant1">
       <goal name="pps_par&#39;vc.3.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="pps_par&#39;vc.3.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.22" steps="807028"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_par&#39;vc.3.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="pps_par&#39;vc.3.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.27" steps="807028"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_par&#39;vc.3.0.0.0.0.2" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="pps_par&#39;vc.3.0.0.0.0.2.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.06" steps="701729"/></proof>
        </goal>
        <goal name="pps_par&#39;vc.3.0.0.0.0.2.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.02" steps="701740"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_par&#39;vc.3.0.0.1" expl="precondition" proved="true">
     <proof prover="8"><result status="valid" time="0.71" steps="590366"/></proof>
     </goal>
     <goal name="pps_par&#39;vc.3.0.0.2" expl="precondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="pps_par&#39;vc.3.0.0.2.0" expl="precondition" proved="true">
      <proof prover="8"><result status="valid" time="0.91" steps="701882"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_par&#39;vc.3.0.0.3" expl="precondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="pps_par&#39;vc.3.0.0.3.0" expl="precondition" proved="true">
      <transf name="apply" proved="true" arg1="pps&#39;invariant1">
       <goal name="pps_par&#39;vc.3.0.0.3.0.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="pps_par&#39;vc.3.0.0.3.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="pps_par&#39;vc.3.0.0.3.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.17" steps="807035"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_par&#39;vc.3.0.0.3.0.1" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_par&#39;vc.3.0.0.3.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.05" steps="807104"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_par&#39;vc.3.0.0.3.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="0.85" steps="701765"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_par&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_par&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="ang_add_eq">
    <goal name="pps_par&#39;vc.4.0.0" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="pps_par&#39;vc.4.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="pps&#39;invariant">
      <goal name="pps_par&#39;vc.4.0.0.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_par&#39;vc.4.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.20" steps="791108"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_par&#39;vc.4.0.0.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_par&#39;vc.4.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.12" steps="791108"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_par&#39;vc.4.0.1" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="pps_par&#39;vc.4.0.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="pps&#39;invariant">
      <goal name="pps_par&#39;vc.4.0.1.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_par&#39;vc.4.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_par&#39;vc.4.0.1.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.82" steps="791123"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_par&#39;vc.4.0.1.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_par&#39;vc.4.0.1.0.1.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_par&#39;vc.4.0.1.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.84" steps="791123"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_par&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.76" steps="582810"/></proof>
  </goal>
  <goal name="pps_par&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.72" steps="582813"/></proof>
  </goal>
  <goal name="pps_par&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H1">
   <goal name="pps_par&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_par&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H">
   <goal name="pps_par&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="h_basis_ket_bv_par&#39;vc" expl="VC for h_basis_ket_bv_par" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="h_basis_ket_bv_par&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;def">
   <goal name="h_basis_ket_bv_par&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_equal_bv">
    <goal name="h_basis_ket_bv_par&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="0.77"/></proof>
    </goal>
    <goal name="h_basis_ket_bv_par&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="concat_value">
      <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="eliminate_if" proved="true" >
       <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
         <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;spec1">
           <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;spec">
            <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="pps_par&#39;spec1">
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="pps&#39;invariant1">
              <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.89" steps="763938"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.91" steps="763920"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.75" steps="757966"/></proof>
               </goal>
               <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0.2.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.20" steps="770435"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.11" steps="757967"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.21" steps="764433"/></proof>
            </goal>
            <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.21" steps="764434"/></proof>
            </goal>
            <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.24" steps="767268"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.12" steps="759592"/></proof>
           </goal>
           <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.10" steps="759592"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant3">
            <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.82" steps="759454"/></proof>
             </goal>
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.10" steps="759448"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.81" steps="759513"/></proof>
             </goal>
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.0.0.1.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.82" steps="759507"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.0.0.2.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.82" steps="643140"/></proof>
             </goal>
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.0.0.2.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.79" steps="643155"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant2">
            <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.81" steps="759454"/></proof>
             </goal>
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.07" steps="759448"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.1.0.1.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.15" steps="759513"/></proof>
             </goal>
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.1.0.1.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.10" steps="759507"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.1.0.2.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.77" steps="643140"/></proof>
             </goal>
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.1.1.0.2.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.80" steps="643155"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.80"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
         <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;spec">
           <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="pps_par&#39;spec2">
            <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="pps&#39;invariant1">
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="2.22" steps="761768"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="2.19" steps="761723"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.0.0.0.0.2.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="0.81" steps="643138"/></proof>
              </goal>
              <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.0.0.0.0.2.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="1.79" steps="757990"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.84" steps="757990"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.05" steps="759625"/></proof>
           </goal>
           <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.14" steps="759625"/></proof>
           </goal>
           <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.04" steps="758019"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant3">
            <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.09" steps="759487"/></proof>
             </goal>
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.12" steps="759481"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.0.0.1.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.13" steps="759546"/></proof>
             </goal>
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.0.0.1.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.82" steps="759540"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.0.0.2" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.0.0.2.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.84" steps="643163"/></proof>
             </goal>
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.0.0.2.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.80" steps="643178"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.1" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.1.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant2">
            <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.1.0.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.1.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.10" steps="759487"/></proof>
             </goal>
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.1.0.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.82" steps="759481"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.1.0.1" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.1.0.1.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.14" steps="759546"/></proof>
             </goal>
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.1.0.1.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.14" steps="759540"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.1.0.2" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.1.0.2.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.81" steps="643163"/></proof>
             </goal>
             <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.1.1.0.2.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.81" steps="643178"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.1.2" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.80"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="h_basis_ket_bv_par&#39;vc.0.0.1.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="0.87"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="h_basis_ket_bv_par&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.50" steps="544402"/></proof>
   </goal>
   <goal name="h_basis_ket_bv_par&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.29" steps="544402"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="h_angle_bv_par&#39;vc" expl="VC for h_angle_bv_par" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="h_angle_bv_par&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="h_angle_bv&#39;def">
   <goal name="h_angle_bv_par&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="h_angle_bv_par&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_par&#39;spec">
     <goal name="h_angle_bv_par&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="ang_add_eq">
      <goal name="h_angle_bv_par&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="h_angle_bv&#39;def">
       <goal name="h_angle_bv_par&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="pps&#39;invariant">
        <goal name="h_angle_bv_par&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.87" steps="670307"/></proof>
        </goal>
        <goal name="h_angle_bv_par&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.55" steps="670219"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="h_angle_bv_par&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.48" steps="636649"/></proof>
       </goal>
       <goal name="h_angle_bv_par&#39;vc.0.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.45" steps="636651"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="h_angle_bv_par&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="h_angle_bv&#39;def">
       <goal name="h_angle_bv_par&#39;vc.0.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="pps&#39;invariant">
        <goal name="h_angle_bv_par&#39;vc.0.0.0.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.62" steps="671928"/></proof>
        </goal>
        <goal name="h_angle_bv_par&#39;vc.0.0.0.0.1.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.60" steps="671912"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="h_angle_bv_par&#39;vc.0.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.50" steps="639963"/></proof>
       </goal>
       <goal name="h_angle_bv_par&#39;vc.0.0.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.48" steps="639974"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="h_angle_bv_par&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.27" steps="544629"/></proof>
   </goal>
   <goal name="h_angle_bv_par&#39;vc.0.2" expl="rewrite premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="h_angle_bv_par&#39;vc.0.2.0" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.49" steps="636033"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kron_to_ket_l&#39;vc" expl="VC for kron_to_ket_l" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kron_to_ket_l&#39;vc.0" expl="assertion" proved="true">
  <proof prover="8"><result status="valid" time="0.93" steps="488912"/></proof>
  </goal>
  <goal name="kron_to_ket_l&#39;vc.1" expl="assertion" proved="true">
  <proof prover="8"><result status="valid" time="0.94" steps="487745"/></proof>
  </goal>
  <goal name="kron_to_ket_l&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.57" steps="454539"/></proof>
  </goal>
  <goal name="kron_to_ket_l&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.53" steps="453274"/></proof>
  </goal>
  <goal name="kron_to_ket_l&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.55" steps="453466"/></proof>
  </goal>
  <goal name="kron_to_ket_l&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.61" steps="464627"/></proof>
  </goal>
  <goal name="kron_to_ket_l&#39;vc.6" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(rows x *2 = power 2 l *2)">
   <goal name="kron_to_ket_l&#39;vc.6.0" expl="asserted formula" proved="true">
   <transf name="replace" proved="true" arg1="(rows (ket 1 0))" arg2="2" arg3="in" arg4="Ensures">
    <goal name="kron_to_ket_l&#39;vc.6.0.0" expl="asserted formula" proved="true">
    <proof prover="8"><result status="valid" time="1.29" steps="553648"/></proof>
    </goal>
    <goal name="kron_to_ket_l&#39;vc.6.0.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="0.93" steps="486683"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kron_to_ket_l&#39;vc.6.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="0.57" steps="453519"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="kron_to_ket_l&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.58" steps="453477"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_ancs&#39;vc" expl="VC for pps_ancs" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_ancs&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.85" steps="583333"/></proof>
  </goal>
  <goal name="pps_ancs&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.90" steps="677587"/></proof>
  </goal>
  <goal name="pps_ancs&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_ancs&#39;vc.2.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="pps_ancs&#39;vc.2.0.0" expl="VC for pps_ancs" proved="true">
    <transf name="apply" proved="true" arg1="pps&#39;invariant3">
     <goal name="pps_ancs&#39;vc.2.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_ancs&#39;vc.2.0.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="pps_ancs&#39;vc.2.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="eliminate_if" proved="true" >
        <goal name="pps_ancs&#39;vc.2.0.0.0.0.0.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="pps_ancs&#39;vc.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="H8">
          <goal name="pps_ancs&#39;vc.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.04" steps="690517"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="pps_ancs&#39;vc.2.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.00" steps="690530"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_ancs&#39;vc.2.0.0.0.1" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="pps_ancs&#39;vc.2.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.19" steps="789556"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_ancs&#39;vc.2.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_ancs&#39;vc.2.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.21" steps="789162"/></proof>
      </goal>
      <goal name="pps_ancs&#39;vc.2.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.00" steps="789156"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_ancs&#39;vc.2.0.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_ancs&#39;vc.2.0.0.2.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.08" steps="685309"/></proof>
      </goal>
      <goal name="pps_ancs&#39;vc.2.0.0.2.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.71" steps="724019"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_ancs&#39;vc.2.0.1" expl="VC for pps_ancs" proved="true">
    <transf name="apply" proved="true" arg1="pps&#39;invariant2">
     <goal name="pps_ancs&#39;vc.2.0.1.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_ancs&#39;vc.2.0.1.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="pps_ancs&#39;vc.2.0.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.33" steps="789265"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_ancs&#39;vc.2.0.1.0.1" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="pps_ancs&#39;vc.2.0.1.0.1.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.23" steps="789556"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_ancs&#39;vc.2.0.1.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.95" steps="789274"/></proof>
     </goal>
     <goal name="pps_ancs&#39;vc.2.0.1.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.49" steps="724038"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_ancs&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_ancs&#39;vc.3.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="pps_ancs&#39;vc.3.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="pps&#39;invariant1">
     <goal name="pps_ancs&#39;vc.3.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="pps_ancs&#39;vc.3.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.15" steps="791657"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_ancs&#39;vc.3.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.59" steps="724997"/></proof>
     </goal>
     <goal name="pps_ancs&#39;vc.3.0.0.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.57" steps="725054"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_ancs&#39;vc.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_ancs&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="pps_ancs&#39;vc.4.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="pps&#39;invariant">
     <goal name="pps_ancs&#39;vc.4.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="pps_ancs&#39;vc.4.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.10" steps="792518"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_ancs&#39;vc.4.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.55" steps="725714"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_ancs&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.73" steps="583646"/></proof>
  </goal>
  <goal name="pps_ancs&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.72" steps="583649"/></proof>
  </goal>
  <goal name="pps_ancs&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H1">
   <goal name="pps_ancs&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_ancs&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="pps_ancs&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="pps_ancs&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="h_basis_ket_bv_anc&#39;vc" expl="VC for h_basis_ket_bv_anc" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="h_basis_ket_bv_anc&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;def">
   <goal name="h_basis_ket_bv_anc&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;def">
    <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="set_equal_bv">
     <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="hpart&#39;spec4">
       <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="make_bv_length">
        <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.73" steps="635940"/></proof>
        </goal>
        <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="pps&#39;invariant3">
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="1.85" steps="669382"/></proof>
           </goal>
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="1.86" steps="669381"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="1.93" steps="669451"/></proof>
           </goal>
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="1.55" steps="669440"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.0.1.0.2.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="0.65" steps="531763"/></proof>
           </goal>
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.0.1.0.2.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="0.66" steps="531778"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="pps&#39;invariant2">
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.86" steps="669529"/></proof>
          </goal>
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.84" steps="669593"/></proof>
          </goal>
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.0.1.1.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="0.60" steps="531772"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.47" steps="635888"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.67" steps="531734"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
       <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="hpart_value">
        <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
         <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="pps_ancs&#39;spec1">
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="case" proved="true" arg1="(0 &lt;= i /\ i &lt; (h_width h - i1))">
             <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises (true case)" proved="true">
             <transf name="replace" proved="true" arg1="(if 0 &lt;= i /\ i &lt; (h_width h1 - i1)
     then ((h_basis_ket h1 @ getbv (concat x (int_to_bv 0 i1)))
           @ getbv y)
          @ i
     else 0)" arg2="(((h_basis_ket h1 @ getbv (concat x (int_to_bv 0 i1)))
           @ getbv y)
          @ i)
">
              <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises (true case)" proved="true">
              <transf name="apply" proved="true" arg1="pps&#39;invariant1">
               <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="concat_value">
                  <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="eliminate_if" proved="true" >
                   <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.31" steps="671037"/></proof>
                    </goal>
                    <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="0.81" steps="633642"/></proof>
                    </goal>
                    <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.40" steps="671062"/></proof>
                    </goal>
                    <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.94" steps="747166"/></proof>
                    </goal>
                    <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.63" steps="671060"/></proof>
                    </goal>
                    <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.02" steps="633665"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.00" steps="628473"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.2.0" proved="true">
                <proof prover="8"><result status="valid" time="1.00" steps="628450"/></proof>
                </goal>
                <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.0.2.1" proved="true">
                <proof prover="8"><result status="valid" time="1.59" steps="665858"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="1.58" steps="665848"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.0.0.1" expl="apply premises (false case)" proved="true">
             <proof prover="8"><result status="valid" time="3.61" steps="769637"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.81" steps="628430"/></proof>
           </goal>
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.97" steps="628430"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant3">
            <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.10" steps="741043"/></proof>
            </goal>
            <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.1.0.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.04" steps="739583"/></proof>
            </goal>
            <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.1.0.0.2" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="0.78" steps="628464"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.1.1.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="pps&#39;invariant2">
            <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.1.1.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.81" steps="741043"/></proof>
            </goal>
            <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.1.1.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.79" steps="739583"/></proof>
            </goal>
            <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.1.1.0.2" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="0.78" steps="628464"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.2.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.2.0.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.55" steps="451587"/></proof>
           </goal>
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.2.0.1" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="0.54"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.2.1" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.2.1.0" expl="rewrite premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.2.1.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="pps&#39;invariant3">
             <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.2.1.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.07" steps="739555"/></proof>
             </goal>
             <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.2.1.0.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.05" steps="739619"/></proof>
             </goal>
             <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.2.1.0.0.2" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.77" steps="628464"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.2.1.1" expl="rewrite premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.2.1.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="pps&#39;invariant2">
             <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.2.1.1.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.82" steps="739555"/></proof>
             </goal>
             <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.2.1.1.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.83" steps="739619"/></proof>
             </goal>
             <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.2.1.1.0.2" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.78" steps="628464"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.0.2.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.53" steps="634958"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.68" steps="535179"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.1" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="pps&#39;invariant3">
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.09" steps="739555"/></proof>
          </goal>
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.79" steps="739619"/></proof>
          </goal>
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.1.0.0.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="0.79" steps="628464"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="pps&#39;invariant2">
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.90" steps="739555"/></proof>
          </goal>
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.1.1.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.23" steps="739619"/></proof>
          </goal>
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.1.1.0.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.07" steps="628464"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.2" expl="rewrite premises" proved="true">
       <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
        <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.56" steps="451596"/></proof>
        </goal>
        <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.2.1.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="pps&#39;invariant3">
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.2.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.19" steps="739555"/></proof>
           </goal>
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.2.1.0.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.18" steps="739619"/></proof>
           </goal>
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.2.1.0.0.2" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="0.98" steps="628464"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.2.1.1" expl="rewrite premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.2.1.1.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="pps&#39;invariant2">
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.2.1.1.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.12" steps="739555"/></proof>
           </goal>
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.2.1.1.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.15" steps="739619"/></proof>
           </goal>
           <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.2.1.1.0.2" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="0.95" steps="628464"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="h_basis_ket_bv_anc&#39;vc.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.84" steps="634958"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="h_basis_ket_bv_anc&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <transf name="rewrite" proved="true" arg1="concat_length">
     <goal name="h_basis_ket_bv_anc&#39;vc.0.0.1.0" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.54" steps="547442"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="h_basis_ket_bv_anc&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.68" steps="451551"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="h_basis_ket_bv_anc&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.59"/></proof>
   </goal>
   <goal name="h_basis_ket_bv_anc&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.59"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="h_basis_ket_bv_anc_&#39;vc" expl="VC for h_basis_ket_bv_anc_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="h_basis_ket_bv_anc_&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equal_bv">
   <goal name="h_basis_ket_bv_anc_&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="h_basis_ket_bv_anc_&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="hpart_length">
     <goal name="h_basis_ket_bv_anc_&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.92" steps="648531"/></proof>
     </goal>
     <goal name="h_basis_ket_bv_anc_&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.66" steps="532102"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="h_basis_ket_bv_anc_&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="h_basis_ket_bv_anc">
     <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="hpart_value_b">
      <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="hpart_value_b">
       <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(concat (hpart x l) (int_to_bv 0 i1))" arg2="x">
        <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.54" steps="451970"/></proof>
        </goal>
        <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="1.55" steps="549580"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.67" steps="451972"/></proof>
        </goal>
        <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.0.1.1.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;spec1" arg2="in" arg3="H">
          <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.78" steps="637743"/></proof>
          </goal>
          <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="hpart_length">
           <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.0.1.1.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.73" steps="639783"/></proof>
           </goal>
           <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.0.1.1.0.1.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.26" steps="568188"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.0.1.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.76" steps="639874"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.1.0" proved="true">
       <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;spec1" arg2="in" arg3="H">
        <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.1.0.0" proved="true">
        <proof prover="8"><result status="valid" time="0.64" steps="532131"/></proof>
        </goal>
        <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="hpart_length">
         <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.78" steps="639783"/></proof>
         </goal>
         <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.1.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.30" steps="568188"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.89" steps="639874"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.1.1" proved="true">
       <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;spec1" arg2="in" arg3="H">
        <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.1.1.0" proved="true">
        <proof prover="8"><result status="valid" time="1.89" steps="637743"/></proof>
        </goal>
        <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.1.1.1" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="hpart_length">
         <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.1.1.1.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.84" steps="639783"/></proof>
         </goal>
         <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.1.1.1.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.34" steps="568188"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.0.1.1.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.81" steps="639874"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.54" steps="451972"/></proof>
     </goal>
     <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.54" steps="451972"/></proof>
     </goal>
     <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.3" expl="rewrite premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.3.0" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;spec1" arg2="in" arg3="H">
       <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.3.0.0" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.84" steps="639526"/></proof>
       </goal>
       <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.3.0.1" expl="rewrite premises" proved="true">
       <transf name="rewrite" proved="true" arg1="hpart_length">
        <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.3.0.1.0" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.81" steps="639783"/></proof>
        </goal>
        <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.3.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.32" steps="568188"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.3.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.79" steps="639874"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="h_basis_ket_bv_anc_&#39;vc.0.1.0.4" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.55" steps="451972"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="h_angle_bv_anc&#39;vc" expl="VC for h_angle_bv_anc" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="h_angle_bv_anc&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="h_angle_bv&#39;def">
   <goal name="h_angle_bv_anc&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="h_angle_bv&#39;def">
    <goal name="h_angle_bv_anc&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="h_angle_bv_anc&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_ancs&#39;spec">
      <goal name="h_angle_bv_anc&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="pps&#39;invariant">
       <goal name="h_angle_bv_anc&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="h_angle_bv_anc&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="h_angle_bv_anc&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="concat_value">
          <goal name="h_angle_bv_anc&#39;vc.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.00" steps="675999"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="h_angle_bv_anc&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="h_angle_bv_anc&#39;vc.0.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.67" steps="532438"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="h_angle_bv_anc&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.64" steps="532415"/></proof>
      </goal>
      <goal name="h_angle_bv_anc&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.83" steps="532415"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="h_angle_bv_anc&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <transf name="rewrite" proved="true" arg1="concat_length">
     <goal name="h_angle_bv_anc&#39;vc.0.0.1.0" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.33" steps="548523"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="h_angle_bv_anc&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.72" steps="452239"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="h_angle_bv_anc&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.58"/></proof>
   </goal>
   <goal name="h_angle_bv_anc&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.59"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="h_angle_bv_anc_&#39;vc" expl="VC for h_angle_bv_anc_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="h_angle_bv_anc_&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="h_angle_bv_anc">
   <goal name="h_angle_bv_anc_&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="1.28" steps="552032"/></proof>
   </goal>
   <goal name="h_angle_bv_anc_&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.56" steps="452568"/></proof>
   </goal>
   <goal name="h_angle_bv_anc_&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.71" steps="452568"/></proof>
   </goal>
   <goal name="h_angle_bv_anc_&#39;vc.0.3" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.36" steps="552007"/></proof>
   </goal>
   <goal name="h_angle_bv_anc_&#39;vc.0.4" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.73" steps="452568"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_pps_apply_equiv&#39;vc" expl="VC for set_pps_apply_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_pps_apply_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="set_pps_apply_equiv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pps_apply_equiv&#39;def">
    <goal name="set_pps_apply_equiv&#39;vc.0.0.0" expl="VC for set_pps_apply_equiv" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="set_pps_apply_equiv&#39;vc.0.0.0.0" expl="VC for set_pps_apply_equiv" proved="true">
     <proof prover="8"><result status="valid" time="0.76" steps="479850"/></proof>
     </goal>
     <goal name="set_pps_apply_equiv&#39;vc.0.0.0.1" expl="VC for set_pps_apply_equiv" proved="true">
     <transf name="rewrite" proved="true" arg1="get_pps_apply">
      <goal name="set_pps_apply_equiv&#39;vc.0.0.0.1.0" expl="VC for set_pps_apply_equiv" proved="true">
      <transf name="rewrite" proved="true" arg1="get_pps_apply">
       <goal name="set_pps_apply_equiv&#39;vc.0.0.0.1.0.0" expl="VC for set_pps_apply_equiv" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
        <goal name="set_pps_apply_equiv&#39;vc.0.0.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.55" steps="570554"/></proof>
        </goal>
        <goal name="set_pps_apply_equiv&#39;vc.0.0.0.1.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.93" steps="511446"/></proof>
        </goal>
        <goal name="set_pps_apply_equiv&#39;vc.0.0.0.1.0.0.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.59" steps="479865"/></proof>
        </goal>
        <goal name="set_pps_apply_equiv&#39;vc.0.0.0.1.0.0.3" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="set_pps_apply_equiv&#39;vc.0.0.0.1.0.0.3.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="set_pps_apply_equiv&#39;vc.0.0.0.1.0.0.3.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="scalar_eq_gen">
           <goal name="set_pps_apply_equiv&#39;vc.0.0.0.1.0.0.3.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="1.55" steps="648683"/></proof>
           </goal>
           <goal name="set_pps_apply_equiv&#39;vc.0.0.0.1.0.0.3.0.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="0.69" steps="553217"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="set_pps_apply_equiv&#39;vc.0.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.95" steps="511438"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="set_pps_apply_equiv&#39;vc.0.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.58" steps="479865"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_pps_apply_equiv_sim&#39;vc" expl="VC for set_pps_apply_equiv_sim" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_pps_apply_equiv_sim&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_pps_apply_equiv">
   <goal name="set_pps_apply_equiv_sim&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="0.83" steps="613173"/></proof>
   </goal>
   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
     <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
      <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="scalar_eq_gen">
       <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
        <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.84" steps="711890"/></proof>
        </goal>
        <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.37" steps="648130"/></proof>
        </goal>
        <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.98" steps="613189"/></proof>
        </goal>
        <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="scalar_eq_gen">
           <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="bv_to_ket_eq">
            <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="0.86"/></proof>
            </goal>
            <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
              <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
               <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="Requires1">
                <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="0.94" steps="688443"/></proof>
                </goal>
                <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="2.13" steps="795898"/></proof>
                </goal>
                <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="2.13" steps="795679"/></proof>
                </goal>
                <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                 <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.0" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.12" steps="688421"/></proof>
                 </goal>
                 <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.0" expl="rewrite premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.0.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                    <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.0.0.0" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.46" steps="927584"/></proof>
                     </goal>
                     <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.0.0.0.1" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.48" steps="927578"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.0.0.1" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.0.0.1.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.49" steps="927678"/></proof>
                     </goal>
                     <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.0.0.1.1" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.46" steps="927677"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.0.0.2" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.0.0.2.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.34" steps="808323"/></proof>
                     </goal>
                     <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.0.0.2.1" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.17" steps="808334"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.1" expl="rewrite premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.1.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                    <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.1.0.0" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.1.0.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.94" steps="927584"/></proof>
                     </goal>
                     <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.1.0.0.1" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="3.01" steps="927578"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.1.0.1" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.1.0.1.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.54" steps="927678"/></proof>
                     </goal>
                     <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.1.0.1.1" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.52" steps="927677"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.1.1.0.2" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.11" steps="808332"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.3.2" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="2.08" steps="794596"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                <transf name="split_all_full" proved="true" >
                 <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.51" steps="927585"/></proof>
                   </goal>
                   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.50" steps="927579"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.0.1" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.49" steps="927685"/></proof>
                   </goal>
                   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.0.1.1" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.48" steps="927679"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.0.2" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.0.2.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="1.15" steps="808323"/></proof>
                   </goal>
                   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.0.2.1" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="1.13" steps="808338"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                <transf name="split_all_full" proved="true" >
                 <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.1.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.1.0.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.48" steps="927585"/></proof>
                   </goal>
                   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.1.0.0.1" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.49" steps="927579"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.1.0.1" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.1.0.1.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.56" steps="927685"/></proof>
                   </goal>
                   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.1.0.1.1" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.91" steps="927679"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.1.0.2" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.33" steps="808332"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
               <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.0" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.0.0" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="0.89" steps="688412"/></proof>
                 </goal>
                 <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.0.1" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.85" steps="725664"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.0" expl="rewrite premises" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.0.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.0.0.0" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.49" steps="927584"/></proof>
                    </goal>
                    <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.0.0.0.1" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.52" steps="927578"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.0.0.1" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.0.0.1.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.85" steps="927678"/></proof>
                    </goal>
                    <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.0.0.1.1" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.72" steps="927677"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.0.0.2" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.0.0.2.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="0.99" steps="808323"/></proof>
                    </goal>
                    <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.0.0.2.1" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.01" steps="808334"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.1" expl="rewrite premises" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.1.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.1.0.0" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.1.0.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.70" steps="927584"/></proof>
                    </goal>
                    <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.1.0.0.1" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.72" steps="927578"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.1.0.1" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.1.0.1.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.43" steps="927678"/></proof>
                    </goal>
                    <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.1.0.1.1" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.48" steps="927677"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.1.1.0.2" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="1.29" steps="808332"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2.2" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="2.21" steps="794596"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                 <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="2.60" steps="927584"/></proof>
                  </goal>
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="2.54" steps="927578"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.0.1.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="2.52" steps="927678"/></proof>
                  </goal>
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.0.1.1" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="2.61" steps="927677"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.0.2" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.0.2.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.43" steps="808323"/></proof>
                  </goal>
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.0.2.1" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.35" steps="808334"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                 <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="2.64" steps="927584"/></proof>
                  </goal>
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.1.0.0.1" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="2.63" steps="927578"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.1.0.1" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.1.0.1.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="2.63" steps="927678"/></proof>
                  </goal>
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.1.0.1.1" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="2.62" steps="927677"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.1.0.2" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.1.0.2.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.40" steps="808323"/></proof>
                  </goal>
                  <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.1.0.2.1" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.40" steps="808334"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.2" expl="rewrite premises" proved="true">
              <proof prover="0"><result status="valid" time="0.96"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="Requires">
            <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.18" steps="688385"/></proof>
            </goal>
            <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.58" steps="793469"/></proof>
            </goal>
            <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.0.3.0.0.1.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.57" steps="793573"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.65" steps="648130"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.65" steps="648049"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="set_pps_apply_equiv_sim&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.06" steps="613189"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="get_pps_apply_equiv&#39;vc" expl="VC for get_pps_apply_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_pps_apply_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="get_pps_apply_equiv&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="1.32" steps="517010"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="get_pps_apply_basis_equiv&#39;vc" expl="VC for get_pps_apply_basis_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_pps_apply_basis_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(pps_apply_basis h1 x)" arg2="(pps_apply h1 (bv_to_ket x))">
   <goal name="get_pps_apply_basis_equiv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(pps_apply_basis h2 x)" arg2="(pps_apply h2 (bv_to_ket x))">
    <goal name="get_pps_apply_basis_equiv&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="1.51" steps="575636"/></proof>
    </goal>
    <goal name="get_pps_apply_basis_equiv&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
     <goal name="get_pps_apply_basis_equiv&#39;vc.0.0.1.0" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.32" steps="516219"/></proof>
     </goal>
     <goal name="get_pps_apply_basis_equiv&#39;vc.0.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.30" steps="513362"/></proof>
     </goal>
     <goal name="get_pps_apply_basis_equiv&#39;vc.0.0.1.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.01" steps="513344"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="get_pps_apply_basis_equiv&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
    <goal name="get_pps_apply_basis_equiv&#39;vc.0.1.0" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.05" steps="516219"/></proof>
    </goal>
    <goal name="get_pps_apply_basis_equiv&#39;vc.0.1.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.25" steps="513360"/></proof>
    </goal>
    <goal name="get_pps_apply_basis_equiv&#39;vc.0.1.2" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.00" steps="513344"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="reflexive_pps_apply_equiv&#39;vc" expl="VC for reflexive_pps_apply_equiv" proved="true">
 <proof prover="8"><result status="valid" time="0.76" steps="481462"/></proof>
 </goal>
 <goal name="commut_pps_apply_equiv&#39;vc" expl="VC for commut_pps_apply_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="commut_pps_apply_equiv&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.00" steps="513540"/></proof>
  </goal>
  <goal name="commut_pps_apply_equiv&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.01" steps="513545"/></proof>
  </goal>
  <goal name="commut_pps_apply_equiv&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.77" steps="481510"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="transitive_pps_apply_equiv&#39;vc" expl="VC for transitive_pps_apply_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="transitive_pps_apply_equiv&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.40" steps="573432"/></proof>
  </goal>
  <goal name="transitive_pps_apply_equiv&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.59"/></proof>
  </goal>
  <goal name="transitive_pps_apply_equiv&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.77" steps="481572"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_basis_seq&#39;vc" expl="VC for pps_apply_basis_seq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_basis_seq&#39;vc.0" expl="assertion" proved="true">
  <transf name="instantiate" proved="true" arg1="pps_apply_basis_bv" arg2="h1,x">
   <goal name="pps_apply_basis_seq&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst">
    <goal name="pps_apply_basis_seq&#39;vc.0.0.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_apply_scal">
     <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0" expl="assertion" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_apply_sum">
      <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0" expl="assertion" proved="true">
      <transf name="rewrite" proved="true" arg1="ket_sum_scalar_rev_l">
       <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0" expl="assertion" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq">
        <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.39" steps="578122"/></proof>
        </goal>
        <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.79" steps="481786"/></proof>
        </goal>
        <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="scalar_assoc_rev">
           <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="scalar_eq">
            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="pps_apply_scal">
             <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="scalar_eq">
              <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
                <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="scalar_eq">
                 <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
                  <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.58" steps="657939"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="0.68" steps="555261"/></proof>
                  </goal>
                  <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="0.90" steps="555270"/></proof>
                  </goal>
                  <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                     <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
                     <transf name="apply" proved="true" arg1="scalar_eq_gen">
                      <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="bv_to_ket_eq">
                       <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="make_bv_length">
                        <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <transf name="split_all_full" proved="true" >
                         <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;spec1">
                          <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                          <proof prover="8"><result status="valid" time="0.88" steps="653520"/></proof>
                          </goal>
                          <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                          <proof prover="8"><result status="valid" time="1.96" steps="767203"/></proof>
                          </goal>
                          <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                          <proof prover="8"><result status="valid" time="2.26" steps="767237"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                        <transf name="split_all_full" proved="true" >
                         <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                          <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                           <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                            <proof prover="8"><result status="valid" time="1.98" steps="801611"/></proof>
                            </goal>
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                            <proof prover="8"><result status="valid" time="1.98" steps="801605"/></proof>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                            <proof prover="8"><result status="valid" time="2.02" steps="801421"/></proof>
                            </goal>
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.1.1" expl="apply premises" proved="true">
                            <proof prover="8"><result status="valid" time="2.04" steps="801415"/></proof>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.2.0" expl="apply premises" proved="true">
                            <proof prover="8"><result status="valid" time="1.07" steps="653547"/></proof>
                            </goal>
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.2.1" expl="apply premises" proved="true">
                            <proof prover="8"><result status="valid" time="0.83" steps="653562"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                          <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                           <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                            <proof prover="8"><result status="valid" time="2.00" steps="801611"/></proof>
                            </goal>
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
                            <proof prover="8"><result status="valid" time="2.02" steps="801605"/></proof>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.1.0.1.0" expl="apply premises" proved="true">
                            <proof prover="8"><result status="valid" time="2.02" steps="801421"/></proof>
                            </goal>
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.1.0.1.1" expl="apply premises" proved="true">
                            <proof prover="8"><result status="valid" time="2.06" steps="801415"/></proof>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.1.0.2.0" expl="apply premises" proved="true">
                            <proof prover="8"><result status="valid" time="0.87" steps="653547"/></proof>
                            </goal>
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.1.0.2.1" expl="apply premises" proved="true">
                            <proof prover="8"><result status="valid" time="1.05" steps="653562"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                        <proof prover="8"><result status="valid" time="1.67" steps="658716"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                         <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                         <proof prover="0"><result status="valid" time="0.87"/></proof>
                         </goal>
                         <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                         <transf name="split_all_full" proved="true" >
                          <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                          <transf name="split_vc" proved="true" >
                           <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                           <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="2.26" steps="873507"/></proof>
                             </goal>
                             <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="2.27" steps="873501"/></proof>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.0.0.1.0" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="2.30" steps="873473"/></proof>
                             </goal>
                             <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.0.0.1.1" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="2.27" steps="873462"/></proof>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.0.0.2" expl="apply premises" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.0.0.2.0" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="0.99" steps="751810"/></proof>
                             </goal>
                             <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.0.0.2.1" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="0.99" steps="751825"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                          <transf name="split_vc" proved="true" >
                           <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
                           <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="2.27" steps="873507"/></proof>
                             </goal>
                             <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.1.0.0.1" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="2.26" steps="873501"/></proof>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.1.0.1" expl="apply premises" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.1.0.1.0" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="2.19" steps="873473"/></proof>
                             </goal>
                             <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.1.0.1.1" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="2.22" steps="873462"/></proof>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.1.0.2" expl="apply premises" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.1.0.2.0" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="1.04" steps="751810"/></proof>
                             </goal>
                             <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.1.0.2.1" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="1.06" steps="751825"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
                          <proof prover="8"><result status="valid" time="1.08" steps="640510"/></proof>
                          </goal>
                          <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                           <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
                           <proof prover="8"><result status="valid" time="0.95" steps="555323"/></proof>
                           </goal>
                           <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1" expl="rewrite premises" proved="true">
                           <transf name="split_all_full" proved="true" >
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.0" expl="rewrite premises" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.0.0" expl="rewrite premises" proved="true">
                             <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                              <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.0.0.0" expl="apply premises" proved="true">
                              <transf name="split_vc" proved="true" >
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.0.0.0.0" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.42" steps="873507"/></proof>
                               </goal>
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.0.0.0.1" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.83" steps="873501"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.0.0.1" expl="apply premises" proved="true">
                              <transf name="split_vc" proved="true" >
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.0.0.1.0" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.41" steps="873473"/></proof>
                               </goal>
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.0.0.1.1" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.40" steps="873462"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.0.0.2" expl="apply premises" proved="true">
                              <transf name="split_vc" proved="true" >
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.0.0.2.0" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="1.28" steps="751810"/></proof>
                               </goal>
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.0.0.2.1" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="1.29" steps="751825"/></proof>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.1" expl="rewrite premises" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.1.0" expl="rewrite premises" proved="true">
                             <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                              <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.1.0.0" expl="apply premises" proved="true">
                              <transf name="split_vc" proved="true" >
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.1.0.0.0" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.23" steps="873507"/></proof>
                               </goal>
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.1.0.0.1" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.26" steps="873501"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.1.0.1" expl="apply premises" proved="true">
                              <transf name="split_vc" proved="true" >
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.1.0.1.0" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.33" steps="873473"/></proof>
                               </goal>
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.1.0.1.1" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.36" steps="873462"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.1.0.2" expl="apply premises" proved="true">
                              <transf name="split_vc" proved="true" >
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.1.0.2.0" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="1.29" steps="751810"/></proof>
                               </goal>
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1.1.0.2.1" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="1.30" steps="751825"/></proof>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.2" expl="rewrite premises" proved="true">
                           <proof prover="8"><result status="valid" time="1.92" steps="751667"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0" expl="apply premises" proved="true">
                       <transf name="replace" proved="true" arg1="((h_angle h2
    @ getbv (make_bv ((h_basis_ket h1 @ getbv x) @ getbv a1) (h_width h1)))
   @ getbv a)" arg2="((h_angle h2 @ ((h_basis_ket h1 @ getbv x) @ getbv a1)) @ getbv a)">
                        <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.26" steps="860199"/></proof>
                        </goal>
                        <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                        <transf name="apply" proved="true" arg1="pps&#39;invariant">
                         <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0" expl="apply premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                           <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
                           <proof prover="8"><result status="valid" time="1.00" steps="653545"/></proof>
                           </goal>
                           <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                           <transf name="split_all_full" proved="true" >
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                             <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                              <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                              <transf name="split_vc" proved="true" >
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.42" steps="800877"/></proof>
                               </goal>
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.40" steps="800871"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.0.0.1" expl="apply premises" proved="true">
                              <transf name="split_vc" proved="true" >
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.03" steps="801492"/></proof>
                               </goal>
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.0.0.1.1" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="1.99" steps="801491"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.0.0.2" expl="apply premises" proved="true">
                              <transf name="split_vc" proved="true" >
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.0.0.2.0" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="0.81" steps="653572"/></proof>
                               </goal>
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.0.0.2.1" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="0.84" steps="653587"/></proof>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.1.0" expl="rewrite premises" proved="true">
                             <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                              <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.1.0.0" expl="apply premises" proved="true">
                              <transf name="split_vc" proved="true" >
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.35" steps="800877"/></proof>
                               </goal>
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.1.0.0.1" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.01" steps="800871"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.1.0.1" expl="apply premises" proved="true">
                              <transf name="split_vc" proved="true" >
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.1.0.1.0" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.00" steps="801492"/></proof>
                               </goal>
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.1.0.1.1" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.00" steps="801491"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.1.0.2" expl="apply premises" proved="true">
                              <transf name="split_vc" proved="true" >
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.1.0.2.0" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="0.86" steps="653572"/></proof>
                               </goal>
                               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.1.1.0.2.1" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="1.09" steps="653587"/></proof>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.0.0.2" expl="rewrite premises" proved="true">
                           <proof prover="8"><result status="valid" time="1.73" steps="691304"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.1.1" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="1.09" steps="653520"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                 <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                 <proof prover="0"><result status="valid" time="0.72"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                <transf name="split_all_full" proved="true" >
                 <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;spec1">
                  <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.10" steps="653502"/></proof>
                  </goal>
                  <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.07" steps="653502"/></proof>
                  </goal>
                  <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="2.40" steps="766669"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="1.57" steps="589602"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
              <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.0.2.0.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="0.69"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.72" steps="578122"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="0.69"/></proof>
      </goal>
      <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.2.0" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="scalar_ket_l">
         <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
          <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;spec1">
            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.11" steps="653502"/></proof>
            </goal>
            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.08" steps="653502"/></proof>
            </goal>
            <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.2.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.91" steps="766669"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_basis_seq&#39;vc.0.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.63" steps="481788"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_basis_seq&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="0.70"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="pps_apply_basis_seq&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.77" steps="481788"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_apply_basis_seq&#39;vc.1" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ket_sum_bin_comp_rev
" arg2="(fun y y1 -&gt;
      (pow_inv_sqrt_2 (h_range h1) *. ang_exp (h_angle_bv h1 x y)) *. (pow_inv_sqrt_2 (h_range h2)) *.ang_exp (h_angle_bv h2 (h_basis_ket_bv h1 x y) y1)
      *.. bv_to_ket (h_basis_ket_bv h2 (h_basis_ket_bv h1 x y) y1)),(h_width (pps_seq h1 h2)),(h_range h2),(h_range h1)">
   <goal name="pps_apply_basis_seq&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pps_apply_basis_bv">
    <goal name="pps_apply_basis_seq&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_seq&#39;spec2">
      <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(pow_inv_sqrt_2 (h_range h1 + h_range h2)
   *.. ket_sum_l (n_bvs (h_range h1 + h_range h2))
       (fun (y:bitvec) -&gt;
         ang_exp (h_angle_bv (pps_seq h1 h2) x y)
         *.. bv_to_ket (h_basis_ket_bv (pps_seq h1 h2) x y))
       (h_width (pps_seq h1 h2)))" arg2="(ket_sum_l (n_bvs (h_range h2 + h_range h1))
  (fun (bv:bitvec) -&gt;
    ((fun (y:bitvec) (y1:bitvec) -&gt;
       (((pow_inv_sqrt_2 (h_range h1) *. ang_exp (h_angle_bv h1 x y))
         *. pow_inv_sqrt_2 (h_range h2))
        *. ang_exp (h_angle_bv h2 (h_basis_ket_bv h1 x y) y1))
       *.. bv_to_ket (h_basis_ket_bv h2 (h_basis_ket_bv h1 x y) y1))
     @ hpart bv (h_range h1))
    @ tpart bv (h_range h1))
  (h_width (pps_seq h1 h2)))">
       <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="Hinst">
        <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="Assert">
         <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
           <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="1.87" steps="743160"/></proof>
           </goal>
           <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="0.85" steps="632986"/></proof>
           </goal>
           <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="1.42" steps="670642"/></proof>
           </goal>
           <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="scalar_assoc">
              <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="ket_sum_scalar_rev_l">
               <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
                <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.06" steps="805480"/></proof>
                </goal>
                <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.0.0.0.3.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.11" steps="693789"/></proof>
                </goal>
                <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.0.0.0.3.0.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.57" steps="733110"/></proof>
                </goal>
                <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.0.0.0.3.0.0.0.0.3" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.0.0.0.3.0.0.0.0.3.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.0.0.0.3.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.59" steps="733138"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="2.05" steps="805498"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.83" steps="743130"/></proof>
        </goal>
        <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.87" steps="743160"/></proof>
        </goal>
        <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.88" steps="743160"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="ket_sum_scalar_rev_l">
        <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
         <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.88" steps="743160"/></proof>
         </goal>
         <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="0.86" steps="633006"/></proof>
         </goal>
         <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="0.83" steps="632986"/></proof>
         </goal>
         <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="scalar_assoc">
            <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="scalar_eq_gen">
             <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.06" steps="808061"/></proof>
             </goal>
             <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="pow_inv_sqrt_2_add">
              <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="h_angle_bv&#39;def">
               <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="pps_seq&#39;spec">
                <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="ang_exp_add">
                 <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="h_angle_bv&#39;def">
                  <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="h_angle_bv&#39;def">
                   <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="replace" proved="true" arg1="((h_angle h2 @ ((h_basis_ket h1 @ getbv x) @ getbv a))
           @ (fun (k:int) -&gt; getbv a @ (k + h_range h1)))" arg2="((h_angle h2 @ getbv (h_basis_ket_bv h1 x (hpart a (h_range h1))))
         @ getbv (tpart a (h_range h1)))">
                    <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="0"><result status="valid" time="1.17"/></proof>
                    </goal>
                    <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                    <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;def">
                     <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant">
                      <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                        <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                        <proof prover="0"><result status="valid" time="1.15"/></proof>
                        </goal>
                        <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                         <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                          <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
                          <proof prover="8"><result status="valid" time="2.13" steps="841808"/></proof>
                          </goal>
                          <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.0.1" expl="apply premises" proved="true">
                          <proof prover="8"><result status="valid" time="2.16" steps="842906"/></proof>
                          </goal>
                          <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.0.2" expl="apply premises" proved="true">
                          <proof prover="8"><result status="valid" time="0.93" steps="693861"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
                         <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                          <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.1.0" expl="apply premises" proved="true">
                          <proof prover="8"><result status="valid" time="2.12" steps="841808"/></proof>
                          </goal>
                          <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.1.1" expl="apply premises" proved="true">
                          <proof prover="8"><result status="valid" time="2.15" steps="842906"/></proof>
                          </goal>
                          <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1.1.2" expl="apply premises" proved="true">
                          <proof prover="8"><result status="valid" time="1.09" steps="693861"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                        <proof prover="8"><result status="valid" time="1.49" steps="732488"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
                       <proof prover="8"><result status="valid" time="2.18" steps="844059"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                     <proof prover="8"><result status="valid" time="0.89" steps="693802"/></proof>
                     </goal>
                     <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.05" steps="808218"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.07" steps="808183"/></proof>
                   </goal>
                   <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.01" steps="812238"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.15" steps="693802"/></proof>
                  </goal>
                  <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="2.02" steps="808218"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="0.92" steps="693802"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.1" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="1.55" steps="733078"/></proof>
               </goal>
               <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.0.2" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="2.06" steps="809058"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.1" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="2.04" steps="805507"/></proof>
              </goal>
              <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.0.3.0.0.0.1.2" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="2.03" steps="805477"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.90" steps="743160"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_basis_seq&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.83" steps="632988"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_apply_basis_seq&#39;vc.1.0.1" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="1.44" steps="55639"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_seq&#39;vc" expl="VC for pps_apply_seq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_seq&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="get_pps_apply">
   <goal name="pps_apply_seq&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="get_pps_apply" arg2="h1,x">
    <goal name="pps_apply_seq&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="pps_apply_seq&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_apply_sum">
      <goal name="pps_apply_seq&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
       <goal name="pps_apply_seq&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.77" steps="576834"/></proof>
       </goal>
       <goal name="pps_apply_seq&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(h_width (pps_seq h1 h2))" arg2="(h_width h1)">
        <goal name="pps_apply_seq&#39;vc.0.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.76" steps="481882"/></proof>
        </goal>
        <goal name="pps_apply_seq&#39;vc.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
        <proof prover="0"><result status="valid" time="0.52"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_seq&#39;vc.0.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.65"/></proof>
       </goal>
       <goal name="pps_apply_seq&#39;vc.0.0.0.0.0.3" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="pps_apply_seq&#39;vc.0.0.0.0.0.3.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="pps_apply_seq&#39;vc.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="pps_apply_basis_seq">
          <goal name="pps_apply_seq&#39;vc.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="pps_apply_scal">
           <goal name="pps_apply_seq&#39;vc.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
           </transf>
           </goal>
           <goal name="pps_apply_seq&#39;vc.0.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="pps_apply_seq&#39;vc.0.0.0.0.0.3.0.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="replace" proved="true" arg1="(h_width h2)" arg2="(h_width h1)">
             <goal name="pps_apply_seq&#39;vc.0.0.0.0.0.3.0.0.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="pps_apply_basis&#39;spec1">
              <goal name="pps_apply_seq&#39;vc.0.0.0.0.0.3.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="1.91" steps="765264"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_seq&#39;vc.0.0.0.0.0.3.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="0.87" steps="653620"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_apply_seq&#39;vc.0.0.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="0.68"/></proof>
          </goal>
          <goal name="pps_apply_seq&#39;vc.0.0.0.0.0.3.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.88" steps="555374"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_seq&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="1.45" steps="56075"/></proof>
      </goal>
      <goal name="pps_apply_seq&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_apply_seq&#39;vc.0.0.0.0.2.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_apply_seq&#39;vc.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="0.70"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_seq&#39;vc.0.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.78" steps="481884"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_seq&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.76" steps="481884"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_seq&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.59"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_seq_pred&#39;vc" expl="VC for pps_seq_pred" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_seq_pred&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.99" steps="614752"/></proof>
  </goal>
  <goal name="pps_seq_pred&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.32" steps="649971"/></proof>
  </goal>
  <goal name="pps_seq_pred&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.42" steps="650346"/></proof>
  </goal>
  <goal name="pps_seq_pred&#39;vc.3" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Requires3">
   <goal name="pps_seq_pred&#39;vc.3.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures1">
    <goal name="pps_seq_pred&#39;vc.3.0.0" expl="precondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="pps_seq_pred&#39;vc.3.0.0.0" expl="precondition" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pps_seq_pred&#39;vc.3.1" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_seq_pred&#39;vc.3.1.0" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.83" steps="712987"/></proof>
    </goal>
    <goal name="pps_seq_pred&#39;vc.3.1.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.85" steps="712981"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_seq_pred&#39;vc.3.2" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_seq_pred&#39;vc.3.2.0" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.80" steps="712987"/></proof>
    </goal>
    <goal name="pps_seq_pred&#39;vc.3.2.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.81" steps="712981"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_seq_pred&#39;vc.3.3" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_seq_pred&#39;vc.3.3.0" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.03" steps="615354"/></proof>
    </goal>
    <goal name="pps_seq_pred&#39;vc.3.3.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.82" steps="615365"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_seq_pred&#39;vc.4" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Requires3">
   <goal name="pps_seq_pred&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="pps_seq_pred&#39;vc.4.0.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pps_seq_pred&#39;vc.4.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.37" steps="650688"/></proof>
   </goal>
   <goal name="pps_seq_pred&#39;vc.4.2" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.40" steps="650688"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_seq_pred&#39;vc.5" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="pps_seq_pred&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pps_apply_equiv&#39;def" arg2="in" arg3="Ensures">
    <goal name="pps_seq_pred&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="pps_seq_pred&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures">
      <goal name="pps_seq_pred&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="1.71" steps="781211"/></proof>
      </goal>
      <goal name="pps_seq_pred&#39;vc.5.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.24" steps="741594"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_basis_par&#39;vc" expl="VC for pps_apply_basis_par" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_basis_par&#39;vc.0" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_apply_basis_bv">
   <goal name="pps_apply_basis_par&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="apply" proved="true" arg1="scalar_eq">
    <goal name="pps_apply_basis_par&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="ket_sum_eq">
     <goal name="pps_apply_basis_par&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.42" steps="577509"/></proof>
     </goal>
     <goal name="pps_apply_basis_par&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="0.77" steps="483281"/></proof>
     </goal>
     <goal name="pps_apply_basis_par&#39;vc.0.0.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_apply_basis_par&#39;vc.0.0.0.2.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="pps_apply_basis_par&#39;vc.0.0.0.2.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="scalar_eq_gen">
        <goal name="pps_apply_basis_par&#39;vc.0.0.0.2.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.69" steps="662282"/></proof>
        </goal>
        <goal name="pps_apply_basis_par&#39;vc.0.0.0.2.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.64" steps="662228"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_basis_par&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.35" steps="578236"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_apply_basis_par&#39;vc.1" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_apply_basis_bv">
   <goal name="pps_apply_basis_par&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="ket_sum_bin_comp_rev" arg2="(fun h t -&gt; ang_exp (ang_add (h_angle_bv h1 (hpart x (h_width h1)) h) (h_angle_bv h2 (tpart x (h_width h1))  t))
                       *.. bv_to_ket (concat (h_basis_ket_bv h1   (hpart x (h_width h1)) h)
                                                      (h_basis_ket_bv h2   (tpart x (h_width h1)) t))),(h_width h1 + h_width h2),(h_range h2),(h_range h1)
">
    <goal name="pps_apply_basis_par&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(ket_sum_l (n_bvs (h_range (pps_par h1 h2)))
       (fun (y:bitvec) -&gt;
         ang_exp (h_angle_bv (pps_par h1 h2) x y)
         *.. bv_to_ket (h_basis_ket_bv (pps_par h1 h2) x y))
       (h_width (pps_par h1 h2)))" arg2="( ket_sum_l (n_bvs (h_range h2 + h_range h1))
  (fun (bv:bitvec) -&gt;
    ((fun (h:bitvec) (t:bitvec) -&gt;
       ang_exp
       (ang_add (h_angle_bv h1 (hpart x (h_width h1)) h)
        (h_angle_bv h2 (tpart x (h_width h1)) t))
       *.. bv_to_ket
           (concat (h_basis_ket_bv h1 (hpart x (h_width h1)) h)
            (h_basis_ket_bv h2 (tpart x (h_width h1)) t)))
     @ hpart bv (h_range h1))
    @ tpart bv (h_range h1))
  (h_width h1 + h_width h2))">
     <goal name="pps_apply_basis_par&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Hinst">
      <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="pps_apply_basis_bv">
       <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
        <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
         <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="ket_sum_scalar_rev_l">
          <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="ket_sum_scalar_rev_l">
           <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
            <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.57" steps="641774"/></proof>
            </goal>
            <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="0.87" steps="540881"/></proof>
            </goal>
            <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="add_eq">
             <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.69" steps="540881"/></proof>
             </goal>
             <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.2.1" expl="apply premises" proved="true">
             <transf name="assert" proved="true" arg1="(is_a_ket_l (pps_apply_basis h2 (tpart x (h_width h1))) (h_width h2))">
              <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.2.1.0" expl="asserted formula" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.2.1.0.0" expl="asserted formula" proved="true">
               <transf name="apply" proved="true" arg1="pps_apply_basis&#39;spec1">
                <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.2.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.88" steps="752312"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.2.1.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="1.19" steps="574174"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="pps_apply_basis_bv">
               <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
                 <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="scalar_assoc">
                  <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="scalar_eq_gen">
                   <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
                    <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.68" steps="695598"/></proof>
                    </goal>
                    <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="0.79" steps="591981"/></proof>
                    </goal>
                    <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                    <transf name="replace" proved="true" arg1="(h_width h1 + h_width h2)" arg2="(h_width h2 + h_width h1)">
                     <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                     <transf name="apply" proved="true" arg1="add_eq">
                      <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="0.91" steps="591981"/></proof>
                      </goal>
                      <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.2.0.1" expl="apply premises" proved="true">
                      <transf name="assert" proved="true" arg1="(is_a_ket_l (ang_exp (h_angle_bv h1 (hpart x (h_width h1)) a)
     *.. bv_to_ket (h_basis_ket_bv h1 (hpart x (h_width h1)) a)) (h_width h1))">
                       <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.2.0.1.0" expl="asserted formula" proved="true">
                       <transf name="apply" proved="true" arg1="scalar_ket_l">
                        <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.2.0.1.0.0" expl="apply premises" proved="true">
                        <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                         <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.2.0.1.0.0.0" expl="apply premises" proved="true">
                         <proof prover="0"><result status="valid" time="0.77"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.2.0.1.1" expl="apply premises" proved="true">
                       <proof prover="8"><result status="valid" time="1.31" steps="626998"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.2.1" expl="equality hypothesis" proved="true">
                     <proof prover="8"><result status="valid" time="0.76" steps="591997"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                       <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                        <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="scalar_assoc">
                         <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                         <transf name="apply" proved="true" arg1="scalar_eq_gen">
                          <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
                          <proof prover="8"><result status="valid" time="1.30" steps="626959"/></proof>
                          </goal>
                          <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0.0.1" expl="apply premises" proved="true">
                          <proof prover="8"><result status="valid" time="1.31" steps="626959"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="0"><result status="valid" time="0.73"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="scalar_ket_l">
                    <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                     <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="2.07" steps="816834"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <transf name="assert" proved="true" arg1="(is_a_ket_l (ang_exp (h_angle_bv h1 (hpart x (h_width h1)) a)
   *.. bv_to_ket (h_basis_ket_bv h1 (hpart x (h_width h1)) a)) (h_width h1))">
                  <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.2.0" expl="asserted formula" proved="true">
                  <transf name="apply" proved="true" arg1="scalar_ket_l">
                   <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                   <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                    <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.00" steps="810523"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.2.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.36" steps="626958"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.3" expl="rewrite premises" proved="true">
                 <proof prover="4"><result status="valid" time="1.51" steps="57376"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="1.78" steps="701686"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(ket_length (pps_apply_basis h2 (tpart x (h_width h1))))" arg2="(h_width h2)">
            <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.58" steps="641774"/></proof>
            </goal>
            <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
            <transf name="assert" proved="true" arg1="(is_a_ket_l  (pps_apply_basis h2 (tpart x (h_width h1)))  (h_width h2))">
             <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.1.1.0" expl="asserted formula" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
              <transf name="apply" proved="true" arg1="pps_apply_basis&#39;spec1">
               <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.94" steps="752312"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.0.1.1.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="1.23" steps="574182"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.56" steps="641774"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="scalar_ket_l">
            <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="0.80"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="assert" proved="true" arg1="(is_a_ket_l (pps_apply_basis h2 (tpart x (h_width h1))) (h_width h2))">
          <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.2.0" expl="asserted formula" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.2.0.0" expl="asserted formula" proved="true">
           <transf name="apply" proved="true" arg1="pps_apply_basis&#39;spec1">
            <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.93" steps="752312"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.16" steps="574134"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="1.52" steps="56739"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.63" steps="644141"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.92" steps="641396"/></proof>
      </goal>
      <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.98" steps="641415"/></proof>
      </goal>
      <goal name="pps_apply_basis_par&#39;vc.1.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.97" steps="641774"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_basis_par&#39;vc.1.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="pps_apply_basis_par&#39;vc.1.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
       <goal name="pps_apply_basis_par&#39;vc.1.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.99" steps="641423"/></proof>
       </goal>
       <goal name="pps_apply_basis_par&#39;vc.1.0.0.1.0.1" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.70"/></proof>
       </goal>
       <goal name="pps_apply_basis_par&#39;vc.1.0.0.1.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.96" steps="641475"/></proof>
       </goal>
       <goal name="pps_apply_basis_par&#39;vc.1.0.0.1.0.3" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_apply_basis_par&#39;vc.1.0.0.1.0.3.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="pps_apply_basis_par&#39;vc.1.0.0.1.0.3.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.24" steps="703612"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_basis_par&#39;vc.1.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.95" steps="640095"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_par&#39;vc" expl="VC for pps_apply_par" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_par&#39;vc.0" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ket_sum_bin_comp" arg2="(fun (x1 y1:bitvec) -&gt;    get_ket (kronecker x y) ( bv_to_int x1 * (power 2 (h_width h2)) + bv_to_int y1 )
    *.. pps_apply_basis (pps_par h1 h2) (concat x1 y1)),(h_width h1 + h_width h2),(h_width h2),(h_width h1)">
   <goal name="pps_apply_par&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="get_pps_apply">
    <goal name="pps_apply_par&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="get_pps_apply">
     <goal name="pps_apply_par&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="get_pps_apply">
      <goal name="pps_apply_par&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(kronecker
    (ket_sum_l (n_bvs (h_width h1))
     (fun (y1:bitvec) -&gt; get_ket x (bv_to_int y1) *.. pps_apply_basis h1 y1)
     (h_width h1))
    (ket_sum_l (n_bvs (h_width h2))
     (fun (y1:bitvec) -&gt; get_ket y (bv_to_int y1) *.. pps_apply_basis h2 y1)
     (h_width h2)))" arg2="( ket_sum_l (n_bvs (h_width h1))
  (fun (bvy:bitvec) -&gt;
    ket_sum_l (n_bvs (h_width h2))
    (fun (bvx:bitvec) -&gt;
      ((fun (x1:bitvec) (y1:bitvec) -&gt;
         get_ket (kronecker x y)
         ((bv_to_int x1 * power 2 (h_width h2)) + bv_to_int y1)
         *.. pps_apply_basis (pps_par h1 h2) (concat x1 y1))
       @ bvy)
      @ bvx)
    (h_width h1 + h_width h2))
  (h_width h1 + h_width h2))
">
       <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="Hinst">
        <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
         <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.75" steps="581793"/></proof>
         </goal>
         <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="0.55"/></proof>
         </goal>
         <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.75" steps="582515"/></proof>
         </goal>
         <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
           <transf name="assert" proved="true" arg1="(a = (concat (hpart a (h_width h1)) (tpart a (h_width h1))))">
            <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.3.0.0.0" expl="asserted formula" proved="true">
            <transf name="rewrite" proved="true" arg1="concat_and_rec">
             <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.3.0.0.0.0" expl="asserted formula" proved="true">
             <proof prover="8"><result status="valid" time="0.89" steps="557458"/></proof>
             </goal>
             <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.04" steps="666979"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="scalar_eq_gen">
             <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.3.0.0.1.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.51" steps="593323"/></proof>
             </goal>
             <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.3.0.0.1.1" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="bv_to_int_hpart">
              <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.3.0.0.1.1.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="bv_to_int_tpart">
               <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.3.0.0.1.1.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(length a - h_width h1)" arg2="(h_width h2)">
                <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.3.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                <transf name="instantiate" proved="true" arg1="decomp" arg2="(bv_to_int a),(power 2 (h_width h2))">
                 <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.3.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="((div (bv_to_int a) (power 2 (h_width h2)) * power 2 (h_width h2))
     + mod (bv_to_int a) (power 2 (h_width h2)))" arg2="(bv_to_int a)">
                  <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.3.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="0.91" steps="557586"/></proof>
                  </goal>
                  <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.3.0.0.1.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="8"><result status="valid" time="1.72" steps="668908"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.3.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="8"><result status="valid" time="1.74" steps="669294"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.3.0.0.1.1.0.1" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="1.75" steps="667901"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.0.3.0.0.1.1.1" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.73" steps="667901"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.36" steps="581330"/></proof>
        </goal>
        <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.38" steps="581360"/></proof>
        </goal>
        <goal name="pps_apply_par&#39;vc.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.43" steps="582311"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
         <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
          <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="3.05" steps="659376"/></proof>
          </goal>
          <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="0.62" steps="483975"/></proof>
          </goal>
          <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="3.04" steps="659775"/></proof>
          </goal>
          <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
             <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
              <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.0" expl="apply premises" proved="true">
              <transf name="assert" proved="true" arg1="(forall a b. 0 &lt;= a -&gt; 0 &lt;= b -&gt; 0&lt;= a+b)">
               <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.0.0" expl="asserted formula" proved="true">
               <proof prover="8"><result status="valid" time="1.19" steps="593427"/></proof>
               </goal>
               <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.0.1" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="h">
                <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.62" steps="664183"/></proof>
                </goal>
                <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.0.1.1" expl="apply premises" proved="true">
                <transf name="assert" proved="true" arg1="(is_a_ket_l (get_ket x (bv_to_int a) *.. pps_apply_basis h1 a) (h_width h1))">
                 <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.0.1.1.0" expl="asserted formula" proved="true">
                 <transf name="apply" proved="true" arg1="scalar_ket_l">
                  <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.63" steps="664785"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.0.1.1.1" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.64" steps="668053"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="0.71" steps="557450"/></proof>
              </goal>
              <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.2" expl="apply premises" proved="true">
              <transf name="assert" proved="true" arg1="(is_a_ket_l (get_ket x (bv_to_int a) *.. pps_apply_basis h1 a) (h_width h1))">
               <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.2.0" expl="asserted formula" proved="true">
               <proof prover="8"><result status="valid" time="1.59" steps="666849"/></proof>
               </goal>
               <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.2.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.23" steps="593852"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                 <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                  <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="scalar_assoc">
                   <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="apply" proved="true" arg1="scalar_eq_gen">
                    <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.74" steps="672732"/></proof>
                    </goal>
                    <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
                     <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                     <transf name="replace" proved="true" arg1="(power 2 (h_width h2))" arg2="(rows y)
">
                      <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                      <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="((bv_to_int a1 * rows y) + bv_to_int a),(rows y),(bv_to_int a1),(bv_to_int a)">
                       <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                       <transf name="split_all_full" proved="true" >
                        <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                        <transf name="replace" proved="true" arg1="(div ((bv_to_int a1 * rows y) + bv_to_int a) (rows y))" arg2="(bv_to_int a1)">
                         <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                         <transf name="replace" proved="true" arg1="(mod ((bv_to_int a1 * rows y) + bv_to_int a) (rows y))" arg2="(bv_to_int a)">
                          <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                          <proof prover="8"><result status="valid" time="0.92" steps="655889"/></proof>
                          </goal>
                          <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                          <proof prover="8"><result status="valid" time="1.90" steps="777682"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                         <proof prover="8"><result status="valid" time="1.94" steps="777706"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                      <proof prover="8"><result status="valid" time="1.22" steps="597217"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.21" steps="593618"/></proof>
                     </goal>
                     <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.20" steps="593618"/></proof>
                     </goal>
                     <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3" expl="rewrite premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.0" expl="rewrite premises" proved="true">
                      <transf name="assert" proved="true" arg1="(forall a b. 0 &lt;= a -&gt; 0 &lt;= b -&gt; 0&lt;= a+b)">
                       <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.0.0" expl="asserted formula" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.0.0.0" expl="asserted formula" proved="true">
                        <proof prover="8"><result status="valid" time="1.15" steps="593285"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.0.1" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="h">
                        <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.0.1.0" expl="apply premises" proved="true">
                        <transf name="assert" proved="true" arg1="(forall a b. 0 &lt;= a -&gt; 0 &lt;= b -&gt; 0&lt;= a*b)">
                         <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.0.1.0.0" expl="asserted formula" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.0.1.0.0.0" expl="asserted formula" proved="true">
                          <proof prover="0"><result status="valid" time="0.73"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.0.1.0.1" expl="apply premises" proved="true">
                         <transf name="apply" proved="true" arg1="h">
                          <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.0.1.0.1.0" expl="apply premises" proved="true">
                          <proof prover="8"><result status="valid" time="1.60" steps="666077"/></proof>
                          </goal>
                          <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.0.1.0.1.1" expl="apply premises" proved="true">
                          <proof prover="8"><result status="valid" time="1.62" steps="667000"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.0.1.1" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="1.74" steps="665987"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1" expl="rewrite premises" proved="true">
                      <transf name="replace" proved="true" arg1="(power 2 (h_width h2))" arg2="(rows y)
">
                       <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1.0" expl="rewrite premises" proved="true">
                       <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="((bv_to_int a1 * rows y) + bv_to_int a),(rows y),(bv_to_int a1),(bv_to_int a)">
                        <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1.0.0" expl="rewrite premises" proved="true">
                        <transf name="split_all_full" proved="true" >
                         <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1.0.0.0" expl="rewrite premises" proved="true">
                         <transf name="replace" proved="true" arg1="(div ((bv_to_int a1 * rows y) + bv_to_int a) (rows y))" arg2="(bv_to_int a1)">
                          <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1.0.0.0.0" expl="rewrite premises" proved="true">
                          <transf name="replace" proved="true" arg1="(mod ((bv_to_int a1 * rows y) + bv_to_int a) (rows y))" arg2="(bv_to_int a)">
                           <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1.0.0.0.0.0" expl="rewrite premises" proved="true">
                           <transf name="assert" proved="true" arg1="(bv_to_int a1 &lt; rows x)">
                            <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
                            <proof prover="8"><result status="valid" time="2.09" steps="778288"/></proof>
                            </goal>
                            <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                            <transf name="assert" proved="true" arg1="(bv_to_int a &lt; rows y)">
                             <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
                             <proof prover="8"><result status="valid" time="2.03" steps="778313"/></proof>
                             </goal>
                             <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                             <transf name="assert" proved="true" arg1="((bv_to_int a1 * rows y) &lt;= (rows x -1) * rows y)">
                              <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1.0.0.0.0.0.1.1.0" expl="asserted formula" proved="true">
                              <transf name="assert" proved="true" arg1="(bv_to_int a &lt;= rows y-1)">
                               <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1.0.0.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
                               <proof prover="8"><result status="valid" time="0.93" steps="659562"/></proof>
                               </goal>
                               <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1.0.0.0.0.0.1.1.0.1" expl="asserted formula" proved="true">
                               <transf name="apply" proved="true" arg1="compat_int_order_mult">
                                <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1.0.0.0.0.0.1.1.0.1.0" expl="apply premises" proved="true">
                                <proof prover="8"><result status="valid" time="2.01" steps="777893"/></proof>
                                </goal>
                                <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1.0.0.0.0.0.1.1.0.1.1" expl="apply premises" proved="true">
                                <proof prover="8"><result status="valid" time="2.04" steps="777911"/></proof>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1.0.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                              <proof prover="8"><result status="valid" time="1.52" steps="698076"/></proof>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                           <proof prover="8"><result status="valid" time="2.08" steps="777682"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1.0.0.0.1" expl="equality hypothesis" proved="true">
                          <proof prover="8"><result status="valid" time="2.01" steps="777706"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.0.3.0.0.0.0.0.1.3.1.1" expl="equality hypothesis" proved="true">
                       <proof prover="8"><result status="valid" time="1.26" steps="597217"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.1.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="scalar_ket_l">
                <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.71" steps="665891"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.2" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.2.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="ket_l_to_ket_gen">
               <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.2.0.0" expl="apply premises" proved="true">
               <transf name="exists" proved="true" arg1="(h_width h1)">
                <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.2.0.0.0" proved="true">
                <transf name="apply" proved="true" arg1="scalar_ket_l">
                 <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="2.01" steps="769275"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.3" expl="rewrite premises" proved="true">
             <transf name="rewrite" proved="true" arg1="n_bvs_card">
              <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.3.0" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.64" steps="665211"/></proof>
              </goal>
              <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.0.3.0.0.3.1" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.68" steps="664024"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="scalar_ket_l">
            <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.72" steps="664631"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="3.09" steps="659059"/></proof>
         </goal>
         <goal name="pps_apply_par&#39;vc.0.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="1.43" steps="55192"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_par&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.65" steps="483977"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_par&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.65" steps="483977"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="pps_apply_par&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(h_width (pps_par h1 h2))" arg2="(h_width h1 + h_width h2)">
     <goal name="pps_apply_par&#39;vc.0.0.1.0" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="pps_apply_par&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.44" steps="581360"/></proof>
      </goal>
      <goal name="pps_apply_par&#39;vc.0.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.46" steps="581330"/></proof>
      </goal>
      <goal name="pps_apply_par&#39;vc.0.0.1.0.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="0.67" steps="483977"/></proof>
      </goal>
      <goal name="pps_apply_par&#39;vc.0.0.1.0.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="0.67" steps="483977"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_par&#39;vc.0.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.44" steps="582515"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_par_pred&#39;vc" expl="VC for pps_par_pred" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_par_pred&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.41" steps="652049"/></proof>
  </goal>
  <goal name="pps_par_pred&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="652061"/></proof>
  </goal>
  <goal name="pps_par_pred&#39;vc.2" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures1">
   <goal name="pps_par_pred&#39;vc.2.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Requires3">
    <goal name="pps_par_pred&#39;vc.2.0.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
    <goal name="pps_par_pred&#39;vc.2.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.49" steps="652086"/></proof>
    </goal>
    <goal name="pps_par_pred&#39;vc.2.0.2" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.38" steps="652086"/></proof>
    </goal>
    <goal name="pps_par_pred&#39;vc.2.0.3" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.81" steps="617039"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_par_pred&#39;vc.3" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="pps_par_pred&#39;vc.3.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Requires3">
    <goal name="pps_par_pred&#39;vc.3.0.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
    <goal name="pps_par_pred&#39;vc.3.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.40" steps="652408"/></proof>
    </goal>
    <goal name="pps_par_pred&#39;vc.3.0.2" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.40" steps="652408"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_par_pred&#39;vc.4" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(kronecker (pps_apply h1 x) (pps_apply h2 y))" arg2="(pps_apply (pps_par h1 h2) (kronecker x y))">
   <goal name="pps_par_pred&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="get_pps_apply_equiv">
    <goal name="pps_par_pred&#39;vc.4.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.47" steps="652087"/></proof>
    </goal>
    <goal name="pps_par_pred&#39;vc.4.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.06" steps="616794"/></proof>
    </goal>
    <goal name="pps_par_pred&#39;vc.4.0.2" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="0.82"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_par_pred&#39;vc.4.1" expl="equality hypothesis" proved="true">
   <proof prover="8"><result status="valid" time="1.44" steps="652181"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_basis_anc&#39;vc" expl="VC for pps_apply_basis_anc" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_basis_anc&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.05" steps="516995"/></proof>
  </goal>
  <goal name="pps_apply_basis_anc&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.85" steps="511404"/></proof>
  </goal>
  <goal name="pps_apply_basis_anc&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.16" steps="545046"/></proof>
  </goal>
  <goal name="pps_apply_basis_anc&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.43" steps="652486"/></proof>
  </goal>
  <goal name="pps_apply_basis_anc&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.91" steps="684448"/></proof>
  </goal>
  <goal name="pps_apply_basis_anc&#39;vc.5" expl="assertion" proved="true">
  <transf name="instantiate" proved="true" arg1="sum_filter_decomp" arg2="(n_bvs i),(n_bvs (h_range h&#39;)),(fun a b -&gt; h_basis_ket_bv h x b = concat (int_to_bv k (h_width h&#39;)) a),(fun (y1:bitvec) -&gt; h_basis_ket_bv h&#39; x&#39; y1 = int_to_bv k (h_width h&#39;)),(fun y -&gt; ang_exp ((h_angle h&#39; @ getbv x&#39;)  (getbv y)))">
   <goal name="pps_apply_basis_anc&#39;vc.5.0" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(sum (n_bvs i)
    (fun (l:bitvec) -&gt;
      sum
      (my_filter (n_bvs (h_range h&#39;))
       (fun (y1:bitvec) -&gt;
         h_basis_ket_bv h x y1 = concat (int_to_bv k (h_width h&#39;)) l))
      (fun (y1:bitvec) -&gt; ang_exp ((h_angle h&#39; @ getbv x&#39;) @ getbv y1))))" arg2="(sum (n_bvs i)
  (fun (l:bitvec) -&gt;
    sum
    (my_filter (n_bvs (h_range h&#39;))
     ((fun (a:bitvec) (b:bitvec) -&gt;
        h_basis_ket_bv h x b = concat (int_to_bv k (h_width h&#39;)) a)
      @ l))
    (fun (y1:bitvec) -&gt; ang_exp ((h_angle h&#39; @ getbv x&#39;) @ getbv y1))))">
    <goal name="pps_apply_basis_anc&#39;vc.5.0.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="pps_apply_basis_anc&#39;vc.5.0.0.0" expl="assertion" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0" expl="rewrite premises" proved="true">
       <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
        <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0" expl="rewrite premises" proved="true">
        <transf name="replace" proved="true" arg1="h&#39;" arg2="(pps_ancs h i)" arg3="in" arg4="H">
         <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="h_basis_ket_bv_anc" arg2="in" arg3="H">
          <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0" expl="rewrite premises" proved="true">
          <transf name="exists" proved="true" arg1="(tpart (h_basis_ket_bv h (concat x&#39; (int_to_bv 0 i)) e) (h_width h - i))">
           <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.0" proved="true">
            <transf name="apply" proved="true" arg1="in_n_bvs">
             <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.75" steps="787113"/></proof>
             </goal>
             <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="tpart_length">
              <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;spec1">
                <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.34" steps="877042"/></proof>
                </goal>
                <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="2.82" steps="1009546"/></proof>
                </goal>
                <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="2.79" steps="1005524"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.0.1.1.0" proved="true">
               <proof prover="8"><result status="valid" time="2.08" steps="921512"/></proof>
               </goal>
               <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.0.1.1.1" proved="true">
               <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;spec1">
                <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.0.1.1.1.0" proved="true">
                <proof prover="8"><result status="valid" time="2.10" steps="921528"/></proof>
                </goal>
                <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.0.1.1.1.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="2.86" steps="1009546"/></proof>
                </goal>
                <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.0.1.1.1.2" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="2.83" steps="1005524"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.1" proved="true">
            <transf name="replace" proved="true" arg1="(h_width (pps_ancs h i))
" arg2="(h_width h&#39;)" arg3="in" arg4="H">
             <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.1.0" proved="true">
             <transf name="replace" proved="true" arg1="(int_to_bv k (h_width h&#39;))" arg2="(hpart (h_basis_ket_bv h (concat x&#39; (int_to_bv 0 i)) e) (h_width h - i))">
              <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.1.0.0" proved="true">
              <transf name="replace" proved="true" arg1="(concat x&#39; (int_to_bv 0 i))" arg2="x">
               <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.1.0.0.0" proved="true">
               <transf name="apply" proved="true" arg1="goal_comm">
                <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="concat_and_rec">
                 <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0" proved="true">
                  <proof prover="8"><result status="valid" time="2.09" steps="921512"/></proof>
                  </goal>
                  <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.1" proved="true">
                  <transf name="rewrite" proved="true" arg1="h_basis_ket_bv&#39;spec1">
                   <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.1.0" proved="true">
                   <proof prover="8"><result status="valid" time="2.06" steps="921528"/></proof>
                   </goal>
                   <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="1.26" steps="877024"/></proof>
                   </goal>
                   <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.70" steps="1005524"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="2.40" steps="865994"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="1.03" steps="748392"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="1.00" steps="748383"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.99" steps="748371"/></proof>
          </goal>
          <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.78" steps="787088"/></proof>
          </goal>
          <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.01" steps="748371"/></proof>
          </goal>
          <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.0.4" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.54" steps="865766"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="1.04" steps="748369"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.1" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.1.0" expl="rewrite premises" proved="true">
       <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
        <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.1.0.0" expl="rewrite premises" proved="true">
        <transf name="replace" proved="true" arg1="h&#39;" arg2="(pps_ancs h i)">
         <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.1.0.0.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="h_basis_ket_bv_anc">
          <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.1.0.0.0.0" expl="rewrite premises" proved="true">
          <transf name="replace" proved="true" arg1="(concat x&#39; (int_to_bv 0 i))" arg2="x">
           <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.1.0.0.0.0.0" expl="rewrite premises" proved="true">
           <transf name="rewrite" proved="true" arg1="H">
            <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.1.0.0.0.0.0.0" expl="rewrite premises" proved="true">
            <proof prover="0"><result status="valid" time="1.03"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="2.59" steps="866735"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.00" steps="748390"/></proof>
          </goal>
          <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.78" steps="787096"/></proof>
          </goal>
          <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.1.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.00" steps="748390"/></proof>
          </goal>
          <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.1.0.0.0.4" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.54" steps="866752"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="pps_apply_basis_anc&#39;vc.5.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="1.01" steps="748388"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_basis_anc&#39;vc.5.0.0.2" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="pps_apply_basis_anc&#39;vc.5.0.0.2.0" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_apply_basis_anc&#39;vc.5.0.0.2.0.0" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.36" steps="869124"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_apply_basis_anc&#39;vc.5.0.1" expl="equality hypothesis" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_apply_basis_anc&#39;vc.6" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures1">
   <goal name="pps_apply_basis_anc&#39;vc.6.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="Assert">
    <goal name="pps_apply_basis_anc&#39;vc.6.0.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="sum_scal_rev">
     <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0" expl="assertion" proved="true">
     <transf name="apply" proved="true" arg1="sum_eq">
      <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures">
         <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="mult_eq_t">
          <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.68" steps="786371"/></proof>
          </goal>
          <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(int_to_bv (bv_to_int (concat (int_to_bv k width&#39;) x)) (h_width h))" arg2="(concat (int_to_bv k (h_width h&#39;)) x)
">
           <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(h_range h)" arg2="(h_range h&#39;)">
            <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="sum_eq">
             <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="((h_angle h&#39; @ getbv x&#39;) @ getbv x)" arg2="((h_angle h @ getbv x2) @ getbv x)">
                <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                </transf>
                </goal>
                <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                <transf name="replace" proved="true" arg1="x2" arg2="(concat x&#39; (int_to_bv 0 i))">
                 <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
                 <transf name="rewrite" proved="true" arg1="Ensures2">
                  <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant">
                    <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="concat_value">
                       <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="8"><result status="valid" time="2.75" steps="1008169"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.25" steps="876451"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                 <proof prover="8"><result status="valid" time="2.34" steps="861171"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="1.03" steps="747713"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="int_to_bv_to_int_">
            <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="1.80" steps="791103"/></proof>
            </goal>
            <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.89" steps="786398"/></proof>
            </goal>
            <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.0.1.1.2" expl="rewrite premises" proved="true">
            <proof prover="0"><result status="valid" time="1.04"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="replace" proved="true" arg1="(h_width h)" arg2="(length (concat (int_to_bv k width&#39;) x))">
          <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.43" steps="860887"/></proof>
           </goal>
           <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.34" steps="863517"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="pps_apply_basis_anc&#39;vc.6.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
          <proof prover="0"><result status="valid" time="0.86"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_apply_basis_anc&#39;vc.6.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.96" steps="685155"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_basis_anc&#39;vc.6.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.72" steps="726825"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_apply_basis_anc&#39;vc.7" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="Assert">
   <goal name="pps_apply_basis_anc&#39;vc.7.0" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(get_ket (pps_apply_basis h x)
    (bv_to_int (concat (int_to_bv k width&#39;) (ket_to_bv (ket i 0)))))" arg2="((fun (j:bitvec) -&gt;
    get_ket (pps_apply_basis h x) (bv_to_int (concat (int_to_bv k width&#39;) j))) (int_to_bv 0 i))">
    <goal name="pps_apply_basis_anc&#39;vc.7.0.0" expl="assertion" proved="true">
    <transf name="apply" proved="true" arg1="sum_null_but_maybe_one_elt">
     <goal name="pps_apply_basis_anc&#39;vc.7.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="4.17" steps="879658"/></proof>
     </goal>
     <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="Requires1">
        <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
         <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(mod (bv_to_int (concat (int_to_bv k1 width&#39;) k)) (rows (ket i 0)))" arg2="(bv_to_int k)">
          <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="mult_zero_t">
           <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="get__ket_value">
            <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="get_indic">
             <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="eliminate_if" proved="true" >
              <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0.0.0.0.0.0" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="1.13"/></proof>
               </goal>
               <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.03" steps="755429"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.80" steps="786527"/></proof>
            </goal>
            <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.49" steps="861203"/></proof>
            </goal>
            <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
            <transf name="replace" proved="true" arg1="i" arg2="(length k)">
             <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.47" steps="861432"/></proof>
             </goal>
             <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0.0.0.3.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="2.25" steps="862189"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="rewrite" proved="true" arg1="bv_to_int_concat">
           <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
           <transf name="replace" proved="true" arg1="(rows (ket i 0))" arg2="(power 2 i)">
            <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
            <transf name="replace" proved="true" arg1="(length k)" arg2="i">
             <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
             <proof prover="7"><result status="valid" time="1.41" steps="8526738"/></proof>
             </goal>
             <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="2.25" steps="862182"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="3.77" steps="883326"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.68" steps="786967"/></proof>
         </goal>
         <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="3.79" steps="880511"/></proof>
         </goal>
         <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.3.0" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.23" steps="861096"/></proof>
          </goal>
          <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.3.1" expl="rewrite premises" proved="true">
          <transf name="replace" proved="true" arg1="(rows y * rows (ket i 0))" arg2="(power 2 (length (concat (int_to_bv k1 width&#39;) k)))">
           <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.3.1.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.20" steps="863736"/></proof>
           </goal>
           <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.3.1.1" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="concat_length">
            <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.3.1.1.0" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="power_sum">
             <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.3.1.1.0.0" expl="equality hypothesis" proved="true">
             <transf name="apply" proved="true" arg1="mult_eq">
              <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.3.1.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="2.30" steps="866437"/></proof>
              </goal>
              <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.3.1.1.0.0.1" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="0.85"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.3.1.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.31" steps="862104"/></proof>
             </goal>
             <goal name="pps_apply_basis_anc&#39;vc.7.0.0.1.0.0.0.3.1.1.0.2" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.31" steps="862130"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_apply_basis_anc&#39;vc.7.0.1" expl="equality hypothesis" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="pps_apply_basis_anc&#39;vc.7.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(ket_to_bv (ket i 0))" arg2="(int_to_bv 0 i)">
      <goal name="pps_apply_basis_anc&#39;vc.7.0.1.0.0" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="0.95" steps="685318"/></proof>
      </goal>
      <goal name="pps_apply_basis_anc&#39;vc.7.0.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="7"><result status="valid" time="3.41" steps="7967781"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_basis_anc&#39;vc.7.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.96" steps="685329"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_apply_basis_anc&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.52" steps="722505"/></proof>
  </goal>
  <goal name="pps_apply_basis_anc&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="723336"/></proof>
  </goal>
  <goal name="pps_apply_basis_anc&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.91" steps="686282"/></proof>
  </goal>
  <goal name="pps_apply_basis_anc&#39;vc.11" expl="precondition" proved="true">
  <transf name="exists" proved="true" arg1="(h_width h)">
   <goal name="pps_apply_basis_anc&#39;vc.11.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_apply_basis_anc&#39;vc.11.0.0" proved="true">
    <proof prover="8"><result status="valid" time="0.96" steps="686490"/></proof>
    </goal>
    <goal name="pps_apply_basis_anc&#39;vc.11.0.1" proved="true">
    <transf name="replace" proved="true" arg1="(h_width h)" arg2="(h_width h - i+i)">
     <goal name="pps_apply_basis_anc&#39;vc.11.0.1.0" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="pps_apply_basis_anc&#39;vc.11.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.60" steps="724051"/></proof>
      </goal>
      <goal name="pps_apply_basis_anc&#39;vc.11.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.50" steps="724052"/></proof>
      </goal>
      <goal name="pps_apply_basis_anc&#39;vc.11.0.1.0.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.64" steps="729832"/></proof>
      </goal>
      <goal name="pps_apply_basis_anc&#39;vc.11.0.1.0.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.62" steps="724483"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_basis_anc&#39;vc.11.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="0.96" steps="686504"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_apply_basis_anc&#39;vc.12" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
   <goal name="pps_apply_basis_anc&#39;vc.12.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Requires2">
    <goal name="pps_apply_basis_anc&#39;vc.12.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
     <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="mult_eq_t">
      <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="Assert">
       <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="Requires2">
        <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
         <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(div
      (bv_to_int
       (concat (int_to_bv (div i (rows (ket i1 0))) width&#39;)
        (ket_to_bv (ket i1 0))))
      (rows (ket i1 0)))" arg2="(div i (rows (ket i1 0)))">
          <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(mod
      (bv_to_int
       (concat (int_to_bv (div i (rows (ket i1 0))) width&#39;)
        (ket_to_bv (ket i1 0))))
      (rows (ket i1 0)))" arg2="(0)">
           <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.15" steps="832136"/></proof>
           </goal>
           <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="bv_to_int_concat">
            <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv_">
             <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
             <transf name="replace" proved="true" arg1="(length (ket_to_bv (ket i1 0)))" arg2="i1">
              <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
              <transf name="replace" proved="true" arg1="(rows (ket i1 0))" arg2="(power 2 i1)">
               <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
               <transf name="replace" proved="true" arg1="(bv_to_int (ket_to_bv (ket i1 0)) )" arg2="0">
                <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="equality hypothesis" proved="true">
                <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="((power 2 i1 * div i (power 2 i1)) + 0) ,(power 2 i1),(div i (power 2 i1)),0">
                 <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="equality hypothesis" proved="true">
                 <proof prover="8"><result status="valid" time="2.06" steps="816006"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="8"><result status="valid" time="2.13" steps="810913"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="0.91" steps="686592"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="2.15" steps="812433"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.50" steps="724182"/></proof>
             </goal>
             <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
             <transf name="replace" proved="true" arg1="(rows (ket i1 0))" arg2="(power 2 i1)">
              <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
              <transf name="replace" proved="true" arg1="(ket_length (pps_apply_basis h x))" arg2="(width&#39;+i1)" arg3="in" arg4="H">
               <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.2.0.0" expl="rewrite premises" proved="true">
               <transf name="rewrite" proved="true" arg1="power_sum" arg2="in" arg3="H">
                <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.2.0.0.0" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.2.0.0.0.0" expl="rewrite premises" proved="true">
                 <proof prover="4"><result status="valid" time="1.44" steps="75672"/></proof>
                 </goal>
                 <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.2.0.0.0.1" expl="rewrite premises" proved="true">
                 <transf name="assert" proved="true" arg1="(div i (power 2 i1) * power 2 i1 &lt; power 2 width&#39; * power 2 i1)">
                  <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.2.0.0.0.1.0" expl="asserted formula" proved="true">
                  <proof prover="7"><result status="valid" time="1.64" steps="8768803"/></proof>
                  </goal>
                  <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.2.0.0.0.1.1" expl="rewrite premises" proved="true">
                  <proof prover="0"><result status="valid" time="0.79"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.2.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="1.47" steps="724180"/></proof>
                </goal>
                <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.2.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="1.47" steps="724181"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.2.0.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="1.49" steps="724684"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.0.1.0.2.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="0.87" steps="686592"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="rewrite" proved="true" arg1="bv_to_int_concat">
           <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv_">
            <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
            <transf name="replace" proved="true" arg1="(length (ket_to_bv (ket i1 0)))" arg2="i1">
             <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
             <transf name="replace" proved="true" arg1="(rows (ket i1 0))" arg2="(power 2 i1)">
              <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
              <transf name="replace" proved="true" arg1="(bv_to_int (ket_to_bv (ket i1 0)) )" arg2="0">
               <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="equality hypothesis" proved="true">
               <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="((power 2 i1 * div i (power 2 i1)) + 0) ,(power 2 i1),(div i (power 2 i1)),0">
                <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="equality hypothesis" proved="true">
                <proof prover="8"><result status="valid" time="2.20" steps="816122"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="2.22" steps="810913"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="0.91" steps="686592"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="2.21" steps="812433"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.60" steps="724182"/></proof>
            </goal>
            <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
            <transf name="replace" proved="true" arg1="(rows (ket i1 0))" arg2="(power 2 i1)">
             <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
             <transf name="replace" proved="true" arg1="(ket_length (pps_apply_basis h x))" arg2="(width&#39;+i1)" arg3="in" arg4="H">
              <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.2.0.0" expl="rewrite premises" proved="true">
              <transf name="rewrite" proved="true" arg1="power_sum" arg2="in" arg3="H">
               <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.2.0.0.0" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.2.0.0.0.0" expl="rewrite premises" proved="true">
                <proof prover="4"><result status="valid" time="1.56" steps="75672"/></proof>
                </goal>
                <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.2.0.0.0.1" expl="rewrite premises" proved="true">
                <transf name="assert" proved="true" arg1="(div i (power 2 i1) * power 2 i1 &lt; power 2 width&#39; * power 2 i1)">
                 <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.2.0.0.0.1.0" expl="asserted formula" proved="true">
                 <proof prover="7"><result status="valid" time="1.55" steps="8768803"/></proof>
                 </goal>
                 <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.2.0.0.0.1.1" expl="rewrite premises" proved="true">
                 <proof prover="0"><result status="valid" time="0.96"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.2.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="1.61" steps="724180"/></proof>
               </goal>
               <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.2.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="1.57" steps="724181"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.2.0.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="1.67" steps="724684"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.0.1.0.2.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="1.16" steps="686592"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.69" steps="724660"/></proof>
         </goal>
         <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.96" steps="686592"/></proof>
         </goal>
         <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.24" steps="821257"/></proof>
          </goal>
          <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.3.1" expl="rewrite premises" proved="true">
          <transf name="replace" proved="true" arg1="(rows y * rows (ket i1 0))" arg2="(power 2(length (concat (int_to_bv (div i (rows (ket i1 0))) width&#39;) (ket_to_bv (ket i1 0)))))">
           <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.3.1.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="bv_to_int_bound">
            <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.3.1.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.25" steps="823991"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.0.0.3.1.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="2.49" steps="921578"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="(rows (ket i1 0))" arg2="(power 2 i1)">
        <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="replace" proved="true" arg1="(ket_length (pps_apply_basis h x))" arg2="(width&#39;+i1)" arg3="in" arg4="H">
         <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="power_sum" arg2="in" arg3="H">
          <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.1.0.0.0.0" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="1.70" steps="75672"/></proof>
           </goal>
           <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="assert" proved="true" arg1="(div i (power 2 i1) * power 2 i1 &lt; power 2 width&#39; * power 2 i1)">
            <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.1.0.0.0.1.0" expl="asserted formula" proved="true">
            <proof prover="7"><result status="valid" time="1.49" steps="8768803"/></proof>
            </goal>
            <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="0"><result status="valid" time="0.83"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.49" steps="724180"/></proof>
          </goal>
          <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.47" steps="724181"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="1.58" steps="724684"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="0.93" steps="686592"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_basis_anc&#39;vc.12.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="0.87" steps="686590"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_basis_anc&#39;vc.12.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.62" steps="724660"/></proof>
     </goal>
     <goal name="pps_apply_basis_anc&#39;vc.12.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.90" steps="686592"/></proof>
     </goal>
     <goal name="pps_apply_basis_anc&#39;vc.12.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.18" steps="814677"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_basis_anc&#39;vc.12.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.59" steps="724640"/></proof>
   </goal>
   <goal name="pps_apply_basis_anc&#39;vc.12.2" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.92" steps="686592"/></proof>
   </goal>
   <goal name="pps_apply_basis_anc&#39;vc.12.3" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="2.14" steps="809876"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_apply_basis_anc&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.49" steps="724069"/></proof>
  </goal>
  <goal name="pps_apply_basis_anc&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.47" steps="724449"/></proof>
  </goal>
  <goal name="pps_apply_basis_anc&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.41" steps="724534"/></proof>
  </goal>
  <goal name="pps_apply_basis_anc&#39;vc.16" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(valid_index (ket i 0) 0  0 /\ get_ket (ket i 0) 0 &lt;&gt; c_zero)">
   <goal name="pps_apply_basis_anc&#39;vc.16.0" expl="asserted formula" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_apply_basis_anc&#39;vc.16.0.0" expl="asserted formula" proved="true">
    <proof prover="8"><result status="valid" time="2.06" steps="806698"/></proof>
    </goal>
    <goal name="pps_apply_basis_anc&#39;vc.16.0.1" expl="asserted formula" proved="true">
    <proof prover="8"><result status="valid" time="2.12" steps="806291"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_basis_anc&#39;vc.16.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.61" steps="725101"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_apply_basis_anc&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.92" steps="686892"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_basis_anc_&#39;vc" expl="VC for pps_apply_basis_anc_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_basis_anc_&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.00" steps="517299"/></proof>
  </goal>
  <goal name="pps_apply_basis_anc_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.81" steps="511898"/></proof>
  </goal>
  <goal name="pps_apply_basis_anc_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.63" steps="511916"/></proof>
  </goal>
  <goal name="pps_apply_basis_anc_&#39;vc.3" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="concat_length">
   <goal name="pps_apply_basis_anc_&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.07" steps="545851"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_apply_basis_anc_&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.11" steps="546310"/></proof>
  </goal>
  <goal name="pps_apply_basis_anc_&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.63" steps="511936"/></proof>
  </goal>
  <goal name="pps_apply_basis_anc_&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.64" steps="511939"/></proof>
  </goal>
  <goal name="pps_apply_basis_anc_&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.12" steps="549132"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_anc&#39;vc" expl="VC for pps_apply_anc" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_anc&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(kronecker  (pps_apply (pps_ancs h i) x) (ket i 0) = pps_apply h (kronecker x (ket i 0)))
">
   <goal name="pps_apply_anc&#39;vc.0.0" expl="asserted formula" proved="true">
   <transf name="rewrite" proved="true" arg1="get_pps_apply">
    <goal name="pps_apply_anc&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
     <goal name="pps_apply_anc&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="x,(h_width h1 - i)">
      <goal name="pps_apply_anc&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="replace" proved="true" arg1="(kronecker x (ket i 0))" arg2="(kronecker (ket_sum_l (n_bvs (h_width h1 - i))
    (fun (bvx:bitvec) -&gt; get_ket x (bv_to_int bvx) *.. bv_to_ket bvx)
    (h_width h1 - i)) (ket i 0))">
       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
        <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <transf name="rewrite" proved="true" arg1="pps_apply_sum">
         <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
         <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
          <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(h_width (pps_ancs h i))" arg2="(h_width h - i)">
           <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(ket_length (ket i 0))" arg2="i">
            <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.14" steps="581442"/></proof>
            </goal>
            <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="1.62" steps="646790"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="0"><result status="valid" time="0.74"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.60"/></proof>
          </goal>
          <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.71"/></proof>
          </goal>
          <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
             <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
              <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="pps_apply_scal">
               <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="scalar_eq_gen">
                <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="instantiate" proved="true" arg1="pps_apply_basis_anc_" arg2="h,a,(path_sem_target (bv_to_ket a))">
                 <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="Hinst">
                  <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="Requires1">
                   <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                   </transf>
                   </goal>
                   <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="replace" proved="true" arg1="(h_width h - i)" arg2="(length a)">
                    <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.47" steps="661855"/></proof>
                    </goal>
                    <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                    <transf name="replace" proved="true" arg1="(h_width h - i)" arg2="(h_width (pps_ancs h i))">
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
                     <proof prover="0"><result status="valid" time="0.77"/></proof>
                     </goal>
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.1.1" expl="equality hypothesis" proved="true">
                     <proof prover="0"><result status="valid" time="0.76"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="0.80" steps="625159"/></proof>
                  </goal>
                  <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="0.81" steps="625166"/></proof>
                  </goal>
                  <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                  <transf name="replace" proved="true" arg1="(pps_apply_basis h (concat a (make_bv (fun (_:int) -&gt; 0) i)))" arg2="(pps_apply h (bv_to_ket (concat a (make_bv (fun (_:int) -&gt; 0) i))))">
                   <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
                   <transf name="replace" proved="true" arg1="(h_width h - i)" arg2="(h_width (pps_ancs h i))">
                    <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
                    <proof prover="0"><result status="valid" time="0.78"/></proof>
                    </goal>
                    <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.0.1" expl="equality hypothesis" proved="true">
                    <proof prover="0"><result status="valid" time="0.77"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.1" expl="equality hypothesis" proved="true">
                   <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
                    <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.1.0" expl="equality hypothesis" proved="true">
                    <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.1.0.0" expl="equality hypothesis" proved="true">
                     <transf name="compute_specified" proved="true" >
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.1.1" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.1.1.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="concat_length">
                      <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.1.1.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="make_bv_length">
                       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.1.1.0.0.0" expl="apply premises" proved="true">
                       <transf name="replace" proved="true" arg1="(length a)" arg2="(h_width h - i)">
                        <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.1.1.0.0.0.0" expl="apply premises" proved="true">
                        <transf name="replace" proved="true" arg1="(h_width h - i)" arg2="(h_width (pps_ancs h i))">
                         <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.1.1.0.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="0"><result status="valid" time="0.79"/></proof>
                         </goal>
                         <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.1.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                         <proof prover="0"><result status="valid" time="0.78"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.1.1.0.0.0.1" expl="equality hypothesis" proved="true">
                        <transf name="replace" proved="true" arg1="(h_width h - i)" arg2="(h_width (pps_ancs h i))">
                         <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.1.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
                         <proof prover="0"><result status="valid" time="0.79"/></proof>
                         </goal>
                         <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.1.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
                         <proof prover="0"><result status="valid" time="0.80"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.1.1.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="8"><result status="valid" time="1.48" steps="693687"/></proof>
                       </goal>
                       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.1.1.0.0.2" expl="rewrite premises" proved="true">
                       <proof prover="8"><result status="valid" time="1.35" steps="661328"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.3.1.2" expl="rewrite premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.49" steps="690503"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                  <transf name="assert" proved="true" arg1="(is_a_ket_l (kronecker (path_sem_target @ bv_to_ket a) (ket i 0))
  (h_width h))">
                   <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.0" expl="asserted formula" proved="true">
                   <transf name="replace" proved="true" arg1="(kronecker (path_sem_target @ bv_to_ket a) (ket i 0))" arg2="(pps_apply h1  (kronecker (bv_to_ket a) (ket i 0)))
">
                    <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.0.0" expl="asserted formula" proved="true">
                    <transf name="apply" proved="true" arg1="pps_apply&#39;spec">
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.0.0.0" expl="apply premises" proved="true">
                     <transf name="replace" proved="true" arg1="(h_width h)" arg2="(h_width h -i+i)">
                      <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="kronecker_ket_l">
                       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.0.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="8"><result status="valid" time="1.34" steps="661305"/></proof>
                       </goal>
                       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.0.0.0.0.1" expl="apply premises" proved="true">
                       <proof prover="8"><result status="valid" time="1.38" steps="661328"/></proof>
                       </goal>
                       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.0.0.0.0.2" expl="apply premises" proved="true">
                       <proof prover="0"><result status="valid" time="0.85"/></proof>
                       </goal>
                       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.0.0.0.0.3" expl="apply premises" proved="true">
                       <proof prover="8"><result status="valid" time="1.92" steps="736716"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.0.0.0.1" expl="equality hypothesis" proved="true">
                      <proof prover="8"><result status="valid" time="0.85" steps="625173"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.0.1" expl="equality hypothesis" proved="true">
                    <transf name="rewrite" proved="true" arg1="Requires1">
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.0.1.0" expl="equality hypothesis" proved="true">
                     <transf name="compute_specified" proved="true" >
                     </transf>
                     </goal>
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.0.1.1" expl="rewrite premises" proved="true">
                     <proof prover="0"><result status="valid" time="0.85"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1" expl="rewrite premises" proved="true">
                   <transf name="replace" proved="true" arg1="(pps_apply_basis h1 (concat a (int_to_bv 0 i)))" arg2="(pps_apply h1 (bv_to_ket(concat a (int_to_bv 0 i))))">
                    <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.0" expl="rewrite premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="ket_to_bv_concat">
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.0.0" expl="rewrite premises" proved="true">
                     <transf name="replace" proved="true" arg1="(bv_to_ket (int_to_bv 0 i))" arg2="(ket i 0)">
                      <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.0.0.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="Requires1">
                       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="replace" proved="true" arg1="(h_width h1 - i)" arg2="(h_width (pps_ancs h1 i))">
                        <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.0.0.0.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="1.97" steps="739812"/></proof>
                        </goal>
                        <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                        <proof prover="0"><result status="valid" time="0.80"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.0.0.1" expl="equality hypothesis" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.0.0.1.0" expl="equality hypothesis" proved="true">
                       <proof prover="7"><result status="valid" time="3.73" steps="7832727"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.1" expl="equality hypothesis" proved="true">
                    <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.1.0" expl="equality hypothesis" proved="true">
                     <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                      <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.1.0.0" expl="equality hypothesis" proved="true">
                      <proof prover="8"><result status="valid" time="0.79" steps="625175"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.1.1" expl="rewrite premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="ket_to_bv_concat">
                      <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.1.1.0" expl="rewrite premises" proved="true">
                      <transf name="replace" proved="true" arg1="(bv_to_ket (int_to_bv 0 i))" arg2="(ket i 0)">
                       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.1.1.0.0" expl="rewrite premises" proved="true">
                       <transf name="replace" proved="true" arg1="(h_width h1)" arg2="(h_width h1-i+i)">
                        <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.1.1.0.0.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="kronecker_ket_l">
                         <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.1.1.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="1.28" steps="661319"/></proof>
                         </goal>
                         <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.1.1.0.0.0.1" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="1.33" steps="661342"/></proof>
                         </goal>
                         <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.1.1.0.0.0.2" expl="apply premises" proved="true">
                         <transf name="replace" proved="true" arg1="(h_width h1 - i)" arg2="(h_width (pps_ancs h1 i))">
                          <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.1.1.0.0.0.2.0" expl="apply premises" proved="true">
                          <proof prover="8"><result status="valid" time="1.96" steps="739812"/></proof>
                          </goal>
                          <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.1.1.0.0.0.2.1" expl="equality hypothesis" proved="true">
                          <proof prover="0"><result status="valid" time="0.80"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.1.1.0.0.0.3" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="1.93" steps="740394"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.1.1.0.0.1" expl="equality hypothesis" proved="true">
                        <proof prover="8"><result status="valid" time="0.80" steps="625191"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.1.1.0.1" expl="equality hypothesis" proved="true">
                       <proof prover="7"><result status="valid" time="3.56" steps="7285659"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.4.1.1.2" expl="rewrite premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.37" steps="661889"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                  <transf name="assert" proved="true" arg1="(is_a_ket_l (kronecker (path_sem_target @ bv_to_ket a) (ket i 0))
  (h_width h))">
                   <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.0" expl="asserted formula" proved="true">
                   <transf name="replace" proved="true" arg1="(kronecker (path_sem_target @ bv_to_ket a) (ket i 0))" arg2="(pps_apply h1  (kronecker (bv_to_ket a) (ket i 0)))
">
                    <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.0.0" expl="asserted formula" proved="true">
                    <transf name="apply" proved="true" arg1="pps_apply&#39;spec">
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.0.0.0" expl="apply premises" proved="true">
                     <transf name="replace" proved="true" arg1="(h_width h)" arg2="(h_width h -i+i)">
                      <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="kronecker_ket_l">
                       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.0.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="8"><result status="valid" time="1.34" steps="661305"/></proof>
                       </goal>
                       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.0.0.0.0.1" expl="apply premises" proved="true">
                       <proof prover="8"><result status="valid" time="1.39" steps="661328"/></proof>
                       </goal>
                       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.0.0.0.0.2" expl="apply premises" proved="true">
                       <proof prover="0"><result status="valid" time="0.85"/></proof>
                       </goal>
                       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.0.0.0.0.3" expl="apply premises" proved="true">
                       <proof prover="8"><result status="valid" time="1.89" steps="736716"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.0.0.0.1" expl="equality hypothesis" proved="true">
                      <proof prover="8"><result status="valid" time="0.81" steps="625173"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.0.1" expl="equality hypothesis" proved="true">
                    <transf name="rewrite" proved="true" arg1="Requires1">
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.0.1.0" expl="equality hypothesis" proved="true">
                     <transf name="compute_specified" proved="true" >
                     </transf>
                     </goal>
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.0.1.1" expl="rewrite premises" proved="true">
                     <proof prover="0"><result status="valid" time="0.67"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1" expl="rewrite premises" proved="true">
                   <transf name="assert" proved="true" arg1="(rows (kronecker (path_sem_target @ bv_to_ket a) (ket i 0))  = power 2 (h_width h1 - i) * power 2 i )
">
                    <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.0" expl="asserted formula" proved="true">
                    <transf name="rewrite" proved="true" arg1="power_sum_rev">
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.0.0" expl="asserted formula" proved="true">
                     <proof prover="8"><result status="valid" time="1.42" steps="665445"/></proof>
                     </goal>
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.0.1" expl="rewrite premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.41" steps="661319"/></proof>
                     </goal>
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.0.2" expl="rewrite premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.34" steps="661342"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1" expl="rewrite premises" proved="true">
                    <transf name="assert" proved="true" arg1="(columns (kronecker (path_sem_target @ bv_to_ket a) (ket i 0))  = 1)
">
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.0" expl="asserted formula" proved="true">
                     <proof prover="8"><result status="valid" time="1.42" steps="665525"/></proof>
                     </goal>
                     <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="set_is_a_ket_l">
                      <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.0" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="1.35" steps="661379"/></proof>
                      </goal>
                      <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.1" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="kronecker_columns" arg2="in" arg3="h">
                       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.1.0" expl="apply premises" proved="true">
                       <proof prover="4"><result status="valid" time="1.61" steps="72696"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="kronecker_rows" arg2="in" arg3="h1">
                       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2.0" expl="apply premises" proved="true">
                       <transf name="assert" proved="true" arg1="(forall x. x* power 2 i = power 2 (h_width h3 ) -&gt; x = power 2 (h_width h3 -i))">
                        <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2.0.0" expl="asserted formula" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2.0.0.0" expl="asserted formula" proved="true">
                         <transf name="replace" proved="true" arg1="(h_width h4)" arg2="(h_width h4-i+i)" arg3="in" arg4="H">
                          <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2.0.0.0.0" expl="asserted formula" proved="true">
                          <transf name="rewrite" proved="true" arg1="power_sum" arg2="in" arg3="H">
                           <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2.0.0.0.0.0" expl="asserted formula" proved="true">
                           <transf name="assert" proved="true" arg1="(forall a b c. b&lt;&gt; 0 -&gt;a*b = c*b -&gt; a=c)">
                            <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2.0.0.0.0.0.0" expl="asserted formula" proved="true">
                            <proof prover="0"><result status="valid" time="0.70"/></proof>
                            </goal>
                            <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2.0.0.0.0.0.1" expl="asserted formula" proved="true">
                            <transf name="instantiate" proved="true" arg1="h1" arg2="x,(power 2 i),(power 2 (h_width h5 - i))">
                             <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
                             <proof prover="8"><result status="valid" time="1.94" steps="747639"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2.0.0.0.0.1" expl="rewrite premises" proved="true">
                           <proof prover="8"><result status="valid" time="1.38" steps="661442"/></proof>
                           </goal>
                           <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2.0.0.0.0.2" expl="rewrite premises" proved="true">
                           <proof prover="8"><result status="valid" time="1.35" steps="661461"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2.0.0.0.1" expl="equality hypothesis" proved="true">
                          <proof prover="8"><result status="valid" time="0.83" steps="625300"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2.0.1" expl="apply premises" proved="true">
                        <transf name="apply" proved="true" arg1="h">
                         <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2.0.1.0" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="power_sum_rev" arg2="in" arg3="h2">
                          <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2.0.1.0.0" expl="apply premises" proved="true">
                          <transf name="replace" proved="true" arg1="(rows (ket i 0))" arg2="(power 2 i)" arg3="in" arg4="h2">
                           <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2.0.1.0.0.0" expl="apply premises" proved="true">
                           <proof prover="8"><result status="valid" time="0.83" steps="629803"/></proof>
                           </goal>
                           <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2.0.1.0.0.1" expl="equality hypothesis" proved="true">
                           <proof prover="8"><result status="valid" time="1.95" steps="758193"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2.0.1.0.1" expl="rewrite premises" proved="true">
                          <proof prover="8"><result status="valid" time="1.34" steps="661493"/></proof>
                          </goal>
                          <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.5.1.1.1.2.0.1.0.2" expl="rewrite premises" proved="true">
                          <proof prover="8"><result status="valid" time="1.36" steps="661512"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="0.79" steps="624820"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.1" expl="rewrite premises" proved="true">
               <transf name="replace" proved="true" arg1="(h_width h)" arg2="(h_width h-i+i)">
                <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="kronecker_ket_l">
                 <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.34" steps="661087"/></proof>
                 </goal>
                 <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.32" steps="661109"/></proof>
                 </goal>
                 <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="(h_width h - i)" arg2="(h_width (pps_ancs h i))">
                  <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.83" steps="729919"/></proof>
                  </goal>
                  <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1" expl="equality hypothesis" proved="true">
                  <proof prover="0"><result status="valid" time="0.78"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.3" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.90" steps="730470"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.0.3.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                <proof prover="8"><result status="valid" time="0.84" steps="624836"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="1.43" steps="55016"/></proof>
         </goal>
         <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(h_width h)" arg2="(h_width h-i+i)">
            <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_ket_l">
             <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.58" steps="661069"/></proof>
             </goal>
             <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.2.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.37" steps="661091"/></proof>
             </goal>
             <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.2.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.87" steps="731839"/></proof>
             </goal>
             <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.2.0.0.0.3" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.81" steps="730159"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.2.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="1.01" steps="624821"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.66" steps="646807"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.88" steps="731839"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.65" steps="650828"/></proof>
        </goal>
        <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="n_bvs_card">
         <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.66" steps="646990"/></proof>
         </goal>
         <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.0.3.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.13" steps="581324"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_anc&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="1.84" steps="710130"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_anc&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="pps_apply_anc&#39;vc.0.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_apply_anc&#39;vc.0.0.0.1.0.0" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="scalar_ket_l">
        <goal name="pps_apply_anc&#39;vc.0.0.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.94" steps="725517"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_anc&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.97" steps="657223"/></proof>
     </goal>
     <goal name="pps_apply_anc&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <transf name="rewrite" proved="true" arg1="n_bvs_card">
      <goal name="pps_apply_anc&#39;vc.0.0.0.3.0" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.74" steps="644274"/></proof>
      </goal>
      <goal name="pps_apply_anc&#39;vc.0.0.0.3.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.68" steps="643119"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_apply_anc&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.80"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_anc&#39;vc.0.1" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="kronecker_injec_eq_left" arg2="(pps_apply (pps_ancs h1 i) x),(path_sem_target @ x),(ket i 0)
">
    <goal name="pps_apply_anc&#39;vc.0.1.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="Hinst">
     <goal name="pps_apply_anc&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.20" steps="581635"/></proof>
     </goal>
     <goal name="pps_apply_anc&#39;vc.0.1.0.1" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="(get (ket i 0) 0 0 = c_one)
">
      <goal name="pps_apply_anc&#39;vc.0.1.0.1.0" expl="asserted formula" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="pps_apply_anc&#39;vc.0.1.0.1.0.0" expl="asserted formula" proved="true">
       <transf name="apply" proved="true" arg1="ket&#39;spec">
        <goal name="pps_apply_anc&#39;vc.0.1.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.36" steps="679441"/></proof>
        </goal>
        <goal name="pps_apply_anc&#39;vc.0.1.0.1.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.90" steps="752088"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_anc&#39;vc.0.1.0.1.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="4.53" steps="1216762"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_equiv_seq&#39;vc" expl="VC for pps_apply_equiv_seq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_equiv_seq&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_pps_apply_equiv">
   <goal name="pps_apply_equiv_seq&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="pps_apply_equiv_seq&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_seq&#39;spec3">
     <goal name="pps_apply_equiv_seq&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_seq&#39;spec3">
      <goal name="pps_apply_equiv_seq&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.55" steps="606639"/></proof>
      </goal>
      <goal name="pps_apply_equiv_seq&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.25" steps="607854"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_equiv_seq&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.74" steps="570738"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_equiv_seq&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_apply_equiv_seq&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_apply_basis_seq">
     <goal name="pps_apply_equiv_seq&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_apply_basis_seq">
      <goal name="pps_apply_equiv_seq&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(pps_apply_basis h1 x)" arg2="(pps_apply_basis h1&#39; x)">
       <goal name="pps_apply_equiv_seq&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="get_pps_apply_equiv">
        <goal name="pps_apply_equiv_seq&#39;vc.0.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.05" steps="518332"/></proof>
        </goal>
        <goal name="pps_apply_equiv_seq&#39;vc.0.1.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.59" steps="486238"/></proof>
        </goal>
        <goal name="pps_apply_equiv_seq&#39;vc.0.1.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="pps_apply_basis_ket_l">
         <goal name="pps_apply_equiv_seq&#39;vc.0.1.0.0.0.0.2.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="0.60"/></proof>
         </goal>
         <goal name="pps_apply_equiv_seq&#39;vc.0.1.0.0.0.0.2.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.04" steps="518340"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_equiv_seq&#39;vc.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="get_pps_apply_basis_equiv">
        <goal name="pps_apply_equiv_seq&#39;vc.0.1.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.04" steps="518283"/></proof>
        </goal>
        <goal name="pps_apply_equiv_seq&#39;vc.0.1.0.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.61" steps="486238"/></proof>
        </goal>
        <goal name="pps_apply_equiv_seq&#39;vc.0.1.0.0.0.1.2" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="0.61"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_equiv_seq&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="0.60"/></proof>
      </goal>
      <goal name="pps_apply_equiv_seq&#39;vc.0.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.07" steps="521190"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_equiv_seq&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="0.66"/></proof>
     </goal>
     <goal name="pps_apply_equiv_seq&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.62" steps="486238"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_equiv_par&#39;vc" expl="VC for pps_apply_equiv_par" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_equiv_par&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_pps_apply_equiv">
   <goal name="pps_apply_equiv_par&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="1.48" steps="579080"/></proof>
   </goal>
   <goal name="pps_apply_equiv_par&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_apply_equiv_par&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_apply_basis_par">
     <goal name="pps_apply_equiv_par&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="pps_apply_basis_par">
      <goal name="pps_apply_equiv_par&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="kronecker_eq">
       <goal name="pps_apply_equiv_par&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(h_width h1&#39;)" arg2="(h_width h1)">
        <goal name="pps_apply_equiv_par&#39;vc.0.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="get_pps_apply_basis_equiv">
         <goal name="pps_apply_equiv_par&#39;vc.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.14" steps="518382"/></proof>
         </goal>
         <goal name="pps_apply_equiv_par&#39;vc.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="0.82" steps="486333"/></proof>
         </goal>
         <goal name="pps_apply_equiv_par&#39;vc.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.42" steps="583259"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="pps_apply_equiv_par&#39;vc.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="1.08" steps="518399"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_equiv_par&#39;vc.0.1.0.0.0.1" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(h_width h1&#39;)" arg2="(h_width h1)">
        <goal name="pps_apply_equiv_par&#39;vc.0.1.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="get_pps_apply_basis_equiv">
         <goal name="pps_apply_equiv_par&#39;vc.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.07" steps="518382"/></proof>
         </goal>
         <goal name="pps_apply_equiv_par&#39;vc.0.1.0.0.0.1.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="0.61" steps="486333"/></proof>
         </goal>
         <goal name="pps_apply_equiv_par&#39;vc.0.1.0.0.0.1.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.49" steps="587378"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="pps_apply_equiv_par&#39;vc.0.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="1.10" steps="518399"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_equiv_par&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.51" steps="581716"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_equiv_par&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.49" steps="581196"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_equiv_anc&#39;vc" expl="VC for pps_apply_equiv_anc" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_equiv_anc&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_pps_apply_equiv">
   <goal name="pps_apply_equiv_anc&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="0"><result status="valid" time="0.62"/></proof>
   </goal>
   <goal name="pps_apply_equiv_anc&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_apply_equiv_anc&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(pps_apply_basis (pps_ancs h i) x)" arg2="(path_sem_target (bv_to_ket x))">
     <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(pps_apply_basis (pps_ancs h&#39; i) x)" arg2="(pps_apply (pps_ancs h&#39; i) (bv_to_ket x))">
      <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="goal_comm">
       <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="pps_apply_anc">
        <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.73" steps="548742"/></proof>
        </goal>
        <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.28" steps="584869"/></proof>
        </goal>
        <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="0.81"/></proof>
        </goal>
        <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0.0.3" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0.0.3.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(pps_apply h&#39; (kronecker x (ket i 0)))" arg2="(pps_apply h (kronecker x (ket i 0)))">
          <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0.0.3.0.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.60"/></proof>
          </goal>
          <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0.0.3.0.1" expl="equality hypothesis" proved="true">
          <transf name="apply" proved="true" arg1="get_pps_apply_equiv">
           <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0.0.3.0.1.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="1.25" steps="582120"/></proof>
           </goal>
           <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0.0.3.0.1.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="1.23" steps="582044"/></proof>
           </goal>
           <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0.0.3.0.1.2" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(h_width h&#39;)" arg2="(h_width h&#39; -i+i)">
            <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0.0.3.0.1.2.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_ket_l">
             <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0.0.3.0.1.2.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.20" steps="584931"/></proof>
             </goal>
             <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0.0.3.0.1.2.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.16" steps="581643"/></proof>
             </goal>
             <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0.0.3.0.1.2.0.2" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="0.70" steps="548765"/></proof>
             </goal>
             <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0.0.3.0.1.2.0.3" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.61" steps="646948"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0.0.3.0.1.2.1" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="0.91" steps="548779"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.0.0.4" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="0.77"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="0.61"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="pps_apply_basis_anc_">
      <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="0.90" steps="548742"/></proof>
      </goal>
      <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="0.73" steps="548757"/></proof>
      </goal>
      <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.2" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.73"/></proof>
      </goal>
      <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.3" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis_rev">
       <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.3.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(bv_to_ket (concat x (int_to_bv 0 i)))" arg2="(kronecker (bv_to_ket x) (ket i 0))">
        <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.3.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="Requires">
         <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.3.0.0.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="0.62"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.3.0.1" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_to_bv_concat">
         <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.3.0.1.0" expl="equality hypothesis" proved="true">
         <transf name="replace" proved="true" arg1="(bv_to_ket (int_to_bv 0 i))" arg2="(ket i 0)">
          <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.3.0.1.0.0" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="0.72" steps="548740"/></proof>
          </goal>
          <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.3.0.1.0.1" expl="equality hypothesis" proved="true">
          <transf name="apply" proved="true" arg1="int_to_bv_to_ket">
           <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.3.0.1.0.1.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="1.63" steps="646927"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.3.1" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="0.61"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(is_a_ket_l (kronecker (path_sem_target @ (bv_to_ket x)) (ket i 0)) (h_width h))">
       <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.0" expl="asserted formula" proved="true">
       <transf name="replace" proved="true" arg1="(kronecker (path_sem_target @ bv_to_ket x) (ket i 0))" arg2="( pps_apply h1 (kronecker (bv_to_ket x) (ket i 0)))">
        <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.0.0" expl="asserted formula" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.0.0.0" expl="asserted formula" proved="true">
         <transf name="apply" proved="true" arg1="pps_apply&#39;spec">
          <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.0.0.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(h_width h)" arg2="(h_width h-i+i)">
           <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_ket_l">
            <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.35" steps="679818"/></proof>
            </goal>
            <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.38" steps="679821"/></proof>
            </goal>
            <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.0.0.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="0.70"/></proof>
            </goal>
            <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.0.0.0.0.0.3" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.91" steps="750418"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="1.06" steps="642946"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.0.1" expl="equality hypothesis" proved="true">
        <proof prover="0"><result status="valid" time="0.65"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="set_is_a_ket_l">
        <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.19" steps="581636"/></proof>
        </goal>
        <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.1.1" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="0.63"/></proof>
        </goal>
        <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.1.2" expl="apply premises" proved="true">
        <transf name="assert" proved="true" arg1="(rows (path_sem_target @ bv_to_ket x) * rows (ket i 0) = power 2 (h_width h1))">
         <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.1.2.0" expl="asserted formula" proved="true">
         <proof prover="8"><result status="valid" time="1.66" steps="656260"/></proof>
         </goal>
         <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.1.2.1" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(power 2 (h_width h2))" arg2="(power 2 (h_width h2 - i) * power 2 i)" arg3="in" arg4="h">
          <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.1.2.1.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.75"/></proof>
          </goal>
          <goal name="pps_apply_equiv_anc&#39;vc.0.1.0.1.4.1.2.1.1" expl="equality hypothesis" proved="true">
          <proof prover="4"><result status="valid" time="1.68" steps="69268"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_place_image&#39;vc" expl="VC for pps_place_image" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_place_image&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="pps_place_image&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
    <goal name="pps_place_image&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_apply_basis&#39;def">
     <goal name="pps_place_image&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="goal_comm">
      <goal name="pps_place_image&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="ket_sum_scalar_rev_l">
       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
        <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
         <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
           <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
            <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="ket_sum_scalar_rev_l">
             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
              <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="1.72" steps="680312"/></proof>
              </goal>
              <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="1.64" steps="680142"/></proof>
              </goal>
              <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="1.61" steps="681685"/></proof>
              </goal>
              <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="scalar_eq_gen">
                 <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                  <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                   <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="apply" proved="true" arg1="scalar_eq_gen">
                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                     <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                      <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="bv_to_ket_eq">
                       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="concat_length">
                        <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="concat_length">
                         <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="make_bv_length">
                          <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="make_bv_length">
                           <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                           <proof prover="8"><result status="valid" time="1.93" steps="771073"/></proof>
                           </goal>
                           <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                           <transf name="split_all_full" proved="true" >
                            <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                             <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                              <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                              <proof prover="8"><result status="valid" time="2.02" steps="806310"/></proof>
                              </goal>
                              <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                              <proof prover="8"><result status="valid" time="2.08" steps="805664"/></proof>
                              </goal>
                              <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                              <proof prover="8"><result status="valid" time="0.87" steps="658587"/></proof>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                             <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                              <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                              <proof prover="8"><result status="valid" time="2.04" steps="806310"/></proof>
                              </goal>
                              <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                              <proof prover="8"><result status="valid" time="2.03" steps="805664"/></proof>
                              </goal>
                              <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
                              <proof prover="8"><result status="valid" time="0.84" steps="658587"/></proof>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                           <proof prover="8"><result status="valid" time="1.87" steps="769990"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                          <transf name="split_all_full" proved="true" >
                           <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                            <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="2.02" steps="804542"/></proof>
                             </goal>
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="2.03" steps="804999"/></proof>
                             </goal>
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="0.87" steps="658573"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                            <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="2.04" steps="804542"/></proof>
                             </goal>
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="2.01" steps="804999"/></proof>
                             </goal>
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="0.87" steps="658573"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                          <proof prover="8"><result status="valid" time="1.87" steps="769341"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                        <transf name="apply" proved="true" arg1="goal_comm">
                         <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                          <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="pps_place&#39;spec1">
                           <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                           <transf name="eliminate_if" proved="true" >
                            <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                             <transf name="apply" proved="true" arg1="goal_comm">
                              <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                              <transf name="rewrite" proved="true" arg1="concat_value_left">
                               <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                               <transf name="rewrite" proved="true" arg1="concat_value_right">
                                <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                                 <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                 <transf name="replace" proved="true" arg1="(length x)" arg2="k">
                                  <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                  <transf name="apply" proved="true" arg1="pps&#39;invariant1">
                                   <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                   <transf name="split_vc" proved="true" >
                                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                    <transf name="compute_specified" proved="true" >
                                     <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                     <transf name="rewrite" proved="true" arg1="concat_value_left">
                                      <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                      <transf name="rewrite" proved="true" arg1="concat_value_right">
                                       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                       <proof prover="8"><result status="valid" time="1.15" steps="774061"/></proof>
                                       </goal>
                                       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                                       <proof prover="8"><result status="valid" time="1.65" steps="801971"/></proof>
                                       </goal>
                                      </transf>
                                      </goal>
                                      <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                                      <proof prover="8"><result status="valid" time="2.32" steps="881598"/></proof>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                   </transf>
                                   </goal>
                                   <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                                   <transf name="split_vc" proved="true" >
                                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                                    <proof prover="8"><result status="valid" time="1.08" steps="761581"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                   <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                                   <transf name="split_vc" proved="true" >
                                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                                    <proof prover="8"><result status="valid" time="1.05" steps="761572"/></proof>
                                    </goal>
                                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.2.1" expl="apply premises" proved="true">
                                    <proof prover="8"><result status="valid" time="1.08" steps="761574"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                  <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                                  <proof prover="8"><result status="valid" time="1.09" steps="761558"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                                 <transf name="split_all_full" proved="true" >
                                  <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                                  <transf name="split_vc" proved="true" >
                                   <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                                   <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                                    <proof prover="8"><result status="valid" time="2.53" steps="894724"/></proof>
                                    </goal>
                                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                                    <proof prover="8"><result status="valid" time="2.55" steps="894768"/></proof>
                                    </goal>
                                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                                    <proof prover="8"><result status="valid" time="1.34" steps="772733"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                  <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                                  <transf name="split_vc" proved="true" >
                                   <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                                   <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                                    <proof prover="8"><result status="valid" time="2.36" steps="894724"/></proof>
                                    </goal>
                                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                                    <proof prover="8"><result status="valid" time="2.43" steps="894768"/></proof>
                                    </goal>
                                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
                                    <proof prover="8"><result status="valid" time="1.30" steps="772733"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                                 <proof prover="8"><result status="valid" time="1.76" steps="801752"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                                <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                                <transf name="split_vc" proved="true" >
                                 <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                                 <proof prover="8"><result status="valid" time="1.77" steps="801726"/></proof>
                                 </goal>
                                 <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                                 <proof prover="8"><result status="valid" time="4.14" steps="909374"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                               <transf name="split_vc" proved="true" >
                                <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                                <proof prover="8"><result status="valid" time="1.24" steps="761558"/></proof>
                                </goal>
                                <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                                <transf name="rewrite" proved="true" arg1="concat_length">
                                 <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                                 <proof prover="8"><result status="valid" time="3.99" steps="909374"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                             <transf name="case" proved="true" arg1="(i &lt;k)">
                              <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0" expl="apply premises (true case)" proved="true">
                              <transf name="rewrite" proved="true" arg1="concat_value_left">
                               <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0" expl="apply premises (true case)" proved="true">
                               <transf name="rewrite" proved="true" arg1="concat_value_left">
                                <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0" expl="apply premises (true case)" proved="true">
                                <transf name="rewrite" proved="true" arg1="concat_value_left">
                                 <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0" expl="apply premises (true case)" proved="true">
                                 <transf name="rewrite" proved="true" arg1="concat_value_left">
                                  <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises (true case)" proved="true">
                                  <proof prover="8"><result status="valid" time="1.03" steps="761576"/></proof>
                                  </goal>
                                  <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                                  <proof prover="8"><result status="valid" time="1.68" steps="801779"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                                 <transf name="rewrite" proved="true" arg1="concat_length">
                                  <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                                  <proof prover="8"><result status="valid" time="2.36" steps="881416"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                                <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                                <proof prover="8"><result status="valid" time="1.71" steps="801779"/></proof>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.29" steps="881525"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1" expl="apply premises (false case)" proved="true">
                              <transf name="assert" proved="true" arg1="(k+ h_width h1 &lt;= i &lt; n)">
                               <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0" expl="asserted formula" proved="true">
                               <transf name="rewrite" proved="true" arg1="concat_length" arg2="in" arg3="H1">
                                <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
                                <transf name="rewrite" proved="true" arg1="concat_length" arg2="in" arg3="H1">
                                 <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.0" expl="asserted formula" proved="true">
                                 <transf name="split_vc" proved="true" >
                                  <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.0.0" proved="true">
                                  <proof prover="8"><result status="valid" time="1.06" steps="761587"/></proof>
                                  </goal>
                                  <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.0.1" proved="true">
                                  <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H1">
                                   <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.0.1.0" proved="true">
                                   <proof prover="8"><result status="valid" time="1.45" steps="704456"/></proof>
                                   </goal>
                                   <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.0.1.1" expl="rewrite premises" proved="true">
                                   <transf name="split_all_full" proved="true" >
                                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                                    <transf name="split_vc" proved="true" >
                                     <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
                                     <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                                      <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                                      <proof prover="8"><result status="valid" time="2.41" steps="894462"/></proof>
                                      </goal>
                                      <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
                                      <proof prover="8"><result status="valid" time="2.39" steps="894506"/></proof>
                                      </goal>
                                      <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.0.1.1.0.0.2" expl="apply premises" proved="true">
                                      <proof prover="8"><result status="valid" time="1.02" steps="772755"/></proof>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                                    <transf name="split_vc" proved="true" >
                                     <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.0.1.1.1.0" expl="rewrite premises" proved="true">
                                     <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                                      <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.0.1.1.1.0.0" expl="apply premises" proved="true">
                                      <proof prover="8"><result status="valid" time="2.33" steps="894462"/></proof>
                                      </goal>
                                      <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.0.1.1.1.0.1" expl="apply premises" proved="true">
                                      <proof prover="8"><result status="valid" time="2.29" steps="894506"/></proof>
                                      </goal>
                                      <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.0.1.1.1.0.2" expl="apply premises" proved="true">
                                      <proof prover="8"><result status="valid" time="1.05" steps="772755"/></proof>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                   </transf>
                                   </goal>
                                   <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.0.0.0.1.2" expl="rewrite premises" proved="true">
                                   <proof prover="8"><result status="valid" time="2.33" steps="878927"/></proof>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1" expl="apply premises (false case)" proved="true">
                               <transf name="rewrite" proved="true" arg1="concat_value_right">
                                <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0" expl="apply premises (false case)" proved="true">
                                <transf name="rewrite" proved="true" arg1="concat_value_right">
                                 <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.0" expl="apply premises (false case)" proved="true">
                                 <transf name="rewrite" proved="true" arg1="concat_length">
                                  <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.0.0" expl="apply premises (false case)" proved="true">
                                  <transf name="rewrite" proved="true" arg1="concat_length">
                                   <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.0.0.0" expl="apply premises (false case)" proved="true">
                                   <transf name="rewrite" proved="true" arg1="make_bv_length">
                                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.0.0.0.0" expl="apply premises (false case)" proved="true">
                                    <proof prover="0"><result status="valid" time="0.96"/></proof>
                                    </goal>
                                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                                    <transf name="split_all_full" proved="true" >
                                     <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                                     <transf name="split_vc" proved="true" >
                                      <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                                      <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                                       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                                       <proof prover="8"><result status="valid" time="2.37" steps="894765"/></proof>
                                       </goal>
                                       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                                       <proof prover="8"><result status="valid" time="2.30" steps="894809"/></proof>
                                       </goal>
                                       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                                       <proof prover="8"><result status="valid" time="1.02" steps="772792"/></proof>
                                       </goal>
                                      </transf>
                                      </goal>
                                     </transf>
                                     </goal>
                                     <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                                     <transf name="split_vc" proved="true" >
                                      <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                                      <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                                       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                                       <proof prover="8"><result status="valid" time="2.38" steps="894765"/></proof>
                                       </goal>
                                       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                                       <proof prover="8"><result status="valid" time="2.39" steps="894809"/></proof>
                                       </goal>
                                       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
                                       <proof prover="8"><result status="valid" time="1.08" steps="772792"/></proof>
                                       </goal>
                                      </transf>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                                    <proof prover="8"><result status="valid" time="2.36" steps="879266"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.1" expl="rewrite premises" proved="true">
                                 <transf name="split_vc" proved="true" >
                                  <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.1.0" proved="true">
                                  <transf name="rewrite" proved="true" arg1="concat_length">
                                   <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.1.0.0" proved="true">
                                   <transf name="rewrite" proved="true" arg1="make_bv_length">
                                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.1.0.0.0" proved="true">
                                    <proof prover="8"><result status="valid" time="1.69" steps="801830"/></proof>
                                    </goal>
                                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                                    <transf name="split_all_full" proved="true" >
                                     <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                                     <transf name="split_vc" proved="true" >
                                      <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                                      <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                                       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                                       <proof prover="8"><result status="valid" time="2.37" steps="894765"/></proof>
                                       </goal>
                                       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.1.0.0.1.0.0.1" expl="apply premises" proved="true">
                                       <proof prover="8"><result status="valid" time="2.40" steps="894809"/></proof>
                                       </goal>
                                       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.1.0.0.1.0.0.2" expl="apply premises" proved="true">
                                       <proof prover="8"><result status="valid" time="1.06" steps="772792"/></proof>
                                       </goal>
                                      </transf>
                                      </goal>
                                     </transf>
                                     </goal>
                                     <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                                     <transf name="split_vc" proved="true" >
                                      <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.1.0.0.1.1.0" expl="rewrite premises" proved="true">
                                      <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                                       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.1.0.0.1.1.0.0" expl="apply premises" proved="true">
                                       <proof prover="8"><result status="valid" time="2.37" steps="894765"/></proof>
                                       </goal>
                                       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.1.0.0.1.1.0.1" expl="apply premises" proved="true">
                                       <proof prover="8"><result status="valid" time="2.41" steps="894809"/></proof>
                                       </goal>
                                       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.1.0.0.1.1.0.2" expl="apply premises" proved="true">
                                       <proof prover="8"><result status="valid" time="1.09" steps="772792"/></proof>
                                       </goal>
                                      </transf>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.1.0.0.2" expl="rewrite premises" proved="true">
                                    <proof prover="8"><result status="valid" time="2.41" steps="879266"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                  <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.0.1.1" proved="true">
                                  <proof prover="8"><result status="valid" time="2.42" steps="881441"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                                <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.1" expl="rewrite premises" proved="true">
                                <transf name="split_vc" proved="true" >
                                 <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.1.0" proved="true">
                                 <proof prover="8"><result status="valid" time="2.47" steps="881573"/></proof>
                                 </goal>
                                 <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1.1.1.1" proved="true">
                                 <proof prover="8"><result status="valid" time="2.42" steps="881586"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                           <proof prover="8"><result status="valid" time="1.01" steps="756281"/></proof>
                           </goal>
                           <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                           <proof prover="8"><result status="valid" time="1.03" steps="756281"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                          <transf name="split_all_full" proved="true" >
                           <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                            <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="2.32" steps="878376"/></proof>
                             </goal>
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1.0.0.1" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="2.33" steps="877309"/></proof>
                             </goal>
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1.0.0.2" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="1.05" steps="756329"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1.1.0" expl="rewrite premises" proved="true">
                            <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1.1.0.0" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="2.25" steps="878376"/></proof>
                             </goal>
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1.1.0.1" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="2.34" steps="877309"/></proof>
                             </goal>
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.1.1.0.2" expl="apply premises" proved="true">
                             <proof prover="8"><result status="valid" time="1.03" steps="756329"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="concat_length" arg2="in" arg3="H">
                           <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.0" expl="rewrite premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="concat_length" arg2="in" arg3="H">
                            <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.0.0" expl="rewrite premises" proved="true">
                            <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0" expl="rewrite premises" proved="true">
                             <proof prover="8"><result status="valid" time="1.91" steps="770498"/></proof>
                             </goal>
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.0.0.1" expl="rewrite premises" proved="true">
                             <transf name="split_vc" proved="true" >
                              <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.0.0.1.0" expl="rewrite premises" proved="true">
                              <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                               <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.0.0.1.0.0" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.31" steps="876353"/></proof>
                               </goal>
                               <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.0.0.1.0.1" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.30" steps="876393"/></proof>
                               </goal>
                               <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.0.0.1.0.2" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="1.03" steps="756313"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.0.0.1.1" expl="rewrite premises" proved="true">
                              <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                               <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.0.0.1.1.0" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.31" steps="876353"/></proof>
                               </goal>
                               <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.0.0.1.1.1" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="2.34" steps="876393"/></proof>
                               </goal>
                               <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.0.0.1.1.2" expl="apply premises" proved="true">
                               <proof prover="8"><result status="valid" time="1.01" steps="756313"/></proof>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.1.0.0.2.0.0.2" expl="rewrite premises" proved="true">
                             <proof prover="8"><result status="valid" time="2.28" steps="874285"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="pps_place&#39;spec">
                     <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                     <transf name="apply" proved="true" arg1="set_equal_angle_exp">
                      <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="pps&#39;invariant">
                       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                         <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="concat_value_left">
                          <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="concat_value_right">
                           <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                           <proof prover="8"><result status="valid" time="1.04" steps="701833"/></proof>
                           </goal>
                           <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                           <proof prover="8"><result status="valid" time="1.44" steps="696503"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                          <proof prover="8"><result status="valid" time="2.01" steps="772482"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                       <proof prover="8"><result status="valid" time="0.93" steps="658537"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                     <proof prover="8"><result status="valid" time="0.90" steps="658539"/></proof>
                     </goal>
                     <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.12" steps="658539"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.97" steps="770690"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.72" steps="679501"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(h_width h + ket_length (bv_to_ket x))" arg2="(ket_length (bv_to_ket x)+h_width h )">
            <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_ket_l">
             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.52" steps="697979"/></proof>
             </goal>
             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.96" steps="769341"/></proof>
             </goal>
             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.53" steps="698409"/></proof>
             </goal>
             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="scalar_ket_l">
              <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.1.0.0.0.3.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="scalar_ket_l">
               <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.1.0.0.0.3.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.1.0.0.0.3.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="3.86" steps="901408"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="0.89" steps="658568"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.65" steps="678925"/></proof>
         </goal>
         <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.80" steps="726120"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="scalar_ket_l">
           <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="scalar_ket_l">
            <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
             <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="3.89" steps="901408"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.69" steps="678933"/></proof>
        </goal>
        <goal name="pps_place_image&#39;vc.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.78" steps="726120"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="pps_place_image&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.62" steps="678857"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_place_image&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.73" steps="571344"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="pps_place_image&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.70" steps="683414"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_place_image_bv&#39;vc" expl="VC for pps_place_image_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_place_image_bv&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.41" steps="581137"/></proof>
  </goal>
  <goal name="pps_place_image_bv&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.85" steps="513164"/></proof>
  </goal>
  <goal name="pps_place_image_bv&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.48" steps="612646"/></proof>
  </goal>
  <goal name="pps_place_image_bv&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.84" steps="513301"/></proof>
  </goal>
  <goal name="pps_place_image_bv&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.62" steps="513552"/></proof>
  </goal>
  <goal name="pps_place_image_bv&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.83" steps="513555"/></proof>
  </goal>
  <goal name="pps_place_image_bv&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.65" steps="513558"/></proof>
  </goal>
  <goal name="pps_place_image_bv&#39;vc.7" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="htpart_length">
   <goal name="pps_place_image_bv&#39;vc.7.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="0.64" steps="513559"/></proof>
   </goal>
   <goal name="pps_place_image_bv&#39;vc.7.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.65" steps="513561"/></proof>
   </goal>
   <goal name="pps_place_image_bv&#39;vc.7.2" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.50" steps="617022"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_place_image_bv&#39;vc.8" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="tpart_length">
   <goal name="pps_place_image_bv&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="0.65" steps="513589"/></proof>
   </goal>
   <goal name="pps_place_image_bv&#39;vc.8.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.53" steps="617339"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_place_image_bv&#39;vc.9" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(concat (concat (hpart x t) (htpart x t (h_width h)))
   (tpart x (t + h_width h)))" arg2="x" arg3="in" arg4="Ensures">
   <goal name="pps_place_image_bv&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="0.83" steps="513609"/></proof>
   </goal>
   <goal name="pps_place_image_bv&#39;vc.9.1" expl="equality hypothesis" proved="true">
   <transf name="apply" proved="true" arg1="set_equal_bv">
    <goal name="pps_place_image_bv&#39;vc.9.1.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.53" steps="621348"/></proof>
    </goal>
    <goal name="pps_place_image_bv&#39;vc.9.1.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="pps_place_image_bv&#39;vc.9.1.1.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="concat_value">
      <goal name="pps_place_image_bv&#39;vc.9.1.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="concat_value">
       <goal name="pps_place_image_bv&#39;vc.9.1.1.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="concat_length">
        <goal name="pps_place_image_bv&#39;vc.9.1.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="hpart_length">
         <goal name="pps_place_image_bv&#39;vc.9.1.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="htpart_length">
          <goal name="pps_place_image_bv&#39;vc.9.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.59" steps="629173"/></proof>
          </goal>
          <goal name="pps_place_image_bv&#39;vc.9.1.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.65" steps="513652"/></proof>
          </goal>
          <goal name="pps_place_image_bv&#39;vc.9.1.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.55" steps="620626"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="pps_place_image_bv&#39;vc.9.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.63" steps="513652"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_equiv_place&#39;vc" expl="VC for pps_apply_equiv_place" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_equiv_place&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.99" steps="519091"/></proof>
  </goal>
  <goal name="pps_apply_equiv_place&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.07" steps="522347"/></proof>
  </goal>
  <goal name="pps_apply_equiv_place&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.85" steps="619212"/></proof>
  </goal>
  <goal name="pps_apply_equiv_place&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.83" steps="619215"/></proof>
  </goal>
  <goal name="pps_apply_equiv_place&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.38" steps="654752"/></proof>
  </goal>
  <goal name="pps_apply_equiv_place&#39;vc.5" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_place_image_bv">
   <goal name="pps_apply_equiv_place&#39;vc.5.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pps_place_image_bv">
    <goal name="pps_apply_equiv_place&#39;vc.5.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="kronecker_eq">
     <goal name="pps_apply_equiv_place&#39;vc.5.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_eq">
      <goal name="pps_apply_equiv_place&#39;vc.5.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="0.94" steps="630875"/></proof>
      </goal>
      <goal name="pps_apply_equiv_place&#39;vc.5.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.25" steps="739030"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_equiv_place&#39;vc.5.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.49" steps="659269"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="pps_apply_equiv_place&#39;vc.5.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.37" steps="654789"/></proof>
    </goal>
    <goal name="pps_apply_equiv_place&#39;vc.5.0.2" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.48" steps="658027"/></proof>
    </goal>
    <goal name="pps_apply_equiv_place&#39;vc.5.0.3" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.37" steps="654797"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_apply_equiv_place&#39;vc.5.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.84" steps="619633"/></proof>
   </goal>
   <goal name="pps_apply_equiv_place&#39;vc.5.2" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.86" steps="619633"/></proof>
   </goal>
   <goal name="pps_apply_equiv_place&#39;vc.5.3" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.44" steps="654796"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_apply_equiv_place&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.84" steps="619617"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pps_apply_equiv_cont&#39;vc" expl="VC for pps_apply_equiv_cont" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_apply_equiv_cont&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_pps_apply_equiv">
   <goal name="pps_apply_equiv_cont&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="0"><result status="valid" time="0.55"/></proof>
   </goal>
   <goal name="pps_apply_equiv_cont&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_apply_equiv_cont&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="case" proved="true" arg1="(getbv x co = 0)">
     <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.0" expl="apply premises (true case)" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.0.0" expl="apply premises (true case)" proved="true">
      <transf name="replace" proved="true" arg1="(pps_apply_basis (pps_cont h1 co t n) x)" arg2="(bv_to_ket x)">
       <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.0.0.0" expl="apply premises (true case)" proved="true">
       <proof prover="0"><result status="valid" time="0.62"/></proof>
       </goal>
       <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="0"><result status="valid" time="0.63"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1" expl="apply premises (false case)" proved="true">
     <transf name="replace" proved="true" arg1="(pps_apply_basis (pps_cont h1 co t n) x)" arg2="(pps_apply_basis (pps_place h1  t n) x)">
      <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1.0" expl="apply premises (false case)" proved="true">
      <transf name="replace" proved="true" arg1="(pps_apply_basis (pps_cont h&#39; co&#39; t&#39; n&#39;) x)" arg2="(pps_apply_basis (pps_place h&#39;  t n) x)">
       <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1.0.0" expl="apply premises (false case)" proved="true">
       <transf name="apply" proved="true" arg1="get_pps_apply_basis_equiv">
        <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="pps_place&#39;spec3">
          <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="pps_place&#39;spec3">
           <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="0.74" steps="572508"/></proof>
           </goal>
           <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.82" steps="572510"/></proof>
           </goal>
           <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.33" steps="609621"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.76" steps="572510"/></proof>
          </goal>
          <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.85" steps="572517"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.46" steps="584689"/></proof>
        </goal>
        <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1.0.0.2" expl="apply premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1.0.0.2.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="pps_place&#39;spec3">
          <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1.0.0.2.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.69" steps="680044"/></proof>
          </goal>
          <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1.0.0.2.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.83" steps="572510"/></proof>
          </goal>
          <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1.0.0.2.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.81" steps="572517"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
       <proof prover="0"><result status="valid" time="0.91"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_apply_equiv_cont&#39;vc.0.1.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="0.70"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_anc_pred&#39;vc" expl="VC for pps_anc_pred" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_anc_pred&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.09" steps="687878"/></proof>
  </goal>
  <goal name="pps_anc_pred&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="724319"/></proof>
  </goal>
  <goal name="pps_anc_pred&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="724818"/></proof>
  </goal>
  <goal name="pps_anc_pred&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.57" steps="724838"/></proof>
  </goal>
  <goal name="pps_anc_pred&#39;vc.4" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures1">
   <goal name="pps_anc_pred&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="pps_anc_pred&#39;vc.4.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Requires3">
     <goal name="pps_anc_pred&#39;vc.4.0.0.0" expl="precondition" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="pps_anc_pred&#39;vc.4.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.58" steps="725224"/></proof>
     </goal>
     <goal name="pps_anc_pred&#39;vc.4.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.55" steps="725224"/></proof>
     </goal>
     <goal name="pps_anc_pred&#39;vc.4.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.03" steps="688484"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_anc_pred&#39;vc.5" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Requires3">
   <goal name="pps_anc_pred&#39;vc.5.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="pps_anc_pred&#39;vc.5.0.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pps_anc_pred&#39;vc.5.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.78" steps="725578"/></proof>
   </goal>
   <goal name="pps_anc_pred&#39;vc.5.2" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.78" steps="725578"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="pps_anc_pred&#39;vc.6" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(pps_apply_basis h2 x )" arg2="(pps_apply_basis (pps_ancs h1 i) x)">
   <goal name="pps_anc_pred&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(pps_apply_basis (pps_ancs h1 i) x)" arg2="(pps_apply (pps_ancs h1 i) (bv_to_ket x))">
    <goal name="pps_anc_pred&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="pps_apply_anc">
     <goal name="pps_anc_pred&#39;vc.6.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="0.98" steps="688231"/></proof>
     </goal>
     <goal name="pps_anc_pred&#39;vc.6.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="0.92" steps="688246"/></proof>
     </goal>
     <goal name="pps_anc_pred&#39;vc.6.0.0.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.57" steps="725304"/></proof>
     </goal>
     <goal name="pps_anc_pred&#39;vc.6.0.0.3" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.53" steps="724983"/></proof>
     </goal>
     <goal name="pps_anc_pred&#39;vc.6.0.0.4" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.58" steps="725304"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="pps_anc_pred&#39;vc.6.0.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.60" steps="725340"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_anc_pred&#39;vc.6.1" expl="equality hypothesis" proved="true">
   <proof prover="8"><result status="valid" time="1.60" steps="725309"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_anc_pred_&#39;vc" expl="VC for pps_anc_pred_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_anc_pred_&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.18" steps="689408"/></proof>
  </goal>
  <goal name="pps_anc_pred_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="725931"/></proof>
  </goal>
  <goal name="pps_anc_pred_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="726430"/></proof>
  </goal>
  <goal name="pps_anc_pred_&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="726450"/></proof>
  </goal>
  <goal name="pps_anc_pred_&#39;vc.4" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures1">
   <goal name="pps_anc_pred_&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Requires3">
    <goal name="pps_anc_pred_&#39;vc.4.0.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
    <goal name="pps_anc_pred_&#39;vc.4.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.58" steps="726836"/></proof>
    </goal>
    <goal name="pps_anc_pred_&#39;vc.4.0.2" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.88" steps="726836"/></proof>
    </goal>
    <goal name="pps_anc_pred_&#39;vc.4.0.3" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.16" steps="690014"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_anc_pred_&#39;vc.5" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="pps_anc_pred_&#39;vc.5.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Requires3">
    <goal name="pps_anc_pred_&#39;vc.5.0.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
    <goal name="pps_anc_pred_&#39;vc.5.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.49" steps="727190"/></proof>
    </goal>
    <goal name="pps_anc_pred_&#39;vc.5.0.2" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.51" steps="727190"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_anc_pred_&#39;vc.6" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(pps_apply_basis h2 x)" arg2="(pps_apply_basis (pps_ancs h1 i) x)">
   <goal name="pps_anc_pred_&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(pps_apply_basis h1 (concat x (int_to_bv 0 i)))" arg2="(pps_apply h1 (kronecker (bv_to_ket x) (ket i 0)))">
    <goal name="pps_anc_pred_&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Requires4">
     <goal name="pps_anc_pred_&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Requires4">
      <goal name="pps_anc_pred_&#39;vc.6.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="kronecker_eq">
       <goal name="pps_anc_pred_&#39;vc.6.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="pps_anc_pred_&#39;vc.6.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="instantiate" proved="true" arg1="pps_anc_pred" arg2="h1,(pps_ancs h1 i),path_sem_target,i">
         <goal name="pps_anc_pred_&#39;vc.6.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="Hinst">
          <goal name="pps_anc_pred_&#39;vc.6.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="0.96" steps="690767"/></proof>
          </goal>
          <goal name="pps_anc_pred_&#39;vc.6.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.00" steps="690782"/></proof>
          </goal>
          <goal name="pps_anc_pred_&#39;vc.6.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.51" steps="728042"/></proof>
          </goal>
          <goal name="pps_anc_pred_&#39;vc.6.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="0.98" steps="690767"/></proof>
          </goal>
          <goal name="pps_anc_pred_&#39;vc.6.0.0.0.0.0.0.0.4" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="0.98" steps="690767"/></proof>
          </goal>
          <goal name="pps_anc_pred_&#39;vc.6.0.0.0.0.0.0.0.5" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_anc_pred_&#39;vc.6.0.0.0.0.0.0.0.5.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="Ensures2">
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_anc_pred_&#39;vc.6.0.0.0.0.0.0.0.6" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_anc_pred_&#39;vc.6.0.0.0.0.0.0.0.6.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="Ensures1">
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_anc_pred_&#39;vc.6.0.0.0.0.0.0.0.7" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.46" steps="727937"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_anc_pred_&#39;vc.6.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="0.99" steps="689740"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_anc_pred_&#39;vc.6.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.61" steps="726880"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_anc_pred_&#39;vc.6.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
     <goal name="pps_anc_pred_&#39;vc.6.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_to_bv_kronecker">
      <goal name="pps_anc_pred_&#39;vc.6.0.1.0.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
       <goal name="pps_anc_pred_&#39;vc.6.0.1.0.0.0" expl="equality hypothesis" proved="true">
       <transf name="replace" proved="true" arg1="(ket_to_bv (ket i 0))" arg2="(int_to_bv 0 i)">
        <goal name="pps_anc_pred_&#39;vc.6.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="0.96" steps="689759"/></proof>
        </goal>
        <goal name="pps_anc_pred_&#39;vc.6.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_to_bv&#39;def">
         <goal name="pps_anc_pred_&#39;vc.6.0.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
         <proof prover="0"><result status="valid" time="0.79"/></proof>
         </goal>
         <goal name="pps_anc_pred_&#39;vc.6.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.73"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_anc_pred_&#39;vc.6.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.63" steps="726928"/></proof>
      </goal>
      <goal name="pps_anc_pred_&#39;vc.6.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="0.89"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_anc_pred_&#39;vc.6.0.1.1" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="(h_width h1)" arg2="(h_width h1-i+i)">
      <goal name="pps_anc_pred_&#39;vc.6.0.1.1.0" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="kronecker_ket_l">
       <goal name="pps_anc_pred_&#39;vc.6.0.1.1.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.50" steps="726497"/></proof>
       </goal>
       <goal name="pps_anc_pred_&#39;vc.6.0.1.1.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.50" steps="726481"/></proof>
       </goal>
       <goal name="pps_anc_pred_&#39;vc.6.0.1.1.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.56" steps="726959"/></proof>
       </goal>
       <goal name="pps_anc_pred_&#39;vc.6.0.1.1.0.3" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.11" steps="793738"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_anc_pred_&#39;vc.6.0.1.1.1" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="0.91" steps="689775"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="pps_anc_pred_&#39;vc.6.0.1.2" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="0.91"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pps_anc_pred_&#39;vc.6.1" expl="equality hypothesis" proved="true">
   <proof prover="8"><result status="valid" time="1.65" steps="726964"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pps_to_mat&#39;vc" expl="VC for pps_to_mat" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pps_to_mat&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.15" steps="524007"/></proof>
  </goal>
  <goal name="pps_to_mat&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.64" steps="492248"/></proof>
  </goal>
  <goal name="pps_to_mat&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.21" steps="610781"/></proof>
  </goal>
  <goal name="pps_to_mat&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.75" steps="575180"/></proof>
  </goal>
  <goal name="pps_to_mat&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.84" steps="667672"/></proof>
  </goal>
  <goal name="pps_to_mat&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.71" steps="567353"/></proof>
  </goal>
  <goal name="pps_to_mat&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.84" steps="667869"/></proof>
  </goal>
  <goal name="pps_to_mat&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.68" steps="567302"/></proof>
  </goal>
  <goal name="pps_to_mat&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="717860"/></proof>
  </goal>
  <goal name="pps_to_mat&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.17" steps="789990"/></proof>
  </goal>
  <goal name="pps_to_mat&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.01" steps="687242"/></proof>
  </goal>
  <goal name="pps_to_mat&#39;vc.11" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_to_mat&#39;vc.11.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="pps_to_mat&#39;vc.11.0.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="2.64" steps="927154"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_to_mat&#39;vc.12" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_to_mat&#39;vc.12.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_to_mat&#39;vc.12.0.0" expl="precondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="pps_to_mat&#39;vc.12.0.0.0" expl="precondition" proved="true">
     <proof prover="8"><result status="valid" time="2.63" steps="925144"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_to_mat&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="641017"/></proof>
  </goal>
  <goal name="pps_to_mat&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.17" steps="713483"/></proof>
  </goal>
  <goal name="pps_to_mat&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.98" steps="612472"/></proof>
  </goal>
  <goal name="pps_to_mat&#39;vc.16" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_to_mat&#39;vc.16.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_to_mat&#39;vc.16.0.0" expl="precondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="pps_to_mat&#39;vc.16.0.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="mat_sum_dim&#39;spec1">
      <goal name="pps_to_mat&#39;vc.16.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.19" steps="719516"/></proof>
      </goal>
      <goal name="pps_to_mat&#39;vc.16.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.06" steps="719516"/></proof>
      </goal>
      <goal name="pps_to_mat&#39;vc.16.0.0.0.2" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_to_mat&#39;vc.16.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_to_mat&#39;vc.16.0.0.0.2.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.65" steps="927476"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_to_mat&#39;vc.16.0.0.0.3" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_to_mat&#39;vc.16.0.0.0.3.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_to_mat&#39;vc.16.0.0.0.3.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.64" steps="927546"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_to_mat&#39;vc.17" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="pps_to_mat&#39;vc.17.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_to_mat&#39;vc.17.0.0" expl="precondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="pps_to_mat&#39;vc.17.0.0.0" expl="precondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_to_mat&#39;vc.17.0.0.0.0" expl="precondition" proved="true">
      <transf name="apply" proved="true" arg1="mat_sum_dim&#39;spec">
       <goal name="pps_to_mat&#39;vc.17.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.03" steps="723126"/></proof>
       </goal>
       <goal name="pps_to_mat&#39;vc.17.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.24" steps="723126"/></proof>
       </goal>
       <goal name="pps_to_mat&#39;vc.17.0.0.0.0.2" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="pps_to_mat&#39;vc.17.0.0.0.0.2.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="pps_to_mat&#39;vc.17.0.0.0.0.2.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.97" steps="927946"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_to_mat&#39;vc.17.0.0.0.0.3" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="pps_to_mat&#39;vc.17.0.0.0.0.3.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="pps_to_mat&#39;vc.17.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.90" steps="925442"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_to_mat&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.04" steps="722166"/></proof>
  </goal>
  <goal name="pps_to_mat&#39;vc.19" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="pps_to_mat&#39;vc.19.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="pps_to_mat&#39;vc.19.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="scalar_eq">
     <goal name="pps_to_mat&#39;vc.19.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="mat_sum_dim_eq">
      <goal name="pps_to_mat&#39;vc.19.0.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="pps_to_mat&#39;vc.19.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="pps_to_mat&#39;vc.19.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="pps_to_mat&#39;vc.19.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.43" steps="854634"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_to_mat&#39;vc.19.0.0.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_to_mat&#39;vc.19.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_to_mat&#39;vc.19.0.0.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.07" steps="726896"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_to_mat&#39;vc.19.0.0.0.2" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_to_mat&#39;vc.19.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_to_mat&#39;vc.19.0.0.0.2.0.0" expl="apply premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="pps_to_mat&#39;vc.19.0.0.0.2.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="mat_sum_dim&#39;spec1">
          <goal name="pps_to_mat&#39;vc.19.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.47" steps="854951"/></proof>
          </goal>
          <goal name="pps_to_mat&#39;vc.19.0.0.0.2.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.46" steps="854951"/></proof>
          </goal>
          <goal name="pps_to_mat&#39;vc.19.0.0.0.2.0.0.0.2" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_to_mat&#39;vc.19.0.0.0.2.0.0.0.2.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="pps_to_mat&#39;vc.19.0.0.0.2.0.0.0.2.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.76" steps="954604"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_to_mat&#39;vc.19.0.0.0.2.0.0.0.3" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_to_mat&#39;vc.19.0.0.0.2.0.0.0.3.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="pps_to_mat&#39;vc.19.0.0.0.2.0.0.0.3.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.63" steps="954378"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_to_mat&#39;vc.19.0.0.0.3" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_to_mat&#39;vc.19.0.0.0.3.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_to_mat&#39;vc.19.0.0.0.3.0.0" expl="apply premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="pps_to_mat&#39;vc.19.0.0.0.3.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="mat_sum_dim&#39;spec">
          <goal name="pps_to_mat&#39;vc.19.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.35" steps="854951"/></proof>
          </goal>
          <goal name="pps_to_mat&#39;vc.19.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.25" steps="854951"/></proof>
          </goal>
          <goal name="pps_to_mat&#39;vc.19.0.0.0.3.0.0.0.2" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_to_mat&#39;vc.19.0.0.0.3.0.0.0.2.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="pps_to_mat&#39;vc.19.0.0.0.3.0.0.0.2.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.39" steps="954604"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_to_mat&#39;vc.19.0.0.0.3.0.0.0.3" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_to_mat&#39;vc.19.0.0.0.3.0.0.0.3.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="pps_to_mat&#39;vc.19.0.0.0.3.0.0.0.3.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.54" steps="954378"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_to_mat&#39;vc.19.0.0.0.4" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="mat_sum_dim_eq">
           <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.61" steps="854951"/></proof>
           </goal>
           <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.51" steps="854951"/></proof>
           </goal>
           <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0.0.2" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0.0.2.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0.0.2.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.59" steps="954604"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0.0.3" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0.0.3.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0.0.3.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.52" steps="954378"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0.0.4" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0.0.4.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0.0.4.0.0" expl="apply premises" proved="true">
             <transf name="assert" proved="true" arg1="(length e1 = h_width h /\ length e = h_range h)">
              <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0.0.4.0.0.0" expl="asserted formula" proved="true">
              <proof prover="8"><result status="valid" time="2.25" steps="860363"/></proof>
              </goal>
              <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0.0.4.0.0.1" expl="apply premises" proved="true">
              <transf name="eliminate_if" proved="true" >
               <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0.0.4.0.0.1.0" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0.0.4.0.0.1.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                </transf>
                </goal>
                <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0.0.4.0.0.1.0.1" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="pps_to_mat&#39;vc.19.0.0.0.4.0.0.0.0.4.0.0.1.0.1.0" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.25" steps="834746"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_to_mat&#39;vc.20" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="pps_to_mat&#39;vc.20.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="pps_to_mat&#39;vc.20.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="scalar_eq_gen">
     <goal name="pps_to_mat&#39;vc.20.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="mat_sum_dim_to_mat_sum">
      <goal name="pps_to_mat&#39;vc.20.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="mat_sum_eq">
       <goal name="pps_to_mat&#39;vc.20.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="0.88" steps="618818"/></proof>
       </goal>
       <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="set_constant_size">
        <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="mat_sum_dim&#39;spec1">
            <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="mat_sum_dim&#39;spec1">
             <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.01" steps="741356"/></proof>
             </goal>
             <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.23" steps="856122"/></proof>
             </goal>
             <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.21" steps="856122"/></proof>
             </goal>
             <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="2.81" steps="948994"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0.0.4" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0.0.4.0.0" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="2.53" steps="948776"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.25" steps="856122"/></proof>
            </goal>
            <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.28" steps="856122"/></proof>
            </goal>
            <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0.3" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0.3.0" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="2.56" steps="948994"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0.4" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0.4.0" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.0.0.0.0.4.0.0" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="2.50" steps="948776"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="mat_sum_dim&#39;spec">
            <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="mat_sum_dim&#39;spec">
             <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.22" steps="741356"/></proof>
             </goal>
             <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.27" steps="856122"/></proof>
             </goal>
             <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.27" steps="856122"/></proof>
             </goal>
             <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0.0.3" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0.0.3.0" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="2.53" steps="948994"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0.0.4" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0.0.4.0" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0.0.4.0.0" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="2.52" steps="948776"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.25" steps="856122"/></proof>
            </goal>
            <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.27" steps="856122"/></proof>
            </goal>
            <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0.3" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0.3.0" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0.3.0.0" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="2.50" steps="948994"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0.4" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0.4.0" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="pps_to_mat&#39;vc.20.0.0.0.0.1.1.0.0.0.4.0.0" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="2.50" steps="948776"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_to_mat&#39;vc.20.0.0.0.0.2" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_to_mat&#39;vc.20.0.0.0.0.2.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="pps_to_mat&#39;vc.20.0.0.0.0.2.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="mat_sum_dim_to_mat_sum">
          <goal name="pps_to_mat&#39;vc.20.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.86" steps="728467"/></proof>
          </goal>
          <goal name="pps_to_mat&#39;vc.20.0.0.0.0.2.0.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.89" steps="727773"/></proof>
          </goal>
          <goal name="pps_to_mat&#39;vc.20.0.0.0.0.2.0.0.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.83" steps="727773"/></proof>
          </goal>
          <goal name="pps_to_mat&#39;vc.20.0.0.0.0.2.0.0.3" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_to_mat&#39;vc.20.0.0.0.0.2.0.0.3.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="pps_to_mat&#39;vc.20.0.0.0.0.2.0.0.3.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.12" steps="804070"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_to_mat&#39;vc.20.0.0.0.0.2.0.0.4" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_to_mat&#39;vc.20.0.0.0.0.2.0.0.4.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="pps_to_mat&#39;vc.20.0.0.0.0.2.0.0.4.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.05" steps="804060"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_to_mat&#39;vc.20.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.79" steps="618818"/></proof>
      </goal>
      <goal name="pps_to_mat&#39;vc.20.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.84" steps="727298"/></proof>
      </goal>
      <goal name="pps_to_mat&#39;vc.20.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.81" steps="727298"/></proof>
      </goal>
      <goal name="pps_to_mat&#39;vc.20.0.0.0.4" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_to_mat&#39;vc.20.0.0.0.4.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_to_mat&#39;vc.20.0.0.0.4.0.0" expl="rewrite premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="pps_to_mat&#39;vc.20.0.0.0.4.0.0.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="mat_sum_dim&#39;spec1">
          <goal name="pps_to_mat&#39;vc.20.0.0.0.4.0.0.0.0" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.98" steps="741344"/></proof>
          </goal>
          <goal name="pps_to_mat&#39;vc.20.0.0.0.4.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.20" steps="855849"/></proof>
          </goal>
          <goal name="pps_to_mat&#39;vc.20.0.0.0.4.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.20" steps="855849"/></proof>
          </goal>
          <goal name="pps_to_mat&#39;vc.20.0.0.0.4.0.0.0.3" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_to_mat&#39;vc.20.0.0.0.4.0.0.0.3.0" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="pps_to_mat&#39;vc.20.0.0.0.4.0.0.0.3.0.0" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.44" steps="948731"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_to_mat&#39;vc.20.0.0.0.4.0.0.0.4" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_to_mat&#39;vc.20.0.0.0.4.0.0.0.4.0" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="pps_to_mat&#39;vc.20.0.0.0.4.0.0.0.4.0.0" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.46" steps="948508"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_to_mat&#39;vc.20.0.0.0.5" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_to_mat&#39;vc.20.0.0.0.5.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_to_mat&#39;vc.20.0.0.0.5.0.0" expl="rewrite premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="pps_to_mat&#39;vc.20.0.0.0.5.0.0.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="mat_sum_dim&#39;spec">
          <goal name="pps_to_mat&#39;vc.20.0.0.0.5.0.0.0.0" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.01" steps="741344"/></proof>
          </goal>
          <goal name="pps_to_mat&#39;vc.20.0.0.0.5.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.21" steps="855849"/></proof>
          </goal>
          <goal name="pps_to_mat&#39;vc.20.0.0.0.5.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.21" steps="855849"/></proof>
          </goal>
          <goal name="pps_to_mat&#39;vc.20.0.0.0.5.0.0.0.3" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_to_mat&#39;vc.20.0.0.0.5.0.0.0.3.0" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="pps_to_mat&#39;vc.20.0.0.0.5.0.0.0.3.0.0" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.45" steps="948731"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="pps_to_mat&#39;vc.20.0.0.0.5.0.0.0.4" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="pps_to_mat&#39;vc.20.0.0.0.5.0.0.0.4.0" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="pps_to_mat&#39;vc.20.0.0.0.5.0.0.0.4.0.0" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.45" steps="948508"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_to_mat&#39;vc.20.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="0.84" steps="618814"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_to_mat&#39;vc.21" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures1">
   <goal name="pps_to_mat&#39;vc.21.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="scalar_rows">
    <goal name="pps_to_mat&#39;vc.21.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="pps_to_mat&#39;vc.21.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="mat_sum_dim&#39;spec1">
      <goal name="pps_to_mat&#39;vc.21.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_to_mat&#39;vc.21.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="8"><result status="valid" time="1.25" steps="730133"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_to_mat&#39;vc.21.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.38" steps="853245"/></proof>
      </goal>
      <goal name="pps_to_mat&#39;vc.21.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.20" steps="853245"/></proof>
      </goal>
      <goal name="pps_to_mat&#39;vc.21.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_to_mat&#39;vc.21.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_to_mat&#39;vc.21.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="mat_sum_dim&#39;spec1">
         <goal name="pps_to_mat&#39;vc.21.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.96" steps="730145"/></proof>
         </goal>
         <goal name="pps_to_mat&#39;vc.21.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="2.30" steps="853559"/></proof>
         </goal>
         <goal name="pps_to_mat&#39;vc.21.0.0.0.3.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="2.26" steps="853559"/></proof>
         </goal>
         <goal name="pps_to_mat&#39;vc.21.0.0.0.3.0.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_to_mat&#39;vc.21.0.0.0.3.0.0.3.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="pps_to_mat&#39;vc.21.0.0.0.3.0.0.3.0.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.41" steps="940172"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_to_mat&#39;vc.21.0.0.0.3.0.0.4" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_to_mat&#39;vc.21.0.0.0.3.0.0.4.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="pps_to_mat&#39;vc.21.0.0.0.3.0.0.4.0.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.73" steps="939962"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_to_mat&#39;vc.21.0.0.0.4" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_to_mat&#39;vc.21.0.0.0.4.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_to_mat&#39;vc.21.0.0.0.4.0.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="mat_sum_dim&#39;spec">
         <goal name="pps_to_mat&#39;vc.21.0.0.0.4.0.0.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.04" steps="730145"/></proof>
         </goal>
         <goal name="pps_to_mat&#39;vc.21.0.0.0.4.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="2.37" steps="853559"/></proof>
         </goal>
         <goal name="pps_to_mat&#39;vc.21.0.0.0.4.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="2.19" steps="853559"/></proof>
         </goal>
         <goal name="pps_to_mat&#39;vc.21.0.0.0.4.0.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_to_mat&#39;vc.21.0.0.0.4.0.0.3.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="pps_to_mat&#39;vc.21.0.0.0.4.0.0.3.0.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.71" steps="940172"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_to_mat&#39;vc.21.0.0.0.4.0.0.4" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_to_mat&#39;vc.21.0.0.0.4.0.0.4.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="pps_to_mat&#39;vc.21.0.0.0.4.0.0.4.0.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.74" steps="939962"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_to_mat&#39;vc.22" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures2">
   <goal name="pps_to_mat&#39;vc.22.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="scalar_columns">
    <goal name="pps_to_mat&#39;vc.22.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="pps_to_mat&#39;vc.22.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="mat_sum_dim&#39;spec">
      <goal name="pps_to_mat&#39;vc.22.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="1.08" steps="730568"/></proof>
      </goal>
      <goal name="pps_to_mat&#39;vc.22.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.22" steps="855156"/></proof>
      </goal>
      <goal name="pps_to_mat&#39;vc.22.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.20" steps="855156"/></proof>
      </goal>
      <goal name="pps_to_mat&#39;vc.22.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_to_mat&#39;vc.22.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_to_mat&#39;vc.22.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="mat_sum_dim&#39;spec1">
         <goal name="pps_to_mat&#39;vc.22.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.97" steps="730580"/></proof>
         </goal>
         <goal name="pps_to_mat&#39;vc.22.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="2.12" steps="855480"/></proof>
         </goal>
         <goal name="pps_to_mat&#39;vc.22.0.0.0.3.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="2.15" steps="855480"/></proof>
         </goal>
         <goal name="pps_to_mat&#39;vc.22.0.0.0.3.0.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_to_mat&#39;vc.22.0.0.0.3.0.0.3.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="pps_to_mat&#39;vc.22.0.0.0.3.0.0.3.0.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.69" steps="941757"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_to_mat&#39;vc.22.0.0.0.3.0.0.4" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_to_mat&#39;vc.22.0.0.0.3.0.0.4.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="pps_to_mat&#39;vc.22.0.0.0.3.0.0.4.0.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.41" steps="941772"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_to_mat&#39;vc.22.0.0.0.4" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_to_mat&#39;vc.22.0.0.0.4.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_to_mat&#39;vc.22.0.0.0.4.0.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="mat_sum_dim&#39;spec">
         <goal name="pps_to_mat&#39;vc.22.0.0.0.4.0.0.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.05" steps="730580"/></proof>
         </goal>
         <goal name="pps_to_mat&#39;vc.22.0.0.0.4.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="2.24" steps="855480"/></proof>
         </goal>
         <goal name="pps_to_mat&#39;vc.22.0.0.0.4.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="2.21" steps="855480"/></proof>
         </goal>
         <goal name="pps_to_mat&#39;vc.22.0.0.0.4.0.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_to_mat&#39;vc.22.0.0.0.4.0.0.3.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="pps_to_mat&#39;vc.22.0.0.0.4.0.0.3.0.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.74" steps="941757"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="pps_to_mat&#39;vc.22.0.0.0.4.0.0.4" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_to_mat&#39;vc.22.0.0.0.4.0.0.4.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="pps_to_mat&#39;vc.22.0.0.0.4.0.0.4.0.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.41" steps="941772"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_to_mat&#39;vc.23" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="mat_mult_ket_basis_bv_gen">
   <goal name="pps_to_mat&#39;vc.23.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pps_apply_basis_decomp">
    <goal name="pps_to_mat&#39;vc.23.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
     <goal name="pps_to_mat&#39;vc.23.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.03" steps="735187"/></proof>
     </goal>
     <goal name="pps_to_mat&#39;vc.23.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.57" steps="663206"/></proof>
     </goal>
     <goal name="pps_to_mat&#39;vc.23.0.0.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.49" steps="658988"/></proof>
     </goal>
     <goal name="pps_to_mat&#39;vc.23.0.0.3" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pps_to_mat&#39;vc.23.0.0.3.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="scalar_eq_gen">
        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.39" steps="663318"/></proof>
        </goal>
        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures2">
         <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="scalar_values">
          <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="mult_eq_t">
           <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="0.89" steps="622005"/></proof>
           </goal>
           <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="mat_sum_value">
            <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="instantiate" proved="true" arg1="sum_null_but_maybe_one_elt" arg2="(fun (e1:bitvec) -&gt;
    get
    (mat_sum (n_bvs (h_range h))
     (fun (y:bitvec) -&gt;
       make_f (power 2 (h_width h)) (power 2 (h_width h))
       (fun (i:int) (j:int) -&gt;
         if i = bv_to_int (h_basis_ket_bv h e1 y) &amp;&amp; j = bv_to_int e1
         then ang_exp (h_angle_bv h e1 y) else c_zero)))
    (bv_to_int a) (ket_to_int (bv_to_ket x))),(n_bvs (h_width h)),x">
              <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="Hinst">
               <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="mat_sum_value">
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="sum_eq">
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="assert_make">
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="get_indic">
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="eliminate_if" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="2.42" steps="838648"/></proof>
                         </goal>
                         <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                         <transf name="assert" proved="true" arg1="(a = h_basis_ket_bv h x1 x )">
                          <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
                          <transf name="replace" proved="true" arg1="a" arg2="(int_to_bv (bv_to_int a) (h_width h1))">
                           <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
                           <transf name="replace" proved="true" arg1="(h_basis_ket_bv h1 x1 x)" arg2="(int_to_bv (bv_to_int (h_basis_ket_bv h1 x1 x)) (h_width h1))">
                            <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
                            <proof prover="8"><result status="valid" time="1.52" steps="670596"/></proof>
                            </goal>
                            <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                            <transf name="apply" proved="true" arg1="goal_comm">
                             <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                             <transf name="apply" proved="true" arg1="int_to_bv_to_int_">
                              <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
                              <proof prover="8"><result status="valid" time="1.93" steps="754027"/></proof>
                              </goal>
                              <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1" expl="apply premises" proved="true">
                              <proof prover="0"><result status="valid" time="0.93"/></proof>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                           <proof prover="8"><result status="valid" time="2.26" steps="759302"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                          <proof prover="8"><result status="valid" time="0.96" steps="709500"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="1.70" steps="748725"/></proof>
                         </goal>
                         <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="1.78" steps="748414"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.16" steps="748155"/></proof>
                     </goal>
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="0"><result status="valid" time="0.90"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="set_constant_size">
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.51" steps="825245"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.20" steps="824795"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.92" steps="746482"/></proof>
                 </goal>
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="set_valid_index">
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.0.0" proved="true">
                   <proof prover="8"><result status="valid" time="2.07" steps="746213"/></proof>
                   </goal>
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.0.1" proved="true">
                   <transf name="replace" proved="true" arg1="(rows
    (mat_sum (n_bvs (h_range h))
     (fun (y:bitvec) -&gt;
       make_f (power 2 (h_width h)) (power 2 (h_width h))
       (fun (i:int) (j:int) -&gt;
         if i = bv_to_int (h_basis_ket_bv h x y) &amp;&amp; j = bv_to_int x
         then ang_exp (h_angle_bv h x y) else c_zero))))" arg2="(power 2 (h_width h))">
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.0.1.0" proved="true">
                    <proof prover="8"><result status="valid" time="1.89" steps="747150"/></proof>
                    </goal>
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.0.1.1" expl="equality hypothesis" proved="true">
                    <transf name="apply" proved="true" arg1="rows_mat_sum">
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.0.1.1.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.96" steps="746452"/></proof>
                     </goal>
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.0.1.1.1" expl="apply premises" proved="true">
                     <transf name="apply" proved="true" arg1="set_constant_size">
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.0.1.1.1.0" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.0.1.1.1.0.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.0.1.1.1.0.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.32" steps="825245"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.0.1.1.1.1" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.0.1.1.1.1.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.0.1.1.1.1.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.27" steps="824795"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.0.1.1.2" expl="apply premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.0.1.1.2.0" expl="apply premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.0.1.1.2.0.0" expl="apply premises" proved="true">
                       <proof prover="8"><result status="valid" time="2.34" steps="821464"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.1" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.1.0" proved="true">
                   <proof prover="0"><result status="valid" time="0.90"/></proof>
                   </goal>
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.1.1" proved="true">
                   <transf name="replace" proved="true" arg1="(columns
    (mat_sum (n_bvs (h_range h))
     (fun (y:bitvec) -&gt;
       make_f (power 2 (h_width h)) (power 2 (h_width h))
       (fun (i:int) (j:int) -&gt;
         if i = bv_to_int (h_basis_ket_bv h x y) &amp;&amp; j = bv_to_int x
         then ang_exp (h_angle_bv h x y) else c_zero))))" arg2="(power 2 (h_width h))">
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.1.1.0" proved="true">
                    <proof prover="8"><result status="valid" time="1.85" steps="746228"/></proof>
                    </goal>
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.1.1.1" expl="equality hypothesis" proved="true">
                    <transf name="apply" proved="true" arg1="columns_mat_sum">
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.1.1.1.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.15" steps="746452"/></proof>
                     </goal>
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.1.1.1.1" expl="apply premises" proved="true">
                     <transf name="apply" proved="true" arg1="set_constant_size">
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.1.1.1.1.0" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.1.1.1.1.0.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.1.1.1.1.0.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.10" steps="825245"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.1.1.1.1.1" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.1.1.1.1.1.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.1.1.1.1.1.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.13" steps="824795"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.1.1.1.2" expl="apply premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.1.1.1.2.0" expl="apply premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.0.0.3.1.1.1.2.0.0" expl="apply premises" proved="true">
                       <proof prover="8"><result status="valid" time="2.11" steps="821458"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="1.37" steps="660094"/></proof>
               </goal>
               <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0" expl="rewrite premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0" expl="rewrite premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="mat_sum_value">
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.0.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="sum_null_">
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="assert_make">
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="1.88" steps="750897"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="8"><result status="valid" time="1.87" steps="749407"/></proof>
                       </goal>
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
                        <proof prover="0"><result status="valid" time="0.94"/></proof>
                        </goal>
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.15" steps="748507"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="set_constant_size">
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.1.0" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.1.0.0" expl="apply premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.1.0.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.24" steps="826662"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.1.1" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.1.1.0" expl="apply premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.1.1.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.24" steps="826222"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.99" steps="747600"/></proof>
                  </goal>
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="set_valid_index">
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.0" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.03" steps="747328"/></proof>
                    </goal>
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.0.1" expl="apply premises" proved="true">
                    <transf name="replace" proved="true" arg1="(rows
    (mat_sum (n_bvs (h_range h))
     (fun (y:bitvec) -&gt;
       make_f (power 2 (h_width h)) (power 2 (h_width h))
       (fun (i:int) (j:int) -&gt;
         if i = bv_to_int (h_basis_ket_bv h k y) &amp;&amp; j = bv_to_int k
         then ang_exp (h_angle_bv h k y) else c_zero)))
)" arg2="(power 2 (h_width h))">
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.0.1.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.00" steps="748263"/></proof>
                     </goal>
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.0.1.1" expl="equality hypothesis" proved="true">
                     <transf name="apply" proved="true" arg1="rows_mat_sum">
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.0.1.1.0" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="1.89" steps="747565"/></proof>
                      </goal>
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.0.1.1.1" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="set_constant_size">
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.0.1.1.1.0" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.0.1.1.1.0.0" expl="apply premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                         <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.0.1.1.1.0.0.0" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="2.21" steps="826662"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.0.1.1.1.1" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.0.1.1.1.1.0" expl="apply premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                         <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.0.1.1.1.1.0.0" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="2.14" steps="826222"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.0.1.1.2" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.0.1.1.2.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.0.1.1.2.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.19" steps="822734"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.1" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.1.0" expl="apply premises" proved="true">
                    <proof prover="0"><result status="valid" time="0.87"/></proof>
                    </goal>
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.1.1" expl="apply premises" proved="true">
                    <transf name="replace" proved="true" arg1="(columns
    (mat_sum (n_bvs (h_range h))
     (fun (y:bitvec) -&gt;
       make_f (power 2 (h_width h)) (power 2 (h_width h))
       (fun (i:int) (j:int) -&gt;
         if i = bv_to_int (h_basis_ket_bv h k y) &amp;&amp; j = bv_to_int k
         then ang_exp (h_angle_bv h k y) else c_zero)))
)" arg2="(power 2 (h_width h))">
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.1.1.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.00" steps="747342"/></proof>
                     </goal>
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.1.1.1" expl="equality hypothesis" proved="true">
                     <transf name="apply" proved="true" arg1="columns_mat_sum">
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.1.1.1.0" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="2.04" steps="747565"/></proof>
                      </goal>
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.1.1.1.1" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="set_constant_size">
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.1.1.1.1.0" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.1.1.1.1.0.0" expl="apply premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                         <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.1.1.1.1.0.0.0" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="2.28" steps="826662"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.1.1.1.1.1" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.1.1.1.1.1.0" expl="apply premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                         <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.1.1.1.1.1.0.0" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="2.50" steps="826222"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.1.1.1.2" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.1.1.1.2.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.0.0.0.2.0.0.3.1.1.1.2.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.46" steps="822733"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="set_constant_size">
             <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(rows
  (mat_sum (n_bvs (h_range h))
   (fun (y:bitvec) -&gt;
     make_f (power 2 (h_width h)) (power 2 (h_width h))
     (fun (i:int) (j:int) -&gt;
       if i = bv_to_int (h_basis_ket_bv h e y) &amp;&amp; j = bv_to_int e
       then ang_exp (h_angle_bv h e y) else c_zero))))" arg2="(power 2 (h_width h))">
                <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="goal_comm">
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="rows_mat_sum">
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.93" steps="742147"/></proof>
                  </goal>
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="set_constant_size">
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.32" steps="840668"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.25" steps="820664"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.32" steps="824057"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.1" expl="equality hypothesis" proved="true">
                <transf name="apply" proved="true" arg1="rows_mat_sum">
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.1.0" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.97" steps="742147"/></proof>
                 </goal>
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.1.1" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="set_constant_size">
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.1.1.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.27" steps="840668"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.1.1.1" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.1.1.1.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.1.1.1.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.46" steps="820664"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.1.2" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.1.2.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.0.0.0.1.2.0.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.43" steps="824057"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(columns
  (mat_sum (n_bvs (h_range h))
   (fun (y:bitvec) -&gt;
     make_f (power 2 (h_width h)) (power 2 (h_width h))
     (fun (i:int) (j:int) -&gt;
       if i = bv_to_int (h_basis_ket_bv h e y) &amp;&amp; j = bv_to_int e
       then ang_exp (h_angle_bv h e y) else c_zero))))" arg2="(power 2 (h_width h))">
                <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="goal_comm">
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="columns_mat_sum">
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.96" steps="742147"/></proof>
                  </goal>
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.0.0.1" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="set_constant_size">
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.0.0.1.0" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.43" steps="840668"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.0.0.1.1" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.13" steps="820664"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.0.0.2" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.0.0.2.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.15" steps="817403"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.1" expl="equality hypothesis" proved="true">
                <transf name="apply" proved="true" arg1="columns_mat_sum">
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.1.0" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.88" steps="742147"/></proof>
                 </goal>
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.1.1" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="set_constant_size">
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.1.1.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.1.1.0.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.30" steps="840668"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.1.1.1" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.1.1.1.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.1.1.1.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.27" steps="820664"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.1.2" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.1.2.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.1.1.0.0.1.2.0.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.28" steps="817403"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.00" steps="622009"/></proof>
            </goal>
            <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="set_valid_index">
             <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="1.95" steps="740814"/></proof>
              </goal>
              <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(rows
    (mat_sum (n_bvs (h_width h))
     (fun (x1:bitvec) -&gt;
       mat_sum (n_bvs (h_range h))
       (fun (y:bitvec) -&gt;
         make_f (power 2 (h_width h)) (power 2 (h_width h))
         (fun (i:int) (j:int) -&gt;
           if i = bv_to_int (h_basis_ket_bv h x1 y) &amp;&amp; j = bv_to_int x1
           then ang_exp (h_angle_bv h x1 y) else c_zero)))))" arg2="(power 2 (h_width h))">
               <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.15" steps="741611"/></proof>
               </goal>
               <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1" expl="equality hypothesis" proved="true">
               <transf name="apply" proved="true" arg1="rows_mat_sum">
                <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.37" steps="658530"/></proof>
                </goal>
                <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="set_constant_size">
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0" expl="apply premises" proved="true">
                   <transf name="replace" proved="true" arg1="(rows
  (mat_sum (n_bvs (h_range h))
   (fun (y:bitvec) -&gt;
     make_f (power 2 (h_width h)) (power 2 (h_width h))
     (fun (i:int) (j:int) -&gt;
       if i = bv_to_int (h_basis_ket_bv h e y) &amp;&amp; j = bv_to_int e
       then ang_exp (h_angle_bv h e y) else c_zero))))" arg2="(power 2 (h_width h))">
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="goal_comm">
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="apply" proved="true" arg1="rows_mat_sum">
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="1.92" steps="742147"/></proof>
                      </goal>
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="set_constant_size">
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                         <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="2.47" steps="840668"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                         <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="2.17" steps="820664"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.36" steps="824057"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.1" expl="equality hypothesis" proved="true">
                    <transf name="apply" proved="true" arg1="rows_mat_sum">
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.1.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.88" steps="742147"/></proof>
                     </goal>
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.1.1" expl="apply premises" proved="true">
                     <transf name="apply" proved="true" arg1="set_constant_size">
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.1.1.0" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.18" steps="840668"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.1.1.1" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.1.1.1.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.1.1.1.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.14" steps="820664"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.1.2" expl="apply premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.1.2.0" expl="apply premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.0.0.0.1.2.0.0" expl="apply premises" proved="true">
                       <proof prover="8"><result status="valid" time="2.36" steps="824057"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0" expl="apply premises" proved="true">
                   <transf name="replace" proved="true" arg1="(columns
  (mat_sum (n_bvs (h_range h))
   (fun (y:bitvec) -&gt;
     make_f (power 2 (h_width h)) (power 2 (h_width h))
     (fun (i:int) (j:int) -&gt;
       if i = bv_to_int (h_basis_ket_bv h e y) &amp;&amp; j = bv_to_int e
       then ang_exp (h_angle_bv h e y) else c_zero))))" arg2="(power 2 (h_width h))">
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.0" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="goal_comm">
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="apply" proved="true" arg1="columns_mat_sum">
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="1.87" steps="742147"/></proof>
                      </goal>
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.0.0.1" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="set_constant_size">
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.0.0.1.0" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                         <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="2.29" steps="840668"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.0.0.1.1" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                         <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="2.17" steps="820664"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.0.0.2" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.0.0.2.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.14" steps="817403"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.1" expl="equality hypothesis" proved="true">
                    <transf name="apply" proved="true" arg1="columns_mat_sum">
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.1.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.88" steps="742147"/></proof>
                     </goal>
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.1.1" expl="apply premises" proved="true">
                     <transf name="apply" proved="true" arg1="set_constant_size">
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.1.1.0" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.1.1.0.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.20" steps="840668"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.1.1.1" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.1.1.1.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.1.1.1.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.14" steps="820664"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.1.2" expl="apply premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.1.2.0" expl="apply premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.1.1.0.0.1.2.0.0" expl="apply premises" proved="true">
                       <proof prover="8"><result status="valid" time="2.11" steps="817403"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.2" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.2.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.2.0.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="rows_mat_sum">
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.2.0.0.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="1.86" steps="741477"/></proof>
                   </goal>
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.2.0.0.1" expl="apply premises" proved="true">
                   <transf name="apply" proved="true" arg1="set_constant_size">
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.2.0.0.1.0" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.2.0.0.1.0.0" expl="apply premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.2.0.0.1.0.0.0" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="2.14" steps="839934"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.2.0.0.1.1" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.2.0.0.1.1.0" expl="apply premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.2.0.0.1.1.0.0" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="2.08" steps="819925"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.2.0.0.2" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.2.0.0.2.0" expl="apply premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.0.1.1.2.0.0.2.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.12" steps="823440"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.0" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="0.76"/></proof>
              </goal>
              <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(columns
    (mat_sum (n_bvs (h_width h))
     (fun (x1:bitvec) -&gt;
       mat_sum (n_bvs (h_range h))
       (fun (y:bitvec) -&gt;
         make_f (power 2 (h_width h)) (power 2 (h_width h))
         (fun (i:int) (j:int) -&gt;
           if i = bv_to_int (h_basis_ket_bv h x1 y) &amp;&amp; j = bv_to_int x1
           then ang_exp (h_angle_bv h x1 y) else c_zero)))))" arg2="(power 2 (h_width h))">
               <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.94" steps="740731"/></proof>
               </goal>
               <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1" expl="equality hypothesis" proved="true">
               <transf name="apply" proved="true" arg1="columns_mat_sum">
                <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.34" steps="658530"/></proof>
                </goal>
                <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="set_constant_size">
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0" expl="apply premises" proved="true">
                   <transf name="replace" proved="true" arg1="(rows
  (mat_sum (n_bvs (h_range h))
   (fun (y:bitvec) -&gt;
     make_f (power 2 (h_width h)) (power 2 (h_width h))
     (fun (i:int) (j:int) -&gt;
       if i = bv_to_int (h_basis_ket_bv h e y) &amp;&amp; j = bv_to_int e
       then ang_exp (h_angle_bv h e y) else c_zero))))" arg2="(power 2 (h_width h))">
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="goal_comm">
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="apply" proved="true" arg1="rows_mat_sum">
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="1.84" steps="742147"/></proof>
                      </goal>
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="set_constant_size">
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                         <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="2.48" steps="840668"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                         <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="2.23" steps="820664"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.31" steps="824057"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.1" expl="equality hypothesis" proved="true">
                    <transf name="apply" proved="true" arg1="rows_mat_sum">
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.1.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.97" steps="742147"/></proof>
                     </goal>
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.1.1" expl="apply premises" proved="true">
                     <transf name="apply" proved="true" arg1="set_constant_size">
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.1.1.0" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.25" steps="840668"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.1.1.1" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.1.1.1.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.1.1.1.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.18" steps="820664"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.1.2" expl="apply premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.1.2.0" expl="apply premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.0.0.0.1.2.0.0" expl="apply premises" proved="true">
                       <proof prover="8"><result status="valid" time="2.26" steps="824057"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0" expl="apply premises" proved="true">
                   <transf name="replace" proved="true" arg1="(columns
  (mat_sum (n_bvs (h_range h))
   (fun (y:bitvec) -&gt;
     make_f (power 2 (h_width h)) (power 2 (h_width h))
     (fun (i:int) (j:int) -&gt;
       if i = bv_to_int (h_basis_ket_bv h e y) &amp;&amp; j = bv_to_int e
       then ang_exp (h_angle_bv h e y) else c_zero))))" arg2="(power 2 (h_width h))">
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.0" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="goal_comm">
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="apply" proved="true" arg1="columns_mat_sum">
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="2.00" steps="742147"/></proof>
                      </goal>
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.0.0.1" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="set_constant_size">
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.0.0.1.0" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                         <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="2.42" steps="840668"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.0.0.1.1" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                         <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                         <proof prover="8"><result status="valid" time="2.18" steps="820664"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.0.0.2" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.0.0.2.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.43" steps="817403"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.1" expl="equality hypothesis" proved="true">
                    <transf name="apply" proved="true" arg1="columns_mat_sum">
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.1.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.83" steps="742147"/></proof>
                     </goal>
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.1.1" expl="apply premises" proved="true">
                     <transf name="apply" proved="true" arg1="set_constant_size">
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.1.1.0" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.1.1.0.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.18" steps="840668"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.1.1.1" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.1.1.1.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.1.1.1.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.10" steps="820664"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.1.2" expl="apply premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.1.2.0" expl="apply premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.1.1.0.0.1.2.0.0" expl="apply premises" proved="true">
                       <proof prover="8"><result status="valid" time="2.10" steps="817403"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.2" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.2.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.2.0.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="columns_mat_sum">
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.2.0.0.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="1.82" steps="741477"/></proof>
                   </goal>
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.2.0.0.1" expl="apply premises" proved="true">
                   <transf name="apply" proved="true" arg1="set_constant_size">
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.2.0.0.1.0" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.2.0.0.1.0.0" expl="apply premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.2.0.0.1.0.0.0" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="2.32" steps="839934"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.2.0.0.1.1" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.2.0.0.1.1.0" expl="apply premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.2.0.0.1.1.0.0" expl="apply premises" proved="true">
                      <proof prover="8"><result status="valid" time="2.25" steps="819925"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.2.0.0.2" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.2.0.0.2.0" expl="apply premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="pps_to_mat&#39;vc.23.0.0.3.0.0.1.0.0.1.3.1.1.1.2.0.0.2.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.19" steps="816791"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_to_mat&#39;vc.23.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.99" steps="621983"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="pps_to_mat&#39;vc.23.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.42" steps="658914"/></proof>
   </goal>
   <goal name="pps_to_mat&#39;vc.23.2" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="pps_to_mat&#39;vc.23.2.0" expl="rewrite premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures">
     <goal name="pps_to_mat&#39;vc.23.2.0.0" expl="rewrite premises" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures1">
      <goal name="pps_to_mat&#39;vc.23.2.0.0.0" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.01" steps="621981"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="pps_to_mat&#39;vc.23.2.1" expl="rewrite premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures1">
     <goal name="pps_to_mat&#39;vc.23.2.1.0" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.45" steps="658981"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pps_to_mat&#39;vc.24" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="x">
   <goal name="pps_to_mat&#39;vc.24.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Hinst" arg2="(h_width h)">
    <goal name="pps_to_mat&#39;vc.24.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="pps_to_mat&#39;vc.24.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="mat_mult_ket_sum_l">
      <goal name="pps_to_mat&#39;vc.24.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="pps_apply_sum">
       <goal name="pps_to_mat&#39;vc.24.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq">
        <goal name="pps_to_mat&#39;vc.24.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.92" steps="741663"/></proof>
        </goal>
        <goal name="pps_to_mat&#39;vc.24.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.80" steps="622815"/></proof>
        </goal>
        <goal name="pps_to_mat&#39;vc.24.0.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="pps_to_mat&#39;vc.24.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="pps_to_mat&#39;vc.24.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="pps_apply_scal">
           <goal name="pps_to_mat&#39;vc.24.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="mat_mut_scal">
            <goal name="pps_to_mat&#39;vc.24.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="scalar_eq">
             <goal name="pps_to_mat&#39;vc.24.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
              <goal name="pps_to_mat&#39;vc.24.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(ket_to_bv (bv_to_ket a))" arg2="a">
               <goal name="pps_to_mat&#39;vc.24.0.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="Ensures">
                <goal name="pps_to_mat&#39;vc.24.0.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.41" steps="660021"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="pps_to_mat&#39;vc.24.0.0.0.0.0.2.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="1.43" steps="659980"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="pps_to_mat&#39;vc.24.0.0.0.0.0.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.99" steps="743274"/></proof>
              </goal>
              <goal name="pps_to_mat&#39;vc.24.0.0.0.0.0.2.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.50" steps="659965"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="pps_to_mat&#39;vc.24.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="Ensures1">
             <goal name="pps_to_mat&#39;vc.24.0.0.0.0.0.2.0.0.0.1.0" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.87" steps="744432"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="pps_to_mat&#39;vc.24.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.86" steps="743274"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_to_mat&#39;vc.24.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.82" steps="622824"/></proof>
       </goal>
       <goal name="pps_to_mat&#39;vc.24.0.0.0.0.2" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="pps_to_mat&#39;vc.24.0.0.0.0.2.0" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="pps_to_mat&#39;vc.24.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.87" steps="745170"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_to_mat&#39;vc.24.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.90" steps="622815"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="pps_to_mat&#39;vc.24.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.82" steps="622819"/></proof>
      </goal>
      <goal name="pps_to_mat&#39;vc.24.0.0.0.2" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="pps_to_mat&#39;vc.24.0.0.0.2.0" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="pps_to_mat&#39;vc.24.0.0.0.2.0.0" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.98" steps="745170"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="pps_to_mat&#39;vc.24.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="pps_to_mat&#39;vc.24.0.0.0.3.0" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures1">
        <goal name="pps_to_mat&#39;vc.24.0.0.0.3.0.0" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures2">
         <goal name="pps_to_mat&#39;vc.24.0.0.0.3.0.0.0" proved="true">
         <proof prover="8"><result status="valid" time="0.87" steps="622815"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="pps_to_mat&#39;vc.24.0.0.0.3.1" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures2">
        <goal name="pps_to_mat&#39;vc.24.0.0.0.3.1.0" proved="true">
        <proof prover="8"><result status="valid" time="0.86" steps="622815"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pps_to_mat&#39;vc.24.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.85" steps="741663"/></proof>
     </goal>
     <goal name="pps_to_mat&#39;vc.24.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.42" steps="659857"/></proof>
     </goal>
     <goal name="pps_to_mat&#39;vc.24.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.52" steps="659908"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Mats_for_sem" proved="true">
 <goal name="sem_id_mat&#39;vc" expl="VC for sem_id_mat" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sem_id_mat&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.70" steps="568953"/></proof>
  </goal>
  <goal name="sem_id_mat&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.72" steps="568959"/></proof>
  </goal>
  <goal name="sem_id_mat&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.23" steps="604212"/></proof>
  </goal>
  <goal name="sem_id_mat&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.79" steps="579420"/></proof>
  </goal>
  <goal name="sem_id_mat&#39;vc.4" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="mat_mult_ket_basis_bv_gen">
   <goal name="sem_id_mat&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ket_length (bv_to_ket x))" arg2="1">
    <goal name="sem_id_mat&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_one">
     <goal name="sem_id_mat&#39;vc.4.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="sem_id_mat&#39;vc.4.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
       <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
        <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="replace" proved="true" arg1="(ket_to_int (bv_to_ket x))" arg2="(bv_to_int x )">
         <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="case" proved="true" arg1="(bv_to_int x = 0)">
          <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="add_ket_l_null">
           <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
            <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
            <proof prover="8"><result status="valid" time="1.42" steps="604287"/></proof>
            </goal>
            <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="Ensures2">
             <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.65" steps="668083"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.64" steps="669365"/></proof>
           </goal>
           <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.85" steps="669202"/></proof>
           </goal>
           <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="set_null_mat">
            <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="scalar_values">
              <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="Ensures2">
               <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.68" steps="671107"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.1" expl="false case (postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="null_add_ket_l">
           <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.1.0" expl="false case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
            <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.1.0.0" expl="false case (postcondition)" proved="true">
            <proof prover="8"><result status="valid" time="4.03" steps="1229756"/></proof>
            </goal>
            <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="Ensures2">
             <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.60" steps="670062"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.92" steps="668595"/></proof>
           </goal>
           <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.66" steps="668575"/></proof>
           </goal>
           <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.1.3" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="set_null_mat">
            <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.1.3.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.1.3.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="scalar_values">
              <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.1.3.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="Ensures2">
               <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.1.3.0.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.0.1.3.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.66" steps="670574"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="1.44" steps="604288"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.85" steps="567941"/></proof>
        </goal>
        <goal name="sem_id_mat&#39;vc.4.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.95" steps="579473"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="sem_id_mat&#39;vc.4.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.82" steps="567941"/></proof>
       </goal>
       <goal name="sem_id_mat&#39;vc.4.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.93" steps="579473"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="sem_id_mat&#39;vc.4.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.83" steps="567941"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="sem_id_mat&#39;vc.4.0.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.51" steps="604276"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sem_id_mat&#39;vc.4.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.51" steps="604240"/></proof>
   </goal>
   <goal name="sem_id_mat&#39;vc.4.2" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.47" steps="604299"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sem_id_mat&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="607236"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sem_rz_mat&#39;vc" expl="VC for sem_rz_mat" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sem_rz_mat&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.76" steps="569244"/></proof>
  </goal>
  <goal name="sem_rz_mat&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.75" steps="569250"/></proof>
  </goal>
  <goal name="sem_rz_mat&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.45" steps="604616"/></proof>
  </goal>
  <goal name="sem_rz_mat&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.92" steps="579883"/></proof>
  </goal>
  <goal name="sem_rz_mat&#39;vc.4" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="mat_mult_ket_basis_bv_gen">
   <goal name="sem_rz_mat&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ket_length (bv_to_ket x))" arg2="1">
    <goal name="sem_rz_mat&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_one">
     <goal name="sem_rz_mat&#39;vc.4.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="sem_rz_mat&#39;vc.4.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
       <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
        <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="replace" proved="true" arg1="(ket_to_int (bv_to_ket x))" arg2="(bv_to_int x)">
         <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="case" proved="true" arg1="(bv_to_int x = 0)">
          <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="add_ket_l_null">
           <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
           <transf name="apply" proved="true" arg1="scalar_eq_gen">
            <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.46" steps="604738"/></proof>
            </goal>
            <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="Ensures2">
             <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="1.56" steps="634060"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.93" steps="669829"/></proof>
           </goal>
           <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.90" steps="669661"/></proof>
           </goal>
           <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="set_null_mat">
            <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="scalar_values">
              <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="Ensures2">
               <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.49" steps="604340"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.1" expl="false case (postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="null_add_ket_l">
           <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.1.0" expl="false case (postcondition)" proved="true">
           <transf name="apply" proved="true" arg1="scalar_eq_gen">
            <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="0.84"/></proof>
            </goal>
            <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="Ensures2">
             <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="1.75" steps="700760"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.65" steps="669256"/></proof>
           </goal>
           <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.95" steps="669236"/></proof>
           </goal>
           <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.1.3" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="set_null_mat">
            <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.1.3.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.1.3.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="scalar_values">
              <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.1.3.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="Ensures2">
               <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.1.3.0.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.0.1.3.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.47" steps="604368"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="1.54" steps="604739"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.84" steps="568368"/></proof>
        </goal>
        <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.93" steps="579931"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.85" steps="568368"/></proof>
       </goal>
       <goal name="sem_rz_mat&#39;vc.4.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.96" steps="579931"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="sem_rz_mat&#39;vc.4.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.86" steps="568368"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="sem_rz_mat&#39;vc.4.0.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.51" steps="604722"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sem_rz_mat&#39;vc.4.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.52" steps="604691"/></proof>
   </goal>
   <goal name="sem_rz_mat&#39;vc.4.2" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.46" steps="604750"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sem_rz_mat&#39;vc.5" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_rz_apply_basis">
   <goal name="sem_rz_mat&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="sem_rz_mat&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sem_rz_mat&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <proof prover="8"><result status="valid" time="1.56" steps="638891"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sem_rz_mat&#39;vc.5.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.96" steps="595913"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sem_phase_mat&#39;vc" expl="VC for sem_phase_mat" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sem_phase_mat&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.80" steps="569664"/></proof>
  </goal>
  <goal name="sem_phase_mat&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.77" steps="569670"/></proof>
  </goal>
  <goal name="sem_phase_mat&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="605032"/></proof>
  </goal>
  <goal name="sem_phase_mat&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.98" steps="580280"/></proof>
  </goal>
  <goal name="sem_phase_mat&#39;vc.4" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="mat_mult_ket_basis_bv_gen">
   <goal name="sem_phase_mat&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ket_length (bv_to_ket x))" arg2="1">
    <goal name="sem_phase_mat&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_one">
     <goal name="sem_phase_mat&#39;vc.4.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="sem_phase_mat&#39;vc.4.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
       <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
        <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="replace" proved="true" arg1="(ket_to_int (bv_to_ket x))" arg2="(bv_to_int x)">
         <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="case" proved="true" arg1="(bv_to_int x = 0)">
          <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="add_ket_l_null">
           <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
           <transf name="apply" proved="true" arg1="scalar_eq_gen">
            <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.38" steps="605189"/></proof>
            </goal>
            <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="Ensures2">
             <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="1.01" steps="580356"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.76" steps="670472"/></proof>
           </goal>
           <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.73" steps="670309"/></proof>
           </goal>
           <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="set_null_mat">
            <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="scalar_values">
              <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="Ensures2">
               <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.31" steps="604780"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.1" expl="false case (postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="null_add_ket_l">
           <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.1.0" expl="false case (postcondition)" proved="true">
           <transf name="apply" proved="true" arg1="scalar_eq_gen">
            <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="0.86"/></proof>
            </goal>
            <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="Ensures2">
             <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="1.72" steps="670180"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.72" steps="669707"/></proof>
           </goal>
           <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.72" steps="669687"/></proof>
           </goal>
           <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.1.3" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="set_null_mat">
            <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.1.3.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.1.3.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="scalar_values">
              <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.1.3.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="Ensures2">
               <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.1.3.0.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.0.1.3.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.32" steps="604808"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="1.36" steps="605200"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.93" steps="568745"/></proof>
        </goal>
        <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.82" steps="580328"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.88" steps="568745"/></proof>
       </goal>
       <goal name="sem_phase_mat&#39;vc.4.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.98" steps="580328"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="sem_phase_mat&#39;vc.4.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.84" steps="568745"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="sem_phase_mat&#39;vc.4.0.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.57" steps="605178"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sem_phase_mat&#39;vc.4.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.59" steps="605152"/></proof>
   </goal>
   <goal name="sem_phase_mat&#39;vc.4.2" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.53" steps="605206"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sem_phase_mat&#39;vc.5" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_phase_apply_basis">
   <goal name="sem_phase_mat&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="sem_phase_mat&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sem_phase_mat&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <proof prover="8"><result status="valid" time="1.53" steps="611042"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sem_phase_mat&#39;vc.5.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.85" steps="568808"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sem_hadamard_mat&#39;vc" expl="VC for sem_hadamard_mat" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sem_hadamard_mat&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.76" steps="495124"/></proof>
  </goal>
  <goal name="sem_hadamard_mat&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.76" steps="570041"/></proof>
  </goal>
  <goal name="sem_hadamard_mat&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.75" steps="570047"/></proof>
  </goal>
  <goal name="sem_hadamard_mat&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.29" steps="605393"/></proof>
  </goal>
  <goal name="sem_hadamard_mat&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.83" steps="580632"/></proof>
  </goal>
  <goal name="sem_hadamard_mat&#39;vc.5" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="mat_mult_ket_basis_bv_gen">
   <goal name="sem_hadamard_mat&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ket_length (ket 1 0))" arg2="1">
    <goal name="sem_hadamard_mat&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(ket_length (bv_to_ket x))" arg2="1">
     <goal name="sem_hadamard_mat&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_one">
      <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
        <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="add_ket_l_scal_rev">
         <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="apply" proved="true" arg1="add_ket_l_eq">
          <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="0.85" steps="569089"/></proof>
          </goal>
          <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="scalar_eq_gen">
           <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="0.85" steps="569080"/></proof>
           </goal>
           <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures2">
            <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.30" steps="608562"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="scalar_assoc">
           <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="scalar_eq_gen">
            <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.72" steps="670778"/></proof>
            </goal>
            <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.0.2.0.1" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="Ensures2">
             <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.0.2.0.1.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.0.2.0.1.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="mult_eq_t_rev">
               <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.0.2.0.1.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
                <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.0.2.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.92" steps="717235"/></proof>
                </goal>
                <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.0.2.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="0.94" steps="569089"/></proof>
                </goal>
                <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.0.2.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="0.85" steps="580685"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.0.2.0.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="0.89" steps="569080"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="2.02" steps="669225"/></proof>
         </goal>
         <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.80" steps="700477"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.88" steps="569089"/></proof>
        </goal>
        <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.98" steps="580685"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="sem_hadamard_mat&#39;vc.5.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.87" steps="569089"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="sem_hadamard_mat&#39;vc.5.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.50" steps="605599"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="sem_hadamard_mat&#39;vc.5.0.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.94" steps="669549"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sem_hadamard_mat&#39;vc.5.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.50" steps="605563"/></proof>
   </goal>
   <goal name="sem_hadamard_mat&#39;vc.5.2" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.47" steps="605622"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sem_hadamard_mat&#39;vc.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_hadamard_apply_basis">
   <goal name="sem_hadamard_mat&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="sem_hadamard_mat&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sem_hadamard_mat&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="Ensures">
      <goal name="sem_hadamard_mat&#39;vc.6.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="0.83" steps="604217"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sem_hadamard_mat&#39;vc.6.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.92" steps="596637"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cnot_func&#39;vc" expl="VC for cnot_func" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cnot_func&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.70"/></proof>
  </goal>
  <goal name="cnot_func&#39;vc.1" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.66"/></proof>
  </goal>
  <goal name="cnot_func&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="cnot_func&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.60" steps="622590"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cnot_func&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.87" steps="521445"/></proof>
  </goal>
  <goal name="cnot_func&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.15" steps="554293"/></proof>
  </goal>
  <goal name="cnot_func&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="622234"/></proof>
  </goal>
  <goal name="cnot_func&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="622310"/></proof>
  </goal>
  <goal name="cnot_func&#39;vc.7" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H1">
   <goal name="cnot_func&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="1.33" steps="553917"/></proof>
   </goal>
   <goal name="cnot_func&#39;vc.7.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="cnot_func&#39;vc.7.1.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="H1">
     <goal name="cnot_func&#39;vc.7.1.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="set_equal_bv">
      <goal name="cnot_func&#39;vc.7.1.0.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="cnot_func&#39;vc.7.1.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.76" steps="625860"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cnot_func&#39;vc.7.1.0.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="cnot_func&#39;vc.7.1.0.0.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures4">
        <goal name="cnot_func&#39;vc.7.1.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="cnot_func&#39;vc.7.1.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="cnot_func&#39;vc.7.1.0.0.1.0.0.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="cnot_func&#39;vc.7.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="1.75" steps="634290"/></proof>
           </goal>
           <goal name="cnot_func&#39;vc.7.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="i" arg2="1">
            <goal name="cnot_func&#39;vc.7.1.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(getbv (int_to_bv 3 2) @ 1)" arg2="1">
             <goal name="cnot_func&#39;vc.7.1.0.0.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.27" steps="561486"/></proof>
             </goal>
             <goal name="cnot_func&#39;vc.7.1.0.0.1.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
             <transf name="rewrite" proved="true" arg1="int_to_bv_value">
              <goal name="cnot_func&#39;vc.7.1.0.0.1.0.0.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
              <transf name="replace" proved="true" arg1="(power 2 ((2 - 1) - 1))" arg2="1">
               <goal name="cnot_func&#39;vc.7.1.0.0.1.0.0.0.0.1.0.1.0.0" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="0.76" steps="528855"/></proof>
               </goal>
               <goal name="cnot_func&#39;vc.7.1.0.0.1.0.0.0.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="1.32" steps="561967"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="cnot_func&#39;vc.7.1.0.0.1.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="0.78" steps="528847"/></proof>
              </goal>
              <goal name="cnot_func&#39;vc.7.1.0.0.1.0.0.0.0.1.0.1.2" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.80" steps="632750"/></proof>
              </goal>
              <goal name="cnot_func&#39;vc.7.1.0.0.1.0.0.0.0.1.0.1.3" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="0.78" steps="528861"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="cnot_func&#39;vc.7.1.0.0.1.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="1.27" steps="561641"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cnot_func&#39;vc.7.1.0.0.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.27" steps="554485"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cnot_func&#39;vc.8" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H1">
   <goal name="cnot_func&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="1.30" steps="553968"/></proof>
   </goal>
   <goal name="cnot_func&#39;vc.8.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="cnot_func&#39;vc.8.1.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="H1">
     <goal name="cnot_func&#39;vc.8.1.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="set_equal_bv">
      <goal name="cnot_func&#39;vc.8.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.72" steps="625503"/></proof>
      </goal>
      <goal name="cnot_func&#39;vc.8.1.0.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="cnot_func&#39;vc.8.1.0.0.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures5">
        <goal name="cnot_func&#39;vc.8.1.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="cnot_func&#39;vc.8.1.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="cnot_func&#39;vc.8.1.0.0.1.0.0.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="cnot_func&#39;vc.8.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="1.42" steps="634229"/></proof>
           </goal>
           <goal name="cnot_func&#39;vc.8.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(getbv (int_to_bv 2 2) @ i)" arg2="0">
            <goal name="cnot_func&#39;vc.8.1.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.00" steps="561720"/></proof>
            </goal>
            <goal name="cnot_func&#39;vc.8.1.0.0.1.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="int_to_bv_value">
             <goal name="cnot_func&#39;vc.8.1.0.0.1.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
             <transf name="replace" proved="true" arg1="(power 2 ((2 - 1) - 1))" arg2="1">
              <goal name="cnot_func&#39;vc.8.1.0.0.1.0.0.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
              <proof prover="0"><result status="valid" time="0.62"/></proof>
              </goal>
              <goal name="cnot_func&#39;vc.8.1.0.0.1.0.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="1.05" steps="562018"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="cnot_func&#39;vc.8.1.0.0.1.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="0.60" steps="528879"/></proof>
             </goal>
             <goal name="cnot_func&#39;vc.8.1.0.0.1.0.0.0.0.1.1.2" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.52" steps="632085"/></proof>
             </goal>
             <goal name="cnot_func&#39;vc.8.1.0.0.1.0.0.0.0.1.1.3" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.00" steps="561538"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cnot_func&#39;vc.8.1.0.0.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="0.99" steps="554536"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="invol_cnot_func&#39;vc" expl="VC for invol_cnot_func" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="invol_cnot_func&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="invol_cnot_func&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(bv_to_int x = 0)">
    <goal name="invol_cnot_func&#39;vc.0.0.0" expl="true case (postcondition)" proved="true">
    <transf name="rewrite" proved="true" arg1="cnot_func&#39;spec3">
     <goal name="invol_cnot_func&#39;vc.0.0.0.0" expl="true case (postcondition)" proved="true">
     <proof prover="8"><result status="valid" time="1.93" steps="687971"/></proof>
     </goal>
     <goal name="invol_cnot_func&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.31" steps="619334"/></proof>
     </goal>
     <goal name="invol_cnot_func&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <transf name="rewrite" proved="true" arg1="cnot_func&#39;spec3">
      <goal name="invol_cnot_func&#39;vc.0.0.0.2.0" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.97" steps="688653"/></proof>
      </goal>
      <goal name="invol_cnot_func&#39;vc.0.0.0.2.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.86" steps="581412"/></proof>
      </goal>
      <goal name="invol_cnot_func&#39;vc.0.0.0.2.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.90" steps="581412"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="invol_cnot_func&#39;vc.0.0.1" expl="false case (postcondition)" proved="true">
    <transf name="case" proved="true" arg1="(bv_to_int x = 1)">
     <goal name="invol_cnot_func&#39;vc.0.0.1.0" expl="false case (true case. postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="cnot_func&#39;spec2">
      <goal name="invol_cnot_func&#39;vc.0.0.1.0.0" expl="false case (true case. postcondition)" proved="true">
      <proof prover="8"><result status="valid" time="1.94" steps="687970"/></proof>
      </goal>
      <goal name="invol_cnot_func&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.47" steps="619357"/></proof>
      </goal>
      <goal name="invol_cnot_func&#39;vc.0.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.95" steps="688735"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="invol_cnot_func&#39;vc.0.0.1.1" expl="false case (postcondition)" proved="true">
     <transf name="case" proved="true" arg1="(bv_to_int x = 2)">
      <goal name="invol_cnot_func&#39;vc.0.0.1.1.0" expl="false case (true case. postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="cnot_func&#39;spec">
       <goal name="invol_cnot_func&#39;vc.0.0.1.1.0.0" expl="false case (true case. postcondition)" proved="true">
       <proof prover="8"><result status="valid" time="1.96" steps="688093"/></proof>
       </goal>
       <goal name="invol_cnot_func&#39;vc.0.0.1.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.46" steps="619380"/></proof>
       </goal>
       <goal name="invol_cnot_func&#39;vc.0.0.1.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.00" steps="689602"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="invol_cnot_func&#39;vc.0.0.1.1.1" expl="false case (postcondition)" proved="true">
      <transf name="assert" proved="true" arg1="(bv_to_int x = 3)">
       <goal name="invol_cnot_func&#39;vc.0.0.1.1.1.0" expl="asserted formula" proved="true">
       <transf name="assert" proved="true" arg1="(0&lt;= bv_to_int x &lt;4)">
        <goal name="invol_cnot_func&#39;vc.0.0.1.1.1.0.0" expl="asserted formula" proved="true">
        <transf name="replace" proved="true" arg1="4" arg2="(power  2 (length x))">
         <goal name="invol_cnot_func&#39;vc.0.0.1.1.1.0.0.0" expl="asserted formula" proved="true">
         <proof prover="8"><result status="valid" time="1.86" steps="688961"/></proof>
         </goal>
         <goal name="invol_cnot_func&#39;vc.0.0.1.1.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="1.91" steps="688353"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="invol_cnot_func&#39;vc.0.0.1.1.1.0.1" expl="asserted formula" proved="true">
        <proof prover="8"><result status="valid" time="1.20" steps="618886"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="invol_cnot_func&#39;vc.0.0.1.1.1.1" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="cnot_func&#39;spec1">
        <goal name="invol_cnot_func&#39;vc.0.0.1.1.1.1.0" expl="false case (postcondition)" proved="true">
        <proof prover="8"><result status="valid" time="1.70" steps="688027"/></proof>
        </goal>
        <goal name="invol_cnot_func&#39;vc.0.0.1.1.1.1.1" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="cnot_func&#39;spec">
         <goal name="invol_cnot_func&#39;vc.0.0.1.1.1.1.1.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.90" steps="689234"/></proof>
         </goal>
         <goal name="invol_cnot_func&#39;vc.0.0.1.1.1.1.1.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.85" steps="581457"/></proof>
         </goal>
         <goal name="invol_cnot_func&#39;vc.0.0.1.1.1.1.1.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.88" steps="581457"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="invol_cnot_func&#39;vc.0.0.1.1.1.1.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.02" steps="689498"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cnot_func_int&#39;vc" expl="VC for cnot_func_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cnot_func_int&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.75" steps="496095"/></proof>
  </goal>
  <goal name="cnot_func_int&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.79" steps="521670"/></proof>
  </goal>
  <goal name="cnot_func_int&#39;vc.2" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="4" arg2="(power 2 2)">
   <goal name="cnot_func_int&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="1.80" steps="626202"/></proof>
   </goal>
   <goal name="cnot_func_int&#39;vc.2.1" expl="equality hypothesis" proved="true">
   <proof prover="8"><result status="valid" time="1.80" steps="625685"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cnot_func_int&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="625204"/></proof>
  </goal>
  <goal name="cnot_func_int&#39;vc.4" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cnot_func_int&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cnot_func_int&#39;vc.4.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="1.80" steps="623885"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cnot_func_int&#39;vc.5" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cnot_func_int&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cnot_func_int&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="cnot_func_int&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="cnot_func&#39;spec1">
      <goal name="cnot_func_int&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="2.18" steps="733116"/></proof>
      </goal>
      <goal name="cnot_func_int&#39;vc.5.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.94" steps="624260"/></proof>
      </goal>
      <goal name="cnot_func_int&#39;vc.5.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.82" steps="732495"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cnot_func_int&#39;vc.6" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cnot_func_int&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cnot_func_int&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="cnot_func_int&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="cnot_func&#39;spec">
      <goal name="cnot_func_int&#39;vc.6.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="1.82" steps="733137"/></proof>
      </goal>
      <goal name="cnot_func_int&#39;vc.6.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.98" steps="624285"/></proof>
      </goal>
      <goal name="cnot_func_int&#39;vc.6.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.82" steps="732503"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cnot_func_int&#39;vc.7" expl="postcondition" proved="true">
  <transf name="eliminate_if" proved="true" >
   <goal name="cnot_func_int&#39;vc.7.0" expl="VC for cnot_func_int" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cnot_func_int&#39;vc.7.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="1.33" steps="563221"/></proof>
    </goal>
    <goal name="cnot_func_int&#39;vc.7.0.1" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(i = 2)">
     <goal name="cnot_func_int&#39;vc.7.0.1.0" expl="true case (postcondition)" proved="true">
     <proof prover="8"><result status="valid" time="0.83" steps="540359"/></proof>
     </goal>
     <goal name="cnot_func_int&#39;vc.7.0.1.1" expl="false case (postcondition)" proved="true">
     <transf name="assert" proved="true" arg1="(i =3)">
      <goal name="cnot_func_int&#39;vc.7.0.1.1.0" expl="asserted formula" proved="true">
      <proof prover="8"><result status="valid" time="1.33" steps="562089"/></proof>
      </goal>
      <goal name="cnot_func_int&#39;vc.7.0.1.1.1" expl="false case (postcondition)" proved="true">
      <proof prover="8"><result status="valid" time="0.90" steps="540374"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="invol_cnot_func_int&#39;vc" expl="VC for invol_cnot_func_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="invol_cnot_func_int&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.77"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sem_cnot_mat&#39;vc" expl="VC for sem_cnot_mat" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sem_cnot_mat&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.74" steps="571760"/></proof>
  </goal>
  <goal name="sem_cnot_mat&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.74" steps="571766"/></proof>
  </goal>
  <goal name="sem_cnot_mat&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.97" steps="669027"/></proof>
  </goal>
  <goal name="sem_cnot_mat&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.96" steps="582390"/></proof>
  </goal>
  <goal name="sem_cnot_mat&#39;vc.4" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equal_mat">
   <goal name="sem_cnot_mat&#39;vc.4.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="1.96" steps="671362"/></proof>
   </goal>
   <goal name="sem_cnot_mat&#39;vc.4.1" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="1.92" steps="671250"/></proof>
   </goal>
   <goal name="sem_cnot_mat&#39;vc.4.2" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sem_cnot_mat&#39;vc.4.2.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures2">
     <goal name="sem_cnot_mat&#39;vc.4.2.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="sem_cnot_mat&#39;vc.4.2.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make">
       <goal name="sem_cnot_mat&#39;vc.4.2.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="sem_cnot_mat&#39;vc.4.2.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="eliminate_if" proved="true" >
         <goal name="sem_cnot_mat&#39;vc.4.2.0.0.0.0.0.0" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="sem_cnot_mat&#39;vc.4.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="0.88" steps="578042"/></proof>
          </goal>
          <goal name="sem_cnot_mat&#39;vc.4.2.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.63"/></proof>
          </goal>
          <goal name="sem_cnot_mat&#39;vc.4.2.0.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.71"/></proof>
          </goal>
          <goal name="sem_cnot_mat&#39;vc.4.2.0.0.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="0.88" steps="578050"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="sem_cnot_mat&#39;vc.4.2.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="sem_cnot_mat&#39;vc.4.2.0.0.0.1.0" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.96" steps="669665"/></proof>
        </goal>
        <goal name="sem_cnot_mat&#39;vc.4.2.0.0.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.99" steps="670184"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="sem_cnot_mat&#39;vc.4.2.0.0.0.2" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="sem_cnot_mat&#39;vc.4.2.0.0.0.2.0" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.97" steps="669665"/></proof>
        </goal>
        <goal name="sem_cnot_mat&#39;vc.4.2.0.0.0.2.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.00" steps="670184"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sem_cnot_mat&#39;vc.5" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="mat_mult_ket_basis_bv_gen">
   <goal name="sem_cnot_mat&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ket_length (bv_to_ket x))" arg2="2">
    <goal name="sem_cnot_mat&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="ket_sum_l_null_but_maybe_one_elt" arg2="(fun (bvx:bitvec) -&gt;
    get result (bv_to_int bvx) (ket_to_int (bv_to_ket x))
    *.. ket (ket_length (bv_to_ket x)) (bv_to_int bvx)),(n_bvs 2),(cnot_func x),2">
     <goal name="sem_cnot_mat&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(ket_length (bv_to_ket x))" arg2="2" arg3="in" arg4="Hinst">
      <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Hinst">
       <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
         <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="replace" proved="true" arg1="(make_ket 2 (fun (y1:int) -&gt; get_ket (ket 2 (bv_to_int (cnot_func x))) y1))" arg2="(ket 2 (bv_to_int (cnot_func x)))">
          <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="replace" proved="true" arg1="(bv_to_int (cnot_func x))" arg2="(cnot_func_int (bv_to_int x))">
           <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="eliminate_definition" proved="true" >
            <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="bv_to_ket&#39;def">
             <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <transf name="apply" proved="true" arg1="ket_eq">
              <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="eliminate_if" proved="true" >
               <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="0.92" steps="580363"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="1.82" steps="710121"/></proof>
              </goal>
              <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
              <transf name="eliminate_if" proved="true" >
               <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.2.0" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="2.21" steps="851262"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.2.0.1" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.2.0.1.0" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="2.50" steps="850841"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.2.0.2" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.2.0.2.0" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="2.56" steps="852945"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="eliminate_definition" proved="true" >
            <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="cnot_func_int&#39;def">
             <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="1.99" steps="678952"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="apply" proved="true" arg1="set_equal_ket_l">
           <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="exists" proved="true" arg1="2">
            <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.1.0.0" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.1.0.0.0" proved="true">
             <proof prover="8"><result status="valid" time="2.00" steps="676959"/></proof>
             </goal>
             <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.1.0.0.1" proved="true">
             <proof prover="8"><result status="valid" time="2.00" steps="677859"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_ket_l">
             <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
             </transf>
             </goal>
             <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="0.88" steps="571949"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="replace" proved="true" arg1="(ket_to_int (bv_to_ket x))" arg2="(bv_to_int x)">
          <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="Ensures3">
           <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
            <transf name="eliminate_if" proved="true" >
             <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.1.0.0.0.0" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.1.0.0.0.0.0" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="0.89" steps="579888"/></proof>
              </goal>
              <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="2.09" steps="685567"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="1.57" steps="607642"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.88" steps="571855"/></proof>
       </goal>
       <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.93" steps="724535"/></proof>
       </goal>
       <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="4.00" steps="772671"/></proof>
       </goal>
       <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.4" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.4.0" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.4.0.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="get_ket_scalar">
          <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.4.0.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="zero_mult_t">
           <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.4.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures3">
            <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.4.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="sem_cnot_mat&#39;vc.5.0.0.0.0.4.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.15" steps="764970"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="sem_cnot_mat&#39;vc.5.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="1.53" steps="607619"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="sem_cnot_mat&#39;vc.5.0.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.51" steps="606854"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sem_cnot_mat&#39;vc.5.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.51" steps="606827"/></proof>
   </goal>
   <goal name="sem_cnot_mat&#39;vc.5.2" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.46" steps="606885"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sem_cnot_mat&#39;vc.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="sem_cnot_mat&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(getbv x 0 = 0)">
    <goal name="sem_cnot_mat&#39;vc.6.0.0" expl="true case (postcondition)" proved="true">
    <proof prover="8"><result status="valid" time="0.99" steps="610485"/></proof>
    </goal>
    <goal name="sem_cnot_mat&#39;vc.6.0.1" expl="false case (postcondition)" proved="true">
    <transf name="replace" proved="true" arg1="(make_bv
          (fun (i:int) -&gt; if i = 0 then getbv x @ i else 1 - (getbv x @ i)) 2)" arg2="(int_to_bv (if bv_to_int x = 2 then 3 else 2) 2)">
     <goal name="sem_cnot_mat&#39;vc.6.0.1.0" expl="false case (postcondition)" proved="true">
     <proof prover="8"><result status="valid" time="0.90" steps="598698"/></proof>
     </goal>
     <goal name="sem_cnot_mat&#39;vc.6.0.1.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="set_equal_bv">
      <goal name="sem_cnot_mat&#39;vc.6.0.1.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="make_bv_length">
       <goal name="sem_cnot_mat&#39;vc.6.0.1.1.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.06" steps="706044"/></proof>
       </goal>
       <goal name="sem_cnot_mat&#39;vc.6.0.1.1.0.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="sem_cnot_mat&#39;vc.6.0.1.1.0.1.0" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="sem_cnot_mat&#39;vc.6.0.1.1.0.1.0.0" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.89"/></proof>
         </goal>
         <goal name="sem_cnot_mat&#39;vc.6.0.1.1.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.89"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="sem_cnot_mat&#39;vc.6.0.1.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.88" steps="598707"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
        <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
          <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="eliminate_if" proved="true" >
           <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.16" steps="721091"/></proof>
            </goal>
            <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.17" steps="720178"/></proof>
            </goal>
            <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.2" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="int_to_bv_value">
             <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.2.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="i" arg2="1">
              <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(power 2 ((2 - 1) - 1))" arg2="1">
               <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
               <proof prover="4"><result status="valid" time="1.59" steps="66282"/></proof>
               </goal>
               <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.2.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="1.61" steps="645377"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.2.0.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="1.54" steps="645063"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="0.94" steps="607086"/></proof>
             </goal>
             <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.2.2" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.01" steps="618763"/></proof>
             </goal>
             <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.2.3" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="0.90" steps="607086"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="i" arg2="1">
             <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="int_to_bv_value">
              <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(power 2 ((2 - 1) - 1))" arg2="1">
               <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(getbv x @ 1)" arg2="1">
                <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="0.91" steps="607101"/></proof>
                </goal>
                <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0.1" expl="equality hypothesis" proved="true">
                <transf name="case" proved="true" arg1="((getbv x @ 1) = 0)">
                 <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0.1.0" expl="equality hypothesis (true case)" proved="true">
                 <transf name="assert" proved="true" arg1="(bv_to_int x = 2)">
                  <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0.1.0.0" expl="asserted formula" proved="true">
                  <transf name="eliminate_definition" proved="true" >
                   <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
                   <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
                    <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
                    <transf name="rewrite" proved="true" arg1="ind_isum_plus_one">
                     <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
                      <transf name="rewrite" proved="true" arg1="ind_isum_one">
                       <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0.1.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                        <transf name="rewrite" proved="true" arg1="add_zero">
                         <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                         <transf name="rewrite" proved="true" arg1="one_mult">
                          <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                          <proof prover="8"><result status="valid" time="1.61" steps="646354"/></proof>
                          </goal>
                          <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                          <proof prover="8"><result status="valid" time="2.12" steps="715753"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="8"><result status="valid" time="1.01" steps="619526"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="8"><result status="valid" time="0.92" steps="607802"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.01" steps="619507"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0.1.0.1" expl="equality hypothesis (true case)" proved="true">
                  <proof prover="8"><result status="valid" time="0.94" steps="607109"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.0.1.1" expl="equality hypothesis (false case)" proved="true">
                 <proof prover="8"><result status="valid" time="1.75" steps="716026"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="1.60" steps="645371"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.1" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="0.91" steps="607090"/></proof>
              </goal>
              <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.2" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="0.99" steps="618767"/></proof>
              </goal>
              <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.0.3" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="0.92" steps="607104"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.0.0.3.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="1.57" steps="645057"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
            <proof prover="0"><result status="valid" time="0.93"/></proof>
            </goal>
            <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="0"><result status="valid" time="0.76"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.88" steps="598818"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.1.0" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.1.0.0" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="0.75"/></proof>
          </goal>
          <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="0.74"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.2" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
         <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.2.0" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.90" steps="598734"/></proof>
         </goal>
         <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.2.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.2.1.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.2.1.0.0" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="0.76"/></proof>
           </goal>
           <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.2.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="0.78"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="sem_cnot_mat&#39;vc.6.0.1.1.1.0.2.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="0.91" steps="598818"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sem_cnot_mat&#39;vc.6.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.90" steps="598674"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sem_cnot_mat&#39;vc.7" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(ket 2 i)" arg2="(bv_to_ket (int_to_bv i 2))">
   <goal name="sem_cnot_mat&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures1">
    <goal name="sem_cnot_mat&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="sem_cnot_mat&#39;vc.7.0.0.0" expl="VC for sem_cnot_mat" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="sem_cnot_mat&#39;vc.7.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="2.09" steps="713616"/></proof>
      </goal>
      <goal name="sem_cnot_mat&#39;vc.7.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="2.05" steps="713625"/></proof>
      </goal>
      <goal name="sem_cnot_mat&#39;vc.7.0.0.0.2" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="1.89" steps="714206"/></proof>
      </goal>
      <goal name="sem_cnot_mat&#39;vc.7.0.0.0.3" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="1.91" steps="714289"/></proof>
      </goal>
      <goal name="sem_cnot_mat&#39;vc.7.0.0.0.4" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="2.07" steps="715044"/></proof>
      </goal>
      <goal name="sem_cnot_mat&#39;vc.7.0.0.0.5" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="2.05" steps="715028"/></proof>
      </goal>
      <goal name="sem_cnot_mat&#39;vc.7.0.0.0.6" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="2.10" steps="715532"/></proof>
      </goal>
      <goal name="sem_cnot_mat&#39;vc.7.0.0.0.7" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="2.09" steps="715336"/></proof>
      </goal>
      <goal name="sem_cnot_mat&#39;vc.7.0.0.0.8" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="2.09" steps="714873"/></proof>
      </goal>
      <goal name="sem_cnot_mat&#39;vc.7.0.0.0.9" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="2.10" steps="714859"/></proof>
      </goal>
      <goal name="sem_cnot_mat&#39;vc.7.0.0.0.10" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="2.07" steps="714411"/></proof>
      </goal>
      <goal name="sem_cnot_mat&#39;vc.7.0.0.0.11" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="2.07" steps="714938"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="sem_cnot_mat&#39;vc.7.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="2.05" steps="702198"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sem_cnot_mat&#39;vc.7.1" expl="equality hypothesis" proved="true">
   <proof prover="8"><result status="valid" time="2.03" steps="701493"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sem_cnot_mat&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures1">
   <goal name="sem_cnot_mat&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="((getbv x @ 0) = 0 )">
    <goal name="sem_cnot_mat&#39;vc.8.0.0" expl="true case (postcondition)" proved="true">
    <proof prover="8"><result status="valid" time="1.52" steps="638023"/></proof>
    </goal>
    <goal name="sem_cnot_mat&#39;vc.8.0.1" expl="false case (postcondition)" proved="true">
    <transf name="replace" proved="true" arg1="(if (getbv x @ 0) = 0 then x
   else make_bv
        (fun (i:int) -&gt; if i = 0 then getbv x @ i else 1 - (getbv x @ i)) 2)" arg2="( make_bv
        (fun (i:int) -&gt; if i = 0 then getbv x @ i else 1 - (getbv x @ i)) 2)">
     <goal name="sem_cnot_mat&#39;vc.8.0.1.0" expl="false case (postcondition)" proved="true">
     <transf name="apply" proved="true" arg1="bv_to_ket_eq">
      <goal name="sem_cnot_mat&#39;vc.8.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="make_bv_length">
       <goal name="sem_cnot_mat&#39;vc.8.0.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.57" steps="634972"/></proof>
       </goal>
       <goal name="sem_cnot_mat&#39;vc.8.0.1.0.0.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="sem_cnot_mat&#39;vc.8.0.1.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="sem_cnot_mat&#39;vc.8.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.94"/></proof>
         </goal>
         <goal name="sem_cnot_mat&#39;vc.8.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.94"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="sem_cnot_mat&#39;vc.8.0.1.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.90" steps="599057"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="make_bv_length">
       <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
         <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="eliminate_if" proved="true" >
           <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.98" steps="720881"/></proof>
            </goal>
            <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="i" arg2="1">
              <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
              <transf name="case" proved="true" arg1="(getbv x 1 = 0)">
               <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0" expl="apply premises (true case)" proved="true">
               <transf name="rewrite" proved="true" arg1="cnot_func&#39;spec1">
                <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.0" expl="apply premises (true case)" proved="true">
                <transf name="replace" proved="true" arg1="(getbv (int_to_bv 3 2) @ 1)" arg2="1">
                 <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises (true case)" proved="true">
                 <proof prover="8"><result status="valid" time="1.14" steps="722030"/></proof>
                 </goal>
                 <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                 <transf name="rewrite" proved="true" arg1="int_to_bv_value">
                  <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
                  <transf name="replace" proved="true" arg1="(power 2 ((2 - 1) - 1))" arg2="1">
                   <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
                   <proof prover="8"><result status="valid" time="1.12" steps="722029"/></proof>
                   </goal>
                   <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="8"><result status="valid" time="1.60" steps="762865"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.13" steps="722021"/></proof>
                  </goal>
                  <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.21" steps="734464"/></proof>
                  </goal>
                  <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.0.1.3" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.10" steps="722035"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="1.13" steps="722012"/></proof>
                </goal>
                <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
                 <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.2.0" expl="rewrite premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="ind_isum_plus_one">
                  <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.2.0.0" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="ind_isum_one">
                    <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.2.0.0.0.0" expl="rewrite premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.2.0.0.0.0.0" expl="rewrite premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="add_zero">
                      <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.2.0.0.0.0.0.0" expl="rewrite premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="one_mult">
                       <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.2.0.0.0.0.0.0.0" expl="rewrite premises" proved="true">
                       <proof prover="8"><result status="valid" time="1.61" steps="762900"/></proof>
                       </goal>
                       <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.2.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="8"><result status="valid" time="2.13" steps="842996"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="8"><result status="valid" time="1.23" steps="734469"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.12" steps="722026"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.0.2.0.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.24" steps="734450"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1" expl="apply premises (false case)" proved="true">
               <transf name="rewrite" proved="true" arg1="cnot_func&#39;spec">
                <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.0" expl="apply premises (false case)" proved="true">
                <transf name="rewrite" proved="true" arg1="int_to_bv_value">
                 <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.0.0" expl="apply premises (false case)" proved="true">
                 <transf name="replace" proved="true" arg1="(power 2 ((2 - 1) - 1))" arg2="1">
                  <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.0.0.0" expl="apply premises (false case)" proved="true">
                  <proof prover="8"><result status="valid" time="2.51" steps="843154"/></proof>
                  </goal>
                  <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="8"><result status="valid" time="1.92" steps="762887"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.15" steps="722025"/></proof>
                 </goal>
                 <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.27" steps="734461"/></proof>
                 </goal>
                 <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.0.3" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.14" steps="722039"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="1.14" steps="722016"/></proof>
                </goal>
                <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.2" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
                 <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.2.0" expl="rewrite premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="ind_isum_plus_one">
                  <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.2.0.0" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.2.0.0.0" expl="rewrite premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="ind_isum_one">
                    <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.2.0.0.0.0" expl="rewrite premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.2.0.0.0.0.0" expl="rewrite premises" proved="true">
                     <transf name="assert" proved="true" arg1="(forall a b. a= 2 -&gt; b = 1 -&gt;  a+b=3)">
                      <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.2.0.0.0.0.0.0" expl="asserted formula" proved="true">
                      <proof prover="8"><result status="valid" time="1.15" steps="722115"/></proof>
                      </goal>
                      <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="h">
                       <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.2.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="one_mult">
                        <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.2.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="1.91" steps="763026"/></proof>
                        </goal>
                        <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.2.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.22" steps="843211"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.2.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="one_mult">
                        <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.2.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="1.67" steps="763006"/></proof>
                        </goal>
                        <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.2.0.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                        <proof prover="8"><result status="valid" time="2.17" steps="843229"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.2.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="8"><result status="valid" time="1.15" steps="722030"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.0.1.2.0.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.26" steps="734454"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="1.58" steps="762208"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="0.94"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.1.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.1.1.0" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="0.85"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.2" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.2.0" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.91" steps="599075"/></proof>
          </goal>
          <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.0.0.2.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.92" steps="599077"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.1.0" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.1.0.0" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.85"/></proof>
         </goal>
         <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.76"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="sem_cnot_mat&#39;vc.8.0.1.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.96" steps="599057"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="sem_cnot_mat&#39;vc.8.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.83" steps="705843"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sem_cnot_mat&#39;vc.8.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.98" steps="599024"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sem_cnot_mat&#39;vc.9" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_cnot_apply_basis">
   <goal name="sem_cnot_mat&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(bv_to_ket x)" arg2="(ket 2 (bv_to_int x) )">
    <goal name="sem_cnot_mat&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures1">
     <goal name="sem_cnot_mat&#39;vc.9.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="ket_eq">
      <goal name="sem_cnot_mat&#39;vc.9.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.01" steps="599101"/></proof>
      </goal>
      <goal name="sem_cnot_mat&#39;vc.9.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.00" steps="599092"/></proof>
      </goal>
      <goal name="sem_cnot_mat&#39;vc.9.0.0.0.2" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="sem_cnot_mat&#39;vc.9.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.03" steps="703037"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="sem_cnot_mat&#39;vc.9.0.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.59" steps="634906"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sem_cnot_mat&#39;vc.9.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.94" steps="599094"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="swap_func&#39;vc" expl="VC for swap_func" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="swap_func&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.70"/></proof>
  </goal>
  <goal name="swap_func&#39;vc.1" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.71"/></proof>
  </goal>
  <goal name="swap_func&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="swap_func&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.79" steps="626317"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="swap_func&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
  </transf>
  </goal>
  <goal name="swap_func&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.79" steps="523960"/></proof>
  </goal>
  <goal name="swap_func&#39;vc.5" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equal_bv">
   <goal name="swap_func&#39;vc.5.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="1.80" steps="629052"/></proof>
   </goal>
   <goal name="swap_func&#39;vc.5.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="swap_func&#39;vc.5.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures2">
     <goal name="swap_func&#39;vc.5.1.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="swap_func&#39;vc.5.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="int_to_bv_value">
       <goal name="swap_func&#39;vc.5.1.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.67"/></proof>
       </goal>
       <goal name="swap_func&#39;vc.5.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.83" steps="524008"/></proof>
       </goal>
       <goal name="swap_func&#39;vc.5.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.82" steps="628514"/></proof>
       </goal>
       <goal name="swap_func&#39;vc.5.1.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.31" steps="556976"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="swap_func&#39;vc.5.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.24" steps="556976"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="swap_func&#39;vc.6" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equal_bv">
   <goal name="swap_func&#39;vc.6.0" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="swap_func&#39;vc.6.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
     <goal name="swap_func&#39;vc.6.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="0.91" steps="613703"/></proof>
     </goal>
     <goal name="swap_func&#39;vc.6.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.93" steps="613710"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="swap_func&#39;vc.6.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="swap_func&#39;vc.6.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures3">
     <goal name="swap_func&#39;vc.6.1.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="swap_func&#39;vc.6.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="int_to_bv_value">
       <goal name="swap_func&#39;vc.6.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="case" proved="true" arg1="(i = 0)">
        <goal name="swap_func&#39;vc.6.1.0.0.0.0.0" expl="apply premises (true case)" proved="true">
        <transf name="replace" proved="true" arg1="(power 2 ((2 - i) - 1))" arg2="2">
         <goal name="swap_func&#39;vc.6.1.0.0.0.0.0.0" expl="apply premises (true case)" proved="true">
         <proof prover="8"><result status="valid" time="1.26" steps="557047"/></proof>
         </goal>
         <goal name="swap_func&#39;vc.6.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="1.40" steps="557531"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="swap_func&#39;vc.6.1.0.0.0.0.1" expl="apply premises (false case)" proved="true">
        <transf name="replace" proved="true" arg1="(power 2 ((2 - i) - 1))" arg2="1">
         <goal name="swap_func&#39;vc.6.1.0.0.0.0.1.0" expl="apply premises (false case)" proved="true">
         <proof prover="4"><result status="valid" time="0.29" steps="3842"/></proof>
         </goal>
         <goal name="swap_func&#39;vc.6.1.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
         <transf name="replace" proved="true" arg1="i" arg2="1">
          <goal name="swap_func&#39;vc.6.1.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="1.34" steps="557531"/></proof>
          </goal>
          <goal name="swap_func&#39;vc.6.1.0.0.0.0.1.1.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="1.26" steps="557205"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="swap_func&#39;vc.6.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.83" steps="524033"/></proof>
       </goal>
       <goal name="swap_func&#39;vc.6.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.84" steps="628614"/></proof>
       </goal>
       <goal name="swap_func&#39;vc.6.1.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.30" steps="557020"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="swap_func&#39;vc.6.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.29" steps="557020"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="swap_func&#39;vc.7" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equal_bv">
   <goal name="swap_func&#39;vc.7.0" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="swap_func&#39;vc.7.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_bv&#39;spec1">
     <goal name="swap_func&#39;vc.7.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="0.93" steps="613728"/></proof>
     </goal>
     <goal name="swap_func&#39;vc.7.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="0.94" steps="613735"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="swap_func&#39;vc.7.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="swap_func&#39;vc.7.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures4">
     <goal name="swap_func&#39;vc.7.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="int_to_bv_value">
      <goal name="swap_func&#39;vc.7.1.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="swap_func&#39;vc.7.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="case" proved="true" arg1="(i = 0)">
        <goal name="swap_func&#39;vc.7.1.0.0.0.0.0" expl="apply premises (true case)" proved="true">
        <transf name="replace" proved="true" arg1="(power 2 ((2 - i) - 1))" arg2="2">
         <goal name="swap_func&#39;vc.7.1.0.0.0.0.0.0" expl="apply premises (true case)" proved="true">
         <proof prover="8"><result status="valid" time="1.30" steps="557091"/></proof>
         </goal>
         <goal name="swap_func&#39;vc.7.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="1.36" steps="557575"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="swap_func&#39;vc.7.1.0.0.0.0.1" expl="apply premises (false case)" proved="true">
        <transf name="replace" proved="true" arg1="(power 2 ((2 - i) - 1))" arg2="1">
         <goal name="swap_func&#39;vc.7.1.0.0.0.0.1.0" expl="apply premises (false case)" proved="true">
         <proof prover="4"><result status="valid" time="0.29" steps="3906"/></proof>
         </goal>
         <goal name="swap_func&#39;vc.7.1.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
         <transf name="replace" proved="true" arg1="i" arg2="1">
          <goal name="swap_func&#39;vc.7.1.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="1.41" steps="557575"/></proof>
          </goal>
          <goal name="swap_func&#39;vc.7.1.0.0.0.0.1.1.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="1.26" steps="557249"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="swap_func&#39;vc.7.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.80" steps="524058"/></proof>
      </goal>
      <goal name="swap_func&#39;vc.7.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.85" steps="628777"/></proof>
      </goal>
      <goal name="swap_func&#39;vc.7.1.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.32" steps="557064"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="swap_func&#39;vc.7.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.31" steps="557064"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="swap_func&#39;vc.8" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equal_bv">
   <goal name="swap_func&#39;vc.8.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="1.94" steps="629085"/></proof>
   </goal>
   <goal name="swap_func&#39;vc.8.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="swap_func&#39;vc.8.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures5">
     <goal name="swap_func&#39;vc.8.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="int_to_bv_value">
      <goal name="swap_func&#39;vc.8.1.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="swap_func&#39;vc.8.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="case" proved="true" arg1="(i = 0)">
        <goal name="swap_func&#39;vc.8.1.0.0.0.0.0" expl="apply premises (true case)" proved="true">
        <transf name="replace" proved="true" arg1="(power 2 ((2 - i) - 1))" arg2="2">
         <goal name="swap_func&#39;vc.8.1.0.0.0.0.0.0" expl="apply premises (true case)" proved="true">
         <proof prover="8"><result status="valid" time="1.41" steps="557135"/></proof>
         </goal>
         <goal name="swap_func&#39;vc.8.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="1.17" steps="557619"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="swap_func&#39;vc.8.1.0.0.0.0.1" expl="apply premises (false case)" proved="true">
        <transf name="replace" proved="true" arg1="(power 2 ((2 - i) - 1))" arg2="1">
         <goal name="swap_func&#39;vc.8.1.0.0.0.0.1.0" expl="apply premises (false case)" proved="true">
         <proof prover="0"><result status="valid" time="0.80"/></proof>
         </goal>
         <goal name="swap_func&#39;vc.8.1.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
         <transf name="replace" proved="true" arg1="i" arg2="1">
          <goal name="swap_func&#39;vc.8.1.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="1.33" steps="557619"/></proof>
          </goal>
          <goal name="swap_func&#39;vc.8.1.0.0.0.0.1.1.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="1.25" steps="557293"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="swap_func&#39;vc.8.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.81" steps="524083"/></proof>
      </goal>
      <goal name="swap_func&#39;vc.8.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.84" steps="629351"/></proof>
      </goal>
      <goal name="swap_func&#39;vc.8.1.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.32" steps="557108"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="swap_func&#39;vc.8.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.10" steps="557108"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="invol_swap_func&#39;vc" expl="VC for invol_swap_func" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="invol_swap_func&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="invol_swap_func&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(bv_to_int x = 0)">
    <goal name="invol_swap_func&#39;vc.0.0.0" expl="true case (postcondition)" proved="true">
    <proof prover="8"><result status="valid" time="1.71" steps="690551"/></proof>
    </goal>
    <goal name="invol_swap_func&#39;vc.0.0.1" expl="false case (postcondition)" proved="true">
    <transf name="case" proved="true" arg1="(bv_to_int x = 1)">
     <goal name="invol_swap_func&#39;vc.0.0.1.0" expl="false case (true case. postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="swap_func&#39;spec1">
      <goal name="invol_swap_func&#39;vc.0.0.1.0.0" expl="false case (true case. postcondition)" proved="true">
      <proof prover="8"><result status="valid" time="1.66" steps="690180"/></proof>
      </goal>
      <goal name="invol_swap_func&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="swap_func&#39;spec2">
       <goal name="invol_swap_func&#39;vc.0.0.1.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.95" steps="691355"/></proof>
       </goal>
       <goal name="invol_swap_func&#39;vc.0.0.1.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.88" steps="584210"/></proof>
       </goal>
       <goal name="invol_swap_func&#39;vc.0.0.1.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="0.90" steps="584210"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="invol_swap_func&#39;vc.0.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.72" steps="691787"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="invol_swap_func&#39;vc.0.0.1.1" expl="false case (postcondition)" proved="true">
     <transf name="case" proved="true" arg1="(bv_to_int x = 2)">
      <goal name="invol_swap_func&#39;vc.0.0.1.1.0" expl="false case (true case. postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="swap_func&#39;spec2">
       <goal name="invol_swap_func&#39;vc.0.0.1.1.0.0" expl="false case (true case. postcondition)" proved="true">
       <proof prover="8"><result status="valid" time="1.73" steps="690285"/></proof>
       </goal>
       <goal name="invol_swap_func&#39;vc.0.0.1.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.32" steps="621164"/></proof>
       </goal>
       <goal name="invol_swap_func&#39;vc.0.0.1.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.73" steps="691927"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="invol_swap_func&#39;vc.0.0.1.1.1" expl="false case (postcondition)" proved="true">
      <transf name="assert" proved="true" arg1="(bv_to_int x = 3)">
       <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0" expl="asserted formula" proved="true">
       <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
        <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0" expl="asserted formula" proved="true">
        <transf name="rewrite" proved="true" arg1="ind_isum_plus_one">
         <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0" expl="asserted formula" proved="true">
         <transf name="rewrite" proved="true" arg1="ind_isum_one">
          <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.0" expl="asserted formula" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="rewrite" proved="true" arg1="one_mult_int">
            <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
            <transf name="rewrite" proved="true" arg1="one_mult_int">
             <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
             <proof prover="8"><result status="valid" time="1.56" steps="622612"/></proof>
             </goal>
             <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="case" proved="true" arg1="(getbv x 1 = 0)">
              <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.0.0.0.1.0" expl="rewrite premises (true case)" proved="true">
              <transf name="assert" proved="true" arg1="(mod (bv_to_int x) 2 = 0)">
               <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
               <proof prover="0"><result status="valid" time="0.72"/></proof>
               </goal>
               <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.0.0.0.1.0.1" expl="rewrite premises (true case)" proved="true">
               <transf name="assert" proved="true" arg1="(0&lt;= bv_to_int x &lt; 4)">
                <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
                <transf name="replace" proved="true" arg1="4" arg2="(power 2 (length x))">
                 <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.0.0.0.1.0.1.0.0" expl="asserted formula" proved="true">
                 <proof prover="8"><result status="valid" time="2.00" steps="694453"/></proof>
                 </goal>
                 <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.0.0.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="8"><result status="valid" time="1.74" steps="693652"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises (true case)" proved="true">
                <proof prover="8"><result status="valid" time="1.63" steps="651508"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.0.0.0.1.1" expl="rewrite premises (false case)" proved="true">
              <proof prover="8"><result status="valid" time="2.07" steps="723609"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="case" proved="true" arg1="((getbv x @ 0) = 0)">
             <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.0.0.1.0" expl="rewrite premises (true case)" proved="true">
             <transf name="assert" proved="true" arg1="(div (bv_to_int x) 2 = 0)">
              <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
              <proof prover="8"><result status="valid" time="2.04" steps="696862"/></proof>
              </goal>
              <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.0.0.1.0.1" expl="rewrite premises (true case)" proved="true">
              <proof prover="8"><result status="valid" time="1.33" steps="650733"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.0.0.1.1" expl="rewrite premises (false case)" proved="true">
             <proof prover="8"><result status="valid" time="2.10" steps="723547"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.89" steps="584248"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="invol_swap_func&#39;vc.0.0.1.1.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.01" steps="596215"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="invol_swap_func&#39;vc.0.0.1.1.1.1" expl="false case (postcondition)" proved="true">
       <proof prover="8"><result status="valid" time="1.77" steps="690571"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="swap_func_int&#39;vc" expl="VC for swap_func_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="swap_func_int&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.78" steps="498668"/></proof>
  </goal>
  <goal name="swap_func_int&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.82" steps="524137"/></proof>
  </goal>
  <goal name="swap_func_int&#39;vc.2" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="swap_func_int&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="4" arg2="(power 2 (length (swap_func (int_to_bv i 2))))">
    <goal name="swap_func_int&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="1.57" steps="628472"/></proof>
    </goal>
    <goal name="swap_func_int&#39;vc.2.0.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.53" steps="627929"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="swap_func_int&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="628640"/></proof>
  </goal>
  <goal name="swap_func_int&#39;vc.4" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="swap_func_int&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="swap_func_int&#39;vc.4.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="1.83" steps="627282"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="swap_func_int&#39;vc.5" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="swap_func_int&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="swap_func_int&#39;vc.5.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="1.81" steps="627328"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="swap_func_int&#39;vc.6" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="swap_func_int&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="swap_func_int&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures6">
     <goal name="swap_func_int&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <proof prover="8"><result status="valid" time="1.61" steps="626975"/></proof>
     </goal>
     <goal name="swap_func_int&#39;vc.6.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.57" steps="626981"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="swap_func_int&#39;vc.7" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="swap_func_int&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="swap_func_int&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="swap_func_int&#39;vc.7.0.0.0" expl="VC for swap_func_int" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="swap_func_int&#39;vc.7.0.0.0.0" expl="postcondition" proved="true">
      <transf name="case" proved="true" arg1="(i = 1)">
       <goal name="swap_func_int&#39;vc.7.0.0.0.0.0" expl="true case (postcondition)" proved="true">
       <transf name="replace" proved="true" arg1="i" arg2="2">
        <goal name="swap_func_int&#39;vc.7.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
        <proof prover="8"><result status="valid" time="1.12" steps="565059"/></proof>
        </goal>
        <goal name="swap_func_int&#39;vc.7.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="1.30" steps="565047"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="swap_func_int&#39;vc.7.0.0.0.0.1" expl="false case (postcondition)" proved="true">
       <proof prover="8"><result status="valid" time="1.40" steps="570302"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="swap_func_int&#39;vc.7.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="1.47" steps="572473"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="invol_swap_func_int&#39;vc" expl="VC for invol_swap_func_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="invol_swap_func_int&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.76"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sem_swap_mat&#39;vc" expl="VC for sem_swap_mat" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sem_swap_mat&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.76" steps="574695"/></proof>
  </goal>
  <goal name="sem_swap_mat&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="0.78" steps="574701"/></proof>
  </goal>
  <goal name="sem_swap_mat&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.07" steps="671603"/></proof>
  </goal>
  <goal name="sem_swap_mat&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.96" steps="585335"/></proof>
  </goal>
  <goal name="sem_swap_mat&#39;vc.4" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equal_mat">
   <goal name="sem_swap_mat&#39;vc.4.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="1.98" steps="673993"/></proof>
   </goal>
   <goal name="sem_swap_mat&#39;vc.4.1" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="2.04" steps="673876"/></proof>
   </goal>
   <goal name="sem_swap_mat&#39;vc.4.2" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures2">
    <goal name="sem_swap_mat&#39;vc.4.2.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sem_swap_mat&#39;vc.4.2.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="sem_swap_mat&#39;vc.4.2.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make">
       <goal name="sem_swap_mat&#39;vc.4.2.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="sem_swap_mat&#39;vc.4.2.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="eliminate_if" proved="true" >
         <goal name="sem_swap_mat&#39;vc.4.2.0.0.0.0.0.0" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="sem_swap_mat&#39;vc.4.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="0.98" steps="593156"/></proof>
          </goal>
          <goal name="sem_swap_mat&#39;vc.4.2.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="0.98" steps="593174"/></proof>
          </goal>
          <goal name="sem_swap_mat&#39;vc.4.2.0.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="0.96" steps="593196"/></proof>
          </goal>
          <goal name="sem_swap_mat&#39;vc.4.2.0.0.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.72"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="sem_swap_mat&#39;vc.4.2.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.98" steps="672953"/></proof>
       </goal>
       <goal name="sem_swap_mat&#39;vc.4.2.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.97" steps="672953"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sem_swap_mat&#39;vc.5" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="mat_mult_ket_basis_bv_gen">
   <goal name="sem_swap_mat&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ket_length (bv_to_ket x))" arg2="2">
    <goal name="sem_swap_mat&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="ket_sum_l_null_but_maybe_one_elt" arg2="(fun (bvx:bitvec) -&gt;
    get result (bv_to_int bvx) (ket_to_int (bv_to_ket x))
    *.. ket 2 (bv_to_int bvx)),(n_bvs 2),(swap_func x),2">
     <goal name="sem_swap_mat&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Hinst">
      <goal name="sem_swap_mat&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
        <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="eliminate_definition" proved="true" >
         <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="bv_to_ket&#39;def">
          <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="apply" proved="true" arg1="set_equal_ket_l">
           <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="exists" proved="true" arg1="2">
            <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0" proved="true">
             <proof prover="8"><result status="valid" time="1.84" steps="706167"/></proof>
             </goal>
             <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.1" proved="true">
             <transf name="rewrite" proved="true" arg1="make_bv_length">
              <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.1.0" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.1.0.0" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.1.0.0.0" proved="true">
                <proof prover="8"><result status="valid" time="2.14" steps="710172"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="2.12" steps="710464"/></proof>
                </goal>
                <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="2.06" steps="710462"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="0.85" steps="574959"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_ket_l">
             <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(ket (length (make_bv (fun (i1:int) -&gt; getbv x @ (1 - i1)) 2))
     (bv_to_int (make_bv (fun (i1:int) -&gt; getbv x @ (1 - i1)) 2)))" arg2="(ket 2 (bv_to_int (swap_func x)))">
               <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
               </transf>
               </goal>
               <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
               <transf name="apply" proved="true" arg1="ket_eq">
                <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.20" steps="743184"/></proof>
                </goal>
                <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.1.0.0.0.1.1" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="make_bv_length">
                 <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.1.0.0.0.1.1.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.1.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.1.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.21" steps="742203"/></proof>
                   </goal>
                   <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.1.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="1.98" steps="742224"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.1.0.0.0.1.1.1" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="1.00" steps="601105"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.1.0.0.0.1.2" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="swap_func&#39;def">
                 <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.1.0.0.0.1.2.0" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="2.29" steps="743688"/></proof>
                 </goal>
                 <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.1.0.0.0.1.2.1" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="0.91" steps="601098"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures3">
         <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="eliminate_definition" proved="true" >
          <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="swap_func_int&#39;def">
           <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="sem_swap_mat&#39;vc.5.0.0.0.0.0.1.0.0.0.0" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.06" steps="682264"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="sem_swap_mat&#39;vc.5.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="0.89" steps="574452"/></proof>
      </goal>
      <goal name="sem_swap_mat&#39;vc.5.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.18" steps="727034"/></proof>
      </goal>
      <goal name="sem_swap_mat&#39;vc.5.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.55" steps="775610"/></proof>
      </goal>
      <goal name="sem_swap_mat&#39;vc.5.0.0.0.4" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="sem_swap_mat&#39;vc.5.0.0.0.4.0" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="sem_swap_mat&#39;vc.5.0.0.0.4.0.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="get_ket_scalar">
         <goal name="sem_swap_mat&#39;vc.5.0.0.0.4.0.0.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="zero_mult_t">
          <goal name="sem_swap_mat&#39;vc.5.0.0.0.4.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="Ensures3">
           <goal name="sem_swap_mat&#39;vc.5.0.0.0.4.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="sem_swap_mat&#39;vc.5.0.0.0.4.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="eliminate_definition" proved="true" >
             <goal name="sem_swap_mat&#39;vc.5.0.0.0.4.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="swap_func_int&#39;def">
              <goal name="sem_swap_mat&#39;vc.5.0.0.0.4.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="get_indic">
               <goal name="sem_swap_mat&#39;vc.5.0.0.0.4.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.27" steps="768715"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="sem_swap_mat&#39;vc.5.0.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.56" steps="609214"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sem_swap_mat&#39;vc.5.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.33" steps="609178"/></proof>
   </goal>
   <goal name="sem_swap_mat&#39;vc.5.2" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.31" steps="609237"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sem_swap_mat&#39;vc.6" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="sem_swap_mat&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="swap_func&#39;def">
    <goal name="sem_swap_mat&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="Ensures">
     <goal name="sem_swap_mat&#39;vc.6.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.02" steps="601846"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="sem_swap_mat&#39;vc.6.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="0.90" steps="601846"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sem_swap_mat&#39;vc.7" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(ket 2 i)" arg2="(bv_to_ket (int_to_bv i 2))">
   <goal name="sem_swap_mat&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures1">
    <goal name="sem_swap_mat&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="sem_swap_mat&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="bv_to_ket&#39;def">
      <goal name="sem_swap_mat&#39;vc.7.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="ket_eq">
       <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.09" steps="705091"/></proof>
       </goal>
       <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="make_bv_length">
        <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.06" steps="705397"/></proof>
          </goal>
          <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.81" steps="705395"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="0.78" steps="601932"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
        <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ind_isum_plus_one">
         <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="ind_isum_one">
          <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
             <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
              <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="eliminate_if" proved="true" >
                <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="add_zero">
                  <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="2.73"/></proof>
                  </goal>
                  <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="4"><result status="valid" time="3.31" steps="96879"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="int_to_bv_value">
                  <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="int_to_bv_value">
                   <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                   <transf name="assert" proved="true" arg1="(forall a b c d. a = 1 -&gt; b = 2 -&gt; c = 0 -&gt; a*b+c*d = 2 )">
                    <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
                    <proof prover="8"><result status="valid" time="0.93" steps="610917"/></proof>
                    </goal>
                    <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="h">
                     <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                     <transf name="assert" proved="true" arg1="(forall i pow. i = 1 -&gt; pow =1 -&gt; mod (div i pow) 2 = 1)">
                      <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="asserted formula" proved="true">
                      <proof prover="8"><result status="valid" time="1.59" steps="648465"/></proof>
                      </goal>
                      <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="h">
                       <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1.0" expl="apply premises" proved="true">
                       <proof prover="8"><result status="valid" time="0.93" steps="611248"/></proof>
                       </goal>
                       <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1.1" expl="apply premises" proved="true">
                       <proof prover="8"><result status="valid" time="1.65" steps="648917"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.1" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.61" steps="648795"/></proof>
                     </goal>
                     <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.0.1.2" expl="apply premises" proved="true">
                     <proof prover="4"><result status="valid" time="2.99" steps="94295"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="0.95" steps="610757"/></proof>
                   </goal>
                   <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="0.97" steps="610757"/></proof>
                   </goal>
                   <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="1.00" steps="610771"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="0.91" steps="610757"/></proof>
                  </goal>
                  <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="0.92" steps="610757"/></proof>
                  </goal>
                  <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1.3" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="0.92" steps="610771"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="int_to_bv_value">
                  <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="int_to_bv_value">
                   <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                   <transf name="assert" proved="true" arg1="(forall a b c d. a = 0  -&gt; c = 1 -&gt; d = 1-&gt; a*b+c*d = 1 )">
                    <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.0" expl="asserted formula" proved="true">
                    <proof prover="8"><result status="valid" time="0.93" steps="610928"/></proof>
                    </goal>
                    <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.1" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="h">
                     <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.1.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="H">
                      <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.1.0.0" expl="apply premises" proved="true">
                      <transf name="assert" proved="true" arg1="(forall i pow. i = 2 -&gt; pow =1 -&gt; mod (div i pow) 2 = 0)">
                       <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.1.0.0.0" expl="asserted formula" proved="true">
                       <proof prover="8"><result status="valid" time="1.57" steps="648499"/></proof>
                       </goal>
                       <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.1.0.0.1" expl="apply premises" proved="true">
                       <transf name="apply" proved="true" arg1="h">
                        <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="0.89" steps="611258"/></proof>
                        </goal>
                        <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.1.0.0.1.1" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="1.71" steps="648952"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.1.1" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="H">
                      <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.1.1.0" expl="apply premises" proved="true">
                      <transf name="assert" proved="true" arg1="(forall x . x = 2 -&gt; div 2 x = 1)">
                       <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.1.1.0.0" expl="asserted formula" proved="true">
                       <proof prover="8"><result status="valid" time="0.92" steps="611027"/></proof>
                       </goal>
                       <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.1.1.0.1" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="h">
                        <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.1.1.0.1.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="1.00" steps="611041"/></proof>
                        </goal>
                        <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.1.1.0.1.1" expl="rewrite premises" proved="true">
                        <proof prover="8"><result status="valid" time="1.66" steps="648858"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.0.1.2" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.65" steps="648789"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="0.94" steps="610772"/></proof>
                   </goal>
                   <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.2" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="0.91" steps="610772"/></proof>
                   </goal>
                   <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.0.3" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="0.92" steps="610786"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="0.90" steps="610772"/></proof>
                  </goal>
                  <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.2" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="0.92" steps="610772"/></proof>
                  </goal>
                  <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2.3" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="0.91" steps="610786"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="int_to_bv_value">
                  <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="int_to_bv_value">
                   <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                   <transf name="assert" proved="true" arg1="(forall a b c d. a = 1 -&gt; b = 2  -&gt; c = 1 -&gt; d = 1-&gt; a*b+c*d = 3 )">
                    <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.0" expl="asserted formula" proved="true">
                    <proof prover="8"><result status="valid" time="0.94" steps="610958"/></proof>
                    </goal>
                    <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="h">
                     <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.1.0" expl="apply premises" proved="true">
                     <transf name="replace" proved="true" arg1="i" arg2="3">
                      <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.1.0.0" expl="apply premises" proved="true">
                      <transf name="assert" proved="true" arg1="(forall i pow. i = 3 -&gt; pow =1 -&gt; mod (div i pow) 2 = 1)">
                       <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.1.0.0.0" expl="asserted formula" proved="true">
                       <proof prover="8"><result status="valid" time="1.66" steps="648496"/></proof>
                       </goal>
                       <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.1.0.0.1" expl="apply premises" proved="true">
                       <transf name="apply" proved="true" arg1="h">
                        <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="0.93" steps="611292"/></proof>
                        </goal>
                        <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.1.0.0.1.1" expl="apply premises" proved="true">
                        <proof prover="8"><result status="valid" time="1.65" steps="648948"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.1.0.1" expl="equality hypothesis" proved="true">
                      <proof prover="8"><result status="valid" time="1.56" steps="648430"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.1.1" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.61" steps="648842"/></proof>
                     </goal>
                     <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.1.2" expl="apply premises" proved="true">
                     <transf name="replace" proved="true" arg1="i" arg2="3">
                      <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.1.2.0" expl="apply premises" proved="true">
                      <proof prover="9"><result status="valid" time="2.23" steps="4276116"/></proof>
                      </goal>
                      <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.1.2.1" expl="equality hypothesis" proved="true">
                      <proof prover="8"><result status="valid" time="1.52" steps="648430"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.0.1.3" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="1.47" steps="648822"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.1" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="0.93" steps="610776"/></proof>
                   </goal>
                   <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.2" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="0.92" steps="610776"/></proof>
                   </goal>
                   <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.0.3" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="0.90" steps="610790"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="0.91" steps="610776"/></proof>
                  </goal>
                  <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.2" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="0.89" steps="610776"/></proof>
                  </goal>
                  <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3.3" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="0.92" steps="610790"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="2.13" steps="705397"/></proof>
                </goal>
                <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="2.10" steps="705395"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="0.95" steps="601948"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="2.15" steps="705397"/></proof>
               </goal>
               <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="2.08" steps="705395"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="0.89" steps="601948"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.1.0.0" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.08" steps="705397"/></proof>
             </goal>
             <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.13" steps="705395"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.99" steps="601932"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.99" steps="601944"/></proof>
           </goal>
           <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.1.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.1.1.0" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.1.1.0.0" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.01" steps="705397"/></proof>
             </goal>
             <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.1.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.04" steps="705395"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.0.1.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="0.94" steps="601932"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.96" steps="601934"/></proof>
          </goal>
          <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.1.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.1.1.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.1.1.0.0" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.13" steps="705397"/></proof>
            </goal>
            <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.1.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.15" steps="705395"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="sem_swap_mat&#39;vc.7.0.0.0.0.2.0.1.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="0.89" steps="601932"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="sem_swap_mat&#39;vc.7.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.99" steps="705217"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sem_swap_mat&#39;vc.7.1" expl="equality hypothesis" proved="true">
   <proof prover="8"><result status="valid" time="2.04" steps="704356"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sem_swap_mat&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pps_swap_apply_basis">
   <goal name="sem_swap_mat&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(bv_to_ket x)" arg2="(ket 2 (bv_to_int x) )">
    <goal name="sem_swap_mat&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures">
     <goal name="sem_swap_mat&#39;vc.8.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="ket_eq">
      <goal name="sem_swap_mat&#39;vc.8.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="0.92" steps="601383"/></proof>
      </goal>
      <goal name="sem_swap_mat&#39;vc.8.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="0.85" steps="601374"/></proof>
      </goal>
      <goal name="sem_swap_mat&#39;vc.8.0.0.0.2" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="sem_swap_mat&#39;vc.8.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.00" steps="706097"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="sem_swap_mat&#39;vc.8.0.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.27" steps="637516"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sem_swap_mat&#39;vc.8.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="0.70" steps="601376"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
