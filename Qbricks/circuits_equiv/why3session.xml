<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="circuits_equiv.mlw"/>
<theory name="Circuit_equivalence_impl" proved="true">
 <goal name="set_equiv_circuits_basis&#39;vc" expl="VC for set_equiv_circuits_basis" proved="true">
 <proof prover="1"><result status="valid" time="4.03" steps="1114971"/></proof>
 </goal>
 <goal name="set_equiv_circuits_bv&#39;vc" expl="VC for set_equiv_circuits_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_equiv_circuits_bv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits_basis">
   <goal name="set_equiv_circuits_bv&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="1.36" steps="833059"/></proof>
   </goal>
   <goal name="set_equiv_circuits_bv&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="set_equiv_circuits_bv&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
     <goal name="set_equiv_circuits_bv&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="3.41" steps="1123500"/></proof>
     </goal>
     <goal name="set_equiv_circuits_bv&#39;vc.0.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="1"><result status="valid" time="2.29" steps="892815"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_equiv_circuits&#39;vc" expl="VC for set_equiv_circuits" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_equiv_circuits&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits_basis">
   <goal name="set_equiv_circuits&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="1.32" steps="833200"/></proof>
   </goal>
   <goal name="set_equiv_circuits&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="set_equiv_circuits&#39;vc.0.1.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="3.35" steps="1123225"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_equiv_circuits_path_sem&#39;vc" expl="VC for set_equiv_circuits_path_sem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_equiv_circuits_path_sem&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="set_equiv_circuits_path_sem&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="1.32" steps="842947"/></proof>
   </goal>
   <goal name="set_equiv_circuits_path_sem&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="rewrite_path_sem_basis">
     <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="rewrite_path_sem_basis">
      <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="scalar_eq_gen">
       <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
        <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="3.81" steps="1129949"/></proof>
        </goal>
        <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="2.52" steps="905866"/></proof>
        </goal>
        <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.50" steps="842967"/></proof>
        </goal>
        <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="scalar_eq_gen">
           <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="bv_to_ket_eq">
            <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="make_bv_length">
             <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="make_bv_length">
              <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.69" steps="922465"/></proof>
              </goal>
              <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                <transf name="split_all_full" proved="true" >
                 <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="4.92" steps="1427854"/></proof>
                  </goal>
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="4.31" steps="1428099"/></proof>
                  </goal>
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="2.26" steps="1176926"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                <transf name="split_all_full" proved="true" >
                 <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="4.81" steps="1427854"/></proof>
                  </goal>
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="4.66" steps="1428099"/></proof>
                  </goal>
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="2.10" steps="1176926"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="3.87" steps="1220421"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                 <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="4.80" steps="1428075"/></proof>
                 </goal>
                 <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="4.57" steps="1427979"/></proof>
                 </goal>
                 <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="1.85" steps="1176926"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                 <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="4.65" steps="1428075"/></proof>
                 </goal>
                 <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="4.69" steps="1427979"/></proof>
                 </goal>
                 <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="1.95" steps="1176926"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="3.94" steps="1220352"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
              <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
               <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="Requires">
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="3.86" steps="1221207"/></proof>
                  </goal>
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="3.90" steps="1221357"/></proof>
                  </goal>
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="1.65" steps="922499"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                    <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="4.66" steps="1428027"/></proof>
                    </goal>
                    <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="4.64" steps="1428030"/></proof>
                    </goal>
                    <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="2.11" steps="1176951"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                    <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="4.69" steps="1428027"/></proof>
                    </goal>
                    <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="4.73" steps="1428030"/></proof>
                    </goal>
                    <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="2.14" steps="1176951"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="2.68" steps="984681"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                   <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="4.56" steps="1427776"/></proof>
                   </goal>
                   <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="4.69" steps="1428246"/></proof>
                   </goal>
                   <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.14" steps="1176951"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                   <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="4.83" steps="1427776"/></proof>
                   </goal>
                   <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="4.86" steps="1428246"/></proof>
                   </goal>
                   <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.10" steps="1176951"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="1.38" steps="922499"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="5.06" steps="1529521"/></proof>
                  </goal>
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="5.08" steps="1532630"/></proof>
                  </goal>
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="2.30" steps="1269588"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="5.07" steps="1529521"/></proof>
                  </goal>
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="5.11" steps="1532630"/></proof>
                  </goal>
                  <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="2.31" steps="1269588"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.0.1.0.2" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="4.18" steps="1309725"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="set_equal_angle_exp">
            <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.1.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="Requires1">
             <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.1.0.0" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="3.84" steps="1221222"/></proof>
             </goal>
             <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.0.3.0.0.1.0.1" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="3.92" steps="1221241"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.44" steps="905866"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.49" steps="905858"/></proof>
      </goal>
      <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.32" steps="842967"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.27" steps="842967"/></proof>
     </goal>
     <goal name="set_equiv_circuits_path_sem&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.50" steps="842967"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="get_equiv_circuits_basis&#39;vc" expl="VC for get_equiv_circuits_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_equiv_circuits_basis&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="get_equiv_circuits_basis&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="1.34"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="get_equiv_circuits&#39;vc" expl="VC for get_equiv_circuits" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_equiv_circuits&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="get_equiv_circuits&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="x,(width c1)">
    <goal name="get_equiv_circuits&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="get_equiv_circuits&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_sum_">
      <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_sum_">
       <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq">
        <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="3.99" steps="1326554"/></proof>
        </goal>
        <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.69" steps="1075479"/></proof>
        </goal>
        <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_scal">
           <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="path_sem_scal">
            <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="get_path_sem_basis">
             <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="get_path_sem_basis">
              <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="scalar_eq">
               <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="get_equiv_circuits_basis">
                <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.11" steps="1168327"/></proof>
                </goal>
                <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="4.44" steps="1426122"/></proof>
                </goal>
                <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.53" steps="1240578"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="4.73" steps="1427855"/></proof>
              </goal>
              <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="3.55" steps="1240578"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="4.66" steps="1426122"/></proof>
             </goal>
             <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.2.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="3.56" steps="1240578"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="4.67" steps="1427855"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="4.67" steps="1426122"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="4.48" steps="1380794"/></proof>
       </goal>
       <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="3.26" steps="1145294"/></proof>
       </goal>
       <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="get_equiv_circuits&#39;vc.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="4.66" steps="1429543"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="get_equiv_circuits&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="4.50" steps="1380794"/></proof>
      </goal>
      <goal name="get_equiv_circuits&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.97" steps="1075479"/></proof>
      </goal>
      <goal name="get_equiv_circuits&#39;vc.0.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="get_equiv_circuits&#39;vc.0.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="get_equiv_circuits&#39;vc.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="4.67" steps="1427637"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="get_equiv_circuits&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="4.23" steps="1326554"/></proof>
     </goal>
     <goal name="get_equiv_circuits&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="3.31" steps="1145214"/></proof>
     </goal>
     <goal name="get_equiv_circuits&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="3.29" steps="1145254"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="get_correct_path_sum_equiv&#39;vc" expl="VC for get_correct_path_sum_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_correct_path_sum_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_correct_pps">
   <goal name="get_correct_path_sum_equiv&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="replace" proved="true" arg1="(width c2)" arg2="(width c1)">
    <goal name="get_correct_path_sum_equiv&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="4.04" steps="1149598"/></proof>
    </goal>
    <goal name="get_correct_path_sum_equiv&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="1"><result status="valid" time="2.46" steps="893738"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="get_correct_path_sum_equiv&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="get_correct_path_sum_equiv&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(path_sem c2 x)" arg2="(path_sem c1 x)">
     <goal name="get_correct_path_sum_equiv&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="1.61"/></proof>
     </goal>
     <goal name="get_correct_path_sum_equiv&#39;vc.0.1.0.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="get_equiv_circuits">
      <goal name="get_correct_path_sum_equiv&#39;vc.0.1.0.1.0" expl="apply premises" proved="true">
      <transf name="eliminate_definition" proved="true" >
       <goal name="get_correct_path_sum_equiv&#39;vc.0.1.0.1.0.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="get_correct_path_sum_equiv&#39;vc.0.1.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="(&lt;=&gt;)&#39;def">
         <goal name="get_correct_path_sum_equiv&#39;vc.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="3.55" steps="1188637"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="get_correct_path_sum_equiv&#39;vc.0.1.0.1.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="1.40" steps="833827"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="get_equiv_circuits_width&#39;vc" expl="VC for get_equiv_circuits_width" proved="true">
 <proof prover="1"><result status="valid" time="2.51" steps="893842"/></proof>
 </goal>
 <goal name="refl_circuit_equiv&#39;vc" expl="VC for refl_circuit_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="refl_circuit_equiv&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.57" steps="1115701"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sym_circuit_equiv&#39;vc" expl="VC for sym_circuit_equiv" proved="true">
 <transf name="eliminate_definition" proved="true" >
  <goal name="sym_circuit_equiv&#39;vc.0" expl="VC for sym_circuit_equiv" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="sym_circuit_equiv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sym_circuit_equiv&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="(&lt;=&gt;)&#39;def">
     <goal name="sym_circuit_equiv&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="3.48" steps="1188779"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="transitive_circuit_equiv&#39;vc" expl="VC for transitive_circuit_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="transitive_circuit_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="transitive_circuit_equiv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="transitive_circuit_equiv&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="(&lt;=&gt;)&#39;def">
     <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(width c = width c&#39;)">
       <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="3.43" steps="1188487"/></proof>
       </goal>
       <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="(width c&#39;&#39; = width c&#39;)">
        <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
        <proof prover="1"><result status="valid" time="3.46" steps="1188556"/></proof>
        </goal>
        <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="3.21" steps="1186272"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(path_sem_basis c x = path_sem_basis c&#39; x)">
       <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0.1.0" expl="asserted formula" proved="true">
       <transf name="assert" proved="true" arg1="(path_sem_basis c&#39; x = path_sem_basis c&#39;&#39; x)">
        <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
        <transf name="apply" proved="true" arg1="(&lt;=&gt;)&#39;def1">
         <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="2.05" steps="1119947"/></proof>
         </goal>
         <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="3.48" steps="1190574"/></proof>
         </goal>
         <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="2.07" steps="1119947"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0.1.0.1" expl="asserted formula" proved="true">
        <proof prover="1"><result status="valid" time="3.48" steps="1188528"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0.1.1" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="(path_sem_basis c&#39; x = path_sem_basis c&#39;&#39; x)">
        <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0.1.1.0" expl="asserted formula" proved="true">
        <transf name="apply" proved="true" arg1="(&lt;=&gt;)&#39;def1">
         <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.97" steps="1119972"/></proof>
         </goal>
         <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="3.48" steps="1190611"/></proof>
         </goal>
         <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.89" steps="1119972"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="transitive_circuit_equiv&#39;vc.0.0.0.0.1.1.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="2.95" steps="1186322"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sequence_assoc&#39;vc" expl="VC for sequence_assoc" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sequence_assoc&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="sequence_assoc&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_equiv_circuits">
    <goal name="sequence_assoc&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="3.40" steps="1037615"/></proof>
    </goal>
    <goal name="sequence_assoc&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sequence_assoc&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_comp_">
      <goal name="sequence_assoc&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_comp_">
       <goal name="sequence_assoc&#39;vc.0.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_comp_">
        <goal name="sequence_assoc&#39;vc.0.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_comp_">
         <goal name="sequence_assoc&#39;vc.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.46" steps="833630"/></proof>
         </goal>
         <goal name="sequence_assoc&#39;vc.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.48" steps="1042091"/></proof>
         </goal>
         <goal name="sequence_assoc&#39;vc.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.39" steps="833632"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="sequence_assoc&#39;vc.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="3.42" steps="1041711"/></proof>
        </goal>
        <goal name="sequence_assoc&#39;vc.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.51" steps="892958"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="sequence_assoc&#39;vc.0.0.1.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="3.46" steps="1041711"/></proof>
       </goal>
       <goal name="sequence_assoc&#39;vc.0.0.1.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.50" steps="833632"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="sequence_assoc&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.61" steps="910066"/></proof>
      </goal>
      <goal name="sequence_assoc&#39;vc.0.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.28" steps="893001"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="parallel_assoc&#39;vc" expl="VC for parallel_assoc" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="parallel_assoc&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="parallel_assoc&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_equiv_circuits">
    <goal name="parallel_assoc&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="3.92" steps="1328607"/></proof>
    </goal>
    <goal name="parallel_assoc&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="parallel_assoc&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_basis_par">
      <goal name="parallel_assoc&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_basis_par">
       <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_basis_par">
        <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_basis_par">
         <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
          <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_eq">
           <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_eq">
            <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(bv_to_ket
   (hpart (ket_to_bv (bv_to_ket (hpart (ket_to_bv x) (width (c // c&#39;)))))
    (width c)))" arg2="(bv_to_ket (hpart (ket_to_bv x) (width c)))">
             <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
             </transf>
             </goal>
             <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <transf name="apply" proved="true" arg1="bv_to_ket_eq">
              <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.87" steps="1338830"/></proof>
              </goal>
              <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="hpart_value_b">
                <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                 <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="4.46" steps="1346339"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="4.40" steps="1335300"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
             <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
              <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(tpart (hpart (ket_to_bv x) (width (c // c&#39;))) (width c))" arg2="(hpart (tpart (ket_to_bv x) (width c)) (width c&#39;))">
               <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="1.96" steps="1075884"/></proof>
               </goal>
               <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
               <transf name="apply" proved="true" arg1="set_equal_bv">
                <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="4.32" steps="1341171"/></proof>
                </goal>
                <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.1.0.0.1.1" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.1.0.0.1.1.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="tpart_value_b">
                  <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.1.0.0.1.1.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="hpart_value_b">
                   <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="hpart_value_b">
                    <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.1.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="4.36" steps="1344924"/></proof>
                    </goal>
                    <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.1.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="4.36" steps="1336499"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.1.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="4.37" steps="1336497"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.1.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="4.33" steps="1333077"/></proof>
                  </goal>
                  <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.0.1.0.0.1.1.0.2" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="4.36" steps="1340921"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
            <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(tpart (ket_to_bv x) (width (c // c&#39;)))" arg2="(tpart (tpart (ket_to_bv x) (width c)) (width c&#39;))">
             <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
             </transf>
             </goal>
             <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
             <transf name="apply" proved="true" arg1="set_equal_bv">
              <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.37" steps="1340926"/></proof>
              </goal>
              <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="tpart_value_b">
                <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="tpart_value_b">
                 <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="tpart_value_b">
                  <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.66"/></proof>
                  </goal>
                  <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="4.38" steps="1332824"/></proof>
                  </goal>
                  <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="4.37" steps="1340557"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="4.28" steps="1332677"/></proof>
                 </goal>
                 <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="4.34" steps="1340765"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="4.26" steps="1332660"/></proof>
                </goal>
                <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.0.0.1.0.1.1.0.2" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="4.35" steps="1340558"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="1.58"/></proof>
         </goal>
         <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.16" steps="1145608"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="1.58"/></proof>
        </goal>
        <goal name="parallel_assoc&#39;vc.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.96" steps="1075886"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="parallel_assoc&#39;vc.0.0.1.0.0.1" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
        <goal name="parallel_assoc&#39;vc.0.0.1.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="4.35" steps="1336075"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="parallel_assoc&#39;vc.0.0.1.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="3.25" steps="1145612"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="parallel_assoc&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="1.58"/></proof>
      </goal>
      <goal name="parallel_assoc&#39;vc.0.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.96" steps="1075886"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sequence_equiv&#39;vc" expl="VC for sequence_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sequence_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="sequence_equiv&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="3.57" steps="1121637"/></proof>
   </goal>
   <goal name="sequence_equiv&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sequence_equiv&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="sequence_equiv&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_comp_">
      <goal name="sequence_equiv&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(path_sem c1 x)" arg2="(path_sem c2 x)">
       <goal name="sequence_equiv&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="get_equiv_circuits">
        <goal name="sequence_equiv&#39;vc.0.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.48" steps="834394"/></proof>
        </goal>
        <goal name="sequence_equiv&#39;vc.0.1.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="3.61" steps="1137455"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="sequence_equiv&#39;vc.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="get_equiv_circuits">
        <goal name="sequence_equiv&#39;vc.0.1.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.44" steps="834394"/></proof>
        </goal>
        <goal name="sequence_equiv&#39;vc.0.1.0.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="2.55" steps="930254"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="sequence_equiv&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.59" steps="930231"/></proof>
      </goal>
      <goal name="sequence_equiv&#39;vc.0.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.60" steps="930288"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="sequence_equiv&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.57" steps="930254"/></proof>
     </goal>
     <goal name="sequence_equiv&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.44" steps="834394"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="parallel_equiv&#39;vc" expl="VC for parallel_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="parallel_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="parallel_equiv&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="3.60" steps="1120752"/></proof>
   </goal>
   <goal name="parallel_equiv&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="parallel_equiv&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_basis_par">
     <goal name="parallel_equiv&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_basis_par">
      <goal name="parallel_equiv&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(width c1)" arg2="(width c2)">
       <goal name="parallel_equiv&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_eq">
        <goal name="parallel_equiv&#39;vc.0.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="get_equiv_circuits">
         <goal name="parallel_equiv&#39;vc.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.47" steps="834489"/></proof>
         </goal>
         <goal name="parallel_equiv&#39;vc.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
          <goal name="parallel_equiv&#39;vc.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="3.64" steps="1127504"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="parallel_equiv&#39;vc.0.1.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="get_equiv_circuits">
         <goal name="parallel_equiv&#39;vc.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.47" steps="834489"/></proof>
         </goal>
         <goal name="parallel_equiv&#39;vc.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
          <goal name="parallel_equiv&#39;vc.0.1.0.0.0.0.1.1.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="3.63" steps="1129313"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="parallel_equiv&#39;vc.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="1"><result status="valid" time="2.48" steps="894417"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="parallel_equiv&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="1.62"/></proof>
      </goal>
      <goal name="parallel_equiv&#39;vc.0.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.47" steps="834489"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="parallel_equiv&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="3.62" steps="1123211"/></proof>
     </goal>
     <goal name="parallel_equiv&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.46" steps="834489"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_equiv&#39;vc" expl="VC for place_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="place_equiv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_equiv_circuits">
    <goal name="place_equiv&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="4.29" steps="1327748"/></proof>
    </goal>
    <goal name="place_equiv&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="place_equiv&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
      <goal name="place_equiv&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="place_kron_bv">
       <goal name="place_equiv&#39;vc.0.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="place_kron_bv">
        <goal name="place_equiv&#39;vc.0.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_eq">
         <goal name="place_equiv&#39;vc.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_eq">
          <goal name="place_equiv&#39;vc.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="2.15" steps="1091772"/></proof>
          </goal>
          <goal name="place_equiv&#39;vc.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="Requires1">
           <goal name="place_equiv&#39;vc.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(width c)" arg2="(width c&#39;)">
            <goal name="place_equiv&#39;vc.0.0.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="get_equiv_circuits">
             <goal name="place_equiv&#39;vc.0.0.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="1.90" steps="1076247"/></proof>
             </goal>
             <goal name="place_equiv&#39;vc.0.0.1.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
              <goal name="place_equiv&#39;vc.0.0.1.0.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.27" steps="1333228"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="place_equiv&#39;vc.0.0.1.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
            <proof prover="1"><result status="valid" time="3.21" steps="1146084"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="place_equiv&#39;vc.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.45"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="place_equiv&#39;vc.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="3.07" steps="1144249"/></proof>
        </goal>
        <goal name="place_equiv&#39;vc.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.96" steps="1152256"/></proof>
        </goal>
        <goal name="place_equiv&#39;vc.0.0.1.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="4.48" steps="1331634"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_equiv&#39;vc.0.0.1.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.93" steps="1076247"/></proof>
       </goal>
       <goal name="place_equiv&#39;vc.0.0.1.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.97" steps="1076247"/></proof>
       </goal>
       <goal name="place_equiv&#39;vc.0.0.1.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="4.30" steps="1331900"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_equiv&#39;vc.0.0.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="1"><result status="valid" time="3.22" steps="1146019"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_equiv&#39;vc" expl="VC for cont_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="cont_equiv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_equiv_circuits">
    <goal name="cont_equiv&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="4.36" steps="1329003"/></proof>
    </goal>
    <goal name="cont_equiv&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cont_equiv&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
      <goal name="cont_equiv&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="case" proved="true" arg1="((k&#39; +&#39; width c&#39;) &lt;=&#39; co&#39;)">
       <goal name="cont_equiv&#39;vc.0.0.1.0.0.0" expl="true case (apply premises)" proved="true">
       <transf name="case" proved="true" arg1="(getbv (ket_to_bv x) co = 0)">
        <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="path_cont1">
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="path_cont1">
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
          <proof prover="1"><result status="valid" time="1.97" steps="1076728"/></proof>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="3.11" steps="1144689"/></proof>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="3.08" steps="1145744"/></proof>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.98" steps="1076730"/></proof>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.0.0.4" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="4.35" steps="1336342"/></proof>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.0.0.5" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.15" steps="1100367"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.97" steps="1076739"/></proof>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.01" steps="1076737"/></proof>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.31" steps="1152687"/></proof>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.0.4" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="4.37" steps="1336227"/></proof>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.0.5" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.93" steps="1084813"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.1" expl="false case (true case. apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="path_cont">
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.1.0" expl="false case (true case. apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="path_cont">
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.1.0.0" expl="false case (true case. apply premises)" proved="true">
          <transf name="apply" proved="true" arg1="get_equiv_circuits">
           <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="4.34" steps="1332569"/></proof>
           </goal>
           <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.1.0.0.1" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="4.40" steps="1334599"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="3.10" steps="1144690"/></proof>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="3.17" steps="1145760"/></proof>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.1.0.3" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.97" steps="1076734"/></proof>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.1.0.4" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="4.38" steps="1336398"/></proof>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.1.0.5" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="4.36" steps="1334934"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.96" steps="1076743"/></proof>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.1.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.66" steps="1076741"/></proof>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.1.3" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.84" steps="1152696"/></proof>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.1.4" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="4.37" steps="1336397"/></proof>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.0.1.5" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="4.34" steps="1335070"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="cont_equiv&#39;vc.0.0.1.0.0.1" expl="false case (apply premises)" proved="true">
       <transf name="case" proved="true" arg1="(getbv (ket_to_bv x) co = 0)">
        <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.0" expl="false case (true case. apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="path_cont3">
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.0.0" expl="false case (true case. apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="path_cont3">
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.0.0.0" expl="false case (true case. apply premises)" proved="true">
          <proof prover="1"><result status="valid" time="1.94" steps="1076732"/></proof>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="3.13" steps="1144696"/></proof>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="3.30" steps="1152756"/></proof>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="3.34" steps="1152684"/></proof>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.0.0.4" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="4.40" steps="1339041"/></proof>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.0.0.5" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.16" steps="1100371"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.95" steps="1076743"/></proof>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.99" steps="1076741"/></proof>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.0.3" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.25" steps="1152678"/></proof>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.0.4" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="4.42" steps="1339040"/></proof>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.0.5" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.94" steps="1084817"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.1" expl="false case (apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="path_cont2">
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.1.0" expl="false case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="path_cont2">
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.1.0.0" expl="false case (apply premises)" proved="true">
          <transf name="apply" proved="true" arg1="get_equiv_circuits">
           <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="4.35" steps="1332564"/></proof>
           </goal>
           <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.1.0.0.1" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="4.35" steps="1336658"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="3.07" steps="1144697"/></proof>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="3.31" steps="1152765"/></proof>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.1.0.3" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="3.32" steps="1152693"/></proof>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.1.0.4" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="4.38" steps="1339101"/></proof>
          </goal>
          <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.1.0.5" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="4.32" steps="1334919"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.1.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.97" steps="1076747"/></proof>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.1.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.95" steps="1076745"/></proof>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.1.3" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.32" steps="1152687"/></proof>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.1.4" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="4.37" steps="1339006"/></proof>
         </goal>
         <goal name="cont_equiv&#39;vc.0.0.1.0.0.1.1.5" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="4.38" steps="1334933"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_equiv&#39;vc.0.0.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="1"><result status="valid" time="3.17" steps="1146401"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="remove_parallel&#39;vc" expl="VC for remove_parallel" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="remove_parallel&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.42" steps="894429"/></proof>
  </goal>
  <goal name="remove_parallel&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.52" steps="835669"/></proof>
  </goal>
  <goal name="remove_parallel&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.53" steps="845490"/></proof>
  </goal>
  <goal name="remove_parallel&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.50" steps="906962"/></proof>
  </goal>
  <goal name="remove_parallel&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.50" steps="908222"/></proof>
  </goal>
  <goal name="remove_parallel&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="remove_parallel&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="remove_parallel&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="result&#39;def">
     <goal name="remove_parallel&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="set_equiv_circuits">
      <goal name="remove_parallel&#39;vc.5.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="4.77" steps="1407149"/></proof>
      </goal>
      <goal name="remove_parallel&#39;vc.5.0.0.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="remove_parallel&#39;vc.5.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
        <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="bv_decomp_ht" arg2="with" arg3="(width c)">
         <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="ket_to_bv_concat">
          <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_comp_">
           <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="place_kron_left_path">
            <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="place_kron_right">
             <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="goal_comm">
              <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="path_sem_kron">
               <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="4.78" steps="1408511"/></proof>
               </goal>
               <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="tpart_length">
                 <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="5.21" steps="1441375"/></proof>
                 </goal>
                 <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="4.81" steps="1412085"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="2.17" steps="1178368"/></proof>
               </goal>
               <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="2.16" steps="1178368"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="2.13" steps="1178386"/></proof>
             </goal>
             <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="2.12" steps="1178380"/></proof>
             </goal>
             <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="4.75" steps="1409019"/></proof>
             </goal>
             <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
              <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.0.4.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="tpart_length">
               <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.0.4.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="5.18" steps="1441387"/></proof>
               </goal>
               <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.0.4.0.1" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="4.75" steps="1412085"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="2.17" steps="1178386"/></proof>
            </goal>
            <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="4.70" steps="1408511"/></proof>
            </goal>
            <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
             <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.3.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="tpart_length">
              <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="((width c +&#39; width c&#39;) -&#39;&#39; width c)" arg2="(width c&#39;)">
               <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="5.24" steps="1441375"/></proof>
               </goal>
               <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="1"><result status="valid" time="2.12" steps="1178384"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.0.3.0.1" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="4.84" steps="1412085"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="4.79" steps="1411801"/></proof>
           </goal>
           <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="3.50" steps="1247155"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="4.87" steps="1412085"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="remove_parallel&#39;vc.5.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <proof prover="1"><result status="valid" time="3.70" steps="1248041"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="par_seq_commut&#39;vc" expl="VC for par_seq_commut" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="par_seq_commut&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="par_seq_commut&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="4.14" steps="1155433"/></proof>
   </goal>
   <goal name="par_seq_commut&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="par_seq_commut&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="par_seq_commut&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="instantiate" proved="true" arg1="path_sem_basis_par" arg2="a,b,x">
      <goal name="par_seq_commut&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="Hinst">
       <goal name="par_seq_commut&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="par_seq_commut&#39;vc.0.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_basis_par">
         <goal name="par_seq_commut&#39;vc.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="goal_comm">
          <goal name="par_seq_commut&#39;vc.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="path_sem_kron">
           <goal name="par_seq_commut&#39;vc.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="3.78" steps="1131675"/></proof>
           </goal>
           <goal name="par_seq_commut&#39;vc.0.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="4.09" steps="1166584"/></proof>
           </goal>
           <goal name="par_seq_commut&#39;vc.0.1.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="3.67" steps="1132432"/></proof>
           </goal>
           <goal name="par_seq_commut&#39;vc.0.1.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="4.16" steps="1169265"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="par_seq_commut&#39;vc.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="1.80"/></proof>
         </goal>
         <goal name="par_seq_commut&#39;vc.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.46" steps="835855"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="par_seq_commut&#39;vc.0.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.79"/></proof>
       </goal>
       <goal name="par_seq_commut&#39;vc.0.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.49" steps="835855"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="par_seq_commut&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="4.00" steps="1158531"/></proof>
     </goal>
     <goal name="par_seq_commut&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="3.63" steps="1127361"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="with_permutation_equiv&#39;vc" expl="VC for with_permutation_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="with_permutation_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="with_permutation_equiv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec">
    <goal name="with_permutation_equiv&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec">
     <goal name="with_permutation_equiv&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="sequence_equiv">
      <goal name="with_permutation_equiv&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="sequence_equiv">
       <goal name="with_permutation_equiv&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="3.43" steps="1159345"/></proof>
       </goal>
       <goal name="with_permutation_equiv&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="1.94" steps="1086719"/></proof>
       </goal>
       <goal name="with_permutation_equiv&#39;vc.0.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="4.29" steps="1329590"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="with_permutation_equiv&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="3.36" steps="1159368"/></proof>
      </goal>
      <goal name="with_permutation_equiv&#39;vc.0.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="4.38" steps="1332180"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="with_permutation_equiv&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="3.34" steps="1158860"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="with_permutation_equiv&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.97" steps="1086719"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="insert_qbits_equiv&#39;vc" expl="VC for insert_qbits_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert_qbits_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="insert_qbits_equiv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="insert_qbits&#39;def">
    <goal name="insert_qbits_equiv&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="insert_qbits&#39;def">
     <goal name="insert_qbits_equiv&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="with_permutation_equiv">
      <goal name="insert_qbits_equiv&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="parallel_equiv">
       <goal name="insert_qbits_equiv&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="1.44" steps="835456"/></proof>
       </goal>
       <goal name="insert_qbits_equiv&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.55" steps="894783"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="insert_qbits_equiv&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="insert_qbits_equiv&#39;vc.0.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (c // m_skip i))" arg2="(n+&#39;i)">
        <goal name="insert_qbits_equiv&#39;vc.0.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="set_bijective_auto">
         <goal name="insert_qbits_equiv&#39;vc.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="5.12" steps="1455080"/></proof>
         </goal>
         <goal name="insert_qbits_equiv&#39;vc.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="insert_qbits_equiv&#39;vc.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
          <transf name="exists" proved="true" arg1="(if e&#39; &lt;&#39; k then e&#39; else if e&#39; &lt;&#39; k +&#39;i  then e&#39; +&#39;n-&#39;&#39;k else (e&#39; -&#39;&#39;i ) )
">
           <goal name="insert_qbits_equiv&#39;vc.0.0.0.0.1.0.0.1.0.0" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="insert_qbits_equiv&#39;vc.0.0.0.0.1.0.0.1.0.0.0" proved="true">
            <proof prover="1"><result status="valid" time="4.29" steps="1442628"/></proof>
            </goal>
            <goal name="insert_qbits_equiv&#39;vc.0.0.0.0.1.0.0.1.0.0.1" proved="true">
            <proof prover="1"><result status="valid" time="5.06" steps="1456122"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="insert_qbits_equiv&#39;vc.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="(//)&#39;spec3">
         <goal name="insert_qbits_equiv&#39;vc.0.0.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
         <proof prover="1"><result status="valid" time="4.40" steps="1340499"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="insert_qbits_equiv&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.55" steps="894864"/></proof>
     </goal>
     <goal name="insert_qbits_equiv&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.27" steps="835465"/></proof>
     </goal>
     <goal name="insert_qbits_equiv&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.38" steps="835458"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="insert_qbits_equiv&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.18" steps="835456"/></proof>
    </goal>
    <goal name="insert_qbits_equiv&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.21" steps="835465"/></proof>
    </goal>
    <goal name="insert_qbits_equiv&#39;vc.0.0.3" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.43" steps="835458"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Unwire_circuit_equiv" proved="true">
 <goal name="circuit_equiv_by_unwire&#39;vc" expl="VC for circuit_equiv_by_unwire" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="circuit_equiv_by_unwire&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="circuit_equiv_by_unwire&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.98" steps="1119555"/></proof>
   </goal>
   <goal name="circuit_equiv_by_unwire&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.73" steps="1125080"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="circuit_equiv_by_unwire_equiv&#39;vc" expl="VC for circuit_equiv_by_unwire_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="circuit_equiv_by_unwire_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="circuit_equiv_by_unwire_equiv&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="1.27" steps="836350"/></proof>
   </goal>
   <goal name="circuit_equiv_by_unwire_equiv&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="circuit_equiv_by_unwire_equiv&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="unwire_path_sem">
     <goal name="circuit_equiv_by_unwire_equiv&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="2.68" steps="1126469"/></proof>
     </goal>
     <goal name="circuit_equiv_by_unwire_equiv&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.13" steps="836370"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Wiring_equiv" proved="true">
 <goal name="place_place&#39;vc" expl="VC for place_place" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_place&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="circuit_equiv_by_unwire_equiv">
   <goal name="place_place&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="place_place&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="unwire_place">
     <goal name="place_place&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="unwire_place">
      <goal name="place_place&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="unwire_place">
       <goal name="place_place&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
        <goal name="place_place&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="place_place1">
         <goal name="place_place&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.08" steps="836539"/></proof>
         </goal>
         <goal name="place_place&#39;vc.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.94" steps="932407"/></proof>
         </goal>
         <goal name="place_place&#39;vc.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.31" steps="836539"/></proof>
         </goal>
         <goal name="place_place&#39;vc.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.29" steps="836539"/></proof>
         </goal>
         <goal name="place_place&#39;vc.0.0.0.0.0.0.0.4" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="2.82" steps="1129471"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="place_place&#39;vc.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="1"><result status="valid" time="2.05" steps="896480"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_place&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.86" steps="896079"/></proof>
       </goal>
       <goal name="place_place&#39;vc.0.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.14" steps="896091"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_place&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.29" steps="836539"/></proof>
      </goal>
      <goal name="place_place&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.30" steps="836539"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="place_place&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.32" steps="836539"/></proof>
     </goal>
     <goal name="place_place&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.88" steps="1124566"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="place_place&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="3.17" steps="1122888"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_cont&#39;vc" expl="VC for place_cont" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_cont&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits_bv">
   <goal name="place_cont&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="3.25" steps="1123875"/></proof>
   </goal>
   <goal name="place_cont&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="place_cont&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="case" proved="true" arg1="(getbv x (co+&#39;k&#39;) = 0)">
     <goal name="place_cont&#39;vc.0.1.0.0" expl="true case (apply premises)" proved="true">
     <transf name="rewrite" proved="true" arg1="place_kron_bv">
      <goal name="place_cont&#39;vc.0.1.0.0.0" expl="true case (apply premises)" proved="true">
      <transf name="rewrite" proved="true" arg1="path_cont_ketz">
       <goal name="place_cont&#39;vc.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
       <transf name="rewrite" proved="true" arg1="path_cont_ketz">
        <goal name="place_cont&#39;vc.0.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
         <goal name="place_cont&#39;vc.0.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
          <goal name="place_cont&#39;vc.0.1.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="bv_decomp_hhtt_rev">
           <goal name="place_cont&#39;vc.0.1.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
           <proof prover="1"><result status="valid" time="1.13" steps="836897"/></proof>
           </goal>
           <goal name="place_cont&#39;vc.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="1.12" steps="836899"/></proof>
           </goal>
           <goal name="place_cont&#39;vc.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.82" steps="1127804"/></proof>
           </goal>
           <goal name="place_cont&#39;vc.0.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="3.26" steps="1131451"/></proof>
           </goal>
           <goal name="place_cont&#39;vc.0.1.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="1.24" steps="836897"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="place_cont&#39;vc.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.95" steps="896553"/></proof>
        </goal>
        <goal name="place_cont&#39;vc.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.96" steps="896568"/></proof>
        </goal>
        <goal name="place_cont&#39;vc.0.1.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.13" steps="836936"/></proof>
        </goal>
        <goal name="place_cont&#39;vc.0.1.0.0.0.0.4" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.90" steps="1130962"/></proof>
        </goal>
        <goal name="place_cont&#39;vc.0.1.0.0.0.0.5" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.96" steps="896923"/></proof>
        </goal>
        <goal name="place_cont&#39;vc.0.1.0.0.0.0.6" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.06" steps="943715"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_cont&#39;vc.0.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.12" steps="836908"/></proof>
       </goal>
       <goal name="place_cont&#39;vc.0.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.08" steps="836924"/></proof>
       </goal>
       <goal name="place_cont&#39;vc.0.1.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.11" steps="836899"/></proof>
       </goal>
       <goal name="place_cont&#39;vc.0.1.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.99" steps="1131987"/></proof>
       </goal>
       <goal name="place_cont&#39;vc.0.1.0.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.98" steps="896937"/></proof>
       </goal>
       <goal name="place_cont&#39;vc.0.1.0.0.0.6" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="3.16" steps="1138730"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_cont&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.45" steps="836899"/></proof>
      </goal>
      <goal name="place_cont&#39;vc.0.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="3.03" steps="1131360"/></proof>
      </goal>
      <goal name="place_cont&#39;vc.0.1.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.91" steps="1130898"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="place_cont&#39;vc.0.1.0.1" expl="false case (apply premises)" proved="true">
     <transf name="replace" proved="true" arg1="(path_sem (cont c (co +&#39; k&#39;) (k +&#39; k&#39;) n&#39;) (bv_to_ket x))" arg2="(path_sem (place c  (k +&#39; k&#39;) n&#39;) (bv_to_ket x))">
      <goal name="place_cont&#39;vc.0.1.0.1.0" expl="false case (apply premises)" proved="true">
      <transf name="replace" proved="true" arg1="(path_sem (place (cont c co k n) k&#39; n&#39;) (bv_to_ket x))" arg2="(path_sem (place (place c  k n) k&#39; n&#39;) (bv_to_ket x))">
       <goal name="place_cont&#39;vc.0.1.0.1.0.0" expl="false case (apply premises)" proved="true">
       <transf name="apply" proved="true" arg1="get_equiv_circuits">
        <goal name="place_cont&#39;vc.0.1.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="2.88" steps="1127327"/></proof>
        </goal>
        <goal name="place_cont&#39;vc.0.1.0.1.0.0.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="2.93" steps="1130670"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_cont&#39;vc.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="place_kron_bv">
        <goal name="place_cont&#39;vc.0.1.0.1.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="place_kron_bv">
         <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_eq">
          <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_eq">
           <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="1.12" steps="836901"/></proof>
           </goal>
           <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="path_cont_keto">
            <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(width (place c  k n))" arg2="(width (cont c co k n))">
             <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="1.10" steps="836901"/></proof>
             </goal>
             <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
             <proof prover="1"><result status="valid" time="3.12" steps="1130623"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="1.19" steps="836912"/></proof>
            </goal>
            <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.0.1.2" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="1.31" steps="836928"/></proof>
            </goal>
            <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.0.1.3" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="1.22" steps="836903"/></proof>
            </goal>
            <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.0.1.4" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
             <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.0.1.4.0" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="2.88" steps="1134519"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.0.1.5" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="1.99" steps="896961"/></proof>
            </goal>
            <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.0.1.6" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
             <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.0.1.6.0" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="2.93" steps="1138835"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.1" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(width (cont c co k n))" arg2="n">
           <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.1.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(width (place c  k n))" arg2="n">
            <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.1.0.0" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="1.12" steps="836901"/></proof>
            </goal>
            <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.1.0.1" expl="equality hypothesis" proved="true">
            <proof prover="1"><result status="valid" time="2.87" steps="1127052"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
           <proof prover="1"><result status="valid" time="2.88" steps="1127090"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.15" steps="836903"/></proof>
         </goal>
         <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.82" steps="1129020"/></proof>
         </goal>
         <goal name="place_cont&#39;vc.0.1.0.1.0.1.0.3" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.82" steps="1130045"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="place_cont&#39;vc.0.1.0.1.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.06" steps="836903"/></proof>
        </goal>
        <goal name="place_cont&#39;vc.0.1.0.1.0.1.2" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.81" steps="1130420"/></proof>
        </goal>
        <goal name="place_cont&#39;vc.0.1.0.1.0.1.3" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.77" steps="1130045"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="place_cont&#39;vc.0.1.0.1.1" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="path_cont_keto">
       <goal name="place_cont&#39;vc.0.1.0.1.1.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="1.82" steps="896567"/></proof>
       </goal>
       <goal name="place_cont&#39;vc.0.1.0.1.1.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="1.86" steps="896582"/></proof>
       </goal>
       <goal name="place_cont&#39;vc.0.1.0.1.1.2" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="1.07" steps="836940"/></proof>
       </goal>
       <goal name="place_cont&#39;vc.0.1.0.1.1.3" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.80" steps="1130215"/></proof>
       </goal>
       <goal name="place_cont&#39;vc.0.1.0.1.1.4" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="1.89" steps="896947"/></proof>
       </goal>
       <goal name="place_cont&#39;vc.0.1.0.1.1.5" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.78" steps="1135298"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_place&#39;vc" expl="VC for cont_place" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_place&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits_bv">
   <goal name="cont_place&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.75" steps="1123659"/></proof>
   </goal>
   <goal name="cont_place&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cont_place&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="case" proved="true" arg1="(getbv x co =0)">
     <goal name="cont_place&#39;vc.0.1.0.0" expl="true case (apply premises)" proved="true">
     <transf name="rewrite" proved="true" arg1="path_cont_ketz">
      <goal name="cont_place&#39;vc.0.1.0.0.0" expl="true case (apply premises)" proved="true">
      <transf name="rewrite" proved="true" arg1="path_cont_ketz">
       <goal name="cont_place&#39;vc.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
       <proof prover="1"><result status="valid" time="1.26" steps="837286"/></proof>
       </goal>
       <goal name="cont_place&#39;vc.0.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.09" steps="837297"/></proof>
       </goal>
       <goal name="cont_place&#39;vc.0.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.84" steps="896958"/></proof>
       </goal>
       <goal name="cont_place&#39;vc.0.1.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.87" steps="896982"/></proof>
       </goal>
       <goal name="cont_place&#39;vc.0.1.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.84" steps="1131165"/></proof>
       </goal>
       <goal name="cont_place&#39;vc.0.1.0.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.89" steps="897308"/></proof>
       </goal>
       <goal name="cont_place&#39;vc.0.1.0.0.0.6" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.98" steps="944024"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_place&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.09" steps="837297"/></proof>
      </goal>
      <goal name="cont_place&#39;vc.0.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.78" steps="1130165"/></proof>
      </goal>
      <goal name="cont_place&#39;vc.0.1.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.79" steps="1129993"/></proof>
      </goal>
      <goal name="cont_place&#39;vc.0.1.0.0.4" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.82" steps="1131165"/></proof>
      </goal>
      <goal name="cont_place&#39;vc.0.1.0.0.5" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.91" steps="897308"/></proof>
      </goal>
      <goal name="cont_place&#39;vc.0.1.0.0.6" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.97" steps="944024"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_place&#39;vc.0.1.0.1" expl="false case (apply premises)" proved="true">
     <transf name="rewrite" proved="true" arg1="path_cont_keto">
      <goal name="cont_place&#39;vc.0.1.0.1.0" expl="false case (apply premises)" proved="true">
      <transf name="rewrite" proved="true" arg1="path_cont_keto">
       <goal name="cont_place&#39;vc.0.1.0.1.0.0" expl="false case (apply premises)" proved="true">
       <transf name="apply" proved="true" arg1="get_equiv_circuits">
        <goal name="cont_place&#39;vc.0.1.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="place_place">
         <goal name="cont_place&#39;vc.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.06" steps="837292"/></proof>
         </goal>
         <goal name="cont_place&#39;vc.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.07" steps="837292"/></proof>
         </goal>
         <goal name="cont_place&#39;vc.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.04" steps="837292"/></proof>
         </goal>
         <goal name="cont_place&#39;vc.0.1.0.1.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.07" steps="837292"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_place&#39;vc.0.1.0.1.0.0.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="2.82" steps="1130921"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_place&#39;vc.0.1.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.09" steps="837301"/></proof>
       </goal>
       <goal name="cont_place&#39;vc.0.1.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.81" steps="896972"/></proof>
       </goal>
       <goal name="cont_place&#39;vc.0.1.0.1.0.3" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.85" steps="896996"/></proof>
       </goal>
       <goal name="cont_place&#39;vc.0.1.0.1.0.4" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.85" steps="1130301"/></proof>
       </goal>
       <goal name="cont_place&#39;vc.0.1.0.1.0.5" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.97" steps="897332"/></proof>
       </goal>
       <goal name="cont_place&#39;vc.0.1.0.1.0.6" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.89" steps="1135177"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_place&#39;vc.0.1.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.13" steps="837301"/></proof>
      </goal>
      <goal name="cont_place&#39;vc.0.1.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.91" steps="1129197"/></proof>
      </goal>
      <goal name="cont_place&#39;vc.0.1.0.1.3" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.95" steps="1129265"/></proof>
      </goal>
      <goal name="cont_place&#39;vc.0.1.0.1.4" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.98" steps="1130301"/></proof>
      </goal>
      <goal name="cont_place&#39;vc.0.1.0.1.5" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.97" steps="897332"/></proof>
      </goal>
      <goal name="cont_place&#39;vc.0.1.0.1.6" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.87" steps="1135177"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_sequence_comm&#39;vc" expl="VC for cont_sequence_comm" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_sequence_comm&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits_bv">
   <goal name="cont_sequence_comm&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="replace" proved="true" arg1="(width (cont c co k n -- cont d co k n))" arg2="(width (cont c co k n ))">
    <goal name="cont_sequence_comm&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="cont_sequence_comm&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="3.44" steps="1332521"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cont_sequence_comm&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="cont_sequence_comm&#39;vc.0.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="(--)&#39;spec3">
      <goal name="cont_sequence_comm&#39;vc.0.0.1.0.0" expl="equality hypothesis" proved="true">
      <proof prover="1"><result status="valid" time="1.54" steps="1080410"/></proof>
      </goal>
      <goal name="cont_sequence_comm&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="3.48" steps="1332122"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="cont_sequence_comm&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cont_sequence_comm&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="(is_a_ket_l (bv_to_ket x) n)">
     <goal name="cont_sequence_comm&#39;vc.0.1.0.0" expl="asserted formula" proved="true">
     <proof prover="1"><result status="valid" time="2.88" steps="1128238"/></proof>
     </goal>
     <goal name="cont_sequence_comm&#39;vc.0.1.0.1" expl="apply premises" proved="true">
     <transf name="case" proved="true" arg1="(getbv x co = 0)">
      <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0" expl="true case (apply premises)" proved="true">
      <transf name="rewrite" proved="true" arg1="path_cont_ketz">
       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.0" expl="true case (apply premises)" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_comp_">
        <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.0.0" expl="true case (apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="path_cont_ketz">
         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="path_cont_ketz">
          <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
          <proof prover="1"><result status="valid" time="1.10" steps="837651"/></proof>
          </goal>
          <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.13" steps="837662"/></proof>
          </goal>
          <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.07" steps="837678"/></proof>
          </goal>
          <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.11" steps="837653"/></proof>
          </goal>
          <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.0.0.0.4" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.09" steps="837653"/></proof>
          </goal>
          <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.0.0.0.5" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.92" steps="897670"/></proof>
          </goal>
          <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.0.0.0.6" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.05" steps="944808"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.10" steps="837662"/></proof>
         </goal>
         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.86" steps="897293"/></proof>
         </goal>
         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.88" steps="897294"/></proof>
         </goal>
         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.0.0.4" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.96" steps="1141304"/></proof>
         </goal>
         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.0.0.5" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.11" steps="1160395"/></proof>
         </goal>
         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.0.0.6" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.19" steps="1169200"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.92" steps="1134310"/></proof>
        </goal>
        <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.93" steps="1135034"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.14" steps="837662"/></proof>
       </goal>
       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.04" steps="933397"/></proof>
       </goal>
       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.3" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.03" steps="933381"/></proof>
       </goal>
       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.4" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.10" steps="837653"/></proof>
       </goal>
       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.5" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.98" steps="897670"/></proof>
       </goal>
       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.0.6" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.11" steps="944808"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1" expl="false case (apply premises)" proved="true">
      <transf name="rewrite" proved="true" arg1="path_cont_keto">
       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0" expl="false case (apply premises)" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_comp_">
        <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0" expl="false case (apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="place_kron_bv">
         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0" expl="false case (apply premises)" proved="true">
         <transf name="apply" proved="true" arg1="goal_comm">
          <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(path_sem (cont c co k n) (bv_to_ket x))" arg2="(path_sem (place c  k n) (bv_to_ket x))">
           <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="place_kron_bv">
            <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(width (c -- d))" arg2="(width (c))">
             <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="path_sem_comp_">
              <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="(path_sem c (bv_to_ket (htpart x k (width c)))),(width c)">
               <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="Hinst">
                <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="path_sem_sum_">
                 <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
                  <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
                     <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="path_sem_sum_">
                      <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="ket_sum_eq">
                       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="1"><result status="valid" time="3.02" steps="1138758"/></proof>
                       </goal>
                       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                       <proof prover="1"><result status="valid" time="1.12" steps="837835"/></proof>
                       </goal>
                       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="path_sem_scal">
                          <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                           <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                            <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                            <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                             <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                             <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                              <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                              <transf name="rewrite" proved="true" arg1="path_sem_scal">
                               <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                               <transf name="apply" proved="true" arg1="scalar_eq">
                                <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                <transf name="rewrite" proved="true" arg1="path_cont_keto">
                                 <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                 <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                                  <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                   <transf name="apply" proved="true" arg1="place_kron">
                                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                    <proof prover="1"><result status="valid" time="1.25" steps="916511"/></proof>
                                    </goal>
                                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                                    <proof prover="1"><result status="valid" time="2.05" steps="978435"/></proof>
                                    </goal>
                                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                                    <proof prover="1"><result status="valid" time="3.10" steps="1228251"/></proof>
                                    </goal>
                                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                                    <proof prover="1"><result status="valid" time="3.11" steps="1219921"/></proof>
                                    </goal>
                                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="apply premises" proved="true">
                                    <proof prover="0"><result status="valid" time="2.21"/></proof>
                                    </goal>
                                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="apply premises" proved="true">
                                    <proof prover="1"><result status="valid" time="1.23" steps="916509"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                                 <proof prover="1"><result status="valid" time="1.21" steps="916520"/></proof>
                                 </goal>
                                 <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                                 <proof prover="1"><result status="valid" time="2.04" steps="978458"/></proof>
                                 </goal>
                                 <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                                 <proof prover="1"><result status="valid" time="2.07" steps="978469"/></proof>
                                 </goal>
                                 <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                                 <transf name="replace" proved="true" arg1="n" arg2="(k+&#39; width c +&#39; (n-&#39;&#39; (k+&#39;width c)))">
                                  <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
                                  <transf name="apply" proved="true" arg1="kronecker_ket_l">
                                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.4.0.0" expl="apply premises" proved="true">
                                   <proof prover="1"><result status="valid" time="3.01" steps="1217554"/></proof>
                                   </goal>
                                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.4.0.1" expl="apply premises" proved="true">
                                   <proof prover="1"><result status="valid" time="1.24" steps="916529"/></proof>
                                   </goal>
                                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.4.0.2" expl="apply premises" proved="true">
                                   <transf name="apply" proved="true" arg1="kronecker_ket_l">
                                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.4.0.2.0" expl="apply premises" proved="true">
                                    <proof prover="1"><result status="valid" time="1.22" steps="916511"/></proof>
                                    </goal>
                                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.4.0.2.1" expl="apply premises" proved="true">
                                    <proof prover="1"><result status="valid" time="3.02" steps="1217445"/></proof>
                                    </goal>
                                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.4.0.2.2" expl="apply premises" proved="true">
                                    <proof prover="1"><result status="valid" time="3.11" steps="1228251"/></proof>
                                    </goal>
                                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.4.0.2.3" expl="apply premises" proved="true">
                                    <proof prover="1"><result status="valid" time="3.08" steps="1218096"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.4.0.3" expl="apply premises" proved="true">
                                   <proof prover="0"><result status="valid" time="1.94"/></proof>
                                   </goal>
                                  </transf>
                                  </goal>
                                  <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.4.1" expl="equality hypothesis" proved="true">
                                  <proof prover="1"><result status="valid" time="1.26" steps="916538"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                                 <proof prover="1"><result status="valid" time="3.12" steps="1222285"/></proof>
                                 </goal>
                                 <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                                 <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                                  <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6.0" expl="rewrite premises" proved="true">
                                  <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6.0.0" expl="rewrite premises" proved="true">
                                   <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6.0.0.0" expl="rewrite premises" proved="true">
                                    <transf name="case" proved="true" arg1="(co &lt;&#39;k)">
                                     <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6.0.0.0.0" expl="true case (rewrite premises)" proved="true">
                                     <transf name="rewrite" proved="true" arg1="concat_value_left">
                                      <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6.0.0.0.0.0" expl="true case (rewrite premises)" proved="true">
                                      <transf name="rewrite" proved="true" arg1="concat_value_left">
                                       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6.0.0.0.0.0.0" expl="true case (rewrite premises)" proved="true">
                                       <proof prover="1"><result status="valid" time="3.09" steps="1229681"/></proof>
                                       </goal>
                                       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                                       <proof prover="1"><result status="valid" time="3.10" steps="1224106"/></proof>
                                       </goal>
                                      </transf>
                                      </goal>
                                      <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6.0.0.0.0.1" expl="rewrite premises" proved="true">
                                      <proof prover="1"><result status="valid" time="3.10" steps="1224232"/></proof>
                                      </goal>
                                     </transf>
                                     </goal>
                                     <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6.0.0.0.1" expl="false case (rewrite premises)" proved="true">
                                     <transf name="rewrite" proved="true" arg1="concat_value_right">
                                      <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6.0.0.0.1.0" expl="false case (rewrite premises)" proved="true">
                                      <transf name="rewrite" proved="true" arg1="tpart_value_b">
                                       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6.0.0.0.1.0.0" expl="false case (rewrite premises)" proved="true">
                                       <transf name="rewrite" proved="true" arg1="concat_length">
                                        <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6.0.0.0.1.0.0.0" expl="false case (rewrite premises)" proved="true">
                                        <transf name="rewrite" proved="true" arg1="hpart_length">
                                         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6.0.0.0.1.0.0.0.0" expl="false case (rewrite premises)" proved="true">
                                         <proof prover="0"><result status="valid" time="2.22"/></proof>
                                         </goal>
                                         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                                         <proof prover="1"><result status="valid" time="1.34" steps="916541"/></proof>
                                         </goal>
                                        </transf>
                                        </goal>
                                       </transf>
                                       </goal>
                                       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                                       <proof prover="1"><result status="valid" time="3.11" steps="1217410"/></proof>
                                       </goal>
                                       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                                       <proof prover="1"><result status="valid" time="3.12" steps="1225573"/></proof>
                                       </goal>
                                      </transf>
                                      </goal>
                                      <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6.0.0.0.1.1" expl="rewrite premises" proved="true">
                                      <proof prover="1"><result status="valid" time="3.12" steps="1229577"/></proof>
                                      </goal>
                                     </transf>
                                     </goal>
                                    </transf>
                                    </goal>
                                   </transf>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                               <transf name="rewrite" proved="true" arg1="cont_width">
                                <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                                <transf name="replace" proved="true" arg1="n" arg2="(k+&#39; width c +&#39; (n-&#39;&#39; (k+&#39;width c)))">
                                 <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                                 <transf name="apply" proved="true" arg1="kronecker_ket_l">
                                  <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                                  <proof prover="1"><result status="valid" time="3.06" steps="1217554"/></proof>
                                  </goal>
                                  <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                                  <proof prover="1"><result status="valid" time="1.35" steps="916529"/></proof>
                                  </goal>
                                  <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                                  <transf name="apply" proved="true" arg1="kronecker_ket_l">
                                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0.0.2.0" expl="apply premises" proved="true">
                                   <proof prover="1"><result status="valid" time="1.22" steps="916511"/></proof>
                                   </goal>
                                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0.0.2.1" expl="apply premises" proved="true">
                                   <proof prover="1"><result status="valid" time="3.05" steps="1217445"/></proof>
                                   </goal>
                                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0.0.2.2" expl="apply premises" proved="true">
                                   <proof prover="1"><result status="valid" time="3.11" steps="1228251"/></proof>
                                   </goal>
                                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0.0.2.3" expl="apply premises" proved="true">
                                   <proof prover="1"><result status="valid" time="3.04" steps="1218096"/></proof>
                                   </goal>
                                  </transf>
                                  </goal>
                                  <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0.0.3" expl="apply premises" proved="true">
                                  <proof prover="0"><result status="valid" time="1.80"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                                 <proof prover="1"><result status="valid" time="1.24" steps="916538"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                                <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                                <proof prover="1"><result status="valid" time="1.22" steps="916520"/></proof>
                                </goal>
                                <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                                <proof prover="1"><result status="valid" time="1.99" steps="978458"/></proof>
                                </goal>
                                <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1.3" expl="rewrite premises" proved="true">
                                <proof prover="1"><result status="valid" time="2.02" steps="978469"/></proof>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
                          <proof prover="1"><result status="valid" time="3.11" steps="1219921"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="2"><result status="valid" time="3.96" steps="213519"/></proof>
                      </goal>
                      <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="3.06" steps="1159131"/></proof>
                      </goal>
                      <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="cont_width">
                         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
                         <transf name="replace" proved="true" arg1="n" arg2="(k+&#39; width c +&#39; (n-&#39;&#39; (k+&#39;width c)))">
                          <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="rewrite premises" proved="true">
                          <transf name="apply" proved="true" arg1="kronecker_ket_l">
                           <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                           <proof prover="1"><result status="valid" time="3.01" steps="1217554"/></proof>
                           </goal>
                           <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1" expl="apply premises" proved="true">
                           <proof prover="1"><result status="valid" time="1.28" steps="916529"/></proof>
                           </goal>
                           <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.2" expl="apply premises" proved="true">
                           <transf name="apply" proved="true" arg1="kronecker_ket_l">
                            <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.2.0" expl="apply premises" proved="true">
                            <proof prover="1"><result status="valid" time="1.27" steps="916511"/></proof>
                            </goal>
                            <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.2.1" expl="apply premises" proved="true">
                            <proof prover="1"><result status="valid" time="3.07" steps="1217445"/></proof>
                            </goal>
                            <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.2.2" expl="apply premises" proved="true">
                            <proof prover="1"><result status="valid" time="3.54" steps="1228251"/></proof>
                            </goal>
                            <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.2.3" expl="apply premises" proved="true">
                            <proof prover="1"><result status="valid" time="3.03" steps="1223249"/></proof>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.3" expl="apply premises" proved="true">
                           <proof prover="0"><result status="valid" time="1.84"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1" expl="equality hypothesis" proved="true">
                          <proof prover="1"><result status="valid" time="1.20" steps="916538"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="1"><result status="valid" time="1.23" steps="916520"/></proof>
                         </goal>
                         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.2" expl="rewrite premises" proved="true">
                         <proof prover="1"><result status="valid" time="2.06" steps="978458"/></proof>
                         </goal>
                         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.3" expl="rewrite premises" proved="true">
                         <proof prover="1"><result status="valid" time="2.09" steps="978469"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                       <transf name="replace" proved="true" arg1="(width c +&#39; ket_length (bv_to_ket (hpart x k)))" arg2="(k +&#39; width c)">
                        <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="kronecker_ket_l">
                         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="1"><result status="valid" time="1.19" steps="916511"/></proof>
                         </goal>
                         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                         <proof prover="1"><result status="valid" time="3.12" steps="1217445"/></proof>
                         </goal>
                         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                         <proof prover="1"><result status="valid" time="3.10" steps="1228251"/></proof>
                         </goal>
                         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
                         <transf name="apply" proved="true" arg1="path_sem_ket_l">
                          <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.3.0" expl="apply premises" proved="true">
                          <proof prover="1"><result status="valid" time="2.95" steps="1225054"/></proof>
                          </goal>
                          <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.3.1" expl="apply premises" proved="true">
                          <proof prover="1"><result status="valid" time="1.20" steps="916511"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                        <proof prover="1"><result status="valid" time="3.08" steps="1219479"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="2.92" steps="1134972"/></proof>
                     </goal>
                     <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="n_bvs_card">
                      <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="2.90" steps="1137515"/></proof>
                      </goal>
                      <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.1" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="2.90" steps="1133916"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                      <transf name="replace" proved="true" arg1="(width c +&#39; ket_length (bv_to_ket (hpart x k)))" arg2="(k +&#39; width c)">
                       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="kronecker_ket_l">
                        <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                        <proof prover="1"><result status="valid" time="1.22" steps="916511"/></proof>
                        </goal>
                        <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                        <proof prover="1"><result status="valid" time="3.07" steps="1217445"/></proof>
                        </goal>
                        <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                        <proof prover="1"><result status="valid" time="3.11" steps="1228251"/></proof>
                        </goal>
                        <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
                        <proof prover="1"><result status="valid" time="3.12" steps="1223249"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                       <proof prover="1"><result status="valid" time="3.09" steps="1219479"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="2.91" steps="1134972"/></proof>
                    </goal>
                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="n_bvs_card">
                     <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="3.24" steps="1137515"/></proof>
                     </goal>
                     <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.3.1" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="3.10" steps="1133916"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="path_sem_ket_l">
                      <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                      <proof prover="1"><result status="valid" time="3.57" steps="1225054"/></proof>
                      </goal>
                      <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.39" steps="916511"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.85" steps="1134946"/></proof>
                   </goal>
                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="n_bvs_card">
                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="2.85" steps="1137515"/></proof>
                    </goal>
                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.3.1" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="2.83" steps="1133916"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="3.07" steps="1223249"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="2.87" steps="1134946"/></proof>
                  </goal>
                  <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="n_bvs_card">
                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.87" steps="1137515"/></proof>
                   </goal>
                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.0.3.1" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.88" steps="1133916"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="4.07" steps="213519"/></proof>
                 </goal>
                 <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="1.12" steps="837837"/></proof>
                 </goal>
                 <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.07" steps="1225054"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="2.86" steps="1133916"/></proof>
                </goal>
                <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <transf name="assert" proved="true" arg1="(is_a_ket_l (path_sem c (bv_to_ket (htpart x k (width c)))) (width c))">
                 <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.2.0" expl="asserted formula" proved="true">
                 <transf name="apply" proved="true" arg1="path_sem_ket_l">
                  <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.83" steps="1137482"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.2.0.1" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="1.20" steps="837835"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="1.90" steps="897921"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                <transf name="assert" proved="true" arg1="(is_a_ket_l (path_sem c (bv_to_ket (htpart x k (width c)))) (width c))">
                 <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.3.0" expl="asserted formula" proved="true">
                 <transf name="apply" proved="true" arg1="path_sem_ket_l">
                  <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                   <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.84" steps="1137482"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.3.0.1" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="1.16" steps="837835"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.0.0.3.1" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="2.05" steps="897960"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="2.98" steps="1132816"/></proof>
              </goal>
              <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="1.12" steps="837657"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="1"><result status="valid" time="1.90" steps="897749"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="1.18" steps="837657"/></proof>
            </goal>
            <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="1.14" steps="837657"/></proof>
            </goal>
            <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="2.82" steps="1129753"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="0"><result status="valid" time="2.28"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.11" steps="837657"/></proof>
         </goal>
         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.28" steps="933372"/></proof>
         </goal>
         <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.88" steps="1129753"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.93" steps="1133457"/></proof>
        </goal>
        <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.0.2" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="3.21" steps="1134049"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.33" steps="837666"/></proof>
       </goal>
       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.02" steps="933399"/></proof>
       </goal>
       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.3" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.35" steps="933383"/></proof>
       </goal>
       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.4" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.08" steps="837657"/></proof>
       </goal>
       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.5" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.89" steps="897694"/></proof>
       </goal>
       <goal name="cont_sequence_comm&#39;vc.0.1.0.1.1.6" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="3.29" steps="1138488"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_sequence&#39;vc" expl="VC for cont_sequence" proved="true">
 <proof prover="1"><result status="valid" time="3.04" steps="1121406"/></proof>
 </goal>
 <goal name="place_sequence_comm&#39;vc" expl="VC for place_sequence_comm" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_sequence_comm&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="place_sequence_comm&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.99" steps="1146369"/></proof>
   </goal>
   <goal name="place_sequence_comm&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="place_sequence_comm&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket(ket_to_bv x))">
     <goal name="place_sequence_comm&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="place_kron_bv">
      <goal name="place_sequence_comm&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_comp_">
       <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_comp_">
        <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="place_kron_bv">
         <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="goal_comm">
          <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
           <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
            <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(width (c -- d))" arg2="(width c)">
             <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="place_kron">
              <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.31" steps="838188"/></proof>
              </goal>
              <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.83" steps="897857"/></proof>
              </goal>
              <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.82" steps="1127495"/></proof>
              </goal>
              <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.25" steps="1130121"/></proof>
              </goal>
              <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.4" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="1.50"/></proof>
              </goal>
              <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.0.0.0.0.0.0.5" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.08" steps="838186"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="1"><result status="valid" time="1.93" steps="898294"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.29" steps="838188"/></proof>
         </goal>
         <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.11" steps="838188"/></proof>
         </goal>
         <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.24" steps="1131943"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_to_bv_to_ket">
         <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.86" steps="1128493"/></proof>
         </goal>
         <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.09" steps="838188"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.86" steps="1129090"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
        <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="htpart_length">
         <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.96" steps="898294"/></proof>
         </goal>
         <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.11" steps="838188"/></proof>
         </goal>
         <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.03" steps="1125162"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_sequence_comm&#39;vc.0.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.11" steps="838188"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_sequence_comm&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.31" steps="838188"/></proof>
      </goal>
      <goal name="place_sequence_comm&#39;vc.0.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.90" steps="934133"/></proof>
      </goal>
      <goal name="place_sequence_comm&#39;vc.0.1.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.67" steps="1131943"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="place_sequence_comm&#39;vc.0.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="1"><result status="valid" time="1.83" steps="898253"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_sequence&#39;vc" expl="VC for place_sequence" proved="true">
 <proof prover="1"><result status="valid" time="2.49" steps="1121414"/></proof>
 </goal>
</theory>
<theory name="Gate_outcomes" proved="true">
 <goal name="hadamard_zero&#39;vc" expl="VC for hadamard_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="hadamard_zero&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.06" steps="805175"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="hadamard_one&#39;vc" expl="VC for hadamard_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="hadamard_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.05" steps="805189"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="hadamard_plus&#39;vc" expl="VC for hadamard_plus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="hadamard_plus&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.10" steps="805203"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="hadamard_minus&#39;vc" expl="VC for hadamard_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="hadamard_minus&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.09" steps="805217"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="xx_zero&#39;vc" expl="VC for xx_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="xx_zero&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.73" steps="1086604"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="xx_one&#39;vc" expl="VC for xx_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="xx_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.77" steps="1087129"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="xx_plus&#39;vc" expl="VC for xx_plus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="xx_plus&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(path_sem xx (qbit_plus ()))" arg2="(path_sem_xx (qbit_plus ()))">
   <goal name="xx_plus&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.06" steps="805257"/></proof>
   </goal>
   <goal name="xx_plus&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="2.76" steps="1087502"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="xx_minus&#39;vc" expl="VC for xx_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="xx_minus&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.80" steps="1087867"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="xx_invol&#39;vc" expl="VC for xx_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="xx_invol&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(path_sem xx (path_sem xx x))" arg2="(path_sem_xx (path_sem_xx x))">
   <goal name="xx_invol&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.94" steps="864007"/></proof>
   </goal>
   <goal name="xx_invol&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="2.81" steps="1106263"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="zz_zero&#39;vc" expl="VC for zz_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="zz_zero&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.95" steps="864067"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="zz_one&#39;vc" expl="VC for zz_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="zz_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.91" steps="864098"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="zz_invol&#39;vc" expl="VC for zz_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="zz_invol&#39;vc.0" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="x,1">
   <goal name="zz_invol&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst">
    <goal name="zz_invol&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_sum_">
     <goal name="zz_invol&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_sum_">
      <goal name="zz_invol&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="ket_sum_eq">
       <goal name="zz_invol&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="1.27" steps="805557"/></proof>
       </goal>
       <goal name="zz_invol&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="1.10" steps="805555"/></proof>
       </goal>
       <goal name="zz_invol&#39;vc.0.0.0.0.0.2" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="zz_invol&#39;vc.0.0.0.0.0.2.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="zz_invol&#39;vc.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="path_sem_scal">
          <goal name="zz_invol&#39;vc.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_scal">
           <goal name="zz_invol&#39;vc.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="scalar_eq">
            <goal name="zz_invol&#39;vc.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="case" proved="true" arg1="(bv_to_ket a = qbit_zero())">
             <goal name="zz_invol&#39;vc.0.0.0.0.0.2.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
             <proof prover="1"><result status="valid" time="2.08" steps="944669"/></proof>
             </goal>
             <goal name="zz_invol&#39;vc.0.0.0.0.0.2.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
             <transf name="replace" proved="true" arg1="(bv_to_ket a)" arg2="(qbit_one())">
              <goal name="zz_invol&#39;vc.0.0.0.0.0.2.0.0.0.0.0.1.0" expl="false case (apply premises)" proved="true">
              <proof prover="1"><result status="valid" time="3.07" steps="1197860"/></proof>
              </goal>
              <goal name="zz_invol&#39;vc.0.0.0.0.0.2.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
              <transf name="apply" proved="true" arg1="get_ket_one">
               <goal name="zz_invol&#39;vc.0.0.0.0.0.2.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="3.04" steps="1193921"/></proof>
               </goal>
               <goal name="zz_invol&#39;vc.0.0.0.0.0.2.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="2.19" steps="945182"/></proof>
               </goal>
               <goal name="zz_invol&#39;vc.0.0.0.0.0.2.0.0.0.0.0.1.1.2" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="1.49" steps="884253"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="zz_invol&#39;vc.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="3.55" steps="1197577"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="zz_invol&#39;vc.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="3.09" steps="1193929"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="zz_invol&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.95" steps="1163232"/></proof>
      </goal>
      <goal name="zz_invol&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.14" steps="805564"/></proof>
      </goal>
      <goal name="zz_invol&#39;vc.0.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="zz_invol&#39;vc.0.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="zz_invol&#39;vc.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="path_sem_ket_l">
         <goal name="zz_invol&#39;vc.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="3.12" steps="1200884"/></proof>
         </goal>
         <goal name="zz_invol&#39;vc.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.27" steps="884234"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="zz_invol&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="3.03" steps="1163232"/></proof>
     </goal>
     <goal name="zz_invol&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.01" steps="805564"/></proof>
     </goal>
     <goal name="zz_invol&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="zz_invol&#39;vc.0.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="zz_invol&#39;vc.0.0.0.3.0.0" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="3.16" steps="1200884"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="zz_invol&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.06" steps="805557"/></proof>
    </goal>
    <goal name="zz_invol&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.81" steps="864275"/></proof>
    </goal>
    <goal name="zz_invol&#39;vc.0.0.3" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.85" steps="864283"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="zz_plus&#39;vc" expl="VC for zz_plus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="zz_plus&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.93" steps="864189"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="zz_minus&#39;vc" expl="VC for zz_minus" proved="true">
 <proof prover="1"><result status="valid" time="2.21" steps="864217"/></proof>
 </goal>
 <goal name="ry_zero&#39;vc" expl="VC for ry_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ry_zero&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.93" steps="1090700"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ry_one&#39;vc" expl="VC for ry_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ry_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.78" steps="1090729"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="yy_zero&#39;vc" expl="VC for yy_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="yy_zero&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="get_path_sem_basis">
   <goal name="yy_zero&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_basis&#39;def">
    <goal name="yy_zero&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(range yy)" arg2="0">
     <goal name="yy_zero&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
      <goal name="yy_zero&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="yy_zero&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="scalar_assoc">
        <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="ket_zero_y&#39;spec1">
          <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="apply" proved="true" arg1="goal_comm">
           <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="null_add_ket_l">
            <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="scalar_assoc">
             <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="scalar_assoc">
              <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="scalar_eq_gen">
               <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="goal_comm">
                <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="bv_to_one">
                 <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="yy&#39;def1">
                   <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.46" steps="1288740"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="1.52" steps="1033244"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="yy&#39;def">
                <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="Even_phase_inv">
                 <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="(ang_exp ((- 1) /./ (incr_abs 1)) -. ang_exp (1 /./ (incr_abs 1)))" arg2="(-. ttwo *.im)
">
                  <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="replace" proved="true" arg1="(pow_inv_sqrt_2 0 *. ang_exp (1 /./ 2))" arg2="(ttwo *. pow_inv_sqrt_2 2 *. im)">
                   <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="replace" proved="true" arg1="(im *. ((-. ttwo) *. im))" arg2="ttwo">
                    <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="3.43" steps="1280458"/></proof>
                    </goal>
                    <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                    <proof prover="1"><result status="valid" time="3.79" steps="1316372"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="1"><result status="valid" time="3.53" steps="1281785"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="1"><result status="valid" time="3.91" steps="1320618"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.56" steps="1292183"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="2.54" steps="1097804"/></proof>
            </goal>
            <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="2.58" steps="1097814"/></proof>
            </goal>
            <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="scalar_null_gen">
             <goal name="yy_zero&#39;vc.0.0.0.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="3.44" steps="1280086"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="yy_zero&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.13" steps="819530"/></proof>
      </goal>
      <goal name="yy_zero&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.27" steps="805567"/></proof>
      </goal>
      <goal name="yy_zero&#39;vc.0.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="yy_zero&#39;vc.0.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="scalar_ket_l">
        <goal name="yy_zero&#39;vc.0.0.0.0.3.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
         <goal name="yy_zero&#39;vc.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="yy_zero&#39;vc.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="1.09" steps="805567"/></proof>
          </goal>
          <goal name="yy_zero&#39;vc.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="yy_zero&#39;vc.0.0.0.0.3.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="yy_zero&#39;vc.0.0.0.0.3.0.0.0.1.0.0" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="2.77" steps="1101348"/></proof>
            </goal>
            <goal name="yy_zero&#39;vc.0.0.0.0.3.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="2.80" steps="1101140"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="yy_zero&#39;vc.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.12" steps="819530"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="yy_zero&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="1"><result status="valid" time="1.14" steps="805569"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="yy_zero&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.96" steps="863159"/></proof>
    </goal>
    <goal name="yy_zero&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.11" steps="805569"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="yy_zero&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="1"><result status="valid" time="1.78" steps="863159"/></proof>
   </goal>
   <goal name="yy_zero&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="1"><result status="valid" time="1.10" steps="805569"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="yy_one&#39;vc" expl="VC for yy_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="yy_one&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="get_path_sem_basis">
   <goal name="yy_one&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_basis&#39;def">
    <goal name="yy_one&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(range yy)" arg2="0">
     <goal name="yy_one&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
      <goal name="yy_one&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="yy_one&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="scalar_assoc">
        <goal name="yy_one&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="yy_one&#39;vc.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="ket_one_y&#39;spec">
          <goal name="yy_one&#39;vc.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="add_ket_l_null">
           <goal name="yy_one&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="rewrite" proved="true" arg1="scalar_assoc">
            <goal name="yy_one&#39;vc.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="apply" proved="true" arg1="scalar_eq_gen">
             <goal name="yy_one&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="bv_to_zero">
              <goal name="yy_one&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="yy_one&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="3.31" steps="1293517"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="yy_one&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.47" steps="1033273"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="yy_one&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="yy&#39;def">
              <goal name="yy_one&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
               <goal name="yy_one&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(sin_ang (1 /./ incr_abs 1))" arg2="c_one">
                <goal name="yy_one&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.50" steps="1280609"/></proof>
                </goal>
                <goal name="yy_one&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="1"><result status="valid" time="3.48" steps="1280526"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="yy_one&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="3.84" steps="1325781"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="yy_one&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.60" steps="1097811"/></proof>
           </goal>
           <goal name="yy_one&#39;vc.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.57" steps="1097808"/></proof>
           </goal>
           <goal name="yy_one&#39;vc.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="scalar_null_gen">
            <goal name="yy_one&#39;vc.0.0.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="3.49" steps="1280570"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="yy_one&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.16" steps="819568"/></proof>
      </goal>
      <goal name="yy_one&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.10" steps="805596"/></proof>
      </goal>
      <goal name="yy_one&#39;vc.0.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="yy_one&#39;vc.0.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="scalar_ket_l">
        <goal name="yy_one&#39;vc.0.0.0.0.3.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
         <goal name="yy_one&#39;vc.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="yy_one&#39;vc.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="1.08" steps="805596"/></proof>
          </goal>
          <goal name="yy_one&#39;vc.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="yy_one&#39;vc.0.0.0.0.3.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="yy_one&#39;vc.0.0.0.0.3.0.0.0.1.0.0" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="3.02" steps="1103321"/></proof>
            </goal>
            <goal name="yy_one&#39;vc.0.0.0.0.3.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="3.09" steps="1103214"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="yy_one&#39;vc.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.18" steps="819568"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="yy_one&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="1"><result status="valid" time="1.18" steps="805598"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="yy_one&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.93" steps="863198"/></proof>
    </goal>
    <goal name="yy_one&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.18" steps="805598"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="yy_one&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="1"><result status="valid" time="1.87" steps="863198"/></proof>
   </goal>
   <goal name="yy_one&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="1"><result status="valid" time="1.33" steps="805598"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ry_add_opp&#39;vc" expl="VC for ry_add_opp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ry_add_opp&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="ry_add_opp&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_path_sem">
    <goal name="ry_add_opp&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="unwire_ry">
     <goal name="ry_add_opp&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="unwire_ry">
      <goal name="ry_add_opp&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="1"><result status="valid" time="2.85" steps="1109602"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="ry_add_opp&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="2.03" steps="904347"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ry_add_opp&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="1"><result status="valid" time="2.91" steps="1127209"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ry_twice&#39;vc" expl="VC for ry_twice" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ry_twice&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="ry_twice&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_path_sem">
    <goal name="ry_twice&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="unwire_ry">
     <goal name="ry_twice&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="2.90" steps="1114751"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ry_twice&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="2.01" steps="904440"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ry_twice&#39;vc.0.1" expl="rewrite premises" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_path_sem">
    <goal name="ry_twice&#39;vc.0.1.0" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="2.87" steps="1127810"/></proof>
    </goal>
    <goal name="ry_twice&#39;vc.0.1.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="2.02" steps="904440"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rz_zero&#39;vc" expl="VC for rz_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rz_zero&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.88" steps="1095138"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rz_one&#39;vc" expl="VC for rz_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rz_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.91" steps="1095469"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ry_inv&#39;vc" expl="VC for ry_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ry_inv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="ry_inv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_path_sem">
    <goal name="ry_inv&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="unwire_ry">
     <goal name="ry_inv&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="2.94" steps="1116131"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ry_inv&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="2.06" steps="904652"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ry_inv&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="1"><result status="valid" time="2.87" steps="1112401"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ry_inv_rev&#39;vc" expl="VC for ry_inv_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ry_inv_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.87" steps="1111096"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rz_inv&#39;vc" expl="VC for rz_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rz_inv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="unwire_path_sem">
   <goal name="rz_inv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="unwire_path_sem">
    <goal name="rz_inv&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="unwire_path_sem">
     <goal name="rz_inv&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="unwire_xx">
      <goal name="rz_inv&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="unwire_rz">
       <goal name="rz_inv&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="1"><result status="valid" time="2.98" steps="1116612"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="rz_inv&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.03" steps="905177"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="rz_inv&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.98" steps="904863"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="rz_inv&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="1"><result status="valid" time="2.84" steps="1112794"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rz_inv_rev&#39;vc" expl="VC for rz_inv_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rz_inv_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.30" steps="1111255"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rzp_zero&#39;vc" expl="VC for rzp_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rzp_zero&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_diag_basis">
   <goal name="rzp_zero&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="scalar_c_one_gen">
    <goal name="rzp_zero&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="rzp_zero&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="rzp&#39;spec">
      <goal name="rzp_zero&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(getbv (ket_to_bv (qbit_zero ())) @ 0)" arg2="0">
       <goal name="rzp_zero&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.58" steps="1105688"/></proof>
       </goal>
       <goal name="rzp_zero&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="1"><result status="valid" time="3.25" steps="1292127"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="rzp_zero&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="1"><result status="valid" time="1.94" steps="900263"/></proof>
   </goal>
   <goal name="rzp_zero&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="1"><result status="valid" time="1.13" steps="806317"/></proof>
   </goal>
   <goal name="rzp_zero&#39;vc.0.3" expl="rewrite premises" proved="true">
   <proof prover="1"><result status="valid" time="1.90" steps="865133"/></proof>
   </goal>
   <goal name="rzp_zero&#39;vc.0.4" expl="rewrite premises" proved="true">
   <proof prover="1"><result status="valid" time="2.37" steps="877920"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_phase&#39;vc" expl="VC for path_sem_phase" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_phase&#39;vc.0" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="x,1">
   <goal name="path_sem_phase&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst">
    <goal name="path_sem_phase&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_sum_">
     <goal name="path_sem_phase&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_scalar_rev_l">
      <goal name="path_sem_phase&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="ket_sum_eq">
       <goal name="path_sem_phase&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="1.28" steps="806513"/></proof>
       </goal>
       <goal name="path_sem_phase&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="1.30" steps="806511"/></proof>
       </goal>
       <goal name="path_sem_phase&#39;vc.0.0.0.0.0.2" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="path_sem_phase&#39;vc.0.0.0.0.0.2.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="path_sem_phase&#39;vc.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="path_sem_scal">
          <goal name="path_sem_phase&#39;vc.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_diag">
           <goal name="path_sem_phase&#39;vc.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="2.55" steps="1002574"/></proof>
           </goal>
           <goal name="path_sem_phase&#39;vc.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.50" steps="986251"/></proof>
           </goal>
           <goal name="path_sem_phase&#39;vc.0.0.0.0.0.2.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.54" steps="946141"/></proof>
           </goal>
           <goal name="path_sem_phase&#39;vc.0.0.0.0.0.2.0.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.60" steps="959025"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_phase&#39;vc.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="3.17" steps="1213236"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_phase&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.28" steps="806513"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_phase&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="3.19" steps="1166687"/></proof>
     </goal>
     <goal name="path_sem_phase&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.08" steps="865426"/></proof>
     </goal>
     <goal name="path_sem_phase&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="path_sem_phase&#39;vc.0.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="path_sem_phase&#39;vc.0.0.0.3.0.0" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="3.04" steps="1219573"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_phase&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.05" steps="806513"/></proof>
    </goal>
    <goal name="path_sem_phase&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.84" steps="865321"/></proof>
    </goal>
    <goal name="path_sem_phase&#39;vc.0.0.3" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.90" steps="865329"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rzp_one&#39;vc" expl="VC for rzp_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rzp_one&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_diag_basis">
   <goal name="rzp_one&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="3.11" steps="1115802"/></proof>
   </goal>
   <goal name="rzp_one&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="1"><result status="valid" time="2.14" steps="900387"/></proof>
   </goal>
   <goal name="rzp_one&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="1"><result status="valid" time="1.08" steps="806429"/></proof>
   </goal>
   <goal name="rzp_one&#39;vc.0.3" expl="rewrite premises" proved="true">
   <proof prover="1"><result status="valid" time="2.08" steps="865256"/></proof>
   </goal>
   <goal name="rzp_one&#39;vc.0.4" expl="rewrite premises" proved="true">
   <proof prover="1"><result status="valid" time="2.10" steps="878034"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rz_twice_&#39;vc" expl="VC for rz_twice_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rz_twice_&#39;vc.0" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="x,1">
   <goal name="rz_twice_&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst">
    <goal name="rz_twice_&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_sum_">
     <goal name="rz_twice_&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_sum_">
      <goal name="rz_twice_&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_sum_">
       <goal name="rz_twice_&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq">
        <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.00" steps="806643"/></proof>
        </goal>
        <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.01" steps="806641"/></proof>
        </goal>
        <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_scal">
           <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="path_sem_scal">
            <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="path_sem_scal">
             <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="scalar_eq_gen">
              <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="case" proved="true" arg1="( (bv_to_ket a) = qbit_zero())">
               <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
               <transf name="rewrite" proved="true" arg1="h">
                <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="rz_zero">
                 <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="rz_zero">
                  <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="path_sem_scal">
                   <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                   <transf name="rewrite" proved="true" arg1="rz_zero">
                    <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                    <transf name="rewrite" proved="true" arg1="scalar_assoc">
                     <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                     <proof prover="1"><result status="valid" time="3.29" steps="1206473"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.37" steps="986328"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
               <transf name="replace" proved="true" arg1="(bv_to_ket a)" arg2="(qbit_one())">
                <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0" expl="false case (apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="rz_one">
                 <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0" expl="false case (apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="rz_one">
                  <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.0" expl="false case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="path_sem_scal">
                   <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.0.0" expl="false case (apply premises)" proved="true">
                   <transf name="rewrite" proved="true" arg1="rz_one">
                    <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                    <transf name="rewrite" proved="true" arg1="scalar_assoc">
                     <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                     <transf name="apply" proved="true" arg1="scalar_eq_gen">
                      <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.22" steps="885339"/></proof>
                      </goal>
                      <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                      <proof prover="1"><result status="valid" time="3.25" steps="1203818"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.32" steps="986325"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                <transf name="rewrite" proved="true" arg1="get_ket_one">
                 <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
                 <proof prover="1"><result status="valid" time="1.32" steps="885339"/></proof>
                 </goal>
                 <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.28" steps="1198353"/></proof>
                 </goal>
                 <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1.2" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="2.34" steps="946257"/></proof>
                 </goal>
                 <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1.3" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="1.14" steps="885339"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.17" steps="885320"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="3.20" steps="1213496"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="3.21" steps="1215006"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="rz_twice_&#39;vc.0.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="3.15" steps="1214121"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="rz_twice_&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.96" steps="1166782"/></proof>
       </goal>
       <goal name="rz_twice_&#39;vc.0.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.89" steps="865558"/></proof>
       </goal>
       <goal name="rz_twice_&#39;vc.0.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="rz_twice_&#39;vc.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="rz_twice_&#39;vc.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.23" steps="1219885"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="rz_twice_&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="3.15" steps="1166782"/></proof>
      </goal>
      <goal name="rz_twice_&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.91" steps="865562"/></proof>
      </goal>
      <goal name="rz_twice_&#39;vc.0.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="rz_twice_&#39;vc.0.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="rz_twice_&#39;vc.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="path_sem_ket_l">
         <goal name="rz_twice_&#39;vc.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="3.58" steps="1220475"/></proof>
         </goal>
         <goal name="rz_twice_&#39;vc.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.44" steps="885320"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="rz_twice_&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="3.02" steps="1166782"/></proof>
     </goal>
     <goal name="rz_twice_&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.92" steps="865562"/></proof>
     </goal>
     <goal name="rz_twice_&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="rz_twice_&#39;vc.0.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="rz_twice_&#39;vc.0.0.0.3.0.0" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="3.52" steps="1220475"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="rz_twice_&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.30" steps="806643"/></proof>
    </goal>
    <goal name="rz_twice_&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.85" steps="865453"/></proof>
    </goal>
    <goal name="rz_twice_&#39;vc.0.0.3" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.94" steps="865461"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rzp_twice_&#39;vc" expl="VC for rzp_twice_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rzp_twice_&#39;vc.0" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="x,1">
   <goal name="rzp_twice_&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst">
    <goal name="rzp_twice_&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_sum_">
     <goal name="rzp_twice_&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_sum_">
      <goal name="rzp_twice_&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_sum_">
       <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq">
        <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.08" steps="806726"/></proof>
        </goal>
        <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.04" steps="806724"/></proof>
        </goal>
        <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_scal">
           <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="path_sem_scal">
            <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="path_sem_scal">
             <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="scalar_eq_gen">
              <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="case" proved="true" arg1="( (bv_to_ket a) = qbit_zero())">
               <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
               <proof prover="1"><result status="valid" time="2.16" steps="986433"/></proof>
               </goal>
               <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
               <transf name="replace" proved="true" arg1="(bv_to_ket a)" arg2="(qbit_one())">
                <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0" expl="false case (apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="rzp_one">
                 <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0" expl="false case (apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="rzp_one">
                  <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.0" expl="false case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="path_sem_scal">
                   <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.0.0" expl="false case (apply premises)" proved="true">
                   <transf name="rewrite" proved="true" arg1="rzp_one">
                    <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                    <transf name="rewrite" proved="true" arg1="scalar_assoc">
                     <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                     <transf name="apply" proved="true" arg1="scalar_eq_gen">
                      <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.19" steps="885422"/></proof>
                      </goal>
                      <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                      <proof prover="1"><result status="valid" time="3.21" steps="1202205"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.62" steps="986404"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                <transf name="apply" proved="true" arg1="get_ket_one">
                 <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.42" steps="1198505"/></proof>
                 </goal>
                 <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="2.49" steps="946341"/></proof>
                 </goal>
                 <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.0.1.1.2" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="1.44" steps="885422"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.45" steps="885403"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="3.48" steps="1213636"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="3.53" steps="1215069"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="rzp_twice_&#39;vc.0.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="3.33" steps="1214219"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="rzp_twice_&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="3.29" steps="1166889"/></proof>
       </goal>
       <goal name="rzp_twice_&#39;vc.0.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.11" steps="865642"/></proof>
       </goal>
       <goal name="rzp_twice_&#39;vc.0.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="rzp_twice_&#39;vc.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="rzp_twice_&#39;vc.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.33" steps="1219941"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="rzp_twice_&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="3.27" steps="1166889"/></proof>
      </goal>
      <goal name="rzp_twice_&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.91" steps="865646"/></proof>
      </goal>
      <goal name="rzp_twice_&#39;vc.0.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="rzp_twice_&#39;vc.0.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="rzp_twice_&#39;vc.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="path_sem_ket_l">
         <goal name="rzp_twice_&#39;vc.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="3.00" steps="1220529"/></proof>
         </goal>
         <goal name="rzp_twice_&#39;vc.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.24" steps="885403"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="rzp_twice_&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.92" steps="1166889"/></proof>
     </goal>
     <goal name="rzp_twice_&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.84" steps="865646"/></proof>
     </goal>
     <goal name="rzp_twice_&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="rzp_twice_&#39;vc.0.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="rzp_twice_&#39;vc.0.0.0.3.0.0" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.99" steps="1220529"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="rzp_twice_&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.09" steps="806726"/></proof>
    </goal>
    <goal name="rzp_twice_&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.87" steps="865537"/></proof>
    </goal>
    <goal name="rzp_twice_&#39;vc.0.0.3" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="2.05" steps="865545"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="phase_twice_&#39;vc" expl="VC for phase_twice_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="phase_twice_&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_phase">
   <goal name="phase_twice_&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_phase">
    <goal name="phase_twice_&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_phase">
     <goal name="phase_twice_&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="scalar_assoc">
      <goal name="phase_twice_&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="scalar_eq_gen">
       <goal name="phase_twice_&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="1.01" steps="806656"/></proof>
       </goal>
       <goal name="phase_twice_&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.62" steps="1113980"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="phase_twice_&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.27" steps="806658"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="phase_twice_&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="1.03" steps="806658"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="phase_twice_&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="1"><result status="valid" time="2.52" steps="1114261"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="hadamard_twice_&#39;vc" expl="VC for hadamard_twice_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="hadamard_twice_&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.98" steps="806747"/></proof>
  </goal>
  <goal name="hadamard_twice_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.68" steps="865574"/></proof>
  </goal>
  <goal name="hadamard_twice_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.71" steps="865583"/></proof>
  </goal>
  <goal name="hadamard_twice_&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.85" steps="927480"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Gate_decomp" proved="true">
 <goal name="phase_comm&#39;vc" expl="VC for phase_comm" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="phase_comm&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits_bv">
   <goal name="phase_comm&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="3.14" steps="1162584"/></proof>
   </goal>
   <goal name="phase_comm&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="phase_comm&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="phase_comm&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_comp_">
      <goal name="phase_comm&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_phase">
       <goal name="phase_comm&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_phase">
        <goal name="phase_comm&#39;vc.0.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_scal">
         <goal name="phase_comm&#39;vc.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.08" steps="851853"/></proof>
         </goal>
         <goal name="phase_comm&#39;vc.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.15" steps="1165492"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="phase_comm&#39;vc.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.79" steps="1166662"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="phase_comm&#39;vc.0.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="3.17" steps="1165485"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="phase_comm&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="3.29" steps="1165492"/></proof>
      </goal>
      <goal name="phase_comm&#39;vc.0.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.17" steps="912933"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="phase_comm&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.26" steps="983607"/></proof>
     </goal>
     <goal name="phase_comm&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.22" steps="912933"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="comm_phase&#39;vc" expl="VC for comm_phase" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="comm_phase&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.31" steps="1159198"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rewrite_cnot&#39;vc" expl="VC for rewrite_cnot" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rewrite_cnot&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.13" steps="852028"/></proof>
  </goal>
  <goal name="rewrite_cnot&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.17" steps="914877"/></proof>
  </goal>
  <goal name="rewrite_cnot&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.14" steps="915696"/></proof>
  </goal>
  <goal name="rewrite_cnot&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.22" steps="875646"/></proof>
  </goal>
  <goal name="rewrite_cnot&#39;vc.4" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits_path_sem">
   <goal name="rewrite_cnot&#39;vc.4.0" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="rewrite_cnot&#39;vc.4.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="cnot&#39;spec3">
     <goal name="rewrite_cnot&#39;vc.4.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="1.89" steps="1120969"/></proof>
     </goal>
     <goal name="rewrite_cnot&#39;vc.4.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.92" steps="1120978"/></proof>
     </goal>
     <goal name="rewrite_cnot&#39;vc.4.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.85" steps="1120978"/></proof>
     </goal>
     <goal name="rewrite_cnot&#39;vc.4.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.85" steps="1120967"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="rewrite_cnot&#39;vc.4.1" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="rewrite_cnot&#39;vc.4.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="cnot&#39;spec4">
     <goal name="rewrite_cnot&#39;vc.4.1.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="2.90" steps="1191103"/></proof>
     </goal>
     <goal name="rewrite_cnot&#39;vc.4.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.60" steps="1120978"/></proof>
     </goal>
     <goal name="rewrite_cnot&#39;vc.4.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.86" steps="1120978"/></proof>
     </goal>
     <goal name="rewrite_cnot&#39;vc.4.1.0.3" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.74" steps="1120967"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="rewrite_cnot&#39;vc.4.2" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rewrite_cnot&#39;vc.4.2.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures1">
     <goal name="rewrite_cnot&#39;vc.4.2.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(arc_cos_ang (pow_inv_sqrt_2 (range xx)))" arg2="ang_zero">
      <goal name="rewrite_cnot&#39;vc.4.2.0.0.0" expl="apply premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="rewrite_cnot&#39;vc.4.2.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="cnot&#39;spec">
        <goal name="rewrite_cnot&#39;vc.4.2.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="xx&#39;def">
         <goal name="rewrite_cnot&#39;vc.4.2.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="case" proved="true" arg1="(x co = 0)">
          <goal name="rewrite_cnot&#39;vc.4.2.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
          <proof prover="1"><result status="valid" time="3.06" steps="1200507"/></proof>
          </goal>
          <goal name="rewrite_cnot&#39;vc.4.2.0.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
          <transf name="replace" proved="true" arg1="(x co )" arg2="1">
           <goal name="rewrite_cnot&#39;vc.4.2.0.0.0.0.0.0.1.0" expl="false case (apply premises)" proved="true">
           <proof prover="1"><result status="valid" time="3.04" steps="1200490"/></proof>
           </goal>
           <goal name="rewrite_cnot&#39;vc.4.2.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
           <proof prover="1"><result status="valid" time="4.15" steps="1382420"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="rewrite_cnot&#39;vc.4.2.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.64" steps="1121002"/></proof>
        </goal>
        <goal name="rewrite_cnot&#39;vc.4.2.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.87" steps="1121002"/></proof>
        </goal>
        <goal name="rewrite_cnot&#39;vc.4.2.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.63" steps="1120991"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="rewrite_cnot&#39;vc.4.2.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="assert" proved="true" arg1="(ang_zero =  arc_cos_ang (pow_inv_sqrt_2 (range xx)) )">
       <goal name="rewrite_cnot&#39;vc.4.2.0.0.1.0" expl="asserted formula" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="rewrite_cnot&#39;vc.4.2.0.0.1.0.0" expl="asserted formula" proved="true">
        <transf name="apply" proved="true" arg1="arc_cos_ang&#39;spec">
         <goal name="rewrite_cnot&#39;vc.4.2.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="rewrite_cnot&#39;vc.4.2.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="5.44" steps="1437328"/></proof>
          </goal>
          <goal name="rewrite_cnot&#39;vc.4.2.0.0.1.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="4.00" steps="1381327"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="rewrite_cnot&#39;vc.4.2.0.0.1.0.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="rewrite_cnot&#39;vc.4.2.0.0.1.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="3.16" steps="1192579"/></proof>
          </goal>
          <goal name="rewrite_cnot&#39;vc.4.2.0.0.1.0.0.1.1" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="4.16" steps="1381943"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="rewrite_cnot&#39;vc.4.2.0.0.1.0.0.2" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="4.23" steps="1384116"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="rewrite_cnot&#39;vc.4.2.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="1"><result status="valid" time="1.39" steps="861291"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="rewrite_cnot&#39;vc.4.3" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rewrite_cnot&#39;vc.4.3.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures2">
     <goal name="rewrite_cnot&#39;vc.4.3.0.0" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="rewrite_cnot&#39;vc.4.3.0.0.0" expl="apply premises" proved="true">
      <transf name="case" proved="true" arg1="(i = t)">
       <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.0" expl="true case (apply premises)" proved="true">
       <transf name="eliminate_if" proved="true" >
        <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.0.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="cnot&#39;spec1">
          <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="xx&#39;def1">
           <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
            <proof prover="1"><result status="valid" time="2.13" steps="1153970"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.87" steps="1137978"/></proof>
          </goal>
          <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.97" steps="1137978"/></proof>
          </goal>
          <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.06" steps="1137967"/></proof>
          </goal>
          <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.05" steps="1137969"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.0.0.1" expl="true case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="cnot&#39;spec1">
          <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.0.0.1.0" expl="true case (apply premises)" proved="true">
          <transf name="replace" proved="true" arg1="(x co)" arg2="0">
           <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.0.0.1.0.0" expl="true case (apply premises)" proved="true">
           <proof prover="1"><result status="valid" time="2.21" steps="1153866"/></proof>
           </goal>
           <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
           <proof prover="1"><result status="valid" time="4.56" steps="1393811"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.04" steps="1137986"/></proof>
          </goal>
          <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.05" steps="1137986"/></proof>
          </goal>
          <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.0.0.1.3" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.05" steps="1137975"/></proof>
          </goal>
          <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.0.0.1.4" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.95" steps="1137977"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="rewrite_cnot&#39;vc.4.3.0.0.0.1" expl="false case (apply premises)" proved="true">
       <proof prover="1"><result status="valid" time="4.41" steps="1385938"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rz_not&#39;vc" expl="VC for rz_not" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rz_not&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.57" steps="875996"/></proof>
  </goal>
  <goal name="rz_not&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.56" steps="942119"/></proof>
  </goal>
  <goal name="rz_not&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.89" steps="1289727"/></proof>
  </goal>
  <goal name="rz_not&#39;vc.3" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="rz_not&#39;vc.3.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.91" steps="1005822"/></proof>
   </goal>
   <goal name="rz_not&#39;vc.3.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rz_not&#39;vc.3.1.0" expl="apply premises" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="rz_not&#39;vc.3.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="result&#39;def">
      <goal name="rz_not&#39;vc.3.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_comp_">
       <goal name="rz_not&#39;vc.3.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_comp_">
        <goal name="rz_not&#39;vc.3.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="case" proved="true" arg1="(x = qbit_zero())">
         <goal name="rz_not&#39;vc.3.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
         <proof prover="1"><result status="valid" time="3.65" steps="1174407"/></proof>
         </goal>
         <goal name="rz_not&#39;vc.3.1.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
         <proof prover="1"><result status="valid" time="3.60" steps="1182155"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="rz_not&#39;vc.3.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.44" steps="1003651"/></proof>
        </goal>
        <goal name="rz_not&#39;vc.3.1.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.58" steps="956739"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="rz_not&#39;vc.3.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.40" steps="1003651"/></proof>
       </goal>
       <goal name="rz_not&#39;vc.3.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.48" steps="942257"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ry_not&#39;vc" expl="VC for ry_not" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ry_not&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.49" steps="875796"/></proof>
  </goal>
  <goal name="ry_not&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.55" steps="941914"/></proof>
  </goal>
  <goal name="ry_not&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.82" steps="1288680"/></proof>
  </goal>
  <goal name="ry_not&#39;vc.3" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="ry_not&#39;vc.3.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.81" steps="1005660"/></proof>
   </goal>
   <goal name="ry_not&#39;vc.3.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ry_not&#39;vc.3.1.0" expl="apply premises" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="ry_not&#39;vc.3.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="result&#39;def">
      <goal name="ry_not&#39;vc.3.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_comp_">
       <goal name="ry_not&#39;vc.3.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_comp_">
        <goal name="ry_not&#39;vc.3.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="case" proved="true" arg1="(x = ket_zero)">
         <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
         <proof prover="1"><result status="valid" time="2.81" steps="1025582"/></proof>
         </goal>
         <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
         <proof prover="1"><result status="valid" time="3.74" steps="1181582"/></proof>
         </goal>
        </transf>
        <transf name="case" proved="true" arg1="(x = qbit_zero())">
         <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
         <transf name="replace" proved="true" arg1="(path_sem xx x)" arg2="(qbit_one())">
          <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="unwire_path_sem">
           <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="unwire_xx">
            <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="unwire_path_sem">
             <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
             <transf name="rewrite" proved="true" arg1="unwire_ry">
              <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
              <proof prover="1"><result status="valid" time="3.79" steps="1173968"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="2.79" steps="1004814"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.69" steps="1004883"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="1"><result status="valid" time="2.57" steps="1003532"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
         <transf name="replace" proved="true" arg1="(path_sem xx x)" arg2="(qbit_zero())">
          <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.1.0" expl="false case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="unwire_path_sem">
           <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.1.0.0" expl="false case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="unwire_xx">
            <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.1.0.0.0" expl="false case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="unwire_path_sem">
             <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.1.0.0.0.0" expl="false case (apply premises)" proved="true">
             <transf name="rewrite" proved="true" arg1="unwire_ry">
              <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
              <proof prover="1"><result status="valid" time="3.73" steps="1181789"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="2.78" steps="1004812"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.75" steps="1026138"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="ry_not&#39;vc.3.1.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
          <proof prover="1"><result status="valid" time="2.73" steps="1025861"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="ry_not&#39;vc.3.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.64" steps="1003500"/></proof>
        </goal>
        <goal name="ry_not&#39;vc.3.1.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.70" steps="956539"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="ry_not&#39;vc.3.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.33" steps="1003500"/></proof>
       </goal>
       <goal name="ry_not&#39;vc.3.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.55" steps="942052"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rewrite_rz&#39;vc" expl="VC for rewrite_rz" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rewrite_rz&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.53" steps="876068"/></proof>
  </goal>
  <goal name="rewrite_rz&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.82" steps="1288253"/></proof>
  </goal>
  <goal name="rewrite_rz&#39;vc.2" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits_path_sem">
   <goal name="rewrite_rz&#39;vc.2.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.73" steps="1005679"/></proof>
   </goal>
   <goal name="rewrite_rz&#39;vc.2.1" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.69" steps="1005708"/></proof>
   </goal>
   <goal name="rewrite_rz&#39;vc.2.2" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rewrite_rz&#39;vc.2.2.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures1">
     <goal name="rewrite_rz&#39;vc.2.2.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="rewrite_rz&#39;vc.2.2.0.0.0" expl="apply premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="phase&#39;spec">
        <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="rzp&#39;spec">
         <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="rz&#39;spec">
          <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="phase&#39;spec1">
            <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="case" proved="true" arg1="(x 0 = 0)">
             <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
             <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
              <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
              <proof prover="1"><result status="valid" time="4.72" steps="1484056"/></proof>
              </goal>
              <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="2.21" steps="1229210"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
             <transf name="rewrite" proved="true" arg1="Even_phase_inv">
              <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0" expl="false case (apply premises)" proved="true">
              <transf name="case" proved="true" arg1="(0&lt;=&#39;k)">
               <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0" expl="false case (true case. apply premises)" proved="true">
               <transf name="case" proved="true" arg1="(0=k)">
                <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="false case (true case. apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
                 <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                 <transf name="replace" proved="true" arg1="(1 /./ (-&#39; incr_abs k))" arg2="(-&#39;1/./1)">
                  <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                  <transf name="replace" proved="true" arg1="(1 /./ (incr_abs k))" arg2="(1/./1)">
                   <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                   <transf name="rewrite" proved="true" arg1="int_to_ang_one_odd">
                    <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                    <transf name="rewrite" proved="true" arg1="int_to_ang_one_odd">
                     <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                     <proof prover="1"><result status="valid" time="2.07" steps="1213295"/></proof>
                     </goal>
                     <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="4.65" steps="1481999"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="instantiate" proved="true" arg1="odd_opp" arg2="1">
                     <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="4.68" steps="1482218"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="1"><result status="valid" time="2.24" steps="1229231"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="1"><result status="valid" time="4.69" steps="1481946"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.44" steps="1286180"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="false case (true case. apply premises)" proved="true">
                <transf name="replace" proved="true" arg1="(1 /./ (-&#39; incr_abs k))" arg2="(-&#39;1/./ (k+&#39;1))">
                 <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0" expl="false case (true case. apply premises)" proved="true">
                 <transf name="replace" proved="true" arg1="((x @ 0) /./ k)" arg2="(2/./ (k+&#39;1))">
                  <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="false case (true case. apply premises)" proved="true">
                  <transf name="replace" proved="true" arg1="(1 /./ ( incr_abs k))" arg2="(1/./ (k+&#39;1))">
                   <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0" expl="false case (true case. apply premises)" proved="true">
                   <proof prover="1"><result status="valid" time="4.72" steps="1481371"/></proof>
                   </goal>
                   <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="0"><result status="valid" time="1.80"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1" expl="equality hypothesis" proved="true">
                  <transf name="replace" proved="true" arg1="2" arg2="(x 0 *&#39; power 2 1)">
                   <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
                   <transf name="rewrite" proved="true" arg1="one_mult">
                    <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1.0.0" expl="equality hypothesis" proved="true">
                    <transf name="instantiate" proved="true" arg1="int_to_ang_up" arg2="(x 0),k,1">
                     <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1.0.0.0" expl="equality hypothesis" proved="true">
                     <transf name="replace" proved="true" arg1="(power 2 1)" arg2="((x @ 0) *&#39; power 2 1)">
                      <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
                      <proof prover="1"><result status="valid" time="2.15" steps="1213378"/></proof>
                      </goal>
                      <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
                      <transf name="rewrite" proved="true" arg1="one_mult">
                       <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
                       <proof prover="1"><result status="valid" time="2.09" steps="1213369"/></proof>
                       </goal>
                       <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="4.69" steps="1479873"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="4.58" steps="1477487"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
                   <transf name="rewrite" proved="true" arg1="one_mult">
                    <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1.1.0" expl="equality hypothesis" proved="true">
                    <proof prover="1"><result status="valid" time="3.56" steps="1285509"/></proof>
                    </goal>
                    <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1.1.1" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="4.66" steps="1477487"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
                 <proof prover="0"><result status="valid" time="1.55"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.1" expl="false case (apply premises)" proved="true">
               <transf name="replace" proved="true" arg1="(1 /./ (-&#39; incr_abs k))" arg2="(1/./ (-&#39;k+&#39;1))">
                <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="false case (apply premises)" proved="true">
                <transf name="replace" proved="true" arg1="(1 /./ ( incr_abs k))" arg2="(-&#39;1/./ (-&#39;k+&#39;1))">
                 <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="false case (apply premises)" proved="true">
                 <transf name="replace" proved="true" arg1="((x @ 0) /./ k)" arg2="(-&#39;2 /./ (-&#39;k+&#39;1) )">
                  <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="false case (apply premises)" proved="true">
                  <proof prover="1"><result status="valid" time="4.64" steps="1481283"/></proof>
                  </goal>
                  <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.1.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="replace" proved="true" arg1="((x @ 0) /./ k)" arg2="(-&#39;1 /./ -&#39;k)">
                   <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
                   <proof prover="1"><result status="valid" time="4.64" steps="1481615"/></proof>
                   </goal>
                   <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
                   <proof prover="1"><result status="valid" time="4.79" steps="1481263"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="0"><result status="valid" time="1.68"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
                <proof prover="0"><result status="valid" time="1.68"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="5.40" steps="1516958"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="rewrite_rz&#39;vc.2.2.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="4.78" steps="1477531"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="rewrite_rz&#39;vc.2.3" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rewrite_rz&#39;vc.2.3.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures2">
     <goal name="rewrite_rz&#39;vc.2.3.0.0" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="rewrite_rz&#39;vc.2.3.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="rzp&#39;spec1">
       <goal name="rewrite_rz&#39;vc.2.3.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="rewrite_rz&#39;vc.2.3.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="4.71" steps="1480045"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rewrite_rzp&#39;vc" expl="VC for rewrite_rzp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rewrite_rzp&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.55" steps="876551"/></proof>
  </goal>
  <goal name="rewrite_rzp&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.92" steps="1288280"/></proof>
  </goal>
  <goal name="rewrite_rzp&#39;vc.2" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="rewrite_rzp&#39;vc.2.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.79" steps="1006000"/></proof>
   </goal>
   <goal name="rewrite_rzp&#39;vc.2.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rewrite_rzp&#39;vc.2.1.0" expl="apply premises" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="rewrite_rzp&#39;vc.2.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="result&#39;def">
      <goal name="rewrite_rzp&#39;vc.2.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_comp_">
       <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_phase">
        <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="case" proved="true" arg1="(x = qbit_zero())">
         <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="h">
          <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_scal">
           <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="rz_zero">
            <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="rzp_zero">
             <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
             <transf name="rewrite" proved="true" arg1="scalar_assoc">
              <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
              <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
               <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
               <proof prover="1"><result status="valid" time="1.63" steps="942446"/></proof>
               </goal>
               <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <transf name="rewrite" proved="true" arg1="ang_exp_add_rev">
                <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="3.71" steps="1172637"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.57" steps="1003843"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
         <transf name="replace" proved="true" arg1="x" arg2="(qbit_one())">
          <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.1.0" expl="false case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_scal">
           <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.1.0.0" expl="false case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="rzp_one">
            <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.1.0.0.0" expl="false case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="rz_one">
             <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.1.0.0.0.0" expl="false case (apply premises)" proved="true">
             <transf name="rewrite" proved="true" arg1="scalar_assoc">
              <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
              <transf name="apply" proved="true" arg1="scalar_eq_gen">
               <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="1.61" steps="942450"/></proof>
               </goal>
               <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="ang_exp_add_rev">
                <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.75" steps="1181744"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.80" steps="1005162"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
          <proof prover="1"><result status="valid" time="2.73" steps="1005192"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.60" steps="1003810"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.65" steps="1003818"/></proof>
       </goal>
       <goal name="rewrite_rzp&#39;vc.2.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.74" steps="956853"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rewrite_rx&#39;vc" expl="VC for rewrite_rx" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rewrite_rx&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.57" steps="876452"/></proof>
  </goal>
  <goal name="rewrite_rx&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.59" steps="942575"/></proof>
  </goal>
  <goal name="rewrite_rx&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.88" steps="1289214"/></proof>
  </goal>
  <goal name="rewrite_rx&#39;vc.3" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="rewrite_rx&#39;vc.3.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.78" steps="1006339"/></proof>
   </goal>
   <goal name="rewrite_rx&#39;vc.3.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rewrite_rx&#39;vc.3.1.0" expl="apply premises" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="rewrite_rx&#39;vc.3.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="result&#39;def">
      <goal name="rewrite_rx&#39;vc.3.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="unwire_path_sem">
       <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="unwire_path_sem">
        <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="unwire_rx">
         <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="unwire_sequence">
          <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="unwire_sequence">
           <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="unwire_hadamard">
            <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="unwire_rz">
             <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="rx&#39;spec10">
               <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="path_sem_comp_2">
                <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="path_sem_comp_2">
                 <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="path_sem_comp_2">
                  <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="path_sem_comp_2">
                   <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.16" steps="1267808"/></proof>
                   </goal>
                   <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.84" steps="1340917"/></proof>
                   </goal>
                   <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.83" steps="1337441"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="3.53" steps="1335797"/></proof>
                  </goal>
                  <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="4.92" steps="1502500"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.57" steps="1335797"/></proof>
                 </goal>
                 <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.83" steps="1337446"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="4.85" steps="1502780"/></proof>
                </goal>
                <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="4.79" steps="1500442"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="1.72" steps="957195"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.62" steps="942713"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="rewrite_rx&#39;vc.3.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.72" steps="1026510"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="rewrite_rx&#39;vc.3.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.67" steps="1004175"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rewrite_ry&#39;vc" expl="VC for rewrite_ry" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rewrite_ry&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.60" steps="876583"/></proof>
  </goal>
  <goal name="rewrite_ry&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.79" steps="957118"/></proof>
  </goal>
  <goal name="rewrite_ry&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.01" steps="1340912"/></proof>
  </goal>
  <goal name="rewrite_ry&#39;vc.3" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="rewrite_ry&#39;vc.3.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.92" steps="1006889"/></proof>
   </goal>
   <goal name="rewrite_ry&#39;vc.3.1" expl="apply premises" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="rewrite_ry&#39;vc.3.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="result&#39;def">
     <goal name="rewrite_ry&#39;vc.3.1.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="rewrite_ry&#39;vc.3.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="unwire_path_sem">
       <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="unwire_path_sem">
        <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="unwire_ry">
         <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="ry&#39;spec10">
           <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="path_sem_comp_2">
            <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="path_sem_comp_2">
             <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="unwire_sequence">
              <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="unwire_sequence">
               <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="path_sem_comp_2">
                <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="path_sem_comp_2">
                 <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.12" steps="1340794"/></proof>
                 </goal>
                 <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.12" steps="1340538"/></proof>
                 </goal>
                 <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.16" steps="1340620"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="unwire_rx">
                 <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="4.16" steps="1505630"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="4.07" steps="1505517"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="1.95" steps="1284169"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="2.02" steps="1284169"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="3.16" steps="1340520"/></proof>
             </goal>
             <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="3.15" steps="1340578"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="4.33" steps="1505807"/></proof>
            </goal>
            <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="4.29" steps="1505799"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="rewrite_ry&#39;vc.3.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.65" steps="1030188"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="rewrite_ry&#39;vc.3.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.29" steps="942843"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rewrite_ry_with_z&#39;vc" expl="VC for rewrite_ry_with_z" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rewrite_ry_with_z&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.04" steps="923151"/></proof>
  </goal>
  <goal name="rewrite_ry_with_z&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.37" steps="862329"/></proof>
  </goal>
  <goal name="rewrite_ry_with_z&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.04" steps="923248"/></proof>
  </goal>
  <goal name="rewrite_ry_with_z&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.27" steps="877271"/></proof>
  </goal>
  <goal name="rewrite_ry_with_z&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.49" steps="1007379"/></proof>
  </goal>
  <goal name="rewrite_ry_with_z&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.30" steps="943877"/></proof>
  </goal>
  <goal name="rewrite_ry_with_z&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.26" steps="1007913"/></proof>
  </goal>
  <goal name="rewrite_ry_with_z&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.62" steps="958382"/></proof>
  </goal>
  <goal name="rewrite_ry_with_z&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.25" steps="1008767"/></proof>
  </goal>
  <goal name="rewrite_ry_with_z&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.67" steps="959240"/></proof>
  </goal>
  <goal name="rewrite_ry_with_z&#39;vc.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.76" steps="1083679"/></proof>
  </goal>
  <goal name="rewrite_ry_with_z&#39;vc.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.57" steps="945094"/></proof>
  </goal>
  <goal name="rewrite_ry_with_z&#39;vc.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.23" steps="1010106"/></proof>
  </goal>
  <goal name="rewrite_ry_with_z&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.71" steps="960216"/></proof>
  </goal>
  <goal name="rewrite_ry_with_z&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.77" steps="1396493"/></proof>
  </goal>
  <goal name="rewrite_ry_with_z&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.57" steps="945889"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rewrite_s&#39;vc" expl="VC for rewrite_s" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rewrite_s&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.36" steps="862019"/></proof>
  </goal>
  <goal name="rewrite_s&#39;vc.1" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits_path_sem">
   <goal name="rewrite_s&#39;vc.1.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="1.28" steps="876359"/></proof>
   </goal>
   <goal name="rewrite_s&#39;vc.1.1" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="1.45" steps="876359"/></proof>
   </goal>
   <goal name="rewrite_s&#39;vc.1.2" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rewrite_s&#39;vc.1.2.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.96" steps="1170826"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="rewrite_s&#39;vc.1.3" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rewrite_s&#39;vc.1.3.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.90" steps="1171581"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rewrite_t&#39;vc" expl="VC for rewrite_t" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rewrite_t&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.14" steps="862052"/></proof>
  </goal>
  <goal name="rewrite_t&#39;vc.1" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits_path_sem">
   <goal name="rewrite_t&#39;vc.1.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="1.25" steps="876392"/></proof>
   </goal>
   <goal name="rewrite_t&#39;vc.1.1" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="1.26" steps="876392"/></proof>
   </goal>
   <goal name="rewrite_t&#39;vc.1.2" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rewrite_t&#39;vc.1.2.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="3.04" steps="1171315"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="rewrite_t&#39;vc.1.3" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rewrite_t&#39;vc.1.3.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="3.08" steps="1172069"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rewrite_zz&#39;vc" expl="VC for rewrite_zz" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rewrite_zz&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.40" steps="862085"/></proof>
  </goal>
  <goal name="rewrite_zz&#39;vc.1" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits_path_sem">
   <goal name="rewrite_zz&#39;vc.1.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="1.31" steps="876425"/></proof>
   </goal>
   <goal name="rewrite_zz&#39;vc.1.1" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="1.51" steps="876425"/></proof>
   </goal>
   <goal name="rewrite_zz&#39;vc.1.2" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rewrite_zz&#39;vc.1.2.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.90" steps="1171857"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="rewrite_zz&#39;vc.1.3" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rewrite_zz&#39;vc.1.3.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.93" steps="1172749"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rewrite_xx&#39;vc" expl="VC for rewrite_xx" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rewrite_xx&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.23" steps="867541"/></proof>
  </goal>
  <goal name="rewrite_xx&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.48" steps="942389"/></proof>
  </goal>
  <goal name="rewrite_xx&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.54" steps="1271511"/></proof>
  </goal>
  <goal name="rewrite_xx&#39;vc.3" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="rewrite_xx&#39;vc.3.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="1.44" steps="957244"/></proof>
   </goal>
   <goal name="rewrite_xx&#39;vc.3.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rewrite_xx&#39;vc.3.1.0" expl="apply premises" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="rewrite_xx&#39;vc.3.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="result&#39;def">
      <goal name="rewrite_xx&#39;vc.3.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_comp_">
       <goal name="rewrite_xx&#39;vc.3.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_comp_">
        <goal name="rewrite_xx&#39;vc.3.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="case" proved="true" arg1="(x = qbit_zero())">
         <goal name="rewrite_xx&#39;vc.3.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
         <proof prover="1"><result status="valid" time="2.13" steps="1005041"/></proof>
         </goal>
         <goal name="rewrite_xx&#39;vc.3.1.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
         <transf name="replace" proved="true" arg1="x" arg2="(qbit_one())">
          <goal name="rewrite_xx&#39;vc.3.1.0.0.0.0.0.1.0" expl="false case (apply premises)" proved="true">
          <proof prover="1"><result status="valid" time="2.14" steps="1005010"/></proof>
          </goal>
          <goal name="rewrite_xx&#39;vc.3.1.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
          <proof prover="1"><result status="valid" time="2.21" steps="1005560"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="rewrite_xx&#39;vc.3.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.50" steps="1004238"/></proof>
        </goal>
        <goal name="rewrite_xx&#39;vc.3.1.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.69" steps="957179"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="rewrite_xx&#39;vc.3.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.19" steps="1004238"/></proof>
       </goal>
       <goal name="rewrite_xx&#39;vc.3.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.34" steps="942692"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rewrite_yy&#39;vc" expl="VC for rewrite_yy" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rewrite_yy&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.53" steps="876767"/></proof>
  </goal>
  <goal name="rewrite_yy&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.32" steps="1292006"/></proof>
  </goal>
  <goal name="rewrite_yy&#39;vc.2" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="rewrite_yy&#39;vc.2.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="1.47" steps="957299"/></proof>
   </goal>
   <goal name="rewrite_yy&#39;vc.2.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rewrite_yy&#39;vc.2.1.0" expl="apply premises" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="rewrite_yy&#39;vc.2.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="result&#39;def">
      <goal name="rewrite_yy&#39;vc.2.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_comp_">
       <goal name="rewrite_yy&#39;vc.2.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_phase">
        <goal name="rewrite_yy&#39;vc.2.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="3.05" steps="1180521"/></proof>
        </goal>
        <goal name="rewrite_yy&#39;vc.2.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.12" steps="1004381"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="rewrite_yy&#39;vc.2.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.19" steps="1004389"/></proof>
       </goal>
       <goal name="rewrite_yy&#39;vc.2.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.44" steps="957289"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rewrite_hadamard&#39;vc" expl="VC for rewrite_hadamard" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rewrite_hadamard&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.49" steps="876641"/></proof>
  </goal>
  <goal name="rewrite_hadamard&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.26" steps="1273569"/></proof>
  </goal>
  <goal name="rewrite_hadamard&#39;vc.2" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="rewrite_hadamard&#39;vc.2.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="1.65" steps="957173"/></proof>
   </goal>
   <goal name="rewrite_hadamard&#39;vc.2.1" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="3.29" steps="1288447"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_hadamard_with_ry&#39;vc" expl="VC for place_hadamard_with_ry" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_hadamard_with_ry&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.38" steps="862372"/></proof>
  </goal>
  <goal name="place_hadamard_with_ry&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.11" steps="922079"/></proof>
  </goal>
  <goal name="place_hadamard_with_ry&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.17" steps="862806"/></proof>
  </goal>
  <goal name="place_hadamard_with_ry&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.91" steps="922706"/></proof>
  </goal>
  <goal name="place_hadamard_with_ry&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.33" steps="863501"/></proof>
  </goal>
  <goal name="place_hadamard_with_ry&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.89" steps="923658"/></proof>
  </goal>
  <goal name="place_hadamard_with_ry&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.94" steps="924469"/></proof>
  </goal>
  <goal name="place_hadamard_with_ry&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.15" steps="1007475"/></proof>
  </goal>
  <goal name="place_hadamard_with_ry&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.28" steps="1284762"/></proof>
  </goal>
  <goal name="place_hadamard_with_ry&#39;vc.9" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="place_hadamard_with_ry&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="place_hadamard_with_ry&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="set_equiv_circuits">
     <goal name="place_hadamard_with_ry&#39;vc.9.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="3.13" steps="1165851"/></proof>
     </goal>
     <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
       <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_comp_">
        <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_comp_">
         <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="place_kron_bv">
          <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="place_kron_bv">
           <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
            <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="place_kron_exp">
             <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="place_kron_exp">
              <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
               <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_eq">
                <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                </transf>
                </goal>
                <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="kronecker_eq">
                 <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                 <transf name="instantiate" proved="true" arg1="ry_inv_rev" arg2="3,(path_sem (ry 3) (bv_to_ket (htpart (ket_to_bv x) t (width (ry 3)))))">
                  <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                  <transf name="replace" proved="true" arg1="(path_sem (ry (- 3))
  (path_sem xx
   (path_sem (ry 3) (bv_to_ket (htpart (ket_to_bv x) t (width (ry 3)))))))" arg2="(path_sem xx
    (path_sem (ry 3)
     (path_sem (ry 3) (bv_to_ket (htpart (ket_to_bv x) t (width (ry 3)))))))
">
                   <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                   <transf name="replace" proved="true" arg1="3" arg2="(incr_abs 2)">
                    <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="ry_twice">
                     <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="replace" proved="true" arg1="( path_sem xx
  (path_sem (ry 2)
   (bv_to_ket (htpart (ket_to_bv x) t (width (ry (incr_abs 2)))))))" arg2="(path_sem (rewrite_hadamard()) (bv_to_ket (htpart (ket_to_bv x) t (width (ry (incr_abs 2))))))

">
                      <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="replace" proved="true" arg1="(width (ry (incr_abs 2)))" arg2="(width hadamard)
">
                       <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="apply" proved="true" arg1="get_equiv_circuits">
                        <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <proof prover="1"><result status="valid" time="2.38" steps="1008838"/></proof>
                        </goal>
                        <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                        <proof prover="1"><result status="valid" time="3.17" steps="1206207"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                       <proof prover="1"><result status="valid" time="2.47" steps="1008861"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                      <proof prover="1"><result status="valid" time="3.31" steps="1212951"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="3.51" steps="1208560"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
                    <proof prover="1"><result status="valid" time="3.31" steps="1202390"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="1"><result status="valid" time="3.33" steps="1204333"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="1.46" steps="959510"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="1.31" steps="944840"/></proof>
              </goal>
              <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="2.14" steps="1007361"/></proof>
              </goal>
              <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="3.02" steps="1170715"/></proof>
              </goal>
              <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="3.04" steps="1203732"/></proof>
              </goal>
              <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
               <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.0.5.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="3.06" steps="1177922"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="1.24" steps="944840"/></proof>
             </goal>
             <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="2.11" steps="1007361"/></proof>
             </goal>
             <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="3.02" steps="1170715"/></proof>
             </goal>
             <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="3.03" steps="1203257"/></proof>
             </goal>
             <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
              <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.0.0.5.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.03" steps="1177933"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="1.27" steps="944840"/></proof>
           </goal>
           <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.10" steps="1007361"/></proof>
           </goal>
           <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="3.02" steps="1171984"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.28" steps="944840"/></proof>
          </goal>
          <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.11" steps="1007361"/></proof>
          </goal>
          <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.98" steps="1171984"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.20" steps="1023786"/></proof>
         </goal>
         <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.28" steps="1007562"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.49" steps="1023786"/></proof>
        </goal>
        <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.07" steps="1007567"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="place_hadamard_with_ry&#39;vc.9.0.0.1.0.1" expl="equality hypothesis" proved="true">
       <proof prover="1"><result status="valid" time="2.19" steps="1008695"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_hadamard&#39;vc" expl="VC for cont_hadamard" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_hadamard&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.15" steps="862699"/></proof>
  </goal>
  <goal name="cont_hadamard&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.87" steps="922427"/></proof>
  </goal>
  <goal name="cont_hadamard&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_hadamard&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.12" steps="863131"/></proof>
   </goal>
   <goal name="cont_hadamard&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.29" steps="863146"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_hadamard&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.32" steps="863153"/></proof>
  </goal>
  <goal name="cont_hadamard&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_hadamard&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.33" steps="863156"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_hadamard&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.34" steps="863815"/></proof>
  </goal>
  <goal name="cont_hadamard&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.91" steps="923905"/></proof>
  </goal>
  <goal name="cont_hadamard&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.91" steps="924692"/></proof>
  </goal>
  <goal name="cont_hadamard&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.15" steps="1007697"/></proof>
  </goal>
  <goal name="cont_hadamard&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.55" steps="1284816"/></proof>
  </goal>
  <goal name="cont_hadamard&#39;vc.10" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_hadamard&#39;vc.10.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cont_hadamard&#39;vc.10.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="set_equiv_circuits">
     <goal name="cont_hadamard&#39;vc.10.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="3.40" steps="1166219"/></proof>
     </goal>
     <goal name="cont_hadamard&#39;vc.10.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="cont_hadamard&#39;vc.10.0.0.1.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
       <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="case" proved="true" arg1="(getbv (ket_to_bv x) co = 0)">
        <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0" expl="true case (apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="path_cont_ketz">
         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="path_sem_comp_">
          <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_comp_">
           <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="place_kron_bv">
            <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
            <transf name="replace" proved="true" arg1="(path_sem (cnot co t n)
   (kronecker
    (kronecker (bv_to_ket (hpart (ket_to_bv x) t))
     (path_sem (ry 3) (bv_to_ket (htpart (ket_to_bv x) t (width (ry 3))))))
    (bv_to_ket (tpart (ket_to_bv x) (t +&#39; width (ry 3))))))" arg2="(path_sem (rewrite_cnot co t n)
   (kronecker
    (kronecker (bv_to_ket (hpart (ket_to_bv x) t))
     (path_sem (ry 3) (bv_to_ket (htpart (ket_to_bv x) t (width (ry 3))))))
    (bv_to_ket (tpart (ket_to_bv x) (t +&#39; width (ry 3))))))">
             <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
             <transf name="rewrite" proved="true" arg1="rewrite_cnot&#39;def">
              <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
              <transf name="replace" proved="true" arg1="(path_sem (cont xx co t n)
   (kronecker
    (kronecker (bv_to_ket (hpart (ket_to_bv x) t))
     (path_sem (ry 3) (bv_to_ket (htpart (ket_to_bv x) t (width (ry 3))))))
    (bv_to_ket (tpart (ket_to_bv x) (t +&#39; width (ry 3))))))" arg2="(kronecker
    (kronecker (bv_to_ket (hpart (ket_to_bv x) t))
     (path_sem (ry 3) (bv_to_ket (htpart (ket_to_bv x) t (width (ry 3))))))
    (bv_to_ket (tpart (ket_to_bv x) (t +&#39; width (ry 3)))))">
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
               <transf name="replace" proved="true" arg1="(-3)" arg2="(-&#39; 3)">
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="place_kron_exp">
                  <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="ry_add_opp">
                   <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                   <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
                    <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                    <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                     <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                     <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                      <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                      <transf name="rewrite" proved="true" arg1="bv_decomp_hhtt_rev">
                       <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                       <proof prover="1"><result status="valid" time="1.59" steps="945178"/></proof>
                       </goal>
                       <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="1.56" steps="945180"/></proof>
                       </goal>
                       <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="1.72" steps="959777"/></proof>
                       </goal>
                       <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="3.39" steps="1175548"/></proof>
                       </goal>
                       <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="1.49" steps="945178"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.56" steps="1173192"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="1.59" steps="945180"/></proof>
                  </goal>
                  <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="2.55" steps="1007635"/></proof>
                  </goal>
                  <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="3.50" steps="1173005"/></proof>
                  </goal>
                  <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="3.28" steps="1174442"/></proof>
                  </goal>
                  <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                   <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.5.0" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.71" steps="1180529"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="1"><result status="valid" time="1.63" steps="945183"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
               <transf name="rewrite" proved="true" arg1="cont_kron_zero">
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
                <proof prover="1"><result status="valid" time="1.58" steps="945178"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.61" steps="945189"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="2.61" steps="1007663"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.1.3" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="2.64" steps="1008548"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.1.4" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="3.71" steps="1173005"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.1.5" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="3.69" steps="1174432"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.1.6" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.1.6.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="4.08" steps="1180515"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.1.7" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="2.90" steps="1009018"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.1.8" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="2.69" steps="1009052"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.1.9" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="4.02" steps="1175485"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.0.1.10" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="3.70" steps="1179687"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="replace" proved="true" arg1="(path_sem (cont xx co t n)
   (kronecker
    (kronecker (bv_to_ket (hpart (ket_to_bv x) t))
     (path_sem (ry 3) (bv_to_ket (htpart (ket_to_bv x) t (width (ry 3))))))
    (bv_to_ket (tpart (ket_to_bv x) (t +&#39; width (ry 3))))))" arg2="(kronecker
    (kronecker (bv_to_ket (hpart (ket_to_bv x) t))
     (path_sem (ry 3) (bv_to_ket (htpart (ket_to_bv x) t (width (ry 3))))))
    (bv_to_ket (tpart (ket_to_bv x) (t +&#39; width (ry 3)))))">
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="1.56" steps="945189"/></proof>
               </goal>
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
               <transf name="rewrite" proved="true" arg1="cont_kron_zero">
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
                <proof prover="1"><result status="valid" time="1.55" steps="945178"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.57" steps="945189"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.1.1.2" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="2.54" steps="1007663"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.1.1.3" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="2.56" steps="1008548"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.1.1.4" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="3.60" steps="1173005"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.1.1.5" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="4.02" steps="1174432"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.1.1.6" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.1.1.6.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.75" steps="1180515"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.1.1.7" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="2.71" steps="1009018"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.1.1.8" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="2.66" steps="1009052"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.1.1.9" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="3.68" steps="1175485"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.1.1.10" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="4.02" steps="1179687"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="1.54" steps="945189"/></proof>
              </goal>
              <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="1.63" steps="945187"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <transf name="apply" proved="true" arg1="get_equiv_circuits">
              <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(width (cnot co t n))" arg2="(t+&#39;1 +&#39; (n-&#39;&#39;t-&#39;&#39;1))">
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="3.65" steps="1170665"/></proof>
               </goal>
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
               <proof prover="1"><result status="valid" time="1.72" steps="945213"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(width (cnot co t n))" arg2="(t +&#39; 1 +&#39; (n-&#39;&#39;t-&#39;&#39;1))">
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.60" steps="1007627"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="1.70" steps="945216"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="kronecker_ket_l">
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.1.1.0.2.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="1.73" steps="945180"/></proof>
                 </goal>
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.1.1.0.2.1" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="1.69" steps="945187"/></proof>
                 </goal>
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.1.1.0.2.2" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.65" steps="1173005"/></proof>
                 </goal>
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.1.1.0.2.3" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.62" steps="1174432"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.1.1.0.3" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.1.1.0.3.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.73" steps="1180530"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.0.1.1.1" expl="equality hypothesis" proved="true">
               <proof prover="1"><result status="valid" time="1.48" steps="945213"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="1.56" steps="945180"/></proof>
            </goal>
            <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="2.55" steps="1007635"/></proof>
            </goal>
            <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="3.65" steps="1173714"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.58" steps="1024129"/></proof>
           </goal>
           <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.55" steps="1007841"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.69" steps="1024129"/></proof>
          </goal>
          <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.83" steps="1007846"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.46" steps="945189"/></proof>
         </goal>
         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.78" steps="1007663"/></proof>
         </goal>
         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.84" steps="1008548"/></proof>
         </goal>
         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.4" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.74" steps="1024129"/></proof>
         </goal>
         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.5" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.71" steps="1009011"/></proof>
         </goal>
         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.0.6" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.70" steps="1024193"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1" expl="false case (apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="path_cont_keto">
         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0" expl="false case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="path_sem_comp_">
          <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0" expl="false case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_comp_">
           <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0" expl="false case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="place_kron_bv">
            <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0" expl="false case (apply premises)" proved="true">
            <transf name="replace" proved="true" arg1="(path_sem (cnot co t n)
   (kronecker
    (kronecker (bv_to_ket (hpart (ket_to_bv x) t))
     (path_sem (ry 3) (bv_to_ket (htpart (ket_to_bv x) t (width (ry 3))))))
    (bv_to_ket (tpart (ket_to_bv x) (t +&#39; width (ry 3))))))" arg2="(path_sem (rewrite_cnot co t n)
   (kronecker
    (kronecker (bv_to_ket (hpart (ket_to_bv x) t))
     (path_sem (ry 3) (bv_to_ket (htpart (ket_to_bv x) t (width (ry 3))))))
    (bv_to_ket (tpart (ket_to_bv x) (t +&#39; width (ry 3))))))">
             <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
             <transf name="rewrite" proved="true" arg1="rewrite_cnot&#39;def">
              <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
              <transf name="rewrite" proved="true" arg1="cont_kron_one">
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
               <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="place_kron_exp">
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="place_kron_exp">
                  <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                  <transf name="replace" proved="true" arg1="(path_sem (place hadamard t n) (bv_to_ket (ket_to_bv x)))" arg2="(path_sem (place_hadamard_with_ry t n) (bv_to_ket (ket_to_bv x)))">
                   <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                   <transf name="rewrite" proved="true" arg1="place_hadamard_with_ry&#39;def">
                    <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
                     <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                     <transf name="rewrite" proved="true" arg1="path_sem_comp_">
                      <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                      <transf name="rewrite" proved="true" arg1="place_kron_bv">
                       <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                       <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                        <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                        <transf name="rewrite" proved="true" arg1="place_kron_exp">
                         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                         <transf name="rewrite" proved="true" arg1="place_kron_exp">
                          <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                          <transf name="compute_specified" proved="true" >
                          </transf>
                          </goal>
                          <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                          <proof prover="1"><result status="valid" time="1.49" steps="945184"/></proof>
                          </goal>
                          <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                          <proof prover="1"><result status="valid" time="2.80" steps="1007634"/></proof>
                          </goal>
                          <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                          <proof prover="1"><result status="valid" time="4.02" steps="1173110"/></proof>
                          </goal>
                          <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                          <proof prover="1"><result status="valid" time="3.91" steps="1175022"/></proof>
                          </goal>
                          <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                          <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                           <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5.0" expl="apply premises" proved="true">
                           <proof prover="1"><result status="valid" time="3.72" steps="1180691"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="1"><result status="valid" time="1.56" steps="945184"/></proof>
                         </goal>
                         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                         <proof prover="1"><result status="valid" time="2.46" steps="1007634"/></proof>
                         </goal>
                         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                         <proof prover="1"><result status="valid" time="3.47" steps="1173110"/></proof>
                         </goal>
                         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                         <proof prover="1"><result status="valid" time="3.57" steps="1174582"/></proof>
                         </goal>
                         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                         <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                          <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5.0" expl="apply premises" proved="true">
                          <proof prover="1"><result status="valid" time="3.76" steps="1180677"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="1.53" steps="945184"/></proof>
                       </goal>
                       <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="2.45" steps="1007634"/></proof>
                       </goal>
                       <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="3.89" steps="1173795"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="2.91" steps="1024151"/></proof>
                      </goal>
                      <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="3.57" steps="1173894"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="3.96" steps="1196060"/></proof>
                     </goal>
                     <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="3.67" steps="1174372"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.55" steps="945193"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                   <transf name="apply" proved="true" arg1="get_equiv_circuits">
                    <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="3.38" steps="1170842"/></proof>
                    </goal>
                    <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="3.60" steps="1195666"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="1.58" steps="945184"/></proof>
                  </goal>
                  <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="2.36" steps="1007634"/></proof>
                  </goal>
                  <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="3.44" steps="1173110"/></proof>
                  </goal>
                  <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="3.42" steps="1175022"/></proof>
                  </goal>
                  <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                   <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.5.0" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.78" steps="1180691"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="1.36" steps="945184"/></proof>
                 </goal>
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="2.36" steps="1007634"/></proof>
                 </goal>
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.32" steps="1173110"/></proof>
                 </goal>
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.37" steps="1174582"/></proof>
                 </goal>
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                  <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.0.0.5.0" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="3.40" steps="1180677"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="1.36" steps="945193"/></proof>
               </goal>
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="2.34" steps="1007662"/></proof>
               </goal>
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="2.40" steps="1008562"/></proof>
               </goal>
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="3.38" steps="1173110"/></proof>
               </goal>
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="3.31" steps="1174582"/></proof>
               </goal>
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.6.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.50" steps="1180682"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="2.54" steps="1009040"/></proof>
               </goal>
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="2.53" steps="1009074"/></proof>
               </goal>
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.9" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="3.50" steps="1176029"/></proof>
               </goal>
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.0.10" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="3.55" steps="1179885"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="replace" proved="true" arg1="(path_sem (cont xx co t n)
   (kronecker
    (kronecker (bv_to_ket (hpart (ket_to_bv x) t))
     (path_sem (ry 3) (bv_to_ket (htpart (ket_to_bv x) t (width (ry 3))))))
    (bv_to_ket (tpart (ket_to_bv x) (t +&#39; width (ry 3))))))" arg2="(path_sem (place xx  t n)
   (kronecker
    (kronecker (bv_to_ket (hpart (ket_to_bv x) t))
     (path_sem (ry 3) (bv_to_ket (htpart (ket_to_bv x) t (width (ry 3))))))
    (bv_to_ket (tpart (ket_to_bv x) (t +&#39; width (ry 3))))))">
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
               <transf name="replace" proved="true" arg1="(path_sem (place hadamard t n) (bv_to_ket (ket_to_bv x)))" arg2="(path_sem (place_hadamard_with_ry t n) (bv_to_ket (ket_to_bv x)))">
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.40" steps="945193"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                <transf name="apply" proved="true" arg1="get_equiv_circuits">
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.37" steps="1170842"/></proof>
                 </goal>
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.83" steps="1195666"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
               <transf name="apply" proved="true" arg1="cont_kron_one">
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="1.54" steps="945193"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.56" steps="1007662"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.1.1.2" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.57" steps="1008562"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.1.1.3" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.50" steps="1173110"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.1.1.4" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.67" steps="1174582"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.1.1.5" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.1.1.5.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="4.07" steps="1180682"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.1.1.6" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.68" steps="1009040"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.1.1.7" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.48" steps="1009074"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.1.1.8" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.41" steps="1176029"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.1.1.9" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.69" steps="1179885"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="1.50" steps="945193"/></proof>
              </goal>
              <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="1.56" steps="945191"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <transf name="apply" proved="true" arg1="get_equiv_circuits">
              <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(width (cnot co t n))" arg2="(t+&#39;1 +&#39; (n-&#39;&#39;t-&#39;&#39;1))">
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="3.56" steps="1170740"/></proof>
               </goal>
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
               <proof prover="1"><result status="valid" time="1.49" steps="945217"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(width (cnot co t n))" arg2="(t +&#39; 1 +&#39; (n-&#39;&#39;t-&#39;&#39;1))">
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.1.1.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.60" steps="1007626"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="1.58" steps="945220"/></proof>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="kronecker_ket_l">
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.1.1.0.2.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="1.52" steps="945184"/></proof>
                 </goal>
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.1.1.0.2.1" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="1.52" steps="945191"/></proof>
                 </goal>
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.1.1.0.2.2" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.82" steps="1173110"/></proof>
                 </goal>
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.1.1.0.2.3" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.68" steps="1174582"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.1.1.0.3" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                 <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.1.1.0.3.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.71" steps="1180692"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.0.1.1.1" expl="equality hypothesis" proved="true">
               <proof prover="1"><result status="valid" time="1.67" steps="945217"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="1.62" steps="945184"/></proof>
            </goal>
            <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="2.43" steps="1007634"/></proof>
            </goal>
            <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="3.90" steps="1173795"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.89" steps="1024151"/></proof>
           </goal>
           <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.86" steps="1007840"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.70" steps="1024151"/></proof>
          </goal>
          <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.62" steps="1007845"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.63" steps="945193"/></proof>
         </goal>
         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.59" steps="1007662"/></proof>
         </goal>
         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.3" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.61" steps="1008562"/></proof>
         </goal>
         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.4" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.97" steps="1024151"/></proof>
         </goal>
         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.5" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.88" steps="1009033"/></proof>
         </goal>
         <goal name="cont_hadamard&#39;vc.10.0.0.1.0.0.1.6" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.37" steps="1173169"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="cont_hadamard&#39;vc.10.0.0.1.0.1" expl="equality hypothesis" proved="true">
       <proof prover="1"><result status="valid" time="2.46" steps="1008984"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_ry&#39;vc" expl="VC for cont_ry" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_ry&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_ry&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.40" steps="854145"/></proof>
   </goal>
   <goal name="cont_ry&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.36" steps="854160"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_ry&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_ry&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.32" steps="854154"/></proof>
   </goal>
   <goal name="cont_ry&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.34" steps="854169"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_ry&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_ry&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.31" steps="854170"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_ry&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.43" steps="863619"/></proof>
  </goal>
  <goal name="cont_ry&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.36" steps="923456"/></proof>
  </goal>
  <goal name="cont_ry&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_ry&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.42" steps="864053"/></proof>
   </goal>
   <goal name="cont_ry&#39;vc.5.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.41" steps="864068"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_ry&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_ry&#39;vc.6.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.35" steps="864062"/></proof>
   </goal>
   <goal name="cont_ry&#39;vc.6.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.51" steps="864077"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_ry&#39;vc.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_ry&#39;vc.7.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.46" steps="864078"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_ry&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.43" steps="864665"/></proof>
  </goal>
  <goal name="cont_ry&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.24" steps="924848"/></proof>
  </goal>
  <goal name="cont_ry&#39;vc.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.38" steps="925634"/></proof>
  </goal>
  <goal name="cont_ry&#39;vc.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.65" steps="1008754"/></proof>
  </goal>
  <goal name="cont_ry&#39;vc.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.59" steps="1009353"/></proof>
  </goal>
  <goal name="cont_ry&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.81" steps="1288951"/></proof>
  </goal>
  <goal name="cont_ry&#39;vc.14" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_ry&#39;vc.14.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cont_ry&#39;vc.14.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="set_equiv_circuits">
     <goal name="cont_ry&#39;vc.14.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="3.82" steps="1170479"/></proof>
     </goal>
     <goal name="cont_ry&#39;vc.14.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="cont_ry&#39;vc.14.0.0.1.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
       <goal name="cont_ry&#39;vc.14.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="case" proved="true" arg1="((getbv (ket_to_bv x) @ co) = 0)">
        <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0" expl="true case (apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="path_cont_ketz">
         <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="path_sem_comp_">
          <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_comp_">
           <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="path_sem_comp_">
            <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="place_kron_bv">
             <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
             <transf name="replace" proved="true" arg1="(path_sem (cnot co t n)
    (kronecker
     (kronecker (bv_to_ket (hpart (ket_to_bv x) t))
      (path_sem (ry (incr_abs k))
       (bv_to_ket (htpart (ket_to_bv x) t (width (ry (incr_abs k)))))))
     (bv_to_ket (tpart (ket_to_bv x) (t +&#39; width (ry (incr_abs k)))))))" arg2="(path_sem (rewrite_cnot co t n)
    (kronecker
     (kronecker (bv_to_ket (hpart (ket_to_bv x) t))
      (path_sem (ry (incr_abs k))
       (bv_to_ket (htpart (ket_to_bv x) t (width (ry (incr_abs k)))))))
     (bv_to_ket (tpart (ket_to_bv x) (t +&#39; width (ry (incr_abs k)))))))">
              <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
              <transf name="rewrite" proved="true" arg1="rewrite_cnot&#39;def">
               <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
               <transf name="replace" proved="true" arg1="(path_sem (cont xx co t n)
    (kronecker
     (kronecker (bv_to_ket (hpart (ket_to_bv x) t))
      (path_sem (ry (incr_abs k))
       (bv_to_ket (htpart (ket_to_bv x) t (width (ry (incr_abs k)))))))
     (bv_to_ket (tpart (ket_to_bv x) (t +&#39; width (ry (incr_abs k)))))))" arg2="(    (kronecker
     (kronecker (bv_to_ket (hpart (ket_to_bv x) t))
      (path_sem (ry (incr_abs k))
       (bv_to_ket (htpart (ket_to_bv x) t (width (ry (incr_abs k)))))))
     (bv_to_ket (tpart (ket_to_bv x) (t +&#39; width (ry (incr_abs k)))))))">
                <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                <transf name="replace" proved="true" arg1="(path_sem (place (ry (-&#39; incr_abs k)) t n)
   (kronecker
    (kronecker (bv_to_ket (hpart (ket_to_bv x) t))
     (path_sem (ry (incr_abs k))
      (bv_to_ket (htpart (ket_to_bv x) t (width (ry (incr_abs k)))))))
    (bv_to_ket (tpart (ket_to_bv x) (t +&#39; width (ry (incr_abs k)))))))" arg2="(bv_to_ket (ket_to_bv x))">
                 <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="sem_ind_cnot1">
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                   <proof prover="1"><result status="valid" time="2.45" steps="1271737"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.41" steps="1271748"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.29" steps="1271748"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.23" steps="1271746"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.63" steps="1344614"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.47" steps="1340901"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.50" steps="1344692"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                 <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                  <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
                  <transf name="rewrite" proved="true" arg1="place_kron_exp">
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
                   <transf name="rewrite" proved="true" arg1="ry_add_opp">
                    <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                    <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
                     <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
                     <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                      <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="equality hypothesis" proved="true">
                      <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                       <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="equality hypothesis" proved="true">
                       <transf name="rewrite" proved="true" arg1="bv_decomp_hhtt_rev">
                        <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="equality hypothesis" proved="true">
                        <proof prover="1"><result status="valid" time="1.66" steps="946403"/></proof>
                        </goal>
                        <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="1.61" steps="946405"/></proof>
                        </goal>
                        <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="1.62" steps="961109"/></proof>
                        </goal>
                        <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="3.84" steps="1180371"/></proof>
                        </goal>
                        <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="1.62" steps="946403"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="3.34" steps="1178003"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="1.39" steps="946405"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.62" steps="1009234"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.67" steps="1177821"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.4" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.72" steps="1179117"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.5" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                    <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.5.0" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="3.87" steps="1185352"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                 <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
                 <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
                  <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
                  <transf name="rewrite" proved="true" arg1="cont_kron_zero">
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                   <transf name="compute_specified" proved="true" >
                   </transf>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="1.44" steps="946414"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.69" steps="1009262"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.3" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.70" steps="1010162"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.4" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.75" steps="1177821"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.5" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.83" steps="1179124"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.6" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                    <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.6.0" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="3.81" steps="1185342"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.7" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.83" steps="1010687"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.8" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.59" steps="1010721"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.9" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.60" steps="1180257"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.10" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.71" steps="1184488"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="1.55" steps="946414"/></proof>
               </goal>
               <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="1.48" steps="946414"/></proof>
               </goal>
               <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="1.54" steps="946412"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
              <transf name="apply" proved="true" arg1="get_equiv_circuits">
               <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="3.38" steps="1175383"/></proof>
               </goal>
               <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(width (cnot co t n))" arg2="(t+&#39;1 +&#39; (n-&#39;&#39;t-&#39;&#39;1))">
                <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="kronecker_ket_l">
                 <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="2.30" steps="1009226"/></proof>
                 </goal>
                 <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="1.39" steps="946441"/></proof>
                 </goal>
                 <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="kronecker_ket_l">
                  <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.1.1.0.2.0" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="1.34" steps="946405"/></proof>
                  </goal>
                  <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.1.1.0.2.1" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="1.57" steps="946412"/></proof>
                  </goal>
                  <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.1.1.0.2.2" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="3.37" steps="1177821"/></proof>
                  </goal>
                  <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.1.1.0.2.3" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="3.47" steps="1179124"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.1.1.0.3" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                  <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.1.1.0.3.0" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="3.72" steps="1185347"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.0.1.1.1" expl="equality hypothesis" proved="true">
                <proof prover="1"><result status="valid" time="1.60" steps="946438"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="1.50" steps="946405"/></proof>
             </goal>
             <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="2.50" steps="1009234"/></proof>
             </goal>
             <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="3.69" steps="1178444"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
             <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="3.65" steps="1178493"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="2.40" steps="1009440"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
            <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="3.36" steps="1178502"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.44" steps="1009445"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
           <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="3.58" steps="1179903"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.52" steps="1009450"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.53" steps="946414"/></proof>
         </goal>
         <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.69" steps="1026642"/></proof>
         </goal>
         <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.64" steps="1026651"/></proof>
         </goal>
         <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.4" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.67" steps="1026605"/></proof>
         </goal>
         <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.5" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.67" steps="1010680"/></proof>
         </goal>
         <goal name="cont_ry&#39;vc.14.0.0.1.0.0.0.6" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.66" steps="1026667"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1" expl="false case (apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="path_cont_keto">
         <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0" expl="false case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="path_sem_comp_">
          <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0" expl="false case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_comp_">
           <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0" expl="false case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="place_kron_bv">
            <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0" expl="false case (apply premises)" proved="true">
            <transf name="replace" proved="true" arg1="(path_sem (cnot co t n)
  (path_sem (place (ry (-&#39; incr_abs k)) t n)
   (path_sem (place (ry (incr_abs k)) t n -- cnot co t n)
    (bv_to_ket (ket_to_bv x)))))" arg2="(path_sem (rewrite_cnot co t n)
  (path_sem (place (ry (-&#39; incr_abs k)) t n)
   (path_sem (place (ry (incr_abs k)) t n -- cnot co t n)
    (bv_to_ket (ket_to_bv x)))))">
             <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
             <transf name="rewrite" proved="true" arg1="rewrite_cnot&#39;def">
              <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
               <transf name="rewrite" proved="true" arg1="path_sem_comp_">
                <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                <transf name="replace" proved="true" arg1="(path_sem (cnot co t n)
    (path_sem (place (ry (incr_abs k)) t n) (bv_to_ket (ket_to_bv x))))" arg2="(path_sem (cont xx co t n)
    (path_sem (place (ry (incr_abs k)) t n) (bv_to_ket (ket_to_bv x))))">
                 <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="place_kron_bv">
                  <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="cont_kron_one">
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                   <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                    <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                    <transf name="rewrite" proved="true" arg1="place_kron_exp">
                     <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                     <transf name="rewrite" proved="true" arg1="place_kron_exp">
                      <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                      <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
                       <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                       <transf name="rewrite" proved="true" arg1="cont_kron_one">
                        <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                        <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                         <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                         <transf name="rewrite" proved="true" arg1="place_kron_exp">
                          <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                          <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
                           <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
                           <transf name="apply" proved="true" arg1="kronecker_eq">
                            <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                            <transf name="apply" proved="true" arg1="kronecker_eq">
                             <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                             <transf name="compute_specified" proved="true" >
                             </transf>
                             </goal>
                             <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                             <transf name="rewrite" proved="true" arg1="ry_inv_rev">
                              <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                              <transf name="rewrite" proved="true" arg1="ry_twice">
                               <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                               <proof prover="1"><result status="valid" time="3.43" steps="1181133"/></proof>
                               </goal>
                               <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                               <proof prover="1"><result status="valid" time="3.38" steps="1178089"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                              <proof prover="1"><result status="valid" time="3.50" steps="1179210"/></proof>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                            <proof prover="1"><result status="valid" time="2.68" steps="1031066"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                          <proof prover="1"><result status="valid" time="1.62" steps="946409"/></proof>
                          </goal>
                          <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                          <proof prover="1"><result status="valid" time="2.46" steps="1009233"/></proof>
                          </goal>
                          <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                          <proof prover="1"><result status="valid" time="3.53" steps="1177892"/></proof>
                          </goal>
                          <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                          <proof prover="1"><result status="valid" time="3.88" steps="1180338"/></proof>
                          </goal>
                          <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                          <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                           <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5.0" expl="apply premises" proved="true">
                           <proof prover="1"><result status="valid" time="3.42" steps="1185459"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="1.46" steps="946418"/></proof>
                        </goal>
                        <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="2.32" steps="1009261"/></proof>
                        </goal>
                        <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="2.42" steps="1010176"/></proof>
                        </goal>
                        <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="3.40" steps="1177892"/></proof>
                        </goal>
                        <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="3.44" steps="1180338"/></proof>
                        </goal>
                        <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                         <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6.0" expl="apply premises" proved="true">
                         <proof prover="1"><result status="valid" time="3.40" steps="1185494"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="2.47" steps="1010709"/></proof>
                        </goal>
                        <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="2.48" steps="1010743"/></proof>
                        </goal>
                        <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.9" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="3.37" steps="1180811"/></proof>
                        </goal>
                        <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.10" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="3.39" steps="1184656"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.40" steps="946409"/></proof>
                      </goal>
                      <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="2.36" steps="1009233"/></proof>
                      </goal>
                      <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="3.39" steps="1177892"/></proof>
                      </goal>
                      <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="3.43" steps="1179677"/></proof>
                      </goal>
                      <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                       <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.5.0" expl="apply premises" proved="true">
                       <proof prover="1"><result status="valid" time="3.46" steps="1185459"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="1.46" steps="946409"/></proof>
                     </goal>
                     <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="2.46" steps="1009233"/></proof>
                     </goal>
                     <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="3.50" steps="1177892"/></proof>
                     </goal>
                     <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="3.63" steps="1179210"/></proof>
                     </goal>
                     <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                      <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.5.0" expl="apply premises" proved="true">
                      <proof prover="1"><result status="valid" time="3.67" steps="1185459"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="1.56" steps="946418"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.57" steps="1009261"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.23" steps="1010176"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.44" steps="1177892"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.42" steps="1179210"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                    <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.6.0" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="3.54" steps="1185494"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.58" steps="1010709"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.63" steps="1010743"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.9" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.54" steps="1180811"/></proof>
                   </goal>
                   <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.10" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.57" steps="1184656"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="1.52" steps="946409"/></proof>
                  </goal>
                  <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="2.61" steps="1009233"/></proof>
                  </goal>
                  <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="3.60" steps="1178529"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                 <transf name="apply" proved="true" arg1="get_equiv_circuits">
                  <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="3.51" steps="1177764"/></proof>
                  </goal>
                  <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="2.71" steps="1026935"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                 <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.07" steps="1178567"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="2.54" steps="1009439"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.1.0" proved="true">
               <proof prover="1"><result status="valid" time="1.51" steps="946409"/></proof>
               </goal>
               <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.1.1" proved="true">
               <proof prover="1"><result status="valid" time="1.51" steps="946424"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="1.50" steps="946418"/></proof>
              </goal>
              <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="1.51" steps="946416"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <transf name="apply" proved="true" arg1="get_equiv_circuits">
              <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.43" steps="1175479"/></proof>
              </goal>
              <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.42" steps="1026997"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="1.47" steps="946409"/></proof>
            </goal>
            <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="2.63" steps="1026642"/></proof>
            </goal>
            <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="3.46" steps="1178529"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.60" steps="1026627"/></proof>
           </goal>
           <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.48" steps="1009444"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.57" steps="1026635"/></proof>
          </goal>
          <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="4.58"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.1.0" proved="true">
          <proof prover="0"><result status="valid" time="4.45"/></proof>
          </goal>
          <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.1.1" proved="true">
          <proof prover="0"><result status="valid" time="4.82"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.2" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.2.0" proved="true">
          <proof prover="0"><result status="valid" time="4.19"/></proof>
          </goal>
          <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.2.1" proved="true">
          <proof prover="1"><result status="valid" time="2.28" steps="1026646"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.3.0" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.34" steps="1026663"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.4" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.73" steps="1026627"/></proof>
         </goal>
         <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.5" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.26" steps="1010702"/></proof>
         </goal>
         <goal name="cont_ry&#39;vc.14.0.0.1.0.0.1.6" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.58" steps="1177935"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="cont_ry&#39;vc.14.0.0.1.0.1" expl="equality hypothesis" proved="true">
       <proof prover="0"><result status="valid" time="3.91"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_rz&#39;vc" expl="VC for cont_rz" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_rz&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rz&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.54"/></proof>
   </goal>
   <goal name="cont_rz&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.57"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rz&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rz&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.57"/></proof>
   </goal>
   <goal name="cont_rz&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.56"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rz&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rz&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.56"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rz&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.66"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.56"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.60"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.41" steps="925759"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rz&#39;vc.7.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.55"/></proof>
   </goal>
   <goal name="cont_rz&#39;vc.7.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.60"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rz&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rz&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.72"/></proof>
   </goal>
   <goal name="cont_rz&#39;vc.8.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.81"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rz&#39;vc.9" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rz&#39;vc.9.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.70"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rz&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.71"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.02"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.67"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.26" steps="927179"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.85"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.15" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.76"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.75"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.82"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.18" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.95"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.80"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.13"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.21" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.88"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.22" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.85"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.23" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.68" steps="1287482"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.24" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="1.87"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.25" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="1.89"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.26" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures4">
   <goal name="cont_rz&#39;vc.26.0" expl="assertion" proved="true">
   <transf name="case" proved="true" arg1="(i =t)">
    <goal name="cont_rz&#39;vc.26.0.0" expl="true case (assertion)" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="cont_rz&#39;vc.26.0.0.0" expl="true case (assertion)" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures41">
      <goal name="cont_rz&#39;vc.26.0.0.0.0" expl="true case (assertion)" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="cont_rz&#39;vc.26.0.0.0.0.0" expl="true case (assertion)" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures11">
        <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures11">
         <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures49">
          <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
          <transf name="rewrite" proved="true" arg1="Ensures49">
           <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
            <transf name="rewrite" proved="true" arg1="Ensures18">
             <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
             <transf name="rewrite" proved="true" arg1="Ensures18">
              <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
                <transf name="rewrite" proved="true" arg1="cnot&#39;spec2">
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
                 <transf name="rewrite" proved="true" arg1="cnot&#39;spec1">
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
                  <transf name="rewrite" proved="true" arg1="place_diag&#39;spec1">
                   <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
                   <transf name="rewrite" proved="true" arg1="place_diag&#39;spec1">
                    <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
                     <transf name="rewrite" proved="true" arg1="place_diag&#39;spec1">
                      <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
                      <transf name="rewrite" proved="true" arg1="place_diag&#39;spec1">
                       <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
                       <transf name="rewrite" proved="true" arg1="h">
                        <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
                        <transf name="case" proved="true" arg1="(x co = 0)">
                         <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
                         <proof prover="0"><result status="valid" time="1.74"/></proof>
                         </goal>
                         <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="false case (true case. assertion)" proved="true">
                         <transf name="replace" proved="true" arg1="(x co)" arg2="1">
                          <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="false case (true case. assertion)" proved="true">
                          <proof prover="0"><result status="valid" time="1.81"/></proof>
                          </goal>
                          <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                          <proof prover="0"><result status="valid" time="1.85"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="0"><result status="valid" time="1.79"/></proof>
                       </goal>
                       <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                       <proof prover="0"><result status="valid" time="1.91"/></proof>
                       </goal>
                       <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                       <proof prover="0"><result status="valid" time="1.88"/></proof>
                       </goal>
                       <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="3.44" steps="1291187"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                       <proof prover="0"><result status="valid" time="1.77"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="0"><result status="valid" time="1.75"/></proof>
                      </goal>
                      <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="0"><result status="valid" time="1.86"/></proof>
                      </goal>
                      <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                      <proof prover="0"><result status="valid" time="1.83"/></proof>
                      </goal>
                      <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="3.42" steps="1291187"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                      <proof prover="0"><result status="valid" time="1.72"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="0"><result status="valid" time="1.77"/></proof>
                    </goal>
                    <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="0"><result status="valid" time="1.78"/></proof>
                    </goal>
                    <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                    <proof prover="0"><result status="valid" time="1.92"/></proof>
                    </goal>
                    <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="3.48" steps="1291187"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                    <proof prover="0"><result status="valid" time="1.86"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="0.70" steps="23085"/></proof>
                   </goal>
                   <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="0.71" steps="23085"/></proof>
                   </goal>
                   <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="0.73" steps="23085"/></proof>
                   </goal>
                   <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="2.85" steps="1291187"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="0.77" steps="23085"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" proved="true">
                   <proof prover="2"><result status="valid" time="0.79" steps="23085"/></proof>
                   </goal>
                   <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" proved="true">
                   <proof prover="2"><result status="valid" time="0.74" steps="23085"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0" proved="true">
                   <proof prover="2"><result status="valid" time="0.76" steps="23085"/></proof>
                   </goal>
                   <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.1" proved="true">
                   <proof prover="2"><result status="valid" time="0.79" steps="23085"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.76" steps="23085"/></proof>
                  </goal>
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.76" steps="23085"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" proved="true">
                  <proof prover="2"><result status="valid" time="0.78" steps="23085"/></proof>
                  </goal>
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" proved="true">
                  <proof prover="2"><result status="valid" time="0.75" steps="23085"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0" proved="true">
                  <proof prover="2"><result status="valid" time="0.74" steps="23085"/></proof>
                  </goal>
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.1" proved="true">
                  <proof prover="2"><result status="valid" time="0.78" steps="23085"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.79" steps="23085"/></proof>
                 </goal>
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.77" steps="23085"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="2"><result status="valid" time="0.76" steps="23102"/></proof>
              </goal>
              <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.2.0" proved="true">
               <proof prover="2"><result status="valid" time="0.77" steps="23085"/></proof>
               </goal>
               <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.0.2.1" proved="true">
               <proof prover="2"><result status="valid" time="0.78" steps="23085"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="2"><result status="valid" time="0.73" steps="23102"/></proof>
             </goal>
             <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.2.0" proved="true">
              <proof prover="2"><result status="valid" time="0.74" steps="23085"/></proof>
              </goal>
              <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.0.0.2.1" proved="true">
              <proof prover="2"><result status="valid" time="0.75" steps="23085"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="set_binary_l">
             <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.64"/></proof>
                  </goal>
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.68"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.79" steps="23088"/></proof>
                  </goal>
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.81" steps="23088"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.80" steps="23087"/></proof>
                  </goal>
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2.1" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.82" steps="23087"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.72"/></proof>
                  </goal>
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.72"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.1.0.0.1" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.75" steps="23088"/></proof>
                  </goal>
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.1.0.0.1.1" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.81" steps="23088"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.1.0.0.2" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.1.0.0.2.0" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.79" steps="23087"/></proof>
                  </goal>
                  <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.0.1.0.0.1.0.0.2.1" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.78" steps="23087"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="set_binary_l">
            <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.72"/></proof>
                 </goal>
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.74"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.78" steps="23088"/></proof>
                 </goal>
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.81" steps="23088"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.80" steps="23087"/></proof>
                 </goal>
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.0.0.0.2.1" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.80" steps="23087"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.66"/></proof>
                 </goal>
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.79"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.1.0.0.1" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.77" steps="23088"/></proof>
                 </goal>
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.1.0.0.1.1" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.80" steps="23088"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.1.0.0.2" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.1.0.0.2.0" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.80" steps="23087"/></proof>
                 </goal>
                 <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.0.1.0.0.1.0.0.2.1" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.80" steps="23087"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="0.77" steps="23102"/></proof>
         </goal>
         <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.2.0" proved="true">
          <proof prover="2"><result status="valid" time="0.78" steps="23085"/></proof>
          </goal>
          <goal name="cont_rz&#39;vc.26.0.0.0.0.0.0.2.1" proved="true">
          <proof prover="2"><result status="valid" time="0.77" steps="23085"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cont_rz&#39;vc.26.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.79" steps="23102"/></proof>
        </goal>
        <goal name="cont_rz&#39;vc.26.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_rz&#39;vc.26.0.0.0.0.0.2.0" proved="true">
         <proof prover="2"><result status="valid" time="0.79" steps="23085"/></proof>
         </goal>
         <goal name="cont_rz&#39;vc.26.0.0.0.0.0.2.1" proved="true">
         <proof prover="2"><result status="valid" time="0.79" steps="23085"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_rz&#39;vc.26.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.78" steps="23085"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="cont_rz&#39;vc.26.0.1" expl="false case (assertion)" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures42">
     <goal name="cont_rz&#39;vc.26.0.1.0" expl="false case (assertion)" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="cont_rz&#39;vc.26.0.1.0.0" expl="false case (assertion)" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures11">
       <goal name="cont_rz&#39;vc.26.0.1.0.0.0" expl="false case (assertion)" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0" expl="false case (assertion)" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0" expl="false case (assertion)" proved="true">
         <transf name="rewrite" proved="true" arg1="place_diag&#39;spec1">
          <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0" expl="false case (assertion)" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0" expl="false case (assertion)" proved="true">
           <transf name="rewrite" proved="true" arg1="seq_flat&#39;spec3">
            <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0" expl="false case (assertion)" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0.0" expl="false case (assertion)" proved="true">
             <transf name="rewrite" proved="true" arg1="cnot&#39;spec2">
              <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0.0.0" expl="false case (assertion)" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="false case (assertion)" proved="true">
               <transf name="rewrite" proved="true" arg1="place_diag&#39;spec1">
                <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (assertion)" proved="true">
                <proof prover="2"><result status="valid" time="0.78" steps="23050"/></proof>
                </goal>
                <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="2"><result status="valid" time="0.76" steps="23050"/></proof>
                </goal>
                <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="2"><result status="valid" time="0.75" steps="23050"/></proof>
                </goal>
                <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                <proof prover="2"><result status="valid" time="0.75" steps="23050"/></proof>
                </goal>
                <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="2.82" steps="1290269"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                <proof prover="2"><result status="valid" time="0.77" steps="23050"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0.0.1.0" proved="true">
               <proof prover="2"><result status="valid" time="0.76" steps="23050"/></proof>
               </goal>
               <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0.0.1.1" proved="true">
               <proof prover="2"><result status="valid" time="0.76" steps="23050"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0.0.2.0" proved="true">
               <proof prover="2"><result status="valid" time="0.80" steps="23050"/></proof>
               </goal>
               <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0.0.2.1" proved="true">
               <proof prover="2"><result status="valid" time="0.77" steps="23050"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
              <proof prover="2"><result status="valid" time="0.77" steps="23050"/></proof>
              </goal>
              <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
              <proof prover="2"><result status="valid" time="0.77" steps="23050"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="0.79" steps="23050"/></proof>
            </goal>
            <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="0.80" steps="23050"/></proof>
            </goal>
            <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="0.78" steps="23050"/></proof>
            </goal>
            <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="0.81" steps="23066"/></proof>
            </goal>
            <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.5.0" proved="true">
             <proof prover="2"><result status="valid" time="0.80" steps="23050"/></proof>
             </goal>
             <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.0.0.5.1" proved="true">
             <proof prover="2"><result status="valid" time="0.75" steps="23050"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.77" steps="23050"/></proof>
          </goal>
          <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.82" steps="23050"/></proof>
          </goal>
          <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.83" steps="23050"/></proof>
          </goal>
          <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.4" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.66" steps="1290271"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="set_binary_l">
           <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
              <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.0.0" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="1.67"/></proof>
               </goal>
               <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="1.75"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.0.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.0.1.0" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.76" steps="23054"/></proof>
               </goal>
               <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.0.1.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.76" steps="23054"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.0.2" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.0.2.0" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.75" steps="23052"/></proof>
               </goal>
               <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.0.2.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.77" steps="23053"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.1" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
              <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.1.0" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="1.66"/></proof>
               </goal>
               <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="1.66"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.1.1" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.1.1.0" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.80" steps="23054"/></proof>
               </goal>
               <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.1.1.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.82" steps="23054"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.1.2" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.1.2.0" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.80" steps="23052"/></proof>
               </goal>
               <goal name="cont_rz&#39;vc.26.0.1.0.0.0.0.0.5.0.0.1.2.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.80" steps="23053"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="cont_rz&#39;vc.26.0.1.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.77" steps="23066"/></proof>
       </goal>
       <goal name="cont_rz&#39;vc.26.0.1.0.0.2" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_rz&#39;vc.26.0.1.0.0.2.0" proved="true">
        <proof prover="2"><result status="valid" time="0.76" steps="23050"/></proof>
        </goal>
        <goal name="cont_rz&#39;vc.26.0.1.0.0.2.1" proved="true">
        <proof prover="2"><result status="valid" time="0.74" steps="23050"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_rz&#39;vc.26.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.74" steps="23050"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="cont_rz&#39;vc.26.1" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="23049"/></proof>
   </goal>
   <goal name="cont_rz&#39;vc.26.2" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cont_rz&#39;vc.26.2.0" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.76" steps="23032"/></proof>
    </goal>
    <goal name="cont_rz&#39;vc.26.2.1" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.71" steps="23033"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rz&#39;vc.27" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures1">
   <goal name="cont_rz&#39;vc.27.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
    <goal name="cont_rz&#39;vc.27.0.0" expl="assertion" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="cont_rz&#39;vc.27.0.0.0" expl="assertion" proved="true">
     <transf name="rewrite" proved="true" arg1="seq_flat&#39;spec">
      <goal name="cont_rz&#39;vc.27.0.0.0.0" expl="assertion" proved="true">
      <transf name="rewrite" proved="true" arg1="seq_flat&#39;spec">
       <goal name="cont_rz&#39;vc.27.0.0.0.0.0" expl="assertion" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0" expl="assertion" proved="true">
        <transf name="replace" proved="true" arg1="(ang_ind (place_diag (rz (incr_abs k)) t n) x y
    +.+ ang_ind (cnot co t n)
        (fun (y3:int) -&gt; basis_ket (place_diag (rz (incr_abs k)) t n) x y y3)
        y)" arg2="(ang_ind (place_diag (rz (incr_abs k)) t n) x y
   )">
         <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0" expl="assertion" proved="true">
         <transf name="rewrite" proved="true" arg1="place_diag&#39;spec">
          <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0" expl="assertion" proved="true">
          <transf name="rewrite" proved="true" arg1="place_diag&#39;spec">
           <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0" expl="assertion" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0" expl="assertion" proved="true">
            <transf name="rewrite" proved="true" arg1="rz&#39;spec">
             <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0" expl="assertion" proved="true">
             <transf name="rewrite" proved="true" arg1="rz&#39;spec">
              <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0" expl="assertion" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="assertion" proved="true">
               <transf name="rewrite" proved="true" arg1="seq_flat&#39;spec3">
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="assertion" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="assertion" proved="true">
                 <transf name="rewrite" proved="true" arg1="cnot&#39;spec1">
                  <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="assertion" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="assertion" proved="true">
                   <transf name="rewrite" proved="true" arg1="place_diag&#39;spec1">
                    <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="assertion" proved="true">
                    <transf name="rewrite" proved="true" arg1="place_diag&#39;spec1">
                     <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="assertion" proved="true">
                     <transf name="replace" proved="true" arg1="(1 /./ incr_abs (-&#39; incr_abs k))" arg2="(-&#39;  1 /./ incr_abs ( incr_abs k))">
                      <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="assertion" proved="true">
                      <transf name="case" proved="true" arg1="(x co = 0)">
                       <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
                       <transf name="case" proved="true" arg1="(x t = 0)">
                        <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
                        <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
                         <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
                         <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
                          <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
                          <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
                           <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (assertion)" proved="true">
                           <proof prover="1"><result status="valid" time="4.33" steps="1506055"/></proof>
                           </goal>
                           <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                           <proof prover="2"><result status="valid" time="0.78" steps="23174"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.80" steps="23174"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="2"><result status="valid" time="0.79" steps="23174"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="false case (true case. assertion)" proved="true">
                        <transf name="replace" proved="true" arg1="(x t)" arg2="1">
                         <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="false case (true case. assertion)" proved="true">
                         <transf name="rewrite" proved="true" arg1="Even_phase_inv">
                          <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="false case (true case. assertion)" proved="true">
                          <transf name="rewrite" proved="true" arg1="Even_phase_inv">
                           <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="false case (true case. assertion)" proved="true">
                           <transf name="rewrite" proved="true" arg1="Even_phase_inv">
                            <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="false case (true case. assertion)" proved="true">
                            <proof prover="1"><result status="valid" time="4.33" steps="1503662"/></proof>
                            </goal>
                            <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                            <proof prover="2"><result status="valid" time="0.82" steps="23102"/></proof>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                           <proof prover="2"><result status="valid" time="0.82" steps="23139"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.80" steps="23102"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                         <proof prover="0"><result status="valid" time="1.54"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="false case (assertion)" proved="true">
                       <transf name="replace" proved="true" arg1="(x co)" arg2="1">
                        <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="false case (assertion)" proved="true">
                        <transf name="case" proved="true" arg1="(x t =0)">
                         <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="false case (true case. assertion)" proved="true">
                         <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
                          <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="false case (true case. assertion)" proved="true">
                          <transf name="rewrite" proved="true" arg1="Even_phase_inv">
                           <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="false case (true case. assertion)" proved="true">
                           <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
                            <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="false case (true case. assertion)" proved="true">
                            <proof prover="1"><result status="valid" time="4.24" steps="1505748"/></proof>
                            </goal>
                            <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                            <proof prover="2"><result status="valid" time="0.82" steps="23140"/></proof>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                           <proof prover="2"><result status="valid" time="0.81" steps="23140"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.80" steps="23140"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="false case (assertion)" proved="true">
                         <transf name="replace" proved="true" arg1="(x t)" arg2="1">
                          <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="false case (assertion)" proved="true">
                          <transf name="rewrite" proved="true" arg1="Even_phase_inv">
                           <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="false case (assertion)" proved="true">
                           <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
                            <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="false case (assertion)" proved="true">
                            <transf name="rewrite" proved="true" arg1="Even_phase_inv">
                             <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0.0.0" expl="false case (assertion)" proved="true">
                             <proof prover="1"><result status="valid" time="4.13" steps="1505488"/></proof>
                             </goal>
                             <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                             <proof prover="2"><result status="valid" time="0.81" steps="23067"/></proof>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                            <proof prover="2"><result status="valid" time="0.82" steps="23067"/></proof>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                           <proof prover="2"><result status="valid" time="0.78" steps="23067"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
                          <proof prover="0"><result status="valid" time="1.52"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                        <proof prover="0"><result status="valid" time="1.53"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                      <transf name="replace" proved="true" arg1="(incr_abs (-&#39; incr_abs k))" arg2="(-&#39; incr_abs ( incr_abs k))">
                       <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
                       <proof prover="0"><result status="valid" time="1.55"/></proof>
                       </goal>
                       <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                       <proof prover="1"><result status="valid" time="4.20" steps="1504762"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="2"><result status="valid" time="0.78" steps="23031"/></proof>
                     </goal>
                     <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="2"><result status="valid" time="0.75" steps="23031"/></proof>
                     </goal>
                     <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                     <proof prover="2"><result status="valid" time="0.76" steps="23031"/></proof>
                     </goal>
                     <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="2.99" steps="1290290"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                     <proof prover="2"><result status="valid" time="0.74" steps="23031"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="2"><result status="valid" time="0.75" steps="23031"/></proof>
                    </goal>
                    <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="2"><result status="valid" time="0.76" steps="23031"/></proof>
                    </goal>
                    <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                    <proof prover="2"><result status="valid" time="0.75" steps="23031"/></proof>
                    </goal>
                    <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="2.95" steps="1290290"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                    <proof prover="2"><result status="valid" time="0.75" steps="23031"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="0.75" steps="23031"/></proof>
                   </goal>
                   <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="0.75" steps="23031"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="0.75" steps="23031"/></proof>
                   </goal>
                   <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="0.74" steps="23031"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.76" steps="23031"/></proof>
                  </goal>
                  <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.77" steps="23031"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="2"><result status="valid" time="0.75" steps="23031"/></proof>
                </goal>
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="2"><result status="valid" time="0.76" steps="23031"/></proof>
                </goal>
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                <proof prover="2"><result status="valid" time="0.77" steps="23031"/></proof>
                </goal>
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                <proof prover="2"><result status="valid" time="0.76" steps="23047"/></proof>
                </goal>
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.5.0" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.76" steps="23031"/></proof>
                 </goal>
                 <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.0.0.5.1" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.74" steps="23031"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                 <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.54"/></proof>
                  </goal>
                  <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.57"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.77" steps="23032"/></proof>
                  </goal>
                  <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.1" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.77" steps="23032"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.76" steps="23031"/></proof>
                  </goal>
                  <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2.1" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.77" steps="23031"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                 <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.71"/></proof>
                  </goal>
                  <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.68"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.78" steps="23032"/></proof>
                  </goal>
                  <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.1" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.76" steps="23032"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.1.2" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.1.2.0" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.77" steps="23031"/></proof>
                  </goal>
                  <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.0.1.0.1.2.1" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.78" steps="23031"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
               <proof prover="0"><result status="valid" time="1.65"/></proof>
               </goal>
               <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
               <proof prover="0"><result status="valid" time="1.65"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="0.77" steps="23031"/></proof>
           </goal>
           <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="0.79" steps="23031"/></proof>
           </goal>
           <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="0.80" steps="23031"/></proof>
           </goal>
           <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="2.99" steps="1290284"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="set_binary_l">
            <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.0.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.70"/></proof>
                </goal>
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.67"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.82" steps="23034"/></proof>
                </goal>
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.0.1.1" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.82" steps="23034"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.0.2" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.0.2.0" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.79" steps="23033"/></proof>
                </goal>
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.0.2.1" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.81" steps="23033"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.1" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.1.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.71"/></proof>
                </goal>
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.72"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.1.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.1.1.0" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.83" steps="23034"/></proof>
                </goal>
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.1.1.1" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.84" steps="23034"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.1.2" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.1.2.0" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.82" steps="23033"/></proof>
                </goal>
                <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.0.5.0.0.1.2.1" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.83" steps="23033"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.83" steps="23031"/></proof>
          </goal>
          <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.84" steps="23031"/></proof>
          </goal>
          <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.82" steps="23031"/></proof>
          </goal>
          <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.99" steps="1290290"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.83" steps="23031"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_rz&#39;vc.27.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="0"><result status="valid" time="1.59"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="cont_rz&#39;vc.27.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.83" steps="23031"/></proof>
       </goal>
       <goal name="cont_rz&#39;vc.27.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.82" steps="23031"/></proof>
       </goal>
       <goal name="cont_rz&#39;vc.27.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.78" steps="23031"/></proof>
       </goal>
       <goal name="cont_rz&#39;vc.27.0.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.78" steps="23047"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_rz&#39;vc.27.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.74" steps="23031"/></proof>
      </goal>
      <goal name="cont_rz&#39;vc.27.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.75" steps="23031"/></proof>
      </goal>
      <goal name="cont_rz&#39;vc.27.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.76" steps="23031"/></proof>
      </goal>
      <goal name="cont_rz&#39;vc.27.0.0.0.4" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.76" steps="23047"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="cont_rz&#39;vc.27.0.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="1.56"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cont_rz&#39;vc.27.1" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="0.72" steps="23047"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rz&#39;vc.28" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rz&#39;vc.28.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="23241"/></proof>
   </goal>
   <goal name="cont_rz&#39;vc.28.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="23241"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rz&#39;vc.29" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rz&#39;vc.29.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="23241"/></proof>
   </goal>
   <goal name="cont_rz&#39;vc.29.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="23242"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rz&#39;vc.30" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rz&#39;vc.30.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="23243"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rz&#39;vc.31" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rz&#39;vc.31.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="2.33" steps="1012652"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rz&#39;vc.32" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rz&#39;vc.32.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="23259"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rz&#39;vc.33" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.75" steps="23449"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.34" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="23449"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.35" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Assert">
   <goal name="cont_rz&#39;vc.35.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="cont_rz&#39;vc.35.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures7">
     <goal name="cont_rz&#39;vc.35.0.0.0" expl="precondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="cont_rz&#39;vc.35.0.0.0.0" expl="precondition" proved="true">
      <transf name="case" proved="true" arg1="(x t = 0)">
       <goal name="cont_rz&#39;vc.35.0.0.0.0.0" expl="true case (precondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
        <goal name="cont_rz&#39;vc.35.0.0.0.0.0.0" expl="true case (precondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
         <goal name="cont_rz&#39;vc.35.0.0.0.0.0.0.0" expl="true case (precondition)" proved="true">
         <transf name="rewrite" proved="true" arg1="Int_To_Ang_inv">
          <goal name="cont_rz&#39;vc.35.0.0.0.0.0.0.0.0" expl="true case (precondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="Int_To_Ang_inv">
           <goal name="cont_rz&#39;vc.35.0.0.0.0.0.0.0.0.0" expl="true case (precondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="ang_mult_int_in">
            <goal name="cont_rz&#39;vc.35.0.0.0.0.0.0.0.0.0.0" expl="true case (precondition)" proved="true">
            <proof prover="2"><result status="valid" time="0.74" steps="23617"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="cont_rz&#39;vc.35.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="0.74" steps="23638"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_rz&#39;vc.35.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.75" steps="23638"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_rz&#39;vc.35.0.0.0.0.1" expl="false case (precondition)" proved="true">
       <transf name="replace" proved="true" arg1="(x t)" arg2="1">
        <goal name="cont_rz&#39;vc.35.0.0.0.0.1.0" expl="false case (precondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="Even_phase_inv">
         <goal name="cont_rz&#39;vc.35.0.0.0.0.1.0.0" expl="false case (precondition)" proved="true">
         <transf name="rewrite" proved="true" arg1="Even_phase_inv">
          <goal name="cont_rz&#39;vc.35.0.0.0.0.1.0.0.0" expl="false case (precondition)" proved="true">
          <proof prover="0"><result status="valid" time="1.76"/></proof>
          </goal>
          <goal name="cont_rz&#39;vc.35.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.75" steps="23566"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_rz&#39;vc.35.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="0.75" steps="23566"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_rz&#39;vc.35.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
        <proof prover="1"><result status="valid" time="3.68" steps="1313152"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_rz&#39;vc.35.0.0.1" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="cont_rz&#39;vc.35.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="cont_rz&#39;vc.35.0.0.1.0.0" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="3.65" steps="1313046"/></proof>
       </goal>
       <goal name="cont_rz&#39;vc.35.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="3.66" steps="1313050"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="cont_rz&#39;vc.35.0.1" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.74" steps="23564"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cont_rz&#39;vc.35.1" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="23564"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rz&#39;vc.36" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.95"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.37" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="cont_diag&#39;def" arg2="in" arg3="Ensures">
   <goal name="cont_rz&#39;vc.37.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="23497"/></proof>
   </goal>
   <goal name="cont_rz&#39;vc.37.1" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cont_rz&#39;vc.37.1.0" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.76" steps="23497"/></proof>
    </goal>
    <goal name="cont_rz&#39;vc.37.1.1" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.75" steps="23497"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cont_rz&#39;vc.37.2" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cont_rz&#39;vc.37.2.0" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.75" steps="23497"/></proof>
    </goal>
    <goal name="cont_rz&#39;vc.37.2.1" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.79" steps="23498"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cont_rz&#39;vc.37.3" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cont_rz&#39;vc.37.3.0" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.79" steps="23498"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cont_rz&#39;vc.37.4" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cont_rz&#39;vc.37.4.0" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="2.47" steps="1013003"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cont_rz&#39;vc.37.5" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="23497"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rz&#39;vc.38" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_rz&#39;vc.38.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="res&#39;def">
    <goal name="cont_rz&#39;vc.38.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="seq_flat&#39;def">
     <goal name="cont_rz&#39;vc.38.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="seq_flat&#39;def">
      <goal name="cont_rz&#39;vc.38.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="seq_flat&#39;def">
       <goal name="cont_rz&#39;vc.38.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="cont_rz&#39;vc.38.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="(--)&#39;spec5">
         <goal name="cont_rz&#39;vc.38.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="max_left">
          <goal name="cont_rz&#39;vc.38.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="(--)&#39;spec5">
           <goal name="cont_rz&#39;vc.38.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="rewrite" proved="true" arg1="max_left">
            <goal name="cont_rz&#39;vc.38.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="(--)&#39;spec5">
             <goal name="cont_rz&#39;vc.38.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <transf name="rewrite" proved="true" arg1="max_left">
              <goal name="cont_rz&#39;vc.38.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
              <proof prover="2"><result status="valid" time="1.08" steps="31986"/></proof>
              </goal>
              <goal name="cont_rz&#39;vc.38.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="2"><result status="valid" time="1.10" steps="31987"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="cont_rz&#39;vc.38.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="2"><result status="valid" time="1.10" steps="31987"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="cont_rz&#39;vc.38.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="(--)&#39;spec5">
             <goal name="cont_rz&#39;vc.38.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="3.73" steps="1522295"/></proof>
             </goal>
             <goal name="cont_rz&#39;vc.38.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="2"><result status="valid" time="1.07" steps="31987"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="cont_rz&#39;vc.38.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="4.49"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="cont_rz&#39;vc.38.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="3.78" steps="1524360"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_rz&#39;vc.38.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.87" steps="1347683"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="cont_rz&#39;vc.38.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="1.15" steps="31986"/></proof>
       </goal>
       <goal name="cont_rz&#39;vc.38.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="1.14" steps="31986"/></proof>
       </goal>
       <goal name="cont_rz&#39;vc.38.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="1.16" steps="31986"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_rz&#39;vc.38.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="1.17" steps="31986"/></proof>
      </goal>
      <goal name="cont_rz&#39;vc.38.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="1.15" steps="31987"/></proof>
      </goal>
      <goal name="cont_rz&#39;vc.38.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="1.16" steps="31986"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_rz&#39;vc.38.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="1.16" steps="31986"/></proof>
     </goal>
     <goal name="cont_rz&#39;vc.38.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="1.17" steps="31987"/></proof>
     </goal>
     <goal name="cont_rz&#39;vc.38.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="1.14" steps="31986"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rz&#39;vc.39" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.81" steps="23547"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.40" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.80" steps="23547"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.41" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Assert1">
   <goal name="cont_rz&#39;vc.41.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.81" steps="23599"/></proof>
   </goal>
   <goal name="cont_rz&#39;vc.41.1" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="0.79" steps="23599"/></proof>
   </goal>
   <goal name="cont_rz&#39;vc.41.2" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cont_rz&#39;vc.41.2.0" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.81" steps="23598"/></proof>
    </goal>
    <goal name="cont_rz&#39;vc.41.2.1" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.80" steps="23599"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rz&#39;vc.42" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.85"/></proof>
  </goal>
  <goal name="cont_rz&#39;vc.43" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_rz&#39;vc.43.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="res&#39;def">
    <goal name="cont_rz&#39;vc.43.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="seq_flat&#39;def">
     <goal name="cont_rz&#39;vc.43.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="seq_flat&#39;def">
      <goal name="cont_rz&#39;vc.43.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="seq_flat&#39;def">
       <goal name="cont_rz&#39;vc.43.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="place_diag&#39;def">
        <goal name="cont_rz&#39;vc.43.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="place_diag&#39;def">
         <goal name="cont_rz&#39;vc.43.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="compute_specified" proved="true" >
         </transf>
         </goal>
         <goal name="cont_rz&#39;vc.43.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="cont_rz&#39;vc.43.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.10" steps="31986"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_rz&#39;vc.43.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="cont_rz&#39;vc.43.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.14" steps="31987"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_rz&#39;vc.43.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="cont_rz&#39;vc.43.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.15" steps="31986"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cont_rz&#39;vc.43.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="cont_rz&#39;vc.43.0.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.75" steps="1013120"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cont_rz&#39;vc.43.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_rz&#39;vc.43.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="1.15" steps="31986"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_rz&#39;vc.43.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_rz&#39;vc.43.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="1.14" steps="31987"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_rz&#39;vc.43.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_rz&#39;vc.43.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="1.15" steps="31986"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_rz&#39;vc.43.0.0.0.0.0.4" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_rz&#39;vc.43.0.0.0.0.0.4.0" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.68" steps="1013092"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="cont_rz&#39;vc.43.0.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_rz&#39;vc.43.0.0.0.0.1.0" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="1.07" steps="31986"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_rz&#39;vc.43.0.0.0.0.2" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_rz&#39;vc.43.0.0.0.0.2.0" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="1.04" steps="31987"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_rz&#39;vc.43.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_rz&#39;vc.43.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="1.12" steps="31986"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_rz&#39;vc.43.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="cont_rz&#39;vc.43.0.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="1.07" steps="31986"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_rz&#39;vc.43.0.0.0.2" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="cont_rz&#39;vc.43.0.0.0.2.0" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="1.16" steps="31986"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_rz&#39;vc.43.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="cont_rz&#39;vc.43.0.0.0.3.0" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="1.16" steps="31986"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_rz&#39;vc.43.0.0.1" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="cont_rz&#39;vc.43.0.0.1.0" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="1.15" steps="31986"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_rz&#39;vc.43.0.0.2" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="cont_rz&#39;vc.43.0.0.2.0" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="1.16" steps="31987"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_rz&#39;vc.43.0.0.3" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="cont_rz&#39;vc.43.0.0.3.0" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="1.15" steps="31986"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_phase&#39;vc" expl="VC for cont_phase" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_phase&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.76" steps="21057"/></proof>
  </goal>
  <goal name="cont_phase&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_phase&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.76" steps="21057"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_phase&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_phase&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.76" steps="21057"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_phase&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_phase&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="4.93" steps="236820"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_phase&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.75" steps="21314"/></proof>
  </goal>
  <goal name="cont_phase&#39;vc.5" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(cont (phase k) co t n)" arg2="(cont_diag (phase k) co t n)">
   <goal name="cont_phase&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_equiv_circuits_path_sem">
    <goal name="cont_phase&#39;vc.5.0.0" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="cont_phase&#39;vc.5.0.0.0" expl="apply premises" proved="true">
     <transf name="case" proved="true" arg1="((t +&#39; width (phase k)) &lt;=&#39; co)">
      <goal name="cont_phase&#39;vc.5.0.0.0.0" expl="true case (apply premises)" proved="true">
      <transf name="rewrite" proved="true" arg1="cont_diag&#39;spec3">
       <goal name="cont_phase&#39;vc.5.0.0.0.0.0" expl="true case (apply premises)" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_phase&#39;vc.5.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
        <proof prover="2"><result status="valid" time="0.77" steps="21316"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.78" steps="21316"/></proof>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.0.0.0.2" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_phase&#39;vc.5.0.0.0.0.2.0" proved="true">
        <proof prover="2"><result status="valid" time="0.78" steps="21316"/></proof>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.0.0.0.2.1" proved="true">
        <proof prover="2"><result status="valid" time="0.80" steps="21316"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.76" steps="21316"/></proof>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.0.0.0.4" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_phase&#39;vc.5.0.0.0.0.4.0" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="3.13" steps="1197213"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.0.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.40"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_phase&#39;vc.5.0.0.0.1" expl="false case (apply premises)" proved="true">
      <transf name="rewrite" proved="true" arg1="cont_diag&#39;spec10">
       <goal name="cont_phase&#39;vc.5.0.0.0.1.0" expl="false case (apply premises)" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_phase&#39;vc.5.0.0.0.1.0.0" expl="false case (apply premises)" proved="true">
        <proof prover="2"><result status="valid" time="0.76" steps="21316"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.0.0.1.1" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_phase&#39;vc.5.0.0.0.1.1.0" proved="true">
        <proof prover="2"><result status="valid" time="0.78" steps="21316"/></proof>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.0.0.1.1.1" proved="true">
        <proof prover="2"><result status="valid" time="0.76" steps="21316"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.45"/></proof>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.0.0.1.3" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.53"/></proof>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.0.0.1.4" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_phase&#39;vc.5.0.0.0.1.4.0" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="3.19" steps="1197216"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.0.0.1.5" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.39"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="cont_phase&#39;vc.5.0.1" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="cont_phase&#39;vc.5.0.1.0" expl="apply premises" proved="true">
     <transf name="case" proved="true" arg1="((t +&#39; width (phase k)) &lt;=&#39; co)">
      <goal name="cont_phase&#39;vc.5.0.1.0.0" expl="true case (apply premises)" proved="true">
      <transf name="rewrite" proved="true" arg1="cont_diag&#39;spec2">
       <goal name="cont_phase&#39;vc.5.0.1.0.0.0" expl="true case (apply premises)" proved="true">
       <proof prover="2"><result status="valid" time="0.78" steps="21316"/></proof>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.1.0.0.1" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_phase&#39;vc.5.0.1.0.0.1.0" proved="true">
        <proof prover="2"><result status="valid" time="0.77" steps="21316"/></proof>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.1.0.0.1.1" proved="true">
        <proof prover="2"><result status="valid" time="0.77" steps="21316"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.1.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.78" steps="21316"/></proof>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.1.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.76" steps="21316"/></proof>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.1.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="3.24" steps="1197314"/></proof>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.1.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.43"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_phase&#39;vc.5.0.1.0.1" expl="false case (apply premises)" proved="true">
      <transf name="rewrite" proved="true" arg1="cont_diag&#39;spec9">
       <goal name="cont_phase&#39;vc.5.0.1.0.1.0" expl="false case (apply premises)" proved="true">
       <proof prover="2"><result status="valid" time="0.76" steps="21316"/></proof>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.1.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.77" steps="21316"/></proof>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.1.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.46"/></proof>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.1.0.1.3" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.46"/></proof>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.1.0.1.4" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="3.10" steps="1197319"/></proof>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.1.0.1.5" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.37"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="cont_phase&#39;vc.5.0.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cont_phase&#39;vc.5.0.2.0" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="cont_phase&#39;vc.5.0.2.0.0" expl="apply premises" proved="true">
      <transf name="case" proved="true" arg1="((t +&#39; width (phase k)) &lt;=&#39; co)">
       <goal name="cont_phase&#39;vc.5.0.2.0.0.0" expl="true case (apply premises)" proved="true">
       <transf name="rewrite" proved="true" arg1="cont_diag&#39;spec">
        <goal name="cont_phase&#39;vc.5.0.2.0.0.0.0" expl="true case (apply premises)" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_phase&#39;vc.5.0.2.0.0.0.0.0" expl="true case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures1">
          <goal name="cont_phase&#39;vc.5.0.2.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="phase&#39;spec">
           <goal name="cont_phase&#39;vc.5.0.2.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="rzp&#39;spec">
            <goal name="cont_phase&#39;vc.5.0.2.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="cont_phase&#39;vc.5.0.2.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
             <proof prover="0"><result status="valid" time="1.38"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="cont_phase&#39;vc.5.0.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.71" steps="21431"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.2.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_phase&#39;vc.5.0.2.0.0.0.1.0" proved="true">
         <proof prover="2"><result status="valid" time="0.76" steps="21414"/></proof>
         </goal>
         <goal name="cont_phase&#39;vc.5.0.2.0.0.0.1.1" proved="true">
         <proof prover="2"><result status="valid" time="0.74" steps="21414"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.2.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.76" steps="21415"/></proof>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.2.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.76" steps="21414"/></proof>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.2.0.0.0.4" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_phase&#39;vc.5.0.2.0.0.0.4.0" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.17" steps="1197244"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.2.0.0.0.5" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="1.39"/></proof>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.2.0.0.0.6" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.75" steps="21431"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.2.0.0.1" expl="false case (apply premises)" proved="true">
       <transf name="rewrite" proved="true" arg1="cont_diag&#39;spec7">
        <goal name="cont_phase&#39;vc.5.0.2.0.0.1.0" expl="false case (apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures1">
         <goal name="cont_phase&#39;vc.5.0.2.0.0.1.0.0" expl="false case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="phase&#39;spec">
          <goal name="cont_phase&#39;vc.5.0.2.0.0.1.0.0.0" expl="false case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="rzp&#39;spec">
           <goal name="cont_phase&#39;vc.5.0.2.0.0.1.0.0.0.0" expl="false case (apply premises)" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="cont_phase&#39;vc.5.0.2.0.0.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
            <proof prover="0"><result status="valid" time="1.35"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="cont_phase&#39;vc.5.0.2.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="0.76" steps="21431"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.2.0.0.1.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_phase&#39;vc.5.0.2.0.0.1.1.0" proved="true">
         <proof prover="2"><result status="valid" time="0.76" steps="21414"/></proof>
         </goal>
         <goal name="cont_phase&#39;vc.5.0.2.0.0.1.1.1" proved="true">
         <proof prover="2"><result status="valid" time="0.77" steps="21414"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.2.0.0.1.2" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_phase&#39;vc.5.0.2.0.0.1.2.0" proved="true">
         <proof prover="2"><result status="valid" time="0.78" steps="21414"/></proof>
         </goal>
         <goal name="cont_phase&#39;vc.5.0.2.0.0.1.2.1" proved="true">
         <proof prover="0"><result status="valid" time="1.47"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.2.0.0.1.3" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_phase&#39;vc.5.0.2.0.0.1.3.0" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="1.40"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.2.0.0.1.4" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="3.02" steps="1197350"/></proof>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.2.0.0.1.5" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="1.39"/></proof>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.2.0.0.1.6" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.76" steps="21431"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="cont_phase&#39;vc.5.0.3" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cont_phase&#39;vc.5.0.3.0" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="cont_phase&#39;vc.5.0.3.0.0" expl="apply premises" proved="true">
      <transf name="case" proved="true" arg1="((t +&#39; width (phase k)) &lt;=&#39; co)">
       <goal name="cont_phase&#39;vc.5.0.3.0.0.0" expl="true case (apply premises)" proved="true">
       <transf name="rewrite" proved="true" arg1="cont_diag&#39;spec1">
        <goal name="cont_phase&#39;vc.5.0.3.0.0.0.0" expl="true case (apply premises)" proved="true">
        <proof prover="0"><result status="valid" time="1.38"/></proof>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.3.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_phase&#39;vc.5.0.3.0.0.0.1.0" proved="true">
         <proof prover="2"><result status="valid" time="0.77" steps="21416"/></proof>
         </goal>
         <goal name="cont_phase&#39;vc.5.0.3.0.0.0.1.1" proved="true">
         <proof prover="2"><result status="valid" time="0.76" steps="21416"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.3.0.0.0.2" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_phase&#39;vc.5.0.3.0.0.0.2.0" proved="true">
         <proof prover="2"><result status="valid" time="0.75" steps="21416"/></proof>
         </goal>
         <goal name="cont_phase&#39;vc.5.0.3.0.0.0.2.1" proved="true">
         <proof prover="2"><result status="valid" time="0.75" steps="21416"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.3.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.75" steps="21416"/></proof>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.3.0.0.0.4" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_phase&#39;vc.5.0.3.0.0.0.4.0" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.05" steps="1197294"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.3.0.0.0.5" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="1.38"/></proof>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.3.0.0.0.6" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.77" steps="21432"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_phase&#39;vc.5.0.3.0.0.1" expl="false case (apply premises)" proved="true">
       <transf name="rewrite" proved="true" arg1="cont_diag&#39;spec8">
        <goal name="cont_phase&#39;vc.5.0.3.0.0.1.0" expl="false case (apply premises)" proved="true">
        <proof prover="0"><result status="valid" time="1.35"/></proof>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.3.0.0.1.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_phase&#39;vc.5.0.3.0.0.1.1.0" proved="true">
         <proof prover="2"><result status="valid" time="0.75" steps="21416"/></proof>
         </goal>
         <goal name="cont_phase&#39;vc.5.0.3.0.0.1.1.1" proved="true">
         <proof prover="2"><result status="valid" time="0.75" steps="21416"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.3.0.0.1.2" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_phase&#39;vc.5.0.3.0.0.1.2.0" proved="true">
         <proof prover="2"><result status="valid" time="0.77" steps="21416"/></proof>
         </goal>
         <goal name="cont_phase&#39;vc.5.0.3.0.0.1.2.1" proved="true">
         <proof prover="0"><result status="valid" time="1.40"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.3.0.0.1.3" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="1.39"/></proof>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.3.0.0.1.4" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_phase&#39;vc.5.0.3.0.0.1.4.0" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.13" steps="1197297"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.3.0.0.1.5" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="1.46"/></proof>
        </goal>
        <goal name="cont_phase&#39;vc.5.0.3.0.0.1.6" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.76" steps="21432"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="cont_phase&#39;vc.5.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="cont_diag&#39;def">
    <goal name="cont_phase&#39;vc.5.1.0" expl="equality hypothesis" proved="true">
    <proof prover="2"><result status="valid" time="0.72" steps="21314"/></proof>
    </goal>
    <goal name="cont_phase&#39;vc.5.1.1" expl="rewrite premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cont_phase&#39;vc.5.1.1.0" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.73" steps="21314"/></proof>
     </goal>
     <goal name="cont_phase&#39;vc.5.1.1.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.76" steps="21314"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cont_phase&#39;vc.5.1.2" expl="rewrite premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cont_phase&#39;vc.5.1.2.0" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.74" steps="21314"/></proof>
     </goal>
     <goal name="cont_phase&#39;vc.5.1.2.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.47"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cont_phase&#39;vc.5.1.3" expl="rewrite premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cont_phase&#39;vc.5.1.3.0" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.66"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cont_phase&#39;vc.5.1.4" expl="rewrite premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cont_phase&#39;vc.5.1.4.0" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="5.00" steps="242044"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cont_phase&#39;vc.5.1.5" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="4.91" steps="239899"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_phase&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.75" steps="21364"/></proof>
  </goal>
  <goal name="cont_phase&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="21364"/></proof>
  </goal>
  <goal name="cont_phase&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.44"/></proof>
  </goal>
  <goal name="cont_phase&#39;vc.9" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures5">
   <goal name="cont_phase&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="cont_phase&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures12">
     <goal name="cont_phase&#39;vc.9.0.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="1.51"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="cont_phase&#39;vc.9.1" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="0.76" steps="21412"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_rzp&#39;vc" expl="VC for cont_rzp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_rzp&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rzp&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="20797"/></proof>
   </goal>
   <goal name="cont_rzp&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.70" steps="20797"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rzp&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rzp&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.70" steps="20797"/></proof>
   </goal>
   <goal name="cont_rzp&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="20797"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rzp&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rzp&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.76" steps="20849"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rzp&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rzp&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="21118"/></proof>
   </goal>
   <goal name="cont_rzp&#39;vc.3.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="21118"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rzp&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rzp&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.76" steps="21118"/></proof>
   </goal>
   <goal name="cont_rzp&#39;vc.4.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="21118"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rzp&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rzp&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.68" steps="21208"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rzp&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.69" steps="21325"/></proof>
  </goal>
  <goal name="cont_rzp&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.71" steps="21325"/></proof>
  </goal>
  <goal name="cont_rzp&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.70" steps="21325"/></proof>
  </goal>
  <goal name="cont_rzp&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="4.97" steps="239031"/></proof>
  </goal>
  <goal name="cont_rzp&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.66"/></proof>
  </goal>
  <goal name="cont_rzp&#39;vc.11" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_rzp&#39;vc.11.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cont_rzp&#39;vc.11.0.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="2.81" steps="1081040"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rzp&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.77" steps="21632"/></proof>
  </goal>
  <goal name="cont_rzp&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.69" steps="21632"/></proof>
  </goal>
  <goal name="cont_rzp&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.59"/></proof>
  </goal>
  <goal name="cont_rzp&#39;vc.15" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures4">
   <goal name="cont_rzp&#39;vc.15.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures11">
    <goal name="cont_rzp&#39;vc.15.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures20">
     <goal name="cont_rzp&#39;vc.15.0.0.0" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(x co = 0)">
      <goal name="cont_rzp&#39;vc.15.0.0.0.0" expl="true case (postcondition)" proved="true">
      <proof prover="0"><result status="valid" time="1.39"/></proof>
      </goal>
      <goal name="cont_rzp&#39;vc.15.0.0.0.1" expl="false case (postcondition)" proved="true">
      <transf name="replace" proved="true" arg1="(x co )" arg2="1">
       <goal name="cont_rzp&#39;vc.15.0.0.0.1.0" expl="false case (postcondition)" proved="true">
       <transf name="case" proved="true" arg1="(x t = 0)">
        <goal name="cont_rzp&#39;vc.15.0.0.0.1.0.0" expl="false case (true case. postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
         <goal name="cont_rzp&#39;vc.15.0.0.0.1.0.0.0" expl="false case (true case. postcondition)" proved="true">
         <proof prover="0"><result status="valid" time="1.43"/></proof>
         </goal>
         <goal name="cont_rzp&#39;vc.15.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="0.76" steps="21791"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_rzp&#39;vc.15.0.0.0.1.0.1" expl="false case (postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="Even_phase_inv">
         <goal name="cont_rzp&#39;vc.15.0.0.0.1.0.1.0" expl="false case (postcondition)" proved="true">
         <transf name="replace" proved="true" arg1="(1*&#39; x t)" arg2="1">
          <goal name="cont_rzp&#39;vc.15.0.0.0.1.0.1.0.0" expl="false case (postcondition)" proved="true">
          <proof prover="0"><result status="valid" time="1.63"/></proof>
          </goal>
          <goal name="cont_rzp&#39;vc.15.0.0.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
          <transf name="assert" proved="true" arg1="(0 &lt;=&#39; x t &lt;&#39; 2)">
           <goal name="cont_rzp&#39;vc.15.0.0.0.1.0.1.0.1.0" expl="asserted formula" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="cont_rzp&#39;vc.15.0.0.0.1.0.1.0.1.0.0" proved="true">
            <proof prover="0"><result status="valid" time="1.40"/></proof>
            </goal>
            <goal name="cont_rzp&#39;vc.15.0.0.0.1.0.1.0.1.0.1" proved="true">
            <proof prover="0"><result status="valid" time="1.42"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="cont_rzp&#39;vc.15.0.0.0.1.0.1.0.1.1" expl="equality hypothesis" proved="true">
           <proof prover="2"><result status="valid" time="0.74" steps="21759"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="cont_rzp&#39;vc.15.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.59" steps="1206982"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="cont_rzp&#39;vc.15.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="0"><result status="valid" time="1.49"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_rzp&#39;vc.15.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.74" steps="21681"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cont_rzp&#39;vc.15.0.1" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.77" steps="21681"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cont_rzp&#39;vc.15.1" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="21699"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rzp&#39;vc.16" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_rzp&#39;vc.16.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cont_rzp&#39;vc.16.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="seq_diag&#39;def">
     <goal name="cont_rzp&#39;vc.16.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="(cont (phase (incr_abs k)) co t n -- cont (rz k) co t n)
">
      <goal name="cont_rzp&#39;vc.16.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="2.24" steps="927029"/></proof>
      </goal>
      <goal name="cont_rzp&#39;vc.16.0.0.0.1" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="(cont ( phase (incr_abs k) -- rz k ) co t n)
">
       <goal name="cont_rzp&#39;vc.16.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.99" steps="1085507"/></proof>
       </goal>
       <goal name="cont_rzp&#39;vc.16.0.0.0.1.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="3.02" steps="1085538"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_rzp&#39;vc.16.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="1.05" steps="29328"/></proof>
     </goal>
     <goal name="cont_rzp&#39;vc.16.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="1.05" steps="29328"/></proof>
     </goal>
     <goal name="cont_rzp&#39;vc.16.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="1.04" steps="29328"/></proof>
     </goal>
     <goal name="cont_rzp&#39;vc.16.0.0.4" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="cont_rzp&#39;vc.16.0.0.4.0" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="3.17" steps="1084572"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_rzp&#39;vc.16.0.0.5" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="cont_rzp&#39;vc.16.0.0.5.0" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="3.15" steps="1084573"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_xor_rz&#39;vc" expl="VC for cont_xor_rz" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_xor_rz&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_xor_rz&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.71" steps="20835"/></proof>
   </goal>
   <goal name="cont_xor_rz&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.72" steps="20835"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_xor_rz&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_xor_rz&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.72" steps="20835"/></proof>
   </goal>
   <goal name="cont_xor_rz&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="20835"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_xor_rz&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_xor_rz&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="20835"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_xor_rz&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_xor_rz&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="21095"/></proof>
   </goal>
   <goal name="cont_xor_rz&#39;vc.3.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="21095"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_xor_rz&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_xor_rz&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="21095"/></proof>
   </goal>
   <goal name="cont_xor_rz&#39;vc.4.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="21095"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_xor_rz&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_xor_rz&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="21097"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_xor_rz&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_xor_rz&#39;vc.6.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="21303"/></proof>
   </goal>
   <goal name="cont_xor_rz&#39;vc.6.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="21303"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_xor_rz&#39;vc.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_xor_rz&#39;vc.7.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="21303"/></proof>
   </goal>
   <goal name="cont_xor_rz&#39;vc.7.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="21303"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_xor_rz&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_xor_rz&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="21303"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_xor_rz&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.76" steps="21303"/></proof>
  </goal>
  <goal name="cont_xor_rz&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.75" steps="21303"/></proof>
  </goal>
  <goal name="cont_xor_rz&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.77" steps="21303"/></proof>
  </goal>
  <goal name="cont_xor_rz&#39;vc.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.76" steps="21559"/></proof>
  </goal>
  <goal name="cont_xor_rz&#39;vc.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.77" steps="21559"/></proof>
  </goal>
  <goal name="cont_xor_rz&#39;vc.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="21559"/></proof>
  </goal>
  <goal name="cont_xor_rz&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.01" steps="1250924"/></proof>
  </goal>
  <goal name="cont_xor_rz&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="21868"/></proof>
  </goal>
  <goal name="cont_xor_rz&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.75" steps="21869"/></proof>
  </goal>
  <goal name="cont_xor_rz&#39;vc.18" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures3">
   <goal name="cont_xor_rz&#39;vc.18.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures10">
    <goal name="cont_xor_rz&#39;vc.18.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="cont_xor_rz&#39;vc.18.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
      <goal name="cont_xor_rz&#39;vc.18.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_zero_add">
       <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures26">
        <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures18">
          <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="Ensures19">
           <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <proof prover="2"><result status="valid" time="0.76" steps="21935"/></proof>
           </goal>
           <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="0.76" steps="21918"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.75" steps="21918"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="set_binary_l">
          <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
             <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="1.69"/></proof>
              </goal>
              <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="1.72"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.75" steps="21921"/></proof>
              </goal>
              <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.73" steps="21921"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.0.2.0" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.73" steps="21920"/></proof>
              </goal>
              <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.0.2.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.73" steps="21920"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
             <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="1.72"/></proof>
              </goal>
              <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.1.0.1" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="1.66"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.1.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.1.1.0" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.77" steps="21921"/></proof>
              </goal>
              <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.1.1.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.81" steps="21921"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.1.2" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.1.2.0" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.81" steps="21920"/></proof>
              </goal>
              <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.0.1.0.0.0.1.2.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.76" steps="21920"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="cont_xor_rz&#39;vc.18.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.57"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_xor_rz&#39;vc.18.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="1.62"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="cont_xor_rz&#39;vc.18.0.1" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.76" steps="21935"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cont_xor_rz&#39;vc.18.1" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="0.78" steps="21935"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_xor_rz&#39;vc.19" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures7">
   <goal name="cont_xor_rz&#39;vc.19.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="cont_xor_rz&#39;vc.19.0.0" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(i = co2)">
     <goal name="cont_xor_rz&#39;vc.19.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures19">
      <goal name="cont_xor_rz&#39;vc.19.0.0.0.0" expl="true case (postcondition)" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0" expl="true case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures14">
        <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures14">
         <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="Ensures28">
           <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures28">
            <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
             <transf name="rewrite" proved="true" arg1="Ensures20">
              <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
              <transf name="rewrite" proved="true" arg1="Ensures19">
               <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
               <transf name="case" proved="true" arg1="(x co1 = 0)">
                <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                <proof prover="2"><result status="valid" time="0.78" steps="22047"/></proof>
                </goal>
                <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="false case (true case. postcondition)" proved="true">
                <transf name="replace" proved="true" arg1="(x co1)" arg2="1">
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="false case (true case. postcondition)" proved="true">
                 <transf name="case" proved="true" arg1="(x co2 = 0)">
                  <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="false case (true case. postcondition)" proved="true">
                  <proof prover="2"><result status="valid" time="0.76" steps="22064"/></proof>
                  </goal>
                  <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="false case (true case. postcondition)" proved="true">
                  <proof prover="2"><result status="valid" time="0.79" steps="22027"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                 <proof prover="0"><result status="valid" time="1.68"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="2"><result status="valid" time="0.77" steps="21974"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="2"><result status="valid" time="0.77" steps="21974"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="set_binary_l">
             <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.72"/></proof>
                  </goal>
                  <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.72"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.78" steps="21978"/></proof>
                  </goal>
                  <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.78" steps="21978"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.0.0.2.0" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.78" steps="21976"/></proof>
                  </goal>
                  <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.0.0.2.1" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.79" steps="21976"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.68"/></proof>
                  </goal>
                  <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.1" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.63"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1.0" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.77" steps="21978"/></proof>
                  </goal>
                  <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.1.0.1.1" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.78" steps="21978"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.1.0.2" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.1.0.2.0" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.78" steps="21976"/></proof>
                  </goal>
                  <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.1.0.0.1.0.2.1" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.79" steps="21976"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.2.0" proved="true">
             <proof prover="2"><result status="valid" time="0.78" steps="21974"/></proof>
             </goal>
             <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.0.2.1" proved="true">
             <proof prover="2"><result status="valid" time="0.77" steps="21974"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="set_binary_l">
            <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.61"/></proof>
                 </goal>
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.62"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.79" steps="21978"/></proof>
                 </goal>
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.79" steps="21978"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.0.0.2.0" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.78" steps="21976"/></proof>
                 </goal>
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.0.0.2.1" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.79" steps="21976"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.70"/></proof>
                 </goal>
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.1.0.0.1" expl="apply premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.60"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.1.0.1" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.1.0.1.0" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.79" steps="21978"/></proof>
                 </goal>
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.1.0.1.1" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.78" steps="21978"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.1.0.2" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.1.0.2.0" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.81" steps="21976"/></proof>
                 </goal>
                 <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.1.0.0.1.0.2.1" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.80" steps="21976"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.2.0" proved="true">
            <proof prover="2"><result status="valid" time="0.76" steps="21974"/></proof>
            </goal>
            <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.0.0.2.1" proved="true">
            <proof prover="2"><result status="valid" time="0.76" steps="21974"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="0.78" steps="21991"/></proof>
         </goal>
         <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.2.0" proved="true">
          <proof prover="2"><result status="valid" time="0.76" steps="21974"/></proof>
          </goal>
          <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.0.2.1" proved="true">
          <proof prover="2"><result status="valid" time="0.74" steps="21974"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.75" steps="21990"/></proof>
        </goal>
        <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.2.0" proved="true">
         <proof prover="2"><result status="valid" time="0.78" steps="21974"/></proof>
         </goal>
         <goal name="cont_xor_rz&#39;vc.19.0.0.0.0.0.2.1" proved="true">
         <proof prover="2"><result status="valid" time="0.77" steps="21974"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_xor_rz&#39;vc.19.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.77" steps="21974"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_xor_rz&#39;vc.19.0.0.1" expl="false case (postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures34">
      <goal name="cont_xor_rz&#39;vc.19.0.0.1.0" expl="false case (postcondition)" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures14">
        <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0" expl="false case (postcondition)" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures28">
          <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures20">
            <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
            <proof prover="2"><result status="valid" time="0.77" steps="21938"/></proof>
            </goal>
            <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="0.71" steps="21938"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="set_binary_l">
           <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.55"/></proof>
                </goal>
                <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.65"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.80" steps="21942"/></proof>
                </goal>
                <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.78" steps="21942"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.0.0.2.0" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.75" steps="21941"/></proof>
                </goal>
                <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.0.0.2.1" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.78" steps="21941"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.53"/></proof>
                </goal>
                <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.1.0.0.1" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.55"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.1.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.1.0.1.0" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.77" steps="21942"/></proof>
                </goal>
                <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.1.0.1.1" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.77" steps="21942"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.1.0.2" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.1.0.2.0" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.81" steps="21941"/></proof>
                </goal>
                <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.1.0.0.1.0.2.1" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.76" steps="21941"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.2.0" proved="true">
           <proof prover="2"><result status="valid" time="0.73" steps="21938"/></proof>
           </goal>
           <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.0.0.2.1" proved="true">
           <proof prover="2"><result status="valid" time="0.76" steps="21938"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.76" steps="21956"/></proof>
        </goal>
        <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.2.0" proved="true">
         <proof prover="2"><result status="valid" time="0.75" steps="21938"/></proof>
         </goal>
         <goal name="cont_xor_rz&#39;vc.19.0.0.1.0.0.2.1" proved="true">
         <proof prover="2"><result status="valid" time="0.76" steps="21938"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_xor_rz&#39;vc.19.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.75" steps="21938"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="cont_xor_rz&#39;vc.19.1" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="21936"/></proof>
   </goal>
   <goal name="cont_xor_rz&#39;vc.19.2" expl="rewrite premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cont_xor_rz&#39;vc.19.2.0" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.78" steps="21920"/></proof>
    </goal>
    <goal name="cont_xor_rz&#39;vc.19.2.1" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.74" steps="21920"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_rx&#39;vc" expl="VC for cont_rx" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_rx&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.67" steps="20797"/></proof>
   </goal>
   <goal name="cont_rx&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.70" steps="20797"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.70" steps="20797"/></proof>
   </goal>
   <goal name="cont_rx&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.66" steps="20797"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.69" steps="20849"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="20898"/></proof>
   </goal>
   <goal name="cont_rx&#39;vc.3.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.72" steps="20898"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.72" steps="20898"/></proof>
   </goal>
   <goal name="cont_rx&#39;vc.4.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="20898"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="20951"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.6.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="21154"/></proof>
   </goal>
   <goal name="cont_rx&#39;vc.6.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="21154"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.7.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="21154"/></proof>
   </goal>
   <goal name="cont_rx&#39;vc.7.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="21154"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="21207"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="3.02" steps="1171005"/></proof>
  </goal>
  <goal name="cont_rx&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="21407"/></proof>
  </goal>
  <goal name="cont_rx&#39;vc.11" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.11.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.77" steps="21920"/></proof>
   </goal>
   <goal name="cont_rx&#39;vc.11.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="21920"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.12" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.12.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.77" steps="21920"/></proof>
   </goal>
   <goal name="cont_rx&#39;vc.12.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="21920"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.13" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.13.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.77" steps="21921"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.14" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.14.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.77" steps="22178"/></proof>
   </goal>
   <goal name="cont_rx&#39;vc.14.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="22178"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.15" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.15.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.77" steps="22178"/></proof>
   </goal>
   <goal name="cont_rx&#39;vc.15.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.77" steps="22178"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.16" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.16.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.71" steps="22180"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.17" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.17.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.72" steps="22699"/></proof>
   </goal>
   <goal name="cont_rx&#39;vc.17.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="22699"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.18" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.18.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.78" steps="22699"/></proof>
   </goal>
   <goal name="cont_rx&#39;vc.18.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.79" steps="22699"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.19" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.19.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.78" steps="22700"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.20" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.20.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.79" steps="22959"/></proof>
   </goal>
   <goal name="cont_rx&#39;vc.20.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.77" steps="22959"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.21" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.21.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.71" steps="22959"/></proof>
   </goal>
   <goal name="cont_rx&#39;vc.21.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="22959"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.22" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_rx&#39;vc.22.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="22960"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.23" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="22959"/></proof>
  </goal>
  <goal name="cont_rx&#39;vc.24" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.75" steps="23284"/></proof>
  </goal>
  <goal name="cont_rx&#39;vc.25" expl="precondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_rx&#39;vc.25.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="res&#39;def">
    <goal name="cont_rx&#39;vc.25.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="sequence_equiv">
     <goal name="cont_rx&#39;vc.25.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="sequence_equiv">
      <goal name="cont_rx&#39;vc.25.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="1.07" steps="32007"/></proof>
      </goal>
      <goal name="cont_rx&#39;vc.25.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="1.12" steps="32007"/></proof>
      </goal>
      <goal name="cont_rx&#39;vc.25.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="2.33" steps="1017312"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_rx&#39;vc.25.0.0.1" expl="apply premises" proved="true">
     <proof prover="2"><result status="valid" time="1.05" steps="32007"/></proof>
     </goal>
     <goal name="cont_rx&#39;vc.25.0.0.2" expl="apply premises" proved="true">
     <proof prover="2"><result status="valid" time="1.14" steps="32007"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.26" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="(cont (hadamard --  (rz k) -- hadamard) co t n)">
   <goal name="cont_rx&#39;vc.26.0" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="(cont (hadamard --  (rz k)) co t n -- cont hadamard co t n)">
    <goal name="cont_rx&#39;vc.26.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="sequence_equiv">
     <goal name="cont_rx&#39;vc.26.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="3.31" steps="1313208"/></proof>
     </goal>
     <goal name="cont_rx&#39;vc.26.0.0.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="2.22" steps="1017709"/></proof>
     </goal>
     <goal name="cont_rx&#39;vc.26.0.0.2" expl="apply premises" proved="true">
     <proof prover="2"><result status="valid" time="0.82" steps="23659"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cont_rx&#39;vc.26.0.1" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="3.24" steps="1314192"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cont_rx&#39;vc.26.1" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="3.25" steps="1313703"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_rx&#39;vc.27" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.05" steps="1309727"/></proof>
  </goal>
  <goal name="cont_rx&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.82" steps="23714"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="swap_decomp&#39;vc" expl="VC for swap_decomp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="swap_decomp&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="swap_decomp&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="20798"/></proof>
   </goal>
   <goal name="swap_decomp&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="20798"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="swap_decomp&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="swap_decomp&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.72" steps="20798"/></proof>
   </goal>
   <goal name="swap_decomp&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="20798"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="swap_decomp&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="swap_decomp&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="20798"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="swap_decomp&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="swap_decomp&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="21056"/></proof>
   </goal>
   <goal name="swap_decomp&#39;vc.3.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="21056"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="swap_decomp&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="swap_decomp&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="21056"/></proof>
   </goal>
   <goal name="swap_decomp&#39;vc.4.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="21056"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="swap_decomp&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="swap_decomp&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="21056"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="swap_decomp&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="swap_decomp&#39;vc.6.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="21313"/></proof>
   </goal>
   <goal name="swap_decomp&#39;vc.6.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="21313"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="swap_decomp&#39;vc.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="swap_decomp&#39;vc.7.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="21313"/></proof>
   </goal>
   <goal name="swap_decomp&#39;vc.7.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="21313"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="swap_decomp&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="swap_decomp&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="21313"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="swap_decomp&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="21313"/></proof>
  </goal>
  <goal name="swap_decomp&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.73" steps="21313"/></proof>
  </goal>
  <goal name="swap_decomp&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.75" steps="21313"/></proof>
  </goal>
  <goal name="swap_decomp&#39;vc.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="4.84" steps="235072"/></proof>
  </goal>
  <goal name="swap_decomp&#39;vc.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="4.89" steps="235071"/></proof>
  </goal>
  <goal name="swap_decomp&#39;vc.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.76" steps="21569"/></proof>
  </goal>
  <goal name="swap_decomp&#39;vc.15" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.75" steps="21569"/></proof>
  </goal>
  <goal name="swap_decomp&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.77" steps="21569"/></proof>
  </goal>
  <goal name="swap_decomp&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.48" steps="1012710"/></proof>
  </goal>
  <goal name="swap_decomp&#39;vc.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.50" steps="1012760"/></proof>
  </goal>
  <goal name="swap_decomp&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.80" steps="1012023"/></proof>
  </goal>
  <goal name="swap_decomp&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.39" steps="1251573"/></proof>
  </goal>
  <goal name="swap_decomp&#39;vc.21" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="swap_decomp&#39;vc.21.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_equiv_circuits_path_sem">
    <goal name="swap_decomp&#39;vc.21.0.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="4.14" steps="1500546"/></proof>
    </goal>
    <goal name="swap_decomp&#39;vc.21.0.1" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="4.11" steps="1498768"/></proof>
    </goal>
    <goal name="swap_decomp&#39;vc.21.0.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="swap_decomp&#39;vc.21.0.2.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="1.79"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="swap_decomp&#39;vc.21.0.3" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="swap_decomp&#39;vc.21.0.3.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures5">
      <goal name="swap_decomp&#39;vc.21.0.3.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="swap_decomp&#39;vc.21.0.3.0.0.0" expl="apply premises" proved="true">
       <transf name="case" proved="true" arg1="(i =t1)">
        <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0" expl="true case (apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="swap&#39;spec3">
         <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0" expl="true case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures20">
          <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures13">
            <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="Ensures27">
             <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
              <transf name="rewrite" proved="true" arg1="Ensures19">
               <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
               <transf name="rewrite" proved="true" arg1="Ensures20">
                <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                <transf name="case" proved="true" arg1="(x t2 = 0)">
                 <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                 <transf name="case" proved="true" arg1="(x t1 = 0)">
                  <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                  <proof prover="0"><result status="valid" time="1.67"/></proof>
                  <proof prover="1"><result status="valid" time="1.93" steps="1243691"/></proof>
                  <proof prover="2"><result status="valid" time="0.78" steps="22140"/></proof>
                  </goal>
                  <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="false case (true case. apply premises)" proved="true">
                  <transf name="replace" proved="true" arg1="(x t1 )" arg2="1">
                   <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="false case (true case. apply premises)" proved="true">
                   <proof prover="0"><result status="valid" time="1.69"/></proof>
                   <proof prover="1"><result status="valid" time="1.95" steps="1227540"/></proof>
                   <proof prover="2"><result status="valid" time="0.77" steps="22104"/></proof>
                   </goal>
                   <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                   <proof prover="1"><result status="valid" time="4.21" steps="1500886"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="false case (true case. apply premises)" proved="true">
                 <transf name="case" proved="true" arg1="(x t1 = 0)">
                  <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="false case (true case. apply premises)" proved="true">
                  <transf name="replace" proved="true" arg1="(x t2 )" arg2="1">
                   <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="false case (true case. apply premises)" proved="true">
                   <proof prover="0"><result status="valid" time="1.63"/></proof>
                   <proof prover="1"><result status="valid" time="2.04" steps="1243649"/></proof>
                   <proof prover="2"><result status="valid" time="0.77" steps="22105"/></proof>
                   </goal>
                   <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="1"><result status="valid" time="4.07" steps="1502803"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="false case (true case. apply premises)" proved="true">
                  <transf name="replace" proved="true" arg1="(x t1 )" arg2="1">
                   <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="false case (true case. apply premises)" proved="true">
                   <transf name="replace" proved="true" arg1="(x t2 )" arg2="1">
                    <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="false case (true case. apply premises)" proved="true">
                    <proof prover="0"><result status="valid" time="1.58"/></proof>
                    <proof prover="1"><result status="valid" time="1.83" steps="1227534"/></proof>
                    <proof prover="2"><result status="valid" time="0.77" steps="22070"/></proof>
                    </goal>
                    <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
                    <proof prover="1"><result status="valid" time="4.24" steps="1502444"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1" expl="equality hypothesis" proved="true">
                   <transf name="assert" proved="true" arg1="(0 &lt;=&#39; x t1 &lt;&#39;2)">
                    <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1.0" expl="asserted formula" proved="true">
                    <transf name="replace" proved="true" arg1="(width result)" arg2="n" arg3="in" arg4="H3">
                     <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1.0.0" expl="asserted formula" proved="true">
                     <proof prover="0"><result status="valid" time="1.51"/></proof>
                     </goal>
                     <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1.0.1" expl="equality hypothesis" proved="true">
                     <proof prover="0"><result status="valid" time="1.65"/></proof>
                     <proof prover="1"><result status="valid" time="1.89" steps="1227486"/></proof>
                     <proof prover="2"><result status="valid" time="0.75" steps="22070"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1.1" expl="equality hypothesis" proved="true">
                    <proof prover="0"><result status="valid" time="2.27"/></proof>
                    <proof prover="1"><result status="valid" time="3.13" steps="1299368"/></proof>
                    <proof prover="2"><result status="valid" time="0.78" steps="22111"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.86" steps="1227440"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="1.85" steps="1227440"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="1.77" steps="1227442"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="2.84" steps="1299123"/></proof>
            </goal>
            <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="2.87" steps="1299199"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.91" steps="1243474"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.1.0" proved="true">
          <proof prover="0"><result status="valid" time="1.69"/></proof>
          <proof prover="1"><result status="valid" time="1.99" steps="1227442"/></proof>
          <proof prover="2"><result status="valid" time="0.82" steps="22033"/></proof>
          </goal>
          <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.1.1" proved="true">
          <proof prover="0"><result status="valid" time="1.74"/></proof>
          <proof prover="1"><result status="valid" time="1.92" steps="1227457"/></proof>
          <proof prover="2"><result status="valid" time="0.76" steps="22033"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.2.0" proved="true">
          <proof prover="0"><result status="valid" time="1.73"/></proof>
          <proof prover="1"><result status="valid" time="1.90" steps="1227442"/></proof>
          <proof prover="2"><result status="valid" time="0.81" steps="22033"/></proof>
          </goal>
          <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.2.1" proved="true">
          <proof prover="0"><result status="valid" time="1.73"/></proof>
          <proof prover="1"><result status="valid" time="2.02" steps="1227457"/></proof>
          <proof prover="2"><result status="valid" time="0.81" steps="22033"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="1.53"/></proof>
         <proof prover="1"><result status="valid" time="1.72" steps="1227440"/></proof>
         <proof prover="2"><result status="valid" time="0.75" steps="22033"/></proof>
         </goal>
         <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.0.4" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="1.67"/></proof>
         <proof prover="1"><result status="valid" time="1.82" steps="1227442"/></proof>
         <proof prover="2"><result status="valid" time="0.73" steps="22033"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1" expl="false case (apply premises)" proved="true">
        <transf name="case" proved="true" arg1="(i = t2)">
         <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0" expl="false case (true case. apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="swap&#39;spec2">
          <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0" expl="false case (true case. apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="Ensures19">
           <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0" expl="false case (true case. apply premises)" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="Ensures13">
             <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
             <transf name="rewrite" proved="true" arg1="Ensures13">
              <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
               <transf name="rewrite" proved="true" arg1="Ensures27">
                <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="Ensures19">
                  <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="Ensures20">
                   <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                   <transf name="rewrite" proved="true" arg1="Ensures28">
                    <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                     <transf name="rewrite" proved="true" arg1="Ensures35">
                      <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                      <transf name="case" proved="true" arg1="(x t2 = 0)">
                       <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                       <transf name="case" proved="true" arg1="(x t1 = 0)">
                        <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="false case (true case. apply premises)" proved="true">
                        <proof prover="0"><result status="valid" time="1.59"/></proof>
                        <proof prover="1"><result status="valid" time="2.02" steps="1243856"/></proof>
                        <proof prover="2"><result status="valid" time="0.71" steps="22161"/></proof>
                        </goal>
                        <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="false case (true case. apply premises)" proved="true">
                        <transf name="replace" proved="true" arg1="(x t1 )" arg2="1">
                         <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="false case (true case. apply premises)" proved="true">
                         <proof prover="0"><result status="valid" time="1.59"/></proof>
                         <proof prover="1"><result status="valid" time="2.05" steps="1243688"/></proof>
                         <proof prover="2"><result status="valid" time="0.80" steps="22123"/></proof>
                         </goal>
                         <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                         <proof prover="1"><result status="valid" time="4.21" steps="1502813"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="false case (true case. apply premises)" proved="true">
                       <transf name="case" proved="true" arg1="(x t1 = 0)">
                        <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="false case (true case. apply premises)" proved="true">
                        <transf name="replace" proved="true" arg1="(x t2 )" arg2="1">
                         <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="false case (true case. apply premises)" proved="true">
                         <proof prover="0"><result status="valid" time="1.56"/></proof>
                         <proof prover="1"><result status="valid" time="2.12" steps="1243699"/></proof>
                         <proof prover="2"><result status="valid" time="0.77" steps="22124"/></proof>
                         </goal>
                         <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                         <proof prover="1"><result status="valid" time="4.08" steps="1500662"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="false case (true case. apply premises)" proved="true">
                        <transf name="replace" proved="true" arg1="(x t1 )" arg2="1">
                         <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="false case (true case. apply premises)" proved="true">
                         <transf name="replace" proved="true" arg1="(x t2 )" arg2="1">
                          <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="false case (true case. apply premises)" proved="true">
                          <proof prover="0"><result status="valid" time="1.57"/></proof>
                          <proof prover="1"><result status="valid" time="1.78" steps="1227589"/></proof>
                          <proof prover="2"><result status="valid" time="0.76" steps="22089"/></proof>
                          </goal>
                          <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
                          <proof prover="1"><result status="valid" time="3.85" steps="1500122"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1" expl="equality hypothesis" proved="true">
                         <transf name="assert" proved="true" arg1="(0 &lt;=&#39; x t1 &lt;&#39;2)">
                          <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1.0" expl="asserted formula" proved="true">
                          <transf name="replace" proved="true" arg1="(width result)" arg2="n" arg3="in" arg4="H3">
                           <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1.0.0" expl="asserted formula" proved="true">
                           <proof prover="0"><result status="valid" time="1.59"/></proof>
                           </goal>
                           <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1.0.1" expl="equality hypothesis" proved="true">
                           <proof prover="0"><result status="valid" time="1.55"/></proof>
                           <proof prover="1"><result status="valid" time="1.82" steps="1227501"/></proof>
                           <proof prover="2"><result status="valid" time="0.78" steps="22088"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1.1" expl="equality hypothesis" proved="true">
                          <proof prover="0"><result status="valid" time="2.01"/></proof>
                          <proof prover="1"><result status="valid" time="3.05" steps="1299319"/></proof>
                          <proof prover="2"><result status="valid" time="0.78" steps="22130"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.91" steps="1227455"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.85" steps="1227464"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="1.72" steps="1227455"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="1.75" steps="1227455"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.76" steps="1227455"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="2.77" steps="1299104"/></proof>
              </goal>
              <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="2.74" steps="1299187"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="2.66" steps="1299104"/></proof>
             </goal>
             <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="2.61" steps="1299177"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="1.69" steps="1227457"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.67"/></proof>
          <proof prover="1"><result status="valid" time="2.01" steps="1227466"/></proof>
          <proof prover="2"><result status="valid" time="0.76" steps="22052"/></proof>
          </goal>
          <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.72"/></proof>
          <proof prover="1"><result status="valid" time="1.96" steps="1227466"/></proof>
          <proof prover="2"><result status="valid" time="0.78" steps="22052"/></proof>
          </goal>
          <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.3" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.75"/></proof>
          <proof prover="1"><result status="valid" time="1.96" steps="1227455"/></proof>
          <proof prover="2"><result status="valid" time="0.77" steps="22052"/></proof>
          </goal>
          <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.0.4" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.61"/></proof>
          <proof prover="1"><result status="valid" time="1.98" steps="1227457"/></proof>
          <proof prover="2"><result status="valid" time="0.78" steps="22052"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.1" expl="false case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures20">
          <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.1.0" expl="false case (apply premises)" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.1.0.0" expl="false case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures13">
            <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.1.0.0.0" expl="false case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="Ensures28">
             <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.1.0.0.0.0" expl="false case (apply premises)" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
              <transf name="rewrite" proved="true" arg1="Ensures20">
               <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.1.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
               <proof prover="1"><result status="valid" time="4.08" steps="1500167"/></proof>
               </goal>
               <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="1.90" steps="1227459"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="1.82" steps="1227459"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="2.96" steps="1298450"/></proof>
            </goal>
            <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.1.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="2.97" steps="1298588"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="swap_decomp&#39;vc.21.0.3.0.0.0.1.1.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.59" steps="1227459"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="swap_decomp&#39;vc.21.0.3.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.57" steps="1298402"/></proof>
      </goal>
      <goal name="swap_decomp&#39;vc.21.0.3.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.43" steps="1298486"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ccz&#39;vc" expl="VC for ccz" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ccz&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.73" steps="20835"/></proof>
  </goal>
  <goal name="ccz&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.73" steps="20835"/></proof>
  </goal>
  <goal name="ccz&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.72" steps="20835"/></proof>
  </goal>
  <goal name="ccz&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.73" steps="20835"/></proof>
  </goal>
  <goal name="ccz&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.73" steps="20835"/></proof>
  </goal>
  <goal name="ccz&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.73" steps="20835"/></proof>
  </goal>
  <goal name="ccz&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="20995"/></proof>
  </goal>
  <goal name="ccz&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.75" steps="20995"/></proof>
  </goal>
  <goal name="ccz&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="20996"/></proof>
  </goal>
  <goal name="ccz&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.73" steps="21200"/></proof>
  </goal>
  <goal name="ccz&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.72" steps="21200"/></proof>
  </goal>
  <goal name="ccz&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.71" steps="21202"/></proof>
  </goal>
  <goal name="ccz&#39;vc.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.69" steps="21407"/></proof>
  </goal>
  <goal name="ccz&#39;vc.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.68" steps="21408"/></proof>
  </goal>
  <goal name="ccz&#39;vc.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.70" steps="21408"/></proof>
  </goal>
  <goal name="ccz&#39;vc.15" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="4.84" steps="235976"/></proof>
  </goal>
  <goal name="ccz&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="5.00" steps="235975"/></proof>
  </goal>
  <goal name="ccz&#39;vc.17" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.76" steps="21664"/></proof>
  </goal>
  <goal name="ccz&#39;vc.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.78" steps="21664"/></proof>
  </goal>
  <goal name="ccz&#39;vc.19" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.79" steps="21664"/></proof>
  </goal>
  <goal name="ccz&#39;vc.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.68"/></proof>
  </goal>
  <goal name="ccz&#39;vc.21" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.62"/></proof>
  </goal>
  <goal name="ccz&#39;vc.22" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.23" steps="1175097"/></proof>
  </goal>
  <goal name="ccz&#39;vc.23" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.78" steps="21974"/></proof>
  </goal>
  <goal name="ccz&#39;vc.24" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures5">
   <goal name="ccz&#39;vc.24.0" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures11">
    <goal name="ccz&#39;vc.24.0.0" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.78" steps="22042"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ccz&#39;vc.24.1" expl="apply premises" proved="true">
   <proof prover="2"><result status="valid" time="0.81" steps="22026"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ccz&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="21974"/></proof>
  </goal>
  <goal name="ccz&#39;vc.26" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures4">
   <goal name="ccz&#39;vc.26.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures11">
    <goal name="ccz&#39;vc.26.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures19">
     <goal name="ccz&#39;vc.26.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures25">
      <goal name="ccz&#39;vc.26.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures31">
       <goal name="ccz&#39;vc.26.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="case" proved="true" arg1="(x t1 = 0)">
        <goal name="ccz&#39;vc.26.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
        <proof prover="0"><result status="valid" time="1.65"/></proof>
        </goal>
        <goal name="ccz&#39;vc.26.0.0.0.0.0.1" expl="false case (postcondition)" proved="true">
        <transf name="replace" proved="true" arg1="(x t1)" arg2="1">
         <goal name="ccz&#39;vc.26.0.0.0.0.0.1.0" expl="false case (postcondition)" proved="true">
         <transf name="case" proved="true" arg1="(x t2 = 0)">
          <goal name="ccz&#39;vc.26.0.0.0.0.0.1.0.0" expl="false case (true case. postcondition)" proved="true">
          <proof prover="0"><result status="valid" time="1.67"/></proof>
          </goal>
          <goal name="ccz&#39;vc.26.0.0.0.0.0.1.0.1" expl="false case (postcondition)" proved="true">
          <transf name="case" proved="true" arg1="(x t3 = 0)">
           <goal name="ccz&#39;vc.26.0.0.0.0.0.1.0.1.0" expl="false case (true case. postcondition)" proved="true">
           <proof prover="1"><result status="valid" time="2.52" steps="991715"/></proof>
           </goal>
           <goal name="ccz&#39;vc.26.0.0.0.0.0.1.0.1.1" expl="false case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="get_binary_one" arg2="with" arg3="n">
            <goal name="ccz&#39;vc.26.0.0.0.0.0.1.0.1.1.0" expl="false case (postcondition)" proved="true">
            <transf name="rewrite" proved="true" arg1="get_binary_one" arg2="with" arg3="n">
             <goal name="ccz&#39;vc.26.0.0.0.0.0.1.0.1.1.0.0" expl="false case (postcondition)" proved="true">
             <proof prover="1"><result status="valid" time="3.06" steps="1190502"/></proof>
             </goal>
             <goal name="ccz&#39;vc.26.0.0.0.0.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="2"><result status="valid" time="0.77" steps="22078"/></proof>
             </goal>
             <goal name="ccz&#39;vc.26.0.0.0.0.0.1.0.1.1.0.2" expl="rewrite premises" proved="true">
             <proof prover="2"><result status="valid" time="0.79" steps="22078"/></proof>
             </goal>
             <goal name="ccz&#39;vc.26.0.0.0.0.0.1.0.1.1.0.3" expl="rewrite premises" proved="true">
             <proof prover="2"><result status="valid" time="0.76" steps="22078"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="ccz&#39;vc.26.0.0.0.0.0.1.0.1.1.1" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="0.79" steps="22078"/></proof>
            </goal>
            <goal name="ccz&#39;vc.26.0.0.0.0.0.1.0.1.1.2" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="0.72" steps="22078"/></proof>
            </goal>
            <goal name="ccz&#39;vc.26.0.0.0.0.0.1.0.1.1.3" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="0.73" steps="22078"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="ccz&#39;vc.26.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="0"><result status="valid" time="1.61"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="ccz&#39;vc.26.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.78" steps="22023"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="ccz&#39;vc.26.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.78" steps="22023"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="ccz&#39;vc.26.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.79" steps="22023"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ccz&#39;vc.26.0.1" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.78" steps="22040"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ccz&#39;vc.26.1" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="0.78" steps="22040"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_toffoli&#39;vc" expl="VC for path_sem_toffoli" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_toffoli&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_sem_toffoli&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="20888"/></proof>
   </goal>
   <goal name="path_sem_toffoli&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="20888"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_toffoli&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_sem_toffoli&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="20888"/></proof>
   </goal>
   <goal name="path_sem_toffoli&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="20888"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_toffoli&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_sem_toffoli&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="20888"/></proof>
   </goal>
   <goal name="path_sem_toffoli&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="20888"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_toffoli&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_sem_toffoli&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="20888"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_toffoli&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_sem_toffoli&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="20888"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_toffoli&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_sem_toffoli&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="20888"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_toffoli&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="21148"/></proof>
  </goal>
  <goal name="path_sem_toffoli&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="4.67" steps="233453"/></proof>
  </goal>
  <goal name="path_sem_toffoli&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.73" steps="21148"/></proof>
  </goal>
  <goal name="path_sem_toffoli&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.71" steps="21148"/></proof>
  </goal>
  <goal name="path_sem_toffoli&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.70" steps="21408"/></proof>
  </goal>
  <goal name="path_sem_toffoli&#39;vc.11" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="path_sem_toffoli&#39;vc.11.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="path_sem_toffoli&#39;vc.11.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="xx&#39;def">
     <goal name="path_sem_toffoli&#39;vc.11.0.0.0" expl="precondition" proved="true">
     <proof prover="2"><result status="valid" time="0.79" steps="21457"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_toffoli&#39;vc.12" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures8">
   <goal name="path_sem_toffoli&#39;vc.12.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="path_sem_toffoli&#39;vc.12.0.0" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="((getbv x @ c1) = (getbv x @ c2) /\ (getbv x @ c2) = 1)">
     <goal name="path_sem_toffoli&#39;vc.12.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="replace" proved="true" arg1="(if (getbv x @ c1) = (getbv x @ c2) /\ (getbv x @ c2) = 1
     then path_sem (place xx t n) (bv_to_ket x) else bv_to_ket x)" arg2="( path_sem (place xx t n) (bv_to_ket x) )">
      <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0" expl="true case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures">
       <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0" expl="true case (postcondition)" proved="true">
       <transf name="apply" proved="true" arg1="bv_to_ket_eq">
        <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="2"><result status="valid" time="0.73" steps="21511"/></proof>
          </goal>
          <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="4.90" steps="255750"/></proof>
              </goal>
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.72" steps="21531"/></proof>
              </goal>
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.69" steps="21514"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.12" steps="1511355"/></proof>
              </goal>
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.79" steps="21531"/></proof>
              </goal>
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.77" steps="21514"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.75" steps="21512"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
             <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.31" steps="1507536"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="0.75" steps="21531"/></proof>
             </goal>
             <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="0.79" steps="21514"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
             <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.42" steps="1507536"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="0.77" steps="21531"/></proof>
             </goal>
             <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="0.79" steps="21514"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="0.76" steps="21512"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
          <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
           <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
             <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="Ensures2">
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="eliminate_if" proved="true" >
               <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.0.0.0.0.0" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="Ensures10">
                 <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="xx&#39;def1">
                   <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="add_zero">
                     <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="one_mult">
                      <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="2"><result status="valid" time="0.82" steps="21600"/></proof>
                      </goal>
                      <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="2"><result status="valid" time="0.82" steps="21583"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="2"><result status="valid" time="0.83" steps="21582"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.77" steps="21583"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.99"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="4.52" steps="1516206"/></proof>
               </goal>
               <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.75" steps="21535"/></proof>
               </goal>
               <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.76" steps="21518"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="4.38" steps="1516206"/></proof>
               </goal>
               <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.78" steps="21535"/></proof>
               </goal>
               <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.74" steps="21518"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
            <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.2.0" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="0.72" steps="21514"/></proof>
            </goal>
            <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.2.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.2.1.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.2.1.0.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.2.1.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.2.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="4.23" steps="1515948"/></proof>
                </goal>
                <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.2.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.80" steps="21535"/></proof>
                </goal>
                <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.2.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.78" steps="21518"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.2.1.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.2.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.2.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="4.17" steps="1515948"/></proof>
                </goal>
                <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.2.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.78" steps="21535"/></proof>
                </goal>
                <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.2.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.78" steps="21518"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.0.2.2" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="0.75" steps="21514"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
               <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.1.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="4.21" steps="1512643"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.78" steps="21535"/></proof>
              </goal>
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.77" steps="21518"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
               <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.1.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="4.15" steps="1512643"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.77" steps="21535"/></proof>
              </goal>
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.78" steps="21518"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="0.77" steps="21514"/></proof>
           </goal>
           <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.2.1.0.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.2.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.2.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="4.35" steps="1515948"/></proof>
               </goal>
               <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.2.1.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.78" steps="21535"/></proof>
               </goal>
               <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.2.1.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.74" steps="21518"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.2.1.0.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.2.1.0.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.2.1.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="4.42" steps="1515948"/></proof>
               </goal>
               <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.2.1.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.73" steps="21535"/></proof>
               </goal>
               <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.2.1.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.80" steps="21518"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="0.70" steps="21514"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.62"/></proof>
       </goal>
       <goal name="path_sem_toffoli&#39;vc.12.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="2.05"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_toffoli&#39;vc.12.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="2"><result status="valid" time="0.75" steps="21543"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_toffoli&#39;vc.12.0.0.1" expl="false case (postcondition)" proved="true">
     <transf name="replace" proved="true" arg1="(if (getbv x @ c1) = (getbv x @ c2) /\ (getbv x @ c2) = 1
     then path_sem (place xx t n) (bv_to_ket x) else bv_to_ket x)" arg2="(bv_to_ket x)">
      <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0" expl="false case (postcondition)" proved="true">
      <transf name="apply" proved="true" arg1="bv_to_ket_eq">
       <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="make_bv_length">
        <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="0.77" steps="21457"/></proof>
        </goal>
        <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
            <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="4.36" steps="1511570"/></proof>
            </goal>
            <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="2"><result status="valid" time="0.79" steps="21476"/></proof>
            </goal>
            <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="2"><result status="valid" time="0.72" steps="21459"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
            <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="4.17" steps="1511570"/></proof>
            </goal>
            <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
            <proof prover="2"><result status="valid" time="0.79" steps="21476"/></proof>
            </goal>
            <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
            <proof prover="2"><result status="valid" time="0.76" steps="21459"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.74" steps="21458"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
         <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
          <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
            <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="case" proved="true" arg1="(i = t)">
             <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
             <transf name="rewrite" proved="true" arg1="Ensures10">
              <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
              <transf name="replace" proved="true" arg1="((getbv x @ c1) *&#39; (getbv x @ c2))" arg2="0">
               <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
               <proof prover="2"><result status="valid" time="0.74" steps="21530"/></proof>
               </goal>
               <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
               <transf name="case" proved="true" arg1="((getbv x @ c1) = 0)">
                <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.0.0.0.0.0.1.0" expl="true case (equality hypothesis)" proved="true">
                <proof prover="2"><result status="valid" time="0.77" steps="21567"/></proof>
                </goal>
                <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.0.0.0.0.0.1.1" expl="false case (equality hypothesis)" proved="true">
                <transf name="case" proved="true" arg1="((getbv x @ c2) = 0)">
                 <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.0.0.0.0.0.1.1.0" expl="false case (true case. equality hypothesis)" proved="true">
                 <proof prover="2"><result status="valid" time="0.76" steps="21585"/></proof>
                 </goal>
                 <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.0.0.0.0.0.1.1.1" expl="false case (equality hypothesis)" proved="true">
                 <proof prover="0"><result status="valid" time="3.75"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="2"><result status="valid" time="0.74" steps="21512"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
             <proof prover="0"><result status="valid" time="1.82"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
              <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.27" steps="1511463"/></proof>
              </goal>
              <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.78" steps="21479"/></proof>
              </goal>
              <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.73" steps="21462"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
              <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.39" steps="1511463"/></proof>
              </goal>
              <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.77" steps="21479"/></proof>
              </goal>
              <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.76" steps="21462"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.78" steps="21459"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
             <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="4.43" steps="1516443"/></proof>
             </goal>
             <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="0.74" steps="21480"/></proof>
             </goal>
             <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="0.78" steps="21462"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
             <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="4.06" steps="1516443"/></proof>
             </goal>
             <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="0.77" steps="21480"/></proof>
             </goal>
             <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="0.80" steps="21462"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_toffoli&#39;vc.12.0.0.1.0.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="0.74" steps="21460"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_toffoli&#39;vc.12.0.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="2"><result status="valid" time="0.76" steps="21537"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_toffoli&#39;vc.12.1" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="4.96" steps="239292"/></proof>
   </goal>
   <goal name="path_sem_toffoli&#39;vc.12.2" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="4.94" steps="238070"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_equiv_flat_mute&#39;vc" expl="VC for set_equiv_flat_mute" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_equiv_flat_mute&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.75" steps="20929"/></proof>
  </goal>
  <goal name="set_equiv_flat_mute&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.08" steps="966621"/></proof>
  </goal>
  <goal name="set_equiv_flat_mute&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="20929"/></proof>
  </goal>
  <goal name="set_equiv_flat_mute&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.40" steps="1049207"/></proof>
  </goal>
  <goal name="set_equiv_flat_mute&#39;vc.4" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits_bv">
   <goal name="set_equiv_flat_mute&#39;vc.4.0" expl="apply premises" proved="true">
   <proof prover="2"><result status="valid" time="0.72" steps="20929"/></proof>
   </goal>
   <goal name="set_equiv_flat_mute&#39;vc.4.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="set_equiv_flat_mute&#39;vc.4.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures">
     <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures1">
      <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="bv_to_ket_eq">
       <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="make_bv_length">
        <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="2"><result status="valid" time="0.69" steps="20980"/></proof>
         </goal>
         <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
             <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="4.72" steps="242151"/></proof>
             </goal>
             <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="0.72" steps="21000"/></proof>
             </goal>
             <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="0.71" steps="20981"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
             <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="4.74" steps="242151"/></proof>
             </goal>
             <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="0.75" steps="21000"/></proof>
             </goal>
             <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="0.73" steps="20981"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="4.73" steps="231472"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
            <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="1.97"/></proof>
            </goal>
            <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="2"><result status="valid" time="0.71" steps="21000"/></proof>
            </goal>
            <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="2"><result status="valid" time="0.72" steps="20981"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
            <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="1.94"/></proof>
            </goal>
            <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
            <proof prover="2"><result status="valid" time="0.76" steps="21000"/></proof>
            </goal>
            <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
            <proof prover="2"><result status="valid" time="0.77" steps="20981"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="4.73" steps="231472"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
          <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
           <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
            <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="Requires">
              <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="4.70" steps="231828"/></proof>
              </goal>
              <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.75" steps="20981"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="4.93" steps="242263"/></proof>
                </goal>
                <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.75" steps="21001"/></proof>
                </goal>
                <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.76" steps="20984"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.90"/></proof>
                </goal>
                <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.76" steps="21001"/></proof>
                </goal>
                <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.76" steps="20984"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="0.74" steps="20982"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="4.92" steps="242236"/></proof>
               </goal>
               <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.75" steps="21001"/></proof>
               </goal>
               <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.77" steps="20984"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="4.98" steps="242236"/></proof>
               </goal>
               <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.78" steps="21001"/></proof>
               </goal>
               <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.77" steps="20984"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="0.76" steps="20981"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
              <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="1.88"/></proof>
              </goal>
              <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.76" steps="21001"/></proof>
              </goal>
              <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.76" steps="20984"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
              <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="1.81"/></proof>
              </goal>
              <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.76" steps="21001"/></proof>
              </goal>
              <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.78" steps="20984"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="4.80" steps="233021"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="set_equiv_flat_mute&#39;vc.4.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.73" steps="20980"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="set_equiv_flat_mute&#39;vc.4.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.72" steps="20980"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_ccz&#39;vc" expl="VC for path_sem_ccz" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_ccz&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_sem_ccz&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="20888"/></proof>
   </goal>
   <goal name="path_sem_ccz&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="20888"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_ccz&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_sem_ccz&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.73" steps="20888"/></proof>
   </goal>
   <goal name="path_sem_ccz&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="20888"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_ccz&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_sem_ccz&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.72" steps="20888"/></proof>
   </goal>
   <goal name="path_sem_ccz&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="20888"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_ccz&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_sem_ccz&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="20888"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_ccz&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_sem_ccz&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="20888"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_ccz&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="path_sem_ccz&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.76" steps="20888"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_ccz&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.70" steps="21046"/></proof>
  </goal>
  <goal name="path_sem_ccz&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.71" steps="21046"/></proof>
  </goal>
  <goal name="path_sem_ccz&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.72" steps="21046"/></proof>
  </goal>
  <goal name="path_sem_ccz&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="21305"/></proof>
  </goal>
  <goal name="path_sem_ccz&#39;vc.10" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures8">
   <goal name="path_sem_ccz&#39;vc.10.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="path_sem_ccz&#39;vc.10.0.0" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="((getbv x @ c1) = (getbv x @ c2) /\ (getbv x @ c2) = 1)">
     <goal name="path_sem_ccz&#39;vc.10.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="replace" proved="true" arg1="(if (getbv x @ c1) = (getbv x @ c2) /\ (getbv x @ c2) = 1
     then path_sem (place zz t n) (bv_to_ket x) else bv_to_ket x)" arg2="( path_sem (place zz t n) (bv_to_ket x) )">
      <goal name="path_sem_ccz&#39;vc.10.0.0.0.0" expl="true case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures">
       <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0" expl="true case (postcondition)" proved="true">
       <transf name="apply" proved="true" arg1="scalar_eq_gen">
        <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="bv_to_ket_eq">
         <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="2"><result status="valid" time="0.71" steps="21409"/></proof>
           </goal>
           <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="4.33" steps="1508144"/></proof>
               </goal>
               <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.77" steps="21429"/></proof>
               </goal>
               <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.77" steps="21411"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="4.36" steps="1508144"/></proof>
               </goal>
               <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.76" steps="21429"/></proof>
               </goal>
               <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.77" steps="21411"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="0.74" steps="21409"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
              <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.64" steps="1508313"/></proof>
              </goal>
              <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.78" steps="21429"/></proof>
              </goal>
              <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.76" steps="21412"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
              <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.54" steps="1508313"/></proof>
              </goal>
              <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.76" steps="21429"/></proof>
              </goal>
              <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.70" steps="21412"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.70" steps="21409"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
            <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
             <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="Ensures2">
               <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="eliminate_if" proved="true" >
                <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.0.0.0.0" proved="true">
                <transf name="rewrite" proved="true" arg1="Ensures11">
                 <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="zz&#39;def1">
                    <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="2"><result status="valid" time="0.78" steps="21496"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="0.72" steps="21456"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.87" steps="1273058"/></proof>
                 </goal>
                 <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.75" steps="21438"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                 <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.97"/></proof>
                  </goal>
                  <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="4.93" steps="254643"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.73" steps="21431"/></proof>
                 </goal>
                 <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.72" steps="21413"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                 <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="4.58" steps="1508102"/></proof>
                 </goal>
                 <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.76" steps="21431"/></proof>
                 </goal>
                 <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.76" steps="21413"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="2"><result status="valid" time="0.75" steps="21412"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="4.77" steps="1508351"/></proof>
                </goal>
                <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.77" steps="21431"/></proof>
                </goal>
                <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.78" steps="21413"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.92"/></proof>
                 </goal>
                 <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.90"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.73" steps="21431"/></proof>
                </goal>
                <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.90" steps="21413"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="0.79" steps="21412"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="4.50" steps="1513203"/></proof>
               </goal>
               <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.76" steps="21431"/></proof>
               </goal>
               <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.76" steps="21414"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="4.57" steps="1513203"/></proof>
               </goal>
               <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.78" steps="21431"/></proof>
               </goal>
               <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.78" steps="21414"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="0.76" steps="21412"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures1">
         <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures9">
          <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="zz&#39;def">
            <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="0.77" steps="21443"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="4.24" steps="1254786"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_ccz&#39;vc.10.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.79" steps="21409"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_ccz&#39;vc.10.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="2"><result status="valid" time="0.79" steps="21442"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_ccz&#39;vc.10.0.0.1" expl="false case (postcondition)" proved="true">
     <transf name="replace" proved="true" arg1="(if (getbv x @ c1) = (getbv x @ c2) /\ (getbv x @ c2) = 1
     then path_sem (place zz t n) (bv_to_ket x) else bv_to_ket x)" arg2="(bv_to_ket x)">
      <goal name="path_sem_ccz&#39;vc.10.0.0.1.0" expl="false case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
       <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0" expl="false case (postcondition)" proved="true">
       <transf name="apply" proved="true" arg1="bv_to_ket_eq">
        <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="2"><result status="valid" time="0.75" steps="21355"/></proof>
         </goal>
         <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
             <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="4.77" steps="1508694"/></proof>
             </goal>
             <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="0.76" steps="21375"/></proof>
             </goal>
             <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="0.73" steps="21356"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
             <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="4.92" steps="252552"/></proof>
              </goal>
              <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="4.91" steps="252811"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="0.74" steps="21375"/></proof>
             </goal>
             <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="0.73" steps="21356"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="0.71" steps="21355"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
          <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
           <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="Ensures11">
             <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="4.78" steps="241059"/></proof>
             </goal>
             <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="0.72" steps="21357"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="4.97" steps="252373"/></proof>
               </goal>
               <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.72" steps="21376"/></proof>
               </goal>
               <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.75" steps="21359"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="4.77" steps="1508188"/></proof>
               </goal>
               <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.77" steps="21376"/></proof>
               </goal>
               <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.77" steps="21359"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="0.75" steps="21356"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
              <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.10" steps="1513773"/></proof>
              </goal>
              <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.77" steps="21377"/></proof>
              </goal>
              <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.76" steps="21359"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
              <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.1.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="1.83"/></proof>
               </goal>
               <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.1.0.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="1.82"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.78" steps="21377"/></proof>
              </goal>
              <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.76" steps="21359"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.74" steps="21358"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.1" expl="rewrite premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.1.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures9">
         <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
         <transf name="case" proved="true" arg1="(getbv x c1 = 0)">
          <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.1.0.0.0" expl="true case (rewrite premises)" proved="true">
          <proof prover="0"><result status="valid" time="1.83"/></proof>
          </goal>
          <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.1.0.0.1" expl="false case (rewrite premises)" proved="true">
          <transf name="case" proved="true" arg1="(getbv x c2 = 0)">
           <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.1.0.0.1.0" expl="false case (true case. rewrite premises)" proved="true">
           <proof prover="0"><result status="valid" time="1.81"/></proof>
           </goal>
           <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.1.0.0.1.1" expl="false case (rewrite premises)" proved="true">
           <proof prover="0"><result status="valid" time="2.84"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_ccz&#39;vc.10.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="4.07" steps="1506239"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_ccz&#39;vc.10.0.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="2"><result status="valid" time="0.75" steps="21435"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_ccz&#39;vc.10.1" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="21305"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_ccz_&#39;vc" expl="VC for path_sem_ccz_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_ccz_&#39;vc.0" expl="assertion" proved="true">
  <transf name="case" proved="true" arg1="(c1 &lt;&#39; t)">
   <goal name="path_sem_ccz_&#39;vc.0.0" expl="true case (assertion)" proved="true">
   <transf name="rewrite" proved="true" arg1="concat_value_left">
    <goal name="path_sem_ccz_&#39;vc.0.0.0" expl="true case (assertion)" proved="true">
    <transf name="rewrite" proved="true" arg1="concat_value_left">
     <goal name="path_sem_ccz_&#39;vc.0.0.0.0" expl="true case (assertion)" proved="true">
     <proof prover="0"><result status="valid" time="1.71"/></proof>
     </goal>
     <goal name="path_sem_ccz_&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.72"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_ccz_&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="1.71"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_ccz_&#39;vc.0.1" expl="false case (assertion)" proved="true">
   <transf name="rewrite" proved="true" arg1="concat_value_right">
    <goal name="path_sem_ccz_&#39;vc.0.1.0" expl="false case (assertion)" proved="true">
    <transf name="rewrite" proved="true" arg1="tpart_value_b">
     <goal name="path_sem_ccz_&#39;vc.0.1.0.0" expl="false case (assertion)" proved="true">
     <transf name="rewrite" proved="true" arg1="concat_length">
      <goal name="path_sem_ccz_&#39;vc.0.1.0.0.0" expl="false case (assertion)" proved="true">
      <proof prover="0"><result status="valid" time="1.73"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_ccz_&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.73" steps="20991"/></proof>
     </goal>
     <goal name="path_sem_ccz_&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.75"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_ccz_&#39;vc.0.1.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="1.82"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_ccz_&#39;vc.1" expl="assertion" proved="true">
  <transf name="case" proved="true" arg1="(c2&lt;&#39;t)">
   <goal name="path_sem_ccz_&#39;vc.1.0" expl="true case (assertion)" proved="true">
   <transf name="rewrite" proved="true" arg1="concat_value_left">
    <goal name="path_sem_ccz_&#39;vc.1.0.0" expl="true case (assertion)" proved="true">
    <transf name="rewrite" proved="true" arg1="concat_value_left">
     <goal name="path_sem_ccz_&#39;vc.1.0.0.0" expl="true case (assertion)" proved="true">
     <proof prover="0"><result status="valid" time="1.74"/></proof>
     </goal>
     <goal name="path_sem_ccz_&#39;vc.1.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="3.30" steps="1197333"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_ccz_&#39;vc.1.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="3.36" steps="1197730"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_ccz_&#39;vc.1.1" expl="false case (assertion)" proved="true">
   <transf name="rewrite" proved="true" arg1="concat_value_right">
    <goal name="path_sem_ccz_&#39;vc.1.1.0" expl="false case (assertion)" proved="true">
    <transf name="rewrite" proved="true" arg1="tpart_value_b">
     <goal name="path_sem_ccz_&#39;vc.1.1.0.0" expl="false case (assertion)" proved="true">
     <transf name="rewrite" proved="true" arg1="concat_length">
      <goal name="path_sem_ccz_&#39;vc.1.1.0.0.0" expl="false case (assertion)" proved="true">
      <transf name="rewrite" proved="true" arg1="hpart_length">
       <goal name="path_sem_ccz_&#39;vc.1.1.0.0.0.0" expl="false case (assertion)" proved="true">
       <proof prover="2"><result status="valid" time="0.74" steps="21008"/></proof>
       </goal>
       <goal name="path_sem_ccz_&#39;vc.1.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.71" steps="20990"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_ccz_&#39;vc.1.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.72" steps="20991"/></proof>
     </goal>
     <goal name="path_sem_ccz_&#39;vc.1.1.0.2" expl="rewrite premises" proved="true">
     <transf name="rewrite" proved="true" arg1="concat_length">
      <goal name="path_sem_ccz_&#39;vc.1.1.0.2.0" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="hpart_length">
       <goal name="path_sem_ccz_&#39;vc.1.1.0.2.0.0" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.71" steps="21007"/></proof>
       </goal>
       <goal name="path_sem_ccz_&#39;vc.1.1.0.2.0.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.76" steps="20990"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_ccz_&#39;vc.1.1.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="3.56" steps="1209647"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_ccz_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.76" steps="20937"/></proof>
  </goal>
  <goal name="path_sem_ccz_&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="4.99" steps="242430"/></proof>
  </goal>
  <goal name="path_sem_ccz_&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="4.93" steps="242548"/></proof>
  </goal>
  <goal name="path_sem_ccz_&#39;vc.5" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="path_sem_ccz_&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
    <goal name="path_sem_ccz_&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
     <goal name="path_sem_ccz_&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_sum_">
      <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
        <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
         <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="path_sem_sum_">
          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_r_rew">
           <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
            <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="eliminate_if" proved="true" >
             <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0" expl="VC for path_sem_ccz_" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
              <transf name="apply" proved="true" arg1="ket_sum_eq">
               <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="2.95"/></proof>
               </goal>
               <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.73" steps="21117"/></proof>
               </goal>
               <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="path_sem_scal">
                  <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="path_sem_scal">
                   <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                    <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                     <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="apply" proved="true" arg1="scalar_eq">
                      <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                        <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                         <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="path_sem_ccz2">
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="ket_to_bv_concat">
                           <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="ket_to_bv_concat">
                            <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                            <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                             <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                             <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                              <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                              <transf name="apply" proved="true" arg1="place_kron">
                               <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                               <proof prover="2"><result status="valid" time="0.80" steps="21167"/></proof>
                               </goal>
                               <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                               <proof prover="2"><result status="valid" time="0.80" steps="21167"/></proof>
                               </goal>
                               <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                               <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                                <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                                <transf name="apply" proved="true" arg1="hpart_length">
                                 <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                                 <proof prover="2"><result status="valid" time="0.81" steps="21167"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                               <proof prover="0"><result status="valid" time="1.94"/></proof>
                               </goal>
                               <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="apply premises" proved="true">
                               <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                                <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.0" expl="apply premises" proved="true">
                                <transf name="rewrite" proved="true" arg1="tpart_length">
                                 <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.0.0" expl="apply premises" proved="true">
                                 <proof prover="2"><result status="valid" time="0.82" steps="21167"/></proof>
                                 </goal>
                                 <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.0.1" expl="rewrite premises" proved="true">
                                 <proof prover="2"><result status="valid" time="0.77" steps="21183"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="apply premises" proved="true">
                               <proof prover="2"><result status="valid" time="0.79" steps="21167"/></proof>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.78" steps="21167"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.81" steps="21167"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.78" steps="21167"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.85" steps="21167"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.82" steps="21167"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.76" steps="21167"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="concat_length">
                           <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.7.0" expl="rewrite premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="concat_length">
                            <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.7.0.0" expl="rewrite premises" proved="true">
                            <transf name="rewrite" proved="true" arg1="hpart_length">
                             <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.7.0.0.0" expl="rewrite premises" proved="true">
                             <transf name="rewrite" proved="true" arg1="tpart_length">
                              <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.7.0.0.0.0" expl="rewrite premises" proved="true">
                              <proof prover="2"><result status="valid" time="4.95" steps="255421"/></proof>
                              </goal>
                              <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.7.0.0.0.1" expl="rewrite premises" proved="true">
                              <proof prover="2"><result status="valid" time="0.77" steps="21183"/></proof>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.7.0.0.1" expl="rewrite premises" proved="true">
                             <proof prover="2"><result status="valid" time="0.77" steps="21167"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
                          <proof prover="0"><result status="valid" time="1.97"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="4.95" steps="258350"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="replace" proved="true" arg1="(width (ccz c1 c2 t n))" arg2="(t+&#39;1+&#39;(n-&#39;&#39; (t+&#39;1)))">
                   <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="kronecker_ket_l">
                    <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.1.0.0" expl="apply premises" proved="true">
                    <proof prover="2"><result status="valid" time="0.71" steps="21167"/></proof>
                    </goal>
                    <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.1.0.1" expl="apply premises" proved="true">
                    <proof prover="2"><result status="valid" time="0.72" steps="21167"/></proof>
                    </goal>
                    <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.1.0.2" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="kronecker_ket_l">
                     <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.1.0.2.0" expl="apply premises" proved="true">
                     <proof prover="2"><result status="valid" time="0.72" steps="21167"/></proof>
                     </goal>
                     <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.1.0.2.1" expl="apply premises" proved="true">
                     <proof prover="2"><result status="valid" time="0.73" steps="21167"/></proof>
                     </goal>
                     <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.1.0.2.2" expl="apply premises" proved="true">
                     <proof prover="1"><result status="valid" time="3.95" steps="1332618"/></proof>
                     </goal>
                     <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.1.0.2.3" expl="apply premises" proved="true">
                     <proof prover="2"><result status="valid" time="4.94" steps="258170"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.1.0.3" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                     <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.1.0.3.0" expl="apply premises" proved="true">
                     <proof prover="1"><result status="valid" time="4.12" steps="1336276"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.1.1" expl="equality hypothesis" proved="true">
                   <proof prover="0"><result status="valid" time="2.01"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
              <transf name="apply" proved="true" arg1="ket_sum_eq">
               <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="2.47"/></proof>
               </goal>
               <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="0.74" steps="21063"/></proof>
               </goal>
               <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="path_sem_scal">
                  <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
                   <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
                    <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="scalar_eq">
                     <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="split_all_full" proved="true" >
                      <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                       <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                        <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <transf name="case" proved="true" arg1="((getbv x @ c2)  = 1)">
                         <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                         <transf name="rewrite" proved="true" arg1="path_sem_ccz1">
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                          <proof prover="2"><result status="valid" time="0.88" steps="21149"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.81" steps="21149"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.82" steps="21149"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.83" steps="21149"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.80" steps="21149"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.83" steps="21149"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.81" steps="21149"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="concat_length">
                           <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.0.7.0" expl="rewrite premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="concat_length">
                            <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.0.7.0.0" expl="rewrite premises" proved="true">
                            <transf name="rewrite" proved="true" arg1="tpart_length">
                             <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.0.7.0.0.0" expl="rewrite premises" proved="true">
                             <transf name="rewrite" proved="true" arg1="hpart_length">
                              <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.0.7.0.0.0.0" expl="rewrite premises" proved="true">
                              <proof prover="0"><result status="valid" time="1.88"/></proof>
                              </goal>
                              <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.0.7.0.0.0.1" expl="rewrite premises" proved="true">
                              <proof prover="2"><result status="valid" time="0.82" steps="21149"/></proof>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.0.7.0.0.1" expl="rewrite premises" proved="true">
                             <proof prover="2"><result status="valid" time="0.82" steps="21166"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
                          <proof prover="0"><result status="valid" time="1.93"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.1" expl="false case (apply premises)" proved="true">
                         <transf name="rewrite" proved="true" arg1="path_sem_ccz">
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.1.0" expl="false case (apply premises)" proved="true">
                          <proof prover="2"><result status="valid" time="0.78" steps="21113"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.79" steps="21113"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.79" steps="21113"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.1.3" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.79" steps="21113"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.1.4" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.81" steps="21113"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.1.5" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.81" steps="21113"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.1.6" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="0.77" steps="21113"/></proof>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.1.7" expl="rewrite premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="concat_length">
                           <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.1.7.0" expl="rewrite premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="concat_length">
                            <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.1.7.0.0" expl="rewrite premises" proved="true">
                            <transf name="rewrite" proved="true" arg1="tpart_length">
                             <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.1.7.0.0.0" expl="rewrite premises" proved="true">
                             <transf name="rewrite" proved="true" arg1="hpart_length">
                              <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.1.7.0.0.0.0" expl="rewrite premises" proved="true">
                              <proof prover="0"><result status="valid" time="1.93"/></proof>
                              </goal>
                              <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.1.7.0.0.0.1" expl="rewrite premises" proved="true">
                              <proof prover="2"><result status="valid" time="0.80" steps="21113"/></proof>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.1.7.0.0.1" expl="rewrite premises" proved="true">
                             <proof prover="2"><result status="valid" time="0.83" steps="21130"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.0.1.8" expl="rewrite premises" proved="true">
                          <proof prover="0"><result status="valid" time="1.91"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="replace" proved="true" arg1="(width (ccz c1 c2 t n))" arg2="(t+&#39;1+&#39;(n-&#39;&#39; (t+&#39;1)))">
                   <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="kronecker_ket_l">
                    <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.1.0.0" expl="apply premises" proved="true">
                    <proof prover="2"><result status="valid" time="0.77" steps="21112"/></proof>
                    </goal>
                    <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.1.0.1" expl="apply premises" proved="true">
                    <proof prover="2"><result status="valid" time="0.78" steps="21112"/></proof>
                    </goal>
                    <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.1.0.2" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="kronecker_ket_l">
                     <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.1.0.2.0" expl="apply premises" proved="true">
                     <proof prover="2"><result status="valid" time="0.76" steps="21112"/></proof>
                     </goal>
                     <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.1.0.2.1" expl="apply premises" proved="true">
                     <proof prover="2"><result status="valid" time="0.71" steps="21112"/></proof>
                     </goal>
                     <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.1.0.2.2" expl="apply premises" proved="true">
                     <proof prover="1"><result status="valid" time="4.12" steps="1332620"/></proof>
                     </goal>
                     <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.1.0.2.3" expl="apply premises" proved="true">
                     <proof prover="2"><result status="valid" time="4.92" steps="256610"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.1.0.3" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                     <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.1.0.3.0" expl="apply premises" proved="true">
                     <proof prover="2"><result status="valid" time="4.78" steps="245794"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.1.1" expl="equality hypothesis" proved="true">
                   <proof prover="2"><result status="valid" time="4.80" steps="245840"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="replace" proved="true" arg1="(1 +&#39; ket_length (bv_to_ket (hpart x t)))" arg2="(ket_length (bv_to_ket (hpart x t)) +&#39; 1)">
               <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.85"/></proof>
                </goal>
                <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="0.70" steps="21035"/></proof>
                </goal>
                <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="2.02"/></proof>
                </goal>
                <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="path_sem_ket_l">
                 <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.1.0.0.0.3.0" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="5.00" steps="258735"/></proof>
                 </goal>
                 <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.1.0.0.0.3.1" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.70" steps="21035"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="2"><result status="valid" time="0.70" steps="21035"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="4.75" steps="243747"/></proof>
            </goal>
            <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="4.73" steps="243180"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="path_sem_ket_l">
              <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.01" steps="1316987"/></proof>
              </goal>
              <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.70" steps="21035"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="4.77" steps="243636"/></proof>
           </goal>
           <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="4.76" steps="243180"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="4.74" steps="243253"/></proof>
          </goal>
          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.71" steps="20987"/></proof>
          </goal>
          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_ccz_&#39;vc.5.0.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="4.06" steps="1316987"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_ccz_&#39;vc.5.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="4.75" steps="243253"/></proof>
      </goal>
      <goal name="path_sem_ccz_&#39;vc.5.0.0.0.2" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(width (ccz c1 c2 t n))" arg2="(1 +&#39; t +&#39; (n-&#39;&#39;t-&#39;&#39;1))">
       <goal name="path_sem_ccz_&#39;vc.5.0.0.0.2.0" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="4.37" steps="1299714"/></proof>
       </goal>
       <goal name="path_sem_ccz_&#39;vc.5.0.0.0.2.1" expl="equality hypothesis" proved="true">
       <proof prover="2"><result status="valid" time="4.79" steps="244069"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_ccz_&#39;vc.5.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="path_sem_ccz_&#39;vc.5.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_ccz_&#39;vc.5.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="replace" proved="true" arg1="(width (ccz c1 c2 t n))" arg2="(t +&#39; 1 +&#39; (n-&#39;&#39;t-&#39;&#39;1))">
         <goal name="path_sem_ccz_&#39;vc.5.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="2"><result status="valid" time="0.70" steps="21036"/></proof>
          </goal>
          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="2"><result status="valid" time="0.72" steps="21036"/></proof>
          </goal>
          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.3.0.0.0.2" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_ket_l">
           <goal name="path_sem_ccz_&#39;vc.5.0.0.0.3.0.0.0.2.0" expl="apply premises" proved="true">
           <proof prover="2"><result status="valid" time="0.69" steps="21035"/></proof>
           </goal>
           <goal name="path_sem_ccz_&#39;vc.5.0.0.0.3.0.0.0.2.1" expl="apply premises" proved="true">
           <proof prover="2"><result status="valid" time="0.72" steps="21035"/></proof>
           </goal>
           <goal name="path_sem_ccz_&#39;vc.5.0.0.0.3.0.0.0.2.2" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="3.96" steps="1312468"/></proof>
           </goal>
           <goal name="path_sem_ccz_&#39;vc.5.0.0.0.3.0.0.0.2.3" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="1.84"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_ccz_&#39;vc.5.0.0.0.3.0.0.0.3" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
           <goal name="path_sem_ccz_&#39;vc.5.0.0.0.3.0.0.0.3.0" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="3.33" steps="1317382"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_ccz_&#39;vc.5.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="0"><result status="valid" time="1.81"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_ccz_&#39;vc.5.0.0.1" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="path_sem_ccz_&#39;vc.5.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="path_sem_ccz_&#39;vc.5.0.0.1.0.0" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="(1 +&#39; ket_length (bv_to_ket (hpart x t)))" arg2="(t +&#39;1)">
        <goal name="path_sem_ccz_&#39;vc.5.0.0.1.0.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_ket_l">
         <goal name="path_sem_ccz_&#39;vc.5.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="2"><result status="valid" time="0.71" steps="21035"/></proof>
         </goal>
         <goal name="path_sem_ccz_&#39;vc.5.0.0.1.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="2"><result status="valid" time="0.71" steps="21035"/></proof>
         </goal>
         <goal name="path_sem_ccz_&#39;vc.5.0.0.1.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="3.31" steps="1312468"/></proof>
         </goal>
         <goal name="path_sem_ccz_&#39;vc.5.0.0.1.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.82"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_ccz_&#39;vc.5.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="1"><result status="valid" time="3.26" steps="1312698"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_ccz_&#39;vc.5.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="4.77" steps="243747"/></proof>
     </goal>
     <goal name="path_sem_ccz_&#39;vc.5.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="2.04"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_ccz_&#39;vc.5.0.1" expl="rewrite premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="path_sem_ccz_&#39;vc.5.0.1.0" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="path_sem_ccz_&#39;vc.5.0.1.0.0" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="3.27" steps="1317067"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_ccz_&#39;vc.5.0.2" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="4.79" steps="243636"/></proof>
    </goal>
    <goal name="path_sem_ccz_&#39;vc.5.0.3" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="4.80" steps="243180"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="basis_ket_cnot_if&#39;vc" expl="VC for basis_ket_cnot_if" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="basis_ket_cnot_if&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_if" proved="true" >
   <goal name="basis_ket_cnot_if&#39;vc.0.0" expl="VC for basis_ket_cnot_if" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="basis_ket_cnot_if&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="1.69"/></proof>
    </goal>
    <goal name="basis_ket_cnot_if&#39;vc.0.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="2.00"/></proof>
    </goal>
    <goal name="basis_ket_cnot_if&#39;vc.0.0.2" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="basis_ket_cnot_if&#39;vc.0.0.2.0" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(i = t)">
      <goal name="basis_ket_cnot_if&#39;vc.0.0.2.0.0" expl="true case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="cnot&#39;spec1">
       <goal name="basis_ket_cnot_if&#39;vc.0.0.2.0.0.0" expl="true case (postcondition)" proved="true">
       <proof prover="0"><result status="valid" time="1.72"/></proof>
       </goal>
       <goal name="basis_ket_cnot_if&#39;vc.0.0.2.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.81" steps="20963"/></proof>
       </goal>
       <goal name="basis_ket_cnot_if&#39;vc.0.0.2.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.83" steps="20963"/></proof>
       </goal>
       <goal name="basis_ket_cnot_if&#39;vc.0.0.2.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.81" steps="20963"/></proof>
       </goal>
       <goal name="basis_ket_cnot_if&#39;vc.0.0.2.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.80" steps="20963"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="basis_ket_cnot_if&#39;vc.0.0.2.0.1" expl="false case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="cnot&#39;spec2">
       <goal name="basis_ket_cnot_if&#39;vc.0.0.2.0.1.0" expl="false case (postcondition)" proved="true">
       <proof prover="2"><result status="valid" time="0.83" steps="20926"/></proof>
       </goal>
       <goal name="basis_ket_cnot_if&#39;vc.0.0.2.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.78" steps="20926"/></proof>
       </goal>
       <goal name="basis_ket_cnot_if&#39;vc.0.0.2.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.79" steps="20926"/></proof>
       </goal>
       <goal name="basis_ket_cnot_if&#39;vc.0.0.2.0.1.3" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.78" steps="20926"/></proof>
       </goal>
       <goal name="basis_ket_cnot_if&#39;vc.0.0.2.0.1.4" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.82" steps="20926"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="basis_ket_swap_if&#39;vc" expl="VC for basis_ket_swap_if" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="basis_ket_swap_if&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_if" proved="true" >
   <goal name="basis_ket_swap_if&#39;vc.0.0" expl="VC for basis_ket_swap_if" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="basis_ket_swap_if&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="1.82"/></proof>
    </goal>
    <goal name="basis_ket_swap_if&#39;vc.0.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="1.65"/></proof>
    </goal>
    <goal name="basis_ket_swap_if&#39;vc.0.0.2" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="1.97"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="basis_ket_toffoli_if&#39;vc" expl="VC for basis_ket_toffoli_if" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="basis_ket_toffoli_if&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_if" proved="true" >
   <goal name="basis_ket_toffoli_if&#39;vc.0.0" expl="VC for basis_ket_toffoli_if" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="basis_ket_toffoli_if&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="1.80"/></proof>
    </goal>
    <goal name="basis_ket_toffoli_if&#39;vc.0.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="1.81"/></proof>
    </goal>
    <goal name="basis_ket_toffoli_if&#39;vc.0.0.2" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(i = t)">
     <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.0" expl="true case (postcondition)" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.0.0" expl="true case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="toffoli&#39;spec1">
       <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.0.0.0" expl="true case (postcondition)" proved="true">
       <proof prover="0"><result status="valid" time="1.79"/></proof>
       </goal>
       <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.80" steps="21017"/></proof>
       </goal>
       <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.77" steps="21017"/></proof>
       </goal>
       <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.78" steps="21017"/></proof>
       </goal>
       <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.79" steps="21017"/></proof>
       </goal>
       <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.78" steps="21017"/></proof>
       </goal>
       <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.0.0.6" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.81" steps="21017"/></proof>
       </goal>
       <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.0.0.7" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.82" steps="21017"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.1" expl="false case (postcondition)" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.1.0" expl="false case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="toffoli&#39;spec2">
       <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.1.0.0" expl="false case (postcondition)" proved="true">
       <proof prover="2"><result status="valid" time="0.82" steps="20981"/></proof>
       </goal>
       <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.80" steps="20981"/></proof>
       </goal>
       <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.82" steps="20981"/></proof>
       </goal>
       <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.1.0.3" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.82" steps="20981"/></proof>
       </goal>
       <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.1.0.4" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.82" steps="20981"/></proof>
       </goal>
       <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.1.0.5" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.82" steps="20981"/></proof>
       </goal>
       <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.1.0.6" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.83" steps="20981"/></proof>
       </goal>
       <goal name="basis_ket_toffoli_if&#39;vc.0.0.2.1.0.7" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.83" steps="20981"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="basis_ket_fredkin_if&#39;vc" expl="VC for basis_ket_fredkin_if" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="basis_ket_fredkin_if&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_if" proved="true" >
   <goal name="basis_ket_fredkin_if&#39;vc.0.0" expl="VC for basis_ket_fredkin_if" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="basis_ket_fredkin_if&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="1.79"/></proof>
    </goal>
    <goal name="basis_ket_fredkin_if&#39;vc.0.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="1.90"/></proof>
    </goal>
    <goal name="basis_ket_fredkin_if&#39;vc.0.0.2" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(i = t1)">
      <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.0" expl="true case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="fredkin&#39;spec3">
       <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.0.0" expl="true case (postcondition)" proved="true">
       <proof prover="2"><result status="valid" time="5.00" steps="241104"/></proof>
       </goal>
       <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.77" steps="21034"/></proof>
       </goal>
       <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.83" steps="21034"/></proof>
       </goal>
       <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.79" steps="21034"/></proof>
       </goal>
       <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.78" steps="21034"/></proof>
       </goal>
       <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.82" steps="21034"/></proof>
       </goal>
       <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.0.6" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.86" steps="21034"/></proof>
       </goal>
       <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.0.7" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.83" steps="21034"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.1" expl="false case (postcondition)" proved="true">
      <transf name="case" proved="true" arg1="(i = t2)">
       <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.1.0" expl="false case (true case. postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="fredkin&#39;spec2">
        <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.1.0.0" expl="false case (true case. postcondition)" proved="true">
        <proof prover="0"><result status="valid" time="1.81"/></proof>
        </goal>
        <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.79" steps="21036"/></proof>
        </goal>
        <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.1.0.2" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.80" steps="21036"/></proof>
        </goal>
        <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.1.0.3" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.76" steps="21036"/></proof>
        </goal>
        <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.1.0.4" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.84" steps="21036"/></proof>
        </goal>
        <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.1.0.5" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.80" steps="21036"/></proof>
        </goal>
        <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.1.0.6" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.80" steps="21036"/></proof>
        </goal>
        <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.1.0.7" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.80" steps="21036"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="basis_ket_fredkin_if&#39;vc.0.0.2.0.1.1" expl="false case (postcondition)" proved="true">
       <proof prover="0"><result status="valid" time="1.75"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="toffoli_decomp&#39;vc" expl="VC for toffoli_decomp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="toffoli_decomp&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.68" steps="20835"/></proof>
  </goal>
  <goal name="toffoli_decomp&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.69" steps="20835"/></proof>
  </goal>
  <goal name="toffoli_decomp&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.70" steps="21095"/></proof>
  </goal>
  <goal name="toffoli_decomp&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.69" steps="21095"/></proof>
  </goal>
  <goal name="toffoli_decomp&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.69" steps="21095"/></proof>
  </goal>
  <goal name="toffoli_decomp&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.71" steps="21095"/></proof>
  </goal>
  <goal name="toffoli_decomp&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.72" steps="21095"/></proof>
  </goal>
  <goal name="toffoli_decomp&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="21095"/></proof>
  </goal>
  <goal name="toffoli_decomp&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.76" steps="21254"/></proof>
  </goal>
  <goal name="toffoli_decomp&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.76" steps="21254"/></proof>
  </goal>
  <goal name="toffoli_decomp&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.73" steps="21254"/></proof>
  </goal>
  <goal name="toffoli_decomp&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.73" steps="21509"/></proof>
  </goal>
  <goal name="toffoli_decomp&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.76" steps="1262216"/></proof>
  </goal>
  <goal name="toffoli_decomp&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.72" steps="21819"/></proof>
  </goal>
  <goal name="toffoli_decomp&#39;vc.14" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits_bv">
   <goal name="toffoli_decomp&#39;vc.14.0" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures5">
    <goal name="toffoli_decomp&#39;vc.14.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures12">
     <goal name="toffoli_decomp&#39;vc.14.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="place_width">
      <goal name="toffoli_decomp&#39;vc.14.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="1.78"/></proof>
      </goal>
      <goal name="toffoli_decomp&#39;vc.14.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.78" steps="21819"/></proof>
      </goal>
      <goal name="toffoli_decomp&#39;vc.14.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.74" steps="21819"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="toffoli_decomp&#39;vc.14.1" expl="apply premises" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="toffoli_decomp&#39;vc.14.1.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="toffoli_decomp&#39;vc.14.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="result&#39;def">
      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_comp_">
       <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_comp_">
        <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="place_kron_bv">
         <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_toffoli">
           <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="eliminate_if" proved="true" >
            <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="place_kron_bv">
              <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(width hadamard)" arg2="1">
               <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="replace" proved="true" arg1="(width xx)" arg2="1">
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="path_sem_ccz_2">
                  <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                   <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="place_kron">
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="2"><result status="valid" time="1.15" steps="29787"/></proof>
                     </goal>
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                     <proof prover="2"><result status="valid" time="1.16" steps="29787"/></proof>
                     </goal>
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                     <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                      <proof prover="1"><result status="valid" time="4.49" steps="1611643"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                     <transf name="apply" proved="true" arg1="path_sem_ket_l">
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="path_sem_ket_l">
                       <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                       <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                        <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="htpart_length">
                         <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="2"><result status="valid" time="1.16" steps="29787"/></proof>
                         </goal>
                         <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="2"><result status="valid" time="1.18" steps="29787"/></proof>
                         </goal>
                         <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
                         <proof prover="2"><result status="valid" time="1.19" steps="29787"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.1" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.17" steps="29787"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.1" expl="apply premises" proved="true">
                      <proof prover="2"><result status="valid" time="1.15" steps="29787"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="apply premises" proved="true">
                     <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="tpart_length">
                       <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.0.0" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.13" steps="29787"/></proof>
                       </goal>
                       <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.0.1" expl="rewrite premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.15" steps="29809"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="apply premises" proved="true">
                     <transf name="case" proved="true" arg1="((bv_to_ket (htpart x t 1)) = qbit_zero())">
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5.0" expl="true case (apply premises)" proved="true">
                      <proof prover="2"><result status="valid" time="1.16" steps="29945"/></proof>
                      </goal>
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5.1" expl="false case (apply premises)" proved="true">
                      <transf name="replace" proved="true" arg1="((bv_to_ket (htpart x t 1)))" arg2="( qbit_one())">
                       <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5.1.0" expl="false case (apply premises)" proved="true">
                       <proof prover="2"><result status="valid" time="1.16" steps="29855"/></proof>
                       </goal>
                       <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5.1.1" expl="equality hypothesis" proved="true">
                       <transf name="apply" proved="true" arg1="get_ket_one">
                        <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5.1.1.0" expl="apply premises" proved="true">
                        <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                         <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5.1.1.0.0" expl="apply premises" proved="true">
                         <proof prover="1"><result status="valid" time="4.77" steps="1611551"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5.1.1.1" expl="apply premises" proved="true">
                        <proof prover="1"><result status="valid" time="3.37" steps="1422589"/></proof>
                        </goal>
                        <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5.1.1.2" expl="apply premises" proved="true">
                        <proof prover="2"><result status="valid" time="1.14" steps="29810"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="2"><result status="valid" time="1.10" steps="29787"/></proof>
                  </goal>
                  <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="2"><result status="valid" time="1.10" steps="29787"/></proof>
                  </goal>
                  <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                  <proof prover="2"><result status="valid" time="1.09" steps="29787"/></proof>
                  </goal>
                  <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                  <proof prover="2"><result status="valid" time="1.12" steps="29787"/></proof>
                  </goal>
                  <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                  <proof prover="2"><result status="valid" time="1.11" steps="29787"/></proof>
                  </goal>
                  <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                  <proof prover="2"><result status="valid" time="1.10" steps="29787"/></proof>
                  </goal>
                  <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
                  <proof prover="2"><result status="valid" time="1.13" steps="29787"/></proof>
                  </goal>
                  <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="path_sem_ket_l">
                   <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.0" expl="apply premises" proved="true">
                   <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="htpart_length">
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.0.0.0" expl="apply premises" proved="true">
                     <proof prover="2"><result status="valid" time="1.12" steps="29787"/></proof>
                     </goal>
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="2"><result status="valid" time="1.09" steps="29787"/></proof>
                     </goal>
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="2"><result status="valid" time="1.08" steps="29787"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.1" expl="apply premises" proved="true">
                   <proof prover="2"><result status="valid" time="1.13" steps="29787"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.9" expl="rewrite premises" proved="true">
                  <proof prover="2"><result status="valid" time="1.12" steps="29787"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="2"><result status="valid" time="1.06" steps="29787"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="2"><result status="valid" time="1.07" steps="29787"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="2"><result status="valid" time="1.12" steps="29787"/></proof>
              </goal>
              <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="2"><result status="valid" time="1.11" steps="29787"/></proof>
              </goal>
              <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
              <proof prover="2"><result status="valid" time="1.08" steps="29787"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(width hadamard)" arg2="1">
               <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <transf name="case" proved="true" arg1="(getbv x @ c2 = 1)">
                <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="true case (apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="path_sem_ccz_1">
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                  <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="place_kron_exp">
                   <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                   <transf name="replace" proved="true" arg1="(bv_to_ket x)" arg2="(bv_to_ket (concat1 (concat1 (hpart x t ) (htpart x t 1)) (tpart x (t+&#39;1) )))">
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                    <transf name="replace" proved="true" arg1="(path_sem hadamard (path_sem hadamard (bv_to_ket (htpart x t 1))))" arg2="(((bv_to_ket (htpart x t 1))))">
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
                     <proof prover="1"><result status="valid" time="4.57" steps="1613198"/></proof>
                     </goal>
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                     <proof prover="1"><result status="valid" time="4.65" steps="1609785"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                    <transf name="assert" proved="true" arg1="( x = (concat1 (concat1 (hpart x t ) (htpart x t 1)) (tpart x (t+&#39;1) )))">
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
                     <transf name="apply" proved="true" arg1="bv_decomp_hhtt">
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                      <proof prover="2"><result status="valid" time="1.14" steps="29764"/></proof>
                      </goal>
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                      <proof prover="2"><result status="valid" time="1.16" steps="29764"/></proof>
                      </goal>
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                      <proof prover="2"><result status="valid" time="1.13" steps="29786"/></proof>
                      </goal>
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.3" expl="apply premises" proved="true">
                      <proof prover="2"><result status="valid" time="1.14" steps="29764"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                     <proof prover="2"><result status="valid" time="1.15" steps="29854"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="1.15" steps="29764"/></proof>
                   </goal>
                   <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="1.12" steps="29764"/></proof>
                   </goal>
                   <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="4.71" steps="1609012"/></proof>
                   </goal>
                   <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="path_sem_ket_l">
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.4.0" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.4.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="htpart_length">
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.4.0.0.0" expl="apply premises" proved="true">
                      <proof prover="2"><result status="valid" time="1.10" steps="29764"/></proof>
                      </goal>
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.4.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="2"><result status="valid" time="1.11" steps="29764"/></proof>
                      </goal>
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.4.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="2"><result status="valid" time="1.12" steps="29764"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.4.1" expl="apply premises" proved="true">
                    <proof prover="2"><result status="valid" time="1.18" steps="29764"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                   <transf name="replace" proved="true" arg1="(width hadamard)" arg2="1">
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.5.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.5.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="tpart_length">
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.5.0.0.0" expl="apply premises" proved="true">
                      <proof prover="2"><result status="valid" time="1.13" steps="29764"/></proof>
                      </goal>
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.5.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="2"><result status="valid" time="1.17" steps="29786"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.5.1" expl="equality hypothesis" proved="true">
                    <proof prover="2"><result status="valid" time="1.09" steps="29764"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.08" steps="29764"/></proof>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.08" steps="29764"/></proof>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.3" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.08" steps="29764"/></proof>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.4" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.08" steps="29764"/></proof>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.5" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.07" steps="29764"/></proof>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.6" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.08" steps="29764"/></proof>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.7" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.08" steps="29764"/></proof>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.8" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="path_sem_ket_l">
                  <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.8.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                   <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.8.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="htpart_length">
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.8.0.0.0" expl="apply premises" proved="true">
                    <proof prover="2"><result status="valid" time="1.08" steps="29764"/></proof>
                    </goal>
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.8.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="2"><result status="valid" time="1.09" steps="29764"/></proof>
                    </goal>
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.8.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="2"><result status="valid" time="1.08" steps="29764"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.8.1" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="1.07" steps="29764"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.0.9" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.08" steps="29764"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="false case (apply premises)" proved="true">
                <transf name="rewrite" proved="true" arg1="path_sem_ccz_">
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0" expl="false case (apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                  <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="false case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="place_kron_exp">
                   <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0" expl="false case (apply premises)" proved="true">
                   <transf name="replace" proved="true" arg1="(bv_to_ket x)" arg2="(bv_to_ket (concat1 (concat1 (hpart x t ) (htpart x t 1)) (tpart x (t+&#39;1) )))">
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="false case (apply premises)" proved="true">
                    <transf name="assert" proved="true" arg1="( x = (concat1 (concat1 (hpart x t ) (htpart x t 1)) (tpart x (t+&#39;1) )))">
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
                     <transf name="apply" proved="true" arg1="bv_decomp_hhtt">
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="2"><result status="valid" time="1.09" steps="29715"/></proof>
                      </goal>
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                      <proof prover="2"><result status="valid" time="1.15" steps="29715"/></proof>
                      </goal>
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                      <proof prover="2"><result status="valid" time="1.15" steps="29739"/></proof>
                      </goal>
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0.0.3" expl="apply premises" proved="true">
                      <proof prover="2"><result status="valid" time="1.17" steps="29715"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0.1" expl="false case (apply premises)" proved="true">
                     <transf name="replace" proved="true" arg1="(path_sem hadamard (path_sem hadamard (bv_to_ket (htpart x t 1))))" arg2="(bv_to_ket (htpart x t 1))">
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0.1.0" expl="false case (apply premises)" proved="true">
                      <proof prover="1"><result status="valid" time="4.72" steps="1613813"/></proof>
                      </goal>
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                      <proof prover="1"><result status="valid" time="4.58" steps="1611498"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
                    <transf name="replace" proved="true" arg1="(path_sem hadamard (path_sem hadamard (bv_to_ket (htpart x t 1))))" arg2="(((bv_to_ket (htpart x t 1))))">
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
                     <transf name="assert" proved="true" arg1="( x = (concat1 (concat1 (hpart x t ) (htpart x t 1)) (tpart x (t+&#39;1) )))">
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.1.0.0" expl="asserted formula" proved="true">
                      <transf name="apply" proved="true" arg1="bv_decomp_hhtt">
                       <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.10" steps="29715"/></proof>
                       </goal>
                       <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.06" steps="29715"/></proof>
                       </goal>
                       <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.09" steps="29739"/></proof>
                       </goal>
                       <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.1.0.0.3" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.14" steps="29715"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                      <proof prover="2"><result status="valid" time="1.14" steps="29807"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
                     <proof prover="1"><result status="valid" time="4.32" steps="1609835"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="1.17" steps="29715"/></proof>
                   </goal>
                   <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="1.08" steps="29716"/></proof>
                   </goal>
                   <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.3" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.3.0" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="hpart_length">
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.3.0.0" expl="apply premises" proved="true">
                     <proof prover="2"><result status="valid" time="1.08" steps="29715"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.4" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="4.29" steps="1609440"/></proof>
                   </goal>
                   <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.5" expl="rewrite premises" proved="true">
                   <transf name="replace" proved="true" arg1="(width hadamard)" arg2="1">
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.5.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                     <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.5.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="tpart_length">
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.5.0.0.0" expl="apply premises" proved="true">
                      <proof prover="2"><result status="valid" time="1.09" steps="29715"/></proof>
                      </goal>
                      <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.5.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="2"><result status="valid" time="1.09" steps="29739"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.5.1" expl="equality hypothesis" proved="true">
                    <proof prover="2"><result status="valid" time="1.07" steps="29715"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.07" steps="29715"/></proof>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.2" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.09" steps="29715"/></proof>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.3" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.10" steps="29715"/></proof>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.4" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.09" steps="29715"/></proof>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.5" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.08" steps="29715"/></proof>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.6" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.11" steps="29715"/></proof>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.7" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.18" steps="29715"/></proof>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.8" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="path_sem_ket_l">
                  <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.8.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                   <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.8.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="htpart_length">
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.8.0.0.0" expl="apply premises" proved="true">
                    <proof prover="2"><result status="valid" time="1.17" steps="29715"/></proof>
                    </goal>
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.8.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="2"><result status="valid" time="1.17" steps="29715"/></proof>
                    </goal>
                    <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.8.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="2"><result status="valid" time="1.16" steps="29715"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.8.1" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="1.19" steps="29715"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.0.1.9" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.17" steps="29715"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
               <proof prover="2"><result status="valid" time="1.17" steps="29714"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="1.15" steps="29646"/></proof>
           </goal>
           <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="1.17" steps="29646"/></proof>
           </goal>
           <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="1.13" steps="29646"/></proof>
           </goal>
           <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="1.12" steps="29646"/></proof>
           </goal>
           <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="1.14" steps="29646"/></proof>
           </goal>
           <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="1.14" steps="29646"/></proof>
           </goal>
           <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="1.14" steps="29646"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="1.01" steps="29646"/></proof>
         </goal>
         <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="1.01" steps="29646"/></proof>
         </goal>
         <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="1.02" steps="29646"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.18" steps="1018890"/></proof>
        </goal>
        <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="1.11" steps="29646"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.04" steps="1018890"/></proof>
       </goal>
       <goal name="toffoli_decomp&#39;vc.14.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.92" steps="29646"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="fredkin_as_cont_swap&#39;vc" expl="VC for fredkin_as_cont_swap" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fredkin_as_cont_swap&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.70" steps="20835"/></proof>
  </goal>
  <goal name="fredkin_as_cont_swap&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.70" steps="20837"/></proof>
  </goal>
  <goal name="fredkin_as_cont_swap&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.69" steps="20837"/></proof>
  </goal>
  <goal name="fredkin_as_cont_swap&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.68" steps="21079"/></proof>
  </goal>
  <goal name="fredkin_as_cont_swap&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.71" steps="21079"/></proof>
  </goal>
  <goal name="fredkin_as_cont_swap&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.70" steps="21080"/></proof>
  </goal>
  <goal name="fredkin_as_cont_swap&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="4.74" steps="233887"/></proof>
  </goal>
  <goal name="fredkin_as_cont_swap&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.77" steps="21095"/></proof>
  </goal>
  <goal name="fredkin_as_cont_swap&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.76" steps="21287"/></proof>
  </goal>
  <goal name="fredkin_as_cont_swap&#39;vc.9" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_flat_mute">
   <goal name="fredkin_as_cont_swap&#39;vc.9.0" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="fredkin_as_cont_swap&#39;vc.9.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="fredkin&#39;spec4">
     <goal name="fredkin_as_cont_swap&#39;vc.9.0.0.0" expl="apply premises" proved="true">
     <proof prover="2"><result status="valid" time="0.75" steps="21287"/></proof>
     </goal>
     <goal name="fredkin_as_cont_swap&#39;vc.9.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.74" steps="21304"/></proof>
     </goal>
     <goal name="fredkin_as_cont_swap&#39;vc.9.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.79" steps="21304"/></proof>
     </goal>
     <goal name="fredkin_as_cont_swap&#39;vc.9.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.75" steps="21287"/></proof>
     </goal>
     <goal name="fredkin_as_cont_swap&#39;vc.9.0.0.4" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.77" steps="21339"/></proof>
     </goal>
     <goal name="fredkin_as_cont_swap&#39;vc.9.0.0.5" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.78" steps="21339"/></proof>
     </goal>
     <goal name="fredkin_as_cont_swap&#39;vc.9.0.0.6" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.74" steps="21287"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="fredkin_as_cont_swap&#39;vc.9.1" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="fredkin_as_cont_swap&#39;vc.9.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="fredkin&#39;spec5">
     <goal name="fredkin_as_cont_swap&#39;vc.9.1.0.0" expl="apply premises" proved="true">
     <proof prover="2"><result status="valid" time="0.73" steps="21287"/></proof>
     </goal>
     <goal name="fredkin_as_cont_swap&#39;vc.9.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.76" steps="21304"/></proof>
     </goal>
     <goal name="fredkin_as_cont_swap&#39;vc.9.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.77" steps="21304"/></proof>
     </goal>
     <goal name="fredkin_as_cont_swap&#39;vc.9.1.0.3" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.74" steps="21287"/></proof>
     </goal>
     <goal name="fredkin_as_cont_swap&#39;vc.9.1.0.4" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.72" steps="21339"/></proof>
     </goal>
     <goal name="fredkin_as_cont_swap&#39;vc.9.1.0.5" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.79" steps="21339"/></proof>
     </goal>
     <goal name="fredkin_as_cont_swap&#39;vc.9.1.0.6" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.78" steps="21287"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="fredkin_as_cont_swap&#39;vc.9.2" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="fredkin_as_cont_swap&#39;vc.9.2.0" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="fredkin_as_cont_swap&#39;vc.9.2.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="fredkin&#39;spec">
      <goal name="fredkin_as_cont_swap&#39;vc.9.2.0.0.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="4.85" steps="247969"/></proof>
      </goal>
      <goal name="fredkin_as_cont_swap&#39;vc.9.2.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.74" steps="21353"/></proof>
      </goal>
      <goal name="fredkin_as_cont_swap&#39;vc.9.2.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.74" steps="21353"/></proof>
      </goal>
      <goal name="fredkin_as_cont_swap&#39;vc.9.2.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.73" steps="21336"/></proof>
      </goal>
      <goal name="fredkin_as_cont_swap&#39;vc.9.2.0.0.4" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.74" steps="21389"/></proof>
      </goal>
      <goal name="fredkin_as_cont_swap&#39;vc.9.2.0.0.5" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.74" steps="21389"/></proof>
      </goal>
      <goal name="fredkin_as_cont_swap&#39;vc.9.2.0.0.6" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.73" steps="21336"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="fredkin_as_cont_swap&#39;vc.9.3" expl="apply premises" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="21287"/></proof>
   </goal>
   <goal name="fredkin_as_cont_swap&#39;vc.9.4" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.03" steps="972891"/></proof>
   </goal>
   <goal name="fredkin_as_cont_swap&#39;vc.9.5" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="fredkin_as_cont_swap&#39;vc.9.5.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures2">
     <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="basis_ket_fredkin_if">
      <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.0" expl="apply premises" proved="true">
      <transf name="eliminate_if" proved="true" >
       <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures11">
         <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.94"/></proof>
         </goal>
         <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="0.75" steps="21476"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures10">
         <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="2"><result status="valid" time="4.99" steps="240572"/></proof>
         </goal>
         <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="0.77" steps="21493"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures9">
         <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.0.0.2.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.74"/></proof>
         </goal>
         <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.0.0.2.1" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="0.76" steps="21474"/></proof>
         </goal>
         <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.0.0.2.2" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="0.78" steps="21474"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="0.78" steps="21507"/></proof>
        </goal>
        <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.0.0.4" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="0.78" steps="21540"/></proof>
        </goal>
        <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.0.0.5" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="0.76" steps="21463"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.75" steps="21355"/></proof>
      </goal>
      <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.76" steps="21355"/></proof>
      </goal>
      <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.71" steps="21338"/></proof>
      </goal>
      <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.4" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.71" steps="21391"/></proof>
      </goal>
      <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.5" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.76" steps="21391"/></proof>
      </goal>
      <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.6" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.77" steps="21338"/></proof>
      </goal>
      <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.7" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.72" steps="21355"/></proof>
      </goal>
      <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.0.8" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.71" steps="21338"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.71" steps="21355"/></proof>
     </goal>
     <goal name="fredkin_as_cont_swap&#39;vc.9.5.0.2" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.72" steps="21338"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="toffoli_as_cont_cnot&#39;vc" expl="VC for toffoli_as_cont_cnot" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="toffoli_as_cont_cnot&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.73" steps="20835"/></proof>
  </goal>
  <goal name="toffoli_as_cont_cnot&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.76" steps="20837"/></proof>
  </goal>
  <goal name="toffoli_as_cont_cnot&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.76" steps="20837"/></proof>
  </goal>
  <goal name="toffoli_as_cont_cnot&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.76" steps="21079"/></proof>
  </goal>
  <goal name="toffoli_as_cont_cnot&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.77" steps="21079"/></proof>
  </goal>
  <goal name="toffoli_as_cont_cnot&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.75" steps="21080"/></proof>
  </goal>
  <goal name="toffoli_as_cont_cnot&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="4.99" steps="233920"/></proof>
  </goal>
  <goal name="toffoli_as_cont_cnot&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.78" steps="21095"/></proof>
  </goal>
  <goal name="toffoli_as_cont_cnot&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.77" steps="21287"/></proof>
  </goal>
  <goal name="toffoli_as_cont_cnot&#39;vc.9" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_flat_mute">
   <goal name="toffoli_as_cont_cnot&#39;vc.9.0" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="toffoli_as_cont_cnot&#39;vc.9.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="3.59"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="toffoli_as_cont_cnot&#39;vc.9.1" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="toffoli_as_cont_cnot&#39;vc.9.1.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="3.33"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="toffoli_as_cont_cnot&#39;vc.9.2" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="toffoli_as_cont_cnot&#39;vc.9.2.0" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="toffoli_as_cont_cnot&#39;vc.9.2.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="toffoli&#39;spec">
      <goal name="toffoli_as_cont_cnot&#39;vc.9.2.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="1.70"/></proof>
      </goal>
      <goal name="toffoli_as_cont_cnot&#39;vc.9.2.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.81" steps="21336"/></proof>
      </goal>
      <goal name="toffoli_as_cont_cnot&#39;vc.9.2.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.82" steps="21352"/></proof>
      </goal>
      <goal name="toffoli_as_cont_cnot&#39;vc.9.2.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.83" steps="21352"/></proof>
      </goal>
      <goal name="toffoli_as_cont_cnot&#39;vc.9.2.0.0.4" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.83" steps="21389"/></proof>
      </goal>
      <goal name="toffoli_as_cont_cnot&#39;vc.9.2.0.0.5" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.84" steps="21336"/></proof>
      </goal>
      <goal name="toffoli_as_cont_cnot&#39;vc.9.2.0.0.6" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.85" steps="21389"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="toffoli_as_cont_cnot&#39;vc.9.3" expl="apply premises" proved="true">
   <proof prover="2"><result status="valid" time="0.76" steps="21287"/></proof>
   </goal>
   <goal name="toffoli_as_cont_cnot&#39;vc.9.4" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.24" steps="976210"/></proof>
   </goal>
   <goal name="toffoli_as_cont_cnot&#39;vc.9.5" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures2">
     <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="basis_ket_toffoli_if">
      <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0" expl="apply premises" proved="true">
      <transf name="eliminate_if" proved="true" >
       <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures9">
         <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="2"><result status="valid" time="0.74" steps="21618"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="0.78" steps="21581"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="case" proved="true" arg1="(i = ta2 )">
         <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.1.0" expl="true case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures9">
          <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.1.0.0" expl="true case (apply premises)" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.1.0.0.0" expl="true case (apply premises)" proved="true">
           <proof prover="1"><result status="valid" time="3.02" steps="1192307"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.77" steps="21547"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.1.1" expl="false case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures10">
          <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.1.1.0" expl="false case (apply premises)" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.1.1.0.0" expl="false case (apply premises)" proved="true">
           <proof prover="2"><result status="valid" time="0.78" steps="21547"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.76" steps="21547"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="case" proved="true" arg1="(i = ta2)">
         <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.2.0" expl="true case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures9">
          <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.2.0.0" expl="true case (apply premises)" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.2.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="case" proved="true" arg1="(x ta1 = 0)">
            <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.2.0.0.0.0" expl="true case (apply premises)" proved="true">
            <proof prover="2"><result status="valid" time="0.80" steps="21601"/></proof>
            </goal>
            <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.2.0.0.0.1" expl="false case (true case. apply premises)" proved="true">
            <proof prover="1"><result status="valid" time="2.90" steps="1195860"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.73" steps="21509"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.2.1" expl="false case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures10">
          <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.2.1.0" expl="false case (apply premises)" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.2.1.0.0" expl="false case (apply premises)" proved="true">
           <proof prover="2"><result status="valid" time="0.78" steps="21490"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.2.1.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.78" steps="21488"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="0.75" steps="21653"/></proof>
        </goal>
        <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.4" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="0.73" steps="21614"/></proof>
        </goal>
        <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.0.0.5" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="0.76" steps="21447"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.74" steps="21338"/></proof>
      </goal>
      <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.77" steps="21355"/></proof>
      </goal>
      <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.74" steps="21355"/></proof>
      </goal>
      <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.4" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.74" steps="21391"/></proof>
      </goal>
      <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.5" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.75" steps="21338"/></proof>
      </goal>
      <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.6" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.74" steps="21391"/></proof>
      </goal>
      <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.7" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.72" steps="21355"/></proof>
      </goal>
      <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.0.8" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.76" steps="21338"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.76" steps="21355"/></proof>
     </goal>
     <goal name="toffoli_as_cont_cnot&#39;vc.9.5.0.2" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.71" steps="21338"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="fredkin_decomp&#39;vc" expl="VC for fredkin_decomp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fredkin_decomp&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.71" steps="20835"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.72" steps="20835"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.75" steps="20835"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.70" steps="20835"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.72" steps="20835"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.70" steps="20835"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.71" steps="21095"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="21095"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.72" steps="21096"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.70" steps="21355"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.72" steps="21356"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.70" steps="21356"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="4.77" steps="235539"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="4.84" steps="235534"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="21614"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.51" steps="1260828"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.77" steps="21668"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.83"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.18" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures7">
   <goal name="fredkin_decomp&#39;vc.18.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="basis_ket_toffoli_if">
    <goal name="fredkin_decomp&#39;vc.18.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="fredkin_decomp&#39;vc.18.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="basis_ket_cnot_if">
      <goal name="fredkin_decomp&#39;vc.18.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="basis_ket_cnot_if">
       <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="(((((fun (y0:circuit) (y1:int -&gt; int) (y2:int -&gt; int) (y3:int) -&gt;
                 basis_ket y0 y1 y2 y3)
               @ cnot t2 t1 n)
              @ x)
             @ y)
            @ t2)" arg2="(basis_ket (cnot t2 t1 n) x y t2)">
        <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="replace" proved="true" arg1="(((((fun (y0:circuit) (y1:int -&gt; int) (y2:int -&gt; int) (y3:int) -&gt;
                 basis_ket y0 y1 y2 y3)
               @ cnot t2 t1 n)
              @ x)
             @ y)
            @ i)" arg2="(basis_ket (cnot t2 t1 n) x y i)">
         <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="basis_ket_cnot_if">
          <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="basis_ket_cnot_if">
           <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="eliminate_if" proved="true" >
            <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0" expl="VC for fredkin_decomp" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.78" steps="21972"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.77" steps="21972"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.2" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.79" steps="21972"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.3" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.80" steps="22028"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.4" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.79" steps="22028"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.5" expl="postcondition" proved="true">
             <proof prover="0"><result status="valid" time="1.83"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.6" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.78" steps="21972"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.7" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.77" steps="21972"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.8" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.80" steps="21972"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.9" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.75" steps="21972"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.10" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.77" steps="22028"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.11" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.77" steps="22028"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.12" expl="postcondition" proved="true">
             <proof prover="0"><result status="valid" time="1.69"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.13" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.75" steps="21972"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.14" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.77" steps="21988"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.15" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.81" steps="21988"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.16" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.79" steps="21988"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.17" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.79" steps="21988"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.18" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.79" steps="21988"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.19" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.77" steps="21988"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.20" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.78" steps="21988"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.21" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.78" steps="22007"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.22" expl="postcondition" proved="true">
             <proof prover="0"><result status="valid" time="1.64"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.23" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.77" steps="21953"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.24" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.80" steps="21953"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.25" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.79" steps="21953"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.26" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.79" steps="21953"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.27" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.80" steps="21953"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.28" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.77" steps="21933"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.29" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.78" steps="21933"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.30" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.79" steps="21949"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.31" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.79" steps="22135"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.32" expl="postcondition" proved="true">
             <proof prover="0"><result status="valid" time="1.85"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.33" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.79" steps="21965"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.0.0.34" expl="postcondition" proved="true">
             <proof prover="2"><result status="valid" time="0.79" steps="21897"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="0.76" steps="21718"/></proof>
           </goal>
           <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="0.76" steps="21718"/></proof>
           </goal>
           <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="0.76" steps="21718"/></proof>
           </goal>
           <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="0.77" steps="21718"/></proof>
           </goal>
           <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="0.73" steps="21718"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.73" steps="21718"/></proof>
          </goal>
          <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.74" steps="21718"/></proof>
          </goal>
          <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.75" steps="21718"/></proof>
          </goal>
          <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.76" steps="21718"/></proof>
          </goal>
          <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.77" steps="21718"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="0"><result status="valid" time="1.83"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="0"><result status="valid" time="1.84"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.76" steps="21718"/></proof>
       </goal>
       <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.75" steps="21718"/></proof>
       </goal>
       <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.77" steps="21718"/></proof>
       </goal>
       <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.77" steps="21718"/></proof>
       </goal>
       <goal name="fredkin_decomp&#39;vc.18.0.0.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.75" steps="21718"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="fredkin_decomp&#39;vc.18.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.77" steps="21718"/></proof>
      </goal>
      <goal name="fredkin_decomp&#39;vc.18.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.77" steps="21718"/></proof>
      </goal>
      <goal name="fredkin_decomp&#39;vc.18.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.77" steps="21718"/></proof>
      </goal>
      <goal name="fredkin_decomp&#39;vc.18.0.0.0.4" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.70" steps="21718"/></proof>
      </goal>
      <goal name="fredkin_decomp&#39;vc.18.0.0.0.5" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.72" steps="21718"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="fredkin_decomp&#39;vc.18.0.1" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.71" steps="21718"/></proof>
    </goal>
    <goal name="fredkin_decomp&#39;vc.18.0.2" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.69" steps="21718"/></proof>
    </goal>
    <goal name="fredkin_decomp&#39;vc.18.0.3" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.69" steps="21718"/></proof>
    </goal>
    <goal name="fredkin_decomp&#39;vc.18.0.4" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.71" steps="21718"/></proof>
    </goal>
    <goal name="fredkin_decomp&#39;vc.18.0.5" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.72" steps="21718"/></proof>
    </goal>
    <goal name="fredkin_decomp&#39;vc.18.0.6" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.71" steps="21718"/></proof>
    </goal>
    <goal name="fredkin_decomp&#39;vc.18.0.7" expl="rewrite premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="fredkin_decomp&#39;vc.18.0.7.0" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="set_binary_l">
      <goal name="fredkin_decomp&#39;vc.18.0.7.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="fredkin_decomp&#39;vc.18.0.7.0.0.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="fredkin_decomp&#39;vc.18.0.7.0.0.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="fredkin_decomp&#39;vc.18.0.7.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
          <goal name="fredkin_decomp&#39;vc.18.0.7.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="fredkin_decomp&#39;vc.18.0.7.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="1.99"/></proof>
           </goal>
           <goal name="fredkin_decomp&#39;vc.18.0.7.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="1.98"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="fredkin_decomp&#39;vc.18.0.7.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="2"><result status="valid" time="0.78" steps="21738"/></proof>
          </goal>
          <goal name="fredkin_decomp&#39;vc.18.0.7.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="2"><result status="valid" time="0.74" steps="21721"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="fredkin_decomp&#39;vc.18.0.7.0.0.0.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="fredkin_decomp&#39;vc.18.0.7.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
          <goal name="fredkin_decomp&#39;vc.18.0.7.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="fredkin_decomp&#39;vc.18.0.7.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="2.12"/></proof>
           </goal>
           <goal name="fredkin_decomp&#39;vc.18.0.7.0.0.0.1.0.0.1" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="2.01"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="fredkin_decomp&#39;vc.18.0.7.0.0.0.1.0.1" expl="apply premises" proved="true">
          <proof prover="2"><result status="valid" time="0.76" steps="21738"/></proof>
          </goal>
          <goal name="fredkin_decomp&#39;vc.18.0.7.0.0.0.1.0.2" expl="apply premises" proved="true">
          <proof prover="2"><result status="valid" time="0.81" steps="21721"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="fredkin_decomp&#39;vc.18.0.8" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.76" steps="21718"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="fredkin_decomp&#39;vc.18.1" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="21736"/></proof>
   </goal>
   <goal name="fredkin_decomp&#39;vc.18.2" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="21719"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fredkin_decomp&#39;vc.19" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="fredkin_decomp&#39;vc.19.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="interm&#39;def">
    <goal name="fredkin_decomp&#39;vc.19.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="seq_flat_mute&#39;def">
     <goal name="fredkin_decomp&#39;vc.19.0.0.0" expl="postcondition" proved="true">
     <proof prover="2"><result status="valid" time="1.07" steps="29367"/></proof>
     </goal>
     <goal name="fredkin_decomp&#39;vc.19.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="1.08" steps="29367"/></proof>
     </goal>
     <goal name="fredkin_decomp&#39;vc.19.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="1.03" steps="29367"/></proof>
     </goal>
     <goal name="fredkin_decomp&#39;vc.19.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="1.06" steps="29367"/></proof>
     </goal>
     <goal name="fredkin_decomp&#39;vc.19.0.0.4" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.56" steps="1024151"/></proof>
     </goal>
     <goal name="fredkin_decomp&#39;vc.19.0.0.5" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.40" steps="1024151"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="fredkin_decomp&#39;vc.20" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.76" steps="21717"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.21" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.76" steps="21717"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.22" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.76" steps="21717"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.23" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.73" steps="21717"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.24" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.75" steps="21717"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.25" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.76" steps="21717"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.26" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.43" steps="1023821"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.27" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.49" steps="1023846"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.75" steps="22047"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="22047"/></proof>
  </goal>
  <goal name="fredkin_decomp&#39;vc.30" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="fredkin_decomp&#39;vc.30.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_equiv_flat_mute">
    <goal name="fredkin_decomp&#39;vc.30.0.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="4.22" steps="1514672"/></proof>
    </goal>
    <goal name="fredkin_decomp&#39;vc.30.0.1" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="1.86"/></proof>
    </goal>
    <goal name="fredkin_decomp&#39;vc.30.0.2" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="4.14" steps="1515232"/></proof>
    </goal>
    <goal name="fredkin_decomp&#39;vc.30.0.3" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.81" steps="22047"/></proof>
    </goal>
    <goal name="fredkin_decomp&#39;vc.30.0.4" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="3.21" steps="1320920"/></proof>
    </goal>
    <goal name="fredkin_decomp&#39;vc.30.0.5" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="fredkin_decomp&#39;vc.30.0.5.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures5">
      <goal name="fredkin_decomp&#39;vc.30.0.5.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="basis_ket_cnot_if">
        <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="((fun (y3:int) -&gt; basis_ket interm x y y3) @ t1)" arg2="(( basis_ket interm x y t1) )">
          <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="((fun (y3:int) -&gt; basis_ket interm x y y3) @ i)" arg2="(( basis_ket interm x y i) )">
           <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures19">
            <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="Ensures19">
             <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="Ensures19">
              <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="basis_ket_fredkin_if">
               <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="eliminate_if" proved="true" >
                <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.84" steps="22479"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.84" steps="22481"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.84" steps="22499"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.84" steps="22479"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.83" steps="22449"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="4.42" steps="1532953"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.6" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.84" steps="22452"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.7" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.84" steps="22452"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.8" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.85" steps="22452"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.9" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.84" steps="22452"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.10" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.86" steps="22452"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.11" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.85" steps="22452"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.12" expl="apply premises" proved="true">
                 <transf name="case" proved="true" arg1="(x t1 = 1)">
                  <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.12.0" expl="true case (apply premises)" proved="true">
                  <proof prover="1"><result status="valid" time="4.46" steps="1535315"/></proof>
                  </goal>
                  <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.12.1" expl="false case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="get_binary_zero" arg2="with" arg3="n">
                   <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.12.1.0" expl="false case (apply premises)" proved="true">
                   <proof prover="1"><result status="valid" time="4.38" steps="1535508"/></proof>
                   </goal>
                   <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.12.1.1" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="0.84" steps="22402"/></proof>
                   </goal>
                   <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.12.1.2" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="0.84" steps="22386"/></proof>
                   </goal>
                   <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.12.1.3" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="0.82" steps="22385"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.13" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.83" steps="22347"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.14" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.82" steps="22363"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.15" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.84" steps="22475"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.16" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.83" steps="22475"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.17" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.81" steps="22475"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.18" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.78" steps="22438"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.19" expl="apply premises" proved="true">
                 <transf name="destruct" proved="true" arg1="H8">
                  <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.19.0" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="4.27" steps="1536492"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.20" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.82" steps="22438"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.21" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.82" steps="22362"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.22" expl="apply premises" proved="true">
                 <transf name="case" proved="true" arg1="(x t1 = 1)">
                  <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.22.0" expl="true case (apply premises)" proved="true">
                  <proof prover="1"><result status="valid" time="4.00" steps="1533771"/></proof>
                  </goal>
                  <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.22.1" expl="false case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="get_binary_zero" arg2="with" arg3="n">
                   <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.22.1.0" expl="false case (apply premises)" proved="true">
                   <transf name="rewrite" proved="true" arg1="get_binary_zero" arg2="with" arg3="n">
                    <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.22.1.0.0" expl="false case (apply premises)" proved="true">
                    <proof prover="2"><result status="valid" time="0.86" steps="22404"/></proof>
                    </goal>
                    <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.22.1.0.1" expl="rewrite premises" proved="true">
                    <proof prover="2"><result status="valid" time="0.86" steps="22420"/></proof>
                    </goal>
                    <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.22.1.0.2" expl="rewrite premises" proved="true">
                    <proof prover="2"><result status="valid" time="0.86" steps="22404"/></proof>
                    </goal>
                    <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.22.1.0.3" expl="rewrite premises" proved="true">
                    <proof prover="2"><result status="valid" time="0.85" steps="22404"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.22.1.1" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="0.81" steps="22420"/></proof>
                   </goal>
                   <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.22.1.2" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="0.84" steps="22404"/></proof>
                   </goal>
                   <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.22.1.3" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="4.02" steps="1535317"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.23" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.87" steps="22363"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.24" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.86" steps="22327"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.25" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.81" steps="22327"/></proof>
                 </goal>
                 <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.0.0.26" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="0.86" steps="22327"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="2"><result status="valid" time="0.76" steps="22098"/></proof>
               </goal>
               <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="2"><result status="valid" time="0.76" steps="22098"/></proof>
               </goal>
               <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
               <proof prover="2"><result status="valid" time="0.76" steps="22098"/></proof>
               </goal>
               <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
               <proof prover="2"><result status="valid" time="0.75" steps="22098"/></proof>
               </goal>
               <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
               <proof prover="2"><result status="valid" time="0.75" steps="22098"/></proof>
               </goal>
               <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
               <proof prover="2"><result status="valid" time="0.74" steps="22098"/></proof>
               </goal>
               <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
               <proof prover="2"><result status="valid" time="0.73" steps="22115"/></proof>
               </goal>
               <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
               <proof prover="2"><result status="valid" time="0.78" steps="22099"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="2"><result status="valid" time="0.79" steps="22115"/></proof>
              </goal>
              <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="2"><result status="valid" time="0.75" steps="22099"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="2"><result status="valid" time="0.77" steps="22115"/></proof>
             </goal>
             <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="2"><result status="valid" time="0.77" steps="22098"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="0.82" steps="22115"/></proof>
            </goal>
            <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="0.80" steps="22098"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="0"><result status="valid" time="1.92"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="0"><result status="valid" time="2.02"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.74" steps="22098"/></proof>
        </goal>
        <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.76" steps="22098"/></proof>
        </goal>
        <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.74" steps="22098"/></proof>
        </goal>
        <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.4" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="binary_l_basis_ket">
         <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.4.0" expl="apply premises" proved="true">
         <proof prover="2"><result status="valid" time="0.76" steps="22115"/></proof>
         </goal>
         <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.4.1" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="4.25" steps="1513120"/></proof>
         </goal>
         <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.4.2" expl="apply premises" proved="true">
         <proof prover="2"><result status="valid" time="0.74" steps="22098"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="fredkin_decomp&#39;vc.30.0.5.0.0.0.5" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.74" steps="22099"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="fredkin_decomp&#39;vc.30.0.5.0.1" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.77" steps="22115"/></proof>
      </goal>
      <goal name="fredkin_decomp&#39;vc.30.0.5.0.2" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.75" steps="22099"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="fredkin_decomp&#39;vc.31" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="fredkin_decomp&#39;vc.31.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="fredkin_decomp&#39;vc.31.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="seq_flat_mute&#39;def">
     <goal name="fredkin_decomp&#39;vc.31.0.0.0" expl="postcondition" proved="true">
     <proof prover="2"><result status="valid" time="1.03" steps="30040"/></proof>
     </goal>
     <goal name="fredkin_decomp&#39;vc.31.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="1.00" steps="30017"/></proof>
     </goal>
     <goal name="fredkin_decomp&#39;vc.31.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="1.02" steps="30018"/></proof>
     </goal>
     <goal name="fredkin_decomp&#39;vc.31.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="1.02" steps="30017"/></proof>
     </goal>
     <goal name="fredkin_decomp&#39;vc.31.0.0.4" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.48" steps="1024928"/></proof>
     </goal>
     <goal name="fredkin_decomp&#39;vc.31.0.0.5" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.72" steps="1024889"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="fredkin_decomp_toffoli&#39;vc" expl="VC for fredkin_decomp_toffoli" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fredkin_decomp_toffoli&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fredkin_decomp_toffoli&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="20835"/></proof>
   </goal>
   <goal name="fredkin_decomp_toffoli&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="20835"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fredkin_decomp_toffoli&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fredkin_decomp_toffoli&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="20835"/></proof>
   </goal>
   <goal name="fredkin_decomp_toffoli&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="20835"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fredkin_decomp_toffoli&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fredkin_decomp_toffoli&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="20835"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fredkin_decomp_toffoli&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fredkin_decomp_toffoli&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.70" steps="21095"/></proof>
   </goal>
   <goal name="fredkin_decomp_toffoli&#39;vc.3.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.70" steps="21096"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fredkin_decomp_toffoli&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fredkin_decomp_toffoli&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.76" steps="21095"/></proof>
   </goal>
   <goal name="fredkin_decomp_toffoli&#39;vc.4.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="21095"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fredkin_decomp_toffoli&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fredkin_decomp_toffoli&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.69" steps="21095"/></proof>
   </goal>
   <goal name="fredkin_decomp_toffoli&#39;vc.5.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.67" steps="21095"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fredkin_decomp_toffoli&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fredkin_decomp_toffoli&#39;vc.6.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.76" steps="21095"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fredkin_decomp_toffoli&#39;vc.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fredkin_decomp_toffoli&#39;vc.7.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="21095"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fredkin_decomp_toffoli&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fredkin_decomp_toffoli&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.76" steps="21095"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fredkin_decomp_toffoli&#39;vc.9" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fredkin_decomp_toffoli&#39;vc.9.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75" steps="21250"/></proof>
   </goal>
   <goal name="fredkin_decomp_toffoli&#39;vc.9.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.76" steps="21250"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fredkin_decomp_toffoli&#39;vc.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fredkin_decomp_toffoli&#39;vc.10.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.78" steps="21250"/></proof>
   </goal>
   <goal name="fredkin_decomp_toffoli&#39;vc.10.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.76" steps="21250"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fredkin_decomp_toffoli&#39;vc.11" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fredkin_decomp_toffoli&#39;vc.11.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.78" steps="21250"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fredkin_decomp_toffoli&#39;vc.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.77" steps="21250"/></proof>
  </goal>
  <goal name="fredkin_decomp_toffoli&#39;vc.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.78" steps="21503"/></proof>
  </goal>
  <goal name="fredkin_decomp_toffoli&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.64" steps="1266435"/></proof>
  </goal>
  <goal name="fredkin_decomp_toffoli&#39;vc.15" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="(fredkin_decomp c t1 t2 n)">
   <goal name="fredkin_decomp_toffoli&#39;vc.15.0" expl="apply premises" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="fredkin_decomp_toffoli&#39;vc.15.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="result&#39;def">
     <goal name="fredkin_decomp_toffoli&#39;vc.15.0.0.0" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="fredkin_decomp_toffoli&#39;vc.15.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="fredkin_decomp&#39;spec">
       <goal name="fredkin_decomp_toffoli&#39;vc.15.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="sequence_equiv">
        <goal name="fredkin_decomp_toffoli&#39;vc.15.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="sequence_equiv">
         <goal name="fredkin_decomp_toffoli&#39;vc.15.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="3.35" steps="1364788"/></proof>
         </goal>
         <goal name="fredkin_decomp_toffoli&#39;vc.15.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="2"><result status="valid" time="1.06" steps="29570"/></proof>
         </goal>
         <goal name="fredkin_decomp_toffoli&#39;vc.15.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="2"><result status="valid" time="1.06" steps="29570"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="fredkin_decomp_toffoli&#39;vc.15.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="2.97" steps="1364788"/></proof>
        </goal>
        <goal name="fredkin_decomp_toffoli&#39;vc.15.0.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="1.06" steps="29570"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="fredkin_decomp_toffoli&#39;vc.15.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="1.06" steps="29570"/></proof>
       </goal>
       <goal name="fredkin_decomp_toffoli&#39;vc.15.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="1.06" steps="29570"/></proof>
       </goal>
       <goal name="fredkin_decomp_toffoli&#39;vc.15.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="1.06" steps="29570"/></proof>
       </goal>
       <goal name="fredkin_decomp_toffoli&#39;vc.15.0.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="1.09" steps="29570"/></proof>
       </goal>
       <goal name="fredkin_decomp_toffoli&#39;vc.15.0.0.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="1.16" steps="29570"/></proof>
       </goal>
       <goal name="fredkin_decomp_toffoli&#39;vc.15.0.0.0.0.6" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="1.13" steps="29570"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="fredkin_decomp_toffoli&#39;vc.15.1" expl="apply premises" proved="true">
   <proof prover="0"><result status="valid" time="1.97"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unbricks_fredkin&#39;vc" expl="VC for unbricks_fredkin" proved="true">
 <transf name="apply" proved="true" arg1="set_equiv_circuits_bv">
  <goal name="unbricks_fredkin&#39;vc.0" expl="apply premises" proved="true">
  <proof prover="2"><result status="valid" time="4.79" steps="230717"/></proof>
  </goal>
  <goal name="unbricks_fredkin&#39;vc.1" expl="apply premises" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="unbricks_fredkin&#39;vc.1.0" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="unbricks_fredkin&#39;vc.1.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem&#39;spec">
     <goal name="unbricks_fredkin&#39;vc.1.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem&#39;spec">
      <goal name="unbricks_fredkin&#39;vc.1.0.0.0.0" expl="apply premises" proved="true">
      <transf name="eliminate_definition" proved="true" >
       <goal name="unbricks_fredkin&#39;vc.1.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="circ_to_pps&#39;def">
        <goal name="unbricks_fredkin&#39;vc.1.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="circ_to_pps&#39;def">
         <goal name="unbricks_fredkin&#39;vc.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="fredkin&#39;spec8">
          <goal name="unbricks_fredkin&#39;vc.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="3.62" steps="1376395"/></proof>
          </goal>
          <goal name="unbricks_fredkin&#39;vc.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.09" steps="28168"/></proof>
          </goal>
          <goal name="unbricks_fredkin&#39;vc.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.01" steps="28190"/></proof>
          </goal>
          <goal name="unbricks_fredkin&#39;vc.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.00" steps="28168"/></proof>
          </goal>
          <goal name="unbricks_fredkin&#39;vc.1.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.07" steps="28168"/></proof>
          </goal>
          <goal name="unbricks_fredkin&#39;vc.1.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.07" steps="28168"/></proof>
          </goal>
          <goal name="unbricks_fredkin&#39;vc.1.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.08" steps="28168"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="unbricks_fredkin&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="1.69"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="unbricks_fredkin&#39;vc.1.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="4.81" steps="243781"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unbricks_toffoli&#39;vc" expl="VC for unbricks_toffoli" proved="true">
 <transf name="apply" proved="true" arg1="set_equiv_circuits_bv">
  <goal name="unbricks_toffoli&#39;vc.0" expl="apply premises" proved="true">
  <proof prover="2"><result status="valid" time="4.03" steps="231349"/></proof>
  </goal>
  <goal name="unbricks_toffoli&#39;vc.1" expl="apply premises" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="unbricks_toffoli&#39;vc.1.0" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="unbricks_toffoli&#39;vc.1.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem&#39;spec">
     <goal name="unbricks_toffoli&#39;vc.1.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem&#39;spec">
      <goal name="unbricks_toffoli&#39;vc.1.0.0.0.0" expl="apply premises" proved="true">
      <transf name="eliminate_definition" proved="true" >
       <goal name="unbricks_toffoli&#39;vc.1.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="circ_to_pps&#39;def">
        <goal name="unbricks_toffoli&#39;vc.1.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="circ_to_pps&#39;def">
         <goal name="unbricks_toffoli&#39;vc.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="toffoli&#39;spec7">
          <goal name="unbricks_toffoli&#39;vc.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="3.67" steps="1376754"/></proof>
          </goal>
          <goal name="unbricks_toffoli&#39;vc.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.05" steps="28235"/></proof>
          </goal>
          <goal name="unbricks_toffoli&#39;vc.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.07" steps="28235"/></proof>
          </goal>
          <goal name="unbricks_toffoli&#39;vc.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.09" steps="28258"/></proof>
          </goal>
          <goal name="unbricks_toffoli&#39;vc.1.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.09" steps="28235"/></proof>
          </goal>
          <goal name="unbricks_toffoli&#39;vc.1.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.09" steps="28235"/></proof>
          </goal>
          <goal name="unbricks_toffoli&#39;vc.1.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.09" steps="28235"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="unbricks_toffoli&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="1.58"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="unbricks_toffoli&#39;vc.1.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.81" steps="1211262"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unbricks_swap&#39;vc" expl="VC for unbricks_swap" proved="true">
 <transf name="apply" proved="true" arg1="set_equiv_circuits_bv">
  <goal name="unbricks_swap&#39;vc.0" expl="apply premises" proved="true">
  <proof prover="2"><result status="valid" time="4.97" steps="232017"/></proof>
  </goal>
  <goal name="unbricks_swap&#39;vc.1" expl="apply premises" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="unbricks_swap&#39;vc.1.0" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="unbricks_swap&#39;vc.1.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem&#39;spec">
     <goal name="unbricks_swap&#39;vc.1.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem&#39;spec">
      <goal name="unbricks_swap&#39;vc.1.0.0.0.0" expl="apply premises" proved="true">
      <transf name="eliminate_definition" proved="true" >
       <goal name="unbricks_swap&#39;vc.1.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="circ_to_pps&#39;def">
        <goal name="unbricks_swap&#39;vc.1.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="circ_to_pps&#39;def">
         <goal name="unbricks_swap&#39;vc.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="swap&#39;spec8">
          <goal name="unbricks_swap&#39;vc.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="3.63" steps="1377749"/></proof>
          </goal>
          <goal name="unbricks_swap&#39;vc.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.07" steps="28302"/></proof>
          </goal>
          <goal name="unbricks_swap&#39;vc.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.11" steps="28302"/></proof>
          </goal>
          <goal name="unbricks_swap&#39;vc.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.12" steps="28302"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="unbricks_swap&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="1.70"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="unbricks_swap&#39;vc.1.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.72" steps="1211287"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unbricks_cnot&#39;vc" expl="VC for unbricks_cnot" proved="true">
 <transf name="apply" proved="true" arg1="set_equiv_circuits_bv">
  <goal name="unbricks_cnot&#39;vc.0" expl="apply premises" proved="true">
  <proof prover="2"><result status="valid" time="4.95" steps="232781"/></proof>
  </goal>
  <goal name="unbricks_cnot&#39;vc.1" expl="apply premises" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="unbricks_cnot&#39;vc.1.0" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="unbricks_cnot&#39;vc.1.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem&#39;spec">
     <goal name="unbricks_cnot&#39;vc.1.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem&#39;spec">
      <goal name="unbricks_cnot&#39;vc.1.0.0.0.0" expl="apply premises" proved="true">
      <transf name="eliminate_definition" proved="true" >
       <goal name="unbricks_cnot&#39;vc.1.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="circ_to_pps&#39;def">
        <goal name="unbricks_cnot&#39;vc.1.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="circ_to_pps&#39;def">
         <goal name="unbricks_cnot&#39;vc.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="cnot&#39;spec7">
          <goal name="unbricks_cnot&#39;vc.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="3.50" steps="1377931"/></proof>
          </goal>
          <goal name="unbricks_cnot&#39;vc.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.15" steps="28370"/></proof>
          </goal>
          <goal name="unbricks_cnot&#39;vc.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.15" steps="28370"/></proof>
          </goal>
          <goal name="unbricks_cnot&#39;vc.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.12" steps="28370"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="unbricks_cnot&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="1.55"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="unbricks_cnot&#39;vc.1.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="4.99" steps="245894"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ry_twice_equiv&#39;vc" expl="VC for ry_twice_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ry_twice_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="ry_twice_equiv&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.92" steps="1182500"/></proof>
   </goal>
   <goal name="ry_twice_equiv&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ry_twice_equiv&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="ry_twice_equiv&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="1.95"/></proof>
     </goal>
     <goal name="ry_twice_equiv&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.95"/></proof>
     </goal>
     <goal name="ry_twice_equiv&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.80" steps="21122"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rz_twice_equiv&#39;vc" expl="VC for rz_twice_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rz_twice_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="rz_twice_equiv&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.97" steps="1182684"/></proof>
   </goal>
   <goal name="rz_twice_equiv&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rz_twice_equiv&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="rz_twice_equiv&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="1.94"/></proof>
     </goal>
     <goal name="rz_twice_equiv&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.96"/></proof>
     </goal>
     <goal name="rz_twice_equiv&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.74" steps="21122"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rzp_twice_equiv&#39;vc" expl="VC for rzp_twice_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rzp_twice_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="rzp_twice_equiv&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="3.00" steps="1182693"/></proof>
   </goal>
   <goal name="rzp_twice_equiv&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rzp_twice_equiv&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="rzp_twice_equiv&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="1.90"/></proof>
     </goal>
     <goal name="rzp_twice_equiv&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.92"/></proof>
     </goal>
     <goal name="rzp_twice_equiv&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.77" steps="21122"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rx_twice_equiv&#39;vc" expl="VC for rx_twice_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rx_twice_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="((rewrite_rx k&#39;) -- (rewrite_rx k&#39;))">
   <goal name="rx_twice_equiv&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="sequence_equiv">
    <goal name="rx_twice_equiv&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="4.95" steps="233440"/></proof>
    </goal>
    <goal name="rx_twice_equiv&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="4.84" steps="233440"/></proof>
    </goal>
    <goal name="rx_twice_equiv&#39;vc.0.0.2" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.73" steps="21023"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="rx_twice_equiv&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="((rewrite_rx k))">
    <goal name="rx_twice_equiv&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="rx_twice_equiv&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="rewrite_rx&#39;def">
      <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="rewrite_rx&#39;def">
       <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="((hadamard -- rz k&#39;) -- (hadamard -- hadamard) -- (rz k&#39; -- hadamard))">
        <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="(hadamard -- rz k&#39; -- hadamard -- hadamard -- rz k&#39; -- hadamard)">
         <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="((((hadamard -- rz k&#39;) -- hadamard) -- (hadamard -- rz k&#39;)) -- hadamard)">
          <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="2.66" steps="1083506"/></proof>
          </goal>
          <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="sequence_equiv">
           <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="2.66" steps="1083521"/></proof>
           </goal>
           <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="1.92" steps="928471"/></proof>
           </goal>
           <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.0.0.1.2" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="2.66" steps="1082489"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="(((hadamard -- rz k&#39;) -- (hadamard -- hadamard)) -- rz k&#39; -- hadamard)">
          <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="sequence_equiv">
           <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="sequence_equiv">
            <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="2.62" steps="1081905"/></proof>
            </goal>
            <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="1.99" steps="928484"/></proof>
            </goal>
            <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="2.67" steps="1082474"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="1.99" steps="928471"/></proof>
           </goal>
           <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="2.70" steps="1082902"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.0.1.1" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="2.68" steps="1084591"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="set_equiv_circuits">
         <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="2.71" steps="1084864"/></proof>
         </goal>
         <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_comp_">
           <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(path_sem ((hadamard -- rz k&#39;) -- (hadamard -- hadamard)) x)" arg2="(path_sem ((hadamard -- rz k&#39;)) x)">
            <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="path_sem_comp_rev">
             <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="get_equiv_circuits">
              <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="((hadamard -- (rz k&#39; -- rz k&#39;) -- hadamard))">
               <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="((hadamard -- rz k&#39; -- rz k&#39; -- hadamard))">
                <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.69" steps="1089015"/></proof>
                </goal>
                <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="sequence_equiv">
                 <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="2.70" steps="1088016"/></proof>
                 </goal>
                 <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="1.97" steps="928561"/></proof>
                 </goal>
                 <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0.0.0.0.1.2" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="2.84" steps="1088317"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0.0.0.1" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="sequence_equiv">
                <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="sequence_equiv">
                 <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="2.11" steps="928561"/></proof>
                 </goal>
                 <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="2.07" steps="928583"/></proof>
                 </goal>
                 <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="2.84" steps="1087040"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.13" steps="928561"/></proof>
                </goal>
                <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0.0.0.1.2" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.89" steps="1088376"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.88" steps="1088481"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="2.75" steps="1087964"/></proof>
             </goal>
             <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="2.68" steps="1088039"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="path_sem_comp_">
             <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.1.0" expl="equality hypothesis" proved="true">
             <transf name="rewrite" proved="true" arg1="path_sem_comp_">
              <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.1.0.0" expl="equality hypothesis" proved="true">
              <transf name="apply" proved="true" arg1="hadamard_twice_">
               <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="2.66" steps="1088066"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="2.70" steps="1088073"/></proof>
              </goal>
              <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.1.0.2" expl="rewrite premises" proved="true">
              <proof prover="2"><result status="valid" time="0.99" steps="28572"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="2.65" steps="1087964"/></proof>
             </goal>
             <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.0.1.2" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="2.68" steps="1087073"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.70" steps="1087969"/></proof>
           </goal>
           <goal name="rx_twice_equiv&#39;vc.0.1.0.0.0.0.1.1.0.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.67" steps="1087535"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="rx_twice_equiv&#39;vc.0.1.1" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="4.59" steps="233443"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rx_twice_&#39;vc" expl="VC for rx_twice_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rx_twice_&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_comp_rev">
   <goal name="rx_twice_&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="get_equiv_circuits">
    <goal name="rx_twice_&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="4.77" steps="245413"/></proof>
    </goal>
    <goal name="rx_twice_&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="1.81"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="rx_twice_&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="1.72"/></proof>
   </goal>
   <goal name="rx_twice_&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="0.70" steps="21022"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="phase_twice_equiv&#39;vc" expl="VC for phase_twice_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="phase_twice_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="phase_twice_equiv&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.90" steps="1183047"/></proof>
   </goal>
   <goal name="phase_twice_equiv&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="phase_twice_equiv&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="phase_twice_equiv&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="2.92" steps="1175513"/></proof>
     </goal>
     <goal name="phase_twice_equiv&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.92"/></proof>
     </goal>
     <goal name="phase_twice_equiv&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.73" steps="21122"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ry_twice_equiv_rev&#39;vc" expl="VC for ry_twice_equiv_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ry_twice_equiv_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.83" steps="1167962"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rx_twice_equiv_rev&#39;vc" expl="VC for rx_twice_equiv_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rx_twice_equiv_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.90" steps="1167762"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rz_twice_equiv_rev&#39;vc" expl="VC for rz_twice_equiv_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rz_twice_equiv_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.82" steps="1168124"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rzp_twice_equiv_rev&#39;vc" expl="VC for rzp_twice_equiv_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rzp_twice_equiv_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.78" steps="1168218"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="phase_twice_equiv_rev&#39;vc" expl="VC for phase_twice_equiv_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="phase_twice_equiv_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.66" steps="1168243"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Neutral_circuit" proved="true">
 <goal name="neutral_circ&#39;vc" expl="VC for neutral_circ" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_circ&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.04" steps="869315"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="set_neutral_circ&#39;vc" expl="VC for set_neutral_circ" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_neutral_circ&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="set_neutral_circ&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="neutral_circ&#39;def">
    <goal name="set_neutral_circ&#39;vc.0.0.0" expl="VC for set_neutral_circ" proved="true">
    <transf name="apply" proved="true" arg1="set_equiv_circuits_bv">
     <goal name="set_neutral_circ&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="set_neutral_circ&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="m_skip&#39;spec3">
       <goal name="set_neutral_circ&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="1.96" steps="1189574"/></proof>
       </goal>
       <goal name="set_neutral_circ&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="4.23" steps="1417599"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="set_neutral_circ&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="set_neutral_circ&#39;vc.0.0.0.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="Requires">
       <goal name="set_neutral_circ&#39;vc.0.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.79" steps="1085052"/></proof>
       </goal>
       <goal name="set_neutral_circ&#39;vc.0.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.19" steps="929370"/></proof>
       </goal>
       <goal name="set_neutral_circ&#39;vc.0.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.19" steps="929354"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_neutral_circ_bv&#39;vc" expl="VC for set_neutral_circ_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_neutral_circ_bv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_neutral_circ">
   <goal name="set_neutral_circ_bv&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="set_neutral_circ_bv&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
     <goal name="set_neutral_circ_bv&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="2.90" steps="1174776"/></proof>
     </goal>
     <goal name="set_neutral_circ_bv&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="1"><result status="valid" time="2.09" steps="930155"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="get_neutral_circ&#39;vc" expl="VC for get_neutral_circ" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_neutral_circ&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(path_sem c x )" arg2="(path_sem (m_skip (width c)) x )">
   <goal name="get_neutral_circ&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="3.37" steps="1171012"/></proof>
   </goal>
   <goal name="get_neutral_circ&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="2"><result status="valid" time="4.76" steps="235736"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_skip&#39;vc" expl="VC for neutral_skip" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_skip&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_neutral_circ_bv">
   <goal name="neutral_skip&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="3.26" steps="1209423"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_m_skip&#39;vc" expl="VC for neutral_m_skip" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_m_skip&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_neutral_circ">
   <goal name="neutral_m_skip&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="neutral_m_skip&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="1.39"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="m_skip_path_sem&#39;vc" expl="VC for m_skip_path_sem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="m_skip_path_sem&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.73" steps="1169531"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_equiv&#39;vc" expl="VC for neutral_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits">
   <goal name="neutral_equiv&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="1.25" steps="869790"/></proof>
   </goal>
   <goal name="neutral_equiv&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.32" steps="967482"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_neutral&#39;vc" expl="VC for cont_neutral" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_neutral&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_neutral_circ">
   <goal name="cont_neutral&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cont_neutral&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="case" proved="true" arg1="(getbv (ket_to_bv x) co = 0)">
     <goal name="cont_neutral&#39;vc.0.0.0.0" expl="true case (apply premises)" proved="true">
     <transf name="apply" proved="true" arg1="path_cont_ketz_gen">
      <goal name="cont_neutral&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="1.24" steps="870049"/></proof>
      </goal>
      <goal name="cont_neutral&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="1.17" steps="870065"/></proof>
      </goal>
      <goal name="cont_neutral&#39;vc.0.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="1.08" steps="870040"/></proof>
      </goal>
      <goal name="cont_neutral&#39;vc.0.0.0.0.3" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="2.83" steps="1181799"/></proof>
      </goal>
      <goal name="cont_neutral&#39;vc.0.0.0.0.4" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="1.13" steps="870040"/></proof>
      </goal>
      <goal name="cont_neutral&#39;vc.0.0.0.0.5" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="1.14" steps="878034"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_neutral&#39;vc.0.0.0.1" expl="false case (apply premises)" proved="true">
     <transf name="rewrite" proved="true" arg1="path_cont_keto_gen">
      <goal name="cont_neutral&#39;vc.0.0.0.1.0" expl="false case (apply premises)" proved="true">
      <transf name="replace" proved="true" arg1="x" arg2="( (bv_to_ket (ket_to_bv x)))">
       <goal name="cont_neutral&#39;vc.0.0.0.1.0.0" expl="false case (apply premises)" proved="true">
       <transf name="rewrite" proved="true" arg1="place_kron_bv">
        <goal name="cont_neutral&#39;vc.0.0.0.1.0.0.0" expl="false case (apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="get_neutral_circ">
         <goal name="cont_neutral&#39;vc.0.0.0.1.0.0.0.0" expl="false case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
          <goal name="cont_neutral&#39;vc.0.0.0.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
           <goal name="cont_neutral&#39;vc.0.0.0.1.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="bv_decomp_hhtt_rev">
            <goal name="cont_neutral&#39;vc.0.0.0.1.0.0.0.0.0.0.0" expl="false case (apply premises)" proved="true">
            <proof prover="1"><result status="valid" time="1.40" steps="870042"/></proof>
            </goal>
            <goal name="cont_neutral&#39;vc.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="1.16" steps="870044"/></proof>
            </goal>
            <goal name="cont_neutral&#39;vc.0.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="2.98" steps="1177761"/></proof>
            </goal>
            <goal name="cont_neutral&#39;vc.0.0.0.1.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="3.02" steps="1184608"/></proof>
            </goal>
            <goal name="cont_neutral&#39;vc.0.0.0.1.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="1.18" steps="870042"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="cont_neutral&#39;vc.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.26" steps="870044"/></proof>
         </goal>
         <goal name="cont_neutral&#39;vc.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.90" steps="1181526"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cont_neutral&#39;vc.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.26" steps="870044"/></proof>
        </goal>
        <goal name="cont_neutral&#39;vc.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.26" steps="870044"/></proof>
        </goal>
        <goal name="cont_neutral&#39;vc.0.0.0.1.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="3.24" steps="1184582"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_neutral&#39;vc.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
       <proof prover="1"><result status="valid" time="1.99" steps="930815"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_neutral&#39;vc.0.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.22" steps="870053"/></proof>
      </goal>
      <goal name="cont_neutral&#39;vc.0.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.23" steps="870069"/></proof>
      </goal>
      <goal name="cont_neutral&#39;vc.0.0.0.1.3" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.27" steps="870044"/></proof>
      </goal>
      <goal name="cont_neutral&#39;vc.0.0.0.1.4" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="3.31" steps="1181058"/></proof>
      </goal>
      <goal name="cont_neutral&#39;vc.0.0.0.1.5" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.33" steps="870044"/></proof>
      </goal>
      <goal name="cont_neutral&#39;vc.0.0.0.1.6" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="3.20" steps="1186763"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_neutral&#39;vc" expl="VC for place_neutral" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_neutral&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_neutral_circ">
   <goal name="place_neutral&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="place_neutral&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket(ket_to_bv x))">
     <goal name="place_neutral&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="place_kron_bv">
      <goal name="place_neutral&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="get_neutral_circ">
       <goal name="place_neutral&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
        <goal name="place_neutral&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
         <goal name="place_neutral&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="bv_decomp_hhtt_rev">
          <goal name="place_neutral&#39;vc.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="1.24" steps="870206"/></proof>
          </goal>
          <goal name="place_neutral&#39;vc.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.28" steps="870208"/></proof>
          </goal>
          <goal name="place_neutral&#39;vc.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="3.32" steps="1174075"/></proof>
          </goal>
          <goal name="place_neutral&#39;vc.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.95" steps="1181924"/></proof>
          </goal>
          <goal name="place_neutral&#39;vc.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.41" steps="870206"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="place_neutral&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.41" steps="870208"/></proof>
       </goal>
       <goal name="place_neutral&#39;vc.0.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="3.11" steps="1177884"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="place_neutral&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.40" steps="870208"/></proof>
      </goal>
      <goal name="place_neutral&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.34" steps="870208"/></proof>
      </goal>
      <goal name="place_neutral&#39;vc.0.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="3.72" steps="1179410"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="place_neutral&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="1"><result status="valid" time="2.60" steps="930870"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_skip_to_place&#39;vc" expl="VC for cont_skip_to_place" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_skip_to_place&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.30" steps="870322"/></proof>
  </goal>
  <goal name="cont_skip_to_place&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.55" steps="929878"/></proof>
  </goal>
  <goal name="cont_skip_to_place&#39;vc.2" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="neutral_equiv">
   <goal name="cont_skip_to_place&#39;vc.2.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="3.33" steps="1181690"/></proof>
   </goal>
   <goal name="cont_skip_to_place&#39;vc.2.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="cont_neutral">
    <goal name="cont_skip_to_place&#39;vc.2.1.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="1.24" steps="878750"/></proof>
    </goal>
    <goal name="cont_skip_to_place&#39;vc.2.1.1" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.36" steps="941663"/></proof>
    </goal>
    <goal name="cont_skip_to_place&#39;vc.2.1.2" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.46" steps="942514"/></proof>
    </goal>
    <goal name="cont_skip_to_place&#39;vc.2.1.3" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="1.45" steps="878759"/></proof>
    </goal>
    <goal name="cont_skip_to_place&#39;vc.2.1.4" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="1.45" steps="878750"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cont_skip_to_place&#39;vc.2.2" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="3.61" steps="1183919"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_seq_left&#39;vc" expl="VC for neutral_seq_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_seq_left&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits_bv">
   <goal name="neutral_seq_left&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.50" steps="931418"/></proof>
   </goal>
   <goal name="neutral_seq_left&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="neutral_seq_left&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="neutral_seq_left&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="instantiate" proved="true" arg1="get_neutral_circ" arg2="c, (bv_to_ket x)">
      <goal name="neutral_seq_left&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="Hinst">
       <goal name="neutral_seq_left&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="1.29" steps="870721"/></proof>
       </goal>
       <goal name="neutral_seq_left&#39;vc.0.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.38" steps="870723"/></proof>
       </goal>
       <goal name="neutral_seq_left&#39;vc.0.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.48" steps="967667"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="neutral_seq_left&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.54" steps="967613"/></proof>
     </goal>
     <goal name="neutral_seq_left&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.28" steps="870680"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_seq_right&#39;vc" expl="VC for neutral_seq_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_seq_right&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equiv_circuits_bv">
   <goal name="neutral_seq_right&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="2.31" steps="931499"/></proof>
   </goal>
   <goal name="neutral_seq_right&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="neutral_seq_right&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="neutral_seq_right&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="get_neutral_circ">
      <goal name="neutral_seq_right&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="1.52" steps="870758"/></proof>
      </goal>
      <goal name="neutral_seq_right&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.32" steps="870760"/></proof>
      </goal>
      <goal name="neutral_seq_right&#39;vc.0.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="3.30" steps="1194531"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="neutral_seq_right&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.75" steps="967709"/></proof>
     </goal>
     <goal name="neutral_seq_right&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.35" steps="870767"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_seq_had&#39;vc" expl="VC for neutral_seq_had" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_seq_had&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_neutral_circ">
   <goal name="neutral_seq_had&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="neutral_seq_had&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.72" steps="1002097"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_seq_swap&#39;vc" expl="VC for neutral_seq_swap" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_seq_swap&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_neutral_circ">
   <goal name="neutral_seq_swap&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="neutral_seq_swap&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_flat_mute_ket">
     <goal name="neutral_seq_swap&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(bv_to_ket
  (make_bv
   (fun (y3:int) -&gt;
     basis_ket (swap t1 t2 n -- swap t1 t2 n) (getbv (ket_to_bv x))
     (fun (i:int) -&gt; i) y3)
   (width (swap t1 t2 n -- swap t1 t2 n))) = bv_to_ket (ket_to_bv x))">
       <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="apply" proved="true" arg1="bv_to_ket_eq">
        <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="3.09" steps="1181809"/></proof>
         </goal>
         <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
             <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.61" steps="1424829"/></proof>
              </goal>
              <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.53" steps="1424926"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.70" steps="1231745"/></proof>
              </goal>
              <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.86" steps="1424052"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.74" steps="1146584"/></proof>
              </goal>
              <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.75" steps="1146599"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
             <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.96" steps="1424829"/></proof>
              </goal>
              <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.93" steps="1424926"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="3.89" steps="1424196"/></proof>
             </goal>
             <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="2.00" steps="1146593"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.06" steps="1176828"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
          <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="(--)&#39;spec1">
             <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
               <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="basis_ket_swap_if">
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="replace" proved="true" arg1="((fun (y3:int) -&gt;
          basis_ket (swap t1 t2 n) (getbv (ket_to_bv x)) (fun (i1:int) -&gt; i1)
          y3)
        @ t2)" arg2="((basis_ket (swap t1 t2 n) (getbv (ket_to_bv x)) (fun (i1:int) -&gt; i1)
          t2)
        )">
                 <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="((fun (y3:int) -&gt;
          basis_ket (swap t1 t2 n) (getbv (ket_to_bv x)) (fun (i1:int) -&gt; i1)
          y3)
        @ t1)" arg2="((basis_ket (swap t1 t2 n) (getbv (ket_to_bv x)) (fun (i1:int) -&gt; i1)
          t1)
        )">
                  <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="replace" proved="true" arg1="((fun (y3:int) -&gt;
          basis_ket (swap t1 t2 n) (getbv (ket_to_bv x)) (fun (i1:int) -&gt; i1)
          y3)
        @ i)" arg2="((basis_ket (swap t1 t2 n) (getbv (ket_to_bv x)) (fun (i1:int) -&gt; i1)
          i)
        )">
                   <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="basis_ket_swap_if">
                    <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="basis_ket_swap_if">
                     <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="basis_ket_swap_if">
                      <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="1"><result status="valid" time="2.75" steps="1223669"/></proof>
                      </goal>
                      <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.94" steps="1146593"/></proof>
                      </goal>
                      <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="2.02" steps="1146593"/></proof>
                      </goal>
                      <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.72" steps="1146582"/></proof>
                      </goal>
                      <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="3.90" steps="1423064"/></proof>
                      </goal>
                      <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="3.94" steps="1417591"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="2.00" steps="1146593"/></proof>
                     </goal>
                     <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="2.00" steps="1146593"/></proof>
                     </goal>
                     <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="2.01" steps="1146582"/></proof>
                     </goal>
                     <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="4.17" steps="1423064"/></proof>
                     </goal>
                     <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="2.00" steps="1146593"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.68" steps="1146593"/></proof>
                    </goal>
                    <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="2.03" steps="1146593"/></proof>
                    </goal>
                    <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.97" steps="1146582"/></proof>
                    </goal>
                    <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="3.72" steps="1423064"/></proof>
                    </goal>
                    <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.92" steps="1146593"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="1"><result status="valid" time="3.06" steps="1314295"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="1"><result status="valid" time="3.06" steps="1314288"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="1"><result status="valid" time="3.56" steps="1314288"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.87" steps="1146593"/></proof>
                </goal>
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="2.00" steps="1146593"/></proof>
                </goal>
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="2.02" steps="1146582"/></proof>
                </goal>
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="set_binary_l">
                 <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="(width (swap t1 t2 n -- swap t1 t2 n))" arg2="n" arg3="in" arg4="H">
                  <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="basis_ket_swap_if">
                     <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="1"><result status="valid" time="4.52" steps="1432670"/></proof>
                     </goal>
                     <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="2.02" steps="1146648"/></proof>
                     </goal>
                     <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="2.05" steps="1146648"/></proof>
                     </goal>
                     <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.0.3" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="2.04" steps="1146637"/></proof>
                     </goal>
                     <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.0.4" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="4.39" steps="1422547"/></proof>
                     </goal>
                     <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.0.5" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="1.95" steps="1146648"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.1" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="basis_ket_swap_if">
                     <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.1.0" expl="apply premises" proved="true">
                     <proof prover="1"><result status="valid" time="4.56" steps="1432602"/></proof>
                     </goal>
                     <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.1.1" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="1.97" steps="1146648"/></proof>
                     </goal>
                     <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.1.2" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="1.96" steps="1146648"/></proof>
                     </goal>
                     <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.1.3" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="2.03" steps="1146637"/></proof>
                     </goal>
                     <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.1.4" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="4.39" steps="1422547"/></proof>
                     </goal>
                     <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.1.5" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="1.96" steps="1146648"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="1"><result status="valid" time="3.81" steps="1416965"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="3.73" steps="1417591"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                  <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.69"/></proof>
                   </goal>
                   <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.69"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="4.10" steps="1519490"/></proof>
                  </goal>
                  <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="1.79" steps="1243494"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                  <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.83"/></proof>
                   </goal>
                   <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.69"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="4.77" steps="1519490"/></proof>
                  </goal>
                  <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="2.06" steps="1243494"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="3.94" steps="1516426"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="1.74" steps="1243458"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
              <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.98" steps="1519472"/></proof>
              </goal>
              <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="1.81"/></proof>
              </goal>
              <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.79" steps="1243494"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.1.1.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
              <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.51" steps="1519472"/></proof>
              </goal>
              <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.1.1.0.0.1" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="1.91"/></proof>
              </goal>
              <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.1.1.0.0.2" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.86" steps="1243494"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="1.20" steps="870940"/></proof>
           </goal>
           <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="4.74" steps="1519594"/></proof>
                </goal>
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="4.80" steps="1519621"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.13" steps="1322500"/></proof>
                </goal>
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.1.1" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.88"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.2" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.2.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="1.68" steps="1243485"/></proof>
                </goal>
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.2.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="1.70" steps="1243500"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.96" steps="1519594"/></proof>
                </goal>
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.79"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.01" steps="1322500"/></proof>
                </goal>
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.1.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="4.07" steps="1518693"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.2" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.2.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.14" steps="1243485"/></proof>
                </goal>
                <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.2.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="1.78" steps="1243500"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="3.44" steps="1270343"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="neutral_seq_swap&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.46" steps="1024573"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="neutral_seq_swap&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.81"/></proof>
     </goal>
     <goal name="neutral_seq_swap&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="neutral_seq_swap&#39;vc.0.0.0.2.0" expl="rewrite premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="neutral_seq_swap&#39;vc.0.0.0.2.0.0" expl="rewrite premises" proved="true">
       <transf name="rewrite" proved="true" arg1="(--)&#39;spec">
        <goal name="neutral_seq_swap&#39;vc.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="4.26" steps="1514533"/></proof>
        </goal>
        <goal name="neutral_seq_swap&#39;vc.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.72" steps="1152149"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="neutral_seq_swap&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.47" steps="870906"/></proof>
     </goal>
     <goal name="neutral_seq_swap&#39;vc.0.0.0.4" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.46" steps="870906"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_seq_cnot&#39;vc" expl="VC for neutral_seq_cnot" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_seq_cnot&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_neutral_circ">
   <goal name="neutral_seq_cnot&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="neutral_seq_cnot&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_flat_mute_ket">
     <goal name="neutral_seq_cnot&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="( bv_to_ket
  (make_bv
   (fun (y3:int) -&gt;
     basis_ket (cnot co t n -- cnot co t n) (getbv (ket_to_bv x))
     (fun (i:int) -&gt; i) y3)
   (width (cnot co t n -- cnot co t n)))
  = bv_to_ket (ket_to_bv x))">
       <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="apply" proved="true" arg1="bv_to_ket_eq">
        <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="3.21" steps="1182148"/></proof>
         </goal>
         <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
             <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.83" steps="1425252"/></proof>
              </goal>
              <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.63" steps="1425096"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.65" steps="1231831"/></proof>
              </goal>
              <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.82" steps="1424621"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.00" steps="1146760"/></proof>
              </goal>
              <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.70" steps="1146775"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
             <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.69" steps="1425252"/></proof>
              </goal>
              <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.65" steps="1425096"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="3.65" steps="1424395"/></proof>
             </goal>
             <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="1.64" steps="1146769"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.96" steps="1177335"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
          <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="(--)&#39;spec1">
             <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
               <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="basis_ket_cnot_if">
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="((fun (y3:int) -&gt;
              basis_ket (cnot co t n) (getbv (ket_to_bv x))
              (fun (i1:int) -&gt; i1) y3)
            @ t)" arg2="((basis_ket (cnot co t n) (getbv (ket_to_bv x))
              (fun (i1:int) -&gt; i1) t)
            )">
                  <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="replace" proved="true" arg1="((fun (y3:int) -&gt;
              basis_ket (cnot co t n) (getbv (ket_to_bv x))
              (fun (i1:int) -&gt; i1) y3)
            @ i)" arg2="((basis_ket (cnot co t n) (getbv (ket_to_bv x))
              (fun (i1:int) -&gt; i1) i)
            )">
                   <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="basis_ket_cnot_if">
                    <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="basis_ket_cnot_if">
                     <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="basis_ket_cnot_if">
                      <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="1"><result status="valid" time="3.73" steps="1431457"/></proof>
                      </goal>
                      <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.67" steps="1146769"/></proof>
                      </goal>
                      <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.65" steps="1146769"/></proof>
                      </goal>
                      <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.72" steps="1146758"/></proof>
                      </goal>
                      <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="3.73" steps="1422960"/></proof>
                      </goal>
                      <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="3.78" steps="1418290"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="1.67" steps="1146769"/></proof>
                     </goal>
                     <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="1.68" steps="1146769"/></proof>
                     </goal>
                     <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="1.93" steps="1146758"/></proof>
                     </goal>
                     <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="3.69" steps="1422960"/></proof>
                     </goal>
                     <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="1.86" steps="1146769"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.68" steps="1146769"/></proof>
                    </goal>
                    <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.69" steps="1146769"/></proof>
                    </goal>
                    <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.69" steps="1146758"/></proof>
                    </goal>
                    <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="4.30" steps="1422960"/></proof>
                    </goal>
                    <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="2.01" steps="1146769"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="1"><result status="valid" time="3.16" steps="1314505"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="1"><result status="valid" time="3.66" steps="1314498"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="2.01" steps="1146769"/></proof>
                </goal>
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="2.03" steps="1146769"/></proof>
                </goal>
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="2.04" steps="1146758"/></proof>
                </goal>
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="set_binary_l">
                 <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="basis_ket_cnot_if">
                    <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="4.63" steps="1431512"/></proof>
                    </goal>
                    <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="2.03" steps="1146809"/></proof>
                    </goal>
                    <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="2.00" steps="1146809"/></proof>
                    </goal>
                    <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.3" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="2.03" steps="1146798"/></proof>
                    </goal>
                    <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.4" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="4.47" steps="1423256"/></proof>
                    </goal>
                    <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.0.5" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.98" steps="1146809"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.1" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="basis_ket_cnot_if">
                    <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.1.0" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="4.58" steps="1431414"/></proof>
                    </goal>
                    <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.1.1" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="2.04" steps="1146809"/></proof>
                    </goal>
                    <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.1.2" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.96" steps="1146809"/></proof>
                    </goal>
                    <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.1.3" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.94" steps="1146798"/></proof>
                    </goal>
                    <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.1.4" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="4.54" steps="1423256"/></proof>
                    </goal>
                    <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4.0.0.1.5" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.95" steps="1146809"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="4.33" steps="1418290"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                  <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.90"/></proof>
                   </goal>
                   <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="4.71" steps="1520028"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="4.65" steps="1520591"/></proof>
                  </goal>
                  <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="2.14" steps="1243670"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                  <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.86"/></proof>
                   </goal>
                   <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.88"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="4.77" steps="1520591"/></proof>
                  </goal>
                  <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="2.06" steps="1243670"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="4.70" steps="1516707"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="2.10" steps="1243634"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
              <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.27" steps="1519707"/></proof>
              </goal>
              <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.63" steps="1520591"/></proof>
              </goal>
              <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.10" steps="1243670"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.1.1.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
              <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.76" steps="1519707"/></proof>
              </goal>
              <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.1.1.0.0.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.70" steps="1520591"/></proof>
              </goal>
              <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.1.1.0.0.2" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.17" steps="1243670"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="1.41" steps="871116"/></proof>
           </goal>
           <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.75"/></proof>
                </goal>
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.89"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.75" steps="1322685"/></proof>
                </goal>
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.1.1" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.95"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.2" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.2.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.19" steps="1243661"/></proof>
                </goal>
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.2.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.12" steps="1243676"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.74"/></proof>
                </goal>
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="4.82" steps="1520028"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.42" steps="1322685"/></proof>
                </goal>
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.1.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="4.57" steps="1519800"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.2" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.2.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.03" steps="1243661"/></proof>
                </goal>
                <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.2.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.10" steps="1243676"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="3.91" steps="1270529"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="neutral_seq_cnot&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.83" steps="1024633"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="neutral_seq_cnot&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.90"/></proof>
     </goal>
     <goal name="neutral_seq_cnot&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="neutral_seq_cnot&#39;vc.0.0.0.2.0" expl="rewrite premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="neutral_seq_cnot&#39;vc.0.0.0.2.0.0" expl="rewrite premises" proved="true">
       <transf name="rewrite" proved="true" arg1="(--)&#39;spec">
        <goal name="neutral_seq_cnot&#39;vc.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="4.67" steps="1514575"/></proof>
        </goal>
        <goal name="neutral_seq_cnot&#39;vc.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.04" steps="1152325"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="neutral_seq_cnot&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.39" steps="871082"/></proof>
     </goal>
     <goal name="neutral_seq_cnot&#39;vc.0.0.0.4" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.41" steps="871082"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_seq_toffoli&#39;vc" expl="VC for neutral_seq_toffoli" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_seq_toffoli&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_neutral_circ">
   <goal name="neutral_seq_toffoli&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="neutral_seq_toffoli&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_flat_mute_ket">
     <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(bv_to_ket
  (make_bv
   (fun (y3:int) -&gt;
     basis_ket (toffoli c1 c2 t n -- toffoli c1 c2 t n) (getbv (ket_to_bv x))
     (fun (i:int) -&gt; i) y3)
   (width (toffoli c1 c2 t n -- toffoli c1 c2 t n)))
  = (bv_to_ket (ket_to_bv x)))">
       <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="apply" proved="true" arg1="bv_to_ket_eq">
        <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="3.44" steps="1182792"/></proof>
         </goal>
         <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
             <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.80" steps="1425439"/></proof>
              </goal>
              <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.77" steps="1425308"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.86" steps="1232016"/></proof>
              </goal>
              <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.30" steps="1424502"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.91" steps="1146998"/></proof>
              </goal>
              <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.88" steps="1147013"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
             <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.84" steps="1425439"/></proof>
              </goal>
              <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.41" steps="1425308"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="3.75" steps="1424813"/></proof>
             </goal>
             <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="1.99" steps="1147007"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.52" steps="1178405"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
          <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="(--)&#39;spec1">
             <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
               <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="basis_ket_toffoli_if">
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="((fun (y3:int) -&gt;
              basis_ket (toffoli c1 c2 t n) (getbv (ket_to_bv x))
              (fun (i1:int) -&gt; i1) y3)
            @ t)" arg2="((              basis_ket (toffoli c1 c2 t n) (getbv (ket_to_bv x))
              (fun (i1:int) -&gt; i1) t)
            )">
                  <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="replace" proved="true" arg1="((fun (y3:int) -&gt;
              basis_ket (toffoli c1 c2 t n) (getbv (ket_to_bv x))
              (fun (i1:int) -&gt; i1) y3)
            @ i)" arg2="((              basis_ket (toffoli c1 c2 t n) (getbv (ket_to_bv x))
              (fun (i1:int) -&gt; i1) i)
            )">
                   <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="basis_ket_toffoli_if">
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="basis_ket_toffoli_if">
                     <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="basis_ket_toffoli_if">
                      <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="basis_ket_toffoli_if">
                       <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <proof prover="1"><result status="valid" time="3.86" steps="1433253"/></proof>
                       </goal>
                       <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="1.94" steps="1147007"/></proof>
                       </goal>
                       <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="1.65" steps="1147007"/></proof>
                       </goal>
                       <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="1.69" steps="1147007"/></proof>
                       </goal>
                       <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="1.96" steps="1146996"/></proof>
                       </goal>
                       <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="1.99" steps="1146996"/></proof>
                       </goal>
                       <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="1.92" steps="1146996"/></proof>
                       </goal>
                       <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="3.74" steps="1423333"/></proof>
                       </goal>
                       <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="3.72" steps="1418562"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.66" steps="1147007"/></proof>
                      </goal>
                      <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="2.03" steps="1147007"/></proof>
                      </goal>
                      <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="2.05" steps="1147007"/></proof>
                      </goal>
                      <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.69" steps="1146996"/></proof>
                      </goal>
                      <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.70" steps="1146996"/></proof>
                      </goal>
                      <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="2.00" steps="1146996"/></proof>
                      </goal>
                      <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="4.21" steps="1423333"/></proof>
                      </goal>
                      <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.73" steps="1147007"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="1.71" steps="1147007"/></proof>
                     </goal>
                     <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="2.01" steps="1147007"/></proof>
                     </goal>
                     <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="1.72" steps="1147007"/></proof>
                     </goal>
                     <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="1.69" steps="1146996"/></proof>
                     </goal>
                     <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="1.70" steps="1146996"/></proof>
                     </goal>
                     <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="1.98" steps="1146996"/></proof>
                     </goal>
                     <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="4.26" steps="1423333"/></proof>
                     </goal>
                     <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="1.68" steps="1147007"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.70" steps="1147007"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.70" steps="1147007"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.70" steps="1147007"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.74" steps="1146996"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="2.00" steps="1146996"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.70" steps="1146996"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="3.87" steps="1423333"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.76" steps="1147007"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="1"><result status="valid" time="3.10" steps="1314857"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="1"><result status="valid" time="3.08" steps="1314850"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.94" steps="1147007"/></proof>
                </goal>
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.63" steps="1147007"/></proof>
                </goal>
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.91" steps="1147007"/></proof>
                </goal>
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.91" steps="1146996"/></proof>
                </goal>
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.89" steps="1146996"/></proof>
                </goal>
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.62" steps="1146996"/></proof>
                </goal>
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="set_binary_l">
                 <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="basis_ket_toffoli_if">
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="3.56" steps="1433411"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.60" steps="1147047"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.54" steps="1147047"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0.3" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.58" steps="1147047"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0.4" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.64" steps="1147036"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0.5" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.65" steps="1147036"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0.6" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.93" steps="1147036"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0.7" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="3.59" steps="1423602"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0.8" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.62" steps="1147047"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="basis_ket_toffoli_if">
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0.0" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="3.72" steps="1433107"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0.1" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.94" steps="1147047"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0.2" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.93" steps="1147047"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0.3" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.88" steps="1147047"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0.4" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.89" steps="1147036"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0.5" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.87" steps="1147036"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0.6" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.88" steps="1147036"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0.7" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="3.57" steps="1423602"/></proof>
                    </goal>
                    <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0.8" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.83" steps="1147047"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="3.56" steps="1418562"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                  <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.93" steps="1520496"/></proof>
                   </goal>
                   <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.82" steps="1520402"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="3.88" steps="1520291"/></proof>
                  </goal>
                  <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="1.76" steps="1243908"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                  <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.53"/></proof>
                   </goal>
                   <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.78"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.51"/></proof>
                  </goal>
                  <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="1.77" steps="1243908"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="0"><result status="valid" time="1.75"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="1.81" steps="1243872"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
              <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="5.12" steps="250465"/></proof>
              </goal>
              <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="1.54"/></proof>
              </goal>
              <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.79" steps="1243908"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.1.1.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
              <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="5.28" steps="250465"/></proof>
              </goal>
              <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.1.1.0.0.1" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="1.76"/></proof>
              </goal>
              <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.1.1.0.0.2" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.14" steps="1243908"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="1.47" steps="871354"/></proof>
           </goal>
           <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.80"/></proof>
                </goal>
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.80"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.60" steps="1323042"/></proof>
                </goal>
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.1.1" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.58"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.2" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.2.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.11" steps="1243899"/></proof>
                </goal>
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.2.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.09" steps="1243914"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.94" steps="1520496"/></proof>
                </goal>
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="4.02" steps="1520402"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.16" steps="1323042"/></proof>
                </goal>
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.1.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="4.08" steps="1519966"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.2" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.2.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="1.78" steps="1243899"/></proof>
                </goal>
                <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.2.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.14" steps="1243914"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="3.42" steps="1270523"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="neutral_seq_toffoli&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.38" steps="1024985"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="neutral_seq_toffoli&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.90"/></proof>
     </goal>
     <goal name="neutral_seq_toffoli&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="neutral_seq_toffoli&#39;vc.0.0.0.2.0" expl="rewrite premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="neutral_seq_toffoli&#39;vc.0.0.0.2.0.0" expl="rewrite premises" proved="true">
       <transf name="rewrite" proved="true" arg1="(--)&#39;spec">
        <goal name="neutral_seq_toffoli&#39;vc.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
         <goal name="neutral_seq_toffoli&#39;vc.0.0.0.2.0.0.0.0" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.66" steps="1423123"/></proof>
         </goal>
         <goal name="neutral_seq_toffoli&#39;vc.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="1.68"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="neutral_seq_toffoli&#39;vc.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.59" steps="1152563"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="neutral_seq_toffoli&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.16" steps="871320"/></proof>
     </goal>
     <goal name="neutral_seq_toffoli&#39;vc.0.0.0.4" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.14" steps="871320"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_seq_fredkin&#39;vc" expl="VC for neutral_seq_fredkin" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_seq_fredkin&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_neutral_circ">
   <goal name="neutral_seq_fredkin&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="neutral_seq_fredkin&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_flat_mute_ket">
     <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="( bv_to_ket
  (make_bv
   (fun (y3:int) -&gt;
     basis_ket (fredkin c t1 t2 n -- fredkin c t1 t2 n) (getbv (ket_to_bv x))
     (fun (i:int) -&gt; i) y3)
   (width (fredkin c t1 t2 n -- fredkin c t1 t2 n))) = bv_to_ket (ket_to_bv x))">
       <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="apply" proved="true" arg1="bv_to_ket_eq">
        <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="make_bv_length">
         <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="2.88" steps="1182572"/></proof>
         </goal>
         <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
             <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.57" steps="1425129"/></proof>
              </goal>
              <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.44" steps="1425345"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.72" steps="1232096"/></proof>
              </goal>
              <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.69" steps="1424671"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.94" steps="1147281"/></proof>
              </goal>
              <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.59" steps="1147296"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
             <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.73" steps="1425129"/></proof>
              </goal>
              <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.74" steps="1425345"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="3.66" steps="1424738"/></proof>
             </goal>
             <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="1.65" steps="1147290"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.96" steps="1178307"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
          <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="(--)&#39;spec1">
             <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
               <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="basis_ket_fredkin_if">
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="((fun (y3:int) -&gt;
              basis_ket (fredkin c t1 t2 n) (getbv (ket_to_bv x))
              (fun (i1:int) -&gt; i1) y3)
            @ c)" arg2="((basis_ket (fredkin c t1 t2 n) (getbv (ket_to_bv x))
              (fun (i1:int) -&gt; i1) c)
            )">
                  <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="replace" proved="true" arg1="((fun (y3:int) -&gt;
              basis_ket (fredkin c t1 t2 n) (getbv (ket_to_bv x))
              (fun (i1:int) -&gt; i1) y3)
            @ t1)" arg2="((basis_ket (fredkin c t1 t2 n) (getbv (ket_to_bv x))
              (fun (i1:int) -&gt; i1) t1)
            )">
                   <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="replace" proved="true" arg1="((fun (y3:int) -&gt;
              basis_ket (fredkin c t1 t2 n) (getbv (ket_to_bv x))
              (fun (i1:int) -&gt; i1) y3)
            @ t2)" arg2="((basis_ket (fredkin c t1 t2 n) (getbv (ket_to_bv x))
              (fun (i1:int) -&gt; i1) t2)
            )">
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="replace" proved="true" arg1="((fun (y3:int) -&gt;
              basis_ket (fredkin c t1 t2 n) (getbv (ket_to_bv x))
              (fun (i1:int) -&gt; i1) y3)
            @ i)" arg2="((basis_ket (fredkin c t1 t2 n) (getbv (ket_to_bv x))
              (fun (i1:int) -&gt; i1) i)
            )">
                     <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="basis_ket_fredkin_if">
                      <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="basis_ket_fredkin_if">
                       <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="basis_ket_fredkin_if">
                        <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="basis_ket_fredkin_if">
                         <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                         <proof prover="1"><result status="valid" time="2.71" steps="1224262"/></proof>
                         </goal>
                         <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="1"><result status="valid" time="1.93" steps="1147290"/></proof>
                         </goal>
                         <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                         <proof prover="1"><result status="valid" time="1.81" steps="1147290"/></proof>
                         </goal>
                         <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                         <proof prover="1"><result status="valid" time="1.88" steps="1147290"/></proof>
                         </goal>
                         <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                         <proof prover="1"><result status="valid" time="1.91" steps="1147279"/></proof>
                         </goal>
                         <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                         <proof prover="1"><result status="valid" time="1.89" steps="1147279"/></proof>
                         </goal>
                         <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                         <proof prover="1"><result status="valid" time="1.69" steps="1147279"/></proof>
                         </goal>
                         <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
                         <proof prover="1"><result status="valid" time="3.85" steps="1423632"/></proof>
                         </goal>
                         <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
                         <proof prover="1"><result status="valid" time="3.83" steps="1418540"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="1.71" steps="1147290"/></proof>
                        </goal>
                        <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="1.71" steps="1147290"/></proof>
                        </goal>
                        <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="1.71" steps="1147290"/></proof>
                        </goal>
                        <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="1.96" steps="1147279"/></proof>
                        </goal>
                        <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="2.01" steps="1147279"/></proof>
                        </goal>
                        <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="1.71" steps="1147279"/></proof>
                        </goal>
                        <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="3.78" steps="1423632"/></proof>
                        </goal>
                        <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="1.87" steps="1147290"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="1.80" steps="1147290"/></proof>
                       </goal>
                       <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="1.87" steps="1147290"/></proof>
                       </goal>
                       <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="1.59" steps="1147290"/></proof>
                       </goal>
                       <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="1.60" steps="1147279"/></proof>
                       </goal>
                       <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="1.56" steps="1147279"/></proof>
                       </goal>
                       <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="1.56" steps="1147279"/></proof>
                       </goal>
                       <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="3.64" steps="1423632"/></proof>
                       </goal>
                       <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="1.64" steps="1147290"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.69" steps="1147290"/></proof>
                      </goal>
                      <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.57" steps="1147290"/></proof>
                      </goal>
                      <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.55" steps="1147290"/></proof>
                      </goal>
                      <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.66" steps="1147279"/></proof>
                      </goal>
                      <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.72" steps="1147279"/></proof>
                      </goal>
                      <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.69" steps="1147279"/></proof>
                      </goal>
                      <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="3.77" steps="1423632"/></proof>
                      </goal>
                      <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
                      <proof prover="1"><result status="valid" time="1.71" steps="1147290"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                     <proof prover="1"><result status="valid" time="2.93" steps="1315130"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                    <proof prover="1"><result status="valid" time="2.94" steps="1315123"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="1"><result status="valid" time="3.02" steps="1315123"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="1"><result status="valid" time="3.41" steps="1315123"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.65" steps="1147290"/></proof>
                </goal>
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.68" steps="1147290"/></proof>
                </goal>
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.68" steps="1147290"/></proof>
                </goal>
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.64" steps="1147279"/></proof>
                </goal>
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.94" steps="1147279"/></proof>
                </goal>
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.68" steps="1147279"/></proof>
                </goal>
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="set_binary_l">
                 <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="basis_ket_fredkin_if">
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="3.70" steps="1435158"/></proof>
                    </goal>
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.85" steps="1147330"/></proof>
                    </goal>
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.91" steps="1147330"/></proof>
                    </goal>
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0.3" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.65" steps="1147330"/></proof>
                    </goal>
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0.4" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.96" steps="1147319"/></proof>
                    </goal>
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0.5" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.61" steps="1147319"/></proof>
                    </goal>
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0.6" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.65" steps="1147319"/></proof>
                    </goal>
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0.7" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="4.01" steps="1423104"/></proof>
                    </goal>
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.0.0.8" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.67" steps="1147330"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="basis_ket_fredkin_if">
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0.0" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="3.66" steps="1435191"/></proof>
                    </goal>
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0.1" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.63" steps="1147330"/></proof>
                    </goal>
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0.2" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.58" steps="1147330"/></proof>
                    </goal>
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0.3" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.60" steps="1147330"/></proof>
                    </goal>
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0.4" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.91" steps="1147319"/></proof>
                    </goal>
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0.5" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.87" steps="1147319"/></proof>
                    </goal>
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0.6" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.94" steps="1147319"/></proof>
                    </goal>
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0.7" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="3.76" steps="1423104"/></proof>
                    </goal>
                    <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.7.0.1.0.8" expl="rewrite premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.69" steps="1147330"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="3.48" steps="1418540"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                  <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.88" steps="1520918"/></proof>
                   </goal>
                   <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="3.88" steps="1520800"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.54"/></proof>
                  </goal>
                  <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="1.74" steps="1244191"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                  <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.59"/></proof>
                   </goal>
                   <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
                   <proof prover="0"><result status="valid" time="1.84"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="3.94" steps="1520627"/></proof>
                  </goal>
                  <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="1.78" steps="1244191"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="3.91" steps="1518620"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="2.08" steps="1244155"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
              <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.33" steps="1520730"/></proof>
              </goal>
              <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.87" steps="1520627"/></proof>
              </goal>
              <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.74" steps="1244191"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.1.1.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
              <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="4.00" steps="1520730"/></proof>
              </goal>
              <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.1.1.0.0.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.98" steps="1520627"/></proof>
              </goal>
              <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.1.1.0.0.2" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.77" steps="1244191"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="1.41" steps="871637"/></proof>
           </goal>
           <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="4.66" steps="1520918"/></proof>
                </goal>
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="4.68" steps="1520800"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.08" steps="1323315"/></proof>
                </goal>
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.1.1" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.67"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.2" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.2.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="1.85" steps="1244182"/></proof>
                </goal>
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.0.0.0.2.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.10" steps="1244197"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="4.06" steps="1520918"/></proof>
                </goal>
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="4.08" steps="1520800"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.03" steps="1323315"/></proof>
                </goal>
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.1.1" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.82"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.2" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.2.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="1.87" steps="1244182"/></proof>
                </goal>
                <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.1.1.0.0.2.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="1.85" steps="1244197"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="3.38" steps="1270530"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="neutral_seq_fredkin&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.39" steps="1025165"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="neutral_seq_fredkin&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.91"/></proof>
     </goal>
     <goal name="neutral_seq_fredkin&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="neutral_seq_fredkin&#39;vc.0.0.0.2.0" expl="rewrite premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="neutral_seq_fredkin&#39;vc.0.0.0.2.0.0" expl="rewrite premises" proved="true">
       <transf name="rewrite" proved="true" arg1="(--)&#39;spec">
        <goal name="neutral_seq_fredkin&#39;vc.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
         <goal name="neutral_seq_fredkin&#39;vc.0.0.0.2.0.0.0.0" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="4.00" steps="1423255"/></proof>
         </goal>
         <goal name="neutral_seq_fredkin&#39;vc.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="1.80"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="neutral_seq_fredkin&#39;vc.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.65" steps="1152846"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="neutral_seq_fredkin&#39;vc.0.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.46" steps="871603"/></proof>
     </goal>
     <goal name="neutral_seq_fredkin&#39;vc.0.0.0.4" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.46" steps="871603"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_seq_ry&#39;vc" expl="VC for neutral_seq_ry" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_seq_ry&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_neutral_circ">
   <goal name="neutral_seq_ry&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="neutral_seq_ry&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="neutral_seq_ry&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="3.42" steps="1182918"/></proof>
     </goal>
     <goal name="neutral_seq_ry&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="3.47" steps="1193832"/></proof>
     </goal>
     <goal name="neutral_seq_ry&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.59" steps="969229"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_seq_ry_minus&#39;vc" expl="VC for neutral_seq_ry_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_seq_ry_minus&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.47" steps="871804"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_comp_one&#39;vc" expl="VC for ang_exp_comp_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_comp_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.92"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_comp_one_minus&#39;vc" expl="VC for ang_exp_comp_one_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_comp_one_minus&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.58"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_seq_rz&#39;vc" expl="VC for neutral_seq_rz" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_seq_rz&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_neutral_circ">
   <goal name="neutral_seq_rz&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="neutral_seq_rz&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="neutral_seq_rz&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="case" proved="true" arg1="(x = qbit_zero())">
      <goal name="neutral_seq_rz&#39;vc.0.0.0.0.0" expl="true case (apply premises)" proved="true">
      <transf name="rewrite" proved="true" arg1="h">
       <goal name="neutral_seq_rz&#39;vc.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
       <transf name="rewrite" proved="true" arg1="rz_zero">
        <goal name="neutral_seq_rz&#39;vc.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_scal">
         <goal name="neutral_seq_rz&#39;vc.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="rz_zero">
          <goal name="neutral_seq_rz&#39;vc.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="scalar_assoc">
           <goal name="neutral_seq_rz&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="apply" proved="true" arg1="scalar_c_one_gen">
            <goal name="neutral_seq_rz&#39;vc.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="3.18" steps="1181107"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="neutral_seq_rz&#39;vc.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.44" steps="969013"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="neutral_seq_rz&#39;vc.0.0.0.0.1" expl="false case (apply premises)" proved="true">
      <transf name="replace" proved="true" arg1="x" arg2="(qbit_one())">
       <goal name="neutral_seq_rz&#39;vc.0.0.0.0.1.0" expl="false case (apply premises)" proved="true">
       <transf name="rewrite" proved="true" arg1="rz_one">
        <goal name="neutral_seq_rz&#39;vc.0.0.0.0.1.0.0" expl="false case (apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_scal">
         <goal name="neutral_seq_rz&#39;vc.0.0.0.0.1.0.0.0" expl="false case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="rz_one">
          <goal name="neutral_seq_rz&#39;vc.0.0.0.0.1.0.0.0.0" expl="false case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="scalar_assoc">
           <goal name="neutral_seq_rz&#39;vc.0.0.0.0.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
           <transf name="apply" proved="true" arg1="scalar_c_one_gen">
            <goal name="neutral_seq_rz&#39;vc.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="3.16" steps="1183063"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="neutral_seq_rz&#39;vc.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.49" steps="969483"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="neutral_seq_rz&#39;vc.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="1"><result status="valid" time="3.20" steps="1181872"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="neutral_seq_rz&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="3.25" steps="1194291"/></proof>
     </goal>
     <goal name="neutral_seq_rz&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.23" steps="969517"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_seq_rz_minus&#39;vc" expl="VC for neutral_seq_rz_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_seq_rz_minus&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.43" steps="872014"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_seq_rzp&#39;vc" expl="VC for neutral_seq_rzp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_seq_rzp&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_neutral_circ">
   <goal name="neutral_seq_rzp&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="neutral_seq_rzp&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="neutral_seq_rzp&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="case" proved="true" arg1="(x = qbit_zero())">
      <goal name="neutral_seq_rzp&#39;vc.0.0.0.0.0" expl="true case (apply premises)" proved="true">
      <transf name="rewrite" proved="true" arg1="h">
       <goal name="neutral_seq_rzp&#39;vc.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
       <proof prover="1"><result status="valid" time="2.21" steps="969231"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="neutral_seq_rzp&#39;vc.0.0.0.0.1" expl="false case (apply premises)" proved="true">
      <transf name="replace" proved="true" arg1="x" arg2="(qbit_one())">
       <goal name="neutral_seq_rzp&#39;vc.0.0.0.0.1.0" expl="false case (apply premises)" proved="true">
       <transf name="rewrite" proved="true" arg1="rzp_one">
        <goal name="neutral_seq_rzp&#39;vc.0.0.0.0.1.0.0" expl="false case (apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_scal">
         <goal name="neutral_seq_rzp&#39;vc.0.0.0.0.1.0.0.0" expl="false case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="rzp_one">
          <goal name="neutral_seq_rzp&#39;vc.0.0.0.0.1.0.0.0.0" expl="false case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="scalar_assoc">
           <goal name="neutral_seq_rzp&#39;vc.0.0.0.0.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
           <transf name="apply" proved="true" arg1="scalar_c_one_gen">
            <goal name="neutral_seq_rzp&#39;vc.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="int_to_ang_minus_up">
             <goal name="neutral_seq_rzp&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="3.28" steps="1198735"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="neutral_seq_rzp&#39;vc.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.20" steps="969591"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="neutral_seq_rzp&#39;vc.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="1"><result status="valid" time="3.19" steps="1182195"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="neutral_seq_rzp&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="3.19" steps="1194222"/></proof>
     </goal>
     <goal name="neutral_seq_rzp&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.26" steps="969625"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_seq_phase&#39;vc" expl="VC for neutral_seq_phase" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_seq_phase&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_neutral_circ">
   <goal name="neutral_seq_phase&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="neutral_seq_phase&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="neutral_seq_phase&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_phase">
      <goal name="neutral_seq_phase&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_phase">
       <goal name="neutral_seq_phase&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="scalar_assoc">
        <goal name="neutral_seq_phase&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="int_to_ang_minus_up">
         <goal name="neutral_seq_phase&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="3.22" steps="1199382"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="neutral_seq_phase&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="3.10" steps="1182307"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="neutral_seq_phase&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="3.03" steps="1182612"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="neutral_seq_phase&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="3.48" steps="1194316"/></proof>
     </goal>
     <goal name="neutral_seq_phase&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.45" steps="969679"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_seq_rx&#39;vc" expl="VC for neutral_seq_rx" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_seq_rx&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_neutral_circ">
   <goal name="neutral_seq_rx&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="neutral_seq_rx&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="neutral_seq_rx&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(rewrite_rx (-&#39; k))">
      <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(path_sem (rx k) x)" arg2="(path_sem (rewrite_rx k) x)">
       <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_comp_rev">
        <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="eliminate_definition" proved="true" >
         <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="rewrite_rx&#39;def">
          <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="rewrite_rx&#39;def">
           <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="((hadamard -- rz k) -- (hadamard -- hadamard) -- (rz (-&#39; k) -- hadamard))">
            <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="((hadamard -- rz k) -- (rz (-&#39; k) -- hadamard))">
             <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(hadamard -- (rz k -- rz (-&#39; k)) -- hadamard)">
              <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(hadamard  -- hadamard)">
               <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="3.07" steps="1090629"/></proof>
               </goal>
               <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="sequence_equiv">
                <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.04" steps="1092136"/></proof>
                </goal>
                <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.28" steps="932280"/></proof>
                </goal>
                <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.14" steps="1092035"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="3.25" steps="1092845"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="((hadamard -- rz k -- rz (-&#39; k) -- hadamard))">
               <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="3.20" steps="1093643"/></proof>
               </goal>
               <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="sequence_equiv">
                <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="3.13" steps="1093272"/></proof>
                </goal>
                <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.33" steps="932280"/></proof>
                </goal>
                <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1.1.2" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.77" steps="1092331"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="3.17" steps="1092880"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="sequence_equiv">
              <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.83" steps="1092154"/></proof>
              </goal>
              <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.04" steps="932307"/></proof>
              </goal>
              <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1.2" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.15" steps="1093218"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="3.13" steps="1093836"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="(hadamard -- rz k -- hadamard -- hadamard -- rz (-&#39; k) -- hadamard)">
             <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="(hadamard -- rz k -- hadamard -- (hadamard -- rz (-&#39; k)) -- hadamard)">
              <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.05" steps="1094434"/></proof>
              </goal>
              <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="sequence_equiv">
               <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="3.02" steps="1093984"/></proof>
               </goal>
               <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="2.29" steps="932280"/></proof>
               </goal>
               <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.1.2" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="3.05" steps="1093051"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="(hadamard -- rz k -- hadamard -- hadamard -- (rz (-&#39; k) -- hadamard))">
              <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.28" steps="1094674"/></proof>
              </goal>
              <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="sequence_equiv">
               <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.1.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="3.22" steps="1091624"/></proof>
               </goal>
               <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.1.1" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="2.25" steps="932307"/></proof>
               </goal>
               <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.1.2" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="3.09" steps="1092964"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="3.15" steps="1093564"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="replace" proved="true" arg1="(width (rewrite_rx k))" arg2="1">
         <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="3.46" steps="1182004"/></proof>
         </goal>
         <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
         <transf name="eliminate_definition" proved="true" >
          <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
          <transf name="rewrite" proved="true" arg1="rewrite_rx&#39;def">
           <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
           <proof prover="1"><result status="valid" time="3.11" steps="1091321"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <transf name="eliminate_definition" proved="true" >
         <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="rewrite_rx&#39;def">
          <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="rewrite_rx&#39;def">
           <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="3.14" steps="1092789"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="get_equiv_circuits">
        <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="3.45" steps="1179323"/></proof>
        </goal>
        <goal name="neutral_seq_rx&#39;vc.0.0.0.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="3.08" steps="1194312"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="neutral_seq_rx&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="3.07" steps="1179530"/></proof>
      </goal>
      <goal name="neutral_seq_rx&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="3.32" steps="1194648"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="neutral_seq_rx&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="3.09" steps="1194312"/></proof>
     </goal>
     <goal name="neutral_seq_rx&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.49" steps="969733"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_seq_rx_minus&#39;vc" expl="VC for neutral_seq_rx_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_seq_rx_minus&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.39" steps="872174"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_seq_yy&#39;vc" expl="VC for neutral_seq_yy" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_seq_yy&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_neutral_circ">
   <goal name="neutral_seq_yy&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="neutral_seq_yy&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="neutral_seq_yy&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="(path_sem yy (qbit_zero()) = im *.. (qbit_one()))">
      <goal name="neutral_seq_yy&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="rewrite" proved="true" arg1="yy_zero">
       <goal name="neutral_seq_yy&#39;vc.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="apply" proved="true" arg1="scalar_eq">
        <goal name="neutral_seq_yy&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="neutral_seq_yy&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="ket_zero_y&#39;spec1">
          <goal name="neutral_seq_yy&#39;vc.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="null_add_ket_l">
           <goal name="neutral_seq_yy&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="scalar_assoc">
            <goal name="neutral_seq_yy&#39;vc.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="scalar_c_one_gen">
             <goal name="neutral_seq_yy&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(ang_exp ((- 1) /./ incr_abs 1) -. ang_exp (1 /./ incr_abs 1))" arg2="(-. ttwo*.im)">
              <goal name="neutral_seq_yy&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(im *. ((-. ttwo) *. im))" arg2="ttwo">
               <goal name="neutral_seq_yy&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="4.27" steps="1421685"/></proof>
               </goal>
               <goal name="neutral_seq_yy&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="1"><result status="valid" time="4.52" steps="1463143"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="neutral_seq_yy&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="1"><result status="valid" time="4.61" steps="1467750"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="neutral_seq_yy&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="3.18" steps="1215900"/></proof>
           </goal>
           <goal name="neutral_seq_yy&#39;vc.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="3.15" steps="1215906"/></proof>
           </goal>
           <goal name="neutral_seq_yy&#39;vc.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="scalar_null_gen">
            <goal name="neutral_seq_yy&#39;vc.0.0.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="4.19" steps="1423767"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(path_sem yy (qbit_one()) = -. im *.. (qbit_zero()))">
       <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.0" expl="asserted formula" proved="true">
       <transf name="rewrite" proved="true" arg1="yy_one">
        <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
         <transf name="rewrite" proved="true" arg1="ket_one_y&#39;spec1">
          <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
          <transf name="rewrite" proved="true" arg1="add_ket_l_null">
           <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="rewrite" proved="true" arg1="scalar_assoc">
            <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
            <transf name="rewrite" proved="true" arg1="scalar_assoc">
             <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
             <transf name="apply" proved="true" arg1="scalar_eq_gen">
              <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="1.63" steps="1147863"/></proof>
              </goal>
              <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(ang_exp ((- 1) /./ incr_abs 1) -. ang_exp (1 /./ incr_abs 1))" arg2="(-. ttwo*.im)">
               <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="((-. im) *. ((-. ttwo) *. im))" arg2="(-. ttwo)">
                <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="mult_assoc1">
                 <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.63" steps="1423216"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                <proof prover="1"><result status="valid" time="4.13" steps="1464336"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
               <proof prover="1"><result status="valid" time="4.13" steps="1468088"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.70" steps="1215934"/></proof>
           </goal>
           <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="3.08" steps="1215928"/></proof>
           </goal>
           <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.0.0.0.0.3" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="scalar_null_gen">
            <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.0.0.0.0.3.0" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="4.20" steps="1424356"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.1" expl="apply premises" proved="true">
       <transf name="case" proved="true" arg1="(x = qbit_zero())">
        <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.1.0" expl="true case (apply premises)" proved="true">
        <transf name="rewrite" proved="true" arg1="h">
         <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.1.0.0" expl="true case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="h2">
          <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.1.0.0.0" expl="true case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_scal">
           <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.1.0.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="h1">
            <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="scalar_assoc">
             <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.1.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
             <proof prover="1"><result status="valid" time="2.98" steps="1192045"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="1.93" steps="931976"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.1.1" expl="false case (apply premises)" proved="true">
        <transf name="replace" proved="true" arg1="x" arg2="(qbit_one())">
         <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.1.1.0" expl="false case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="h1">
          <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.1.1.0.0" expl="false case (apply premises)" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_scal">
           <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.1.1.0.0.0" expl="false case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="h2">
            <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.1.1.0.0.0.0" expl="false case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="scalar_assoc">
             <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.1.1.0.0.0.0.0" expl="false case (apply premises)" proved="true">
             <transf name="apply" proved="true" arg1="scalar_c_one_gen">
              <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="3.39" steps="1225305"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.1.1.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.19" steps="931976"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="neutral_seq_yy&#39;vc.0.0.0.0.1.1.1.1" expl="equality hypothesis" proved="true">
         <proof prover="1"><result status="valid" time="2.46" steps="970796"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="neutral_seq_yy&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.35" steps="970445"/></proof>
     </goal>
     <goal name="neutral_seq_yy&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.42" steps="872192"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_seq_xx&#39;vc" expl="VC for neutral_seq_xx" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_seq_xx&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_neutral_circ">
   <goal name="neutral_seq_xx&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="neutral_seq_xx&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="neutral_seq_xx&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="2.37" steps="971534"/></proof>
     </goal>
     <goal name="neutral_seq_xx&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.45" steps="971255"/></proof>
     </goal>
     <goal name="neutral_seq_xx&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.30" steps="872207"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_seq_zz&#39;vc" expl="VC for neutral_seq_zz" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_seq_zz&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_neutral_circ">
   <goal name="neutral_seq_zz&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="neutral_seq_zz&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="neutral_seq_zz&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="2.01" steps="972499"/></proof>
     </goal>
     <goal name="neutral_seq_zz&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.13" steps="972220"/></proof>
     </goal>
     <goal name="neutral_seq_zz&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.24" steps="872222"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="To_qc" proved="true">
 <goal name="to_qc_place&#39;vc" expl="VC for to_qc_place" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_place&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(pre (to_qc c) = Place c1 k n)">
   <goal name="to_qc_place&#39;vc.0.0" expl="asserted formula" proved="true">
   <transf name="assert" proved="true" arg1="(correct c1)">
    <goal name="to_qc_place&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="2.97" steps="981407"/></proof>
    </goal>
    <goal name="to_qc_place&#39;vc.0.0.1" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="2.08" steps="805948"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="to_qc_place&#39;vc.0.1" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="to_qc_place&#39;vc.0.1.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(Place c1 k n)" arg2="(pre (place (to_qc c1) k n))" arg3="in" arg4="h">
     <goal name="to_qc_place&#39;vc.0.1.0.0" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="1.99" steps="805535"/></proof>
     </goal>
     <goal name="to_qc_place&#39;vc.0.1.0.1" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(Place c1 k n)" arg2="(Place (pre (to_qc c1)) k n)">
      <goal name="to_qc_place&#39;vc.0.1.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="to_qc_place&#39;vc.0.1.0.1.0.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="place&#39;spec6">
        <goal name="to_qc_place&#39;vc.0.1.0.1.0.0.0" expl="equality hypothesis" proved="true">
        <proof prover="1"><result status="valid" time="1.56" steps="978121"/></proof>
        </goal>
        <goal name="to_qc_place&#39;vc.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.56" steps="978123"/></proof>
        </goal>
        <goal name="to_qc_place&#39;vc.0.1.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="3.16" steps="1179092"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="to_qc_place&#39;vc.0.1.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="1"><result status="valid" time="2.36" steps="937861"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_cont&#39;vc" expl="VC for to_qc_cont" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_cont&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="to_qc_cont&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(pre (to_qc c) = Cont c1 co k n)">
    <goal name="to_qc_cont&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="1.68" steps="805873"/></proof>
    </goal>
    <goal name="to_qc_cont&#39;vc.0.0.1" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(Cont  c1 co k n)" arg2="(pre (cont (to_qc c1) co k n))" arg3="in" arg4="h">
     <goal name="to_qc_cont&#39;vc.0.0.1.0" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="1.65" steps="805924"/></proof>
     </goal>
     <goal name="to_qc_cont&#39;vc.0.0.1.1" expl="equality hypothesis" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="to_qc_cont&#39;vc.0.0.1.1.0" expl="equality hypothesis" proved="true">
      <transf name="case" proved="true" arg1="((k +&#39; width (to_qc c1)) &lt;=&#39; co)">
       <goal name="to_qc_cont&#39;vc.0.0.1.1.0.0" expl="true case (equality hypothesis)" proved="true">
       <transf name="rewrite" proved="true" arg1="cont&#39;spec6">
        <goal name="to_qc_cont&#39;vc.0.0.1.1.0.0.0" expl="true case (equality hypothesis)" proved="true">
        <proof prover="1"><result status="valid" time="2.94" steps="1180928"/></proof>
        </goal>
        <goal name="to_qc_cont&#39;vc.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.28" steps="978455"/></proof>
        </goal>
        <goal name="to_qc_cont&#39;vc.0.0.1.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.08" steps="1037848"/></proof>
        </goal>
        <goal name="to_qc_cont&#39;vc.0.0.1.1.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.26" steps="978446"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="to_qc_cont&#39;vc.0.0.1.1.0.1" expl="false case (equality hypothesis)" proved="true">
       <transf name="rewrite" proved="true" arg1="cont&#39;spec13">
        <goal name="to_qc_cont&#39;vc.0.0.1.1.0.1.0" expl="false case (equality hypothesis)" proved="true">
        <proof prover="1"><result status="valid" time="3.21" steps="1180840"/></proof>
        </goal>
        <goal name="to_qc_cont&#39;vc.0.0.1.1.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.39" steps="978459"/></proof>
        </goal>
        <goal name="to_qc_cont&#39;vc.0.0.1.1.0.1.2" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="3.66" steps="1179950"/></proof>
        </goal>
        <goal name="to_qc_cont&#39;vc.0.0.1.1.0.1.3" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="3.68" steps="1179941"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_seq&#39;vc" expl="VC for to_qc_seq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_seq&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="c" arg2="(pre (to_qc c))" arg3="in" arg4="Requires1">
   <goal name="to_qc_seq&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(Sequence c1 c2)" arg2="(pre (to_qc c1 -- to_qc c2))" arg3="in" arg4="Requires1">
    <goal name="to_qc_seq&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.90" steps="806510"/></proof>
    </goal>
    <goal name="to_qc_seq&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="to_qc_seq&#39;vc.0.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="(--)&#39;spec6">
      <goal name="to_qc_seq&#39;vc.0.0.1.0.0" expl="equality hypothesis" proved="true">
      <proof prover="1"><result status="valid" time="3.55" steps="1167461"/></proof>
      </goal>
      <goal name="to_qc_seq&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="3.53" steps="1165833"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="to_qc_seq&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="2.11" steps="806513"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_par&#39;vc" expl="VC for to_qc_par" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_par&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="c" arg2="(pre (to_qc c))" arg3="in" arg4="Requires">
   <goal name="to_qc_par&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(Parallel c1 c2)" arg2="(pre (to_qc c1 // to_qc c2))" arg3="in" arg4="Requires">
    <goal name="to_qc_par&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="2.10" steps="806651"/></proof>
    </goal>
    <goal name="to_qc_par&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="1"><result status="valid" time="3.10" steps="988348"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="to_qc_par&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="2.10" steps="806654"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_cnot&#39;vc" expl="VC for to_qc_cnot" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_cnot&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="c" arg2="(pre (to_qc c))" arg3="in" arg4="Requires">
   <goal name="to_qc_cnot&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(Cnot co t n)" arg2="(pre(cnot co t n))" arg3="in" arg4="Requires">
    <goal name="to_qc_cnot&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="2.16" steps="806953"/></proof>
    </goal>
    <goal name="to_qc_cnot&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="to_qc_cnot&#39;vc.0.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="cnot&#39;spec7">
      <goal name="to_qc_cnot&#39;vc.0.0.1.0.0" expl="equality hypothesis" proved="true">
      <proof prover="1"><result status="valid" time="1.61" steps="935350"/></proof>
      </goal>
      <goal name="to_qc_cnot&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.69" steps="935361"/></proof>
      </goal>
      <goal name="to_qc_cnot&#39;vc.0.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.64" steps="935361"/></proof>
      </goal>
      <goal name="to_qc_cnot&#39;vc.0.0.1.0.3" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.52" steps="935350"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="to_qc_cnot&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="2.92" steps="983816"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_swap&#39;vc" expl="VC for to_qc_swap" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_swap&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="c" arg2="(pre (to_qc c))" arg3="in" arg4="Requires">
   <goal name="to_qc_swap&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(Swap t1 t2 n)" arg2="(pre(swap t1 t2 n))" arg3="in" arg4="Requires">
    <goal name="to_qc_swap&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="2.02" steps="807224"/></proof>
    </goal>
    <goal name="to_qc_swap&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="to_qc_swap&#39;vc.0.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="swap&#39;spec8">
      <goal name="to_qc_swap&#39;vc.0.0.1.0.0" expl="equality hypothesis" proved="true">
      <proof prover="1"><result status="valid" time="1.52" steps="935613"/></proof>
      </goal>
      <goal name="to_qc_swap&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.53" steps="935624"/></proof>
      </goal>
      <goal name="to_qc_swap&#39;vc.0.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.57" steps="935624"/></proof>
      </goal>
      <goal name="to_qc_swap&#39;vc.0.0.1.0.3" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.56" steps="935613"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="to_qc_swap&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="2.95" steps="984119"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_toffoli&#39;vc" expl="VC for to_qc_toffoli" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_toffoli&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="c" arg2="(pre (to_qc c))" arg3="in" arg4="Requires">
   <goal name="to_qc_toffoli&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(Toffoli c1 c2 t n)" arg2="(pre(toffoli c1 c2 t n))" arg3="in" arg4="Requires">
    <goal name="to_qc_toffoli&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="2.02" steps="807652"/></proof>
    </goal>
    <goal name="to_qc_toffoli&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="to_qc_toffoli&#39;vc.0.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="toffoli&#39;spec7">
      <goal name="to_qc_toffoli&#39;vc.0.0.1.0.0" expl="equality hypothesis" proved="true">
      <proof prover="1"><result status="valid" time="1.48" steps="935930"/></proof>
      </goal>
      <goal name="to_qc_toffoli&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.51" steps="935941"/></proof>
      </goal>
      <goal name="to_qc_toffoli&#39;vc.0.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.47" steps="935941"/></proof>
      </goal>
      <goal name="to_qc_toffoli&#39;vc.0.0.1.0.3" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.49" steps="935941"/></proof>
      </goal>
      <goal name="to_qc_toffoli&#39;vc.0.0.1.0.4" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.49" steps="935939"/></proof>
      </goal>
      <goal name="to_qc_toffoli&#39;vc.0.0.1.0.5" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.49" steps="935930"/></proof>
      </goal>
      <goal name="to_qc_toffoli&#39;vc.0.0.1.0.6" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.52" steps="935939"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="to_qc_toffoli&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="3.01" steps="984532"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_fredkin&#39;vc" expl="VC for to_qc_fredkin" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_fredkin&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="c" arg2="(pre (to_qc c))" arg3="in" arg4="Requires">
   <goal name="to_qc_fredkin&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(Fredkin co t1 t2 n)" arg2="(pre(fredkin co t1 t2 n))" arg3="in" arg4="Requires">
    <goal name="to_qc_fredkin&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="2.06" steps="808033"/></proof>
    </goal>
    <goal name="to_qc_fredkin&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="to_qc_fredkin&#39;vc.0.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="fredkin&#39;spec8">
      <goal name="to_qc_fredkin&#39;vc.0.0.1.0.0" expl="equality hypothesis" proved="true">
      <proof prover="1"><result status="valid" time="1.49" steps="936310"/></proof>
      </goal>
      <goal name="to_qc_fredkin&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.47" steps="936321"/></proof>
      </goal>
      <goal name="to_qc_fredkin&#39;vc.0.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.47" steps="936321"/></proof>
      </goal>
      <goal name="to_qc_fredkin&#39;vc.0.0.1.0.3" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.46" steps="936321"/></proof>
      </goal>
      <goal name="to_qc_fredkin&#39;vc.0.0.1.0.4" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.47" steps="936310"/></proof>
      </goal>
      <goal name="to_qc_fredkin&#39;vc.0.0.1.0.5" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.47" steps="936310"/></proof>
      </goal>
      <goal name="to_qc_fredkin&#39;vc.0.0.1.0.6" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.43" steps="936310"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="to_qc_fredkin&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="2.60" steps="984903"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_place_&#39;vc" expl="VC for to_qc_place_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_place_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.94" steps="986102"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_cont_&#39;vc" expl="VC for to_qc_cont_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_cont_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.06" steps="988221"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_seq_&#39;vc" expl="VC for to_qc_seq_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_seq_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.54" steps="985500"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_par_&#39;vc" expl="VC for to_qc_par_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_par_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.52" steps="985617"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_cnot_&#39;vc" expl="VC for to_qc_cnot_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_cnot_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.43" steps="985035"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_swap_&#39;vc" expl="VC for to_qc_swap_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_swap_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.37" steps="985181"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_toffoli_&#39;vc" expl="VC for to_qc_toffoli_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_toffoli_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.36" steps="985496"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_fredkin_&#39;vc" expl="VC for to_qc_fredkin_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_fredkin_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.36" steps="985796"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_rx_&#39;vc" expl="VC for to_qc_rx_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_rx_&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(Rx k)" arg2="(pre (rx k))">
   <goal name="to_qc_rx_&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.49" steps="809880"/></proof>
   </goal>
   <goal name="to_qc_rx_&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="1.60" steps="809881"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_ry_&#39;vc" expl="VC for to_qc_ry_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_ry_&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(Ry k)" arg2="(pre(ry k))">
   <goal name="to_qc_ry_&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.65" steps="809915"/></proof>
   </goal>
   <goal name="to_qc_ry_&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="1.81" steps="809916"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_rz_&#39;vc" expl="VC for to_qc_rz_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_rz_&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(Rz k)" arg2="(pre(rz k))">
   <goal name="to_qc_rz_&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.69" steps="809950"/></proof>
   </goal>
   <goal name="to_qc_rz_&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="1.81" steps="809951"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="to_qc_rzp_&#39;vc" expl="VC for to_qc_rzp_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_qc_rzp_&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(Rzp k)" arg2="(pre(rzp k))">
   <goal name="to_qc_rzp_&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.65" steps="809985"/></proof>
   </goal>
   <goal name="to_qc_rzp_&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="1.46" steps="809986"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pre_place_&#39;vc" expl="VC for pre_place_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pre_place_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.15"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pre_cont_&#39;vc" expl="VC for pre_cont_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pre_cont_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.20"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pre_seq_&#39;vc" expl="VC for pre_seq_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pre_seq_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.18"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pre_par_&#39;vc" expl="VC for pre_par_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pre_par_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.77" steps="810569"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pre_cnot_&#39;vc" expl="VC for pre_cnot_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pre_cnot_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.21"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pre_swap_&#39;vc" expl="VC for pre_swap_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pre_swap_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.14"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pre_toffoli_&#39;vc" expl="VC for pre_toffoli_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pre_toffoli_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.16"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pre_fredkin_&#39;vc" expl="VC for pre_fredkin_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pre_fredkin_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.07"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pre_rx_&#39;vc" expl="VC for pre_rx_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pre_rx_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.59" steps="811577"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pre_ry_&#39;vc" expl="VC for pre_ry_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pre_ry_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.60" steps="811617"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pre_rz_&#39;vc" expl="VC for pre_rz_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pre_rz_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.62" steps="811657"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pre_rzp_&#39;vc" expl="VC for pre_rzp_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pre_rzp_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.64" steps="811697"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
