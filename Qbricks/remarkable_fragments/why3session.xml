<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="3" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="remarkable_fragments.mlw"/>
<theory name="Diag_circuits" proved="true">
 <goal name="seq_diag&#39;vc" expl="VC for seq_diag" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_diag&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.02" steps="761431"/></proof>
  </goal>
  <goal name="seq_diag&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.42" steps="843429"/></proof>
  </goal>
  <goal name="seq_diag&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.21" steps="843432"/></proof>
  </goal>
  <goal name="seq_diag&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.23" steps="843435"/></proof>
  </goal>
  <goal name="seq_diag&#39;vc.4" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures4">
   <goal name="seq_diag&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Requires">
    <goal name="seq_diag&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="seq_diag&#39;vc.4.0.0.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="3.19" steps="1080959"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="seq_diag&#39;vc.4.0.1" expl="rewrite premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="seq_diag&#39;vc.4.0.1.0" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="set_binary_l">
      <goal name="seq_diag&#39;vc.4.0.1.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="seq_diag&#39;vc.4.0.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="3.63" steps="1108338"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="seq_diag&#39;vc.4.0.2" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="2.32" steps="905425"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="seq_diag&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.29" steps="843560"/></proof>
  </goal>
  <goal name="seq_diag&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.54" steps="857381"/></proof>
  </goal>
  <goal name="seq_diag&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_diag&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="seq_diag&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="ang_add_eq">
     <goal name="seq_diag&#39;vc.7.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="1.38" steps="843585"/></proof>
     </goal>
     <goal name="seq_diag&#39;vc.7.0.0.1" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="seq_diag&#39;vc.7.0.0.1.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="ang_ind_invariant">
       <goal name="seq_diag&#39;vc.7.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="seq_diag&#39;vc.7.0.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.83" steps="1269755"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="seq_diag&#39;vc.7.0.0.1.0.1" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="seq_diag&#39;vc.7.0.0.1.0.1.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="seq_diag&#39;vc.7.0.0.1.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="1.90" steps="1054663"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_diag&#39;vc" expl="VC for cont_diag" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_diag&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.08" steps="762630"/></proof>
  </goal>
  <goal name="cont_diag&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.11" steps="762641"/></proof>
  </goal>
  <goal name="cont_diag&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.09" steps="762648"/></proof>
  </goal>
  <goal name="cont_diag&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="2.08" steps="821960"/></proof>
  </goal>
  <goal name="cont_diag&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.15" steps="763172"/></proof>
  </goal>
  <goal name="cont_diag&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.14" steps="763175"/></proof>
  </goal>
  <goal name="cont_diag&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.15" steps="763178"/></proof>
  </goal>
  <goal name="cont_diag&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.25" steps="776986"/></proof>
  </goal>
  <goal name="cont_diag&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="cont_diag&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="cont_diag&#39;vc.8.0.0" expl="VC for cont_diag" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cont_diag&#39;vc.8.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Requires1">
      <goal name="cont_diag&#39;vc.8.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="cont_diag&#39;vc.8.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="3"><result status="valid" time="1.40" steps="779364"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_diag&#39;vc.8.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="set_binary_l">
       <goal name="cont_diag&#39;vc.8.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="cont_diag&#39;vc.8.0.0.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.44" steps="1012919"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_diag&#39;vc.8.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="1.41" steps="779359"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_diag&#39;vc.8.0.0.1" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="1.14" steps="779335"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_diag&#39;vc.9" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="cont_diag&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
    <goal name="cont_diag&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
    <goal name="cont_diag&#39;vc.9.0.1" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(arc_cos_ang (pow_inv_sqrt_2 (range c)))" arg2="ang_zero">
     <goal name="cont_diag&#39;vc.9.0.1.0" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="(ang_zero -^ (y @ 0))" arg2="ang_zero">
      <goal name="cont_diag&#39;vc.9.0.1.0.0" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="1.95" steps="823302"/></proof>
      </goal>
      <goal name="cont_diag&#39;vc.9.0.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="3"><result status="valid" time="1.96" steps="823295"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_diag&#39;vc.9.0.1.1" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(pow_inv_sqrt_2 (range c))" arg2="c_one">
      <goal name="cont_diag&#39;vc.9.0.1.1.0" expl="equality hypothesis" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="cont_diag&#39;vc.9.0.1.1.0.0" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="cont_diag&#39;vc.9.0.1.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="arc_cos_ang&#39;spec">
         <goal name="cont_diag&#39;vc.9.0.1.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="5.47" steps="1230018"/></proof>
         </goal>
         <goal name="cont_diag&#39;vc.9.0.1.1.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="3.77" steps="1177435"/></proof>
         </goal>
         <goal name="cont_diag&#39;vc.9.0.1.1.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="2.73" steps="1019324"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_diag&#39;vc.9.0.1.1.1" expl="equality hypothesis" proved="true">
      <proof prover="3"><result status="valid" time="3.00" steps="1000794"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_diag&#39;vc" expl="VC for place_diag" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_diag&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.21" steps="763928"/></proof>
  </goal>
  <goal name="place_diag&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.02" steps="763945"/></proof>
  </goal>
  <goal name="place_diag&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.05" steps="764349"/></proof>
  </goal>
  <goal name="place_diag&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.02" steps="764352"/></proof>
  </goal>
  <goal name="place_diag&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.03" steps="764355"/></proof>
  </goal>
  <goal name="place_diag&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.25" steps="764358"/></proof>
  </goal>
  <goal name="place_diag&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.14" steps="778146"/></proof>
  </goal>
  <goal name="place_diag&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="place_diag&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="place_diag&#39;vc.7.0.0" expl="VC for place_diag" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="place_diag&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Requires">
      <goal name="place_diag&#39;vc.7.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="3"><result status="valid" time="3.17" steps="1010161"/></proof>
      </goal>
      <goal name="place_diag&#39;vc.7.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="set_binary_l">
       <goal name="place_diag&#39;vc.7.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="place_diag&#39;vc.7.0.0.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.18" steps="1014304"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="place_diag&#39;vc.7.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="1.23" steps="780514"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="place_diag&#39;vc.7.0.0.1" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="1.27" steps="780489"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place_diag&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="place_diag&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="seq_diag_right&#39;vc" expl="VC for seq_diag_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_diag_right&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.19" steps="764913"/></proof>
  </goal>
  <goal name="seq_diag_right&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.42" steps="846915"/></proof>
  </goal>
  <goal name="seq_diag_right&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.37" steps="846918"/></proof>
  </goal>
  <goal name="seq_diag_right&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.37" steps="846921"/></proof>
  </goal>
  <goal name="seq_diag_right&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.38" steps="846924"/></proof>
  </goal>
  <goal name="seq_diag_right&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.95" steps="907239"/></proof>
  </goal>
  <goal name="seq_diag_right&#39;vc.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_diag_right&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="seq_diag_right&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Requires">
     <goal name="seq_diag_right&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="seq_diag_right&#39;vc.6.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="2.32" steps="908062"/></proof>
     </goal>
     <goal name="seq_diag_right&#39;vc.6.0.0.2" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="set_binary_l">
      <goal name="seq_diag_right&#39;vc.6.0.0.2.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
          <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="4.01" steps="1289568"/></proof>
          </goal>
          <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="3.97" steps="1289565"/></proof>
          </goal>
          <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="2.95" steps="1120522"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.1.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
          <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.1.0.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="4.05" steps="1289568"/></proof>
          </goal>
          <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.1.0.1" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="3.98" steps="1289565"/></proof>
          </goal>
          <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.1.0.2" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="2.87" steps="1120522"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="seq_diag_right&#39;vc.7" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures6">
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="seq_diag_left&#39;vc" expl="VC for seq_diag_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_diag_left&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.18" steps="766064"/></proof>
  </goal>
  <goal name="seq_diag_left&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.36" steps="848018"/></proof>
  </goal>
  <goal name="seq_diag_left&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.38" steps="848021"/></proof>
  </goal>
  <goal name="seq_diag_left&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.36" steps="848024"/></proof>
  </goal>
  <goal name="seq_diag_left&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.41" steps="848027"/></proof>
  </goal>
  <goal name="seq_diag_left&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="2.34" steps="908124"/></proof>
  </goal>
  <goal name="seq_diag_left&#39;vc.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_diag_left&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="seq_diag_left&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="basis_ket_invariant">
     <goal name="seq_diag_left&#39;vc.6.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="seq_diag_left&#39;vc.6.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="3.45" steps="1087799"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="seq_diag_left&#39;vc.6.0.0.1" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="seq_diag_left&#39;vc.6.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.51" steps="862026"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="seq_diag_left&#39;vc.6.0.0.2" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="2.40" steps="908922"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="seq_diag_left&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_diag_left&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="seq_diag_left&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="ang_add_eq">
     <goal name="seq_diag_left&#39;vc.7.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="seq_diag_left&#39;vc.7.0.0.1" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="ang_ind_invariant">
      <goal name="seq_diag_left&#39;vc.7.0.0.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="seq_diag_left&#39;vc.7.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="seq_diag_left&#39;vc.7.0.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.56" steps="1087821"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="seq_diag_left&#39;vc.7.0.0.1.1" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="seq_diag_left&#39;vc.7.0.0.1.1.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="1.58" steps="862142"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_diag&#39;vc" expl="VC for path_sem_diag" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_diag&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="get_path_sem_basis">
   <goal name="path_sem_diag&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_basis&#39;def">
    <goal name="path_sem_diag&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
     <goal name="path_sem_diag&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
      <goal name="path_sem_diag&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="scalar_eq_gen">
        <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="bv_to_ket_eq">
         <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="1.21" steps="767021"/></proof>
          </goal>
          <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="3.65" steps="1194119"/></proof>
              </goal>
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="1.74" steps="978658"/></proof>
              </goal>
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="1.58" steps="963498"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="3.59" steps="1194119"/></proof>
              </goal>
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="1.71" steps="978658"/></proof>
              </goal>
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="1.64" steps="963498"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="3.14" steps="1003630"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
            <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="Requires">
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.07" steps="1002326"/></proof>
               </goal>
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.19" steps="767048"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="3.60" steps="1194139"/></proof>
                </goal>
                <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.71" steps="978683"/></proof>
                </goal>
                <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.42" steps="963523"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="3.71" steps="1194139"/></proof>
                </goal>
                <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.80" steps="978683"/></proof>
                </goal>
                <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.41" steps="963523"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.2.0" expl="rewrite premises" proved="true">
             <proof prover="3"><result status="valid" time="1.05" steps="767039"/></proof>
             </goal>
             <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.2.1" expl="rewrite premises" proved="true">
             <proof prover="3"><result status="valid" time="1.07" steps="767050"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="4.03" steps="1298106"/></proof>
               </goal>
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.94" steps="1072081"/></proof>
               </goal>
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.82" steps="1056915"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="4.04" steps="1298106"/></proof>
               </goal>
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="2.00" steps="1072081"/></proof>
               </goal>
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.78" steps="1056915"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
           <proof prover="3"><result status="valid" time="3.61" steps="1093695"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.64" steps="1036096"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_diag&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="3.11" steps="1003630"/></proof>
      </goal>
      <goal name="path_sem_diag&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="1.19" steps="767014"/></proof>
      </goal>
      <goal name="path_sem_diag&#39;vc.0.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="scalar_ket_l">
         <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
          <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="make_bv_length">
           <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.71" steps="1194119"/></proof>
               </goal>
               <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.72" steps="978658"/></proof>
               </goal>
               <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.68" steps="963498"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.78" steps="1194119"/></proof>
               </goal>
               <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.79" steps="978658"/></proof>
               </goal>
               <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.63" steps="963498"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="3.17" steps="1003630"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_diag&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="2.93" steps="1005107"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_diag&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="2.15" steps="826089"/></proof>
    </goal>
    <goal name="path_sem_diag&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="2.19" steps="826073"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_diag&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="2.16" steps="826089"/></proof>
   </goal>
   <goal name="path_sem_diag&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="2.16" steps="826073"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_diag_basis&#39;vc" expl="VC for path_sem_diag_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_diag_basis&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.04" steps="767272"/></proof>
  </goal>
  <goal name="path_sem_diag_basis&#39;vc.1" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="ket_to_bv_length">
   <goal name="path_sem_diag_basis&#39;vc.1.0" expl="apply premises" proved="true">
   <proof prover="3"><result status="valid" time="1.36" steps="844725"/></proof>
   </goal>
   <goal name="path_sem_diag_basis&#39;vc.1.1" expl="apply premises" proved="true">
   <proof prover="3"><result status="valid" time="2.42" steps="903654"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_diag_basis&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.19" steps="844736"/></proof>
  </goal>
  <goal name="path_sem_diag_basis&#39;vc.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="3.14" steps="1091683"/></proof>
  </goal>
  <goal name="path_sem_diag_basis&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="2.24" steps="926926"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_diag_apply&#39;vc" expl="VC for path_sem_diag_apply" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_diag_apply&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_diag_basis">
   <goal name="path_sem_diag_apply&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="scalar_eq_gen">
    <goal name="path_sem_diag_apply&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="1.12" steps="767609"/></proof>
    </goal>
    <goal name="path_sem_diag_apply&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(ang_exp (ang_ind d (getbv (ket_to_bv (bv_to_ket x))) (fun (i:int) -&gt; i)))" arg2="(ang_exp (ang_ind d (getbv (ket_to_bv (bv_to_ket x))) (getbv (make_bv (fun i-&gt; i) 0))))">
     <goal name="path_sem_diag_apply&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <proof prover="4"><result status="valid" time="1.47"/></proof>
     </goal>
     <goal name="path_sem_diag_apply&#39;vc.0.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="3"><result status="valid" time="3.44" steps="1036061"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_diag_apply&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="2.19" steps="826475"/></proof>
   </goal>
   <goal name="path_sem_diag_apply&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="2.15" steps="826459"/></proof>
   </goal>
   <goal name="path_sem_diag_apply&#39;vc.0.3" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="1.22" steps="767611"/></proof>
   </goal>
   <goal name="path_sem_diag_apply&#39;vc.0.4" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="1.88" steps="825385"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Flat_mute_circuits" proved="true">
 <goal name="seq_flat_mute&#39;vc" expl="VC for seq_flat_mute" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_flat_mute&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.18" steps="761297"/></proof>
  </goal>
  <goal name="seq_flat_mute&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.34" steps="843295"/></proof>
  </goal>
  <goal name="seq_flat_mute&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.34" steps="843298"/></proof>
  </goal>
  <goal name="seq_flat_mute&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.30" steps="843301"/></proof>
  </goal>
  <goal name="seq_flat_mute&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.35" steps="843304"/></proof>
  </goal>
  <goal name="seq_flat_mute&#39;vc.5" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures5">
   <goal name="seq_flat_mute&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="seq_flat_mute&#39;vc.5.0.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="2.57" steps="937809"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="seq_flat_mute&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.35" steps="843462"/></proof>
  </goal>
  <goal name="seq_flat_mute&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.45" steps="857283"/></proof>
  </goal>
  <goal name="seq_flat_mute&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures7">
   <goal name="seq_flat_mute&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
    <goal name="seq_flat_mute&#39;vc.8.0.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="2.57" steps="905868"/></proof>
    </goal>
    <goal name="seq_flat_mute&#39;vc.8.0.1" expl="rewrite premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="seq_flat_mute&#39;vc.8.0.1.0" expl="rewrite premises" proved="true">
     <transf name="rewrite" proved="true" arg1="Requires">
      <goal name="seq_flat_mute&#39;vc.8.0.1.0.0" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="2.51" steps="905861"/></proof>
      </goal>
      <goal name="seq_flat_mute&#39;vc.8.0.1.0.1" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="set_binary_l">
       <goal name="seq_flat_mute&#39;vc.8.0.1.0.1.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="seq_flat_mute&#39;vc.8.0.1.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.58" steps="1108401"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_flat_mute&#39;vc" expl="VC for cont_flat_mute" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_flat_mute&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_flat_mute&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="1.17" steps="762354"/></proof>
   </goal>
   <goal name="cont_flat_mute&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="1.17" steps="762365"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_flat_mute&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_flat_mute&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.99" steps="762363"/></proof>
   </goal>
   <goal name="cont_flat_mute&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="1.18" steps="762363"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_flat_mute&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_flat_mute&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.99" steps="762372"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_flat_mute&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.96" steps="821924"/></proof>
  </goal>
  <goal name="cont_flat_mute&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.17" steps="762905"/></proof>
  </goal>
  <goal name="cont_flat_mute&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.18" steps="762908"/></proof>
  </goal>
  <goal name="cont_flat_mute&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.18" steps="762911"/></proof>
  </goal>
  <goal name="cont_flat_mute&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.35" steps="776719"/></proof>
  </goal>
  <goal name="cont_flat_mute&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="cont_flat_mute&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="3.20" steps="1003597"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_flat_mute&#39;vc.9" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="cont_flat_mute&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
    <goal name="cont_flat_mute&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Requires1">
     <goal name="cont_flat_mute&#39;vc.9.0.0.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="2.42" steps="846257"/></proof>
     </goal>
     <goal name="cont_flat_mute&#39;vc.9.0.0.1" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="set_binary_l">
      <goal name="cont_flat_mute&#39;vc.9.0.0.1.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="cont_flat_mute&#39;vc.9.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_flat_mute&#39;vc.9.0.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.23" steps="1001182"/></proof>
        </goal>
        <goal name="cont_flat_mute&#39;vc.9.0.0.1.0.0.1" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.28" steps="1001192"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="cont_flat_mute&#39;vc.9.0.1" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(arc_cos_ang (pow_inv_sqrt_2 (range c)))" arg2="ang_zero">
     <goal name="cont_flat_mute&#39;vc.9.0.1.0" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="(ang_zero -^ (y @ 0))" arg2="ang_zero">
      <goal name="cont_flat_mute&#39;vc.9.0.1.0.0" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="2.20" steps="823332"/></proof>
      </goal>
      <goal name="cont_flat_mute&#39;vc.9.0.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="3"><result status="valid" time="2.23" steps="823325"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_flat_mute&#39;vc.9.0.1.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="goal_comm">
      <goal name="cont_flat_mute&#39;vc.9.0.1.1.0" expl="apply premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="cont_flat_mute&#39;vc.9.0.1.1.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="arc_cos_ang&#39;spec">
        <goal name="cont_flat_mute&#39;vc.9.0.1.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="5.22" steps="1232222"/></proof>
        </goal>
        <goal name="cont_flat_mute&#39;vc.9.0.1.1.0.0.1" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.78" steps="1177340"/></proof>
        </goal>
        <goal name="cont_flat_mute&#39;vc.9.0.1.1.0.0.2" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.80" steps="1179352"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_flat_mute_lemma&#39;vc" expl="VC for cont_flat_mute_lemma" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_flat_mute_lemma&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="1.31"/></proof>
  </goal>
  <goal name="cont_flat_mute_lemma&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="cont_flat_mute_lemma&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(cont c co t n)" arg2="(cont_flat_mute c co t n)">
    <goal name="cont_flat_mute_lemma&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="( (t +&#39; width c) &lt;=&#39; co)">
     <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="apply" proved="true" arg1="cont_flat_mute&#39;spec1">
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.80" steps="954951"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.42" steps="954949"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.61" steps="954942"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.0.3" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="2.72" steps="1015538"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.0.4" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.72" steps="954942"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.0.5" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.62" steps="954942"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.0.6" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.60" steps="954951"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.1" expl="false case (postcondition)" proved="true">
     <transf name="apply" proved="true" arg1="cont_flat_mute&#39;spec8">
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.62" steps="954956"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.60" steps="954954"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.1.2" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.41" steps="954947"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.1.3" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="2.38" steps="1015549"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.1.4" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.65" steps="954947"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.1.5" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.57" steps="954947"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.1.6" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.74" steps="954956"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="cont_flat_mute_lemma&#39;vc.1.0.1" expl="equality hypothesis" proved="true">
    <proof prover="3"><result status="valid" time="3.76" steps="1179818"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_flat_mute_lemma&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="cont_flat_mute_lemma&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(cont c co t n)" arg2="(cont_flat_mute c co t n)">
    <goal name="cont_flat_mute_lemma&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="3.83" steps="1180817"/></proof>
    </goal>
    <goal name="cont_flat_mute_lemma&#39;vc.2.0.1" expl="equality hypothesis" proved="true">
    <proof prover="3"><result status="valid" time="3.70" steps="1180115"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="seq_flat_mute_right&#39;vc" expl="VC for seq_flat_mute_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_flat_mute_right&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.27" steps="765019"/></proof>
  </goal>
  <goal name="seq_flat_mute_right&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.32" steps="846973"/></proof>
  </goal>
  <goal name="seq_flat_mute_right&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.39" steps="846976"/></proof>
  </goal>
  <goal name="seq_flat_mute_right&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.40" steps="846979"/></proof>
  </goal>
  <goal name="seq_flat_mute_right&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.39" steps="846982"/></proof>
  </goal>
  <goal name="seq_flat_mute_right&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="2.40" steps="907013"/></proof>
  </goal>
  <goal name="seq_flat_mute_right&#39;vc.6" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures6">
  </transf>
  </goal>
  <goal name="seq_flat_mute_right&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_flat_mute_right&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
    <goal name="seq_flat_mute_right&#39;vc.7.0.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="1.38" steps="847246"/></proof>
    </goal>
    <goal name="seq_flat_mute_right&#39;vc.7.0.1" expl="rewrite premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="seq_flat_mute_right&#39;vc.7.0.1.0" expl="rewrite premises" proved="true">
     <transf name="rewrite" proved="true" arg1="Requires">
      <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.0" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="2.40" steps="908368"/></proof>
      </goal>
      <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="set_binary_l">
       <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
           <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="3.99" steps="1286515"/></proof>
            </goal>
            <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="4.14" steps="1286398"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="3.84" steps="1286297"/></proof>
            </goal>
            <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="4.13" steps="1286421"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0.2" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0.2.0" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="1.74" steps="1052680"/></proof>
            </goal>
            <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0.2.1" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="2.92" steps="1120670"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.1" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="3.55" steps="1086373"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="seq_flat_mute_left&#39;vc" expl="VC for seq_flat_mute_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_flat_mute_left&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.19" steps="766009"/></proof>
  </goal>
  <goal name="seq_flat_mute_left&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.41" steps="847915"/></proof>
  </goal>
  <goal name="seq_flat_mute_left&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.37" steps="847918"/></proof>
  </goal>
  <goal name="seq_flat_mute_left&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.36" steps="847921"/></proof>
  </goal>
  <goal name="seq_flat_mute_left&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.39" steps="847924"/></proof>
  </goal>
  <goal name="seq_flat_mute_left&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="2.35" steps="907860"/></proof>
  </goal>
  <goal name="seq_flat_mute_left&#39;vc.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_flat_mute_left&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="seq_flat_mute_left&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="basis_ket_invariant">
     <goal name="seq_flat_mute_left&#39;vc.6.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="1.39" steps="847985"/></proof>
     </goal>
     <goal name="seq_flat_mute_left&#39;vc.6.0.0.1" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="2.55" steps="909272"/></proof>
     </goal>
     <goal name="seq_flat_mute_left&#39;vc.6.0.0.2" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="2.43" steps="908688"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="seq_flat_mute_left&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_flat_mute_left&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_zero_add">
    <goal name="seq_flat_mute_left&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="seq_flat_mute_left&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="2.72" steps="941209"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="seq_flat_mute_left&#39;vc.7.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="2.41" steps="931884"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_flat_mute&#39;vc" expl="VC for path_sem_flat_mute" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_flat_mute&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="get_path_sem_basis">
   <goal name="path_sem_flat_mute&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_basis&#39;def">
    <goal name="path_sem_flat_mute&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
     <goal name="path_sem_flat_mute&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
      <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
        <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="apply" proved="true" arg1="bv_to_ket_eq">
          <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length">
            <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="1.72" steps="962352"/></proof>
            </goal>
            <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="3.81" steps="1192892"/></proof>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.80" steps="977544"/></proof>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.57" steps="962388"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="3.72" steps="1192892"/></proof>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.74" steps="977544"/></proof>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.0.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.70" steps="962388"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="3"><result status="valid" time="3.87" steps="1192174"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.92" steps="1193781"/></proof>
               </goal>
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.81" steps="977548"/></proof>
               </goal>
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.69" steps="962388"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.81" steps="1193781"/></proof>
               </goal>
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.84" steps="977548"/></proof>
               </goal>
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.64" steps="962388"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="3"><result status="valid" time="3.75" steps="1192174"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
            <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket_invariant">
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                 <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="1.65" steps="962377"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.77" steps="977529"/></proof>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.74" steps="962388"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                  <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="3"><result status="valid" time="3.83" steps="1192838"/></proof>
                  </goal>
                  <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="3"><result status="valid" time="1.80" steps="977569"/></proof>
                  </goal>
                  <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                  <proof prover="3"><result status="valid" time="1.69" steps="962413"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                  <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                  <proof prover="3"><result status="valid" time="3.78" steps="1192838"/></proof>
                  </goal>
                  <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                  <proof prover="3"><result status="valid" time="1.77" steps="977569"/></proof>
                  </goal>
                  <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                  <proof prover="3"><result status="valid" time="1.66" steps="962413"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="3"><result status="valid" time="1.59" steps="962388"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                 <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="3.69" steps="1193474"/></proof>
                 </goal>
                 <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="1.75" steps="977573"/></proof>
                 </goal>
                 <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="1.65" steps="962413"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.1.0" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.1.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                 <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="3.86" steps="1193474"/></proof>
                 </goal>
                 <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.1.0.0.1" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="1.87" steps="977573"/></proof>
                 </goal>
                 <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.1.0.0.2" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="1.63" steps="962413"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="3"><result status="valid" time="1.64" steps="962388"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="4.11" steps="1298375"/></proof>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.88" steps="1070827"/></proof>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.81" steps="1055661"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.1.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="4.11" steps="1298375"/></proof>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.1.0.0.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.99" steps="1070827"/></proof>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.1.0.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.78" steps="1055661"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
            <proof prover="3"><result status="valid" time="4.12" steps="1297511"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Requires">
         <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="3"><result status="valid" time="2.04" steps="848535"/></proof>
         </goal>
         <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="3"><result status="valid" time="3.20" steps="1003103"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="3.29" steps="1003724"/></proof>
      </goal>
      <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="1.24" steps="766987"/></proof>
      </goal>
      <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="scalar_ket_l">
         <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
          <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="make_bv_length">
           <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.83" steps="1193781"/></proof>
               </goal>
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.80" steps="977548"/></proof>
               </goal>
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.66" steps="962388"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.78" steps="1193781"/></proof>
               </goal>
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.77" steps="977548"/></proof>
               </goal>
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.61" steps="962388"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="3.23" steps="1003724"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_flat_mute&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="3.20" steps="1005210"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_flat_mute&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="2.20" steps="825969"/></proof>
    </goal>
    <goal name="path_sem_flat_mute&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="2.21" steps="825953"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_flat_mute&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="2.28" steps="825969"/></proof>
   </goal>
   <goal name="path_sem_flat_mute&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="1.96" steps="825953"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_flat_mute_gen&#39;vc" expl="VC for path_sem_flat_mute_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_flat_mute_gen&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="3.14" steps="1089109"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_flat_mute_ket&#39;vc" expl="VC for path_sem_flat_mute_ket" proved="true">
 <proof prover="3"><result status="valid" time="3.21" steps="1089143"/></proof>
 </goal>
 <goal name="path_sem_flat_mute_bv&#39;vc" expl="VC for path_sem_flat_mute_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_flat_mute_bv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_flat_mute">
   <goal name="path_sem_flat_mute_bv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="bv_to_ket_eq">
    <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="make_bv_length">
     <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="1.28" steps="767988"/></proof>
     </goal>
     <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.0" expl="rewrite premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="3.87" steps="1197799"/></proof>
         </goal>
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="1.82" steps="978538"/></proof>
         </goal>
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="1.67" steps="963382"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.1" expl="rewrite premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="3.74" steps="1197799"/></proof>
         </goal>
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="1.78" steps="978538"/></proof>
         </goal>
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="1.37" steps="963382"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="3.23" steps="1008033"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
      <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
       <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_in_goal" proved="true" >
        <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.23" steps="1008861"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
           <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="3.70" steps="1197753"/></proof>
           </goal>
           <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="1.77" steps="978563"/></proof>
           </goal>
           <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="1.60" steps="963407"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
           <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="3.83" steps="1197753"/></proof>
           </goal>
           <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="1.82" steps="978563"/></proof>
           </goal>
           <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="1.63" steps="963407"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="1.11" steps="768015"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
          <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="4.11" steps="1298189"/></proof>
          </goal>
          <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="2.03" steps="1071687"/></proof>
          </goal>
          <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="1.88" steps="1056521"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
          <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="4.19" steps="1298189"/></proof>
          </goal>
          <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="1.99" steps="1071687"/></proof>
          </goal>
          <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="1.89" steps="1056521"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="3.44" steps="1094093"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_flat_mute_bv&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="1.03" steps="767981"/></proof>
   </goal>
   <goal name="path_sem_flat_mute_bv&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="1.07" steps="767981"/></proof>
   </goal>
   <goal name="path_sem_flat_mute_bv&#39;vc.0.3" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="1.89" steps="825630"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Flat_circuits" proved="true">
 <goal name="seq_flat&#39;vc" expl="VC for seq_flat" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_flat&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.20" steps="747256"/></proof>
  </goal>
  <goal name="seq_flat&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.21" steps="843167"/></proof>
  </goal>
  <goal name="seq_flat&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.41" steps="843170"/></proof>
  </goal>
  <goal name="seq_flat&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.35" steps="843173"/></proof>
  </goal>
  <goal name="seq_flat&#39;vc.4" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures4">
   <goal name="seq_flat&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="seq_flat&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="basis_ket_invariant">
     <goal name="seq_flat&#39;vc.4.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="1.39" steps="843212"/></proof>
     </goal>
     <goal name="seq_flat&#39;vc.4.0.0.1" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="1.54" steps="857206"/></proof>
     </goal>
     <goal name="seq_flat&#39;vc.4.0.0.2" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="2.36" steps="905283"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="seq_flat&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.40" steps="843331"/></proof>
  </goal>
  <goal name="seq_flat&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.53" steps="857152"/></proof>
  </goal>
  <goal name="seq_flat&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_flat&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="seq_flat&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="ang_add_eq">
     <goal name="seq_flat&#39;vc.7.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="1.41" steps="843356"/></proof>
     </goal>
     <goal name="seq_flat&#39;vc.7.0.0.1" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="2.32" steps="937727"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_flat&#39;vc" expl="VC for cont_flat" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_flat&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_flat&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="1.21" steps="748185"/></proof>
   </goal>
   <goal name="cont_flat&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="1.15" steps="748196"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_flat&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_flat&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="1.23" steps="748194"/></proof>
   </goal>
   <goal name="cont_flat&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="1.02" steps="748194"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_flat&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_flat&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="1.19" steps="748203"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_flat&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.21" steps="762612"/></proof>
  </goal>
  <goal name="cont_flat&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="2.02" steps="821731"/></proof>
  </goal>
  <goal name="cont_flat&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.20" steps="762652"/></proof>
  </goal>
  <goal name="cont_flat&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.21" steps="762655"/></proof>
  </goal>
  <goal name="cont_flat&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures5">
   <goal name="cont_flat&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="3.16" steps="1003447"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_flat&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures5">
   <goal name="cont_flat&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="cont_flat&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
     <goal name="cont_flat&#39;vc.8.0.0.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="3.12" steps="1000699"/></proof>
     </goal>
     <goal name="cont_flat&#39;vc.8.0.0.1" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="(arc_cos_ang (pow_inv_sqrt_2 (range c)))" arg2="ang_zero">
      <goal name="cont_flat&#39;vc.8.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="case" proved="true" arg1="(even (y 0))">
       <goal name="cont_flat&#39;vc.8.0.0.1.0.0" expl="true case (rewrite premises)" proved="true">
       <proof prover="3"><result status="valid" time="2.20" steps="846561"/></proof>
       </goal>
       <goal name="cont_flat&#39;vc.8.0.0.1.0.1" expl="false case (rewrite premises)" proved="true">
       <proof prover="3"><result status="valid" time="2.22" steps="846160"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_flat&#39;vc.8.0.0.1.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(pow_inv_sqrt_2 (range c))" arg2="c_one">
       <goal name="cont_flat&#39;vc.8.0.0.1.1.0" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="cont_flat&#39;vc.8.0.0.1.1.0.0" expl="apply premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="cont_flat&#39;vc.8.0.0.1.1.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="arc_cos_ang&#39;spec">
          <goal name="cont_flat&#39;vc.8.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="5.20" steps="1228571"/></proof>
          </goal>
          <goal name="cont_flat&#39;vc.8.0.0.1.1.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="3.60" steps="1175959"/></proof>
          </goal>
          <goal name="cont_flat&#39;vc.8.0.0.1.1.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="2.89" steps="1017827"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="cont_flat&#39;vc.8.0.0.1.1.1" expl="equality hypothesis" proved="true">
       <proof prover="3"><result status="valid" time="3.17" steps="1000807"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="seq_flat_right&#39;vc" expl="VC for seq_flat_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_flat_right&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.19" steps="749617"/></proof>
  </goal>
  <goal name="seq_flat_right&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.25" steps="845304"/></proof>
  </goal>
  <goal name="seq_flat_right&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.40" steps="845307"/></proof>
  </goal>
  <goal name="seq_flat_right&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.39" steps="845310"/></proof>
  </goal>
  <goal name="seq_flat_right&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.37" steps="845313"/></proof>
  </goal>
  <goal name="seq_flat_right&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="2.37" steps="906005"/></proof>
  </goal>
  <goal name="seq_flat_right&#39;vc.6" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures6">
  </transf>
  </goal>
  <goal name="seq_flat_right&#39;vc.7" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures6">
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="seq_flat_left&#39;vc" expl="VC for seq_flat_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_flat_left&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.20" steps="750642"/></proof>
  </goal>
  <goal name="seq_flat_left&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.25" steps="846171"/></proof>
  </goal>
  <goal name="seq_flat_left&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.36" steps="846174"/></proof>
  </goal>
  <goal name="seq_flat_left&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.38" steps="846177"/></proof>
  </goal>
  <goal name="seq_flat_left&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.38" steps="846180"/></proof>
  </goal>
  <goal name="seq_flat_left&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="2.36" steps="906881"/></proof>
  </goal>
  <goal name="seq_flat_left&#39;vc.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_flat_left&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="seq_flat_left&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="basis_ket_invariant">
     <goal name="seq_flat_left&#39;vc.6.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="1.38" steps="846230"/></proof>
     </goal>
     <goal name="seq_flat_left&#39;vc.6.0.0.1" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="2.43" steps="908290"/></proof>
     </goal>
     <goal name="seq_flat_left&#39;vc.6.0.0.2" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="2.32" steps="907697"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="seq_flat_left&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_flat_left&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="ang_add_eq">
    <goal name="seq_flat_left&#39;vc.7.0.0" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="1.38" steps="846360"/></proof>
    </goal>
    <goal name="seq_flat_left&#39;vc.7.0.1" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="2.74" steps="940189"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_flat&#39;vc" expl="VC for path_sem_flat" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_flat&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="get_path_sem_basis">
   <goal name="path_sem_flat&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_basis&#39;def">
    <goal name="path_sem_flat&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
     <goal name="path_sem_flat&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
      <goal name="path_sem_flat&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="scalar_eq_gen">
        <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="bv_to_ket_eq">
         <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="1.22" steps="751449"/></proof>
           </goal>
           <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.72" steps="1184362"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.74" steps="969772"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.46" steps="940447"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.75" steps="1184362"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.84" steps="969772"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.52" steps="940447"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="3"><result status="valid" time="3.12" steps="987495"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="3.65" steps="1184411"/></proof>
              </goal>
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="1.71" steps="969776"/></proof>
              </goal>
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="1.57" steps="940447"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="3.75" steps="1184411"/></proof>
              </goal>
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="1.77" steps="969776"/></proof>
              </goal>
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.1.0.0.2" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="1.58" steps="940447"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="3.11" steps="987495"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
            <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket_invariant">
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="2.30" steps="847526"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.32" steps="779077"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.30" steps="751485"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                 <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="3.83" steps="1184537"/></proof>
                 </goal>
                 <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="1.79" steps="969797"/></proof>
                 </goal>
                 <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="1.59" steps="940472"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                 <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="3.74" steps="1184537"/></proof>
                 </goal>
                 <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="1.77" steps="969797"/></proof>
                 </goal>
                 <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="1.58" steps="940472"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="3"><result status="valid" time="1.17" steps="751485"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="3.72" steps="1185342"/></proof>
                </goal>
                <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.78" steps="969801"/></proof>
                </goal>
                <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.62" steps="940472"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="3.71" steps="1185342"/></proof>
                </goal>
                <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.79" steps="969801"/></proof>
                </goal>
                <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.56" steps="940472"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="3"><result status="valid" time="1.22" steps="751485"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="4.17" steps="1288187"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="2.00" steps="1062949"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.85" steps="1047793"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.1.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="4.06" steps="1288187"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.96" steps="1062949"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.1.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.78" steps="1047793"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
           <proof prover="3"><result status="valid" time="3.47" steps="1092068"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.51" steps="1035141"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_flat&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="3.03" steps="987495"/></proof>
      </goal>
      <goal name="path_sem_flat&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="1.22" steps="751451"/></proof>
      </goal>
      <goal name="path_sem_flat&#39;vc.0.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="scalar_ket_l">
         <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
          <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="make_bv_length">
           <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.57" steps="1184411"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.71" steps="969776"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.51" steps="940447"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.63" steps="1184411"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.78" steps="969776"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.55" steps="940447"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="3.22" steps="987495"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_flat&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="3.16" steps="988852"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_flat&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="1.75" steps="807373"/></proof>
    </goal>
    <goal name="path_sem_flat&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="2.00" steps="807357"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_flat&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="2.04" steps="807373"/></proof>
   </goal>
   <goal name="path_sem_flat&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="2.05" steps="807357"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_flat_gen&#39;vc" expl="VC for path_sem_flat_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_flat_gen&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="2.36" steps="908366"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
