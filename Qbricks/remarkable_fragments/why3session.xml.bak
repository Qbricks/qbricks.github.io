<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="3" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="remarkable_fragments.mlw"/>
<theory name="Diag_circuits" proved="true">
 <goal name="seq_diag&#39;vc" expl="VC for seq_diag" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_diag&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.02" steps="761264"/></proof>
  </goal>
  <goal name="seq_diag&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.42" steps="843262"/></proof>
  </goal>
  <goal name="seq_diag&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.21" steps="843265"/></proof>
  </goal>
  <goal name="seq_diag&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.23" steps="843268"/></proof>
  </goal>
  <goal name="seq_diag&#39;vc.4" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures4">
   <goal name="seq_diag&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Requires">
    <goal name="seq_diag&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="seq_diag&#39;vc.4.0.0.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="3.19" steps="1080863"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="seq_diag&#39;vc.4.0.1" expl="rewrite premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="seq_diag&#39;vc.4.0.1.0" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="set_binary_l">
      <goal name="seq_diag&#39;vc.4.0.1.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="seq_diag&#39;vc.4.0.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="3.63" steps="1108200"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="seq_diag&#39;vc.4.0.2" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="2.32" steps="905304"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="seq_diag&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.29" steps="843393"/></proof>
  </goal>
  <goal name="seq_diag&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.54" steps="857214"/></proof>
  </goal>
  <goal name="seq_diag&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_diag&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="seq_diag&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="ang_add_eq">
     <goal name="seq_diag&#39;vc.7.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="1.38" steps="843418"/></proof>
     </goal>
     <goal name="seq_diag&#39;vc.7.0.0.1" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="seq_diag&#39;vc.7.0.0.1.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="ang_ind_invariant">
       <goal name="seq_diag&#39;vc.7.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="seq_diag&#39;vc.7.0.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.83" steps="1269512"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="seq_diag&#39;vc.7.0.0.1.0.1" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="seq_diag&#39;vc.7.0.0.1.0.1.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="seq_diag&#39;vc.7.0.0.1.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="1.90" steps="1054501"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_diag&#39;vc" expl="VC for cont_diag" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_diag&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.08" steps="762463"/></proof>
  </goal>
  <goal name="cont_diag&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.11" steps="762474"/></proof>
  </goal>
  <goal name="cont_diag&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.09" steps="762481"/></proof>
  </goal>
  <goal name="cont_diag&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="2.08" steps="821857"/></proof>
  </goal>
  <goal name="cont_diag&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.15" steps="763005"/></proof>
  </goal>
  <goal name="cont_diag&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.14" steps="763008"/></proof>
  </goal>
  <goal name="cont_diag&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.15" steps="763011"/></proof>
  </goal>
  <goal name="cont_diag&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.25" steps="776819"/></proof>
  </goal>
  <goal name="cont_diag&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="cont_diag&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="cont_diag&#39;vc.8.0.0" expl="VC for cont_diag" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cont_diag&#39;vc.8.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Requires1">
      <goal name="cont_diag&#39;vc.8.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="cont_diag&#39;vc.8.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="3"><result status="valid" time="1.14" steps="779200"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_diag&#39;vc.8.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="set_binary_l">
       <goal name="cont_diag&#39;vc.8.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="cont_diag&#39;vc.8.0.0.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="2.94" steps="1012783"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_diag&#39;vc.8.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="1.14" steps="779195"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_diag&#39;vc.8.0.0.1" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="1.14" steps="779171"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_diag&#39;vc.9" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="cont_diag&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
    <goal name="cont_diag&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
    <goal name="cont_diag&#39;vc.9.0.1" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(arc_cos_ang (pow_inv_sqrt_2 (range c)))" arg2="ang_zero">
     <goal name="cont_diag&#39;vc.9.0.1.0" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="(ang_zero -^ (y @ 0))" arg2="ang_zero">
      <goal name="cont_diag&#39;vc.9.0.1.0.0" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="1.95" steps="823178"/></proof>
      </goal>
      <goal name="cont_diag&#39;vc.9.0.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="3"><result status="valid" time="1.96" steps="823179"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_diag&#39;vc.9.0.1.1" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(pow_inv_sqrt_2 (range c))" arg2="c_one">
      <goal name="cont_diag&#39;vc.9.0.1.1.0" expl="equality hypothesis" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="cont_diag&#39;vc.9.0.1.1.0.0" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="cont_diag&#39;vc.9.0.1.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="arc_cos_ang&#39;spec">
         <goal name="cont_diag&#39;vc.9.0.1.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="4.52" steps="1229886"/></proof>
         </goal>
         <goal name="cont_diag&#39;vc.9.0.1.1.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="3.30" steps="1177331"/></proof>
         </goal>
         <goal name="cont_diag&#39;vc.9.0.1.1.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="2.73" steps="1019209"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_diag&#39;vc.9.0.1.1.1" expl="equality hypothesis" proved="true">
      <proof prover="3"><result status="valid" time="3.00" steps="1000720"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="place_diag&#39;vc" expl="VC for place_diag" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="place_diag&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.99" steps="763761"/></proof>
  </goal>
  <goal name="place_diag&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.02" steps="763778"/></proof>
  </goal>
  <goal name="place_diag&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.05" steps="764182"/></proof>
  </goal>
  <goal name="place_diag&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.02" steps="764185"/></proof>
  </goal>
  <goal name="place_diag&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.03" steps="764188"/></proof>
  </goal>
  <goal name="place_diag&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.04" steps="764191"/></proof>
  </goal>
  <goal name="place_diag&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.14" steps="777979"/></proof>
  </goal>
  <goal name="place_diag&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="place_diag&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="place_diag&#39;vc.7.0.0" expl="VC for place_diag" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="place_diag&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Requires">
      <goal name="place_diag&#39;vc.7.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="3"><result status="valid" time="3.17" steps="1009975"/></proof>
      </goal>
      <goal name="place_diag&#39;vc.7.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="set_binary_l">
       <goal name="place_diag&#39;vc.7.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="place_diag&#39;vc.7.0.0.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.18" steps="1014151"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="place_diag&#39;vc.7.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="1.23" steps="780350"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="place_diag&#39;vc.7.0.0.1" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="1.27" steps="780325"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="place_diag&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="place_diag&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="seq_diag_right&#39;vc" expl="VC for seq_diag_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_diag_right&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.19" steps="764746"/></proof>
  </goal>
  <goal name="seq_diag_right&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.13" steps="846748"/></proof>
  </goal>
  <goal name="seq_diag_right&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.37" steps="846751"/></proof>
  </goal>
  <goal name="seq_diag_right&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.37" steps="846754"/></proof>
  </goal>
  <goal name="seq_diag_right&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.38" steps="846757"/></proof>
  </goal>
  <goal name="seq_diag_right&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.95" steps="907106"/></proof>
  </goal>
  <goal name="seq_diag_right&#39;vc.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_diag_right&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="seq_diag_right&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Requires">
     <goal name="seq_diag_right&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="seq_diag_right&#39;vc.6.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="2.32" steps="907929"/></proof>
     </goal>
     <goal name="seq_diag_right&#39;vc.6.0.0.2" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="set_binary_l">
      <goal name="seq_diag_right&#39;vc.6.0.0.2.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
          <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="4.01" steps="1289315"/></proof>
          </goal>
          <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="3.97" steps="1289200"/></proof>
          </goal>
          <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="2.95" steps="1120416"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.1.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
          <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.1.0.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="4.05" steps="1289315"/></proof>
          </goal>
          <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.1.0.1" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="3.98" steps="1289200"/></proof>
          </goal>
          <goal name="seq_diag_right&#39;vc.6.0.0.2.0.0.1.0.2" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="2.87" steps="1120416"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="seq_diag_right&#39;vc.7" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures6">
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="seq_diag_left&#39;vc" expl="VC for seq_diag_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_diag_left&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.18" steps="765897"/></proof>
  </goal>
  <goal name="seq_diag_left&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.36" steps="847851"/></proof>
  </goal>
  <goal name="seq_diag_left&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.38" steps="847854"/></proof>
  </goal>
  <goal name="seq_diag_left&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.36" steps="847857"/></proof>
  </goal>
  <goal name="seq_diag_left&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.41" steps="847860"/></proof>
  </goal>
  <goal name="seq_diag_left&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="2.34" steps="907996"/></proof>
  </goal>
  <goal name="seq_diag_left&#39;vc.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_diag_left&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="seq_diag_left&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="basis_ket_invariant">
     <goal name="seq_diag_left&#39;vc.6.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="seq_diag_left&#39;vc.6.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="3.45" steps="1087652"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="seq_diag_left&#39;vc.6.0.0.1" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="seq_diag_left&#39;vc.6.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.51" steps="861859"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="seq_diag_left&#39;vc.6.0.0.2" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="2.40" steps="908803"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="seq_diag_left&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_diag_left&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="seq_diag_left&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="ang_add_eq">
     <goal name="seq_diag_left&#39;vc.7.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="seq_diag_left&#39;vc.7.0.0.1" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="ang_ind_invariant">
      <goal name="seq_diag_left&#39;vc.7.0.0.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="seq_diag_left&#39;vc.7.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="seq_diag_left&#39;vc.7.0.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.56" steps="1087681"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="seq_diag_left&#39;vc.7.0.0.1.1" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="seq_diag_left&#39;vc.7.0.0.1.1.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="1.58" steps="861975"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_diag&#39;vc" expl="VC for path_sem_diag" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_diag&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="get_path_sem_basis">
   <goal name="path_sem_diag&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_basis&#39;def">
    <goal name="path_sem_diag&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
     <goal name="path_sem_diag&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
      <goal name="path_sem_diag&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="scalar_eq_gen">
        <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="bv_to_ket_eq">
         <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="1.21" steps="766854"/></proof>
          </goal>
          <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="3.65" steps="1194095"/></proof>
              </goal>
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="1.74" steps="978491"/></proof>
              </goal>
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="1.58" steps="963331"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="3.59" steps="1194095"/></proof>
              </goal>
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="1.71" steps="978491"/></proof>
              </goal>
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="1.64" steps="963331"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="3.14" steps="1003508"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
            <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="Requires">
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.07" steps="1002197"/></proof>
               </goal>
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.19" steps="766881"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="3.60" steps="1194095"/></proof>
                </goal>
                <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.71" steps="978516"/></proof>
                </goal>
                <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.42" steps="963356"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="3.27" steps="1194095"/></proof>
                </goal>
                <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.54" steps="978516"/></proof>
                </goal>
                <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.41" steps="963356"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.2.0" expl="rewrite premises" proved="true">
             <proof prover="3"><result status="valid" time="1.05" steps="766872"/></proof>
             </goal>
             <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.0.2.1" expl="rewrite premises" proved="true">
             <proof prover="3"><result status="valid" time="1.07" steps="766883"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="4.03" steps="1298067"/></proof>
               </goal>
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.94" steps="1071924"/></proof>
               </goal>
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.82" steps="1056758"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="4.04" steps="1298067"/></proof>
               </goal>
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="2.00" steps="1071924"/></proof>
               </goal>
               <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.52" steps="1056758"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
           <proof prover="3"><result status="valid" time="3.61" steps="1093557"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_diag&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.64" steps="1035959"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_diag&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="3.11" steps="1003508"/></proof>
      </goal>
      <goal name="path_sem_diag&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="1.19" steps="766847"/></proof>
      </goal>
      <goal name="path_sem_diag&#39;vc.0.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="scalar_ket_l">
         <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
          <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="make_bv_length">
           <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.71" steps="1194095"/></proof>
               </goal>
               <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.72" steps="978491"/></proof>
               </goal>
               <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.68" steps="963331"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.78" steps="1194095"/></proof>
               </goal>
               <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.79" steps="978491"/></proof>
               </goal>
               <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.63" steps="963331"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_diag&#39;vc.0.0.0.0.3.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="3.17" steps="1003508"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_diag&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="2.93" steps="1004986"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_diag&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="2.15" steps="825965"/></proof>
    </goal>
    <goal name="path_sem_diag&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="2.19" steps="825949"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_diag&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="2.16" steps="825965"/></proof>
   </goal>
   <goal name="path_sem_diag&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="2.16" steps="825949"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_diag_basis&#39;vc" expl="VC for path_sem_diag_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_diag_basis&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.04" steps="767105"/></proof>
  </goal>
  <goal name="path_sem_diag_basis&#39;vc.1" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="ket_to_bv_length">
   <goal name="path_sem_diag_basis&#39;vc.1.0" expl="apply premises" proved="true">
   <proof prover="3"><result status="valid" time="1.36" steps="844558"/></proof>
   </goal>
   <goal name="path_sem_diag_basis&#39;vc.1.1" expl="apply premises" proved="true">
   <proof prover="3"><result status="valid" time="2.09" steps="903486"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="path_sem_diag_basis&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.19" steps="844569"/></proof>
  </goal>
  <goal name="path_sem_diag_basis&#39;vc.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="3.14" steps="1091511"/></proof>
  </goal>
  <goal name="path_sem_diag_basis&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="2.24" steps="926718"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_diag_apply&#39;vc" expl="VC for path_sem_diag_apply" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_diag_apply&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_diag_basis">
   <goal name="path_sem_diag_apply&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="scalar_eq_gen">
    <goal name="path_sem_diag_apply&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="1.12" steps="767442"/></proof>
    </goal>
    <goal name="path_sem_diag_apply&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(ang_exp (ang_ind d (getbv (ket_to_bv (bv_to_ket x))) (fun (i:int) -&gt; i)))" arg2="(ang_exp (ang_ind d (getbv (ket_to_bv (bv_to_ket x))) (getbv (make_bv (fun i-&gt; i) 0))))">
     <goal name="path_sem_diag_apply&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="timeout" time="5.00" steps="1064514"/></proof>
     <proof prover="4"><result status="valid" time="1.11"/></proof>
     </goal>
     <goal name="path_sem_diag_apply&#39;vc.0.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="3"><result status="valid" time="3.44" steps="1035940"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_diag_apply&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="2.19" steps="826370"/></proof>
   </goal>
   <goal name="path_sem_diag_apply&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="2.15" steps="826354"/></proof>
   </goal>
   <goal name="path_sem_diag_apply&#39;vc.0.3" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="1.22" steps="767444"/></proof>
   </goal>
   <goal name="path_sem_diag_apply&#39;vc.0.4" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="1.55" steps="825269"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Flat_mute_circuits" proved="true">
 <goal name="seq_flat_mute&#39;vc" expl="VC for seq_flat_mute" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_flat_mute&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.90" steps="761130"/></proof>
  </goal>
  <goal name="seq_flat_mute&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.12" steps="843128"/></proof>
  </goal>
  <goal name="seq_flat_mute&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.34" steps="843131"/></proof>
  </goal>
  <goal name="seq_flat_mute&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.08" steps="843134"/></proof>
  </goal>
  <goal name="seq_flat_mute&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.35" steps="843137"/></proof>
  </goal>
  <goal name="seq_flat_mute&#39;vc.5" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures5">
   <goal name="seq_flat_mute&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="seq_flat_mute&#39;vc.5.0.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="2.12" steps="937690"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="seq_flat_mute&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.11" steps="843295"/></proof>
  </goal>
  <goal name="seq_flat_mute&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.45" steps="857116"/></proof>
  </goal>
  <goal name="seq_flat_mute&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures7">
   <goal name="seq_flat_mute&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
    <goal name="seq_flat_mute&#39;vc.8.0.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="1.93" steps="905743"/></proof>
    </goal>
    <goal name="seq_flat_mute&#39;vc.8.0.1" expl="rewrite premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="seq_flat_mute&#39;vc.8.0.1.0" expl="rewrite premises" proved="true">
     <transf name="rewrite" proved="true" arg1="Requires">
      <goal name="seq_flat_mute&#39;vc.8.0.1.0.0" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="1.94" steps="905736"/></proof>
      </goal>
      <goal name="seq_flat_mute&#39;vc.8.0.1.0.1" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="set_binary_l">
       <goal name="seq_flat_mute&#39;vc.8.0.1.0.1.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="seq_flat_mute&#39;vc.8.0.1.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="2.92" steps="1108255"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_flat_mute&#39;vc" expl="VC for cont_flat_mute" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_flat_mute&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_flat_mute&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="1.17" steps="762187"/></proof>
   </goal>
   <goal name="cont_flat_mute&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.96" steps="762198"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_flat_mute&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_flat_mute&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.99" steps="762196"/></proof>
   </goal>
   <goal name="cont_flat_mute&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.98" steps="762196"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_flat_mute&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_flat_mute&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.99" steps="762205"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_flat_mute&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.65" steps="821798"/></proof>
  </goal>
  <goal name="cont_flat_mute&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.17" steps="762738"/></proof>
  </goal>
  <goal name="cont_flat_mute&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.97" steps="762741"/></proof>
  </goal>
  <goal name="cont_flat_mute&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.95" steps="762744"/></proof>
  </goal>
  <goal name="cont_flat_mute&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.06" steps="776552"/></proof>
  </goal>
  <goal name="cont_flat_mute&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="cont_flat_mute&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="2.51" steps="1003508"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_flat_mute&#39;vc.9" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="cont_flat_mute&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
    <goal name="cont_flat_mute&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Requires1">
     <goal name="cont_flat_mute&#39;vc.9.0.0.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="1.84" steps="846140"/></proof>
     </goal>
     <goal name="cont_flat_mute&#39;vc.9.0.0.1" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="set_binary_l">
      <goal name="cont_flat_mute&#39;vc.9.0.0.1.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="cont_flat_mute&#39;vc.9.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="cont_flat_mute&#39;vc.9.0.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="2.56" steps="1001109"/></proof>
        </goal>
        <goal name="cont_flat_mute&#39;vc.9.0.0.1.0.0.1" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="2.58" steps="1001108"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="cont_flat_mute&#39;vc.9.0.1" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(arc_cos_ang (pow_inv_sqrt_2 (range c)))" arg2="ang_zero">
     <goal name="cont_flat_mute&#39;vc.9.0.1.0" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="(ang_zero -^ (y @ 0))" arg2="ang_zero">
      <goal name="cont_flat_mute&#39;vc.9.0.1.0.0" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="1.72" steps="823214"/></proof>
      </goal>
      <goal name="cont_flat_mute&#39;vc.9.0.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="3"><result status="valid" time="1.78" steps="823208"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_flat_mute&#39;vc.9.0.1.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="goal_comm">
      <goal name="cont_flat_mute&#39;vc.9.0.1.1.0" expl="apply premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="cont_flat_mute&#39;vc.9.0.1.1.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="arc_cos_ang&#39;spec">
        <goal name="cont_flat_mute&#39;vc.9.0.1.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="4.17" steps="1232060"/></proof>
        </goal>
        <goal name="cont_flat_mute&#39;vc.9.0.1.1.0.0.1" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.00" steps="1177188"/></proof>
        </goal>
        <goal name="cont_flat_mute&#39;vc.9.0.1.1.0.0.2" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.03" steps="1179344"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_flat_mute_lemma&#39;vc" expl="VC for cont_flat_mute_lemma" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_flat_mute_lemma&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="3"><result status="timeout" time="5.00" steps="1055769"/></proof>
  <proof prover="4"><result status="valid" time="1.31"/></proof>
  </goal>
  <goal name="cont_flat_mute_lemma&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="cont_flat_mute_lemma&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(cont c co t n)" arg2="(cont_flat_mute c co t n)">
    <goal name="cont_flat_mute_lemma&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="( (t +&#39; width c) &lt;=&#39; co)">
     <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="apply" proved="true" arg1="cont_flat_mute&#39;spec1">
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.44" steps="954784"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.42" steps="954782"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.33" steps="954775"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.0.3" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="2.09" steps="1015370"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.0.4" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.39" steps="954775"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.0.5" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.28" steps="954775"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.0.6" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.32" steps="954784"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.1" expl="false case (postcondition)" proved="true">
     <transf name="apply" proved="true" arg1="cont_flat_mute&#39;spec8">
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.30" steps="954789"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.32" steps="954787"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.1.2" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.41" steps="954780"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.1.3" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="2.38" steps="1015381"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.1.4" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.65" steps="954780"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.1.5" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.57" steps="954780"/></proof>
      </goal>
      <goal name="cont_flat_mute_lemma&#39;vc.1.0.0.1.6" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="1.41" steps="954789"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="cont_flat_mute_lemma&#39;vc.1.0.1" expl="equality hypothesis" proved="true">
    <proof prover="3"><result status="valid" time="3.08" steps="1179774"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_flat_mute_lemma&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="cont_flat_mute_lemma&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(cont c co t n)" arg2="(cont_flat_mute c co t n)">
    <goal name="cont_flat_mute_lemma&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="3.06" steps="1180658"/></proof>
    </goal>
    <goal name="cont_flat_mute_lemma&#39;vc.2.0.1" expl="equality hypothesis" proved="true">
    <proof prover="3"><result status="valid" time="3.01" steps="1180083"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="seq_flat_mute_right&#39;vc" expl="VC for seq_flat_mute_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_flat_mute_right&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.96" steps="764852"/></proof>
  </goal>
  <goal name="seq_flat_mute_right&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.32" steps="846806"/></proof>
  </goal>
  <goal name="seq_flat_mute_right&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.12" steps="846809"/></proof>
  </goal>
  <goal name="seq_flat_mute_right&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.40" steps="846812"/></proof>
  </goal>
  <goal name="seq_flat_mute_right&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.14" steps="846815"/></proof>
  </goal>
  <goal name="seq_flat_mute_right&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.93" steps="906881"/></proof>
  </goal>
  <goal name="seq_flat_mute_right&#39;vc.6" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures6">
  </transf>
  </goal>
  <goal name="seq_flat_mute_right&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_flat_mute_right&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
    <goal name="seq_flat_mute_right&#39;vc.7.0.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="1.11" steps="847079"/></proof>
    </goal>
    <goal name="seq_flat_mute_right&#39;vc.7.0.1" expl="rewrite premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="seq_flat_mute_right&#39;vc.7.0.1.0" expl="rewrite premises" proved="true">
     <transf name="rewrite" proved="true" arg1="Requires">
      <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.0" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="2.40" steps="908232"/></proof>
      </goal>
      <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="set_binary_l">
       <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
           <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="3.37" steps="1286470"/></proof>
            </goal>
            <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="3.41" steps="1286244"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="3.84" steps="1286148"/></proof>
            </goal>
            <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="3.34" steps="1286371"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0.2" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0.2.0" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="1.74" steps="1052523"/></proof>
            </goal>
            <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.0.0.2.1" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="2.92" steps="1120511"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="seq_flat_mute_right&#39;vc.7.0.1.0.1.0.0.1" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="3.55" steps="1086214"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="seq_flat_mute_left&#39;vc" expl="VC for seq_flat_mute_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_flat_mute_left&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.19" steps="765842"/></proof>
  </goal>
  <goal name="seq_flat_mute_left&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.41" steps="847748"/></proof>
  </goal>
  <goal name="seq_flat_mute_left&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.37" steps="847751"/></proof>
  </goal>
  <goal name="seq_flat_mute_left&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.36" steps="847754"/></proof>
  </goal>
  <goal name="seq_flat_mute_left&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.39" steps="847757"/></proof>
  </goal>
  <goal name="seq_flat_mute_left&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.97" steps="907727"/></proof>
  </goal>
  <goal name="seq_flat_mute_left&#39;vc.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_flat_mute_left&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="seq_flat_mute_left&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="basis_ket_invariant">
     <goal name="seq_flat_mute_left&#39;vc.6.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="1.14" steps="847818"/></proof>
     </goal>
     <goal name="seq_flat_mute_left&#39;vc.6.0.0.1" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="2.08" steps="909149"/></proof>
     </goal>
     <goal name="seq_flat_mute_left&#39;vc.6.0.0.2" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="1.93" steps="908555"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="seq_flat_mute_left&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_flat_mute_left&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_zero_add">
    <goal name="seq_flat_mute_left&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="seq_flat_mute_left&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="2.38" steps="941076"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="seq_flat_mute_left&#39;vc.7.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="2.41" steps="931751"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_flat_mute&#39;vc" expl="VC for path_sem_flat_mute" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_flat_mute&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="get_path_sem_basis">
   <goal name="path_sem_flat_mute&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_basis&#39;def">
    <goal name="path_sem_flat_mute&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
     <goal name="path_sem_flat_mute&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
      <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
        <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="apply" proved="true" arg1="bv_to_ket_eq">
          <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length">
            <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="1.28" steps="962185"/></proof>
            </goal>
            <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="2.99" steps="1192630"/></proof>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.37" steps="977377"/></proof>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.30" steps="962221"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="3.05" steps="1192630"/></proof>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.74" steps="977377"/></proof>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.1.1.0.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.31" steps="962221"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="3"><result status="valid" time="3.08" steps="1192021"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="2.98" steps="1193516"/></proof>
               </goal>
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.36" steps="977381"/></proof>
               </goal>
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.27" steps="962221"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.01" steps="1193516"/></proof>
               </goal>
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.43" steps="977381"/></proof>
               </goal>
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.29" steps="962221"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="3"><result status="valid" time="3.05" steps="1192021"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
            <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket_invariant">
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                 <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="1.30" steps="962210"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.43" steps="977362"/></proof>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.28" steps="962221"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                  <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="3"><result status="valid" time="3.04" steps="1192680"/></proof>
                  </goal>
                  <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="3"><result status="valid" time="1.42" steps="977402"/></proof>
                  </goal>
                  <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                  <proof prover="3"><result status="valid" time="1.30" steps="962246"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                  <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                  <proof prover="3"><result status="valid" time="2.99" steps="1192680"/></proof>
                  </goal>
                  <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                  <proof prover="3"><result status="valid" time="1.41" steps="977402"/></proof>
                  </goal>
                  <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                  <proof prover="3"><result status="valid" time="1.27" steps="962246"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="3"><result status="valid" time="1.29" steps="962221"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                 <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="2.97" steps="1193541"/></proof>
                 </goal>
                 <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="1.43" steps="977406"/></proof>
                 </goal>
                 <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="1.30" steps="962246"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.1.0" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.1.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                 <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="3.04" steps="1193541"/></proof>
                 </goal>
                 <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.1.0.0.1" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="1.44" steps="977406"/></proof>
                 </goal>
                 <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.1.1.0.0.2" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="1.28" steps="962246"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="3"><result status="valid" time="1.64" steps="962221"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="3.52" steps="1298227"/></proof>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.88" steps="1070670"/></proof>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.81" steps="1055504"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.1.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="3.56" steps="1298227"/></proof>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.1.0.0.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.99" steps="1070670"/></proof>
                </goal>
                <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.1.1.0.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.78" steps="1055504"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
            <proof prover="3"><result status="valid" time="4.12" steps="1297536"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Requires">
         <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="3"><result status="valid" time="2.04" steps="848410"/></proof>
         </goal>
         <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="3"><result status="valid" time="3.20" steps="1002988"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="3.29" steps="1003590"/></proof>
      </goal>
      <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="1.24" steps="766820"/></proof>
      </goal>
      <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="scalar_ket_l">
         <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
          <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="make_bv_length">
           <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.83" steps="1193516"/></proof>
               </goal>
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.80" steps="977381"/></proof>
               </goal>
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.66" steps="962221"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.78" steps="1193516"/></proof>
               </goal>
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.77" steps="977381"/></proof>
               </goal>
               <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.61" steps="962221"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_flat_mute&#39;vc.0.0.0.0.3.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="3.23" steps="1003590"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_flat_mute&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="3.20" steps="1005127"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_flat_mute&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="2.20" steps="825844"/></proof>
    </goal>
    <goal name="path_sem_flat_mute&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="2.21" steps="825828"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_flat_mute&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="1.92" steps="825844"/></proof>
   </goal>
   <goal name="path_sem_flat_mute&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="1.96" steps="825828"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_flat_mute_gen&#39;vc" expl="VC for path_sem_flat_mute_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_flat_mute_gen&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="3.14" steps="1088951"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_flat_mute_ket&#39;vc" expl="VC for path_sem_flat_mute_ket" proved="true">
 <proof prover="3"><result status="valid" time="3.21" steps="1088988"/></proof>
 </goal>
 <goal name="path_sem_flat_mute_bv&#39;vc" expl="VC for path_sem_flat_mute_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_flat_mute_bv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_flat_mute">
   <goal name="path_sem_flat_mute_bv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="bv_to_ket_eq">
    <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="make_bv_length">
     <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="1.05" steps="767821"/></proof>
     </goal>
     <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.0" expl="rewrite premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="3.17" steps="1197385"/></proof>
         </goal>
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="1.82" steps="978371"/></proof>
         </goal>
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="1.29" steps="963215"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.1" expl="rewrite premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="3.16" steps="1197385"/></proof>
         </goal>
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="1.51" steps="978371"/></proof>
         </goal>
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="1.37" steps="963215"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_flat_mute_bv&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="2.84" steps="1007921"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
      <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
       <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_in_goal" proved="true" >
        <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.23" steps="1008736"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
           <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="3.70" steps="1197686"/></proof>
           </goal>
           <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="1.77" steps="978396"/></proof>
           </goal>
           <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="1.60" steps="963240"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
           <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="3.83" steps="1197686"/></proof>
           </goal>
           <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="1.82" steps="978396"/></proof>
           </goal>
           <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="1.63" steps="963240"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="1.11" steps="767848"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
          <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="3.52" steps="1298212"/></proof>
          </goal>
          <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="1.74" steps="1071530"/></proof>
          </goal>
          <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="1.56" steps="1056364"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.1.0" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
          <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="3.49" steps="1298212"/></proof>
          </goal>
          <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.1.0.1" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="1.71" steps="1071530"/></proof>
          </goal>
          <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.1.0.1.0.2" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="1.60" steps="1056364"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_flat_mute_bv&#39;vc.0.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="2.85" steps="1093984"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_flat_mute_bv&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="1.03" steps="767814"/></proof>
   </goal>
   <goal name="path_sem_flat_mute_bv&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="1.07" steps="767814"/></proof>
   </goal>
   <goal name="path_sem_flat_mute_bv&#39;vc.0.3" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="1.50" steps="825516"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Flat_circuits" proved="true">
 <goal name="seq_flat&#39;vc" expl="VC for seq_flat" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_flat&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.20" steps="747084"/></proof>
  </goal>
  <goal name="seq_flat&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.21" steps="843000"/></proof>
  </goal>
  <goal name="seq_flat&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.41" steps="843003"/></proof>
  </goal>
  <goal name="seq_flat&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.35" steps="843006"/></proof>
  </goal>
  <goal name="seq_flat&#39;vc.4" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures4">
   <goal name="seq_flat&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="seq_flat&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="basis_ket_invariant">
     <goal name="seq_flat&#39;vc.4.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="1.39" steps="843045"/></proof>
     </goal>
     <goal name="seq_flat&#39;vc.4.0.0.1" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="1.54" steps="857039"/></proof>
     </goal>
     <goal name="seq_flat&#39;vc.4.0.0.2" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="2.36" steps="905178"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="seq_flat&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.40" steps="843164"/></proof>
  </goal>
  <goal name="seq_flat&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.53" steps="856985"/></proof>
  </goal>
  <goal name="seq_flat&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_flat&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="seq_flat&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="ang_add_eq">
     <goal name="seq_flat&#39;vc.7.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="1.41" steps="843189"/></proof>
     </goal>
     <goal name="seq_flat&#39;vc.7.0.0.1" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="2.32" steps="937579"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_flat&#39;vc" expl="VC for cont_flat" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_flat&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_flat&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="1.21" steps="748013"/></proof>
   </goal>
   <goal name="cont_flat&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="1.15" steps="748024"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_flat&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_flat&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="1.23" steps="748022"/></proof>
   </goal>
   <goal name="cont_flat&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="1.02" steps="748022"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_flat&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_flat&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="1.19" steps="748031"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_flat&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.21" steps="762445"/></proof>
  </goal>
  <goal name="cont_flat&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="2.02" steps="821595"/></proof>
  </goal>
  <goal name="cont_flat&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.20" steps="762485"/></proof>
  </goal>
  <goal name="cont_flat&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.21" steps="762488"/></proof>
  </goal>
  <goal name="cont_flat&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures5">
   <goal name="cont_flat&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="3.16" steps="1003328"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_flat&#39;vc.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures5">
   <goal name="cont_flat&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="cont_flat&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_add_zero_d">
     <goal name="cont_flat&#39;vc.8.0.0.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="3.12" steps="1000599"/></proof>
     </goal>
     <goal name="cont_flat&#39;vc.8.0.0.1" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="(arc_cos_ang (pow_inv_sqrt_2 (range c)))" arg2="ang_zero">
      <goal name="cont_flat&#39;vc.8.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="case" proved="true" arg1="(even (y 0))">
       <goal name="cont_flat&#39;vc.8.0.0.1.0.0" expl="true case (rewrite premises)" proved="true">
       <proof prover="3"><result status="valid" time="2.20" steps="846462"/></proof>
       </goal>
       <goal name="cont_flat&#39;vc.8.0.0.1.0.1" expl="false case (rewrite premises)" proved="true">
       <proof prover="3"><result status="valid" time="2.22" steps="846060"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_flat&#39;vc.8.0.0.1.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(pow_inv_sqrt_2 (range c))" arg2="c_one">
       <goal name="cont_flat&#39;vc.8.0.0.1.1.0" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="cont_flat&#39;vc.8.0.0.1.1.0.0" expl="apply premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="cont_flat&#39;vc.8.0.0.1.1.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="arc_cos_ang&#39;spec">
          <goal name="cont_flat&#39;vc.8.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="4.41" steps="1228356"/></proof>
          </goal>
          <goal name="cont_flat&#39;vc.8.0.0.1.1.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="3.60" steps="1175866"/></proof>
          </goal>
          <goal name="cont_flat&#39;vc.8.0.0.1.1.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="2.43" steps="1017740"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="cont_flat&#39;vc.8.0.0.1.1.1" expl="equality hypothesis" proved="true">
       <proof prover="3"><result status="valid" time="3.17" steps="1000697"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="seq_flat_right&#39;vc" expl="VC for seq_flat_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_flat_right&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.19" steps="749445"/></proof>
  </goal>
  <goal name="seq_flat_right&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.25" steps="845137"/></proof>
  </goal>
  <goal name="seq_flat_right&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.40" steps="845140"/></proof>
  </goal>
  <goal name="seq_flat_right&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.39" steps="845143"/></proof>
  </goal>
  <goal name="seq_flat_right&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.37" steps="845146"/></proof>
  </goal>
  <goal name="seq_flat_right&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="2.37" steps="905862"/></proof>
  </goal>
  <goal name="seq_flat_right&#39;vc.6" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures6">
  </transf>
  </goal>
  <goal name="seq_flat_right&#39;vc.7" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures6">
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="seq_flat_left&#39;vc" expl="VC for seq_flat_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_flat_left&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.20" steps="750470"/></proof>
  </goal>
  <goal name="seq_flat_left&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.25" steps="846004"/></proof>
  </goal>
  <goal name="seq_flat_left&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.36" steps="846007"/></proof>
  </goal>
  <goal name="seq_flat_left&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.38" steps="846010"/></proof>
  </goal>
  <goal name="seq_flat_left&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.38" steps="846013"/></proof>
  </goal>
  <goal name="seq_flat_left&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="2.36" steps="906748"/></proof>
  </goal>
  <goal name="seq_flat_left&#39;vc.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_flat_left&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="seq_flat_left&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="basis_ket_invariant">
     <goal name="seq_flat_left&#39;vc.6.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="1.38" steps="846063"/></proof>
     </goal>
     <goal name="seq_flat_left&#39;vc.6.0.0.1" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="2.43" steps="908158"/></proof>
     </goal>
     <goal name="seq_flat_left&#39;vc.6.0.0.2" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="2.32" steps="907564"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="seq_flat_left&#39;vc.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="seq_flat_left&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="ang_add_eq">
    <goal name="seq_flat_left&#39;vc.7.0.0" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="1.38" steps="846193"/></proof>
    </goal>
    <goal name="seq_flat_left&#39;vc.7.0.1" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="2.38" steps="940069"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_flat&#39;vc" expl="VC for path_sem_flat" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_flat&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="get_path_sem_basis">
   <goal name="path_sem_flat&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_basis&#39;def">
    <goal name="path_sem_flat&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
     <goal name="path_sem_flat&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
      <goal name="path_sem_flat&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="scalar_eq_gen">
        <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="bv_to_ket_eq">
         <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="make_bv_length">
          <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="1.22" steps="751277"/></proof>
           </goal>
           <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.20" steps="1184402"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.74" steps="969610"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.46" steps="940302"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.75" steps="1184402"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.84" steps="969610"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.1.1.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.52" steps="940302"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="3"><result status="valid" time="3.12" steps="987202"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="3.65" steps="1184248"/></proof>
              </goal>
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="1.71" steps="969614"/></proof>
              </goal>
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="1.57" steps="940302"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="3.12" steps="1184248"/></proof>
              </goal>
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="1.77" steps="969614"/></proof>
              </goal>
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.1.1.0.0.2" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="1.58" steps="940302"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="2.73" steps="987202"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
            <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket_invariant">
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="2.30" steps="847363"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.32" steps="778905"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.30" steps="751313"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                 <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="3.83" steps="1184465"/></proof>
                 </goal>
                 <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="1.79" steps="969635"/></proof>
                 </goal>
                 <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="1.59" steps="940327"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                 <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="3.74" steps="1184465"/></proof>
                 </goal>
                 <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="1.77" steps="969635"/></proof>
                 </goal>
                 <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="1.58" steps="940327"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="3"><result status="valid" time="1.17" steps="751313"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
                <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="3.72" steps="1185082"/></proof>
                </goal>
                <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.78" steps="969639"/></proof>
                </goal>
                <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.62" steps="940327"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
                <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="3.25" steps="1185082"/></proof>
                </goal>
                <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.53" steps="969639"/></proof>
                </goal>
                <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="1.56" steps="940327"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="3"><result status="valid" time="1.22" steps="751313"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.54" steps="1287781"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="2.00" steps="1062792"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.55" steps="1047636"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.1.0.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="4.06" steps="1287781"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.96" steps="1062792"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.1.1.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.78" steps="1047636"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
           <proof prover="3"><result status="valid" time="3.47" steps="1091963"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="path_sem_flat&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="3.51" steps="1035042"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="path_sem_flat&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="3.03" steps="987202"/></proof>
      </goal>
      <goal name="path_sem_flat&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="1.22" steps="751279"/></proof>
      </goal>
      <goal name="path_sem_flat&#39;vc.0.0.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="scalar_ket_l">
         <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
          <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="make_bv_length">
           <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec1">
               <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.57" steps="1184248"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.71" steps="969614"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.51" steps="940302"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="basis_ket&#39;spec">
               <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="3.63" steps="1184248"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.78" steps="969614"/></proof>
               </goal>
               <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="1.55" steps="940302"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="path_sem_flat&#39;vc.0.0.0.0.3.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="2.70" steps="987202"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_flat&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="2.72" steps="988715"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="path_sem_flat&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="1.75" steps="807200"/></proof>
    </goal>
    <goal name="path_sem_flat&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="2.00" steps="807184"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_flat&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="1.71" steps="807200"/></proof>
   </goal>
   <goal name="path_sem_flat&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="1.71" steps="807184"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_flat_gen&#39;vc" expl="VC for path_sem_flat_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_flat_gen&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="1.86" steps="908236"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
