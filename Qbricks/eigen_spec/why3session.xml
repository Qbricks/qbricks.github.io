<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="eigen_spec.mlw"/>
<theory name="Eigen_vectors" proved="true">
 <goal name="eigen&#39;vc" expl="VC for eigen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="eigen&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.92" steps="854362"/></proof>
  </goal>
  <goal name="eigen&#39;vc.1" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="eigen&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="2.11" steps="854952"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="eigen_ket_l&#39;vc" expl="VC for eigen_ket_l" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="eigen_ket_l&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="2.41" steps="854336"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="set_eigen&#39;vc" expl="VC for set_eigen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_eigen&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="2.35" steps="854416"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="get_eigen&#39;vc" expl="VC for get_eigen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_eigen&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="3.46" steps="1041717"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="is_a_ket_l_eigen&#39;vc" expl="VC for is_a_ket_l_eigen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="is_a_ket_l_eigen&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="2.41" steps="854612"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="eigen_scal&#39;vc" expl="VC for eigen_scal" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="eigen_scal&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.41" steps="854893"/></proof>
  </goal>
  <goal name="eigen_scal&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.38" steps="854931"/></proof>
  </goal>
  <goal name="eigen_scal&#39;vc.2" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="get_eigen">
   <goal name="eigen_scal&#39;vc.2.0" expl="apply premises" proved="true">
   <proof prover="2"><result status="valid" time="3.53" steps="1043403"/></proof>
   </goal>
   <goal name="eigen_scal&#39;vc.2.1" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_scal">
    <goal name="eigen_scal&#39;vc.2.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="set_eigen" arg2="with" arg3="o">
     <goal name="eigen_scal&#39;vc.2.1.0.0" expl="apply premises" proved="true">
     <proof prover="2"><result status="valid" time="2.43" steps="854925"/></proof>
     </goal>
     <goal name="eigen_scal&#39;vc.2.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="1.39" steps="796362"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="eigen_scal&#39;vc.2.1.1" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="2.38" steps="854926"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="eigen_comp&#39;vc" expl="VC for eigen_comp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="eigen_comp&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="eigen_comp&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="1.39" steps="796594"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="eigen_comp&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="eigen_comp&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="2.48" steps="855207"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="eigen_comp&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="eigen_comp&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="2.44" steps="855245"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="eigen_comp&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="eigen_comp&#39;vc.3.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="set_eigen" arg2="with" arg3="o&#39;">
    <goal name="eigen_comp&#39;vc.3.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="scalar_assoc">
     <goal name="eigen_comp&#39;vc.3.0.0.0" expl="precondition" proved="true">
     <proof prover="2"><result status="valid" time="3.46" steps="1057730"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="eigen_comp&#39;vc.3.0.1" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="1.36" steps="796649"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="eigen_comp&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="eigen_comp&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="1.33" steps="796667"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="eigen_comp&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="eigen_comp&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="1.25" steps="796645"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="eigen_comp&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.46" steps="889318"/></proof>
  </goal>
  <goal name="eigen_comp&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="3.64" steps="1148128"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="eigen_square&#39;vc" expl="VC for eigen_square" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="eigen_square&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.30" steps="796851"/></proof>
  </goal>
  <goal name="eigen_square&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.25" steps="796854"/></proof>
  </goal>
  <goal name="eigen_square&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.27" steps="796857"/></proof>
  </goal>
  <goal name="eigen_square&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.36" steps="796909"/></proof>
  </goal>
  <goal name="eigen_square&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.36" steps="796912"/></proof>
  </goal>
  <goal name="eigen_square&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="2.34" steps="855133"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pow_pow_2&#39;vc" expl="VC for pow_pow_2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pow_pow_2&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.23" steps="854941"/></proof>
  </goal>
  <goal name="pow_pow_2&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="1.33" steps="797170"/></proof>
  </goal>
  <goal name="pow_pow_2&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.91" steps="855006"/></proof>
  </goal>
  <goal name="pow_pow_2&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.13" steps="797160"/></proof>
  </goal>
  <goal name="pow_pow_2&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.10" steps="797190"/></proof>
  </goal>
  <goal name="pow_pow_2&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.96" steps="855580"/></proof>
  </goal>
  <goal name="pow_pow_2&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.35"/></proof>
  <proof prover="1"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="control_eigen&#39;vc" expl="VC for control_eigen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="control_eigen&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.38" steps="797449"/></proof>
  </goal>
  <goal name="control_eigen&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.42" steps="797453"/></proof>
  </goal>
  <goal name="control_eigen&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.39" steps="855735"/></proof>
  </goal>
  <goal name="control_eigen&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.59" steps="1055448"/></proof>
  </goal>
  <goal name="control_eigen&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.03" steps="871391"/></proof>
  </goal>
  <goal name="control_eigen&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.46" steps="809258"/></proof>
  </goal>
  <goal name="control_eigen&#39;vc.6" expl="postcondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="control_eigen&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="control_eigen&#39;vc.6.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="1.45" steps="826427"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="2.54" steps="872474"/></proof>
  </goal>
  <goal name="control_eigen&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="3.65" steps="1066167"/></proof>
  </goal>
  <goal name="control_eigen&#39;vc.9" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(getbv x c = 0)">
   <goal name="control_eigen&#39;vc.9.0" expl="true case (postcondition)" proved="true">
   <proof prover="2"><result status="valid" time="3.75" steps="1072484"/></proof>
   </goal>
   <goal name="control_eigen&#39;vc.9.1" expl="false case (postcondition)" proved="true">
   <proof prover="0"><result status="valid" time="2.18"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="control_eigen_scal&#39;vc" expl="VC for control_eigen_scal" proved="true">
 <transf name="compute_specified" proved="true" >
  <goal name="control_eigen_scal&#39;vc.0" expl="VC for control_eigen_scal" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_scal&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="1.33" steps="798585"/></proof>
   </goal>
   <goal name="control_eigen_scal&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="1.39" steps="798589"/></proof>
   </goal>
   <goal name="control_eigen_scal&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="2.08" steps="857342"/></proof>
   </goal>
   <goal name="control_eigen_scal&#39;vc.0.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="2.43" steps="869575"/></proof>
   </goal>
   <goal name="control_eigen_scal&#39;vc.0.4" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="control_eigen&#39;def">
    <goal name="control_eigen_scal&#39;vc.0.4.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="1.46" steps="810419"/></proof>
    </goal>
    <goal name="control_eigen_scal&#39;vc.0.4.1" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="1.45" steps="810430"/></proof>
    </goal>
    <goal name="control_eigen_scal&#39;vc.0.4.2" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="1.45" steps="810421"/></proof>
    </goal>
    <goal name="control_eigen_scal&#39;vc.0.4.3" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="2.51" steps="870724"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="control_eigen_scal&#39;vc.0.5" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="control_eigen_scal&#39;vc.0.5.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(kronecker (ang_exp o *.. bv_to_ket x) y)" arg2="(kronecker ( bv_to_ket x) (ang_exp o *..y))">
     <goal name="control_eigen_scal&#39;vc.0.5.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="control_eigen&#39;spec">
      <goal name="control_eigen_scal&#39;vc.0.5.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
       <goal name="control_eigen_scal&#39;vc.0.5.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
        <goal name="control_eigen_scal&#39;vc.0.5.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
         <goal name="control_eigen_scal&#39;vc.0.5.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="scalar_assoc">
          <goal name="control_eigen_scal&#39;vc.0.5.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <proof prover="2"><result status="valid" time="3.78" steps="1272280"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="control_eigen_scal&#39;vc.0.5.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="1.89" steps="1025398"/></proof>
      </goal>
      <goal name="control_eigen_scal&#39;vc.0.5.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="1.97" steps="1025389"/></proof>
      </goal>
      <goal name="control_eigen_scal&#39;vc.0.5.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="2.76" steps="1089577"/></proof>
      </goal>
      <goal name="control_eigen_scal&#39;vc.0.5.0.0.4" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="1.63" steps="1025389"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="control_eigen_scal&#39;vc.0.5.0.1" expl="equality hypothesis" proved="true">
     <proof prover="2"><result status="valid" time="3.72" steps="1268326"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="control_eigen_seq_test&#39;vc" expl="VC for control_eigen_seq_test" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="control_eigen_seq_test&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq_test&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="2.97" steps="1087365"/></proof>
   </goal>
   <goal name="control_eigen_seq_test&#39;vc.0.1" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(0&lt;=&#39; s)">
    <goal name="control_eigen_seq_test&#39;vc.0.1.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="1.33" steps="846534"/></proof>
    </goal>
    <goal name="control_eigen_seq_test&#39;vc.0.1.1" expl="precondition" proved="true">
    <proof prover="2"><result status="valid" time="3.23" steps="1089192"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_test&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq_test&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="2.22" steps="905231"/></proof>
   </goal>
   <goal name="control_eigen_seq_test&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="2.31" steps="906387"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_test&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq_test&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="3.28" steps="1087940"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_test&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq_test&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="3.21" steps="1087429"/></proof>
   </goal>
   <goal name="control_eigen_seq_test&#39;vc.3.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="3.20" steps="1089201"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_test&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq_test&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="2.05" steps="905949"/></proof>
   </goal>
   <goal name="control_eigen_seq_test&#39;vc.4.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="2.26" steps="906416"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_test&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq_test&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="3.07" steps="1087989"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_test&#39;vc.6" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq_test&#39;vc.6.0" expl="variant decrease" proved="true">
   <proof prover="2"><result status="valid" time="2.03" steps="906092"/></proof>
   </goal>
   <goal name="control_eigen_seq_test&#39;vc.6.1" expl="variant decrease" proved="true">
   <proof prover="2"><result status="valid" time="1.41" steps="847124"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_test&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.07" steps="1094890"/></proof>
  </goal>
  <goal name="control_eigen_seq_test&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.06" steps="907079"/></proof>
  </goal>
  <goal name="control_eigen_seq_test&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.42" steps="847290"/></proof>
  </goal>
  <goal name="control_eigen_seq_test&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.40" steps="847293"/></proof>
  </goal>
  <goal name="control_eigen_seq_test&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.42" steps="847296"/></proof>
  </goal>
  <goal name="control_eigen_seq_test&#39;vc.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.43" steps="907570"/></proof>
  </goal>
  <goal name="control_eigen_seq_test&#39;vc.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.41" steps="906341"/></proof>
  </goal>
  <goal name="control_eigen_seq_test&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="2.66" steps="992846"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="control_eigen_seq_pre&#39;vc" expl="VC for control_eigen_seq_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="control_eigen_seq_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.46" steps="882945"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.24" steps="1132473"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.28" steps="1132945"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.59" steps="1133504"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="2.50" steps="944187"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.63" steps="1134997"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.46" steps="945039"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.49" steps="883056"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.47" steps="883059"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.43" steps="883062"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.10" steps="1133634"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.11" steps="1132394"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.42" steps="883200"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.48" steps="883203"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.12" steps="945246"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.15" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.35" steps="1209302"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.81" steps="1209914"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.17" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.44" steps="886742"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.53" steps="1210023"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.19" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.48" steps="1212827"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.20" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.39" steps="1221572"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.21" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="control_eigen_seq_pre&#39;vc.21.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="goal_comm">
    <goal name="control_eigen_seq_pre&#39;vc.21.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_sum_right_extension">
     <goal name="control_eigen_seq_pre&#39;vc.21.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="control_eigen_seq_pre&#39;vc.21.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="2.15" steps="948231"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="control_eigen_seq_pre&#39;vc.21.1" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="1.45" steps="887456"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.22" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures2">
   <goal name="control_eigen_seq_pre&#39;vc.22.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="3.26" steps="1216649"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.23" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.30" steps="1213602"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.24" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.84" steps="1213560"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.25" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.53" steps="887660"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.26" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.91" steps="1213683"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.27" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures2">
   <goal name="control_eigen_seq_pre&#39;vc.27.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="3.88" steps="1214795"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="2.52" steps="1033784"/></proof>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.29" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="control_eigen_seq_pre&#39;vc.29.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_sum_cardone">
    <goal name="control_eigen_seq_pre&#39;vc.29.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="control_eigen_seq_pre&#39;vc.29.0.0.0" expl="postcondition" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="control_eigen_seq_pre&#39;vc.29.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="control_eigen_seq_pre&#39;vc.29.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="H">
        <goal name="control_eigen_seq_pre&#39;vc.29.0.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="4.00" steps="1356744"/></proof>
        </goal>
        <goal name="control_eigen_seq_pre&#39;vc.29.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="1.92" steps="1109803"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="control_eigen_seq_pre&#39;vc.29.0.1" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="1.42" steps="883487"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="control_eigen_seq_pre&#39;vc.29.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="control_eigen_seq_pre&#39;vc.29.1.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H7">
      <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H11">
       <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_comp_">
         <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="H85">
          <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="replace" proved="true" arg1="(control_eigen_scal o5 y o6 ft n o7 o9)" arg2="o4">
           <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="replace" proved="true" arg1="(ang_sum (fun (i:int) -&gt; (getbv x @ (fc @ i)) *.* (fk @ i)) 0 o29)" arg2="o7">
            <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="H8">
             <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <transf name="apply" proved="true" arg1="kronecker_eq">
              <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="scalar_eq_gen">
               <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="1.57" steps="1207989"/></proof>
               </goal>
               <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(ang_sum (fun (i:int) -&gt; (getbv x @ (fc @ i)) *.* (fk @ i)) 0 bound)" arg2="(o7 +.+ ((getbv x @ o6) *.* o9))">
                <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="2"><result status="valid" time="1.88" steps="1207989"/></proof>
                </goal>
                <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                <transf name="rewrite" proved="true" arg1="ang_sum_right_extension">
                 <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="ang_add_eq">
                   <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="H14">
                    <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="ang_sum_eq">
                     <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="2"><result status="valid" time="2.10" steps="1207998"/></proof>
                     </goal>
                     <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0.1" expl="apply premises" proved="true">
                     <proof prover="2"><result status="valid" time="4.76" steps="1530154"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
                   <proof prover="2"><result status="valid" time="2.18" steps="1224312"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="3.00" steps="1278820"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="1.61" steps="1207989"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="2"><result status="valid" time="1.68" steps="1207991"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="H14">
             <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
             <transf name="rewrite" proved="true" arg1="H87">
              <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
              <transf name="apply" proved="true" arg1="ang_sum_eq">
               <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="1.95" steps="1207998"/></proof>
               </goal>
               <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="4.48" steps="1530154"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="2"><result status="valid" time="1.50" steps="1207998"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="4.70" steps="1528175"/></proof>
         </goal>
         <goal name="control_eigen_seq_pre&#39;vc.29.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="4.38" steps="1531872"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_pre&#39;vc.30" expl="postcondition" proved="true">
  <transf name="eliminate_let" proved="true" >
   <goal name="control_eigen_seq_pre&#39;vc.30.0" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="control_eigen_seq_pre&#39;vc.30.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="2.40"/></proof>
    </goal>
    <goal name="control_eigen_seq_pre&#39;vc.30.0.1" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="control_eigen_seq_pre&#39;vc.30.0.1.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="control_eigen_seq_test&#39;def">
      <goal name="control_eigen_seq_pre&#39;vc.30.0.1.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H7">
       <goal name="control_eigen_seq_pre&#39;vc.30.0.1.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="sequence_eq">
        <goal name="control_eigen_seq_pre&#39;vc.30.0.1.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="4.08" steps="1534333"/></proof>
        </goal>
        <goal name="control_eigen_seq_pre&#39;vc.30.0.1.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="3.09" steps="1277909"/></proof>
        </goal>
        <goal name="control_eigen_seq_pre&#39;vc.30.0.1.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="2.81" steps="1277899"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="control_eigen_seq_pre&#39;vc.30.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="1.73"/></proof>
      </goal>
      <goal name="control_eigen_seq_pre&#39;vc.30.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="2.04" steps="1208104"/></proof>
      </goal>
      <goal name="control_eigen_seq_pre&#39;vc.30.0.1.0.3" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="1.97" steps="1208095"/></proof>
      </goal>
      <goal name="control_eigen_seq_pre&#39;vc.30.0.1.0.4" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="2.01" steps="1208095"/></proof>
      </goal>
      <goal name="control_eigen_seq_pre&#39;vc.30.0.1.0.5" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="1.88" steps="1208095"/></proof>
      </goal>
      <goal name="control_eigen_seq_pre&#39;vc.30.0.1.0.6" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="1.63"/></proof>
      </goal>
      <goal name="control_eigen_seq_pre&#39;vc.30.0.1.0.7" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="1.92" steps="1208093"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="control_eigen_seq&#39;vc" expl="VC for control_eigen_seq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="control_eigen_seq&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="1.85"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="3.61" steps="1129878"/></proof>
   </goal>
   <goal name="control_eigen_seq&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="4.14" steps="1129889"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="1.45" steps="885735"/></proof>
   </goal>
   <goal name="control_eigen_seq&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="1.42" steps="885733"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.74" steps="885746"/></proof>
  </goal>
  <goal name="control_eigen_seq&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.71" steps="885749"/></proof>
  </goal>
  <goal name="control_eigen_seq&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.72" steps="885752"/></proof>
  </goal>
  <goal name="control_eigen_seq&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.04" steps="947419"/></proof>
  </goal>
  <goal name="control_eigen_seq&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="2.64" steps="947488"/></proof>
  </goal>
  <goal name="control_eigen_seq&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.47" steps="885699"/></proof>
  </goal>
  <goal name="control_eigen_seq&#39;vc.9" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures1" arg2="with" arg3="x">
   <goal name="control_eigen_seq&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="control_eigen_seq&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="control_eigen_seq_pre&#39;spec1">
     <goal name="control_eigen_seq&#39;vc.9.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="control_eigen_seq&#39;vc.9.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="4.87" steps="1359160"/></proof>
      </goal>
      <goal name="control_eigen_seq&#39;vc.9.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="4.89" steps="1359328"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="control_eigen_seq&#39;vc.9.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="control_eigen_seq&#39;vc.9.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="2.26" steps="1114890"/></proof>
      </goal>
      <goal name="control_eigen_seq&#39;vc.9.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="2.20" steps="1114888"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="control_eigen_seq&#39;vc.9.0.0.2" expl="apply premises" proved="true">
     <proof prover="2"><result status="valid" time="2.22" steps="1114888"/></proof>
     </goal>
     <goal name="control_eigen_seq&#39;vc.9.0.0.3" expl="apply premises" proved="true">
     <proof prover="2"><result status="valid" time="2.19" steps="1114888"/></proof>
     </goal>
     <goal name="control_eigen_seq&#39;vc.9.0.0.4" expl="apply premises" proved="true">
     <proof prover="2"><result status="valid" time="2.29" steps="1114888"/></proof>
     </goal>
     <goal name="control_eigen_seq&#39;vc.9.0.0.5" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="control_eigen_seq&#39;vc.9.0.0.5.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="5.10" steps="1359226"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="control_eigen_seq&#39;vc.9.0.0.6" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="control_eigen_seq&#39;vc.9.0.0.6.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="4.95" steps="1359574"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="control_eigen_seq&#39;vc.9.0.0.7" expl="apply premises" proved="true">
     <proof prover="2"><result status="valid" time="2.19" steps="1114888"/></proof>
     </goal>
     <goal name="control_eigen_seq&#39;vc.9.0.0.8" expl="apply premises" proved="true">
     <proof prover="2"><result status="valid" time="2.22" steps="1114888"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="control_eigen_seq&#39;vc.9.1" expl="rewrite premises" proved="true">
   <proof prover="2"><result status="valid" time="1.70" steps="885718"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="control_eigen_seq_real&#39;vc" expl="VC for control_eigen_seq_real" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="control_eigen_seq_real&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.43" steps="894188"/></proof>
  </goal>
  <goal name="control_eigen_seq_real&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq_real&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="3.58" steps="1175712"/></proof>
   </goal>
   <goal name="control_eigen_seq_real&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="3.56" steps="1176012"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_real&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq_real&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="1.43" steps="930655"/></proof>
   </goal>
   <goal name="control_eigen_seq_real&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="1.47" steps="930653"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_real&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq_real&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="1.49" steps="930662"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_real&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq_real&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="1.44" steps="930665"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_real&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq_real&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="1.41" steps="930668"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_real&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq_real&#39;vc.6.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="control_eigen_seq_real&#39;vc.6.0.0" expl="precondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="control_eigen_seq_real&#39;vc.6.0.0.0" expl="VC for control_eigen_seq_real" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="control_eigen_seq_real&#39;vc.6.0.0.0.0" expl="precondition" proved="true">
      <proof prover="2"><result status="valid" time="3.61" steps="1195806"/></proof>
      </goal>
      <goal name="control_eigen_seq_real&#39;vc.6.0.0.0.1" expl="precondition" proved="true">
      <proof prover="2"><result status="valid" time="3.65" steps="1191443"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_real&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.69" steps="993700"/></proof>
  </goal>
  <goal name="control_eigen_seq_real&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq_real&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="1.51" steps="930872"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_real&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq_real&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="1.52" steps="931025"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="control_eigen_seq_real&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="control_eigen_seq_real&#39;vc.10.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ang_sum
      (fun (i:int) -&gt; real_to_ang ((fk @ i) *. i_to_c (getbv x @ (fc @ i))))
      0 bound)" arg2="(ang_sum
       (fun (i:int) -&gt;
         (getbv x @ (fc @ i))
         *.* ((fun (k:int) -&gt;
                if real_ (fk @ k) then real_to_ang (fk @ k) else ang_zero)
              @ i))
       0 bound)">
    <goal name="control_eigen_seq_real&#39;vc.10.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="Ensures1">
     <goal name="control_eigen_seq_real&#39;vc.10.0.0.0" expl="apply premises" proved="true">
     <proof prover="2"><result status="valid" time="1.57" steps="931044"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="control_eigen_seq_real&#39;vc.10.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="ang_sum_eq">
     <goal name="control_eigen_seq_real&#39;vc.10.0.1.0" expl="apply premises" proved="true">
     <proof prover="2"><result status="valid" time="2.52" steps="992998"/></proof>
     </goal>
     <goal name="control_eigen_seq_real&#39;vc.10.0.1.1" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="control_eigen_seq_real&#39;vc.10.0.1.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="control_eigen_seq_real&#39;vc.10.0.1.1.0.0" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="3.74" steps="1193492"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
