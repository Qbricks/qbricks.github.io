<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="reversion.mlw"/>
<theory name="Circuit_reverse" proved="true">
 <goal name="ancilla_free_pre&#39;vc" expl="VC for ancilla_free_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ancilla_free_pre&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ancilla_free_pre&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="3.03" steps="1146177"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ancilla_free_pre&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ancilla_free_pre&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="3.08" steps="1146837"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ancilla_free_pre&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ancilla_free_pre&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="2.04" steps="932966"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ancilla_free_pre&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ancilla_free_pre&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="2.08" steps="933017"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ancilla_free_pre&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ancilla_free_pre&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="2.30" steps="932956"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ancilla_free_pre&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ancilla_free_pre&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="2.30" steps="933007"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ancilla_free_pre&#39;vc.6" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="ancilla_free_pre&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.0.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.05" steps="933019"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.0.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.18" steps="872133"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.1.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.44"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.1.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.24" steps="872138"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.2" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.2.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.40"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.2.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.24" steps="872138"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.3" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.3.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.38"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.3.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.23" steps="872138"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.4" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.4.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.42"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.4.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.21" steps="872138"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.5" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.5.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.37"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.5.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.21" steps="872138"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.6" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.6.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.07" steps="933019"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.6.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.20" steps="872133"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.7" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.7.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.09" steps="933019"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.7.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.16" steps="872133"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.8" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.8.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.02" steps="933019"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.8.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.12" steps="872133"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.9" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.9.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.35" steps="933019"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.9.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.17" steps="872133"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.10" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.10.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.35" steps="933019"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.10.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.19" steps="872133"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.11" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.11.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.01" steps="933019"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.11.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.16" steps="872133"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.12" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.12.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.08" steps="933019"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.12.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.24" steps="872133"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.13" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.13.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.36" steps="933019"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.13.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.19" steps="872133"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.14" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.14.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.05" steps="933019"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.14.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.19" steps="872133"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.15" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.15.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.04" steps="933019"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.15.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.19" steps="872133"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.16" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.16.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.35"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.16.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.15" steps="872146"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.17" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.17.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.38"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.17.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.25" steps="872146"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.18" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.18.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.40"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.18.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.29" steps="872150"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.19" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.19.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.45"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.19.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.26" steps="872150"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.20" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.20.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.39"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.20.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.38"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.21" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.21.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.66"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.21.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.46"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.22" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ancillas_pre c)" arg2="(max (ancillas_pre x1) (ancillas_pre x))">
    <goal name="ancilla_free_pre&#39;vc.6.22.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="3.61" steps="1150514"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.22.1" expl="equality hypothesis" proved="true">
    <proof prover="1"><result status="valid" time="1.41"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.23" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ancillas_pre c)" arg2="( (ancillas_pre x1) +&#39; (ancillas_pre x))">
    <goal name="ancilla_free_pre&#39;vc.6.23.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="3.19" steps="1150327"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.23.1" expl="equality hypothesis" proved="true">
    <proof prover="1"><result status="valid" time="1.41"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.24" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ancillas_pre c)" arg2="( (ancillas_pre x1) +&#39; ( x))">
    <goal name="ancilla_free_pre&#39;vc.6.24.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="3.19" steps="1146363"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.24.1" expl="equality hypothesis" proved="true">
    <proof prover="1"><result status="valid" time="1.47"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ancilla_free&#39;vc" expl="VC for ancilla_free" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ancilla_free&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="3.33" steps="1149968"/></proof>
  </goal>
  <goal name="ancilla_free&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="2.35" steps="934980"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="set_ancilla_free&#39;vc" expl="VC for set_ancilla_free" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_ancilla_free&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="2.32" steps="934917"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="phase_invol&#39;vc" expl="VC for phase_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="phase_invol&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(to_qc (Phase k))" arg2="(phase k)">
   <goal name="phase_invol&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(to_qc (Phase (-&#39;k)))" arg2="(phase (-&#39;k))">
    <goal name="phase_invol&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(to_qc (Phase k))" arg2="(phase k)" arg3="in" arg4="H">
     <goal name="phase_invol&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_phase" arg2="in" arg3="H">
      <goal name="phase_invol&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_phase">
       <goal name="phase_invol&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="y" arg2="(ang_exp (1 /./ k) *.. x)">
        <goal name="phase_invol&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="scalar_assoc">
         <goal name="phase_invol&#39;vc.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="int_to_ang_minus_up">
          <goal name="phase_invol&#39;vc.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <proof prover="5"><result status="valid" time="2.99" steps="1169979"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="phase_invol&#39;vc.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="1.14" steps="873992"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="phase_invol&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.00" steps="935004"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="phase_invol&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.17" steps="873978"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="phase_invol&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="pre_rev">
      <goal name="phase_invol&#39;vc.0.0.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="5"><result status="valid" time="3.39" steps="1190682"/></proof>
      </goal>
      <goal name="phase_invol&#39;vc.0.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.16" steps="934987"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="phase_invol&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="pre_rev">
     <goal name="phase_invol&#39;vc.0.0.1.0" expl="equality hypothesis" proved="true">
     <proof prover="5"><result status="valid" time="3.42" steps="1190511"/></proof>
     </goal>
     <goal name="phase_invol&#39;vc.0.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.26" steps="935006"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="phase_invol&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="pre_rev">
    <goal name="phase_invol&#39;vc.0.1.0" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="3.57" steps="1190682"/></proof>
    </goal>
    <goal name="phase_invol&#39;vc.0.1.1" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="2.29" steps="934987"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rz_invol&#39;vc" expl="VC for rz_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rz_invol&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(path_sem (to_qc (Rz (-&#39; k))) y)" arg2="(path_sem (rz k -- rz (-&#39; k)) x)">
   <goal name="rz_invol&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.19" steps="1159300"/></proof>
   </goal>
   <goal name="rz_invol&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="y" arg2="(path_sem (to_qc (Rz k)) x)">
    <goal name="rz_invol&#39;vc.0.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="rz_invol&#39;vc.0.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(to_qc (Rz ( k)))" arg2="(rz (k))">
      <goal name="rz_invol&#39;vc.0.1.0.0.0" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(to_qc (Rz (-&#39; k)))" arg2="(rz ( -&#39;k))">
       <goal name="rz_invol&#39;vc.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="1.27" steps="874181"/></proof>
       </goal>
       <goal name="rz_invol&#39;vc.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="pre_rev">
        <goal name="rz_invol&#39;vc.0.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="4.09" steps="1192761"/></proof>
        </goal>
        <goal name="rz_invol&#39;vc.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="2.53" steps="935214"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="rz_invol&#39;vc.0.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="pre_rev">
       <goal name="rz_invol&#39;vc.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="4.04" steps="1192989"/></proof>
       </goal>
       <goal name="rz_invol&#39;vc.0.1.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.48" steps="935201"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="rz_invol&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.25" steps="964356"/></proof>
     </goal>
     <goal name="rz_invol&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.56" steps="964425"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="rz_invol&#39;vc.0.1.1" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="1.44" steps="874190"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ry_invol&#39;vc" expl="VC for ry_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ry_invol&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(path_sem (to_qc (Ry (-&#39; k))) y)" arg2="(path_sem (ry k -- ry (-&#39; k)) x)">
   <goal name="ry_invol&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.66" steps="1159969"/></proof>
   </goal>
   <goal name="ry_invol&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="y" arg2="(path_sem (to_qc (Ry k)) x)">
    <goal name="ry_invol&#39;vc.0.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="ry_invol&#39;vc.0.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(to_qc (Ry (-&#39; k)))" arg2="(ry (-&#39;k))">
      <goal name="ry_invol&#39;vc.0.1.0.0.0" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(to_qc (Ry ( k)))" arg2="(ry (k))">
       <goal name="ry_invol&#39;vc.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="1.32" steps="874353"/></proof>
       </goal>
       <goal name="ry_invol&#39;vc.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="pre_rev">
        <goal name="ry_invol&#39;vc.0.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="3.70" steps="1192432"/></proof>
        </goal>
        <goal name="ry_invol&#39;vc.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="2.21" steps="935374"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="ry_invol&#39;vc.0.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="pre_rev">
       <goal name="ry_invol&#39;vc.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="3.74" steps="1193159"/></proof>
       </goal>
       <goal name="ry_invol&#39;vc.0.1.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.26" steps="935387"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ry_invol&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.56" steps="964529"/></proof>
     </goal>
     <goal name="ry_invol&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.36" steps="964598"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ry_invol&#39;vc.0.1.1" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="1.25" steps="874362"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rx_invol&#39;vc" expl="VC for rx_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rx_invol&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(path_sem (to_qc (Rx (-&#39; k))) y)" arg2="(path_sem (rx k -- rx (-&#39; k)) x)">
   <goal name="rx_invol&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.13" steps="1159885"/></proof>
   </goal>
   <goal name="rx_invol&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="y" arg2="(path_sem (to_qc (Rx k)) x)">
    <goal name="rx_invol&#39;vc.0.1.0" expl="equality hypothesis" proved="true">
    <transf name="replace" proved="true" arg1="(to_qc (Rx ( k)))" arg2="(rx (k))">
     <goal name="rx_invol&#39;vc.0.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(to_qc (Rx (-&#39; k)))" arg2="(rx (-&#39;k))">
      <goal name="rx_invol&#39;vc.0.1.0.0.0" expl="equality hypothesis" proved="true">
      <proof prover="5"><result status="valid" time="3.08" steps="1160666"/></proof>
      </goal>
      <goal name="rx_invol&#39;vc.0.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="pre_rev">
       <goal name="rx_invol&#39;vc.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="3.70" steps="1192890"/></proof>
       </goal>
       <goal name="rx_invol&#39;vc.0.1.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.27" steps="935560"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="rx_invol&#39;vc.0.1.0.1" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(to_qc (Rx (-&#39; k)))" arg2="(rx (-&#39;k))">
      <goal name="rx_invol&#39;vc.0.1.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="pre_rev">
       <goal name="rx_invol&#39;vc.0.1.0.1.0.0" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="4.06" steps="1192967"/></proof>
       </goal>
       <goal name="rx_invol&#39;vc.0.1.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.06" steps="935547"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="rx_invol&#39;vc.0.1.0.1.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="pre_rev">
       <goal name="rx_invol&#39;vc.0.1.0.1.1.0" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="3.78" steps="1192890"/></proof>
       </goal>
       <goal name="rx_invol&#39;vc.0.1.0.1.1.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.29" steps="935560"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="rx_invol&#39;vc.0.1.1" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="1.29" steps="874534"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rzp_invol&#39;vc" expl="VC for rzp_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rzp_invol&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(path_sem (to_qc (Rzp (-&#39; k))) y)" arg2="(path_sem (rzp k -- rzp (-&#39; k)) x)">
   <goal name="rzp_invol&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="y" arg2="(path_sem (to_qc (Rzp k)) x )">
    <goal name="rzp_invol&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="rzp_invol&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(x = qbit_zero())">
      <goal name="rzp_invol&#39;vc.0.0.0.0.0" expl="true case (postcondition)" proved="true">
      <proof prover="5"><result status="valid" time="2.32" steps="962843"/></proof>
      </goal>
      <goal name="rzp_invol&#39;vc.0.0.0.0.1" expl="false case (postcondition)" proved="true">
      <transf name="replace" proved="true" arg1="x" arg2="(qbit_one())">
       <goal name="rzp_invol&#39;vc.0.0.0.0.1.0" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="rzp_one">
        <goal name="rzp_invol&#39;vc.0.0.0.0.1.0.0" expl="false case (postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_scal">
         <goal name="rzp_invol&#39;vc.0.0.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
         <transf name="rewrite" proved="true" arg1="rzp_one">
          <goal name="rzp_invol&#39;vc.0.0.0.0.1.0.0.0.0" expl="false case (postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="scalar_assoc">
           <goal name="rzp_invol&#39;vc.0.0.0.0.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
            <goal name="rzp_invol&#39;vc.0.0.0.0.1.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
            <proof prover="5"><result status="valid" time="1.34" steps="874683"/></proof>
            </goal>
            <goal name="rzp_invol&#39;vc.0.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="1.92"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="rzp_invol&#39;vc.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="2.53" steps="964861"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="rzp_invol&#39;vc.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="2.41" steps="935724"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="rzp_invol&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.47" steps="964826"/></proof>
     </goal>
     <goal name="rzp_invol&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.56" steps="964908"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="rzp_invol&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="replace" proved="true" arg1="(to_qc (Rzp (-&#39; k)))" arg2="(rzp (-&#39;k))">
     <goal name="rzp_invol&#39;vc.0.0.1.0" expl="equality hypothesis" proved="true">
     <proof prover="5"><result status="valid" time="1.19" steps="874677"/></proof>
     </goal>
     <goal name="rzp_invol&#39;vc.0.0.1.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="pre_rev">
      <goal name="rzp_invol&#39;vc.0.0.1.1.0" expl="equality hypothesis" proved="true">
      <proof prover="5"><result status="valid" time="3.99" steps="1191975"/></proof>
      </goal>
      <goal name="rzp_invol&#39;vc.0.0.1.1.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.51" steps="935698"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="rzp_invol&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_comp_">
    <goal name="rzp_invol&#39;vc.0.1.0" expl="equality hypothesis" proved="true">
    <transf name="replace" proved="true" arg1="(to_qc (Rzp (-&#39; k)))" arg2="(rzp (-&#39; k))">
     <goal name="rzp_invol&#39;vc.0.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(to_qc (Rzp (k)))" arg2="(rzp ( k))" arg3="in" arg4="H">
      <goal name="rzp_invol&#39;vc.0.1.0.0.0" expl="equality hypothesis" proved="true">
      <proof prover="5"><result status="valid" time="1.54" steps="889261"/></proof>
      </goal>
      <goal name="rzp_invol&#39;vc.0.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="pre_rev">
       <goal name="rzp_invol&#39;vc.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="3.63" steps="1191581"/></proof>
       </goal>
       <goal name="rzp_invol&#39;vc.0.1.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.19" steps="935679"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="rzp_invol&#39;vc.0.1.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="pre_rev">
      <goal name="rzp_invol&#39;vc.0.1.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="5"><result status="valid" time="3.93" steps="1191975"/></proof>
      </goal>
      <goal name="rzp_invol&#39;vc.0.1.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.41" steps="935698"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="rzp_invol&#39;vc.0.1.1" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="2.17" steps="964826"/></proof>
    </goal>
    <goal name="rzp_invol&#39;vc.0.1.2" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="2.21" steps="964908"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="yy_invol&#39;vc" expl="VC for yy_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="yy_invol&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(path_sem (to_qc Y) y)" arg2="(path_sem (yy  -- yy) x)">
   <goal name="yy_invol&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_comp_">
    <goal name="yy_invol&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(rewrite_yy())">
     <goal name="yy_invol&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="eliminate_definition" proved="true" >
      <goal name="yy_invol&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(path_sem yy x)" arg2="(path_sem (rewrite_yy()) x)">
       <goal name="yy_invol&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="rewrite_yy&#39;def">
        <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_comp_rev">
         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(((ry 1 -- ry 1) -- (phase 2 -- phase 2)))">
          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_comp_">
           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="replace" proved="true" arg1="1" arg2="(incr_abs 0)">
            <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="path_sem_comp_">
             <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <transf name="rewrite" proved="true" arg1="path_sem_comp_">
              <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
              <transf name="rewrite" proved="true" arg1="ry_twice">
               <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
               <transf name="rewrite" proved="true" arg1="path_sem_phase">
                <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
                <transf name="rewrite" proved="true" arg1="path_sem_phase">
                 <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
                 <transf name="rewrite" proved="true" arg1="scalar_assoc">
                  <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
                  <transf name="replace" proved="true" arg1="(ang_exp (1 /./ 2) *. ang_exp (1 /./ 2))" arg2="(-. c_one)">
                   <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
                   <transf name="case" proved="true" arg1="(x = qbit_zero())">
                    <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                    <transf name="rewrite" proved="true" arg1="h">
                     <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                     <transf name="replace" proved="true" arg1="(path_sem (ry 0) (qbit_zero ()))" arg2="(ket_zero_y 0)">
                      <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                       <transf name="rewrite" proved="true" arg1="ket_zero_y&#39;spec1">
                        <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                        <transf name="rewrite" proved="true" arg1="add_ket_l_null">
                         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                         <transf name="replace" proved="true" arg1="(ang_exp ((-&#39; 1) /./ incr_abs 0) +. ang_exp (1 /./ incr_abs 0))" arg2="(-. ttwo)">
                          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                          <transf name="rewrite" proved="true" arg1="scalar_assoc">
                           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                           <transf name="rewrite" proved="true" arg1="scalar_assoc">
                            <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                            <proof prover="5"><result status="valid" time="4.13" steps="1481432"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                          <proof prover="5"><result status="valid" time="4.62" steps="1504844"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="3.20" steps="1307948"/></proof>
                         </goal>
                         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="3.25" steps="1308200"/></proof>
                         </goal>
                         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                         <transf name="replace" proved="true" arg1="(ang_exp ((-&#39; 1) /./ incr_abs 0) -. ang_exp (1 /./ incr_abs 0))" arg2="(c_zero)">
                          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
                          <transf name="apply" proved="true" arg1="scalar_null_gen">
                           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                           <proof prover="5"><result status="valid" time="4.55" steps="1507262"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.1" expl="equality hypothesis" proved="true">
                          <proof prover="5"><result status="valid" time="4.56" steps="1505561"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                      <proof prover="5"><result status="valid" time="2.35" steps="968155"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="false case (postcondition)" proved="true">
                    <transf name="replace" proved="true" arg1="x" arg2="(qbit_one())">
                     <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="false case (postcondition)" proved="true">
                     <transf name="rewrite" proved="true" arg1="ry_one">
                      <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="false case (postcondition)" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
                       <transf name="rewrite" proved="true" arg1="ket_one_y&#39;spec1">
                        <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="false case (postcondition)" proved="true">
                        <transf name="rewrite" proved="true" arg1="null_add_ket_l">
                         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
                         <transf name="replace" proved="true" arg1="(ang_exp ((-&#39; 1) /./ incr_abs 0) +. ang_exp (1 /./ incr_abs 0))" arg2="(-. ttwo)">
                          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
                          <transf name="rewrite" proved="true" arg1="scalar_assoc">
                           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
                           <transf name="rewrite" proved="true" arg1="scalar_assoc">
                            <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
                            <transf name="apply" proved="true" arg1="scalar_c_one_gen">
                             <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                             <proof prover="5"><result status="valid" time="4.26" steps="1481668"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                          <transf name="replace" proved="true" arg1="(incr_abs 0)" arg2="1">
                           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
                           <proof prover="5"><result status="valid" time="4.42" steps="1502036"/></proof>
                           </goal>
                           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                           <proof prover="5"><result status="valid" time="4.23" steps="1475396"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="3.21" steps="1308239"/></proof>
                         </goal>
                         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="3.22" steps="1308556"/></proof>
                         </goal>
                         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.3" expl="rewrite premises" proved="true">
                         <transf name="replace" proved="true" arg1="(ang_exp ((-&#39; 1) /./ incr_abs 0) -. ang_exp (1 /./ incr_abs 0))" arg2="(c_zero)">
                          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.3.0" expl="rewrite premises" proved="true">
                          <transf name="apply" proved="true" arg1="scalar_null_gen">
                           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                           <proof prover="5"><result status="valid" time="4.58" steps="1508088"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.3.1" expl="equality hypothesis" proved="true">
                          <proof prover="5"><result status="valid" time="4.56" steps="1505169"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                     <proof prover="5"><result status="valid" time="2.18" steps="968180"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="5"><result status="valid" time="3.24" steps="1132829"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="3.20" steps="1134273"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="5"><result status="valid" time="3.12" steps="1135190"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="1.12" steps="906190"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="2.36" steps="984274"/></proof>
              </goal>
              <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="1.42" steps="906188"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="5"><result status="valid" time="3.34" steps="1136540"/></proof>
             </goal>
             <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="5"><result status="valid" time="1.41" steps="906188"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="5"><result status="valid" time="3.15" steps="1131485"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="3.07" steps="1133667"/></proof>
           </goal>
           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="3.14" steps="1134864"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="((phase 2 -- ry 1) -- (ry 1 --phase 2 ))">
           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="sequence_equiv">
            <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <proof prover="5"><result status="valid" time="2.35" steps="968119"/></proof>
            </goal>
            <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
            <proof prover="5"><result status="valid" time="3.21" steps="1133285"/></proof>
            </goal>
            <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
            <proof prover="5"><result status="valid" time="1.39" steps="906188"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="((phase 2 -- ry 1) -- ry 1 --phase 2 )">
            <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
            <proof prover="5"><result status="valid" time="3.17" steps="1137591"/></proof>
            </goal>
            <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="((ry 1 -- ry 1) -- phase 2 -- phase 2)">
             <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1.1.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="sequence_equiv">
              <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1.1.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="(phase 2 -- (ry 1 -- ry 1))">
               <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="5"><result status="valid" time="3.26" steps="1135713"/></proof>
               </goal>
               <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="5"><result status="valid" time="3.33" steps="1135495"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1.1.0.1" expl="apply premises" proved="true">
              <proof prover="5"><result status="valid" time="2.48" steps="968119"/></proof>
              </goal>
              <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1.1.0.2" expl="apply premises" proved="true">
              <proof prover="5"><result status="valid" time="2.84" steps="1136402"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1.1.1" expl="apply premises" proved="true">
             <proof prover="5"><result status="valid" time="2.88" steps="1136769"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="2.94" steps="1135569"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="2.96" steps="1134710"/></proof>
         </goal>
         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="1.23" steps="906188"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="yy_invol&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="get_equiv_circuits">
        <goal name="yy_invol&#39;vc.0.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="5"><result status="valid" time="3.36" steps="1132470"/></proof>
        </goal>
        <goal name="yy_invol&#39;vc.0.0.0.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="5"><result status="valid" time="2.03" steps="966898"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="yy_invol&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.42" steps="935889"/></proof>
     </goal>
     <goal name="yy_invol&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.32" steps="935921"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="yy_invol&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="2.05" steps="934723"/></proof>
    </goal>
    <goal name="yy_invol&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.26" steps="874857"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="yy_invol&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="5"><result status="valid" time="2.28" steps="965790"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="swap_invol&#39;vc" expl="VC for swap_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="swap_invol&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.24" steps="875031"/></proof>
  </goal>
  <goal name="swap_invol&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.24" steps="875044"/></proof>
  </goal>
  <goal name="swap_invol&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.23" steps="875046"/></proof>
  </goal>
  <goal name="swap_invol&#39;vc.3" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="to_qc_swap" arg2="(Swap t1 t2 n),t1,t2,n">
   <goal name="swap_invol&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst" arg2="in" arg3="H">
    <goal name="swap_invol&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="swap_invol&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="y" arg2="(path_sem (swap t1 t2 n) x )">
      <goal name="swap_invol&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_comp_rev">
       <goal name="swap_invol&#39;vc.3.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="get_neutral_circ">
        <goal name="swap_invol&#39;vc.3.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="5"><result status="valid" time="1.43" steps="875129"/></proof>
        </goal>
        <goal name="swap_invol&#39;vc.3.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.60"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="swap_invol&#39;vc.3.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.90"/></proof>
       </goal>
       <goal name="swap_invol&#39;vc.3.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.44" steps="875127"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="swap_invol&#39;vc.3.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="5"><result status="valid" time="1.49" steps="875136"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="swap_invol&#39;vc.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.40" steps="875129"/></proof>
     </goal>
     <goal name="swap_invol&#39;vc.3.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.27" steps="875129"/></proof>
     </goal>
     <goal name="swap_invol&#39;vc.3.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.27" steps="875127"/></proof>
     </goal>
     <goal name="swap_invol&#39;vc.3.0.0.4" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.42" steps="875127"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="swap_invol&#39;vc.3.0.1" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.19" steps="875129"/></proof>
    </goal>
    <goal name="swap_invol&#39;vc.3.0.2" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.20" steps="875129"/></proof>
    </goal>
    <goal name="swap_invol&#39;vc.3.0.3" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.20" steps="875127"/></proof>
    </goal>
    <goal name="swap_invol&#39;vc.3.0.4" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.26" steps="875127"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cnot_invol&#39;vc" expl="VC for cnot_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cnot_invol&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.19" steps="875346"/></proof>
  </goal>
  <goal name="cnot_invol&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.42" steps="875359"/></proof>
  </goal>
  <goal name="cnot_invol&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.34" steps="875361"/></proof>
  </goal>
  <goal name="cnot_invol&#39;vc.3" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="to_qc_cnot" arg2="(Cnot co t n),co,t,n">
   <goal name="cnot_invol&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst" arg2="in" arg3="H">
    <goal name="cnot_invol&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="cnot_invol&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="y" arg2="(path_sem (cnot co t n) x)">
      <goal name="cnot_invol&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_comp_rev">
       <goal name="cnot_invol&#39;vc.3.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="get_neutral_circ">
        <goal name="cnot_invol&#39;vc.3.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="5"><result status="valid" time="1.45" steps="875444"/></proof>
        </goal>
        <goal name="cnot_invol&#39;vc.3.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.81"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cnot_invol&#39;vc.3.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.83"/></proof>
       </goal>
       <goal name="cnot_invol&#39;vc.3.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.47" steps="875442"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cnot_invol&#39;vc.3.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="5"><result status="valid" time="1.40" steps="875451"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cnot_invol&#39;vc.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.22" steps="875444"/></proof>
     </goal>
     <goal name="cnot_invol&#39;vc.3.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.25" steps="875444"/></proof>
     </goal>
     <goal name="cnot_invol&#39;vc.3.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.21" steps="875442"/></proof>
     </goal>
     <goal name="cnot_invol&#39;vc.3.0.0.4" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.19" steps="875442"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cnot_invol&#39;vc.3.0.1" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.20" steps="875444"/></proof>
    </goal>
    <goal name="cnot_invol&#39;vc.3.0.2" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.46" steps="875444"/></proof>
    </goal>
    <goal name="cnot_invol&#39;vc.3.0.3" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.24" steps="875442"/></proof>
    </goal>
    <goal name="cnot_invol&#39;vc.3.0.4" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.33" steps="875442"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="toffoli_invol&#39;vc" expl="VC for toffoli_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="toffoli_invol&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.40" steps="875720"/></proof>
  </goal>
  <goal name="toffoli_invol&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.38" steps="875733"/></proof>
  </goal>
  <goal name="toffoli_invol&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.18" steps="875746"/></proof>
  </goal>
  <goal name="toffoli_invol&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.40" steps="875748"/></proof>
  </goal>
  <goal name="toffoli_invol&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.40" steps="875751"/></proof>
  </goal>
  <goal name="toffoli_invol&#39;vc.5" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.41" steps="875754"/></proof>
  </goal>
  <goal name="toffoli_invol&#39;vc.6" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="to_qc_toffoli" arg2="(Toffoli c1 c2 t n),c1,c2,t,n">
   <goal name="toffoli_invol&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="y" arg2="(path_sem (to_qc (Toffoli c1 c2 t n)) x)">
    <goal name="toffoli_invol&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="toffoli_invol&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_comp_rev">
      <goal name="toffoli_invol&#39;vc.6.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="get_neutral_circ">
       <goal name="toffoli_invol&#39;vc.6.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="1.46" steps="875876"/></proof>
       </goal>
       <goal name="toffoli_invol&#39;vc.6.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="toffoli_invol&#39;vc.6.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="(--)&#39;spec3">
         <goal name="toffoli_invol&#39;vc.6.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="4.46" steps="1431726"/></proof>
         </goal>
         <goal name="toffoli_invol&#39;vc.6.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="2.08" steps="1153565"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="toffoli_invol&#39;vc.6.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="toffoli_invol&#39;vc.6.0.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="4.30" steps="1431726"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="toffoli_invol&#39;vc.6.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.37" steps="875874"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="toffoli_invol&#39;vc.6.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.46" steps="875876"/></proof>
     </goal>
     <goal name="toffoli_invol&#39;vc.6.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.40" steps="875876"/></proof>
     </goal>
     <goal name="toffoli_invol&#39;vc.6.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.38" steps="875876"/></proof>
     </goal>
     <goal name="toffoli_invol&#39;vc.6.0.0.4" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.42" steps="875874"/></proof>
     </goal>
     <goal name="toffoli_invol&#39;vc.6.0.0.5" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.42" steps="875874"/></proof>
     </goal>
     <goal name="toffoli_invol&#39;vc.6.0.0.6" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.34" steps="875874"/></proof>
     </goal>
     <goal name="toffoli_invol&#39;vc.6.0.0.7" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.37" steps="875874"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="toffoli_invol&#39;vc.6.0.1" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="1.40" steps="875883"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="fredkin_invol&#39;vc" expl="VC for fredkin_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fredkin_invol&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.39" steps="876161"/></proof>
  </goal>
  <goal name="fredkin_invol&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.40" steps="876174"/></proof>
  </goal>
  <goal name="fredkin_invol&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.43" steps="876187"/></proof>
  </goal>
  <goal name="fredkin_invol&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.44" steps="876189"/></proof>
  </goal>
  <goal name="fredkin_invol&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.45" steps="876192"/></proof>
  </goal>
  <goal name="fredkin_invol&#39;vc.5" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.43" steps="876195"/></proof>
  </goal>
  <goal name="fredkin_invol&#39;vc.6" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="to_qc_fredkin" arg2="(Fredkin c t1 t2 n),c,t1,t2,n">
   <goal name="fredkin_invol&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="y" arg2="(path_sem (to_qc (Fredkin c t1 t2 n)) x)">
    <goal name="fredkin_invol&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="fredkin_invol&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_comp_rev">
      <goal name="fredkin_invol&#39;vc.6.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="get_neutral_circ">
       <goal name="fredkin_invol&#39;vc.6.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="1.47" steps="876295"/></proof>
       </goal>
       <goal name="fredkin_invol&#39;vc.6.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="fredkin_invol&#39;vc.6.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="5"><result status="valid" time="4.39" steps="1431778"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="fredkin_invol&#39;vc.6.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="fredkin_invol&#39;vc.6.0.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="4.46" steps="1432174"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="fredkin_invol&#39;vc.6.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.43" steps="876293"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="fredkin_invol&#39;vc.6.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.46" steps="876295"/></proof>
     </goal>
     <goal name="fredkin_invol&#39;vc.6.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.44" steps="876295"/></proof>
     </goal>
     <goal name="fredkin_invol&#39;vc.6.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.20" steps="876295"/></proof>
     </goal>
     <goal name="fredkin_invol&#39;vc.6.0.0.4" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.40" steps="876293"/></proof>
     </goal>
     <goal name="fredkin_invol&#39;vc.6.0.0.5" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.41" steps="876293"/></proof>
     </goal>
     <goal name="fredkin_invol&#39;vc.6.0.0.6" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.40" steps="876293"/></proof>
     </goal>
     <goal name="fredkin_invol&#39;vc.6.0.0.7" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.37" steps="876293"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="fredkin_invol&#39;vc.6.0.1" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="1.38" steps="876302"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_pre&#39;vc" expl="VC for reverse_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="reverse_pre&#39;vc.0" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(build_correct c)">
   <goal name="reverse_pre&#39;vc.0.0" expl="asserted formula" proved="true">
   <proof prover="5"><result status="valid" time="3.51" steps="1152970"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.71"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="3.50" steps="1153066"/></proof>
  </goal>
  <goal name="reverse_pre&#39;vc.2" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(build_correct c)">
   <goal name="reverse_pre&#39;vc.2.0" expl="asserted formula" proved="true">
   <proof prover="5"><result status="valid" time="3.52" steps="1153172"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.45"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="3.52" steps="1153232"/></proof>
  </goal>
  <goal name="reverse_pre&#39;vc.4" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(build_correct c)">
   <goal name="reverse_pre&#39;vc.4.0" expl="asserted formula" proved="true">
   <proof prover="5"><result status="valid" time="3.47" steps="1152992"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.4.1" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(ancillas_pre c = max (ancillas_pre x1) (ancillas_pre x))">
    <goal name="reverse_pre&#39;vc.4.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="1.49"/></proof>
    </goal>
    <goal name="reverse_pre&#39;vc.4.1.1" expl="precondition" proved="true">
    <proof prover="5"><result status="valid" time="3.27" steps="1157017"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="2.42" steps="937713"/></proof>
  </goal>
  <goal name="reverse_pre&#39;vc.6" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(build_correct c)">
   <goal name="reverse_pre&#39;vc.6.0" expl="asserted formula" proved="true">
   <proof prover="5"><result status="valid" time="3.42" steps="1156065"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.6.1" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(ancillas_pre c = max (ancillas_pre x1) (ancillas_pre x))">
    <goal name="reverse_pre&#39;vc.6.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="1.48"/></proof>
    </goal>
    <goal name="reverse_pre&#39;vc.6.1.1" expl="precondition" proved="true">
    <proof prover="5"><result status="valid" time="3.20" steps="1160193"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.7" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="2.46" steps="938139"/></proof>
  </goal>
  <goal name="reverse_pre&#39;vc.8" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(build_correct c)">
   <goal name="reverse_pre&#39;vc.8.0" expl="asserted formula" proved="true">
   <proof prover="5"><result status="valid" time="3.50" steps="1152827"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.8.1" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(ancillas_pre c = (ancillas_pre x1) +&#39; (ancillas_pre x))">
    <goal name="reverse_pre&#39;vc.8.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="1.50"/></proof>
    </goal>
    <goal name="reverse_pre&#39;vc.8.1.1" expl="precondition" proved="true">
    <proof prover="5"><result status="valid" time="3.51" steps="1155337"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.9" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="2.39" steps="937703"/></proof>
  </goal>
  <goal name="reverse_pre&#39;vc.10" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(build_correct c)">
   <goal name="reverse_pre&#39;vc.10.0" expl="asserted formula" proved="true">
   <proof prover="5"><result status="valid" time="3.46" steps="1156042"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.10.1" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(ancillas_pre c = (ancillas_pre x1) +&#39; (ancillas_pre x))">
    <goal name="reverse_pre&#39;vc.10.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="1.68"/></proof>
    </goal>
    <goal name="reverse_pre&#39;vc.10.1.1" expl="precondition" proved="true">
    <proof prover="5"><result status="valid" time="3.40" steps="1158583"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.11" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="2.43" steps="938131"/></proof>
  </goal>
  <goal name="reverse_pre&#39;vc.12" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="reverse_pre&#39;vc.12.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.34" steps="936520"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.45" steps="937706"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.2" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.50" steps="937706"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.3" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.56" steps="937706"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.4" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.49" steps="937706"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.5" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.40" steps="937706"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.6" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.34" steps="936520"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.7" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.46" steps="937693"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.8" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.13" steps="937693"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.9" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.30" steps="936520"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.10" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.31" steps="936520"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.11" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.30" steps="936520"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.12" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.35" steps="936520"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.13" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.31" steps="936520"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.14" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.38" steps="936520"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.15" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.34" steps="936520"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.16" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.35" steps="936529"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.17" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.33" steps="936529"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.18" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.33" steps="936533"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.19" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.42" steps="936533"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.20" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.56" steps="1158391"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.21" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.95" steps="1171917"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.22" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.70" steps="966549"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.23" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.54" steps="938565"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.24" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.34" steps="936525"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.13" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="reverse_pre&#39;vc.13.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.53" steps="891127"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.52" steps="1156058"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.2" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.49" steps="1155607"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.3" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.57" steps="1156074"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.4" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.38" steps="1155837"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.5" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.28" steps="1155835"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.6" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.55" steps="891127"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.7" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.49" steps="1155408"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.8" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.44" steps="1155622"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.9" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.49" steps="891127"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.10" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.49" steps="891127"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.11" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.55" steps="891127"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.12" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.53" steps="891127"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.13" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.51" steps="891127"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.14" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.55" steps="891127"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.15" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.52" steps="891127"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.16" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.53" steps="891130"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.17" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.54" steps="891130"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.18" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.55" steps="891134"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.19" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.55" steps="891134"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.20" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.54" steps="1158936"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.21" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.47" steps="1159626"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.22" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.20" steps="1162027"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.23" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.65" steps="1163621"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.24" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.54" steps="891126"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.14" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="reverse_pre&#39;vc.14.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.53" steps="891147"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.49"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.2" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.45"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.3" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.43"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.4" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.38"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.5" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.40"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.6" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.57" steps="891147"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.7" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H1">
    <goal name="reverse_pre&#39;vc.14.7.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H">
     <goal name="reverse_pre&#39;vc.14.7.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.7.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="4.32" steps="1426390"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.8" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H1">
    <goal name="reverse_pre&#39;vc.14.8.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H">
     <goal name="reverse_pre&#39;vc.14.8.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.8.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="4.31" steps="1426260"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.9" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.58" steps="891147"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.10" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="reverse_pre&#39;vc.14.10.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H1">
     <goal name="reverse_pre&#39;vc.14.10.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.10.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="1.95" steps="1154218"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.11" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.53" steps="891147"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.12" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="reverse_pre&#39;vc.14.12.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H1">
     <goal name="reverse_pre&#39;vc.14.12.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.12.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="2.01" steps="1154218"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.13" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="reverse_pre&#39;vc.14.13.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H1">
     <goal name="reverse_pre&#39;vc.14.13.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.13.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="2.00" steps="1154218"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.14" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.57" steps="891147"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.15" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="reverse_pre&#39;vc.14.15.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H1">
     <goal name="reverse_pre&#39;vc.14.15.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.15.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="1.96" steps="1154218"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.16" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="reverse_pre&#39;vc.14.16.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H1">
     <goal name="reverse_pre&#39;vc.14.16.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.16.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="1.96" steps="1154231"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.17" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="reverse_pre&#39;vc.14.17.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H1">
     <goal name="reverse_pre&#39;vc.14.17.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.17.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="1.99" steps="1154231"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.18" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="reverse_pre&#39;vc.14.18.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H1">
     <goal name="reverse_pre&#39;vc.14.18.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.18.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="1.99" steps="1154235"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.19" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="reverse_pre&#39;vc.14.19.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H1">
     <goal name="reverse_pre&#39;vc.14.19.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.19.0.0.0" expl="postcondition" proved="true">
      <transf name="instantiate" proved="true" arg1="size_pre&#39;def12" arg2="c">
       <goal name="reverse_pre&#39;vc.14.19.0.0.0.0" expl="postcondition" proved="true">
       <transf name="instantiate" proved="true" arg1="size_pre&#39;def8" arg2="c">
        <goal name="reverse_pre&#39;vc.14.19.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="instantiate" proved="true" arg1="size_pre&#39;def2" arg2="c">
         <goal name="reverse_pre&#39;vc.14.19.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="instantiate" proved="true" arg1="size_pre&#39;def" arg2="c">
          <goal name="reverse_pre&#39;vc.14.19.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="instantiate" proved="true" arg1="size_pre&#39;def15" arg2="c">
           <goal name="reverse_pre&#39;vc.14.19.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <proof prover="5"><result status="valid" time="1.99" steps="1154477"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.20" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="reverse_pre&#39;vc.14.20.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="size_pre&#39;def23" arg2="result">
     <goal name="reverse_pre&#39;vc.14.20.0.0" expl="postcondition" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="reverse_pre&#39;vc.14.20.0.0.0" expl="destruct premise" proved="true">
      <proof prover="5"><result status="valid" time="3.37" steps="1429326"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.14.20.0.0.1" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Hinst" arg2="with" arg3="reverse_pre&#39;result&#39;unused&#39;unused5,x1,x">
       <goal name="reverse_pre&#39;vc.14.20.0.0.1.0" expl="postcondition" proved="true">
       <transf name="instantiate" proved="true" arg1="size_pre&#39;def23" arg2="c">
        <goal name="reverse_pre&#39;vc.14.20.0.0.1.0.0" expl="postcondition" proved="true">
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="reverse_pre&#39;vc.14.20.0.0.1.0.0.0" expl="destruct premise" proved="true">
         <proof prover="5"><result status="valid" time="3.49" steps="1429132"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.14.20.0.0.1.0.0.1" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="Hinst" arg2="with" arg3="x2,x1,x">
          <goal name="reverse_pre&#39;vc.14.20.0.0.1.0.0.1.0" expl="postcondition" proved="true">
          <proof prover="5"><result status="valid" time="1.59" steps="1155121"/></proof>
          </goal>
          <goal name="reverse_pre&#39;vc.14.20.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="1.60" steps="1155121"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="reverse_pre&#39;vc.14.20.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.59" steps="1155050"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.21" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="reverse_pre&#39;vc.14.21.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="size_pre&#39;def22" arg2="result">
     <goal name="reverse_pre&#39;vc.14.21.0.0" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="size_pre&#39;def22" arg2="c">
      <goal name="reverse_pre&#39;vc.14.21.0.0.0" expl="postcondition" proved="true">
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="reverse_pre&#39;vc.14.21.0.0.0.0" expl="destruct premise" proved="true">
       <proof prover="5"><result status="valid" time="3.58" steps="1429565"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.14.21.0.0.0.1" expl="postcondition" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst1">
        <goal name="reverse_pre&#39;vc.14.21.0.0.0.1.0" expl="destruct premise" proved="true">
        <proof prover="5"><result status="valid" time="3.49" steps="1429939"/></proof>
        </goal>
        <goal name="reverse_pre&#39;vc.14.21.0.0.0.1.1" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="Hinst" arg2="with" arg3="x3,x2,x1,x">
         <goal name="reverse_pre&#39;vc.14.21.0.0.0.1.1.0" expl="postcondition" proved="true">
         <proof prover="1"><result status="valid" time="1.29"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.14.21.0.0.0.1.1.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="1.61" steps="1155170"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.22" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="reverse_pre&#39;vc.14.22.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="size_pre&#39;def21" arg2="result">
     <goal name="reverse_pre&#39;vc.14.22.0.0" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="size_pre&#39;def21" arg2="c">
      <goal name="reverse_pre&#39;vc.14.22.0.0.0" expl="postcondition" proved="true">
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="reverse_pre&#39;vc.14.22.0.0.0.0" expl="destruct premise" proved="true">
       <proof prover="5"><result status="valid" time="3.84" steps="1432569"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.14.22.0.0.0.1" expl="postcondition" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst1">
        <goal name="reverse_pre&#39;vc.14.22.0.0.0.1.0" expl="destruct premise" proved="true">
        <proof prover="5"><result status="valid" time="3.50" steps="1432798"/></proof>
        </goal>
        <goal name="reverse_pre&#39;vc.14.22.0.0.0.1.1" expl="postcondition" proved="true">
        <proof prover="5"><result status="valid" time="3.60" steps="1436813"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.23" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="reverse_pre&#39;vc.14.23.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="size_pre&#39;def20" arg2="c">
     <goal name="reverse_pre&#39;vc.14.23.0.0" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="size_pre&#39;def20" arg2="result">
      <goal name="reverse_pre&#39;vc.14.23.0.0.0" expl="postcondition" proved="true">
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="reverse_pre&#39;vc.14.23.0.0.0.0" expl="destruct premise" proved="true">
       <proof prover="5"><result status="valid" time="4.08" steps="1432090"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.14.23.0.0.0.1" expl="postcondition" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst1">
        <goal name="reverse_pre&#39;vc.14.23.0.0.0.1.0" expl="destruct premise" proved="true">
        <proof prover="5"><result status="valid" time="4.06" steps="1431953"/></proof>
        </goal>
        <goal name="reverse_pre&#39;vc.14.23.0.0.0.1.1" expl="postcondition" proved="true">
        <proof prover="5"><result status="valid" time="3.44" steps="1435929"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.24" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.51" steps="891146"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.15" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="reverse_pre&#39;vc.15.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.32" steps="936580"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.63"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.2" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.61"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.3" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.67"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.4" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.38"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.5" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.63"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.6" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.36" steps="936580"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.7" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.38"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.8" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.65"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.9" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.33" steps="936580"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.10" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.44" steps="936580"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.11" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.37" steps="936580"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.12" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.35" steps="936580"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.13" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.37" steps="936580"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.14" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.37" steps="936580"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.15" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.36" steps="936580"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.16" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.35" steps="936589"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.17" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.40" steps="936589"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.18" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.33" steps="936593"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.19" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.34" steps="936593"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.20" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="reverse_pre&#39;vc.15.20.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="ancillas_pre&#39;def24" arg2="result">
     <goal name="reverse_pre&#39;vc.15.20.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Hinst" arg2="with" arg3="reverse_pre&#39;result&#39;unused&#39;unused5,x1,x">
      <goal name="reverse_pre&#39;vc.15.20.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="1.67" steps="1155080"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.15.20.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="3.65" steps="1429336"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.15.20.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.65" steps="1155080"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.15.21" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="reverse_pre&#39;vc.15.21.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="ancillas_pre&#39;def23" arg2="result">
     <goal name="reverse_pre&#39;vc.15.21.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Hinst" arg2="with" arg3="reverse_pre&#39;result&#39;unused&#39;unused4,x2,x1,x">
      <goal name="reverse_pre&#39;vc.15.21.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="1.64" steps="1155093"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.15.21.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="3.58" steps="1429628"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.15.21.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.66" steps="1155093"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.15.22" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="reverse_pre&#39;vc.15.22.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="ancillas_pre&#39;def22" arg2="result">
     <goal name="reverse_pre&#39;vc.15.22.0.0" expl="postcondition" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="reverse_pre&#39;vc.15.22.0.0.0" expl="destruct premise" proved="true">
      <proof prover="5"><result status="valid" time="3.64" steps="1432447"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.15.22.0.0.1" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="3.69" steps="1436558"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.15.23" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="reverse_pre&#39;vc.15.23.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="ancillas_pre&#39;def21" arg2="result">
     <goal name="reverse_pre&#39;vc.15.23.0.0" expl="postcondition" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="reverse_pre&#39;vc.15.23.0.0.0" expl="destruct premise" proved="true">
      <proof prover="5"><result status="valid" time="3.13" steps="1432120"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.15.23.0.0.1" expl="postcondition" proved="true">
      <proof prover="1"><result status="valid" time="1.32"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.15.24" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.35" steps="936585"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.16" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="reverse_pre&#39;vc.16.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="width&#39;spec">
    <goal name="reverse_pre&#39;vc.16.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="pre_to_qc">
     <goal name="reverse_pre&#39;vc.16.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="width&#39;spec">
      <goal name="reverse_pre&#39;vc.16.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="pre_to_qc">
       <goal name="reverse_pre&#39;vc.16.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="5"><result status="valid" time="2.03" steps="1162138"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.16.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.99" steps="1162138"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="reverse_pre&#39;vc.16.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.93" steps="1162138"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="3.33" steps="1163470"/></proof>
  </goal>
  <goal name="reverse_pre&#39;vc.18" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="reverse_pre&#39;vc.18.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="ancilla_free&#39;spec">
    <goal name="reverse_pre&#39;vc.18.0.0" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="4.07" steps="1445709"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.19" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H3">
   <goal name="reverse_pre&#39;vc.19.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.70" steps="986361"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.52" steps="1166960"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.2" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.54" steps="1166984"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.3" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.38" steps="1167235"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.4" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.37" steps="1166962"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.5" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.57" steps="1166960"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.6" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.37" steps="966214"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.7" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Rzp 2))">
    <goal name="reverse_pre&#39;vc.19.7.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="reverse_pre&#39;vc.19.7.0.0" expl="postcondition" proved="true">
     <proof prover="5"><result status="valid" time="3.38" steps="1176456"/></proof>
     </goal>
     <goal name="reverse_pre&#39;vc.19.7.0.1" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Rzp 2))">
      <goal name="reverse_pre&#39;vc.19.7.0.1.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="3.39" steps="1176702"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.7.0.1.1" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(to_qc (Rzp 2))" arg2="(rewrite_s())">
       <goal name="reverse_pre&#39;vc.19.7.0.1.1.0" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.46" steps="966501"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.7.0.1.1.1" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="3.68" steps="1210001"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.19.7.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.34" steps="966240"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.19.7.1" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(to_qc (Rzp 2))" arg2="(rewrite_s())">
     <goal name="reverse_pre&#39;vc.19.7.1.0" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.16" steps="966467"/></proof>
     </goal>
     <goal name="reverse_pre&#39;vc.19.7.1.1" expl="equality hypothesis" proved="true">
     <proof prover="5"><result status="valid" time="4.01" steps="1208573"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.19.7.2" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="2.31" steps="966206"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.19.8" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Rzp 3))">
    <goal name="reverse_pre&#39;vc.19.8.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="reverse_pre&#39;vc.19.8.0.0" expl="postcondition" proved="true">
     <proof prover="5"><result status="valid" time="3.59" steps="1176423"/></proof>
     </goal>
     <goal name="reverse_pre&#39;vc.19.8.0.1" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Rzp 3))">
      <goal name="reverse_pre&#39;vc.19.8.0.1.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="3.33" steps="1176705"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.8.0.1.1" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(to_qc (Rzp 3))" arg2="(rewrite_t())">
       <goal name="reverse_pre&#39;vc.19.8.0.1.1.0" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.56" steps="966501"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.8.0.1.1.1" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="3.98" steps="1210004"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.19.8.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.41" steps="966240"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.19.8.1" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(to_qc (Rzp 3))" arg2="(rewrite_t())">
     <goal name="reverse_pre&#39;vc.19.8.1.0" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.18" steps="966467"/></proof>
     </goal>
     <goal name="reverse_pre&#39;vc.19.8.1.1" expl="equality hypothesis" proved="true">
     <proof prover="5"><result status="valid" time="3.34" steps="1208572"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.19.8.2" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="2.51" steps="966206"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.19.9" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.21" steps="966214"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.10" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.37" steps="966212"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.11" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.35" steps="966214"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.12" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.16" steps="1180327"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.13" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Toffoli 0 1 2 3 ))">
    <goal name="reverse_pre&#39;vc.19.13.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="reverse_pre&#39;vc.19.13.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Toffoli 0 1 2 3 ))">
      <goal name="reverse_pre&#39;vc.19.13.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="2.95" steps="1164931"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.13.0.0.1" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="H4">
       <goal name="reverse_pre&#39;vc.19.13.0.0.1.0" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="(to_qc Bricks_Toffoli )" arg2="(bricks_toffoli )">
        <goal name="reverse_pre&#39;vc.19.13.0.0.1.0.0" expl="rewrite premises" proved="true">
        <transf name="replace" proved="true" arg1="(to_qc (Toffoli 0 1 2 3))" arg2="(toffoli 0 1 2 3)">
         <goal name="reverse_pre&#39;vc.19.13.0.0.1.0.0.0" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="1.17" steps="876684"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.13.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="assert" proved="true" arg1="(  (Toffoli 0 1 2 3) = pre (toffoli 0 1 2 3))">
          <goal name="reverse_pre&#39;vc.19.13.0.0.1.0.0.1.0" expl="asserted formula" proved="true">
          <proof prover="5"><result status="valid" time="3.54" steps="1165191"/></proof>
          </goal>
          <goal name="reverse_pre&#39;vc.19.13.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
          <proof prover="5"><result status="valid" time="2.39" steps="937959"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.19.13.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="2.42" steps="937932"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.19.13.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.48" steps="965905"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="reverse_pre&#39;vc.19.13.0.1" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Toffoli 0 1 2 3 ))">
      <goal name="reverse_pre&#39;vc.19.13.0.1.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="in" arg3="H" arg4="with" arg5="(to_qc (Toffoli 0 1 2 3 ))">
       <goal name="reverse_pre&#39;vc.19.13.0.1.0.0" expl="postcondition" proved="true">
       <proof prover="5"><result status="valid" time="3.37" steps="1164931"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.13.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.55" steps="1165275"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.13.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.53" steps="965897"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.19.13.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="3.55" steps="1165275"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.13.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.46" steps="965897"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.19.13.1" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="3.49" steps="1164427"/></proof>
    </goal>
    <goal name="reverse_pre&#39;vc.19.13.2" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="2.52" steps="965863"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.19.14" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Fredkin 0 1 2 3 ))">
    <goal name="reverse_pre&#39;vc.19.14.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="reverse_pre&#39;vc.19.14.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Fredkin 0 1 2 3 ))">
      <goal name="reverse_pre&#39;vc.19.14.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="3.35" steps="1164931"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.14.0.0.1" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="H4">
       <goal name="reverse_pre&#39;vc.19.14.0.0.1.0" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="(to_qc Bricks_Fredkin )" arg2="(bricks_fredkin )
">
        <goal name="reverse_pre&#39;vc.19.14.0.0.1.0.0" expl="rewrite premises" proved="true">
        <transf name="assert" proved="true" arg1="(  (Fredkin 0 1 2 3) = pre (fredkin 0 1 2 3))">
         <goal name="reverse_pre&#39;vc.19.14.0.0.1.0.0.0" expl="asserted formula" proved="true">
         <proof prover="5"><result status="valid" time="3.54" steps="1165191"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.14.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="2.22" steps="965927"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.19.14.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="2.24" steps="937932"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.19.14.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.19" steps="965905"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="reverse_pre&#39;vc.19.14.0.1" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Fredkin 0 1 2 3 ))">
      <goal name="reverse_pre&#39;vc.19.14.0.1.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="in" arg3="H" arg4="with" arg5="(to_qc (Fredkin 0 1 2 3 ))">
       <goal name="reverse_pre&#39;vc.19.14.0.1.0.0" expl="postcondition" proved="true">
       <proof prover="5"><result status="valid" time="3.11" steps="1164931"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.14.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.57" steps="1165028"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.14.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.55" steps="965897"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.19.14.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="3.51" steps="1165028"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.14.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.45" steps="965897"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.19.14.1" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="3.15" steps="1164674"/></proof>
    </goal>
    <goal name="reverse_pre&#39;vc.19.14.2" expl="rewrite premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="reverse_pre&#39;vc.19.14.2.0" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.46" steps="965863"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.19.15" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.34" steps="966218"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.16" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.17" steps="1162982"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.17" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.16" steps="1163205"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.18" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.59" steps="1163567"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.19" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.17" steps="1163528"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.20" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="to_qc_place" arg2="c,x3,x2,x1">
    <goal name="reverse_pre&#39;vc.19.20.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="reverse_pre&#39;vc.19.20.0.0" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="to_qc_place" arg2="result,o5,x2,x1">
      <goal name="reverse_pre&#39;vc.19.20.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Hinst">
       <goal name="reverse_pre&#39;vc.19.20.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket(ket_to_bv x))">
        <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="place_kron_bv">
         <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="place_kron_bv">
          <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
           <transf name="replace" proved="true" arg1="y" arg2="( kronecker
  (kronecker (bv_to_ket (hpart (ket_to_bv x) x2))
   (path_sem (to_qc x3)
    (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc x3))))))
  (bv_to_ket (tpart (ket_to_bv x) (x2 +&#39; width (to_qc x3)))))">
            <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
             <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
             <transf name="rewrite" proved="true" arg1="place_kron_exp">
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
               <transf name="instantiate" proved="true" arg1="H6" arg2="(bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc x3)))),(path_sem (to_qc x3)
     (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc x3)))))">
                <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                <transf name="split_all_full" proved="true" >
                 <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                 <transf name="rewrite" proved="true" arg1="Hinst1">
                  <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
                   <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                   <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                    <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                    <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                     <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                     <transf name="replace" proved="true" arg1="(concat1
   (concat1 (hpart (ket_to_bv x) x2)
    (htpart (ket_to_bv x) x2 (width (to_qc x3))))
   (tpart (ket_to_bv x) (x2 +&#39; width (to_qc x3))))" arg2="(ket_to_bv x)">
                      <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                      <proof prover="5"><result status="valid" time="1.61" steps="1155398"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                      <transf name="apply" proved="true" arg1="bv_decomp_hhtt_rev">
                       <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="3.92" steps="1442829"/></proof>
                       </goal>
                       <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="4.01" steps="1442730"/></proof>
                       </goal>
                       <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="3.94" steps="1450737"/></proof>
                       </goal>
                       <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.3" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="1.75" steps="1155398"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="3.67" steps="1444305"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="3.59" steps="1445286"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.66" steps="1155398"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="3.08" steps="1170293"/></proof>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="3.06" steps="1172486"/></proof>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="3.11" steps="1172732"/></proof>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="3.21" steps="1180284"/></proof>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
               <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.5.0" expl="apply premises" proved="true">
               <proof prover="5"><result status="valid" time="2.92" steps="1183353"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="5"><result status="valid" time="1.22" steps="877352"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1" expl="VC for reverse_pre" proved="true">
           <transf name="replace" proved="true" arg1="y" arg2="( kronecker
  (kronecker (bv_to_ket (hpart (ket_to_bv x) x2))
   (path_sem (to_qc o5)
    (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o5))))))
  (bv_to_ket (tpart (ket_to_bv x) (x2 +&#39; width (to_qc o5)))) )">
            <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0" expl="VC for reverse_pre" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
             <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0" expl="VC for reverse_pre" proved="true">
             <transf name="rewrite" proved="true" arg1="place_kron_exp">
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0" expl="VC for reverse_pre" proved="true">
              <transf name="replace" proved="true" arg1="(path_sem (to_qc x3)
    (path_sem (to_qc o5)
     (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o5))))))" arg2="(  ( (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o5))))))
">
               <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0" expl="VC for reverse_pre" proved="true">
               <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
                <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                 <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                 <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                  <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                  <transf name="replace" proved="true" arg1="(concat1
   (concat1 (hpart (ket_to_bv x) x2)
    (htpart (ket_to_bv x) x2 (width (to_qc o5))))
   (tpart (ket_to_bv x) (x2 +&#39; width (to_qc o5))))" arg2="(ket_to_bv x)
">
                   <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                   <proof prover="5"><result status="valid" time="1.26" steps="877343"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                   <transf name="apply" proved="true" arg1="bv_decomp_hhtt_rev">
                    <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="3.24" steps="1170714"/></proof>
                    </goal>
                    <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="3.13" steps="1170789"/></proof>
                    </goal>
                    <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.2" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="2.97" steps="1178430"/></proof>
                    </goal>
                    <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.3" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="1.18" steps="877343"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
                <transf name="instantiate" proved="true" arg1="H7" arg2="(  (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o5))))),(path_sem (to_qc o5)
   (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o5)))))
">
                 <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="Hinst">
                   <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.86" steps="1446896"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="2.88" steps="1224839"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.76" steps="1447968"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.73" steps="1155468"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="2.72" steps="1170714"/></proof>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="2.84" steps="1172702"/></proof>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.3" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="2.88" steps="1172818"/></proof>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.4" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="2.84" steps="1180537"/></proof>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.5" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
               <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.5.0" expl="apply premises" proved="true">
               <proof prover="5"><result status="valid" time="2.92" steps="1183135"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="5"><result status="valid" time="1.10" steps="877352"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="3.12" steps="1165001"/></proof>
          </goal>
          <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="3.15" steps="1167181"/></proof>
          </goal>
          <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="3.08" steps="1170853"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.09" steps="1165001"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.16" steps="1167322"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.28" steps="1170853"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="2.28" steps="938895"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="reverse_pre&#39;vc.19.20.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.44" steps="877266"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.20.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.48" steps="877266"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.20.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.42" steps="1165001"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.20.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.55" steps="1164975"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="reverse_pre&#39;vc.19.20.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.37" steps="877190"/></proof>
     </goal>
     <goal name="reverse_pre&#39;vc.19.20.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.14" steps="877190"/></proof>
     </goal>
     <goal name="reverse_pre&#39;vc.19.20.0.3" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="3.37" steps="1164481"/></proof>
     </goal>
     <goal name="reverse_pre&#39;vc.19.20.0.4" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="3.38" steps="1164430"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.19.21" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(to_qc c)" arg2="(cont (to_qc x4) x3 x2 x1)">
    <goal name="reverse_pre&#39;vc.19.21.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(to_qc result)" arg2="(cont (to_qc o4) x3 x2 x1)
">
     <goal name="reverse_pre&#39;vc.19.21.0.0" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(getbv (ket_to_bv x) x3 = 0)">
      <goal name="reverse_pre&#39;vc.19.21.0.0.0" expl="true case (postcondition)" proved="true">
      <proof prover="5"><result status="valid" time="3.41" steps="1179407"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.21.0.0.1" expl="false case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="path_cont_keto">
       <goal name="reverse_pre&#39;vc.19.21.0.0.1.0" expl="false case (postcondition)" proved="true">
       <transf name="instantiate" proved="true" arg1="path_cont_keto" arg2="(to_qc o4),x3,x2,x1,x
">
        <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0" expl="false case (postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="Hinst">
         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
         <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
          <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0" expl="false case (postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="place_kron_bv">
           <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="place_kron_bv">
            <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
             <transf name="replace" proved="true" arg1="y" arg2="( kronecker
  (kronecker (bv_to_ket (hpart (ket_to_bv x) x2))
   (path_sem (to_qc x4)
    (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc x4))))))
  (bv_to_ket (tpart (ket_to_bv x) (x2 +&#39; width (to_qc x4)))))">
              <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
              <transf name="rewrite" proved="true" arg1="cont_kron_one">
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
               <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                <transf name="rewrite" proved="true" arg1="place_kron_exp">
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                 <transf name="replace" proved="true" arg1="(path_sem (to_qc o4)
    (path_sem (to_qc x4)
     (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc x4))))))" arg2="(  (   (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc x4))))))
">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                   <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                    <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                     <transf name="replace" proved="true" arg1="(concat1
   (concat1 (hpart (ket_to_bv x) x2)
    (htpart (ket_to_bv x) x2 (width (to_qc x4))))
   (tpart (ket_to_bv x) (x2 +&#39; width (to_qc x4))))" arg2="(ket_to_bv x)">
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                      <proof prover="5"><result status="valid" time="1.34" steps="877435"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                      <transf name="apply" proved="true" arg1="bv_decomp_hhtt_rev">
                       <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="3.46" steps="1181035"/></proof>
                       </goal>
                       <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="3.52" steps="1180877"/></proof>
                       </goal>
                       <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.0" expl="apply premises" proved="true">
                        <proof prover="5"><result status="valid" time="3.52" steps="1183337"/></proof>
                        </goal>
                        <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.1" expl="apply premises" proved="true">
                        <transf name="replace" proved="true" arg1="( length1 (ket_to_bv x))" arg2="x1">
                         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.1.0" expl="apply premises" proved="true">
                         <proof prover="5"><result status="valid" time="3.59" steps="1183371"/></proof>
                         </goal>
                         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.1.1" expl="equality hypothesis" proved="true">
                         <transf name="apply" proved="true" arg1="ket_to_bv_length">
                          <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.1.1.0" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="1.38" steps="877437"/></proof>
                          </goal>
                          <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.1.1.1" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="3.06" steps="1178894"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.3" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="1.34" steps="877435"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
                   <transf name="instantiate" proved="true" arg1="H6" arg2="bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc x4))),(path_sem (to_qc x4)
   (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc x4)))))
">
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                     <proof prover="5"><result status="valid" time="3.90" steps="1453426"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="3.19" steps="1181035"/></proof>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="3.33" steps="1178946"/></proof>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="3.50" steps="1183458"/></proof>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="3.62" steps="1186429"/></proof>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0" expl="apply premises" proved="true">
                  <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="tpart_length">
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.0" expl="apply premises" proved="true">
                    <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="5"><result status="valid" time="1.37" steps="877466"/></proof>
                     </goal>
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.0.1" expl="equality hypothesis" proved="true">
                     <transf name="apply" proved="true" arg1="ket_to_bv_length">
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.0.1.0" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.27" steps="877437"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.0.1.1" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="3.20" steps="1178894"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.1.0" expl="rewrite premises" proved="true">
                     <proof prover="5"><result status="valid" time="3.41" steps="1185003"/></proof>
                     </goal>
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.1.1" expl="equality hypothesis" proved="true">
                     <transf name="apply" proved="true" arg1="ket_to_bv_length">
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.1.1.0" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.24" steps="877437"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.1.1.1" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="3.18" steps="1178894"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.1" expl="equality hypothesis" proved="true">
                   <transf name="apply" proved="true" arg1="ket_to_bv_length">
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.1.0" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="1.35" steps="877437"/></proof>
                    </goal>
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.1.1" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="3.42" steps="1178894"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.22" steps="1181152"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.24" steps="1183488"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.31" steps="1183342"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.22" steps="1183458"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.16" steps="1186429"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="tpart_length">
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.0.0" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.41" steps="877473"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="ket_to_bv_length">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.0.1.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.37" steps="877437"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.0.1.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.53" steps="1178894"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.1" expl="rewrite premises" proved="true">
                 <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.1.0" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="3.58" steps="1185003"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.1.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="ket_to_bv_length">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.1.1.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.38" steps="877437"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.1.1.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.45" steps="1178894"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="2.15" steps="939162"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="2.03" steps="939162"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.9" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.14" steps="1191825"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.10" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.10.0" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.10.0.0" expl="rewrite premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="tpart_value_b">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.10.0.0.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="get_binary_one" arg2="with" arg3="(width_pre c)">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.10.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.47" steps="1186288"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.10.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.47" steps="1185538"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.10.0.0.0.2" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="1.74"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.10.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="3.41" steps="1183449"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.10.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="3.54" steps="1188204"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="5"><result status="valid" time="1.30" steps="877444"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1" expl="VC for reverse_pre" proved="true">
             <transf name="replace" proved="true" arg1="y" arg2="(kronecker
  (kronecker (bv_to_ket (hpart (ket_to_bv x) x2))
   (path_sem (to_qc o4)
    (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o4))))))
  (bv_to_ket (tpart (ket_to_bv x) (x2 +&#39; width (to_qc o4)))))
">
              <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0" expl="VC for reverse_pre" proved="true">
              <transf name="rewrite" proved="true" arg1="cont_kron_one">
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0" expl="VC for reverse_pre" proved="true">
               <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0" expl="VC for reverse_pre" proved="true">
                <transf name="rewrite" proved="true" arg1="place_kron_exp">
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0" expl="VC for reverse_pre" proved="true">
                 <transf name="replace" proved="true" arg1="(path_sem (to_qc x4)
    (path_sem (to_qc o4)
     (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o4))))))" arg2="((     (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o4))))))
">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                   <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                    <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                     <transf name="replace" proved="true" arg1="(concat1
   (concat1 (hpart (ket_to_bv x) x2)
    (htpart (ket_to_bv x) x2 (width (to_qc o4))))
   (tpart (ket_to_bv x) (x2 +&#39; width (to_qc o4))))" arg2="(ket_to_bv x)
">
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                      <proof prover="5"><result status="valid" time="1.31" steps="877428"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                      <transf name="apply" proved="true" arg1="bv_decomp_hhtt_rev">
                       <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="3.15" steps="1180929"/></proof>
                       </goal>
                       <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="3.26" steps="1181066"/></proof>
                       </goal>
                       <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.0" expl="apply premises" proved="true">
                        <proof prover="5"><result status="valid" time="3.35" steps="1183595"/></proof>
                        </goal>
                        <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.1" expl="apply premises" proved="true">
                        <transf name="replace" proved="true" arg1="( length1 (ket_to_bv x))" arg2="x1">
                         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.1.0" expl="apply premises" proved="true">
                         <proof prover="5"><result status="valid" time="3.35" steps="1178960"/></proof>
                         </goal>
                         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.1.1" expl="equality hypothesis" proved="true">
                         <transf name="apply" proved="true" arg1="ket_to_bv_length">
                          <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.1.1.0" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="1.32" steps="877430"/></proof>
                          </goal>
                          <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.1.1.1" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="3.23" steps="1179257"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.3" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="1.34" steps="877428"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
                   <transf name="instantiate" proved="true" arg1="H7" arg2="(
   (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o4))))),(path_sem (to_qc o4)
   (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o4))))) 
">
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                     <transf name="apply" proved="true" arg1="Hinst">
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="3.98" steps="1454257"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="2.97" steps="1225204"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="3.84" steps="1455354"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.73" steps="1155575"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="3.48" steps="1180929"/></proof>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="3.54" steps="1183151"/></proof>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.3" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="3.51" steps="1183197"/></proof>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.4" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="3.37" steps="1186100"/></proof>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0" expl="apply premises" proved="true">
                  <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="tpart_length">
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.0" expl="apply premises" proved="true">
                    <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="5"><result status="valid" time="1.35" steps="877470"/></proof>
                     </goal>
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.0.1" expl="equality hypothesis" proved="true">
                     <transf name="apply" proved="true" arg1="ket_to_bv_length">
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.0.1.0" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.32" steps="877430"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.0.1.1" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="3.42" steps="1179257"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.1.0" expl="rewrite premises" proved="true">
                     <proof prover="5"><result status="valid" time="3.41" steps="1184623"/></proof>
                     </goal>
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.1.1" expl="equality hypothesis" proved="true">
                     <transf name="apply" proved="true" arg1="ket_to_bv_length">
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.1.1.0" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.38" steps="877430"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.1.1.1" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="3.24" steps="1179257"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.1" expl="equality hypothesis" proved="true">
                   <transf name="apply" proved="true" arg1="ket_to_bv_length">
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.1.0" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="1.36" steps="877430"/></proof>
                    </goal>
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.1.1" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="3.40" steps="1179257"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.43" steps="1180819"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.60" steps="1183416"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.30" steps="1183643"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.4" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.54" steps="1183197"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.5" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.54" steps="1186100"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="tpart_length">
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.0.0" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.26" steps="877470"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="ket_to_bv_length">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.0.1.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.33" steps="877430"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.0.1.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.48" steps="1179257"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.1" expl="rewrite premises" proved="true">
                 <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.1.0" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="3.46" steps="1184623"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.1.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="ket_to_bv_length">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.1.1.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.33" steps="877430"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.1.1.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.54" steps="1179257"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.7" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="2.41" steps="939190"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.8" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="2.22" steps="939195"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.9" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.45" steps="1191957"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.10" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.10.0" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.10.0.0" expl="rewrite premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="tpart_value_b">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.10.0.0.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="get_binary_one" arg2="with" arg3="(width_pre c)">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.10.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.74" steps="1186279"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.10.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.72" steps="1185326"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.10.0.0.0.2" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.02"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.10.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="3.47" steps="1183371"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.10.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="3.53" steps="1188275"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
              <proof prover="5"><result status="valid" time="1.17" steps="877437"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="5"><result status="valid" time="3.07" steps="1175628"/></proof>
            </goal>
            <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="5"><result status="valid" time="3.08" steps="1173003"/></proof>
            </goal>
            <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="ket_to_bv_length">
             <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.3.0" expl="apply premises" proved="true">
             <proof prover="5"><result status="valid" time="1.23" steps="877362"/></proof>
             </goal>
             <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.3.1" expl="apply premises" proved="true">
             <proof prover="5"><result status="valid" time="3.24" steps="1173943"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="2.97" steps="1175628"/></proof>
           </goal>
           <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="3.04" steps="1178531"/></proof>
           </goal>
           <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.3" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="ket_to_bv_length">
            <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.3.0" expl="apply premises" proved="true">
            <proof prover="5"><result status="valid" time="1.19" steps="877362"/></proof>
            </goal>
            <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.3.1" expl="apply premises" proved="true">
            <proof prover="5"><result status="valid" time="3.09" steps="1173943"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="5"><result status="valid" time="2.05" steps="939091"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.09" steps="1175596"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.11" steps="1178054"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.02" steps="1178633"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.4" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.04" steps="1172748"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.5" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="1.15" steps="877362"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.6" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.05" steps="1183332"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="reverse_pre&#39;vc.19.21.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.33" steps="1168800"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.21.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.40" steps="1170376"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.21.0.0.1.3" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.39" steps="1170426"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.21.0.0.1.4" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.39" steps="1170541"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.21.0.0.1.5" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.35" steps="877158"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.21.0.0.1.6" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.31" steps="1175565"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="reverse_pre&#39;vc.19.21.0.1" expl="equality hypothesis" proved="true">
     <proof prover="5"><result status="valid" time="2.96" steps="1164828"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.19.21.1" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="3.12" steps="1165020"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.19.22" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="to_qc_seq" arg2="c,x2,x1">
    <goal name="reverse_pre&#39;vc.19.22.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="to_qc_seq" arg2="result,o2,o3
">
     <goal name="reverse_pre&#39;vc.19.22.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Hinst">
      <goal name="reverse_pre&#39;vc.19.22.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Hinst1">
       <goal name="reverse_pre&#39;vc.19.22.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_comp_">
        <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_comp_">
         <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="path_sem_comp_">
          <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_comp_">
           <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
            <transf name="instantiate" proved="true" arg1="H5" arg2="(path_sem (to_qc x2) x),y
">
             <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
               <transf name="rewrite" proved="true" arg1="Hinst1">
                <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                <transf name="instantiate" proved="true" arg1="H17" arg2="x,(path_sem (to_qc x2) x)">
                 <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                 <transf name="apply" proved="true" arg1="Hinst">
                  <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="3.45" steps="1444265"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="3.48" steps="1445849"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.56" steps="1156066"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="5"><result status="valid" time="3.59" steps="1445395"/></proof>
                </goal>
                <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="5"><result status="valid" time="3.64" steps="1442608"/></proof>
                </goal>
                <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                <proof prover="5"><result status="valid" time="1.50" steps="1156022"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.1" expl="VC for reverse_pre" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.1.0" expl="VC for reverse_pre" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.1.0.0" expl="VC for reverse_pre" proved="true">
              <proof prover="5"><result status="valid" time="3.33" steps="1445537"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="2.84" steps="1173399"/></proof>
           </goal>
           <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="2.81" steps="1170712"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="2.91" steps="1173377"/></proof>
          </goal>
          <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="2.87" steps="1171047"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="2.92" steps="1173670"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="2.91" steps="1171047"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="2.98" steps="1173504"/></proof>
        </goal>
        <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="2.93" steps="1170712"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="reverse_pre&#39;vc.19.22.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.14" steps="877617"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.22.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.16" steps="877617"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.22.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.00" steps="939500"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.19.22.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.15" steps="877617"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.22.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.15" steps="877617"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.22.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.02" steps="939505"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.19.23" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(to_qc c)" arg2="(to_qc x2 // to_qc x1)">
    <goal name="reverse_pre&#39;vc.19.23.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_basis_par">
     <goal name="reverse_pre&#39;vc.19.23.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.19.23.0.0.0" expl="VC for reverse_pre" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="reverse_pre&#39;vc.19.23.0.0.0.0" expl="VC for reverse_pre" proved="true">
       <transf name="replace" proved="true" arg1="x" arg2="(kronecker (bv_to_ket (hpart (ket_to_bv x)(width_pre reverse_pre&#39;result&#39;unused&#39;unused))) (bv_to_ket (tpart (ket_to_bv x) (width_pre reverse_pre&#39;result&#39;unused&#39;unused))))
">
        <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
        <transf name="replace" proved="true" arg1="y" arg2="( kronecker
  (path_sem (to_qc x2) (bv_to_ket (hpart (ket_to_bv x) (width (to_qc x2)))))
  (path_sem (to_qc x1) (bv_to_ket (tpart (ket_to_bv x) (width (to_qc x2))))))">
         <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
         <transf name="replace" proved="true" arg1="(to_qc result)" arg2="(to_qc reverse_pre&#39;result&#39;unused&#39;unused // to_qc reverse_pre&#39;result&#39;unused&#39;unused1)
">
          <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
          <transf name="apply" proved="true" arg1="path_sem_kron">
           <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="3.49" steps="1443789"/></proof>
           </goal>
           <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="4.02" steps="1486139"/></proof>
           </goal>
           <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
            <proof prover="5"><result status="valid" time="3.72" steps="1446897"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
            <proof prover="5"><result status="valid" time="4.18" steps="1489189"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="5"><result status="valid" time="2.54" steps="1224254"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="5"><result status="valid" time="1.40" steps="1155235"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="3.44" steps="1446663"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.19.23.0.0.1" expl="VC for reverse_pre" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="reverse_pre&#39;vc.19.23.0.0.1.0" expl="VC for reverse_pre" proved="true">
       <transf name="replace" proved="true" arg1="(to_qc result)" arg2="(to_qc reverse_pre&#39;result&#39;unused&#39;unused  // to_qc reverse_pre&#39;result&#39;unused&#39;unused1)" arg3="in" arg4="H">
        <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0" expl="VC for reverse_pre" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_basis_par" arg2="in" arg3="H">
         <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0" expl="VC for reverse_pre" proved="true">
         <transf name="replace" proved="true" arg1="y" arg2="(kronecker
  (path_sem (to_qc reverse_pre&#39;result&#39;unused&#39;unused)
   (bv_to_ket (hpart (ket_to_bv x) (width (to_qc reverse_pre&#39;result&#39;unused&#39;unused)))))
  (path_sem (to_qc reverse_pre&#39;result&#39;unused&#39;unused1)
   (bv_to_ket (tpart (ket_to_bv x) (width (to_qc reverse_pre&#39;result&#39;unused&#39;unused))))))
">
          <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0" expl="VC for reverse_pre" proved="true">
          <transf name="replace" proved="true" arg1="x" arg2="(kronecker
   (    (bv_to_ket (hpart (ket_to_bv x) (width (to_qc reverse_pre&#39;result&#39;unused&#39;unused)))))
   (    (bv_to_ket (tpart (ket_to_bv x) (width (to_qc reverse_pre&#39;result&#39;unused&#39;unused))))))
">
           <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
           <transf name="apply" proved="true" arg1="path_sem_kron">
            <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="5"><result status="valid" time="3.98" steps="1447782"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
             <proof prover="5"><result status="valid" time="4.43" steps="1491772"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.0.2.0" expl="apply premises" proved="true">
             <proof prover="5"><result status="valid" time="4.30" steps="1452932"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.0.3" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.0.3.0" expl="apply premises" proved="true">
             <proof prover="5"><result status="valid" time="4.63" steps="1491448"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="5"><result status="valid" time="3.96" steps="1449630"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="5"><result status="valid" time="1.72" steps="1155235"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <transf name="replace" proved="true" arg1="(width (to_qc reverse_pre&#39;result&#39;unused&#39;unused)
   +&#39; width (to_qc reverse_pre&#39;result&#39;unused&#39;unused1))" arg2="(width (to_qc result))">
          <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="3.89" steps="1438483"/></proof>
          </goal>
          <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
          <proof prover="5"><result status="valid" time="3.84" steps="1440355"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="1.73" steps="1155195"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="2.74" steps="1224223"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="reverse_pre&#39;vc.19.23.0.1" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="reverse_pre&#39;vc.19.23.0.1.0" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.65"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="reverse_pre&#39;vc.19.23.0.2" expl="rewrite premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.19.23.0.2.0" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.92" steps="1155194"/></proof>
      </goal>
     </transf>
     <transf name="split_vc" proved="true" >
      <goal name="reverse_pre&#39;vc.19.23.0.2.0" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.44" steps="877479"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.19.23.1" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="2.11" steps="939290"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.19.24" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(ancilla_free_pre c)">
    <goal name="reverse_pre&#39;vc.19.24.0" expl="asserted formula" proved="true">
    <proof prover="5"><result status="valid" time="3.36" steps="1160623"/></proof>
    </goal>
    <goal name="reverse_pre&#39;vc.19.24.1" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="ancilla_free_pre&#39;def" arg2="c">
     <goal name="reverse_pre&#39;vc.19.24.1.0" expl="postcondition" proved="true">
     <transf name="assert" proved="true" arg1="(build_correct c)">
      <goal name="reverse_pre&#39;vc.19.24.1.0.0" expl="asserted formula" proved="true">
      <proof prover="5"><result status="valid" time="3.39" steps="1159766"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.24.1.0.1" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="2.46" steps="939977"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.20" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="reverse_pre&#39;vc.20.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="y" arg2="(path_sem (to_qc c) x)">
    <goal name="reverse_pre&#39;vc.20.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="x,(width_pre c)">
     <goal name="reverse_pre&#39;vc.20.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Hinst">
      <goal name="reverse_pre&#39;vc.20.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_sum_">
       <goal name="reverse_pre&#39;vc.20.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_sum_">
        <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="ket_sum_eq">
         <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="3.25" steps="1170575"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="1.39" steps="881855"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="path_sem_scal">
            <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="path_sem_scal">
             <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="scalar_eq">
              <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="5"><result status="valid" time="4.35" steps="1556238"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="5"><result status="valid" time="3.24" steps="1259285"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="5"><result status="valid" time="3.51" steps="1257226"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="5.29" steps="246203"/></proof>
        </goal>
        <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="3.02" steps="1172168"/></proof>
        </goal>
        <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="path_sem_ket_l">
           <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="3.50" steps="1261379"/></proof>
           </goal>
           <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="1.41" steps="960536"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="reverse_pre&#39;vc.20.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="5.09" steps="246203"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.20.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.48" steps="1172166"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.20.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="reverse_pre&#39;vc.20.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="reverse_pre&#39;vc.20.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.19" steps="1261379"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.20.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.91" steps="1170575"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.20.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.06" steps="943424"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.20.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.19" steps="943503"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.20.0.1" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="1.18" steps="881705"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.20.1" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="x" arg2="(path_sem (to_qc result) y )
">
    <goal name="reverse_pre&#39;vc.20.1.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="y,(width_pre c)">
     <goal name="reverse_pre&#39;vc.20.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Hinst">
      <goal name="reverse_pre&#39;vc.20.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_sum_">
       <goal name="reverse_pre&#39;vc.20.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_sum_">
        <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="ket_sum_eq">
         <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="3.50" steps="1170474"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="1.35" steps="881855"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.2" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.2.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="path_sem_scal">
            <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="path_sem_scal">
             <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="scalar_eq">
              <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="5"><result status="valid" time="4.00" steps="1556362"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="5"><result status="valid" time="3.46" steps="1259526"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="5"><result status="valid" time="3.77" steps="1257652"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="replace" proved="true" arg1="(width_pre c)" arg2="(width (to_qc c))">
         <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="n_bvs_card">
          <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="3.52" steps="1174097"/></proof>
          </goal>
          <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="3.48" steps="1170368"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="5"><result status="valid" time="3.53" steps="1172516"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="3.46" steps="1172516"/></proof>
        </goal>
        <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.3" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.3.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="path_sem_ket_l">
           <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="3.84" steps="1260913"/></proof>
           </goal>
           <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="1.56" steps="960543"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="reverse_pre&#39;vc.20.1.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="(width_pre c)" arg2="(width (to_qc c))">
        <goal name="reverse_pre&#39;vc.20.1.0.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="n_bvs_card">
         <goal name="reverse_pre&#39;vc.20.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.62" steps="1174097"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.20.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.64" steps="1170368"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.20.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="3.50" steps="1172516"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="reverse_pre&#39;vc.20.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.31" steps="1172410"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.20.1.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="reverse_pre&#39;vc.20.1.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="reverse_pre&#39;vc.20.1.0.0.0.3.0.0" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.84" steps="1260913"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.20.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="3.32" steps="1170474"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.20.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.39" steps="943424"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.20.1.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.32" steps="943503"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.20.1.1" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="1.33" steps="881705"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="reverse&#39;vc" expl="VC for reverse" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="reverse&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="3.06" steps="1158733"/></proof>
  </goal>
  <goal name="reverse&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="2.12" steps="940488"/></proof>
  </goal>
  <goal name="reverse&#39;vc.2" expl="precondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="reverse&#39;vc.2.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="reverse&#39;vc.2.0.0" expl="precondition" proved="true">
    <proof prover="5"><result status="valid" time="1.75" steps="1205701"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="reverse&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="2.21" steps="968263"/></proof>
  </goal>
  <goal name="reverse&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="2.21" steps="968306"/></proof>
  </goal>
  <goal name="reverse&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="1.26" steps="879533"/></proof>
  </goal>
  <goal name="reverse&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="reverse&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="reverse&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="result&#39;def">
     <goal name="reverse&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse&#39;vc.6.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="3.39" steps="1278315"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse&#39;vc.6.1" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="reverse&#39;vc.6.1.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="reverse&#39;vc.6.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="to_qc_pre" arg2="in" arg3="Ensures3">
      <goal name="reverse&#39;vc.6.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="3.29" steps="1278312"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_invol&#39;vc" expl="VC for reverse_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="reverse_invol&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="reverse_invol&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_equiv_circuits">
    <goal name="reverse_invol&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="reverse_invol&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="5"><result status="valid" time="4.00" steps="1440764"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_invol&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="reverse_invol&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_invol&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="reverse&#39;spec1">
       <goal name="reverse_invol&#39;vc.0.0.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="2.95" steps="1233616"/></proof>
       </goal>
       <goal name="reverse_invol&#39;vc.0.0.1.0.0.1" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="3.94" steps="1446441"/></proof>
       </goal>
       <goal name="reverse_invol&#39;vc.0.0.1.0.0.2" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="3.91" steps="1443970"/></proof>
       </goal>
       <goal name="reverse_invol&#39;vc.0.0.1.0.0.3" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="4.41" steps="1446435"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_reverse_invol&#39;vc" expl="VC for path_sem_reverse_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_reverse_invol&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="get_equiv_circuits">
   <goal name="path_sem_reverse_invol&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="reverse_invol">
    <goal name="path_sem_reverse_invol&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="1.28" steps="879481"/></proof>
    </goal>
   </transf>
   <transf name="split_all_full" proved="true" >
    <goal name="path_sem_reverse_invol&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="3.30" steps="1233663"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_reverse_invol&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="path_sem_reverse_invol&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="reverse&#39;spec4">
     <goal name="path_sem_reverse_invol&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="reverse&#39;spec4">
      <goal name="path_sem_reverse_invol&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="5"><result status="valid" time="1.70" steps="1160887"/></proof>
      </goal>
      <goal name="path_sem_reverse_invol&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.03" steps="1160887"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_reverse_invol&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="3.35" steps="1233656"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_reverse&#39;vc" expl="VC for path_sem_reverse" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_reverse&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="path_sem_reverse&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="4.36" steps="1441887"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sem_reverse&#39;vc" expl="VC for sem_reverse" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sem_reverse&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="sem_reverse&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="sem_reverse&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (reverse c))" arg2="(width c)">
     <goal name="sem_reverse&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="1.46"/></proof>
     </goal>
     <goal name="sem_reverse&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="5"><result status="valid" time="3.15" steps="1233947"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sem_reverse&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="sem_reverse&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="path_sem_reverse">
     <goal name="sem_reverse&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <proof prover="5"><result status="valid" time="3.13" steps="1233920"/></proof>
     </goal>
     <goal name="sem_reverse&#39;vc.0.1.0.1" expl="apply premises" proved="true">
     <proof prover="5"><result status="valid" time="3.12" steps="1233913"/></proof>
     </goal>
     <goal name="sem_reverse&#39;vc.0.1.0.2" expl="apply premises" proved="true">
     <proof prover="5"><result status="valid" time="1.89" steps="1161128"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
