<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.7" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="reversion.mlw"/>
<theory name="Circuit_reverse" proved="true">
 <goal name="ancilla_free_pre&#39;vc" expl="VC for ancilla_free_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ancilla_free_pre&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ancilla_free_pre&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="3.03" steps="1190641"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ancilla_free_pre&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ancilla_free_pre&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="3.51" steps="1191437"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ancilla_free_pre&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ancilla_free_pre&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="2.47" steps="938925"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ancilla_free_pre&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ancilla_free_pre&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="2.42" steps="938976"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ancilla_free_pre&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ancilla_free_pre&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="2.30" steps="938915"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ancilla_free_pre&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ancilla_free_pre&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="2.30" steps="938966"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ancilla_free_pre&#39;vc.6" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="ancilla_free_pre&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.0.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.48" steps="938978"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.0.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.45" steps="877845"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.1.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.44"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.1.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.24" steps="877850"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.2" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.2.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.40"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.2.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.24" steps="877850"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.3" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.3.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.38"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.3.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.23" steps="877850"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.4" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.4.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.42"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.4.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.21" steps="877850"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.5" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.5.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.62"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.5.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.45" steps="877850"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.6" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.6.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.48" steps="938978"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.6.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.20" steps="877845"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.7" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.7.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.51" steps="938978"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.7.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.43" steps="877845"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.8" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.8.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.56" steps="938978"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.8.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.46" steps="877845"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.9" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.9.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.35" steps="938978"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.9.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.54" steps="877845"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.10" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.10.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.35" steps="938978"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.10.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.44" steps="877845"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.11" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.11.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.49" steps="938978"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.11.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.46" steps="877845"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.12" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.12.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.51" steps="938978"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.12.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.24" steps="877845"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.13" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.13.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.36" steps="938978"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.13.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.42" steps="877845"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.14" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.14.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.48" steps="938978"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.14.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.44" steps="877845"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.15" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.15.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="2.50" steps="938978"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.15.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.48" steps="877845"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.16" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.16.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.61"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.16.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.45" steps="877858"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.17" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.17.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.38"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.17.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.25" steps="877858"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.18" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.18.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.40"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.18.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.29" steps="877862"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.19" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.19.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.45"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.19.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="1.26" steps="877862"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.20" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.20.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.64"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.20.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.65"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.21" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ancilla_free_pre&#39;vc.6.21.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.66"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.21.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.46"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.22" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ancillas_pre c)" arg2="(max (ancillas_pre x1) (ancillas_pre x))">
    <goal name="ancilla_free_pre&#39;vc.6.22.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="3.61" steps="1196083"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.22.1" expl="equality hypothesis" proved="true">
    <proof prover="1"><result status="valid" time="1.66"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.23" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ancillas_pre c)" arg2="( (ancillas_pre x1) +&#39; (ancillas_pre x))">
    <goal name="ancilla_free_pre&#39;vc.6.23.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="3.81" steps="1195127"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.23.1" expl="equality hypothesis" proved="true">
    <proof prover="1"><result status="valid" time="1.41"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ancilla_free_pre&#39;vc.6.24" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ancillas_pre c)" arg2="( (ancillas_pre x1) +&#39; ( x))">
    <goal name="ancilla_free_pre&#39;vc.6.24.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="3.73" steps="1190898"/></proof>
    </goal>
    <goal name="ancilla_free_pre&#39;vc.6.24.1" expl="equality hypothesis" proved="true">
    <proof prover="1"><result status="valid" time="1.47"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ancilla_free&#39;vc" expl="VC for ancilla_free" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ancilla_free&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="3.33" steps="1193958"/></proof>
  </goal>
  <goal name="ancilla_free&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="2.35" steps="940939"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="set_ancilla_free&#39;vc" expl="VC for set_ancilla_free" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_ancilla_free&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="2.32" steps="940876"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ancilla_free_seq&#39;vc" expl="VC for ancilla_free_seq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ancilla_free_seq&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="ancilla_free_seq&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ancilla_free&#39;def">
    <goal name="ancilla_free_seq&#39;vc.0.0.0" expl="VC for ancilla_free_seq" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="ancilla_free_seq&#39;vc.0.0.0.0" expl="VC for ancilla_free_seq" proved="true">
     <transf name="replace" proved="true" arg1="((c -- d).pre)" arg2="(Sequence (pre c) (pre d))">
      <goal name="ancilla_free_seq&#39;vc.0.0.0.0.0" expl="VC for ancilla_free_seq" proved="true">
      <proof prover="2"><result status="valid" time="4.71" steps="1501079"/></proof>
      </goal>
      <goal name="ancilla_free_seq&#39;vc.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="5"><result status="valid" time="2.89" steps="1270502"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="phase_invol&#39;vc" expl="VC for phase_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="phase_invol&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(to_qc (Phase k))" arg2="(phase k)">
   <goal name="phase_invol&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(to_qc (Phase (-&#39;k)))" arg2="(phase (-&#39;k))">
    <goal name="phase_invol&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(to_qc (Phase k))" arg2="(phase k)" arg3="in" arg4="H">
     <goal name="phase_invol&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_phase" arg2="in" arg3="H">
      <goal name="phase_invol&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_phase">
       <goal name="phase_invol&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="y" arg2="(ang_exp (1 /./ k) *.. x)">
        <goal name="phase_invol&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="scalar_assoc">
         <goal name="phase_invol&#39;vc.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="int_to_ang_minus_up">
          <goal name="phase_invol&#39;vc.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <proof prover="5"><result status="valid" time="3.82" steps="1232191"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="phase_invol&#39;vc.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="1.42" steps="879796"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="phase_invol&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.51" steps="941056"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="phase_invol&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.44" steps="879782"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="phase_invol&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="pre_rev">
      <goal name="phase_invol&#39;vc.0.0.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="5"><result status="valid" time="4.24" steps="1242195"/></proof>
      </goal>
      <goal name="phase_invol&#39;vc.0.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.55" steps="941039"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="phase_invol&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="pre_rev">
     <goal name="phase_invol&#39;vc.0.0.1.0" expl="equality hypothesis" proved="true">
     <proof prover="5"><result status="valid" time="4.20" steps="1242564"/></proof>
     </goal>
     <goal name="phase_invol&#39;vc.0.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.26" steps="941058"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="phase_invol&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="pre_rev">
    <goal name="phase_invol&#39;vc.0.1.0" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="4.22" steps="1242195"/></proof>
    </goal>
    <goal name="phase_invol&#39;vc.0.1.1" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="2.29" steps="941039"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rz_invol&#39;vc" expl="VC for rz_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rz_invol&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(path_sem (to_qc (Rz (-&#39; k))) y)" arg2="(path_sem (rz k -- rz (-&#39; k)) x)">
   <goal name="rz_invol&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.74" steps="1210570"/></proof>
   </goal>
   <goal name="rz_invol&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="y" arg2="(path_sem (to_qc (Rz k)) x)">
    <goal name="rz_invol&#39;vc.0.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="rz_invol&#39;vc.0.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(to_qc (Rz ( k)))" arg2="(rz (k))">
      <goal name="rz_invol&#39;vc.0.1.0.0.0" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(to_qc (Rz (-&#39; k)))" arg2="(rz ( -&#39;k))">
       <goal name="rz_invol&#39;vc.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="1.27" steps="879985"/></proof>
       </goal>
       <goal name="rz_invol&#39;vc.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="pre_rev">
        <goal name="rz_invol&#39;vc.0.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="2.60" steps="985133"/></proof>
        </goal>
        <goal name="rz_invol&#39;vc.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="2.53" steps="941266"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="rz_invol&#39;vc.0.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="pre_rev">
       <goal name="rz_invol&#39;vc.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="2.66" steps="985118"/></proof>
       </goal>
       <goal name="rz_invol&#39;vc.0.1.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.48" steps="941253"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="rz_invol&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.60" steps="985091"/></proof>
     </goal>
     <goal name="rz_invol&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.56" steps="985160"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="rz_invol&#39;vc.0.1.1" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="1.44" steps="879994"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ry_invol&#39;vc" expl="VC for ry_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ry_invol&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(path_sem (to_qc (Ry (-&#39; k))) y)" arg2="(path_sem (ry k -- ry (-&#39; k)) x)">
   <goal name="ry_invol&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.66" steps="1210899"/></proof>
   </goal>
   <goal name="ry_invol&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="y" arg2="(path_sem (to_qc (Ry k)) x)">
    <goal name="ry_invol&#39;vc.0.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="ry_invol&#39;vc.0.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(to_qc (Ry (-&#39; k)))" arg2="(ry (-&#39;k))">
      <goal name="ry_invol&#39;vc.0.1.0.0.0" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(to_qc (Ry ( k)))" arg2="(ry (k))">
       <goal name="ry_invol&#39;vc.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="1.32" steps="880157"/></proof>
       </goal>
       <goal name="ry_invol&#39;vc.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="pre_rev">
        <goal name="ry_invol&#39;vc.0.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="2.80" steps="985291"/></proof>
        </goal>
        <goal name="ry_invol&#39;vc.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="2.58" steps="941431"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="ry_invol&#39;vc.0.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="pre_rev">
       <goal name="ry_invol&#39;vc.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="2.69" steps="985311"/></proof>
       </goal>
       <goal name="ry_invol&#39;vc.0.1.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.26" steps="941444"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ry_invol&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.56" steps="985259"/></proof>
     </goal>
     <goal name="ry_invol&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.36" steps="985328"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ry_invol&#39;vc.0.1.1" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="1.49" steps="880166"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rx_invol&#39;vc" expl="VC for rx_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rx_invol&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(path_sem (to_qc (Rx (-&#39; k))) y)" arg2="(path_sem (rx k -- rx (-&#39; k)) x)">
   <goal name="rx_invol&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.95" steps="1210538"/></proof>
   </goal>
   <goal name="rx_invol&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="y" arg2="(path_sem (to_qc (Rx k)) x)">
    <goal name="rx_invol&#39;vc.0.1.0" expl="equality hypothesis" proved="true">
    <transf name="replace" proved="true" arg1="(to_qc (Rx ( k)))" arg2="(rx (k))">
     <goal name="rx_invol&#39;vc.0.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(to_qc (Rx (-&#39; k)))" arg2="(rx (-&#39;k))">
      <goal name="rx_invol&#39;vc.0.1.0.0.0" expl="equality hypothesis" proved="true">
      <proof prover="5"><result status="valid" time="3.97" steps="1211298"/></proof>
      </goal>
      <goal name="rx_invol&#39;vc.0.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="pre_rev">
       <goal name="rx_invol&#39;vc.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="2.69" steps="985656"/></proof>
       </goal>
       <goal name="rx_invol&#39;vc.0.1.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.27" steps="941799"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="rx_invol&#39;vc.0.1.0.1" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(to_qc (Rx (-&#39; k)))" arg2="(rx (-&#39;k))">
      <goal name="rx_invol&#39;vc.0.1.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="pre_rev">
       <goal name="rx_invol&#39;vc.0.1.0.1.0.0" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="2.68" steps="985636"/></proof>
       </goal>
       <goal name="rx_invol&#39;vc.0.1.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.68" steps="941786"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="rx_invol&#39;vc.0.1.0.1.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="pre_rev">
       <goal name="rx_invol&#39;vc.0.1.0.1.1.0" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="2.69" steps="985656"/></proof>
       </goal>
       <goal name="rx_invol&#39;vc.0.1.0.1.1.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.62" steps="941799"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="rx_invol&#39;vc.0.1.1" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="1.29" steps="880338"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rzp_invol&#39;vc" expl="VC for rzp_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rzp_invol&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(path_sem (to_qc (Rzp (-&#39; k))) y)" arg2="(path_sem (rzp k -- rzp (-&#39; k)) x)">
   <goal name="rzp_invol&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="y" arg2="(path_sem (to_qc (Rzp k)) x )">
    <goal name="rzp_invol&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_comp_">
     <goal name="rzp_invol&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(x = qbit_zero())">
      <goal name="rzp_invol&#39;vc.0.0.0.0.0" expl="true case (postcondition)" proved="true">
      <proof prover="5"><result status="valid" time="2.67" steps="980678"/></proof>
      </goal>
      <goal name="rzp_invol&#39;vc.0.0.0.0.1" expl="false case (postcondition)" proved="true">
      <transf name="replace" proved="true" arg1="x" arg2="(qbit_one())">
       <goal name="rzp_invol&#39;vc.0.0.0.0.1.0" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="rzp_one">
        <goal name="rzp_invol&#39;vc.0.0.0.0.1.0.0" expl="false case (postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_scal">
         <goal name="rzp_invol&#39;vc.0.0.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
         <transf name="rewrite" proved="true" arg1="rzp_one">
          <goal name="rzp_invol&#39;vc.0.0.0.0.1.0.0.0.0" expl="false case (postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="scalar_assoc">
           <goal name="rzp_invol&#39;vc.0.0.0.0.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
            <goal name="rzp_invol&#39;vc.0.0.0.0.1.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
            <proof prover="5"><result status="valid" time="1.58" steps="880487"/></proof>
            </goal>
            <goal name="rzp_invol&#39;vc.0.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="1.92"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="rzp_invol&#39;vc.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="2.53" steps="985773"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="rzp_invol&#39;vc.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="2.41" steps="941963"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="rzp_invol&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.47" steps="985738"/></proof>
     </goal>
     <goal name="rzp_invol&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.56" steps="985870"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="rzp_invol&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="replace" proved="true" arg1="(to_qc (Rzp (-&#39; k)))" arg2="(rzp (-&#39;k))">
     <goal name="rzp_invol&#39;vc.0.0.1.0" expl="equality hypothesis" proved="true">
     <proof prover="5"><result status="valid" time="1.44" steps="880481"/></proof>
     </goal>
     <goal name="rzp_invol&#39;vc.0.0.1.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="pre_rev">
      <goal name="rzp_invol&#39;vc.0.0.1.1.0" expl="equality hypothesis" proved="true">
      <proof prover="5"><result status="valid" time="2.72" steps="985789"/></proof>
      </goal>
      <goal name="rzp_invol&#39;vc.0.0.1.1.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.51" steps="941937"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="rzp_invol&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_comp_">
    <goal name="rzp_invol&#39;vc.0.1.0" expl="equality hypothesis" proved="true">
    <transf name="replace" proved="true" arg1="(to_qc (Rzp (-&#39; k)))" arg2="(rzp (-&#39; k))">
     <goal name="rzp_invol&#39;vc.0.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(to_qc (Rzp (k)))" arg2="(rzp ( k))" arg3="in" arg4="H">
      <goal name="rzp_invol&#39;vc.0.1.0.0.0" expl="equality hypothesis" proved="true">
      <proof prover="5"><result status="valid" time="1.54" steps="895060"/></proof>
      </goal>
      <goal name="rzp_invol&#39;vc.0.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="pre_rev">
       <goal name="rzp_invol&#39;vc.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="2.63" steps="985742"/></proof>
       </goal>
       <goal name="rzp_invol&#39;vc.0.1.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.19" steps="941918"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="rzp_invol&#39;vc.0.1.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="pre_rev">
      <goal name="rzp_invol&#39;vc.0.1.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="5"><result status="valid" time="2.65" steps="985789"/></proof>
      </goal>
      <goal name="rzp_invol&#39;vc.0.1.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.41" steps="941937"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="rzp_invol&#39;vc.0.1.1" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="2.70" steps="985738"/></proof>
    </goal>
    <goal name="rzp_invol&#39;vc.0.1.2" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="2.67" steps="985870"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="yy_invol&#39;vc" expl="VC for yy_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="yy_invol&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(path_sem (to_qc Y) y)" arg2="(path_sem (yy  -- yy) x)">
   <goal name="yy_invol&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_comp_">
    <goal name="yy_invol&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(rewrite_yy())">
     <goal name="yy_invol&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="eliminate_definition" proved="true" >
      <goal name="yy_invol&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(path_sem yy x)" arg2="(path_sem (rewrite_yy()) x)">
       <goal name="yy_invol&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="rewrite_yy&#39;def">
        <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_comp_rev">
         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(((ry 1 -- ry 1) -- (phase 2 -- phase 2)))">
          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_comp_">
           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="replace" proved="true" arg1="1" arg2="(incr_abs 0)">
            <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="path_sem_comp_">
             <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <transf name="rewrite" proved="true" arg1="path_sem_comp_">
              <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
              <transf name="rewrite" proved="true" arg1="ry_twice">
               <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
               <transf name="rewrite" proved="true" arg1="path_sem_phase">
                <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
                <transf name="rewrite" proved="true" arg1="path_sem_phase">
                 <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
                 <transf name="rewrite" proved="true" arg1="scalar_assoc">
                  <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
                  <transf name="replace" proved="true" arg1="(ang_exp (1 /./ 2) *. ang_exp (1 /./ 2))" arg2="(-. c_one)">
                   <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
                   <transf name="case" proved="true" arg1="(x = qbit_zero())">
                    <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                    <transf name="rewrite" proved="true" arg1="h">
                     <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                     <transf name="replace" proved="true" arg1="(path_sem (ry 0) (qbit_zero ()))" arg2="(ket_zero_y 0)">
                      <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                       <transf name="rewrite" proved="true" arg1="ket_zero_y&#39;spec1">
                        <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                        <transf name="rewrite" proved="true" arg1="add_ket_l_null">
                         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                         <transf name="replace" proved="true" arg1="(ang_exp ((-&#39; 1) /./ incr_abs 0) +. ang_exp (1 /./ incr_abs 0))" arg2="(-. ttwo)">
                          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                          <transf name="rewrite" proved="true" arg1="scalar_assoc">
                           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                           <transf name="rewrite" proved="true" arg1="scalar_assoc">
                            <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
                            <proof prover="5"><result status="valid" time="4.13" steps="1446832"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                          <proof prover="5"><result status="valid" time="4.62" steps="1470238"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="3.20" steps="1270791"/></proof>
                         </goal>
                         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="3.25" steps="1271043"/></proof>
                         </goal>
                         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                         <transf name="replace" proved="true" arg1="(ang_exp ((-&#39; 1) /./ incr_abs 0) -. ang_exp (1 /./ incr_abs 0))" arg2="(c_zero)">
                          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
                          <transf name="apply" proved="true" arg1="scalar_null_gen">
                           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                           <proof prover="5"><result status="valid" time="4.55" steps="1472508"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.1" expl="equality hypothesis" proved="true">
                          <proof prover="5"><result status="valid" time="4.56" steps="1470334"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                      <proof prover="5"><result status="valid" time="2.35" steps="941462"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="false case (postcondition)" proved="true">
                    <transf name="replace" proved="true" arg1="x" arg2="(qbit_one())">
                     <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="false case (postcondition)" proved="true">
                     <transf name="rewrite" proved="true" arg1="ry_one">
                      <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="false case (postcondition)" proved="true">
                      <transf name="split_all_full" proved="true" >
                       <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
                       <transf name="rewrite" proved="true" arg1="ket_one_y&#39;spec1">
                        <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="false case (postcondition)" proved="true">
                        <transf name="rewrite" proved="true" arg1="null_add_ket_l">
                         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
                         <transf name="replace" proved="true" arg1="(ang_exp ((-&#39; 1) /./ incr_abs 0) +. ang_exp (1 /./ incr_abs 0))" arg2="(-. ttwo)">
                          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
                          <transf name="rewrite" proved="true" arg1="scalar_assoc">
                           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
                           <transf name="rewrite" proved="true" arg1="scalar_assoc">
                            <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
                            <transf name="apply" proved="true" arg1="scalar_c_one_gen">
                             <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                             <proof prover="5"><result status="valid" time="4.26" steps="1446737"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                          <transf name="replace" proved="true" arg1="(incr_abs 0)" arg2="1">
                           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
                           <proof prover="5"><result status="valid" time="4.42" steps="1467575"/></proof>
                           </goal>
                           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                           <proof prover="5"><result status="valid" time="4.23" steps="1440623"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="3.21" steps="1271082"/></proof>
                         </goal>
                         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="3.22" steps="1271399"/></proof>
                         </goal>
                         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.3" expl="rewrite premises" proved="true">
                         <transf name="replace" proved="true" arg1="(ang_exp ((-&#39; 1) /./ incr_abs 0) -. ang_exp (1 /./ incr_abs 0))" arg2="(c_zero)">
                          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.3.0" expl="rewrite premises" proved="true">
                          <transf name="apply" proved="true" arg1="scalar_null_gen">
                           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                           <proof prover="5"><result status="valid" time="4.58" steps="1473085"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.3.1" expl="equality hypothesis" proved="true">
                          <proof prover="5"><result status="valid" time="4.56" steps="1470261"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                     <proof prover="5"><result status="valid" time="2.18" steps="941487"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="5"><result status="valid" time="3.24" steps="1116778"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="3.65" steps="1118171"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="5"><result status="valid" time="3.63" steps="1119111"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="1.53" steps="880543"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="2.71" steps="960813"/></proof>
              </goal>
              <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="1.42" steps="880541"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="5"><result status="valid" time="3.82" steps="1122085"/></proof>
             </goal>
             <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="5"><result status="valid" time="1.41" steps="880541"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="5"><result status="valid" time="3.71" steps="1115478"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="3.59" steps="1117735"/></proof>
           </goal>
           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="3.67" steps="1119067"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="((phase 2 -- ry 1) -- (ry 1 --phase 2 ))">
           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="sequence_equiv">
            <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <proof prover="5"><result status="valid" time="2.81" steps="941426"/></proof>
            </goal>
            <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
            <proof prover="5"><result status="valid" time="3.69" steps="1117377"/></proof>
            </goal>
            <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
            <proof prover="5"><result status="valid" time="1.39" steps="880541"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="((phase 2 -- ry 1) -- ry 1 --phase 2 )">
            <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
            <proof prover="5"><result status="valid" time="3.80" steps="1121884"/></proof>
            </goal>
            <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="((ry 1 -- ry 1) -- phase 2 -- phase 2)">
             <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1.1.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="sequence_equiv">
              <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1.1.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="transitive_circuit_equiv" arg2="with" arg3="(phase 2 -- (ry 1 -- ry 1))">
               <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="5"><result status="valid" time="3.79" steps="1119937"/></proof>
               </goal>
               <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="5"><result status="valid" time="3.33" steps="1119685"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1.1.0.1" expl="apply premises" proved="true">
              <proof prover="5"><result status="valid" time="2.48" steps="941426"/></proof>
              </goal>
              <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1.1.0.2" expl="apply premises" proved="true">
              <proof prover="5"><result status="valid" time="3.57" steps="1122342"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.1.1.1.1" expl="apply premises" proved="true">
             <proof prover="5"><result status="valid" time="3.56" steps="1121056"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="3.68" steps="1119715"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.65" steps="1118812"/></proof>
         </goal>
         <goal name="yy_invol&#39;vc.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="1.56" steps="880541"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="yy_invol&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="get_equiv_circuits">
        <goal name="yy_invol&#39;vc.0.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="5"><result status="valid" time="3.36" steps="1116516"/></proof>
        </goal>
        <goal name="yy_invol&#39;vc.0.0.0.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="5"><result status="valid" time="2.34" steps="940205"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="yy_invol&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.42" steps="942108"/></proof>
     </goal>
     <goal name="yy_invol&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.32" steps="942140"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="yy_invol&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="2.50" steps="940942"/></proof>
    </goal>
    <goal name="yy_invol&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.26" steps="880642"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="yy_invol&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="5"><result status="valid" time="2.78" steps="986658"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="swap_invol&#39;vc" expl="VC for swap_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="swap_invol&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.24" steps="880835"/></proof>
  </goal>
  <goal name="swap_invol&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.59" steps="880848"/></proof>
  </goal>
  <goal name="swap_invol&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.59" steps="880850"/></proof>
  </goal>
  <goal name="swap_invol&#39;vc.3" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="to_qc_swap" arg2="(Swap t1 t2 n),t1,t2,n">
   <goal name="swap_invol&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst" arg2="in" arg3="H">
    <goal name="swap_invol&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="swap_invol&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="y" arg2="(path_sem (swap t1 t2 n) x )">
      <goal name="swap_invol&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_comp_rev">
       <goal name="swap_invol&#39;vc.3.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="get_neutral_circ">
        <goal name="swap_invol&#39;vc.3.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="5"><result status="valid" time="1.43" steps="880933"/></proof>
        </goal>
        <goal name="swap_invol&#39;vc.3.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.89"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="swap_invol&#39;vc.3.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.90"/></proof>
       </goal>
       <goal name="swap_invol&#39;vc.3.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.44" steps="880931"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="swap_invol&#39;vc.3.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="5"><result status="valid" time="1.49" steps="880940"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="swap_invol&#39;vc.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.40" steps="880933"/></proof>
     </goal>
     <goal name="swap_invol&#39;vc.3.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.27" steps="880933"/></proof>
     </goal>
     <goal name="swap_invol&#39;vc.3.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.27" steps="880931"/></proof>
     </goal>
     <goal name="swap_invol&#39;vc.3.0.0.4" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.42" steps="880931"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="swap_invol&#39;vc.3.0.1" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.49" steps="880933"/></proof>
    </goal>
    <goal name="swap_invol&#39;vc.3.0.2" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.50" steps="880933"/></proof>
    </goal>
    <goal name="swap_invol&#39;vc.3.0.3" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.49" steps="880931"/></proof>
    </goal>
    <goal name="swap_invol&#39;vc.3.0.4" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.54" steps="880931"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cnot_invol&#39;vc" expl="VC for cnot_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cnot_invol&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.53" steps="881150"/></proof>
  </goal>
  <goal name="cnot_invol&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.42" steps="881163"/></proof>
  </goal>
  <goal name="cnot_invol&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.34" steps="881165"/></proof>
  </goal>
  <goal name="cnot_invol&#39;vc.3" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="to_qc_cnot" arg2="(Cnot co t n),co,t,n">
   <goal name="cnot_invol&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst" arg2="in" arg3="H">
    <goal name="cnot_invol&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="cnot_invol&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="y" arg2="(path_sem (cnot co t n) x)">
      <goal name="cnot_invol&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_comp_rev">
       <goal name="cnot_invol&#39;vc.3.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="get_neutral_circ">
        <goal name="cnot_invol&#39;vc.3.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="5"><result status="valid" time="1.45" steps="881248"/></proof>
        </goal>
        <goal name="cnot_invol&#39;vc.3.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.81"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cnot_invol&#39;vc.3.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.83"/></proof>
       </goal>
       <goal name="cnot_invol&#39;vc.3.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.47" steps="881246"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cnot_invol&#39;vc.3.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="5"><result status="valid" time="1.40" steps="881255"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cnot_invol&#39;vc.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.65" steps="881248"/></proof>
     </goal>
     <goal name="cnot_invol&#39;vc.3.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.61" steps="881248"/></proof>
     </goal>
     <goal name="cnot_invol&#39;vc.3.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.56" steps="881246"/></proof>
     </goal>
     <goal name="cnot_invol&#39;vc.3.0.0.4" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.61" steps="881246"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cnot_invol&#39;vc.3.0.1" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.55" steps="881248"/></proof>
    </goal>
    <goal name="cnot_invol&#39;vc.3.0.2" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.46" steps="881248"/></proof>
    </goal>
    <goal name="cnot_invol&#39;vc.3.0.3" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.54" steps="881246"/></proof>
    </goal>
    <goal name="cnot_invol&#39;vc.3.0.4" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.33" steps="881246"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="toffoli_invol&#39;vc" expl="VC for toffoli_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="toffoli_invol&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.40" steps="881524"/></proof>
  </goal>
  <goal name="toffoli_invol&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.38" steps="881537"/></proof>
  </goal>
  <goal name="toffoli_invol&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.57" steps="881550"/></proof>
  </goal>
  <goal name="toffoli_invol&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.40" steps="881552"/></proof>
  </goal>
  <goal name="toffoli_invol&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.40" steps="881555"/></proof>
  </goal>
  <goal name="toffoli_invol&#39;vc.5" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.41" steps="881558"/></proof>
  </goal>
  <goal name="toffoli_invol&#39;vc.6" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="to_qc_toffoli" arg2="(Toffoli c1 c2 t n),c1,c2,t,n">
   <goal name="toffoli_invol&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="y" arg2="(path_sem (to_qc (Toffoli c1 c2 t n)) x)">
    <goal name="toffoli_invol&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="toffoli_invol&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_comp_rev">
      <goal name="toffoli_invol&#39;vc.6.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="get_neutral_circ">
       <goal name="toffoli_invol&#39;vc.6.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="1.46" steps="881680"/></proof>
       </goal>
       <goal name="toffoli_invol&#39;vc.6.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="toffoli_invol&#39;vc.6.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="(--)&#39;spec3">
         <goal name="toffoli_invol&#39;vc.6.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="5.10" steps="1445064"/></proof>
         </goal>
         <goal name="toffoli_invol&#39;vc.6.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="2.08" steps="1160987"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="toffoli_invol&#39;vc.6.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="toffoli_invol&#39;vc.6.0.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="4.30" steps="1445064"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="toffoli_invol&#39;vc.6.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.37" steps="881678"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="toffoli_invol&#39;vc.6.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.46" steps="881680"/></proof>
     </goal>
     <goal name="toffoli_invol&#39;vc.6.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.40" steps="881680"/></proof>
     </goal>
     <goal name="toffoli_invol&#39;vc.6.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.38" steps="881680"/></proof>
     </goal>
     <goal name="toffoli_invol&#39;vc.6.0.0.4" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.42" steps="881678"/></proof>
     </goal>
     <goal name="toffoli_invol&#39;vc.6.0.0.5" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.42" steps="881678"/></proof>
     </goal>
     <goal name="toffoli_invol&#39;vc.6.0.0.6" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.34" steps="881678"/></proof>
     </goal>
     <goal name="toffoli_invol&#39;vc.6.0.0.7" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.37" steps="881678"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="toffoli_invol&#39;vc.6.0.1" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="1.40" steps="881687"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="fredkin_invol&#39;vc" expl="VC for fredkin_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fredkin_invol&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.39" steps="881965"/></proof>
  </goal>
  <goal name="fredkin_invol&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.40" steps="881978"/></proof>
  </goal>
  <goal name="fredkin_invol&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.43" steps="881991"/></proof>
  </goal>
  <goal name="fredkin_invol&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.44" steps="881993"/></proof>
  </goal>
  <goal name="fredkin_invol&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.45" steps="881996"/></proof>
  </goal>
  <goal name="fredkin_invol&#39;vc.5" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.43" steps="881999"/></proof>
  </goal>
  <goal name="fredkin_invol&#39;vc.6" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="to_qc_fredkin" arg2="(Fredkin c t1 t2 n),c,t1,t2,n">
   <goal name="fredkin_invol&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="y" arg2="(path_sem (to_qc (Fredkin c t1 t2 n)) x)">
    <goal name="fredkin_invol&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="fredkin_invol&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="path_sem_comp_rev">
      <goal name="fredkin_invol&#39;vc.6.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="get_neutral_circ">
       <goal name="fredkin_invol&#39;vc.6.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="1.47" steps="882099"/></proof>
       </goal>
       <goal name="fredkin_invol&#39;vc.6.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="fredkin_invol&#39;vc.6.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="5"><result status="valid" time="4.39" steps="1445118"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="fredkin_invol&#39;vc.6.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="fredkin_invol&#39;vc.6.0.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="4.46" steps="1445016"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="fredkin_invol&#39;vc.6.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.43" steps="882097"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="fredkin_invol&#39;vc.6.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.46" steps="882099"/></proof>
     </goal>
     <goal name="fredkin_invol&#39;vc.6.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.44" steps="882099"/></proof>
     </goal>
     <goal name="fredkin_invol&#39;vc.6.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.44" steps="882099"/></proof>
     </goal>
     <goal name="fredkin_invol&#39;vc.6.0.0.4" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.40" steps="882097"/></proof>
     </goal>
     <goal name="fredkin_invol&#39;vc.6.0.0.5" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.41" steps="882097"/></proof>
     </goal>
     <goal name="fredkin_invol&#39;vc.6.0.0.6" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.40" steps="882097"/></proof>
     </goal>
     <goal name="fredkin_invol&#39;vc.6.0.0.7" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.37" steps="882097"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="fredkin_invol&#39;vc.6.0.1" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="1.38" steps="882106"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_pre&#39;vc" expl="VC for reverse_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="reverse_pre&#39;vc.0" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(build_correct c)">
   <goal name="reverse_pre&#39;vc.0.0" expl="asserted formula" proved="true">
   <proof prover="5"><result status="valid" time="3.51" steps="1197841"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.71"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="3.50" steps="1197754"/></proof>
  </goal>
  <goal name="reverse_pre&#39;vc.2" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(build_correct c)">
   <goal name="reverse_pre&#39;vc.2.0" expl="asserted formula" proved="true">
   <proof prover="5"><result status="valid" time="3.52" steps="1199476"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.45"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="3.52" steps="1199331"/></proof>
  </goal>
  <goal name="reverse_pre&#39;vc.4" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(build_correct c)">
   <goal name="reverse_pre&#39;vc.4.0" expl="asserted formula" proved="true">
   <proof prover="5"><result status="valid" time="3.47" steps="1201337"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.4.1" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(ancillas_pre c = max (ancillas_pre x1) (ancillas_pre x))">
    <goal name="reverse_pre&#39;vc.4.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="1.49"/></proof>
    </goal>
    <goal name="reverse_pre&#39;vc.4.1.1" expl="precondition" proved="true">
    <proof prover="5"><result status="valid" time="3.83" steps="1205528"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="2.42" steps="943847"/></proof>
  </goal>
  <goal name="reverse_pre&#39;vc.6" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(build_correct c)">
   <goal name="reverse_pre&#39;vc.6.0" expl="asserted formula" proved="true">
   <proof prover="5"><result status="valid" time="3.90" steps="1204108"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.6.1" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(ancillas_pre c = max (ancillas_pre x1) (ancillas_pre x))">
    <goal name="reverse_pre&#39;vc.6.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="1.48"/></proof>
    </goal>
    <goal name="reverse_pre&#39;vc.6.1.1" expl="precondition" proved="true">
    <proof prover="5"><result status="valid" time="3.72" steps="1208249"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.7" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="2.46" steps="944273"/></proof>
  </goal>
  <goal name="reverse_pre&#39;vc.8" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(build_correct c)">
   <goal name="reverse_pre&#39;vc.8.0" expl="asserted formula" proved="true">
   <proof prover="5"><result status="valid" time="3.50" steps="1199571"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.8.1" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(ancillas_pre c = (ancillas_pre x1) +&#39; (ancillas_pre x))">
    <goal name="reverse_pre&#39;vc.8.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="1.50"/></proof>
    </goal>
    <goal name="reverse_pre&#39;vc.8.1.1" expl="precondition" proved="true">
    <proof prover="5"><result status="valid" time="3.51" steps="1202302"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.9" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="2.39" steps="943837"/></proof>
  </goal>
  <goal name="reverse_pre&#39;vc.10" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(build_correct c)">
   <goal name="reverse_pre&#39;vc.10.0" expl="asserted formula" proved="true">
   <proof prover="5"><result status="valid" time="3.46" steps="1202668"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.10.1" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(ancillas_pre c = (ancillas_pre x1) +&#39; (ancillas_pre x))">
    <goal name="reverse_pre&#39;vc.10.1.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="1.68"/></proof>
    </goal>
    <goal name="reverse_pre&#39;vc.10.1.1" expl="precondition" proved="true">
    <proof prover="5"><result status="valid" time="3.40" steps="1205132"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.11" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="2.43" steps="944265"/></proof>
  </goal>
  <goal name="reverse_pre&#39;vc.12" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="reverse_pre&#39;vc.12.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.34" steps="942654"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.45" steps="943840"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.2" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.50" steps="943840"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.3" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.56" steps="943840"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.4" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.49" steps="943840"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.5" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.40" steps="943840"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.6" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.34" steps="942654"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.7" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.46" steps="943827"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.8" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.13" steps="943827"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.9" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.30" steps="942654"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.10" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.31" steps="942654"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.11" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.30" steps="942654"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.12" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.35" steps="942654"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.13" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.31" steps="942654"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.14" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.38" steps="942654"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.15" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.34" steps="942654"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.16" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.35" steps="942663"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.17" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.33" steps="942663"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.18" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.33" steps="942667"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.19" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.42" steps="942667"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.20" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.56" steps="1204686"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.21" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.95" steps="1218871"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.22" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.70" steps="984703"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.23" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.54" steps="944699"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.12.24" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.34" steps="942659"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.13" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="reverse_pre&#39;vc.13.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.53" steps="896926"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.52" steps="1202434"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.2" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.49" steps="1202366"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.3" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.57" steps="1202470"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.4" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.38" steps="1202458"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.5" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.98" steps="1202346"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.6" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.55" steps="896926"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.7" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.98" steps="1201351"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.8" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.44" steps="1201729"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.9" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.49" steps="896926"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.10" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.49" steps="896926"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.11" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.55" steps="896926"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.12" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.53" steps="896926"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.13" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.51" steps="896926"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.14" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.55" steps="896926"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.15" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.52" steps="896926"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.16" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.53" steps="896929"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.17" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.54" steps="896929"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.18" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.55" steps="896933"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.19" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.55" steps="896933"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.20" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="4.15" steps="1205648"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.21" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="4.02" steps="1205589"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.22" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="4.00" steps="1210286"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.23" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.65" steps="1210467"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.13.24" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.54" steps="896925"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.14" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="reverse_pre&#39;vc.14.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.53" steps="896946"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.49"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.2" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.79"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.3" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.78"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.4" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.79"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.5" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.76"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.6" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.57" steps="896946"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.7" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H1">
    <goal name="reverse_pre&#39;vc.14.7.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H">
     <goal name="reverse_pre&#39;vc.14.7.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.7.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="4.32" steps="1439739"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.8" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H1">
    <goal name="reverse_pre&#39;vc.14.8.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H">
     <goal name="reverse_pre&#39;vc.14.8.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.8.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="4.89" steps="1439658"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.9" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.58" steps="896946"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.10" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="reverse_pre&#39;vc.14.10.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H1">
     <goal name="reverse_pre&#39;vc.14.10.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.10.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="2.26" steps="1161640"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.11" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.53" steps="896946"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.12" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="reverse_pre&#39;vc.14.12.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H1">
     <goal name="reverse_pre&#39;vc.14.12.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.12.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="2.01" steps="1161640"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.13" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="reverse_pre&#39;vc.14.13.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H1">
     <goal name="reverse_pre&#39;vc.14.13.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.13.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="2.00" steps="1161640"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.14" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.57" steps="896946"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.14.15" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="reverse_pre&#39;vc.14.15.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H1">
     <goal name="reverse_pre&#39;vc.14.15.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.15.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="1.96" steps="1161640"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.16" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="reverse_pre&#39;vc.14.16.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H1">
     <goal name="reverse_pre&#39;vc.14.16.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.16.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="1.96" steps="1161653"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.17" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="reverse_pre&#39;vc.14.17.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H1">
     <goal name="reverse_pre&#39;vc.14.17.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.17.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="1.99" steps="1161653"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.18" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="reverse_pre&#39;vc.14.18.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H1">
     <goal name="reverse_pre&#39;vc.14.18.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.18.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="1.99" steps="1161657"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.19" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="reverse_pre&#39;vc.14.19.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H1">
     <goal name="reverse_pre&#39;vc.14.19.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.14.19.0.0.0" expl="postcondition" proved="true">
      <transf name="instantiate" proved="true" arg1="size_pre&#39;def12" arg2="c">
       <goal name="reverse_pre&#39;vc.14.19.0.0.0.0" expl="postcondition" proved="true">
       <transf name="instantiate" proved="true" arg1="size_pre&#39;def8" arg2="c">
        <goal name="reverse_pre&#39;vc.14.19.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="instantiate" proved="true" arg1="size_pre&#39;def2" arg2="c">
         <goal name="reverse_pre&#39;vc.14.19.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="instantiate" proved="true" arg1="size_pre&#39;def" arg2="c">
          <goal name="reverse_pre&#39;vc.14.19.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="instantiate" proved="true" arg1="size_pre&#39;def15" arg2="c">
           <goal name="reverse_pre&#39;vc.14.19.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <proof prover="5"><result status="valid" time="1.99" steps="1161899"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.20" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="reverse_pre&#39;vc.14.20.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="size_pre&#39;def23" arg2="result">
     <goal name="reverse_pre&#39;vc.14.20.0.0" expl="postcondition" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="reverse_pre&#39;vc.14.20.0.0.0" expl="destruct premise" proved="true">
      <proof prover="5"><result status="valid" time="4.82" steps="1442463"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.14.20.0.0.1" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Hinst" arg2="with" arg3="reverse_pre&#39;result&#39;unused&#39;unused5,x1,x">
       <goal name="reverse_pre&#39;vc.14.20.0.0.1.0" expl="postcondition" proved="true">
       <transf name="instantiate" proved="true" arg1="size_pre&#39;def23" arg2="c">
        <goal name="reverse_pre&#39;vc.14.20.0.0.1.0.0" expl="postcondition" proved="true">
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="reverse_pre&#39;vc.14.20.0.0.1.0.0.0" expl="destruct premise" proved="true">
         <proof prover="5"><result status="valid" time="4.78" steps="1442246"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.14.20.0.0.1.0.0.1" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="Hinst" arg2="with" arg3="x2,x1,x">
          <goal name="reverse_pre&#39;vc.14.20.0.0.1.0.0.1.0" expl="postcondition" proved="true">
          <proof prover="5"><result status="valid" time="2.13" steps="1162543"/></proof>
          </goal>
          <goal name="reverse_pre&#39;vc.14.20.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="2.02" steps="1162543"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="reverse_pre&#39;vc.14.20.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.04" steps="1162472"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.21" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="reverse_pre&#39;vc.14.21.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="size_pre&#39;def22" arg2="result">
     <goal name="reverse_pre&#39;vc.14.21.0.0" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="size_pre&#39;def22" arg2="c">
      <goal name="reverse_pre&#39;vc.14.21.0.0.0" expl="postcondition" proved="true">
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="reverse_pre&#39;vc.14.21.0.0.0.0" expl="destruct premise" proved="true">
       <proof prover="5"><result status="valid" time="4.71" steps="1442431"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.14.21.0.0.0.1" expl="postcondition" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst1">
        <goal name="reverse_pre&#39;vc.14.21.0.0.0.1.0" expl="destruct premise" proved="true">
        <proof prover="5"><result status="valid" time="4.83" steps="1442473"/></proof>
        </goal>
        <goal name="reverse_pre&#39;vc.14.21.0.0.0.1.1" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="Hinst" arg2="with" arg3="x3,x2,x1,x">
         <goal name="reverse_pre&#39;vc.14.21.0.0.0.1.1.0" expl="postcondition" proved="true">
         <proof prover="1"><result status="valid" time="1.70"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.14.21.0.0.0.1.1.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="2.26" steps="1162592"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.22" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="reverse_pre&#39;vc.14.22.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="size_pre&#39;def21" arg2="result">
     <goal name="reverse_pre&#39;vc.14.22.0.0" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="size_pre&#39;def21" arg2="c">
      <goal name="reverse_pre&#39;vc.14.22.0.0.0" expl="postcondition" proved="true">
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="reverse_pre&#39;vc.14.22.0.0.0.0" expl="destruct premise" proved="true">
       <proof prover="5"><result status="valid" time="4.73" steps="1445145"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.14.22.0.0.0.1" expl="postcondition" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst1">
        <goal name="reverse_pre&#39;vc.14.22.0.0.0.1.0" expl="destruct premise" proved="true">
        <proof prover="5"><result status="valid" time="4.80" steps="1445455"/></proof>
        </goal>
        <goal name="reverse_pre&#39;vc.14.22.0.0.0.1.1" expl="postcondition" proved="true">
        <proof prover="5"><result status="valid" time="4.84" steps="1449928"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.23" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="reverse_pre&#39;vc.14.23.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="size_pre&#39;def20" arg2="c">
     <goal name="reverse_pre&#39;vc.14.23.0.0" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="size_pre&#39;def20" arg2="result">
      <goal name="reverse_pre&#39;vc.14.23.0.0.0" expl="postcondition" proved="true">
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="reverse_pre&#39;vc.14.23.0.0.0.0" expl="destruct premise" proved="true">
       <proof prover="5"><result status="valid" time="4.76" steps="1444788"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.14.23.0.0.0.1" expl="postcondition" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst1">
        <goal name="reverse_pre&#39;vc.14.23.0.0.0.1.0" expl="destruct premise" proved="true">
        <proof prover="5"><result status="valid" time="4.86" steps="1445022"/></proof>
        </goal>
        <goal name="reverse_pre&#39;vc.14.23.0.0.0.1.1" expl="postcondition" proved="true">
        <proof prover="5"><result status="valid" time="4.83" steps="1449371"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.14.24" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.51" steps="896945"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.15" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="reverse_pre&#39;vc.15.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.32" steps="942714"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.63"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.2" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.61"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.3" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.67"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.4" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.73"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.5" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.63"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.6" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.36" steps="942714"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.7" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.72"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.8" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.65"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.9" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.33" steps="942714"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.10" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.44" steps="942714"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.11" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.37" steps="942714"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.12" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.35" steps="942714"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.13" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.37" steps="942714"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.14" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.37" steps="942714"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.15" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.36" steps="942714"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.16" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.35" steps="942723"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.17" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.40" steps="942723"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.18" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.33" steps="942727"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.19" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.34" steps="942727"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.15.20" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="reverse_pre&#39;vc.15.20.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="ancillas_pre&#39;def24" arg2="result">
     <goal name="reverse_pre&#39;vc.15.20.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Hinst" arg2="with" arg3="reverse_pre&#39;result&#39;unused&#39;unused5,x1,x">
      <goal name="reverse_pre&#39;vc.15.20.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="2.23" steps="1162502"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.15.20.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="4.91" steps="1442183"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.15.20.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.13" steps="1162502"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.15.21" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="reverse_pre&#39;vc.15.21.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="ancillas_pre&#39;def23" arg2="result">
     <goal name="reverse_pre&#39;vc.15.21.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Hinst" arg2="with" arg3="reverse_pre&#39;result&#39;unused&#39;unused4,x2,x1,x">
      <goal name="reverse_pre&#39;vc.15.21.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="2.23" steps="1162515"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.15.21.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="4.86" steps="1442624"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.15.21.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.22" steps="1162515"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.15.22" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="reverse_pre&#39;vc.15.22.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="ancillas_pre&#39;def22" arg2="result">
     <goal name="reverse_pre&#39;vc.15.22.0.0" expl="postcondition" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="reverse_pre&#39;vc.15.22.0.0.0" expl="destruct premise" proved="true">
      <proof prover="5"><result status="valid" time="4.53" steps="1444937"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.15.22.0.0.1" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="4.66" steps="1449067"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.15.23" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="reverse_pre&#39;vc.15.23.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="ancillas_pre&#39;def21" arg2="result">
     <goal name="reverse_pre&#39;vc.15.23.0.0" expl="postcondition" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="reverse_pre&#39;vc.15.23.0.0.0" expl="destruct premise" proved="true">
      <proof prover="5"><result status="valid" time="4.52" steps="1444994"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.15.23.0.0.1" expl="postcondition" proved="true">
      <proof prover="1"><result status="valid" time="1.32"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.15.24" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.35" steps="942719"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.16" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="reverse_pre&#39;vc.16.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="width&#39;spec">
    <goal name="reverse_pre&#39;vc.16.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="pre_to_qc">
     <goal name="reverse_pre&#39;vc.16.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="width&#39;spec">
      <goal name="reverse_pre&#39;vc.16.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="pre_to_qc">
       <goal name="reverse_pre&#39;vc.16.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="5"><result status="valid" time="2.03" steps="1169560"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.16.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.99" steps="1169560"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="reverse_pre&#39;vc.16.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.93" steps="1169560"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="3.33" steps="1210119"/></proof>
  </goal>
  <goal name="reverse_pre&#39;vc.18" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="reverse_pre&#39;vc.18.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="ancilla_free&#39;spec">
    <goal name="reverse_pre&#39;vc.18.0.0" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="4.07" steps="1459013"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.19" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H3">
   <goal name="reverse_pre&#39;vc.19.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.70" steps="1022104"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.52" steps="1214341"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.2" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.54" steps="1214134"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.3" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.94" steps="1214130"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.4" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.37" steps="1214112"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.5" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.57" steps="1214108"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.6" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.37" steps="984094"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.7" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Rzp 2))">
    <goal name="reverse_pre&#39;vc.19.7.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="reverse_pre&#39;vc.19.7.0.0" expl="postcondition" proved="true">
     <proof prover="5"><result status="valid" time="3.90" steps="1296064"/></proof>
     </goal>
     <goal name="reverse_pre&#39;vc.19.7.0.1" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Rzp 2))">
      <goal name="reverse_pre&#39;vc.19.7.0.1.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="3.39" steps="1278198"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.7.0.1.1" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(to_qc (Rzp 2))" arg2="(rewrite_s())">
       <goal name="reverse_pre&#39;vc.19.7.0.1.1.0" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.46" steps="984409"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.7.0.1.1.1" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="2.69" steps="944162"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.19.7.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.34" steps="984148"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.19.7.1" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(to_qc (Rzp 2))" arg2="(rewrite_s())">
     <goal name="reverse_pre&#39;vc.19.7.1.0" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.70" steps="984347"/></proof>
     </goal>
     <goal name="reverse_pre&#39;vc.19.7.1.1" expl="equality hypothesis" proved="true">
     <proof prover="5"><result status="valid" time="2.49" steps="944100"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.19.7.2" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="2.31" steps="984086"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.19.8" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Rzp 3))">
    <goal name="reverse_pre&#39;vc.19.8.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="reverse_pre&#39;vc.19.8.0.0" expl="postcondition" proved="true">
     <proof prover="5"><result status="valid" time="3.59" steps="1296100"/></proof>
     </goal>
     <goal name="reverse_pre&#39;vc.19.8.0.1" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Rzp 3))">
      <goal name="reverse_pre&#39;vc.19.8.0.1.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="3.79" steps="1278214"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.8.0.1.1" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(to_qc (Rzp 3))" arg2="(rewrite_t())">
       <goal name="reverse_pre&#39;vc.19.8.0.1.1.0" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.56" steps="984409"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.8.0.1.1.1" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="2.47" steps="944162"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.19.8.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.41" steps="984148"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.19.8.1" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(to_qc (Rzp 3))" arg2="(rewrite_t())">
     <goal name="reverse_pre&#39;vc.19.8.1.0" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.72" steps="984347"/></proof>
     </goal>
     <goal name="reverse_pre&#39;vc.19.8.1.1" expl="equality hypothesis" proved="true">
     <proof prover="5"><result status="valid" time="2.44" steps="944100"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.19.8.2" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="2.51" steps="984086"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.19.9" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.61" steps="984094"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.10" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.37" steps="984092"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.11" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.35" steps="984094"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.12" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="4.01" steps="1229977"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.13" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Toffoli 0 1 2 3 ))">
    <goal name="reverse_pre&#39;vc.19.13.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="reverse_pre&#39;vc.19.13.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Toffoli 0 1 2 3 ))">
      <goal name="reverse_pre&#39;vc.19.13.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="3.66" steps="1214813"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.13.0.0.1" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="H4">
       <goal name="reverse_pre&#39;vc.19.13.0.0.1.0" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="(to_qc Bricks_Toffoli )" arg2="(bricks_toffoli )">
        <goal name="reverse_pre&#39;vc.19.13.0.0.1.0.0" expl="rewrite premises" proved="true">
        <transf name="replace" proved="true" arg1="(to_qc (Toffoli 0 1 2 3))" arg2="(toffoli 0 1 2 3)">
         <goal name="reverse_pre&#39;vc.19.13.0.0.1.0.0.0" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="1.43" steps="882488"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.13.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="assert" proved="true" arg1="(  (Toffoli 0 1 2 3) = pre (toffoli 0 1 2 3))">
          <goal name="reverse_pre&#39;vc.19.13.0.0.1.0.0.1.0" expl="asserted formula" proved="true">
          <proof prover="5"><result status="valid" time="3.54" steps="1213466"/></proof>
          </goal>
          <goal name="reverse_pre&#39;vc.19.13.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
          <proof prover="5"><result status="valid" time="2.39" steps="944100"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.19.13.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="2.42" steps="944073"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.19.13.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.84" steps="983792"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="reverse_pre&#39;vc.19.13.0.1" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Toffoli 0 1 2 3 ))">
      <goal name="reverse_pre&#39;vc.19.13.0.1.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="in" arg3="H" arg4="with" arg5="(to_qc (Toffoli 0 1 2 3 ))">
       <goal name="reverse_pre&#39;vc.19.13.0.1.0.0" expl="postcondition" proved="true">
       <proof prover="5"><result status="valid" time="3.96" steps="1214813"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.13.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.55" steps="1214854"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.13.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.53" steps="983784"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.19.13.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="3.55" steps="1214854"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.13.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.81" steps="983784"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.19.13.1" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="3.94" steps="1214546"/></proof>
    </goal>
    <goal name="reverse_pre&#39;vc.19.13.2" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="2.90" steps="983748"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.19.14" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Fredkin 0 1 2 3 ))">
    <goal name="reverse_pre&#39;vc.19.14.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="reverse_pre&#39;vc.19.14.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Fredkin 0 1 2 3 ))">
      <goal name="reverse_pre&#39;vc.19.14.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="3.98" steps="1214813"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.14.0.0.1" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="H4">
       <goal name="reverse_pre&#39;vc.19.14.0.0.1.0" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="(to_qc Bricks_Fredkin )" arg2="(bricks_fredkin )
">
        <goal name="reverse_pre&#39;vc.19.14.0.0.1.0.0" expl="rewrite premises" proved="true">
        <transf name="assert" proved="true" arg1="(  (Fredkin 0 1 2 3) = pre (fredkin 0 1 2 3))">
         <goal name="reverse_pre&#39;vc.19.14.0.0.1.0.0.0" expl="asserted formula" proved="true">
         <proof prover="5"><result status="valid" time="4.05" steps="1213574"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.14.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="2.88" steps="983814"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.19.14.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="2.74" steps="944073"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.19.14.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.95" steps="983792"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="reverse_pre&#39;vc.19.14.0.1" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="with" arg3="(to_qc (Fredkin 0 1 2 3 ))">
      <goal name="reverse_pre&#39;vc.19.14.0.1.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="get_equiv_circuits" arg2="in" arg3="H" arg4="with" arg5="(to_qc (Fredkin 0 1 2 3 ))">
       <goal name="reverse_pre&#39;vc.19.14.0.1.0.0" expl="postcondition" proved="true">
       <proof prover="5"><result status="valid" time="4.07" steps="1214813"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.14.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="4.05" steps="1214858"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.14.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.55" steps="983784"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.19.14.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="4.28" steps="1214858"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.14.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.92" steps="983784"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.19.14.1" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="3.96" steps="1214546"/></proof>
    </goal>
    <goal name="reverse_pre&#39;vc.19.14.2" expl="rewrite premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="reverse_pre&#39;vc.19.14.2.0" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.46" steps="983748"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.19.15" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="2.74" steps="984098"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.16" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.78" steps="1210030"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.17" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.83" steps="1210030"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.18" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.59" steps="1210329"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.19" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="3.77" steps="1210329"/></proof>
   </goal>
   <goal name="reverse_pre&#39;vc.19.20" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="to_qc_place" arg2="c,x3,x2,x1">
    <goal name="reverse_pre&#39;vc.19.20.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="reverse_pre&#39;vc.19.20.0.0" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="to_qc_place" arg2="result,o5,x2,x1">
      <goal name="reverse_pre&#39;vc.19.20.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Hinst">
       <goal name="reverse_pre&#39;vc.19.20.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket(ket_to_bv x))">
        <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="place_kron_bv">
         <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="place_kron_bv">
          <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
           <transf name="replace" proved="true" arg1="y" arg2="( kronecker
  (kronecker (bv_to_ket (hpart (ket_to_bv x) x2))
   (path_sem (to_qc x3)
    (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc x3))))))
  (bv_to_ket (tpart (ket_to_bv x) (x2 +&#39; width (to_qc x3)))))">
            <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
             <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
             <transf name="rewrite" proved="true" arg1="place_kron_exp">
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
               <transf name="instantiate" proved="true" arg1="H6" arg2="(bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc x3)))),(path_sem (to_qc x3)
     (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc x3)))))">
                <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                <transf name="split_all_full" proved="true" >
                 <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                 <transf name="rewrite" proved="true" arg1="Hinst1">
                  <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
                   <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                   <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                    <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                    <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                     <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                     <transf name="replace" proved="true" arg1="(concat1
   (concat1 (hpart (ket_to_bv x) x2)
    (htpart (ket_to_bv x) x2 (width (to_qc x3))))
   (tpart (ket_to_bv x) (x2 +&#39; width (to_qc x3))))" arg2="(ket_to_bv x)">
                      <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                      <proof prover="5"><result status="valid" time="2.04" steps="1162820"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                      <transf name="apply" proved="true" arg1="bv_decomp_hhtt_rev">
                       <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="4.56" steps="1455696"/></proof>
                       </goal>
                       <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="4.01" steps="1455827"/></proof>
                       </goal>
                       <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="4.49" steps="1463762"/></proof>
                       </goal>
                       <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.3" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="1.75" steps="1162820"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="4.61" steps="1457251"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="4.80" steps="1457883"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="2.15" steps="1162820"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="4.11" steps="1219066"/></proof>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="4.09" steps="1221822"/></proof>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="4.10" steps="1221146"/></proof>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="4.05" steps="1245817"/></proof>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
               <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.0.0.5.0" expl="apply premises" proved="true">
               <proof prover="5"><result status="valid" time="3.96" steps="1231625"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="5"><result status="valid" time="1.47" steps="883156"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1" expl="VC for reverse_pre" proved="true">
           <transf name="replace" proved="true" arg1="y" arg2="( kronecker
  (kronecker (bv_to_ket (hpart (ket_to_bv x) x2))
   (path_sem (to_qc o5)
    (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o5))))))
  (bv_to_ket (tpart (ket_to_bv x) (x2 +&#39; width (to_qc o5)))) )">
            <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0" expl="VC for reverse_pre" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
             <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0" expl="VC for reverse_pre" proved="true">
             <transf name="rewrite" proved="true" arg1="place_kron_exp">
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0" expl="VC for reverse_pre" proved="true">
              <transf name="replace" proved="true" arg1="(path_sem (to_qc x3)
    (path_sem (to_qc o5)
     (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o5))))))" arg2="(  ( (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o5))))))
">
               <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0" expl="VC for reverse_pre" proved="true">
               <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
                <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                 <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                 <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                  <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                  <transf name="replace" proved="true" arg1="(concat1
   (concat1 (hpart (ket_to_bv x) x2)
    (htpart (ket_to_bv x) x2 (width (to_qc o5))))
   (tpart (ket_to_bv x) (x2 +&#39; width (to_qc o5))))" arg2="(ket_to_bv x)
">
                   <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                   <proof prover="5"><result status="valid" time="1.26" steps="883147"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                   <transf name="apply" proved="true" arg1="bv_decomp_hhtt_rev">
                    <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="3.78" steps="1219416"/></proof>
                    </goal>
                    <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="3.78" steps="1219083"/></proof>
                    </goal>
                    <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.2" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="4.02" steps="1226027"/></proof>
                    </goal>
                    <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.3" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="1.59" steps="883147"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
                <transf name="instantiate" proved="true" arg1="H7" arg2="(  (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o5))))),(path_sem (to_qc o5)
   (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o5)))))
">
                 <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="Hinst">
                   <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="4.82" steps="1460116"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.61" steps="1235559"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="4.94" steps="1461122"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="2.18" steps="1162890"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="3.95" steps="1219416"/></proof>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="3.95" steps="1221451"/></proof>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.3" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="4.02" steps="1220840"/></proof>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.4" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="3.94" steps="1245590"/></proof>
              </goal>
              <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.5" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
               <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.0.0.5.0" expl="apply premises" proved="true">
               <proof prover="5"><result status="valid" time="3.87" steps="1231699"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="5"><result status="valid" time="1.41" steps="883156"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="3.64" steps="1213124"/></proof>
          </goal>
          <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="3.79" steps="1215632"/></proof>
          </goal>
          <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="3.78" steps="1219317"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.69" steps="1213124"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.85" steps="1215640"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.80" steps="1219317"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.19.20.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="2.28" steps="945029"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="reverse_pre&#39;vc.19.20.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.44" steps="883070"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.20.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.48" steps="883070"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.20.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.42" steps="1213124"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.20.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.55" steps="1213316"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="reverse_pre&#39;vc.19.20.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.37" steps="882994"/></proof>
     </goal>
     <goal name="reverse_pre&#39;vc.19.20.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.41" steps="882994"/></proof>
     </goal>
     <goal name="reverse_pre&#39;vc.19.20.0.3" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="3.37" steps="1212967"/></proof>
     </goal>
     <goal name="reverse_pre&#39;vc.19.20.0.4" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="3.38" steps="1213077"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.19.21" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(to_qc c)" arg2="(cont (to_qc x4) x3 x2 x1)">
    <goal name="reverse_pre&#39;vc.19.21.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(to_qc result)" arg2="(cont (to_qc o4) x3 x2 x1)
">
     <goal name="reverse_pre&#39;vc.19.21.0.0" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(getbv (ket_to_bv x) x3 = 0)">
      <goal name="reverse_pre&#39;vc.19.21.0.0.0" expl="true case (postcondition)" proved="true">
      <proof prover="5"><result status="valid" time="3.87" steps="1228186"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.21.0.0.1" expl="false case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="path_cont_keto">
       <goal name="reverse_pre&#39;vc.19.21.0.0.1.0" expl="false case (postcondition)" proved="true">
       <transf name="instantiate" proved="true" arg1="path_cont_keto" arg2="(to_qc o4),x3,x2,x1,x
">
        <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0" expl="false case (postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="Hinst">
         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
         <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
          <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0" expl="false case (postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="place_kron_bv">
           <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="place_kron_bv">
            <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
             <transf name="replace" proved="true" arg1="y" arg2="( kronecker
  (kronecker (bv_to_ket (hpart (ket_to_bv x) x2))
   (path_sem (to_qc x4)
    (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc x4))))))
  (bv_to_ket (tpart (ket_to_bv x) (x2 +&#39; width (to_qc x4)))))">
              <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
              <transf name="rewrite" proved="true" arg1="cont_kron_one">
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
               <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                <transf name="rewrite" proved="true" arg1="place_kron_exp">
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                 <transf name="replace" proved="true" arg1="(path_sem (to_qc o4)
    (path_sem (to_qc x4)
     (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc x4))))))" arg2="(  (   (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc x4))))))
">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                   <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                    <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                     <transf name="replace" proved="true" arg1="(concat1
   (concat1 (hpart (ket_to_bv x) x2)
    (htpart (ket_to_bv x) x2 (width (to_qc x4))))
   (tpart (ket_to_bv x) (x2 +&#39; width (to_qc x4))))" arg2="(ket_to_bv x)">
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                      <proof prover="5"><result status="valid" time="1.34" steps="883239"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                      <transf name="apply" proved="true" arg1="bv_decomp_hhtt_rev">
                       <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="3.98" steps="1244312"/></proof>
                       </goal>
                       <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="3.99" steps="1244237"/></proof>
                       </goal>
                       <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.0" expl="apply premises" proved="true">
                        <proof prover="5"><result status="valid" time="3.52" steps="1246320"/></proof>
                        </goal>
                        <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.1" expl="apply premises" proved="true">
                        <transf name="replace" proved="true" arg1="( length1 (ket_to_bv x))" arg2="x1">
                         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.1.0" expl="apply premises" proved="true">
                         <proof prover="5"><result status="valid" time="3.59" steps="1246302"/></proof>
                         </goal>
                         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.1.1" expl="equality hypothesis" proved="true">
                         <transf name="apply" proved="true" arg1="ket_to_bv_length">
                          <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.1.1.0" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="1.38" steps="883241"/></proof>
                          </goal>
                          <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.1.1.1" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="3.79" steps="1228593"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.3" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="1.34" steps="883239"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
                   <transf name="instantiate" proved="true" arg1="H6" arg2="bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc x4))),(path_sem (to_qc x4)
   (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc x4)))))
">
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                     <proof prover="5"><result status="valid" time="4.71" steps="1466104"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="4.03" steps="1244312"/></proof>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="4.01" steps="1228475"/></proof>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="4.03" steps="1246181"/></proof>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="3.62" steps="1251126"/></proof>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0" expl="apply premises" proved="true">
                  <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="tpart_length">
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.0" expl="apply premises" proved="true">
                    <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="5"><result status="valid" time="1.37" steps="883270"/></proof>
                     </goal>
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.0.1" expl="equality hypothesis" proved="true">
                     <transf name="apply" proved="true" arg1="ket_to_bv_length">
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.0.1.0" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.27" steps="883241"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.0.1.1" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="3.89" steps="1228593"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.1.0" expl="rewrite premises" proved="true">
                     <proof prover="5"><result status="valid" time="4.01" steps="1247723"/></proof>
                     </goal>
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.1.1" expl="equality hypothesis" proved="true">
                     <transf name="apply" proved="true" arg1="ket_to_bv_length">
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.1.1.0" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.24" steps="883241"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.0.1.1.1" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="3.81" steps="1228593"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.1" expl="equality hypothesis" proved="true">
                   <transf name="apply" proved="true" arg1="ket_to_bv_length">
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.1.0" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="1.35" steps="883241"/></proof>
                    </goal>
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.0.0.5.0.1.1" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="3.90" steps="1228593"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.86" steps="1244366"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.83" steps="1246923"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.85" steps="1246816"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.88" steps="1246181"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.83" steps="1251126"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="tpart_length">
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.0.0" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.41" steps="883277"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="ket_to_bv_length">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.0.1.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.37" steps="883241"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.0.1.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.53" steps="1228593"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.1" expl="rewrite premises" proved="true">
                 <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.1.0" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="3.58" steps="1247723"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.1.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="ket_to_bv_length">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.1.1.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.38" steps="883241"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.6.0.1.1.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.45" steps="1228593"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.7" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="2.50" steps="945354"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.8" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="2.46" steps="945354"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.9" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.75" steps="1249858"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.10" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.10.0" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.10.0.0" expl="rewrite premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="tpart_value_b">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.10.0.0.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="get_binary_one" arg2="with" arg3="(width_pre c)">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.10.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.47" steps="1244536"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.10.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.93" steps="1248189"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.10.0.0.0.2" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="1.74"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.10.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="4.13" steps="1246833"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.0.10.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="4.27" steps="1250231"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="5"><result status="valid" time="1.55" steps="883248"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1" expl="VC for reverse_pre" proved="true">
             <transf name="replace" proved="true" arg1="y" arg2="(kronecker
  (kronecker (bv_to_ket (hpart (ket_to_bv x) x2))
   (path_sem (to_qc o4)
    (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o4))))))
  (bv_to_ket (tpart (ket_to_bv x) (x2 +&#39; width (to_qc o4)))))
">
              <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0" expl="VC for reverse_pre" proved="true">
              <transf name="rewrite" proved="true" arg1="cont_kron_one">
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0" expl="VC for reverse_pre" proved="true">
               <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
                <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0" expl="VC for reverse_pre" proved="true">
                <transf name="rewrite" proved="true" arg1="place_kron_exp">
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0" expl="VC for reverse_pre" proved="true">
                 <transf name="replace" proved="true" arg1="(path_sem (to_qc x4)
    (path_sem (to_qc o4)
     (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o4))))))" arg2="((     (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o4))))))
">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                   <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                    <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                     <transf name="replace" proved="true" arg1="(concat1
   (concat1 (hpart (ket_to_bv x) x2)
    (htpart (ket_to_bv x) x2 (width (to_qc o4))))
   (tpart (ket_to_bv x) (x2 +&#39; width (to_qc o4))))" arg2="(ket_to_bv x)
">
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                      <proof prover="5"><result status="valid" time="1.31" steps="883232"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                      <transf name="apply" proved="true" arg1="bv_decomp_hhtt_rev">
                       <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="4.14" steps="1244461"/></proof>
                       </goal>
                       <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="4.19" steps="1244152"/></proof>
                       </goal>
                       <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.0" expl="apply premises" proved="true">
                        <proof prover="5"><result status="valid" time="4.07" steps="1246654"/></proof>
                        </goal>
                        <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.1" expl="apply premises" proved="true">
                        <transf name="replace" proved="true" arg1="( length1 (ket_to_bv x))" arg2="x1">
                         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.1.0" expl="apply premises" proved="true">
                         <proof prover="5"><result status="valid" time="3.94" steps="1228264"/></proof>
                         </goal>
                         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.1.1" expl="equality hypothesis" proved="true">
                         <transf name="apply" proved="true" arg1="ket_to_bv_length">
                          <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.1.1.0" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="1.32" steps="883234"/></proof>
                          </goal>
                          <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.1.1.1" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="4.21" steps="1228186"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.3" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="1.59" steps="883232"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="split_all_full" proved="true" >
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
                   <transf name="instantiate" proved="true" arg1="H7" arg2="(
   (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o4))))),(path_sem (to_qc o4)
   (bv_to_ket (htpart (ket_to_bv x) x2 (width (to_qc o4))))) 
">
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                     <transf name="apply" proved="true" arg1="Hinst">
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="4.80" steps="1467480"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="3.59" steps="1235758"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="4.77" steps="1468115"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="2.12" steps="1162997"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="4.16" steps="1244461"/></proof>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="4.25" steps="1246603"/></proof>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.3" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="4.30" steps="1246124"/></proof>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.4" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="4.19" steps="1251502"/></proof>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0" expl="apply premises" proved="true">
                  <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="tpart_length">
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.0" expl="apply premises" proved="true">
                    <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="5"><result status="valid" time="1.60" steps="883274"/></proof>
                     </goal>
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.0.1" expl="equality hypothesis" proved="true">
                     <transf name="apply" proved="true" arg1="ket_to_bv_length">
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.0.1.0" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.32" steps="883234"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.0.1.1" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="4.05" steps="1228186"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.1.0" expl="rewrite premises" proved="true">
                     <proof prover="5"><result status="valid" time="4.26" steps="1248327"/></proof>
                     </goal>
                     <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.1.1" expl="equality hypothesis" proved="true">
                     <transf name="apply" proved="true" arg1="ket_to_bv_length">
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.1.1.0" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.38" steps="883234"/></proof>
                      </goal>
                      <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.0.1.1.1" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="3.71" steps="1228186"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.1" expl="equality hypothesis" proved="true">
                   <transf name="apply" proved="true" arg1="ket_to_bv_length">
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.1.0" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="1.36" steps="883234"/></proof>
                    </goal>
                    <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.0.0.5.0.1.1" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="3.40" steps="1228186"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.43" steps="1244097"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.60" steps="1246780"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.83" steps="1246401"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.4" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="4.12" steps="1246124"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.5" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="4.22" steps="1251502"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="tpart_length">
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.0.0" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.60" steps="883274"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="ket_to_bv_length">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.0.1.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.59" steps="883234"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.0.1.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="4.11" steps="1228186"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.1" expl="rewrite premises" proved="true">
                 <transf name="replace" proved="true" arg1="(length1 (ket_to_bv x))" arg2="x1">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.1.0" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="4.12" steps="1248327"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.1.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="ket_to_bv_length">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.1.1.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.33" steps="883234"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.6.0.1.1.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.54" steps="1228186"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.7" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="2.41" steps="945382"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.8" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="2.68" steps="945387"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.9" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="3.96" steps="1249914"/></proof>
               </goal>
               <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.10" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.10.0" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
                 <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.10.0.0" expl="rewrite premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="tpart_value_b">
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.10.0.0.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="get_binary_one" arg2="with" arg3="(width_pre c)">
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.10.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.74" steps="1244881"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.10.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.72" steps="1248363"/></proof>
                   </goal>
                   <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.10.0.0.0.2" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.02"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.10.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="4.19" steps="1246492"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.0.10.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="4.40" steps="1250662"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
              <proof prover="5"><result status="valid" time="1.58" steps="883241"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="5"><result status="valid" time="4.13" steps="1238931"/></proof>
            </goal>
            <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="5"><result status="valid" time="4.11" steps="1221436"/></proof>
            </goal>
            <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="ket_to_bv_length">
             <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.3.0" expl="apply premises" proved="true">
             <proof prover="5"><result status="valid" time="1.57" steps="883166"/></proof>
             </goal>
             <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.0.3.1" expl="apply premises" proved="true">
             <proof prover="5"><result status="valid" time="4.04" steps="1223346"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="4.18" steps="1238931"/></proof>
           </goal>
           <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="4.13" steps="1241648"/></proof>
           </goal>
           <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.3" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="ket_to_bv_length">
            <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.3.0" expl="apply premises" proved="true">
            <proof prover="5"><result status="valid" time="1.51" steps="883166"/></proof>
            </goal>
            <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.0.3.1" expl="apply premises" proved="true">
            <proof prover="5"><result status="valid" time="3.87" steps="1223346"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="5"><result status="valid" time="2.59" steps="945225"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.59" steps="1239113"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.69" steps="1241595"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.69" steps="1241349"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.4" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.60" steps="1221431"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.5" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="1.37" steps="883166"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.21.0.0.1.0.0.6" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.58" steps="1241705"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="reverse_pre&#39;vc.19.21.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.33" steps="1216905"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.21.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.40" steps="1218963"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.21.0.0.1.3" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.39" steps="1218938"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.21.0.0.1.4" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.39" steps="1219023"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.21.0.0.1.5" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.35" steps="882962"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.21.0.0.1.6" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.31" steps="1220579"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="reverse_pre&#39;vc.19.21.0.1" expl="equality hypothesis" proved="true">
     <proof prover="5"><result status="valid" time="3.38" steps="1213490"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.19.21.1" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="3.12" steps="1213266"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.19.22" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="to_qc_seq" arg2="c,x2,x1">
    <goal name="reverse_pre&#39;vc.19.22.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="to_qc_seq" arg2="result,o2,o3
">
     <goal name="reverse_pre&#39;vc.19.22.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Hinst">
      <goal name="reverse_pre&#39;vc.19.22.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Hinst1">
       <goal name="reverse_pre&#39;vc.19.22.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_comp_">
        <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_comp_">
         <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="path_sem_comp_">
          <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_comp_">
           <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
            <transf name="instantiate" proved="true" arg1="H5" arg2="(path_sem (to_qc x2) x),y
">
             <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
               <transf name="rewrite" proved="true" arg1="Hinst1">
                <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                <transf name="instantiate" proved="true" arg1="H17" arg2="x,(path_sem (to_qc x2) x)">
                 <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
                 <transf name="apply" proved="true" arg1="Hinst">
                  <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="4.05" steps="1459257"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="4.06" steps="1460638"/></proof>
                  </goal>
                  <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.56" steps="1163488"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="5"><result status="valid" time="4.07" steps="1459932"/></proof>
                </goal>
                <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="5"><result status="valid" time="3.64" steps="1457584"/></proof>
                </goal>
                <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                <proof prover="5"><result status="valid" time="1.78" steps="1163444"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.1" expl="VC for reverse_pre" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.1.0" expl="VC for reverse_pre" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.0.1.0.0" expl="VC for reverse_pre" proved="true">
              <proof prover="5"><result status="valid" time="4.12" steps="1460345"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="3.34" steps="1223427"/></proof>
           </goal>
           <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="3.38" steps="1220465"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="3.37" steps="1223492"/></proof>
          </goal>
          <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="3.32" steps="1220446"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.33" steps="1223451"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="2.91" steps="1220446"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="2.98" steps="1223691"/></proof>
        </goal>
        <goal name="reverse_pre&#39;vc.19.22.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="2.93" steps="1220465"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="reverse_pre&#39;vc.19.22.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.14" steps="883421"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.22.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.16" steps="883421"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.22.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="2.52" steps="945642"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.19.22.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.45" steps="883421"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.22.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.41" steps="883421"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.22.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.43" steps="945647"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.19.23" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(to_qc c)" arg2="(to_qc x2 // to_qc x1)">
    <goal name="reverse_pre&#39;vc.19.23.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_basis_par">
     <goal name="reverse_pre&#39;vc.19.23.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.19.23.0.0.0" expl="VC for reverse_pre" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="reverse_pre&#39;vc.19.23.0.0.0.0" expl="VC for reverse_pre" proved="true">
       <transf name="replace" proved="true" arg1="x" arg2="(kronecker (bv_to_ket (hpart (ket_to_bv x)(width_pre reverse_pre&#39;result&#39;unused&#39;unused))) (bv_to_ket (tpart (ket_to_bv x) (width_pre reverse_pre&#39;result&#39;unused&#39;unused))))
">
        <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
        <transf name="replace" proved="true" arg1="y" arg2="( kronecker
  (path_sem (to_qc x2) (bv_to_ket (hpart (ket_to_bv x) (width (to_qc x2)))))
  (path_sem (to_qc x1) (bv_to_ket (tpart (ket_to_bv x) (width (to_qc x2))))))">
         <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
         <transf name="replace" proved="true" arg1="(to_qc result)" arg2="(to_qc reverse_pre&#39;result&#39;unused&#39;unused // to_qc reverse_pre&#39;result&#39;unused&#39;unused1)
">
          <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
          <transf name="apply" proved="true" arg1="path_sem_kron">
           <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="4.14" steps="1456723"/></proof>
           </goal>
           <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="4.02" steps="1499627"/></proof>
           </goal>
           <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
            <proof prover="5"><result status="valid" time="3.72" steps="1460049"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
            <proof prover="5"><result status="valid" time="4.18" steps="1501885"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="5"><result status="valid" time="2.54" steps="1235000"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="5"><result status="valid" time="1.40" steps="1162657"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.19.23.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="3.44" steps="1459536"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.19.23.0.0.1" expl="VC for reverse_pre" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="reverse_pre&#39;vc.19.23.0.0.1.0" expl="VC for reverse_pre" proved="true">
       <transf name="replace" proved="true" arg1="(to_qc result)" arg2="(to_qc reverse_pre&#39;result&#39;unused&#39;unused  // to_qc reverse_pre&#39;result&#39;unused&#39;unused1)" arg3="in" arg4="H">
        <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0" expl="VC for reverse_pre" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_basis_par" arg2="in" arg3="H">
         <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0" expl="VC for reverse_pre" proved="true">
         <transf name="replace" proved="true" arg1="y" arg2="(kronecker
  (path_sem (to_qc reverse_pre&#39;result&#39;unused&#39;unused)
   (bv_to_ket (hpart (ket_to_bv x) (width (to_qc reverse_pre&#39;result&#39;unused&#39;unused)))))
  (path_sem (to_qc reverse_pre&#39;result&#39;unused&#39;unused1)
   (bv_to_ket (tpart (ket_to_bv x) (width (to_qc reverse_pre&#39;result&#39;unused&#39;unused))))))
">
          <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0" expl="VC for reverse_pre" proved="true">
          <transf name="replace" proved="true" arg1="x" arg2="(kronecker
   (    (bv_to_ket (hpart (ket_to_bv x) (width (to_qc reverse_pre&#39;result&#39;unused&#39;unused)))))
   (    (bv_to_ket (tpart (ket_to_bv x) (width (to_qc reverse_pre&#39;result&#39;unused&#39;unused))))))
">
           <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.0" expl="VC for reverse_pre" proved="true">
           <transf name="apply" proved="true" arg1="path_sem_kron">
            <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="5"><result status="valid" time="3.98" steps="1460504"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
             <proof prover="5"><result status="valid" time="4.43" steps="1503905"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.0.2.0" expl="apply premises" proved="true">
             <proof prover="5"><result status="valid" time="3.75" steps="1465762"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.0.3" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.0.3.0" expl="apply premises" proved="true">
             <proof prover="5"><result status="valid" time="4.63" steps="1505018"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="5"><result status="valid" time="3.96" steps="1462599"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="5"><result status="valid" time="1.72" steps="1162657"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <transf name="replace" proved="true" arg1="(width (to_qc reverse_pre&#39;result&#39;unused&#39;unused)
   +&#39; width (to_qc reverse_pre&#39;result&#39;unused&#39;unused1))" arg2="(width (to_qc result))">
          <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="3.89" steps="1451296"/></proof>
          </goal>
          <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
          <proof prover="5"><result status="valid" time="3.84" steps="1453821"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="1.73" steps="1162617"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.19.23.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="2.74" steps="1234969"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="reverse_pre&#39;vc.19.23.0.1" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="reverse_pre&#39;vc.19.23.0.1.0" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(width (to_qc x2) +&#39; width (to_qc x1))" arg2="(width (to_qc c))">
       <goal name="reverse_pre&#39;vc.19.23.0.1.0.0" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="2.96" steps="1237507"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.19.23.0.1.0.1" expl="equality hypothesis" proved="true">
       <proof prover="1"><result status="valid" time="1.62"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="reverse_pre&#39;vc.19.23.0.2" expl="rewrite premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_pre&#39;vc.19.23.0.2.0" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.92" steps="1162616"/></proof>
      </goal>
     </transf>
     <transf name="split_vc" proved="true" >
      <goal name="reverse_pre&#39;vc.19.23.0.2.0" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.44" steps="883283"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.19.23.1" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="2.11" steps="945432"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.19.24" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(ancilla_free_pre c)">
    <goal name="reverse_pre&#39;vc.19.24.0" expl="asserted formula" proved="true">
    <proof prover="5"><result status="valid" time="3.36" steps="1206841"/></proof>
    </goal>
    <goal name="reverse_pre&#39;vc.19.24.1" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="ancilla_free_pre&#39;def" arg2="c">
     <goal name="reverse_pre&#39;vc.19.24.1.0" expl="postcondition" proved="true">
     <transf name="assert" proved="true" arg1="(build_correct c)">
      <goal name="reverse_pre&#39;vc.19.24.1.0.0" expl="asserted formula" proved="true">
      <proof prover="5"><result status="valid" time="3.39" steps="1206730"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.19.24.1.0.1" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="2.46" steps="946111"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="reverse_pre&#39;vc.20" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="reverse_pre&#39;vc.20.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="y" arg2="(path_sem (to_qc c) x)">
    <goal name="reverse_pre&#39;vc.20.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="x,(width_pre c)">
     <goal name="reverse_pre&#39;vc.20.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Hinst">
      <goal name="reverse_pre&#39;vc.20.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_sum_">
       <goal name="reverse_pre&#39;vc.20.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_sum_">
        <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="ket_sum_eq">
         <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="3.25" steps="1218403"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="1.39" steps="887659"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="path_sem_scal">
            <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="path_sem_scal">
             <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="scalar_eq">
              <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="5"><result status="valid" time="4.35" steps="1565320"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="5"><result status="valid" time="3.24" steps="1307917"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="5"><result status="valid" time="3.51" steps="1305509"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="5.29" steps="252589"/></proof>
        </goal>
        <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="3.48" steps="1220420"/></proof>
        </goal>
        <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="path_sem_ket_l">
           <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="3.50" steps="1308183"/></proof>
           </goal>
           <goal name="reverse_pre&#39;vc.20.0.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="1.41" steps="966335"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="reverse_pre&#39;vc.20.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="5.09" steps="252589"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.20.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.48" steps="1220165"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.20.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="reverse_pre&#39;vc.20.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="reverse_pre&#39;vc.20.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.79" steps="1308183"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.20.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="3.56" steps="1218403"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.20.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.47" steps="949701"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.20.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.19" steps="949780"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.20.0.1" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="1.42" steps="887509"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="reverse_pre&#39;vc.20.1" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="x" arg2="(path_sem (to_qc result) y )
">
    <goal name="reverse_pre&#39;vc.20.1.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="ket_decomp_" arg2="y,(width_pre c)">
     <goal name="reverse_pre&#39;vc.20.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Hinst">
      <goal name="reverse_pre&#39;vc.20.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_sum_">
       <goal name="reverse_pre&#39;vc.20.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_sum_">
        <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="ket_sum_eq">
         <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="3.50" steps="1218159"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="1.35" steps="887659"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.2" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.2.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="path_sem_scal">
            <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="path_sem_scal">
             <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="scalar_eq">
              <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="5"><result status="valid" time="4.77" steps="1565407"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="5"><result status="valid" time="3.95" steps="1307661"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="5"><result status="valid" time="3.77" steps="1305728"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="replace" proved="true" arg1="(width_pre c)" arg2="(width (to_qc c))">
         <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="n_bvs_card">
          <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="3.52" steps="1222365"/></proof>
          </goal>
          <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="3.48" steps="1218519"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="5"><result status="valid" time="3.53" steps="1220064"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="4.04" steps="1220064"/></proof>
        </goal>
        <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.3" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.3.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="path_sem_ket_l">
           <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="4.38" steps="1308423"/></proof>
           </goal>
           <goal name="reverse_pre&#39;vc.20.1.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="1.56" steps="966342"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="reverse_pre&#39;vc.20.1.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="(width_pre c)" arg2="(width (to_qc c))">
        <goal name="reverse_pre&#39;vc.20.1.0.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="n_bvs_card">
         <goal name="reverse_pre&#39;vc.20.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.62" steps="1222365"/></proof>
         </goal>
         <goal name="reverse_pre&#39;vc.20.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.64" steps="1218519"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="reverse_pre&#39;vc.20.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="3.50" steps="1220064"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="reverse_pre&#39;vc.20.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="3.76" steps="1220066"/></proof>
       </goal>
       <goal name="reverse_pre&#39;vc.20.1.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="reverse_pre&#39;vc.20.1.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="reverse_pre&#39;vc.20.1.0.0.0.3.0.0" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="3.84" steps="1308423"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="reverse_pre&#39;vc.20.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="3.85" steps="1218159"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.20.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.76" steps="949701"/></proof>
      </goal>
      <goal name="reverse_pre&#39;vc.20.1.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.80" steps="949780"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_pre&#39;vc.20.1.1" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="1.60" steps="887509"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="reverse&#39;vc" expl="VC for reverse" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="reverse&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="3.86" steps="1204257"/></proof>
  </goal>
  <goal name="reverse&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="2.62" steps="946415"/></proof>
  </goal>
  <goal name="reverse&#39;vc.2" expl="precondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="reverse&#39;vc.2.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="reverse&#39;vc.2.0.0" expl="precondition" proved="true">
    <proof prover="5"><result status="valid" time="2.36" steps="1213135"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="reverse&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="2.89" steps="985946"/></proof>
  </goal>
  <goal name="reverse&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="2.80" steps="985994"/></proof>
  </goal>
  <goal name="reverse&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="1.52" steps="885337"/></proof>
  </goal>
  <goal name="reverse&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="reverse&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="reverse&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="result&#39;def">
     <goal name="reverse&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse&#39;vc.6.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="3.89" steps="1290908"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="reverse&#39;vc.6.1" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="reverse&#39;vc.6.1.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="reverse&#39;vc.6.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="to_qc_pre" arg2="in" arg3="Ensures3">
      <goal name="reverse&#39;vc.6.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="3.83" steps="1290905"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="reverse_invol&#39;vc" expl="VC for reverse_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="reverse_invol&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="reverse_invol&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_equiv_circuits">
    <goal name="reverse_invol&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="reverse_invol&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="5"><result status="valid" time="4.78" steps="1450696"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="reverse_invol&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="reverse_invol&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="reverse_invol&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="reverse&#39;spec1">
       <goal name="reverse_invol&#39;vc.0.0.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="3.49" steps="1239123"/></proof>
       </goal>
       <goal name="reverse_invol&#39;vc.0.0.1.0.0.1" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="4.76" steps="1456745"/></proof>
       </goal>
       <goal name="reverse_invol&#39;vc.0.0.1.0.0.2" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="4.85" steps="1454119"/></proof>
       </goal>
       <goal name="reverse_invol&#39;vc.0.0.1.0.0.3" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="4.41" steps="1456683"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_reverse_invol&#39;vc" expl="VC for path_sem_reverse_invol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_reverse_invol&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="get_equiv_circuits">
   <goal name="path_sem_reverse_invol&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="reverse_invol">
    <goal name="path_sem_reverse_invol&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="1.28" steps="885285"/></proof>
    </goal>
   </transf>
   <transf name="split_all_full" proved="true" >
    <goal name="path_sem_reverse_invol&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="3.30" steps="1239155"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="path_sem_reverse_invol&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="path_sem_reverse_invol&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="reverse&#39;spec4">
     <goal name="path_sem_reverse_invol&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="reverse&#39;spec4">
      <goal name="path_sem_reverse_invol&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="5"><result status="valid" time="2.03" steps="1168309"/></proof>
      </goal>
      <goal name="path_sem_reverse_invol&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="2.03" steps="1168309"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="path_sem_reverse_invol&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="3.35" steps="1239147"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="path_sem_reverse&#39;vc" expl="VC for path_sem_reverse" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="path_sem_reverse&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="path_sem_reverse&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="4.36" steps="1451625"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sem_reverse&#39;vc" expl="VC for sem_reverse" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sem_reverse&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="sem_reverse&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="sem_reverse&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (reverse c))" arg2="(width c)">
     <goal name="sem_reverse&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="1.71"/></proof>
     </goal>
     <goal name="sem_reverse&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="5"><result status="valid" time="3.15" steps="1239398"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sem_reverse&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="sem_reverse&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="path_sem_reverse">
     <goal name="sem_reverse&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <proof prover="5"><result status="valid" time="3.13" steps="1239371"/></proof>
     </goal>
     <goal name="sem_reverse&#39;vc.0.1.0.1" expl="apply premises" proved="true">
     <proof prover="5"><result status="valid" time="3.12" steps="1239363"/></proof>
     </goal>
     <goal name="sem_reverse&#39;vc.0.1.0.2" expl="apply premises" proved="true">
     <proof prover="5"><result status="valid" time="1.89" steps="1168550"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
