<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.7" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.8.6" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="8" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="shor_spec.mlw"/>
<theory name="Ghost_terms" proved="true">
 <goal name="multi_o&#39;vc" expl="VC for multi_o" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="multi_o&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.66" steps="1306273"/></proof>
  </goal>
  <goal name="multi_o&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.87"/></proof>
  </goal>
  <goal name="multi_o&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.23" steps="1305470"/></proof>
  </goal>
  <goal name="multi_o&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.89"/></proof>
  </goal>
  <goal name="multi_o&#39;vc.4" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="multi_o&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="multi_o&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures1">
     <goal name="multi_o&#39;vc.4.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="modular_expo_modulo_rev">
      <goal name="multi_o&#39;vc.4.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.63" steps="1217334"/></proof>
      </goal>
      <goal name="multi_o&#39;vc.4.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.68" steps="1216989"/></proof>
      </goal>
      <goal name="multi_o&#39;vc.4.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.88" steps="982028"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="multi_o&#39;vc.4.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.93" steps="1050634"/></proof>
     </goal>
     <goal name="multi_o&#39;vc.4.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.83" steps="982028"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="multi_o&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.91" steps="22909"/></proof>
  </goal>
  <goal name="multi_o&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.91"/></proof>
  </goal>
  <goal name="multi_o&#39;vc.7" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="( k = n)">
   <goal name="multi_o&#39;vc.7.0" expl="true case (postcondition)" proved="true">
   <proof prover="1"><result status="valid" time="1.93"/></proof>
   </goal>
   <goal name="multi_o&#39;vc.7.1" expl="false case (postcondition)" proved="true">
   <transf name="apply" proved="true" arg1="inf_trans" arg2="with" arg3="(power 2 n)">
    <goal name="multi_o&#39;vc.7.1.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="1.91"/></proof>
    </goal>
    <goal name="multi_o&#39;vc.7.1.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="strict_growing_exp1">
     <goal name="multi_o&#39;vc.7.1.1.0" expl="apply premises" proved="true">
     <proof prover="6"><result status="valid" time="0.96" steps="22977"/></proof>
     </goal>
     <goal name="multi_o&#39;vc.7.1.1.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="1.85"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="multi_o&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="1.10" steps="22958"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="k_bound&#39;vc" expl="VC for k_bound" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="k_bound&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.02" steps="23022"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.99"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.23"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.3" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(k &lt;= (div1 (power 2 (2 * n)) (multi_o) ))
">
   <goal name="k_bound&#39;vc.3.0" expl="asserted formula" proved="true">
   <proof prover="6"><result status="valid" time="1.10" steps="23510"/></proof>
   </goal>
   <goal name="k_bound&#39;vc.3.1" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="i_to_c_mult">
    <goal name="k_bound&#39;vc.3.1.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c_add">
     <goal name="k_bound&#39;vc.3.1.0.0" expl="precondition" proved="true">
     <proof prover="1"><result status="valid" time="2.17"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.4" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="i_to_c_strict_pos">
   <goal name="k_bound&#39;vc.4.0" expl="apply premises" proved="true">
   <transf name="assert" proved="true" arg1="(forall a b. 0&lt; a -&gt; 0&lt;= b -&gt; 0&lt; a+b)">
    <goal name="k_bound&#39;vc.4.0.0" expl="asserted formula" proved="true">
    <proof prover="6"><result status="valid" time="0.98" steps="23577"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.4.0.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="h">
     <goal name="k_bound&#39;vc.4.0.1.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b. 0&lt; a -&gt; 0&lt; b -&gt; 0&lt; a*b)">
      <goal name="k_bound&#39;vc.4.0.1.0.0" expl="asserted formula" proved="true">
      <proof prover="6"><result status="valid" time="0.95" steps="23577"/></proof>
      </goal>
      <goal name="k_bound&#39;vc.4.0.1.0.1" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="h">
       <goal name="k_bound&#39;vc.4.0.1.0.1.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="positive_div">
        <goal name="k_bound&#39;vc.4.0.1.0.1.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="k_bound&#39;vc.4.0.1.0.1.0.0.0" proved="true">
         <proof prover="6"><result status="valid" time="1.12" steps="23565"/></proof>
         </goal>
         <goal name="k_bound&#39;vc.4.0.1.0.1.0.0.1" proved="true">
         <transf name="assert" proved="true" arg1="(multi_o &lt; bound &lt; power 2 (2*n) )">
          <goal name="k_bound&#39;vc.4.0.1.0.1.0.0.1.0" expl="asserted formula" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="k_bound&#39;vc.4.0.1.0.1.0.0.1.0.0" proved="true">
           <proof prover="6"><result status="valid" time="1.13" steps="23565"/></proof>
           </goal>
           <goal name="k_bound&#39;vc.4.0.1.0.1.0.0.1.0.1" proved="true">
           <transf name="assert" proved="true" arg1="(bound&lt; power 2 n &lt; power 2 (2*n) )">
            <goal name="k_bound&#39;vc.4.0.1.0.1.0.0.1.0.1.0" expl="asserted formula" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="k_bound&#39;vc.4.0.1.0.1.0.0.1.0.1.0.0" proved="true">
             <proof prover="1"><result status="valid" time="2.20"/></proof>
             </goal>
             <goal name="k_bound&#39;vc.4.0.1.0.1.0.0.1.0.1.0.1" proved="true">
             <transf name="apply" proved="true" arg1="strict_growing_exp1">
              <goal name="k_bound&#39;vc.4.0.1.0.1.0.0.1.0.1.0.1.0" expl="apply premises" proved="true">
              <proof prover="6"><result status="valid" time="1.06" steps="23565"/></proof>
              </goal>
              <goal name="k_bound&#39;vc.4.0.1.0.1.0.0.1.0.1.0.1.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.00"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="k_bound&#39;vc.4.0.1.0.1.0.0.1.0.1.1" proved="true">
            <proof prover="6"><result status="valid" time="1.01" steps="23581"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="k_bound&#39;vc.4.0.1.0.1.0.0.1.1" proved="true">
          <proof prover="6"><result status="valid" time="1.02" steps="23573"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="k_bound&#39;vc.4.0.1.0.1.1" expl="apply premises" proved="true">
       <proof prover="6"><result status="valid" time="0.97" steps="23565"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="k_bound&#39;vc.4.0.1.1" expl="apply premises" proved="true">
     <proof prover="6"><result status="valid" time="1.08" steps="23565"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.5" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pow_inv_2&#39;def">
   <goal name="k_bound&#39;vc.5.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="inv_order_complex">
    <goal name="k_bound&#39;vc.5.0.0" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="1.05" steps="23621"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.5.0.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="i_to_c_strict_pos">
     <goal name="k_bound&#39;vc.5.0.1.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="2.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="k_bound&#39;vc.5.0.2" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.43"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="k_bound&#39;vc.5.1" expl="rewrite premises" proved="true">
   <proof prover="1"><result status="valid" time="2.09"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.05"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.94"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.01"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.9" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.94" steps="23707"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="1.05" steps="23649"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.11" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="compat_order_mult" arg2="(((i_to_c k *. i_to_c (multi_o)) +. i_to_c i)
   *. pow_inv_2 (2 * n)),c_one,( i_to_c ( power 2 (2 * n)))">
   <goal name="k_bound&#39;vc.11.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="5.97" steps="1573185"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.12" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="c_one" arg2="( i_to_c (power 2 (2 * n)) *. pow_inv_2 (2*n))">
   <goal name="k_bound&#39;vc.12.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="compat_order_mult">
    <goal name="k_bound&#39;vc.12.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c_mult" arg2="in" arg3="Ensures">
     <goal name="k_bound&#39;vc.12.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_add" arg2="in" arg3="Ensures">
      <goal name="k_bound&#39;vc.12.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="6"><result status="valid" time="1.06" steps="23707"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="k_bound&#39;vc.12.0.1" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="1.98"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.12.0.2" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.03"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.12.0.3" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="1.08" steps="23707"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.12.0.4" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="1.99"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="k_bound&#39;vc.12.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="2.33"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.13" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="i_to_c_mult" arg2="in" arg3="Ensures1">
   <goal name="k_bound&#39;vc.13.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="i_to_c_add" arg2="in" arg3="Ensures1">
    <goal name="k_bound&#39;vc.13.0.0" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="1.06" steps="23766"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="best_appr_&#39;vc" expl="VC for best_appr_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="best_appr_&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.90"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.86"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.00"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.95"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.97"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.91"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.14"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.91" steps="1580562"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.14"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.9" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.00" steps="24009"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.12"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.07"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.06"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.11"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.14"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.03"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.94" steps="23941"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.94" steps="24010"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.18" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(i_to_c k -. (pow_inv_2 (2 * n) *. i_to_c (result * multi_o)))" arg2="(((i_to_c k /. i_to_c (multi_o))
   -. (i_to_c result *. pow_inv_2 (2 * n))) *. i_to_c (multi_o))">
   <goal name="best_appr_&#39;vc.18.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="transitive_infeq" arg2="with" arg3="(  pow_inv_2 ((2 * n) + 1) *.( i_to_c (multi_o)) )
">
    <goal name="best_appr_&#39;vc.18.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="mult_modulus">
     <goal name="best_appr_&#39;vc.18.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="compat_order_mult_both">
      <goal name="best_appr_&#39;vc.18.0.0.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="best_appr_&#39;vc.18.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.08" steps="1131588"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.18.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.58" steps="1260476"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_&#39;vc.18.0.0.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="best_appr_&#39;vc.18.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.08"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.18.0.0.0.1.1" expl="apply premises" proved="true">
       <proof prover="6"><result status="valid" time="0.97" steps="24081"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="best_appr_&#39;vc.18.0.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="compat_order_mult_rev" arg2="with" arg3="(i_to_c (power 2 (2*n+1) * b))">
     <goal name="best_appr_&#39;vc.18.0.1.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="5.06" steps="1586887"/></proof>
     </goal>
     <goal name="best_appr_&#39;vc.18.0.1.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="3.36"/></proof>
     </goal>
     <goal name="best_appr_&#39;vc.18.0.1.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.12" steps="1131631"/></proof>
     </goal>
     <goal name="best_appr_&#39;vc.18.0.1.3" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
      <goal name="best_appr_&#39;vc.18.0.1.3.0" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(forall a b. c_zero&lt;. a -&gt; c_zero&lt;.b -&gt; c_zero&lt;. a*.b)">
       <goal name="best_appr_&#39;vc.18.0.1.3.0.0" expl="asserted formula" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="best_appr_&#39;vc.18.0.1.3.0.0.0" expl="asserted formula" proved="true">
        <proof prover="1"><result status="valid" time="2.11"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_&#39;vc.18.0.1.3.0.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="h">
        <goal name="best_appr_&#39;vc.18.0.1.3.0.1.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="2.15"/></proof>
        </goal>
        <goal name="best_appr_&#39;vc.18.0.1.3.0.1.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="2.30"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="best_appr_&#39;vc.18.0.1.4" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="((c_one /. (ttwo *. i_to_c b)) *. i_to_c (power 2 ((2 * n) + 1) * b))" arg2="(i_to_c (power 2 (2 * n)))">
      <goal name="best_appr_&#39;vc.18.0.1.4.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="((pow_inv_2 ((2 * n) + 1) *. i_to_c (multi_o))
   *. i_to_c (power 2 ((2 * n) + 1) * b))" arg2="(i_to_c (b * multi_o))
">
       <goal name="best_appr_&#39;vc.18.0.1.4.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.11"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.18.0.1.4.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
        <goal name="best_appr_&#39;vc.18.0.1.4.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
         <goal name="best_appr_&#39;vc.18.0.1.4.0.1.0.0" expl="equality hypothesis" proved="true">
         <transf name="assert" proved="true" arg1="(forall a b c d. a*. c = c_one -&gt; (a*.b) *. (c*.d) = b*.d)">
          <goal name="best_appr_&#39;vc.18.0.1.4.0.1.0.0.0" expl="asserted formula" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="best_appr_&#39;vc.18.0.1.4.0.1.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="replace" proved="true" arg1="((a *. b) *. (c *. d))" arg2="((a *. c) *. (b *. d))">
            <goal name="best_appr_&#39;vc.18.0.1.4.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
            <proof prover="1"><result status="valid" time="2.11"/></proof>
            </goal>
            <goal name="best_appr_&#39;vc.18.0.1.4.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="6"><result status="valid" time="0.97" steps="24153"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="best_appr_&#39;vc.18.0.1.4.0.1.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="rewrite" proved="true" arg1="h">
           <goal name="best_appr_&#39;vc.18.0.1.4.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
           <proof prover="6"><result status="valid" time="0.97" steps="24081"/></proof>
           </goal>
           <goal name="best_appr_&#39;vc.18.0.1.4.0.1.0.0.1.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="4.96" steps="1537372"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_&#39;vc.18.0.1.4.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="power_sum">
       <goal name="best_appr_&#39;vc.18.0.1.4.1.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
        <goal name="best_appr_&#39;vc.18.0.1.4.1.0.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
         <goal name="best_appr_&#39;vc.18.0.1.4.1.0.0.0" expl="equality hypothesis" proved="true">
         <transf name="replace" proved="true" arg1="(i_to_c (power 2 1))" arg2="ttwo">
          <goal name="best_appr_&#39;vc.18.0.1.4.1.0.0.0.0" expl="equality hypothesis" proved="true">
          <transf name="assert" proved="true" arg1="(forall a b c. c_zero &lt;&gt; (a*.b) -&gt;(c_one /.(a*.b))*. (c*.a*.b) = c)">
           <goal name="best_appr_&#39;vc.18.0.1.4.1.0.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="best_appr_&#39;vc.18.0.1.4.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
            <transf name="replace" proved="true" arg1="((c *. a) *. b)" arg2="((a *. b) *. c)">
             <goal name="best_appr_&#39;vc.18.0.1.4.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
             <transf name="rewrite" proved="true" arg1="mult_assoc_rev">
              <goal name="best_appr_&#39;vc.18.0.1.4.1.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
              <proof prover="8"><result status="valid" time="5.70" steps="1587064"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="best_appr_&#39;vc.18.0.1.4.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="6"><result status="valid" time="0.94" steps="24106"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="best_appr_&#39;vc.18.0.1.4.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="1"><result status="valid" time="2.28"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="best_appr_&#39;vc.18.0.1.4.1.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="6"><result status="valid" time="0.92" steps="24081"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_&#39;vc.18.0.1.4.1.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.13"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.18.0.1.4.1.2" expl="rewrite premises" proved="true">
       <proof prover="6"><result status="valid" time="1.12" steps="24081"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_&#39;vc.18.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(((i_to_c k /. i_to_c (multi_o))
      -. (i_to_c result *. pow_inv_2 (2 * n)))
     *. i_to_c (multi_o))" arg2="(i_to_c (multi_o)*.((i_to_c k /. i_to_c (multi_o))
      -. (i_to_c result *. pow_inv_2 (2 * n)))
     )">
    <goal name="best_appr_&#39;vc.18.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="mult_distr_minus">
     <goal name="best_appr_&#39;vc.18.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b c d. a= c -&gt; b = d -&gt; a-.b = c-.d)">
      <goal name="best_appr_&#39;vc.18.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="6"><result status="valid" time="1.05" steps="24240"/></proof>
      </goal>
      <goal name="best_appr_&#39;vc.18.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="h">
       <goal name="best_appr_&#39;vc.18.1.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.29"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.18.1.0.0.1.1" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
        <goal name="best_appr_&#39;vc.18.1.0.0.1.1.0" expl="apply premises" proved="true">
        <proof prover="6"><result status="valid" time="1.16" steps="24081"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="best_appr_&#39;vc.18.1.1" expl="equality hypothesis" proved="true">
    <proof prover="6"><result status="valid" time="0.96" steps="24081"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="best_appr_orders&#39;vc" expl="VC for best_appr_orders" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="best_appr_orders&#39;vc.0" expl="VC for best_appr_orders" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="best_appr_orders&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.85"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.91" steps="23189"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.2" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.2.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="1.90"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.91"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.94" steps="23567"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.5" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.97"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.6" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.6.0" expl="precondition" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="best_appr_orders&#39;vc.0.6.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="div_pos">
      <goal name="best_appr_orders&#39;vc.0.6.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
       <goal name="best_appr_orders&#39;vc.0.6.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="mult_pos">
        <goal name="best_appr_orders&#39;vc.0.6.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="4.41"/></proof>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.6.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="4.00" steps="1271518"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_orders&#39;vc.0.6.0.0.1" expl="apply premises" proved="true">
      <proof prover="6"><result status="valid" time="1.33" steps="32249"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.7" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.7.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="4.25" steps="1404466"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.8" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.8.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="1.91"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.9" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.9.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="compat_order_mult_rev" arg2="with" arg3="(pow_inv_2 (2*n))">
     <goal name="best_appr_orders&#39;vc.0.9.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="1.92"/></proof>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.9.0.1" expl="apply premises" proved="true">
     <proof prover="6"><result status="valid" time="0.85" steps="23826"/></proof>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.9.0.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="4.50" steps="1432927"/></proof>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.9.0.3" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.97" steps="1434336"/></proof>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.9.0.4" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(modulus
   ((i_to_c (k * power 2 (2 * n)) /. i_to_c (multi_o))
    -&#39;&#39; i_to_c (best_appr_ k ))
   *. pow_inv_2 (2 * n))" arg2="(modulus
  ((i_to_c k /. i_to_c (multi_o))
   -. (pow_inv_2 (2 * n) *. i_to_c (best_appr_ k))))
">
      <goal name="best_appr_orders&#39;vc.0.9.0.4.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="1.99"/></proof>
      </goal>
      <goal name="best_appr_orders&#39;vc.0.9.0.4.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(modulus
   ((i_to_c (k * power 2 (2 * n)) /. i_to_c (multi_o))
    -&#39;&#39; i_to_c (best_appr_ k ))
   *. pow_inv_2 (2 * n))" arg2="(modulus
   (((i_to_c (k * power 2 (2 * n)) /. i_to_c (multi_o))
    -&#39;&#39; i_to_c (best_appr_ k )
 )  *. pow_inv_2 (2 * n)))
">
       <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0" expl="equality hypothesis" proved="true">
       <transf name="assert" proved="true" arg1="(forall a b c. (a-&#39;&#39;b) *. c = a*. c -. b*.c)">
        <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.0" expl="asserted formula" proved="true">
        <transf name="eliminate_definition" proved="true" >
         <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.0.0" expl="asserted formula" proved="true">
         <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
          <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="8"><result status="valid" time="4.30" steps="1300329"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.1" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="h">
         <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.1.0" expl="equality hypothesis" proved="true">
         <transf name="assert" proved="true" arg1="(forall a b . a = b -&gt; modulus a = modulus b)">
          <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.1.0.0" expl="asserted formula" proved="true">
          <proof prover="6"><result status="valid" time="0.97" steps="23914"/></proof>
          </goal>
          <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.1.0.1" expl="equality hypothesis" proved="true">
          <transf name="apply" proved="true" arg1="h">
           <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.1.0.1.0" expl="apply premises" proved="true">
           <transf name="assert" proved="true" arg1="(forall a b c d. a = b -&gt; c = d -&gt; a-.c = b-.d)">
            <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.1.0.1.0.0" expl="asserted formula" proved="true">
            <proof prover="6"><result status="valid" time="0.97" steps="23978"/></proof>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.1.0.1.0.1" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="h">
             <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.1.0.1.0.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
              <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
              <transf name="assert" proved="true" arg1="(forall a b c d. b*.d = c_one -&gt;  c_zero &lt;&gt; c-&gt; ((a*.b)/.c)*.d = a/.c)">
               <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.1.0.1.0.1.0.0.0" expl="asserted formula" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.1.0.1.0.1.0.0.0.0" expl="asserted formula" proved="true">
                <transf name="replace" proved="true" arg1="(((a *. b) /. c) *. d)" arg2="(((a *. (b*.d)) /. c) )">
                 <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.1.0.1.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
                 <proof prover="1"><result status="valid" time="1.92"/></proof>
                 </goal>
                 <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.1.0.1.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="1"><result status="valid" time="1.71"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.1.0.1.0.1.0.0.1" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="h">
                <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.1.0.1.0.1.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="4.71" steps="1474800"/></proof>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.1.0.1.0.1.0.0.1.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.19"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="best_appr_orders&#39;vc.0.9.0.4.1.0.1.0.1.0.1.1" expl="apply premises" proved="true">
             <proof prover="6"><result status="valid" time="1.02" steps="23827"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_orders&#39;vc.0.9.0.4.1.1" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="4.64" steps="1438522"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.10" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.97" steps="23633"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.11" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.11.0" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="1.09" steps="23633"/></proof>
    </goal>
    <goal name="best_appr_orders&#39;vc.0.11.1" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(best_appr_ k  = power 2 (2 * n))
">
     <goal name="best_appr_orders&#39;vc.0.11.1.0" expl="true case (postcondition)" proved="true">
     <transf name="assert" proved="true" arg1="(c_one -. pow_inv_2 (2*n+1) &lt;=. (i_to_c k /. i_to_c (multi_o)) &lt;=. c_one +. pow_inv_2 (2*n+1))
">
      <goal name="best_appr_orders&#39;vc.0.11.1.0.0" expl="asserted formula" proved="true">
      <transf name="assert" proved="true" arg1="(forall a b. real_ a -&gt; c_one &lt;=. b+. a /\ b-.a &lt;=. c_one -&gt; c_one -. a &lt;=. b &lt;=. c_one +.a)">
       <goal name="best_appr_orders&#39;vc.0.11.1.0.0.0" expl="asserted formula" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="best_appr_orders&#39;vc.0.11.1.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="1"><result status="valid" time="1.88"/></proof>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.11.1.0.0.0.1" expl="asserted formula" proved="true">
        <proof prover="8"><result status="valid" time="6.05" steps="1527391"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1" expl="asserted formula" proved="true">
       <transf name="apply" proved="true" arg1="h1">
        <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.12" steps="1094957"/></proof>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="c_one" arg2="(i_to_c (power 2 (2*n)) *. pow_inv_2 (2*n))">
         <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(pow_inv_2 ((2 * n) + 1))" arg2="(pow_inv_2 (2*n)  *. (c_one/.ttwo))">
          <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="((i_to_c k /. i_to_c (multi_o)) +. (pow_inv_2 ((2 * n) ) *. (c_one /. ttwo)))" arg2="(((i_to_c (k * power 2 (2*n)) /. i_to_c (multi_o)) +. (c_one/.ttwo))*.pow_inv_2 (2*n))
">
           <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="((i_to_c k /. i_to_c (multi_o)) -. (pow_inv_2 ((2 * n) ) *. (c_one /. ttwo)))" arg2="(((i_to_c (k * power 2 (2*n)) /. i_to_c (multi_o)) -. (c_one/.ttwo))*.pow_inv_2 (2*n))
">
            <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="4.90" steps="1488525"/></proof>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.0.1" expl="equality hypothesis" proved="true">
            <transf name="assert" proved="true" arg1="(forall a aa b c.a*.c = aa -&gt; aa -. c*.b = (a-. b) *. c )">
             <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.0.1.0" expl="asserted formula" proved="true">
             <proof prover="1"><result status="valid" time="2.13"/></proof>
             </goal>
             <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
             <transf name="apply" proved="true" arg1="h">
              <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.0.1.1.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
               <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.0.1.1.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(i_to_c k *. i_to_c (power 2 (2 * n)))" arg2="(i_to_c (power 2 (2 * n))*. i_to_c k)">
                <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="assoc_mult_div_rev">
                 <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="assert" proved="true" arg1="(forall a b c d. a*. d = c_one -&gt; c&lt;&gt; c_zero -&gt; (a*. (b/.c))*. d = b/.c)">
                  <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.0.1.1.0.0.0.0.0" expl="asserted formula" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.0.1.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
                   <proof prover="8"><result status="valid" time="5.06" steps="1502467"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.0.1.1.0.0.0.0.1" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="h">
                   <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.0.1.1.0.0.0.0.1.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="4.81" steps="1452427"/></proof>
                   </goal>
                   <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.0.1.1.0.0.0.0.1.1" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="1.88"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="2.13"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="6"><result status="valid" time="0.96" steps="23722"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="assert" proved="true" arg1="(forall a aa b c.a*.c = aa -&gt; aa +. c*.b = (a+. b) *. c )">
            <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.1.0" expl="asserted formula" proved="true">
            <proof prover="1"><result status="valid" time="2.18"/></proof>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.1.1" expl="equality hypothesis" proved="true">
            <transf name="apply" proved="true" arg1="h">
             <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.1.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
              <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.1.1.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(i_to_c k *. i_to_c (power 2 (2 * n)))" arg2="(i_to_c (power 2 (2 * n))*. i_to_c k)
">
               <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="assoc_mult_div_rev">
                <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                <transf name="assert" proved="true" arg1="(forall a b c d. a*. d = c_one -&gt; c&lt;&gt; c_zero -&gt; (a*. (b/.c))*. d = b/.c)">
                 <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.1.1.0.0.0.0.0" expl="asserted formula" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.1.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
                  <proof prover="8"><result status="valid" time="5.68" steps="1502208"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.1.1.0.0.0.0.1" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="h">
                  <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.1.1.0.0.0.0.1.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="4.85" steps="1452372"/></proof>
                  </goal>
                  <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.1.1.0.0.0.0.1.1" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="2.13"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="2.20"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="6"><result status="valid" time="1.01" steps="23722"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
          <proof prover="1"><result status="valid" time="1.98"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="best_appr_orders&#39;vc.0.11.1.0.0.1.1.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="4.72" steps="1450849"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_orders&#39;vc.0.11.1.0.1" expl="true case (postcondition)" proved="true">
      <transf name="case" proved="true" arg1="(k &lt;&gt; multi_o)
">
       <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0" expl="true case (postcondition)" proved="true">
       <transf name="case" proved="true" arg1="( k &lt; multi_o)
">
        <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0" expl="true case (postcondition)" proved="true">
        <transf name="assert" proved="true" arg1="((i_to_c k /. i_to_c (multi_o)) &lt;.  (c_one -. pow_inv_2 ((2 * n) + 1)))
">
         <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0" expl="asserted formula" proved="true">
         <transf name="replace" proved="true" arg1="(i_to_c k /. i_to_c (multi_o))" arg2="(c_one -. (i_to_c ( multi_o-k) /. i_to_c (multi_o)))
">
          <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0" expl="asserted formula" proved="true">
          <transf name="rewrite" proved="true" arg1="pow_inv_2&#39;def">
           <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="assert" proved="true" arg1="(c_one /. i_to_c (power 2 ((2 * n) + 1)) &lt;. (i_to_c (multi_o - k) /. i_to_c (multi_o)))
">
            <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
            <transf name="apply" proved="true" arg1="transitive_inf_infeq" arg2="with" arg3="(c_one /. i_to_c (multi_o))

">
             <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="inv_inf">
              <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.23"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="6"><result status="valid" time="1.03" steps="23853"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.0.0.2.0" proved="true">
               <transf name="apply" proved="true" arg1="inf_to_sup">
                <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                <proof prover="6"><result status="valid" time="0.99" steps="23853"/></proof>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.0.0.2.0.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.26"/></proof>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.0.0.2.0.2" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="i_to_c_inf">
                 <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.0.0.2.0.2.0" expl="apply premises" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.0.0.2.0.2.0.0" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="2.11"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.0.0.2.1" proved="true">
               <proof prover="1"><result status="valid" time="1.98"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="compat_infeq_div">
              <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.00"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.29"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.0.1.2" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.00"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.0.1.3" expl="apply premises" proved="true">
              <proof prover="6"><result status="valid" time="1.12" steps="23853"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.0.1.4" expl="apply premises" proved="true">
              <proof prover="6"><result status="valid" time="1.02" steps="23853"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.1" expl="asserted formula" proved="true">
            <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
             <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
             <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
              <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
              <transf name="apply" proved="true" arg1="compat_inf_add_left">
               <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="2.05"/></proof>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="4.49" steps="1453965"/></proof>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="4.94" steps="1454554"/></proof>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.0.1.0.0.3" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="2.32"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="1.93"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="assert" proved="true" arg1="(forall a b c . c &lt;&gt; c_zero -&gt; b = c-.a -&gt; a/. c = c_one -. b/.c)">
           <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1.0" expl="asserted formula" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1.0.0" expl="asserted formula" proved="true">
            <transf name="replace" proved="true" arg1="c_one" arg2="(c/.c)">
             <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
             <transf name="rewrite" proved="true" arg1="div_distr_minus_rev">
              <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
              <transf name="apply" proved="true" arg1="div_eq">
               <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="H">
                <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
                 <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
                  <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="minus_add_out_right">
                   <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="minus_add_out_right">
                    <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="minus_add_out_right">
                     <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="5.35" steps="1504553"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="6"><result status="valid" time="0.90" steps="23940"/></proof>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="6"><result status="valid" time="0.90" steps="23940"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="6"><result status="valid" time="0.97" steps="23940"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="5.40" steps="1502878"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
           <transf name="apply" proved="true" arg1="h">
            <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1.1.0" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="2.23"/></proof>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.0.1.1.1" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="2.22"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.0.1" expl="true case (postcondition)" proved="true">
         <proof prover="1"><result status="valid" time="2.71"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.11.1.0.1.0.1" expl="false case (true case. postcondition)" proved="true">
        <proof prover="6"><result status="valid" time="0.98" steps="23853"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_orders&#39;vc.0.11.1.0.1.1" expl="false case (true case. postcondition)" proved="true">
       <proof prover="6"><result status="valid" time="1.00" steps="23895"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.11.1.1" expl="false case (postcondition)" proved="true">
     <proof prover="6"><result status="valid" time="1.00" steps="23656"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="greatest_factor&#39;vc" expl="VC for greatest_factor" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="greatest_factor&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.92"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.29" steps="1337808"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.00" steps="22963"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.87" steps="23011"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.87"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.5" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures4">
   <goal name="greatest_factor&#39;vc.5.0" expl="apply premises" proved="true">
   <proof prover="6"><result status="valid" time="0.96" steps="23063"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="greatest_factor&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.04"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.93" steps="23061"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.98"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="min_mod_sum&#39;vc" expl="VC for min_mod_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="min_mod_sum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.94" steps="22963"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.93" steps="23119"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.90" steps="23119"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.94" steps="23226"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.84"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.92"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.6.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="1.04" steps="23062"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.7.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="min_mod_sum&#39;vc.7.0.0" expl="precondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="min_mod_sum&#39;vc.7.0.0.0" expl="VC for min_mod_sum" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="min_mod_sum&#39;vc.7.0.0.0.0" expl="precondition" proved="true">
      <proof prover="1"><result status="valid" time="2.50"/></proof>
      </goal>
      <goal name="min_mod_sum&#39;vc.7.0.0.0.1" expl="precondition" proved="true">
      <proof prover="1"><result status="valid" time="1.70"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="Ensures2">
    <goal name="min_mod_sum&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Ensures2">
     <goal name="min_mod_sum&#39;vc.8.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures2">
      <goal name="min_mod_sum&#39;vc.8.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="min_mod_sum&#39;vc.8.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="eliminate_if" proved="true" >
        <goal name="min_mod_sum&#39;vc.8.0.0.0.0.0.0" expl="VC for min_mod_sum" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="min_mod_sum&#39;vc.8.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="apply" proved="true" arg1="div_pos">
          <goal name="min_mod_sum&#39;vc.8.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="2.03"/></proof>
          </goal>
          <goal name="min_mod_sum&#39;vc.8.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="assert" proved="true" arg1="( c_zero &lt;. i_to_c (greatest_factor e))">
           <goal name="min_mod_sum&#39;vc.8.0.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="min_mod_sum&#39;vc.8.0.0.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
            <transf name="apply" proved="true" arg1="greatest_factor&#39;spec5">
             <goal name="min_mod_sum&#39;vc.8.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
             <proof prover="6"><result status="valid" time="0.99" steps="23295"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="min_mod_sum&#39;vc.8.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="positive_cpower_2">
            <goal name="min_mod_sum&#39;vc.8.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="2.01"/></proof>
            </goal>
            <goal name="min_mod_sum&#39;vc.8.0.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="2.08"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="min_mod_sum&#39;vc.8.0.0.0.0.0.0.1" expl="postcondition" proved="true">
         <proof prover="1"><result status="valid" time="1.82"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="min_mod_sum&#39;vc.8.1" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="2.75" steps="1051106"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.83"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="min_mod_sum&#39;vc.10.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(cpower
       (modulus
        (ind_sum
         (fun (y:int) -&gt;
           int_qft_coeff ((y * multi_o) + mod1 i multi_o) (- best_appr_ k)
           (2 * n))
         0 (greatest_factor i)))
       2 /. cpower (i_to_c (greatest_factor i)) 2)" arg2="(o2 i)">
    <goal name="min_mod_sum&#39;vc.10.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="H6">
     <goal name="min_mod_sum&#39;vc.10.0.0.0" expl="apply premises" proved="true">
     <proof prover="6"><result status="valid" time="1.05" steps="23851"/></proof>
     </goal>
     <goal name="min_mod_sum&#39;vc.10.0.0.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="1.78"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="min_mod_sum&#39;vc.10.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="H16">
     <goal name="min_mod_sum&#39;vc.10.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="min_mod_sum&#39;vc.10.0.1.0.0" expl="equality hypothesis" proved="true">
      <transf name="eliminate_if" proved="true" >
       <goal name="min_mod_sum&#39;vc.10.0.1.0.0.0" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="min_mod_sum&#39;vc.10.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
        <proof prover="6"><result status="valid" time="1.04" steps="23884"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="min_mod_sum&#39;vc.10.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="6"><result status="valid" time="1.02" steps="23851"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.11" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.84" steps="23060"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.12" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.12.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.88"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.13" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.13.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="3.15" steps="1183757"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.99" steps="23323"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.15" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="transitive_infeq" arg2="with" arg3="(o k)">
   <goal name="min_mod_sum&#39;vc.15.0" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="Ensures2">
    <goal name="min_mod_sum&#39;vc.15.0.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.09"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="min_mod_sum&#39;vc.15.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="H4">
    <goal name="min_mod_sum&#39;vc.15.1.0" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="0.97" steps="23327"/></proof>
    </goal>
    <goal name="min_mod_sum&#39;vc.15.1.1" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="0.98" steps="23327"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.16" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.16.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="compat_order_mult_rev" arg2="with" arg3="(c_one /. cpower (i_to_c (greatest_factor  i)) 2)
">
    <goal name="min_mod_sum&#39;vc.16.0.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.05"/></proof>
    </goal>
    <goal name="min_mod_sum&#39;vc.16.0.1" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.04"/></proof>
    </goal>
    <goal name="min_mod_sum&#39;vc.16.0.2" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.54"/></proof>
    </goal>
    <goal name="min_mod_sum&#39;vc.16.0.3" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.27"/></proof>
    </goal>
    <goal name="min_mod_sum&#39;vc.16.0.4" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="((cpower (i_to_c (greatest_factor  i)) 2 *. result)
   *. (c_one /. cpower (i_to_c (greatest_factor  i)) 2))" arg2="result
">
     <goal name="min_mod_sum&#39;vc.16.0.4.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b. b&lt;&gt; c_zero -&gt; a*. (c_one/.b) = a/.b)">
      <goal name="min_mod_sum&#39;vc.16.0.4.0.0" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="2.26"/></proof>
      </goal>
      <goal name="min_mod_sum&#39;vc.16.0.4.0.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="h">
       <goal name="min_mod_sum&#39;vc.16.0.4.0.1.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="Ensures">
        <goal name="min_mod_sum&#39;vc.16.0.4.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="6"><result status="valid" time="0.89" steps="23261"/></proof>
        </goal>
        <goal name="min_mod_sum&#39;vc.16.0.4.0.1.0.1" expl="apply premises" proved="true">
        <proof prover="6"><result status="valid" time="1.02" steps="23261"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="min_mod_sum&#39;vc.16.0.4.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.13"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="min_mod_sum&#39;vc.16.0.4.1" expl="equality hypothesis" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b. a&lt;&gt; c_zero -&gt; a*.b*. (c_one/.a) = b)">
      <goal name="min_mod_sum&#39;vc.16.0.4.1.0" expl="asserted formula" proved="true">
      <proof prover="8"><result status="valid" time="5.26" steps="1527544"/></proof>
      </goal>
      <goal name="min_mod_sum&#39;vc.16.0.4.1.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="h">
       <goal name="min_mod_sum&#39;vc.16.0.4.1.1.0" expl="equality hypothesis" proved="true">
       <proof prover="6"><result status="valid" time="0.92" steps="23261"/></proof>
       </goal>
       <goal name="min_mod_sum&#39;vc.16.0.4.1.1.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.94"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="separated_best_appr&#39;vc" expl="VC for separated_best_appr" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="separated_best_appr&#39;vc.0" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="i_to_c_sub_rev">
   <goal name="separated_best_appr&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="assert" proved="true" arg1="(forall a b c. (a-.b)-.(c+.b) = (a-.c) -. (b+.b))">
    <goal name="separated_best_appr&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="separated_best_appr&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <transf name="replace" proved="true" arg1="((a -. b) -. (c +. b))" arg2="(a-.b-.c-.b)">
      <goal name="separated_best_appr&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="replace" proved="true" arg1="((a -. c) -. (b +. b))" arg2="(a-.c-.b-.b)">
       <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
        <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
         <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
         <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
          <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
          <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
           <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
           <proof prover="1"><result status="valid" time="1.83"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="separated_best_appr&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="1"><result status="valid" time="1.95"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="separated_best_appr&#39;vc.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="1"><result status="valid" time="1.91"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="separated_best_appr&#39;vc.0.0.1" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="h">
     <goal name="separated_best_appr&#39;vc.0.0.1.0" expl="assertion" proved="true">
     <transf name="apply" proved="true" arg1="subs_eq">
      <goal name="separated_best_appr&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
       <goal name="separated_best_appr&#39;vc.0.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
        <goal name="separated_best_appr&#39;vc.0.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="assert" proved="true" arg1="(forall a b c. c &lt;&gt; c_zero -&gt;  (a-.b)*.c = a*.c -. b*.c)">
         <goal name="separated_best_appr&#39;vc.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
         <proof prover="1"><result status="valid" time="1.95"/></proof>
         </goal>
         <goal name="separated_best_appr&#39;vc.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="2.61"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="separated_best_appr&#39;vc.0.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="1.87"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="separated_best_appr&#39;vc.1" expl="assertion" proved="true">
  <transf name="assert" proved="true" arg1="(c_zero &lt;. ((i_to_c (k&#39; - k)
      *. (i_to_c (power 2 (2 * n)) /. i_to_c (multi_o)))
     -. c_one))
">
   <goal name="separated_best_appr&#39;vc.1.0" expl="asserted formula" proved="true">
   <transf name="assert" proved="true" arg1="(c_one &lt;. (i_to_c (power 2 (2 * n)) /. i_to_c (multi_o)))
">
    <goal name="separated_best_appr&#39;vc.1.0.0" expl="asserted formula" proved="true">
    <transf name="assert" proved="true" arg1="(i_to_c (multi_o) &lt;. (i_to_c (power 2 (2 * n))  ))
">
     <goal name="separated_best_appr&#39;vc.1.0.0.0" expl="asserted formula" proved="true">
     <transf name="apply" proved="true" arg1="i_to_c_inf">
      <goal name="separated_best_appr&#39;vc.1.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="inf_trans" arg2="with" arg3="bound">
       <goal name="separated_best_appr&#39;vc.1.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="6"><result status="valid" time="0.98" steps="23111"/></proof>
       </goal>
       <goal name="separated_best_appr&#39;vc.1.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="inf_trans" arg2="with" arg3="(power 2 n)">
        <goal name="separated_best_appr&#39;vc.1.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.95"/></proof>
        </goal>
        <goal name="separated_best_appr&#39;vc.1.0.0.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="0.59" steps="3369879"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="separated_best_appr&#39;vc.1.0.0.1" expl="asserted formula" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b.c_zero &lt;. a -&gt; c_zero &lt;. b -&gt; b&lt;.a -&gt; c_one &lt;.a /.b)">
      <goal name="separated_best_appr&#39;vc.1.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0" expl="asserted formula" proved="true">
       <transf name="replace" proved="true" arg1="(a /. b)" arg2="(c_one +. ((a-.b)/.b))">
        <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.0" expl="asserted formula" proved="true">
        <transf name="assert" proved="true" arg1="(c_one +. c_zero &lt;. (c_one +. ((a -. b) /. b)))">
         <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
         <proof prover="8"><result status="valid" time="4.18" steps="1341907"/></proof>
         </goal>
         <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.0.1" expl="asserted formula" proved="true">
         <proof prover="8"><result status="valid" time="2.93" steps="1092589"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="replace" proved="true" arg1="c_one" arg2="(b/.b)">
         <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="5.15" steps="1387497"/></proof>
         </goal>
         <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="5.05" steps="1385124"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="separated_best_appr&#39;vc.1.0.0.1.1" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="2.02"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="separated_best_appr&#39;vc.1.0.1" expl="asserted formula" proved="true">
    <transf name="assert" proved="true" arg1="(c_one &lt;. (i_to_c (k&#39; - k)
       *. (i_to_c (power 2 (2 * n)) /. i_to_c (multi_o))))
">
     <goal name="separated_best_appr&#39;vc.1.0.1.0" expl="asserted formula" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b. c_one &lt;=. a -&gt; c_one &lt;. b -&gt; c_one &lt;. a*.b)">
      <goal name="separated_best_appr&#39;vc.1.0.1.0.0" expl="asserted formula" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="separated_best_appr&#39;vc.1.0.1.0.0.0" expl="asserted formula" proved="true">
       <proof prover="8"><result status="valid" time="5.20" steps="1433490"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="separated_best_appr&#39;vc.1.0.1.0.1" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="h1">
       <goal name="separated_best_appr&#39;vc.1.0.1.0.1.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="4.09" steps="1374321"/></proof>
       </goal>
       <goal name="separated_best_appr&#39;vc.1.0.1.0.1.1" expl="apply premises" proved="true">
       <proof prover="6"><result status="valid" time="0.99" steps="23160"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="separated_best_appr&#39;vc.1.0.1.1" expl="asserted formula" proved="true">
     <proof prover="1"><result status="valid" time="1.81"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="separated_best_appr&#39;vc.1.1" expl="assertion" proved="true">
   <transf name="assert" proved="true" arg1="(forall a b. real_ b -&gt; c_zero &lt;. a-. b -&gt; b &lt;.a)">
    <goal name="separated_best_appr&#39;vc.1.1.0" expl="asserted formula" proved="true">
    <proof prover="8"><result status="valid" time="5.62" steps="1460684"/></proof>
    </goal>
    <goal name="separated_best_appr&#39;vc.1.1.1" expl="assertion" proved="true">
    <transf name="apply" proved="true" arg1="h">
     <goal name="separated_best_appr&#39;vc.1.1.1.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="2.23"/></proof>
     </goal>
     <goal name="separated_best_appr&#39;vc.1.1.1.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="2.01"/></proof>
     <proof prover="6"><result status="valid" time="0.97" steps="23177"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="separated_best_appr&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.99"/></proof>
  <proof prover="6"><result status="valid" time="1.14" steps="23161"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.96"/></proof>
  <proof prover="6"><result status="valid" time="0.91" steps="23262"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="separated_best_appr&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.97"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="separated_best_appr&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.03"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.03"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.02"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.99"/></proof>
  <proof prover="6"><result status="valid" time="0.98" steps="23986"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.00"/></proof>
  <proof prover="6"><result status="valid" time="1.00" steps="24129"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.00"/></proof>
  <proof prover="6"><result status="valid" time="1.18" steps="24129"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.00"/></proof>
  <proof prover="6"><result status="valid" time="1.12" steps="24200"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.02"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.93"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.94"/></proof>
  <proof prover="6"><result status="valid" time="1.07" steps="24343"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.94"/></proof>
  <proof prover="6"><result status="valid" time="1.02" steps="24342"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.96"/></proof>
  <proof prover="6"><result status="valid" time="1.03" steps="24342"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.83"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.76"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Shor_spec" proved="true">
 <goal name="shor_meas_j_k&#39;vc" expl="VC for shor_meas_j_k" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="shor_meas_j_k&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.60" steps="1016845"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.57" steps="3417976"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.66" steps="1016857"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.92" steps="1363217"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="1016944"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.57" steps="1016963"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.57" steps="1016955"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.51" steps="1400571"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.46" steps="1016978"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.27" steps="1086307"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.47" steps="1016982"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.48" steps="1016995"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="1017010"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.47" steps="1017029"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.45" steps="1017020"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.61" steps="1146408"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.67" steps="1144777"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.81" steps="1145099"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1076253"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.99" steps="1146349"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.06" steps="1146361"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1076293"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.82" steps="1142951"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1076248"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1076261"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1076276"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.72" steps="1076295"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="1076286"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1076298"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.80" steps="1614995"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.99" steps="1146723"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1143341"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1076568"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.72" steps="1076581"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.69" steps="1076596"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1076615"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1076606"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1076618"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.99" steps="1145660"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1145850"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1077276"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1077289"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1077304"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1077323"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1077314"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1077416"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.03" steps="1147267"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.47" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.16"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.91" steps="1146596"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.94" steps="1144550"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.50" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1083281"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.51" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.27"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.52" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.82" steps="1151789"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.53" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="1083293"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.54" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="shor_meas_j_k&#39;vc.54.0" expl="precondition" proved="true">
   <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
    <goal name="shor_meas_j_k&#39;vc.54.0.0" expl="precondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="shor_meas_j_k&#39;vc.54.0.0.0" expl="precondition" proved="true">
     <proof prover="1"><result status="valid" time="2.22"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.55" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1083358"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.56" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.72" steps="1158308"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.57" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1158321"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.58" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1158336"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.59" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1158355"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.60" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="1158346"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.61" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="1158358"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.62" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1158810"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.63" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="1158823"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.64" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1158838"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.65" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1158857"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.66" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1158848"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.67" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.67" steps="1158860"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.68" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1230161"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.69" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.91" steps="1230395"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.70" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.89" steps="1159471"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.71" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.89" steps="1159484"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.72" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.88" steps="1159499"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.73" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1159518"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.74" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.87" steps="1159509"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.75" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1159611"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.76" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1232299"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.77" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.87" steps="1231810"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.78" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1159648"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.79" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.99" steps="1231087"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.80" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1159670"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.81" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1159681"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.82" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.83" steps="1159685"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.83" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1159702"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.84" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.21"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.85" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="shor_meas_j_k&#39;vc.85.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="shor_meas_j_k&#39;vc.85.0.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="2.95" steps="1232332"/></proof>
    </goal>
    <goal name="shor_meas_j_k&#39;vc.85.0.1" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="3.04" steps="1232376"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.86" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="shor_meas_j_k&#39;vc.86.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="shor_meas_j_k&#39;vc.86.0.0" expl="precondition" proved="true">
    <transf name="assert" proved="true" arg1="(forall a b c. 0&lt;= a -&gt;0&lt;= b -&gt;0&lt;= c -&gt; 0 &lt;= a*b+c)">
     <goal name="shor_meas_j_k&#39;vc.86.0.0.0" expl="asserted formula" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="shor_meas_j_k&#39;vc.86.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="6"><result status="valid" time="1.05" steps="24951"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="shor_meas_j_k&#39;vc.86.0.0.1" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="h">
      <goal name="shor_meas_j_k&#39;vc.86.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.70" steps="1160200"/></proof>
      </goal>
      <goal name="shor_meas_j_k&#39;vc.86.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.10" steps="1235269"/></proof>
      </goal>
      <goal name="shor_meas_j_k&#39;vc.86.0.0.1.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.93" steps="1232983"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_meas_j_k&#39;vc.86.0.1" expl="precondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="shor_meas_j_k&#39;vc.86.0.1.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="greatest_factor&#39;spec4">
      <goal name="shor_meas_j_k&#39;vc.86.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.64" steps="1540830"/></proof>
      </goal>
      <goal name="shor_meas_j_k&#39;vc.86.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.64" steps="1540837"/></proof>
      </goal>
      <goal name="shor_meas_j_k&#39;vc.86.0.1.0.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.61" steps="1540839"/></proof>
      </goal>
      <goal name="shor_meas_j_k&#39;vc.86.0.1.0.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.59" steps="1540843"/></proof>
      </goal>
      <goal name="shor_meas_j_k&#39;vc.86.0.1.0.4" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.45" steps="1540828"/></proof>
      </goal>
      <goal name="shor_meas_j_k&#39;vc.86.0.1.0.5" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.56" steps="1540837"/></proof>
      </goal>
      <goal name="shor_meas_j_k&#39;vc.86.0.1.0.6" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.49" steps="1540837"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.87" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1160252"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.88" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="shor_meas_j_k&#39;vc.88.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures2">
    <goal name="shor_meas_j_k&#39;vc.88.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="scalar_eq_gen">
     <goal name="shor_meas_j_k&#39;vc.88.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="ket_sum_eq">
      <goal name="shor_meas_j_k&#39;vc.88.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.97" steps="1160255"/></proof>
      </goal>
      <goal name="shor_meas_j_k&#39;vc.88.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.99" steps="1160253"/></proof>
      </goal>
      <goal name="shor_meas_j_k&#39;vc.88.0.0.0.2" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="shor_meas_j_k&#39;vc.88.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="shor_meas_j_k&#39;vc.88.0.0.0.2.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="ket_sum_eq">
         <goal name="shor_meas_j_k&#39;vc.88.0.0.0.2.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.96" steps="1212751"/></proof>
         </goal>
         <goal name="shor_meas_j_k&#39;vc.88.0.0.0.2.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.99" steps="1212749"/></proof>
         </goal>
         <goal name="shor_meas_j_k&#39;vc.88.0.0.0.2.0.0.2" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="shor_meas_j_k&#39;vc.88.0.0.0.2.0.0.2.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="shor_meas_j_k&#39;vc.88.0.0.0.2.0.0.2.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="shor_ket&#39;def">
            <goal name="shor_meas_j_k&#39;vc.88.0.0.0.2.0.0.2.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="5.54" steps="1946573"/></proof>
            </goal>
            <goal name="shor_meas_j_k&#39;vc.88.0.0.0.2.0.0.2.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.88" steps="1212765"/></proof>
            </goal>
            <goal name="shor_meas_j_k&#39;vc.88.0.0.0.2.0.0.2.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.78" steps="1212772"/></proof>
            </goal>
            <goal name="shor_meas_j_k&#39;vc.88.0.0.0.2.0.0.2.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.82" steps="1212774"/></proof>
            </goal>
            <goal name="shor_meas_j_k&#39;vc.88.0.0.0.2.0.0.2.0.0.4" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.84" steps="1212778"/></proof>
            </goal>
            <goal name="shor_meas_j_k&#39;vc.88.0.0.0.2.0.0.2.0.0.5" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.83" steps="1212763"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="shor_meas_j_k&#39;vc.88.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.72" steps="1160253"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.89" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="shor_meas_j_k&#39;vc.89.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="3.57"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.90" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="shor_meas_j_k&#39;vc.90.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="mod_eq_multi_order_to_power">
    <goal name="shor_meas_j_k&#39;vc.90.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.83" steps="1160826"/></proof>
    </goal>
    <goal name="shor_meas_j_k&#39;vc.90.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="5.44" steps="1876727"/></proof>
    </goal>
    <goal name="shor_meas_j_k&#39;vc.90.0.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.88" steps="1160826"/></proof>
    </goal>
    <goal name="shor_meas_j_k&#39;vc.90.0.3" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="(forall a b c. 0&lt;= a -&gt;0&lt;= b -&gt;0&lt;= c -&gt; 0 &lt;= a*b+c)
">
     <goal name="shor_meas_j_k&#39;vc.90.0.3.0" expl="asserted formula" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="shor_meas_j_k&#39;vc.90.0.3.0.0" expl="asserted formula" proved="true">
      <proof prover="6"><result status="valid" time="0.92" steps="25008"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="shor_meas_j_k&#39;vc.90.0.3.1" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="h">
      <goal name="shor_meas_j_k&#39;vc.90.0.3.1.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.89" steps="1160961"/></proof>
      </goal>
      <goal name="shor_meas_j_k&#39;vc.90.0.3.1.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.77" steps="1236327"/></proof>
      </goal>
      <goal name="shor_meas_j_k&#39;vc.90.0.3.1.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.14" steps="1237249"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_meas_j_k&#39;vc.90.0.4" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="get_mod">
     <goal name="shor_meas_j_k&#39;vc.90.0.4.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.93" steps="1160824"/></proof>
     </goal>
     <goal name="shor_meas_j_k&#39;vc.90.0.4.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.96" steps="1160842"/></proof>
     </goal>
     <goal name="shor_meas_j_k&#39;vc.90.0.4.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="3.24" steps="1237459"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.91" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="shor_meas_j_k&#39;vc.91.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="shor_meas_j_k&#39;vc.91.0.0" expl="precondition" proved="true">
    <transf name="exists" proved="true" arg1="(div1 j (multi_order a bound))
">
     <goal name="shor_meas_j_k&#39;vc.91.0.0.0" proved="true">
     <transf name="replace" proved="true" arg1="(mod1 i (multi_order a bound))" arg2="(mod1 j (multi_order a bound))">
      <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.0" proved="true">
       <proof prover="1"><result status="valid" time="2.41"/></proof>
       </goal>
       <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1" proved="true">
       <transf name="case" proved="true" arg1="(i &lt; mod1 (power 2 (2*n)) (multi_order a bound))">
        <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.0" expl="true case" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.0.0" expl="true case" proved="true">
         <transf name="rewrite" proved="true" arg1="greatest_factor&#39;def">
          <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.0.0.0" expl="true case" proved="true">
          <transf name="rewrite" proved="true" arg1="greatest_factor_in_n&#39;def1">
           <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.0.0.0.0" expl="true case" proved="true">
           <transf name="case" proved="true" arg1="( div1 (power 2 (2 * n)) (multi_order a bound) &lt; div1 j (multi_order a bound)
  )">
            <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.0.0.0.0.0" expl="true case" proved="true">
            <proof prover="0"><result status="valid" time="3.38" steps="1735205"/></proof>
            </goal>
            <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.0.0.0.0.1" expl="false case (true case)" proved="true">
            <proof prover="8"><result status="valid" time="2.61" steps="1542206"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.66" steps="1542120"/></proof>
           </goal>
           <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.69" steps="1542136"/></proof>
           </goal>
           <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.0.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.89" steps="1542120"/></proof>
           </goal>
           <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.0.0.0.4" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.97" steps="1542136"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="3.01" steps="1542113"/></proof>
          </goal>
          <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.91" steps="1542120"/></proof>
          </goal>
          <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.46" steps="1542122"/></proof>
          </goal>
          <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.0.0.4" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.69" steps="1542126"/></proof>
          </goal>
          <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.0.0.5" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.65" steps="1542111"/></proof>
          </goal>
          <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.0.0.6" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.62" steps="1542120"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1" expl="false case" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0" expl="false case" proved="true">
         <transf name="rewrite" proved="true" arg1="greatest_factor&#39;def">
          <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0" expl="false case" proved="true">
          <transf name="rewrite" proved="true" arg1="greatest_factor_in_n&#39;def">
           <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0" expl="false case" proved="true">
           <transf name="case" proved="true" arg1="( div1 (power 2 (2 * n)) (multi_order a bound) &lt;= div1 j (multi_order a bound) )">
            <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0" expl="false case (true case)" proved="true">
            <transf name="assert" proved="true" arg1="(power  2 (2*n) &lt;= j)">
             <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0" expl="asserted formula" proved="true">
             <transf name="rewrite" proved="true" arg1="decomp" arg2="with" arg3="(multi_order a bound)">
              <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
              <transf name="instantiate" proved="true" arg1="decomp" arg2="j,(multi_order a bound)">
               <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
               <transf name="rewrite" proved="true" arg1="Hinst">
                <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                <transf name="apply" proved="true" arg1="leq_trans_add">
                 <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="2.09"/></proof>
                 </goal>
                 <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="(mod1 j (multi_order a bound))" arg2="(mod1 i (multi_order a bound))">
                  <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                  <transf name="replace" proved="true" arg1="(mod1 i (multi_order a bound))" arg2="i">
                   <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.77" steps="1542252"/></proof>
                   </goal>
                   <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                   <transf name="apply" proved="true" arg1="bound_eq_rev">
                    <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.66" steps="1542259"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="mod_eq_power_to_multi_order">
                   <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.68" steps="1542250"/></proof>
                   </goal>
                   <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.18"/></proof>
                   </goal>
                   <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0.0.0.0.1.1.2" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.61" steps="1542250"/></proof>
                   </goal>
                   <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0.0.0.0.1.1.3" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.58" steps="1542250"/></proof>
                   </goal>
                   <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0.0.0.0.1.1.4" expl="apply premises" proved="true">
                   <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
                    <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0.0.0.0.1.1.4.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.71" steps="1542140"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="4.29" steps="1627346"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="4.18" steps="1627281"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.0.1" expl="false case (true case)" proved="true">
             <proof prover="8"><result status="valid" time="2.30" steps="1542224"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.0.1" expl="false case" proved="true">
            <proof prover="8"><result status="valid" time="2.61" steps="1542212"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.64" steps="1542147"/></proof>
           </goal>
           <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.66" steps="1542163"/></proof>
           </goal>
           <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.67" steps="1542147"/></proof>
           </goal>
           <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.0.4" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.69" steps="1542133"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.66" steps="1542140"/></proof>
          </goal>
          <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.67" steps="1542147"/></proof>
          </goal>
          <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.3" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.34" steps="1542149"/></proof>
          </goal>
          <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.4" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.32" steps="1542153"/></proof>
          </goal>
          <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.5" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.74" steps="1542138"/></proof>
          </goal>
          <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.1.1.0.6" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.71" steps="1542147"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="shor_meas_j_k&#39;vc.91.0.0.0.0.2" proved="true">
       <proof prover="1"><result status="valid" time="2.36"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="shor_meas_j_k&#39;vc.91.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
       <goal name="shor_meas_j_k&#39;vc.91.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="mod_eq_power_to_multi_order">
        <goal name="shor_meas_j_k&#39;vc.91.0.0.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.98" steps="1161136"/></proof>
        </goal>
        <goal name="shor_meas_j_k&#39;vc.91.0.0.0.1.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="5.65" steps="1878199"/></proof>
        </goal>
        <goal name="shor_meas_j_k&#39;vc.91.0.0.0.1.0.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.90" steps="1161136"/></proof>
        </goal>
        <goal name="shor_meas_j_k&#39;vc.91.0.0.0.1.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.92" steps="1161136"/></proof>
        </goal>
        <goal name="shor_meas_j_k&#39;vc.91.0.0.0.1.0.4" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.97" steps="1161136"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.92" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1160343"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.93" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.15" steps="1160356"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.94" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.12" steps="1160371"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.95" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.88" steps="1160390"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.96" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1160381"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.97" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.07" steps="1160969"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.98" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.10" steps="1160982"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.99" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1160997"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.100" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.83" steps="1161016"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.101" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1161007"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.102" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.69" steps="1161019"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.103" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.79" steps="1236743"/></proof>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.104" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures14">
   <goal name="shor_meas_j_k&#39;vc.104.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="shor_meas_j_k&#39;vc.104.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="compat_order_mult_left">
     <goal name="shor_meas_j_k&#39;vc.104.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="Ensures10">
      <goal name="shor_meas_j_k&#39;vc.104.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.77" steps="1161375"/></proof>
      </goal>
      <goal name="shor_meas_j_k&#39;vc.104.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.09" steps="1161375"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="shor_meas_j_k&#39;vc.104.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="5.28" steps="1916765"/></proof>
     </goal>
     <goal name="shor_meas_j_k&#39;vc.104.0.0.2" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="2.37"/></proof>
     </goal>
     <goal name="shor_meas_j_k&#39;vc.104.0.0.3" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.47" steps="1237995"/></proof>
     </goal>
     <goal name="shor_meas_j_k&#39;vc.104.0.0.4" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="5.36" steps="1913758"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.105" expl="precondition" proved="true">
  <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Ensures15">
   <goal name="shor_meas_j_k&#39;vc.105.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures15">
    <goal name="shor_meas_j_k&#39;vc.105.0.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="3.41" steps="1238199"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_j_k&#39;vc.106" expl="postcondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="shor_meas_j_k&#39;vc.106.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="3.01" steps="1287763"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="greatest_factor_sum&#39;vc" expl="VC for greatest_factor_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="greatest_factor_sum&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="greatest_factor_sum&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.90" steps="1017365"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="greatest_factor_sum&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.41" steps="1352082"/></proof>
  </goal>
  <goal name="greatest_factor_sum&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.90" steps="1017478"/></proof>
  </goal>
  <goal name="greatest_factor_sum&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="greatest_factor_sum&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.90" steps="1017498"/></proof>
   </goal>
   <goal name="greatest_factor_sum&#39;vc.3.1" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="inf_trans" arg2="with" arg3="(power 2 n)">
    <goal name="greatest_factor_sum&#39;vc.3.1.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.04" steps="1087448"/></proof>
    </goal>
    <goal name="greatest_factor_sum&#39;vc.3.1.1" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="6.09" steps="272701"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="greatest_factor_sum&#39;vc.4" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="( sum (to_fset 0 (multi_order a bound))
  (fun (i:int) -&gt; i_to_c (greatest_factor a bound n i) *. cst))" arg2="(sum (to_fset 0 (multi_order a bound))
  (fun (i:int) -&gt;
    i_to_c (greatest_factor_in_n (multi_order a bound) (2 * n) i) *. cst))">
   <goal name="greatest_factor_sum&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures1">
   </transf>
   </goal>
   <goal name="greatest_factor_sum&#39;vc.4.1" expl="equality hypothesis" proved="true">
   <transf name="apply" proved="true" arg1="sum_eq">
    <goal name="greatest_factor_sum&#39;vc.4.1.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="greatest_factor_sum&#39;vc.4.1.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="greatest_factor_sum&#39;vc.4.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="5.05" steps="1545129"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="greatest_factor_sum&#39;vc.5" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(sum (to_fset 0 (multi_order a bound))
       (fun (i:int) -&gt; cpower (i_to_c (greatest_factor a bound n i)) 2)
       )" arg2="(sum (to_fset 0 (multi_order a bound))
       (fun (i:int) -&gt;
         cpower
         (i_to_c (greatest_factor_in_n (multi_order a bound) (2 * n) i)) 2)
       )">
   <goal name="greatest_factor_sum&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures1">
   </transf>
   </goal>
   <goal name="greatest_factor_sum&#39;vc.5.1" expl="equality hypothesis" proved="true">
   <transf name="apply" proved="true" arg1="sum_eq">
    <goal name="greatest_factor_sum&#39;vc.5.1.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="greatest_factor_sum&#39;vc.5.1.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="greatest_factor_sum&#39;vc.5.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="5.06" steps="1546091"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="shor_meas_i&#39;vc" expl="VC for shor_meas_i" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="shor_meas_i&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1017985"/></proof>
  </goal>
  <goal name="shor_meas_i&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.83" steps="1017998"/></proof>
  </goal>
  <goal name="shor_meas_i&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.84" steps="1018013"/></proof>
  </goal>
  <goal name="shor_meas_i&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1018032"/></proof>
  </goal>
  <goal name="shor_meas_i&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.90" steps="1018023"/></proof>
  </goal>
  <goal name="shor_meas_i&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.84" steps="1018035"/></proof>
  </goal>
  <goal name="shor_meas_i&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.69" steps="1419426"/></proof>
  </goal>
  <goal name="shor_meas_i&#39;vc.7" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="proba_measure_set_of_ind" arg2="(path_sem (shor_circ a bound n) (kronecker (ket (2*n) 0) (ket n 1))),(to_fset 0   (multi_order a bound)),(3*n),(fun y1 -&gt;  div1 y1 (power 2 n) =   (best_appr_  k a bound n)  &amp;&amp; (exists l. 0&lt;= l &lt; multi_order a bound &amp;&amp; mod1 y1 (power 2 n) = mod1 (power a l) bound)),(fun y1 -&gt;  div1 y1 (power 2 n) =   (best_appr_  k a bound n) ),(fun i -&gt;  if 0&lt;= i &lt; multi_order a bound then  cpower (i_to_c (greatest_factor a bound n i)) 2 else c_zero),(cpower (pow_inv_2 (2*n)) 2 *. (min_mod_sum a bound n)),(fun i -&gt;  (best_appr_  k a bound n)  * power 2 n  + mod1 (power a i) bound)">
   <goal name="shor_meas_i&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Hinst">
    <goal name="shor_meas_i&#39;vc.7.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="real_mult">
     <goal name="shor_meas_i&#39;vc.7.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="4.34" steps="1422808"/></proof>
     </goal>
     <goal name="shor_meas_i&#39;vc.7.0.0.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="1.99"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="shor_meas_i&#39;vc.7.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="shor_meas_i&#39;vc.7.0.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="shor_meas_i&#39;vc.7.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="4.72" steps="1523159"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_meas_i&#39;vc.7.0.2" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="path_sem_ket_l">
     <goal name="shor_meas_i&#39;vc.7.0.2.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(width (shor_circ a bound n))" arg2="(2*n+n)
">
      <goal name="shor_meas_i&#39;vc.7.0.2.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="kronecker_ket_l">
       <goal name="shor_meas_i&#39;vc.7.0.2.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.90" steps="1087704"/></proof>
       </goal>
       <goal name="shor_meas_i&#39;vc.7.0.2.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.93" steps="1087719"/></proof>
       </goal>
       <goal name="shor_meas_i&#39;vc.7.0.2.0.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="4.44" steps="1441744"/></proof>
       </goal>
       <goal name="shor_meas_i&#39;vc.7.0.2.0.0.3" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="4.62" steps="1472526"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="shor_meas_i&#39;vc.7.0.2.0.1" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="4.19" steps="1439975"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="shor_meas_i&#39;vc.7.0.2.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="4.16" steps="1439694"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="shor_meas_i&#39;vc.7.0.3" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="shor_meas_i&#39;vc.7.0.3.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="shor_meas_i&#39;vc.7.0.3.0.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="2.11"/></proof>
      </goal>
      <goal name="shor_meas_i&#39;vc.7.0.3.0.1" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(power 2 (3 * n))" arg2="(power 2 (2 * n) * power 2 n)
">
       <goal name="shor_meas_i&#39;vc.7.0.3.0.1.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="shor_meas_i&#39;vc.7.0.3.0.1.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="Ensures">
         <goal name="shor_meas_i&#39;vc.7.0.3.0.1.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="4.03" steps="1552527"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="shor_meas_i&#39;vc.7.0.3.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="2"><result status="valid" time="0.73" steps="3744057"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_meas_i&#39;vc.7.0.4" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="shor_meas_i&#39;vc.7.0.4.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="shor_meas_i&#39;vc.7.0.4.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="((cpower (pow_inv_2 (2 * n)) 2 *. min_mod_sum a bound n)
   *. (if 0 &lt;= i /\ i &lt; multi_order a bound
       then cpower (i_to_c (greatest_factor a bound n i)) 2 else c_zero))" arg2="(((cpower (pow_inv_2 (2 * n)) 2
     *. cpower (i_to_c (greatest_factor a bound n i)) 2)
    *. min_mod_sum a bound n))
">
       <goal name="shor_meas_i&#39;vc.7.0.4.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="shor_meas_j_k">
        <goal name="shor_meas_i&#39;vc.7.0.4.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.02" steps="1098864"/></proof>
        </goal>
        <goal name="shor_meas_i&#39;vc.7.0.4.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.84" steps="1098871"/></proof>
        </goal>
        <goal name="shor_meas_i&#39;vc.7.0.4.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.63" steps="1098873"/></proof>
        </goal>
        <goal name="shor_meas_i&#39;vc.7.0.4.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.58" steps="1098877"/></proof>
        </goal>
        <goal name="shor_meas_i&#39;vc.7.0.4.0.0.0.4" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.57" steps="1098862"/></proof>
        </goal>
        <goal name="shor_meas_i&#39;vc.7.0.4.0.0.0.5" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.79" steps="1098871"/></proof>
        </goal>
        <goal name="shor_meas_i&#39;vc.7.0.4.0.0.0.6" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="4.36" steps="1519747"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="shor_meas_i&#39;vc.7.0.4.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="4.34" steps="1506177"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_meas_i&#39;vc.7.0.5" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="shor_meas_i&#39;vc.7.0.5.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="shor_meas_i&#39;vc.7.0.5.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="shor_meas_i&#39;vc.7.0.5.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="get_div">
        <goal name="shor_meas_i&#39;vc.7.0.5.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.81" steps="1098860"/></proof>
        </goal>
        <goal name="shor_meas_i&#39;vc.7.0.5.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.59" steps="1165533"/></proof>
        </goal>
        <goal name="shor_meas_i&#39;vc.7.0.5.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.70" steps="1166064"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="shor_meas_i&#39;vc.7.0.5.0.0.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.91"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_meas_i&#39;vc.7.0.6" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="4.57" steps="1507537"/></proof>
    </goal>
    <goal name="shor_meas_i&#39;vc.7.0.7" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="shor_meas_i&#39;vc.7.0.7.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="shor_meas_i&#39;vc.7.0.7.0.0" expl="apply premises" proved="true">
      <transf name="exists" proved="true" arg1="l">
       <goal name="shor_meas_i&#39;vc.7.0.7.0.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="shor_meas_i&#39;vc.7.0.7.0.0.0.0" proved="true">
        <transf name="replace" proved="true" arg1="i" arg2="(div i (power 2 n) * (power 2 n) + mod i (power 2 n))
">
         <goal name="shor_meas_i&#39;vc.7.0.7.0.0.0.0.0" proved="true">
         <proof prover="8"><result status="valid" time="4.77" steps="1558432"/></proof>
         </goal>
         <goal name="shor_meas_i&#39;vc.7.0.7.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="4.57" steps="1477095"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="shor_meas_i&#39;vc.7.0.7.0.0.0.1" proved="true">
        <proof prover="1"><result status="valid" time="2.17"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_meas_i&#39;vc.7.0.8" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="shor_meas_i&#39;vc.7.0.8.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="4.57" steps="1527037"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="shor_meas_spec&#39;vc" expl="VC for shor_meas_spec" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="shor_meas_spec&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.40" steps="1018728"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="1018741"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.53" steps="1018756"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.69" steps="1018775"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.66" steps="1018766"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.81" steps="1145350"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.78" steps="1143769"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.87" steps="1144030"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1077983"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.00" steps="1145215"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1145227"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1078023"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1077978"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.56" steps="1077991"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="1078006"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="1078025"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.64" steps="1078016"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.64" steps="1114964"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.42" steps="1494336"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.66" steps="1115074"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.93" steps="1115087"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="1115102"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="1115121"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.64" steps="1115112"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.57" steps="1115124"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.60" steps="1115049"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.35" steps="1494257"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1204766"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1204779"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="1204794"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="1204813"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="1204804"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.23" steps="1280288"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.72" steps="1205453"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.18" steps="1706242"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.04" steps="1205496"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.00" steps="1205509"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.97" steps="1205524"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.96" steps="1205543"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.96" steps="1205534"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.98" steps="1205546"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.13" steps="1280769"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.40" steps="1353973"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.45" steps="1354163"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.07" steps="1278121"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.09" steps="1278134"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.10" steps="1278149"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.91" steps="1278168"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.04" steps="1278159"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.05" steps="1278261"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.50" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.09" steps="1278294"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.51" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.64" steps="1849080"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.52" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.43" steps="1355714"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.53" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="shor_meas_spec&#39;vc.53.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(proba_measure_cond
      (path_sem (shor_circ a bound n) (kronecker (ket (2 * n) 0) (ket n 1)))
      (3 * n)
      (fun (i:int) -&gt;
        if 0 &lt;= j /\ j &lt; multi_order a bound
        then div1 i (power 2 n) = best_appr_ j a bound n else true))" arg2="(proba_measure_cond
      (path_sem (shor_circ a bound n) (kronecker (ket (2 * n) 0) (ket n 1)))
      (3 * n)
      (fun (i:int) -&gt; div1 i (power 2 n) = best_appr_ j a bound n))">
    <goal name="shor_meas_spec&#39;vc.53.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="shor_meas_i">
     <goal name="shor_meas_spec&#39;vc.53.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.10" steps="1278389"/></proof>
     </goal>
     <goal name="shor_meas_spec&#39;vc.53.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.12" steps="1278396"/></proof>
     </goal>
     <goal name="shor_meas_spec&#39;vc.53.0.0.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.07" steps="1278398"/></proof>
     </goal>
     <goal name="shor_meas_spec&#39;vc.53.0.0.3" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.14" steps="1278402"/></proof>
     </goal>
     <goal name="shor_meas_spec&#39;vc.53.0.0.4" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.16" steps="1278387"/></proof>
     </goal>
     <goal name="shor_meas_spec&#39;vc.53.0.0.5" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="5.59" steps="1849792"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="shor_meas_spec&#39;vc.53.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="proba_measure_cond_eq">
     <goal name="shor_meas_spec&#39;vc.53.0.1.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.07" steps="1278387"/></proof>
     </goal>
     <goal name="shor_meas_spec&#39;vc.53.0.1.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="shor_meas_spec&#39;vc.53.0.1.1.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="shor_meas_spec&#39;vc.53.0.1.1.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="5.46" steps="1795570"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="shor_meas_spec&#39;vc.53.0.1.1.1" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="shor_meas_spec&#39;vc.53.0.1.1.1.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="5.51" steps="1798235"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_spec&#39;vc.54" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="shor_meas_spec&#39;vc.54.0" expl="precondition" proved="true">
   <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
    <goal name="shor_meas_spec&#39;vc.54.0.0" expl="precondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="shor_meas_spec&#39;vc.54.0.0.0" expl="precondition" proved="true">
     <proof prover="8"><result status="valid" time="5.73" steps="1849836"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_spec&#39;vc.55" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(forall a b c d. a*.b*.c*.d = a *. (c*.d)*.b)
">
   <goal name="shor_meas_spec&#39;vc.55.0" expl="asserted formula" proved="true">
   <proof prover="8"><result status="valid" time="5.59" steps="1856816"/></proof>
   </goal>
   <goal name="shor_meas_spec&#39;vc.55.1" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="h">
    <goal name="shor_meas_spec&#39;vc.55.1.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(min_mod_sum a bound n)" arg2="(c_one *. min_mod_sum a bound n)
">
     <goal name="shor_meas_spec&#39;vc.55.1.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="compat_order_mult_both">
      <goal name="shor_meas_spec&#39;vc.55.1.0.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="shor_meas_spec&#39;vc.55.1.0.0.0.0" proved="true">
       <proof prover="8"><result status="valid" time="2.12" steps="1282881"/></proof>
       </goal>
       <goal name="shor_meas_spec&#39;vc.55.1.0.0.0.1" proved="true">
       <proof prover="8"><result status="valid" time="3.49" steps="1406494"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="shor_meas_spec&#39;vc.55.1.0.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.0" proved="true">
       <proof prover="8"><result status="valid" time="2.10" steps="1282881"/></proof>
       </goal>
       <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1" proved="true">
       <transf name="replace" proved="true" arg1="c_one" arg2="(cpower (pow_inv_2 (2 * n)) 2 *. cpower  (i_to_c (power 2 (2*n)))2)
">
        <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0" proved="true">
        <transf name="apply" proved="true" arg1="compat_order_mult_both">
         <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.0" proved="true">
          <transf name="replace" proved="true" arg1="(sum (to_fset 0 (multi_order a bound))
       (fun (i:int) -&gt;
         if 0 &lt;= i /\ i &lt; multi_order a bound
         then cpower (i_to_c (greatest_factor a bound n i)) 2 else c_zero)
       *. i_to_c (cardinal (to_fset 0 (multi_order a bound))))" arg2="(sum (to_fset 0 (multi_order a bound))
       (fun (i:int) -&gt;
         cpower (i_to_c (greatest_factor a bound n i)) 2 )
       *. i_to_c (cardinal (to_fset 0 (multi_order a bound))))">
           <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.0.0" proved="true">
           <transf name="replace" proved="true" arg1="(cardinal (to_fset 0 (multi_order a bound)))" arg2="(((multi_order a bound)))
">
            <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.0.0.0" proved="true">
            <transf name="apply" proved="true" arg1="real_cpower_is_pos">
             <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="3.55" steps="1359996"/></proof>
             </goal>
             <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="5.10" steps="1853984"/></proof>
             </goal>
             <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.04" steps="1282888"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="2.01" steps="1282888"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="apply" proved="true" arg1="mult_eq_t">
            <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="sum_eq">
             <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="2.24"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.0.1.1" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.1" proved="true">
          <transf name="replace" proved="true" arg1="(sum (to_fset 0 (multi_order a bound))
       (fun (i:int) -&gt;
         if 0 &lt;= i /\ i &lt; multi_order a bound
         then cpower (i_to_c (greatest_factor a bound n i)) 2 else c_zero)
       *. i_to_c (cardinal (to_fset 0 (multi_order a bound))))" arg2="(sum (to_fset 0 (multi_order a bound))
       (fun (i:int) -&gt;
         cpower (i_to_c (greatest_factor a bound n i)) 2 )
       *. i_to_c (cardinal (to_fset 0 (multi_order a bound))))">
           <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.1.0" proved="true">
           <transf name="replace" proved="true" arg1="(cardinal (to_fset 0 (multi_order a bound)))" arg2="(((multi_order a bound)))
">
            <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.1.0.0" proved="true">
            <transf name="instantiate" proved="true" arg1="greatest_factor_sum" arg2="a,bound,n,c_one
">
             <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.1.0.0.0" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.1.0.0.0.0" proved="true">
              <transf name="apply" proved="true" arg1="Hinst">
               <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.51" steps="1690876"/></proof>
               </goal>
               <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.72" steps="1690874"/></proof>
               </goal>
               <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.67" steps="1690874"/></proof>
               </goal>
               <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.1.0.0.0.0.3" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.92" steps="1690889"/></proof>
               </goal>
               <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.1.0.0.0.0.4" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.90" steps="1690874"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.1.0.1" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="2.11" steps="1282888"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.1.1" expl="equality hypothesis" proved="true">
           <transf name="apply" proved="true" arg1="mult_eq_t">
            <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.1.1.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="sum_eq">
             <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.1.1.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="5.67" steps="1854888"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.0.1.1.1" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="5.67" steps="1854039"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.1" expl="equality hypothesis" proved="true">
        <transf name="replace" proved="true" arg1="(cpower (pow_inv_2 (2 * n)) 2 *. cpower (i_to_c (power 2 (2 * n))) 2)" arg2="(cpower (pow_inv_2 (2 * n)  *. (i_to_c (power 2 (2 * n)))) 2)
">
         <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.1.0" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="6.26" steps="1999109"/></proof>
         </goal>
         <goal name="shor_meas_spec&#39;vc.55.1.0.0.1.1.1.1" expl="equality hypothesis" proved="true">
         <proof prover="2"><result status="valid" time="1.05" steps="4746051"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="shor_meas_spec&#39;vc.55.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="3.26" steps="1360013"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_spec&#39;vc.56" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="real_mult">
   <goal name="shor_meas_spec&#39;vc.56.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="5.81" steps="1887453"/></proof>
   </goal>
   <goal name="shor_meas_spec&#39;vc.56.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="sum_real">
    <goal name="shor_meas_spec&#39;vc.56.1.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="shor_meas_spec&#39;vc.56.1.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="shor_meas_spec&#39;vc.56.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="5.87" steps="1892603"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_meas_spec&#39;vc.56.1.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.28" steps="1359575"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_spec&#39;vc.57" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="mult_pos">
   <goal name="shor_meas_spec&#39;vc.57.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="5.82" steps="1899635"/></proof>
   </goal>
   <goal name="shor_meas_spec&#39;vc.57.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="positive_sum">
    <goal name="shor_meas_spec&#39;vc.57.1.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="shor_meas_spec&#39;vc.57.1.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="shor_meas_spec&#39;vc.57.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="5.87" steps="1906469"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_spec&#39;vc.58" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.88" steps="1278648"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.59" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1278661"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.60" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1278676"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.61" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.83" steps="1278695"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.62" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.84" steps="1278686"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.63" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.87" steps="1279239"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.64" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.29"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.65" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.92" steps="1279263"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.66" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.28"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.67" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1279277"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.68" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.39" steps="1407403"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.69" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.00" steps="1279373"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.70" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.58" steps="1872843"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.71" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.07" steps="1279416"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.72" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.06" steps="1279429"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.73" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.11" steps="1279444"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.74" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.13" steps="1279463"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.75" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.89" steps="1279454"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.76" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.89" steps="1279466"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.77" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.87" steps="1279458"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.78" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.24"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.79" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1279530"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.80" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.87" steps="1279543"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.81" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1279558"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.82" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.84" steps="1279577"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.83" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1279568"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.84" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.44" steps="1356328"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.85" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1280156"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.86" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.40"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.87" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.84" steps="1280199"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.88" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.17" steps="1280212"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.89" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.19" steps="1280227"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.90" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.23" steps="1280246"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.91" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1280237"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.92" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.14" steps="1280249"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.93" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.21" steps="1356638"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.94" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.21" steps="1356378"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.95" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.54" steps="1356519"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.96" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.87" steps="1280835"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.97" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.90" steps="1280848"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.98" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.90" steps="1280863"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.99" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.90" steps="1280882"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.100" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.88" steps="1280873"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.101" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.88" steps="1280975"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.102" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.14" steps="1280981"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.103" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.08"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.104" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.14" steps="1280995"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.105" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.46" steps="1358053"/></proof>
  </goal>
  <goal name="shor_meas_spec&#39;vc.106" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="shor_meas_spec&#39;vc.106.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(proba_measure_cond
      (path_sem (shor_circ a bound n) (kronecker (ket (2 * n) 0) (ket n 1)))
      (3 * n)
      (fun (i:int) -&gt;
        if 0 &lt;= j /\ j &lt; multi_order a bound
        then div1 i (power 2 n) = best_appr_ j a bound n else true))" arg2="(proba_measure_cond
      (path_sem (shor_circ a bound n) (kronecker (ket (2 * n) 0) (ket n 1)))
      (3 * n)
      (fun (i:int) -&gt;
         div1 i (power 2 n) = best_appr_ j a bound n ))">
    <goal name="shor_meas_spec&#39;vc.106.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="shor_meas_i">
     <goal name="shor_meas_spec&#39;vc.106.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.87" steps="1281295"/></proof>
     </goal>
     <goal name="shor_meas_spec&#39;vc.106.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.12" steps="1281302"/></proof>
     </goal>
     <goal name="shor_meas_spec&#39;vc.106.0.0.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.15" steps="1281304"/></proof>
     </goal>
     <goal name="shor_meas_spec&#39;vc.106.0.0.3" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.84" steps="1281308"/></proof>
     </goal>
     <goal name="shor_meas_spec&#39;vc.106.0.0.4" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.85" steps="1281293"/></proof>
     </goal>
     <goal name="shor_meas_spec&#39;vc.106.0.0.5" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="2.06"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="shor_meas_spec&#39;vc.106.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="proba_measure_cond_eq">
     <goal name="shor_meas_spec&#39;vc.106.0.1.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.86" steps="1281293"/></proof>
     </goal>
     <goal name="shor_meas_spec&#39;vc.106.0.1.1" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="shor_meas_spec&#39;vc.106.0.1.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="shor_meas_spec&#39;vc.106.0.1.1.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.00"/></proof>
       </goal>
       <goal name="shor_meas_spec&#39;vc.106.0.1.1.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.03" steps="1281394"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_spec&#39;vc.107" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="shor_meas_spec&#39;vc.107.0" expl="precondition" proved="true">
   <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
    <goal name="shor_meas_spec&#39;vc.107.0.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="5.69" steps="1832948"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_spec&#39;vc.108" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(forall a b c. b&lt;&gt; c_zero -&gt; a/.b*.c = c/.b*.a)
">
   <goal name="shor_meas_spec&#39;vc.108.0" expl="asserted formula" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="shor_meas_spec&#39;vc.108.0.0" expl="asserted formula" proved="true">
    <transf name="rewrite" proved="true" arg1="(/.)&#39;def">
     <goal name="shor_meas_spec&#39;vc.108.0.0.0" expl="asserted formula" proved="true">
     <transf name="rewrite" proved="true" arg1="(/.)&#39;def">
      <goal name="shor_meas_spec&#39;vc.108.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="2.31"/></proof>
      </goal>
      <goal name="shor_meas_spec&#39;vc.108.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.06" steps="1285735"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="shor_meas_spec&#39;vc.108.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.03" steps="1285735"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="shor_meas_spec&#39;vc.108.1" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="h">
    <goal name="shor_meas_spec&#39;vc.108.1.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="compat_order_mult_both">
     <goal name="shor_meas_spec&#39;vc.108.1.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="shor_meas_spec&#39;vc.108.1.0.0.0" proved="true">
      <transf name="apply" proved="true" arg1="i_to_c_pos">
       <goal name="shor_meas_spec&#39;vc.108.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="euler_phi&#39;def">
        <goal name="shor_meas_spec&#39;vc.108.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="2.38"/></proof>
        </goal>
        <goal name="shor_meas_spec&#39;vc.108.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.23" steps="1285808"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="shor_meas_spec&#39;vc.108.1.0.0.1" proved="true">
      <transf name="rewrite" proved="true" arg1="euler_phi&#39;def">
       <goal name="shor_meas_spec&#39;vc.108.1.0.0.1.0" proved="true">
       <proof prover="8"><result status="valid" time="3.69" steps="1362640"/></proof>
       </goal>
       <goal name="shor_meas_spec&#39;vc.108.1.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.91" steps="1285808"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="shor_meas_spec&#39;vc.108.1.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="shor_meas_spec&#39;vc.108.1.0.1.0" proved="true">
      <proof prover="1"><result status="valid" time="2.04"/></proof>
      </goal>
      <goal name="shor_meas_spec&#39;vc.108.1.0.1.1" proved="true">
      <transf name="replace" proved="true" arg1="(min_mod_sum a bound n /. i_to_c (multi_order a bound))" arg2="(cpower (pow_inv_2 (2 * n)) 2 *. ((cpower (i_to_c (power 2 (2*n))) 2 *. min_mod_sum a bound n /. i_to_c (multi_order a bound))))
">
       <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0" proved="true">
       <transf name="rewrite" proved="true" arg1="mult_assoc1">
        <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0" proved="true">
        <transf name="apply" proved="true" arg1="compat_order_mult_both">
         <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.0" proved="true">
          <transf name="apply" proved="true" arg1="div_pos">
           <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="mult_pos">
            <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="real_cpower_is_pos">
             <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="3.22" steps="1362637"/></proof>
             </goal>
             <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="i_to_c_pos">
              <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="assert" proved="true" arg1="(0 &lt; power 2 (2 * n))">
               <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
                <transf name="apply" proved="true" arg1="positive_int_exp1">
                 <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="2.70" steps="1693714"/></proof>
                 </goal>
                 <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="4.24" steps="1777763"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="3.49" steps="1361397"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.13" steps="1285813"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.99" steps="1285806"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="5.45" steps="1748368"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1" proved="true">
          <transf name="assert" proved="true" arg1="(forall a b c.real_ a -&gt; real_ b -&gt; real_ c -&gt;  c_zero &lt;. c -&gt; a &lt;=. b*. c -&gt; a/. c &lt;=. b)
">
           <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.0" expl="asserted formula" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.0.0" expl="asserted formula" proved="true">
            <transf name="replace" proved="true" arg1="b" arg2="((b *. c)*.(c_one/.c))
">
             <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
             <transf name="replace" proved="true" arg1="(a/.c)" arg2="(a*. (c_one/.c))
">
              <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
              <proof prover="1"><result status="valid" time="2.41"/></proof>
              </goal>
              <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="3.65" steps="1421333"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="5.44" steps="1922588"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1" proved="true">
           <transf name="apply" proved="true" arg1="h">
            <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="real_mult">
             <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.0.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="6.02" steps="1923161"/></proof>
             </goal>
             <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.95" steps="1285936"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.1" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="real_mult">
             <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.1.0" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="1.88" steps="1285936"/></proof>
             </goal>
             <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.1.1" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="sum_real">
              <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.1.1.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.1.1.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="2.39"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.1.1.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="3.22" steps="1362280"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.2" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="1.92" steps="1285936"/></proof>
            </goal>
            <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.3" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="2.37"/></proof>
            </goal>
            <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="mult_assoc1">
             <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(min_mod_sum a bound n
       *. (sum (to_fset 0 (multi_order a bound))
           (fun (i:int) -&gt;
             if 0 &lt;= i /\ i &lt; multi_order a bound
             then cpower (i_to_c (greatest_factor a bound n i)) 2 else c_zero)
           *. i_to_c (multi_order a bound)))" arg2="( (sum (to_fset 0 (multi_order a bound))
           (fun (i:int) -&gt;
             if 0 &lt;= i /\ i &lt; multi_order a bound
             then cpower (i_to_c (greatest_factor a bound n i)) 2 else c_zero)
           *. i_to_c (multi_order a bound))*.min_mod_sum a bound n)">
              <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="compat_order_mult_both">
               <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="3.77" steps="1362771"/></proof>
               </goal>
               <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1.0" proved="true">
                <transf name="apply" proved="true" arg1="real_cpower_is_pos">
                 <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="3.34" steps="1362756"/></proof>
                 </goal>
                 <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1.0.1" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="5.14" steps="1881625"/></proof>
                 </goal>
                 <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1.0.2" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="2.14" steps="1285943"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1.1" proved="true">
                <transf name="replace" proved="true" arg1="(sum (to_fset 0 (multi_order a bound))
       (fun (i:int) -&gt;
         if 0 &lt;= i /\ i &lt; multi_order a bound
         then cpower (i_to_c (greatest_factor a bound n i)) 2 else c_zero)
       *. i_to_c (multi_order a bound))" arg2="(sum (to_fset 0 (multi_order a bound))
       (fun (i:int) -&gt;
          cpower (i_to_c (greatest_factor a bound n i)) 2 )
       *. i_to_c (multi_order a bound))
">
                 <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1.1.0" proved="true">
                 <transf name="split_all_full" proved="true" >
                  <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1.1.0.0" proved="true">
                  <transf name="instantiate" proved="true" arg1="greatest_factor_sum" arg2="a,bound,n,c_zero
">
                   <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1.1.0.0.0" proved="true">
                   <transf name="apply" proved="true" arg1="Hinst">
                    <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.79" steps="1693988"/></proof>
                    </goal>
                    <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1.1.0.0.0.1" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.79" steps="1693986"/></proof>
                    </goal>
                    <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1.1.0.0.0.2" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.78" steps="1693986"/></proof>
                    </goal>
                    <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1.1.0.0.0.3" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.81" steps="1694001"/></proof>
                    </goal>
                    <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1.1.0.0.0.4" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.78" steps="1693986"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1.1.1" expl="equality hypothesis" proved="true">
                 <transf name="apply" proved="true" arg1="mult_eq_t">
                  <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1.1.1.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="sum_eq">
                   <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1.1.1.0.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1.1.1.0.0.0" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="2.34"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.0.1.1.1.1" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="1.99" steps="1285934"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.0.1.1.4.0.1" expl="equality hypothesis" proved="true">
              <transf name="apply" proved="true" arg1="mult_comm">
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="5.76" steps="1881124"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1" expl="equality hypothesis" proved="true">
       <transf name="assert" proved="true" arg1="(forall a b c d. c_zero &lt;&gt; d -&gt; a *. ((b*.c)/.d ) = (c/.d) *. (a*.b))
">
        <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1.0" expl="asserted formula" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1.0.0" expl="asserted formula" proved="true">
         <transf name="replace" proved="true" arg1="((b *. c) /. d)" arg2="((b *. c) *. (c_one/.d))
">
          <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1.0.0.0" expl="asserted formula" proved="true">
          <transf name="replace" proved="true" arg1="(( c) /. d)" arg2="(( c) *. (c_one/.d))
">
           <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1.0.0.0.0" expl="asserted formula" proved="true">
           <proof prover="6"><result status="valid" time="0.91" steps="25063"/></proof>
           </goal>
           <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="3.43" steps="1362726"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="3.42" steps="1362733"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1.1" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="h">
         <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1.1.0" expl="equality hypothesis" proved="true">
         <transf name="rewrite" proved="true" arg1="mult_one_t">
          <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1.1.0.0" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="1.99" steps="1285904"/></proof>
          </goal>
          <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1.1.0.1" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="mult_cpower">
           <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1.1.0.1.0" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(pow_inv_2 (2 * n) *. i_to_c (power 2 (2 * n)))" arg2="c_one">
            <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1.1.0.1.0.0" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="0.93" steps="4341591"/></proof>
            </goal>
            <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1.1.0.1.0.1" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="pow_inv_to_pow_2">
             <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1.1.0.1.0.1.0" expl="equality hypothesis" proved="true">
             <proof prover="2"><result status="valid" time="0.99" steps="4383444"/></proof>
             </goal>
             <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1.1.0.1.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="3.48" steps="1361487"/></proof>
             </goal>
             <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1.1.0.1.0.1.2" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.18" steps="1285913"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1.1.0.1.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.18" steps="1285913"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="shor_meas_spec&#39;vc.108.1.0.1.1.1.1.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="3.43" steps="1413421"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_meas_spec&#39;vc.108.1.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="3.58" steps="1413311"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_spec&#39;vc.109" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="real_mult">
   <goal name="shor_meas_spec&#39;vc.109.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="5.84" steps="1883964"/></proof>
   </goal>
   <goal name="shor_meas_spec&#39;vc.109.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="sum_real">
    <goal name="shor_meas_spec&#39;vc.109.1.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="shor_meas_spec&#39;vc.109.1.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="shor_meas_spec&#39;vc.109.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="6.04" steps="1888538"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_meas_spec&#39;vc.109.1.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.29" steps="1362209"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_spec&#39;vc.110" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="mult_pos">
   <goal name="shor_meas_spec&#39;vc.110.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="5.71" steps="1894348"/></proof>
   </goal>
   <goal name="shor_meas_spec&#39;vc.110.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="positive_sum">
    <goal name="shor_meas_spec&#39;vc.110.1.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="shor_meas_spec&#39;vc.110.1.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="shor_meas_spec&#39;vc.110.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="5.82" steps="1901196"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_spec&#39;vc.111" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(proba_measure_cond
      (path_sem (shor_circ a bound n) (kronecker (ket (2 * n) 0) (ket n 1)))
      (3 * n)
      (fun (y1:int) -&gt;
        exists k:int.
         (0 &lt;= k /\ k &lt; multi_order a bound) &amp;&amp;
         div1 y1 (power 2 n) = best_appr_ k a bound n))" arg2="(proba_measure_cond
      (path_sem (shor_circ a bound n) (kronecker (ket (2 * n) 0) (ket n 1)))
      (3 * n)
      (fun (i:int) -&gt;
        exists k:int.
         mem k (to_fset 0 (multi_order a bound)) &amp;&amp;
         (((fun (k1:int) (i1:int) -&gt;
             if 0 &lt;= k1 /\ k1 &lt; multi_order a bound
             then div1 i1 (power 2 n) = best_appr_ k1 a bound n else true)
           @ k)
          @ i)
         = True))">
   <goal name="shor_meas_spec&#39;vc.111.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures52">
   </transf>
   </goal>
   <goal name="shor_meas_spec&#39;vc.111.1" expl="equality hypothesis" proved="true">
   <transf name="apply" proved="true" arg1="proba_measure_cond_eq">
    <goal name="shor_meas_spec&#39;vc.111.1.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="shor_meas_spec&#39;vc.111.1.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="shor_meas_spec&#39;vc.111.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.52" steps="1358209"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_meas_spec&#39;vc.111.1.1" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="shor_meas_spec&#39;vc.111.1.1.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="shor_meas_spec&#39;vc.111.1.1.0.0" expl="apply premises" proved="true">
      <transf name="exists" proved="true" arg1="k">
       <goal name="shor_meas_spec&#39;vc.111.1.1.0.0.0" proved="true">
       <proof prover="8"><result status="valid" time="5.54" steps="1823507"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="shor_meas_spec&#39;vc.111.1.1.0.1" expl="apply premises" proved="true">
      <transf name="exists" proved="true" arg1="k">
       <goal name="shor_meas_spec&#39;vc.111.1.1.0.1.0" proved="true">
       <proof prover="8"><result status="valid" time="5.49" steps="1824036"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_meas_spec&#39;vc.112" expl="postcondition" proved="true">
  <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Ensures1">
   <goal name="shor_meas_spec&#39;vc.112.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(proba_measure_cond
      (path_sem (shor_circ a bound n) (kronecker (ket (2 * n) 0) (ket n 1)))
      (3 * n)
      (fun (y1:int) -&gt;
        exists k:int.
         (0 &lt;= k /\ k &lt; multi_order a bound) &amp;&amp;
         co_prime k (multi_order a bound) &amp;&amp;
         div1 y1 (power 2 n) = best_appr_ k a bound n))" arg2="(proba_measure_cond
      (path_sem (shor_circ a bound n) (kronecker (ket (2 * n) 0) (ket n 1)))
      (3 * n)
      (fun (i:int) -&gt;
        exists k:int.
         mem k (co_primes (multi_order a bound)) &amp;&amp;
         (if 0 &lt;= k /\ k &lt; multi_order a bound
          then div1 i (power 2 n) = best_appr_ k a bound n else true)))">
    <goal name="shor_meas_spec&#39;vc.112.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="Ensures1">
    </transf>
    </goal>
    <goal name="shor_meas_spec&#39;vc.112.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="proba_measure_cond_eq">
     <goal name="shor_meas_spec&#39;vc.112.0.1.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.19" steps="1358364"/></proof>
     </goal>
     <goal name="shor_meas_spec&#39;vc.112.0.1.1" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="shor_meas_spec&#39;vc.112.0.1.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="shor_meas_spec&#39;vc.112.0.1.1.0.0" expl="apply premises" proved="true">
       <transf name="exists" proved="true" arg1="k">
        <goal name="shor_meas_spec&#39;vc.112.0.1.1.0.0.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="shor_meas_spec&#39;vc.112.0.1.1.0.0.0.0" proved="true">
         <proof prover="8"><result status="valid" time="5.28" steps="1826107"/></proof>
         </goal>
         <goal name="shor_meas_spec&#39;vc.112.0.1.1.0.0.0.1" proved="true">
         <proof prover="8"><result status="valid" time="1.91" steps="1281826"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="shor_meas_spec&#39;vc.112.0.1.1.0.1" expl="apply premises" proved="true">
       <transf name="exists" proved="true" arg1="k">
        <goal name="shor_meas_spec&#39;vc.112.0.1.1.0.1.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="shor_meas_spec&#39;vc.112.0.1.1.0.1.0.0" proved="true">
         <proof prover="8"><result status="valid" time="4.55" steps="1826782"/></proof>
         </goal>
         <goal name="shor_meas_spec&#39;vc.112.0.1.1.0.1.0.1" proved="true">
         <proof prover="1"><result status="valid" time="2.00"/></proof>
         </goal>
         <goal name="shor_meas_spec&#39;vc.112.0.1.1.0.1.0.2" proved="true">
         <proof prover="8"><result status="valid" time="4.55" steps="1826071"/></proof>
         </goal>
         <goal name="shor_meas_spec&#39;vc.112.0.1.1.0.1.0.3" proved="true">
         <proof prover="8"><result status="valid" time="1.78" steps="1281832"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
