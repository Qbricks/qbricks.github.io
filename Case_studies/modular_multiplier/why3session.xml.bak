<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="8" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="10" name="Z3" version="4.8.6" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="modular_multiplier.mlw"/>
<theory name="Multiplier" proved="true">
 <goal name="multiplier_pre&#39;vc" expl="VC for multiplier_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="multiplier_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.23" steps="962753"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.26" steps="962970"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.20" steps="962983"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.24" steps="963558"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.23" steps="963571"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.10" steps="1028122"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.12" steps="1028210"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.28" steps="964088"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.03" steps="1033811"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.9" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(forall a b c. a*b*c = a * (b*c))">
   <goal name="multiplier_pre&#39;vc.9.0" expl="asserted formula" proved="true">
   <proof prover="8"><result status="valid" time="1.27" steps="971123"/></proof>
   </goal>
   <goal name="multiplier_pre&#39;vc.9.1" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="h">
    <goal name="multiplier_pre&#39;vc.9.1.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="compat_int_order_mult">
     <goal name="multiplier_pre&#39;vc.9.1.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.03" steps="1033907"/></proof>
     </goal>
     <goal name="multiplier_pre&#39;vc.9.1.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="multiplier_pre&#39;vc.9.1.0.1.0" proved="true">
      <proof prover="8"><result status="valid" time="3.10" steps="1301066"/></proof>
      </goal>
      <goal name="multiplier_pre&#39;vc.9.1.0.1.1" proved="true">
      <proof prover="8"><result status="valid" time="3.16" steps="1302939"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_pre&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.28" steps="971099"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.25" steps="971112"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.28" steps="971518"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.27" steps="971529"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.29" steps="971805"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.29" steps="971818"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.07" steps="1035188"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.11" steps="1035257"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.31" steps="972297"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.24" steps="962758"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.25" steps="962771"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.25" steps="963361"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.27" steps="963393"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="970198"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="970211"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.08" steps="1033992"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.11" steps="1033272"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.33" steps="970711"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.28" expl="variant decrease" proved="true">
  <proof prover="8"><result status="valid" time="1.34" steps="971146"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.18" steps="1034722"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.24" steps="1034639"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.80" steps="1452866"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.86" steps="1123617"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.33" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="multiplier_pre&#39;vc.33.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="2.52" steps="1037712"/></proof>
   </goal>
   <goal name="multiplier_pre&#39;vc.33.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="multiplier_pre&#39;vc.33.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="multiplier_pre&#39;vc.33.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H4">
      <goal name="multiplier_pre&#39;vc.33.1.0.0.0" expl="postcondition" proved="true">
      <transf name="assert" proved="true" arg1="(forall a b c. a* (b+c) = a*b + a*c)">
       <goal name="multiplier_pre&#39;vc.33.1.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="8"><result status="valid" time="2.31" steps="1383727"/></proof>
       </goal>
       <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="h">
        <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="leq_trans_add">
         <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.31" steps="1463344"/></proof>
         </goal>
         <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.1" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="H17">
          <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.1.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="((cont_size * adder_gate_bound n) * 1)" arg2="((adder_gate_bound n *cont_size ) )">
           <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="leq_trans_mult">
            <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="3.27" steps="1463332"/></proof>
            </goal>
            <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="1.73"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="2.05" steps="1383748"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_pre&#39;vc.34" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H4">
   <goal name="multiplier_pre&#39;vc.34.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="multiplier_pre&#39;vc.34.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="multiplier_pre&#39;vc.34.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ind_isum_one">
      <goal name="multiplier_pre&#39;vc.34.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="path_sem_to_sem">
        <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(width result)" arg2="(n+ (n+1+1))">
         <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.93" steps="1370837"/></proof>
          </goal>
          <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="3.01" steps="1370846"/></proof>
          </goal>
          <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="1.67"/></proof>
          </goal>
          <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="4.19" steps="1603015"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="1.88" steps="1293395"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="H11">
         <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(ket n i)" arg2="(bv_to_ket (int_to_bv i n))">
          <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="case" proved="true" arg1="(getbv (int_to_bv i n) @ 0 = 0)">
           <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="replace" proved="true" arg1="(cont o 0 n o2)" arg2="(cont o3 0 n o5)">
            <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="H22">
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
             <proof prover="0"><result status="valid" time="1.68"/></proof>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="replace" proved="true" arg1="(width o3)" arg2="(n+1+1)
">
              <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_ket_l">
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="3.02" steps="1370860"/></proof>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.95" steps="1293415"/></proof>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="1.71"/></proof>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1.0.3" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.93" steps="1293400"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="1.92" steps="1293419"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="1.69"/></proof>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.3" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.92" steps="1293403"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="2.03" steps="1310663"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1" expl="false case (apply premises)" proved="true">
           <transf name="replace" proved="true" arg1="(cont o 0 n o2)" arg2="(cont o3 0 n o5)">
            <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0" expl="false case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="H21">
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0" expl="false case (apply premises)" proved="true">
             <transf name="replace" proved="true" arg1="(b + (pick * ((getbv (int_to_bv i n) @ 0) * power 2 (n - 1))))" arg2="((pick * ( power 2 (n - 1)))+b)">
              <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.0" expl="false case (apply premises)" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_eq">
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
               </transf>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="sem_to_path_sem">
                <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
                <transf name="replace" proved="true" arg1="(apply_qft (n + 1) b)" arg2="(apply_qft (n + 1) (mod1 b bound))">
                 <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="4.33" steps="1611054"/></proof>
                 </goal>
                 <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="0"><result status="valid" time="1.72"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="0"><result status="valid" time="1.70"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="replace" proved="true" arg1="(width o3)" arg2="(n+1+1)
">
              <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_ket_l">
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="3.07" steps="1370859"/></proof>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.94" steps="1293419"/></proof>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="4.41" steps="1605102"/></proof>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1.0.3" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.09" steps="1293404"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="1.98" steps="1293423"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="1.73"/></proof>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.3" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="1.76"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="2.14" steps="1310667"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
          <proof prover="0"><result status="valid" time="1.73"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="multiplier_pre&#39;vc.34.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.06" steps="1293388"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="multiplier_pre&#39;vc.34.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="multiplier_pre&#39;vc.34.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="multiplier_pre&#39;vc.34.1.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="path_sem_to_sem">
      <goal name="multiplier_pre&#39;vc.34.1.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(width result)" arg2="(n+ (n+1+1))">
       <goal name="multiplier_pre&#39;vc.34.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_ket_l">
        <goal name="multiplier_pre&#39;vc.34.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.55" steps="1463397"/></proof>
        </goal>
        <goal name="multiplier_pre&#39;vc.34.1.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.57" steps="1463406"/></proof>
        </goal>
        <goal name="multiplier_pre&#39;vc.34.1.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="2.03"/></proof>
        </goal>
        <goal name="multiplier_pre&#39;vc.34.1.0.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="4.72" steps="1709186"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="multiplier_pre&#39;vc.34.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="2.13" steps="1383802"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="multiplier_pre&#39;vc.34.1.0.0.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="H11">
       <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="sem_to_path_sem">
        <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="sem_comp" arg2="with" arg3="(kronecker (ket n i)
    (kronecker
     (apply_qft (n + 1)
      (mod1
       (b
        + (pick
           * ind_isum
             (fun (k:int) -&gt;
               (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))
             0 ((j - 1) + 1)))
       bound))
     (ket 1 0)))">
         <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(j-1)" arg2="o15">
          <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="H13">
           <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.04" steps="1383790"/></proof>
           </goal>
           <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.22" steps="1383790"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="2.27" steps="1383788"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(ket n i)" arg2="(bv_to_ket (int_to_bv i n))">
          <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
          <transf name="case" proved="true" arg1="(getbv (int_to_bv i n) @ j = 0)
">
           <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0" expl="true case (apply premises)" proved="true">
           <transf name="apply" proved="true" arg1="path_sem_to_sem">
            <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(width
o16)" arg2="(n+(n+1+1))">
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="kronecker_ket_l">
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="3.48" steps="1463441"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="3.52" steps="1463450"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="4.74" steps="1713511"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0.0.3" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="4.81" steps="1716935"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="3.51" steps="1463450"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="o16" arg2="(cont o20 j n o22)">
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="H36">
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(ind_isum
             (fun (k:int) -&gt;
               (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))
             0 (j + 1))" arg2="(ind_isum
             (fun (k:int) -&gt;
               (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))
             0 (j -1 + 1))">
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
               </transf>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
               <transf name="rewrite" proved="true" arg1="ind_isum_re">
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
                <transf name="replace" proved="true" arg1="(j+1-1)" arg2="j">
                 <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0" expl="equality hypothesis" proved="true">
                 <transf name="rewrite" proved="true" arg1="add_zero">
                  <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                  <transf name="replace" proved="true" arg1="(j-1+1)" arg2="j">
                   <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
                   <transf name="compute_specified" proved="true" >
                   </transf>
                   </goal>
                   <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="8"><result status="valid" time="2.23" steps="1383824"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.48" steps="1401041"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="8"><result status="valid" time="2.61" steps="1383824"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="2.25" steps="1383826"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
              <transf name="replace" proved="true" arg1="(width
o20)" arg2="((n+1+1))">
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="3.59" steps="1463441"/></proof>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.21" steps="1383802"/></proof>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="2.02"/></proof>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1.0.3" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.24" steps="1383807"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="2.21" steps="1383826"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
              <proof prover="0"><result status="valid" time="2.14"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.3" expl="rewrite premises" proved="true">
              <proof prover="0"><result status="valid" time="2.01"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="2.45" steps="1401019"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1" expl="false case (apply premises)" proved="true">
           <transf name="apply" proved="true" arg1="path_sem_to_sem">
            <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(width
o16)" arg2="(n+(n+1+1))">
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="kronecker_ket_l">
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="3.55" steps="1463442"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="3.57" steps="1463451"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0.0.2" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="2.02"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0.0.3" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="4.84" steps="1716973"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="3.29" steps="1463451"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="o16" arg2="(cont o20 j n o22)">
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="H35">
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_eq">
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
               </transf>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="sem_to_path_sem">
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0" expl="apply premises" proved="true">
                <transf name="replace" proved="true" arg1="(b
      + (pick
         * ind_isum
           (fun (k:int) -&gt;
             (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))
           0 (j + 1)))" arg2="((pick * power 2 ((n - j) - 1))  +(b
      + (pick
         * ind_isum
           (fun (k:int) -&gt;
             (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))
           0 (j - 1+1))) )">
                 <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="(pick * power 2 ((n - j) - 1))" arg2="o21">
                  <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="H37">
                  </transf>
                  </goal>
                  <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="8"><result status="valid" time="2.23" steps="1383821"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1" expl="equality hypothesis" proved="true">
                 <transf name="rewrite" proved="true" arg1="ind_isum_re">
                  <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
                  <transf name="assert" proved="true" arg1="(forall a p i i&#39; r r&#39;. r = r&#39; -&gt; i = i&#39; -&gt; a+ (p * (i+r)) = p*r&#39; + (a + p*i&#39;))">
                   <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.0" expl="asserted formula" proved="true">
                   <proof prover="8"><result status="valid" time="2.20" steps="1384019"/></proof>
                   </goal>
                   <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
                   <transf name="apply" proved="true" arg1="h">
                    <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.1.0" expl="apply premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
                     <proof prover="0"><result status="valid" time="3.13"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.1.1" expl="apply premises" proved="true">
                    <transf name="replace" proved="true" arg1="(j-1+1)" arg2="(j+1-1)">
                     <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.1.1.0" expl="apply premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                     </transf>
                     </goal>
                     <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.1.1.1" expl="equality hypothesis" proved="true">
                     <proof prover="8"><result status="valid" time="2.14" steps="1384044"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="2.31" steps="1383830"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
              <transf name="replace" proved="true" arg1="(width
o20)" arg2="((n+1+1))">
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="3.80" steps="1463442"/></proof>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.37" steps="1383806"/></proof>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="2.11"/></proof>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1.0.3" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.36" steps="1383811"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="2.27" steps="1383830"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.2" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="5.08" steps="1715000"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.3" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="5.18" steps="1711271"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="2.43" steps="1401025"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
          <proof prover="0"><result status="valid" time="2.00"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.58" steps="1463805"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_pre&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="962701"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.36" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="969714"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.37" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="969718"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.38" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(pick * i)" arg2="(pick
           * ind_isum
             (fun (k:int) -&gt;
               (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))
             0 ((n - 1) + 1))">
   <goal name="multiplier_pre&#39;vc.38.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures2">
    <goal name="multiplier_pre&#39;vc.38.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.56" steps="969795"/></proof>
    </goal>
    <goal name="multiplier_pre&#39;vc.38.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.62" steps="969795"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="multiplier_pre&#39;vc.38.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(pick * i)" arg2="(pick * bv_to_int (int_to_bv i n))">
    <goal name="multiplier_pre&#39;vc.38.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
     <goal name="multiplier_pre&#39;vc.38.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(n-1+1)" arg2="n">
      <goal name="multiplier_pre&#39;vc.38.1.0.0.0" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(length1 (int_to_bv i n))" arg2="n">
       <goal name="multiplier_pre&#39;vc.38.1.0.0.0.0" expl="equality hypothesis" proved="true">
       <transf name="replace" proved="true" arg1="(fun (k:int) -&gt; (getbv (int_to_bv i n) @ k) * power 2 ((n - 1) - k))" arg2="(fun (k:int) -&gt; (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))">
        <goal name="multiplier_pre&#39;vc.38.1.0.0.0.0.0" expl="equality hypothesis" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
        <goal name="multiplier_pre&#39;vc.38.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="set_equal_func">
         <goal name="multiplier_pre&#39;vc.38.1.0.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.32" steps="1294247"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="multiplier_pre&#39;vc.38.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="3.32" steps="1298459"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="multiplier_pre&#39;vc.38.1.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="1.57" steps="969793"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="multiplier_pre&#39;vc.38.1.1" expl="equality hypothesis" proved="true">
    <proof prover="0"><result status="valid" time="1.65"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_pre&#39;vc.39" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="969996"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="multiplier_qft_pre&#39;vc" expl="VC for multiplier_qft_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="multiplier_qft_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.52" steps="1027585"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.60" steps="970102"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.53" steps="1033147"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.57" steps="970135"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.54" steps="1032788"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.57" steps="970530"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.55" steps="970552"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.55" steps="970556"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.8" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="multiplier_qft_pre&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.86" steps="1343765"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="3.10"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.02" steps="986272"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.60" steps="971309"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.12" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(mod1 (b + (pick * i)) bound)" arg2="((fun (b1:int) -&gt; mod1 (b1 + (pick * i)) bound) @ b)">
   <goal name="multiplier_qft_pre&#39;vc.12.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="path_sem_to_sem">
    <goal name="multiplier_qft_pre&#39;vc.12.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="2.25"/></proof>
    </goal>
    <goal name="multiplier_qft_pre&#39;vc.12.0.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="Ensures4">
     <goal name="multiplier_qft_pre&#39;vc.12.0.1.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.33" steps="1316633"/></proof>
     </goal>
     <goal name="multiplier_qft_pre&#39;vc.12.0.1.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.43" steps="1330575"/></proof>
     </goal>
     <goal name="multiplier_qft_pre&#39;vc.12.0.1.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.28" steps="971319"/></proof>
     </goal>
     <goal name="multiplier_qft_pre&#39;vc.12.0.1.3" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="multiplier_qft_pre&#39;vc.12.0.1.3.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="sem_to_path_sem">
       <goal name="multiplier_qft_pre&#39;vc.12.0.1.3.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="Ensures9">
        <goal name="multiplier_qft_pre&#39;vc.12.0.1.3.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.23" steps="971321"/></proof>
        </goal>
        <goal name="multiplier_qft_pre&#39;vc.12.0.1.3.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.28" steps="971321"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="multiplier_qft_pre&#39;vc.12.1" expl="equality hypothesis" proved="true">
   <proof prover="8"><result status="valid" time="3.88" steps="1304084"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="3.00"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.14" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="multiplier_qft_pre&#39;vc.14.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="multiplier_qft_pre&#39;vc.14.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="multiplier_qft_pre&#39;vc.14.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="apply_function_in_qft_basis&#39;spec">
      <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="apply_function_in_qft_basis&#39;spec">
       <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
       <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.53" steps="1409954"/></proof>
       </goal>
       <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.29" steps="1340947"/></proof>
       </goal>
       <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.29" steps="1340963"/></proof>
       </goal>
       <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.28" steps="1340945"/></proof>
       </goal>
       <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="4.81" steps="1609259"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.43" steps="1409954"/></proof>
      </goal>
      <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.32" steps="1340947"/></proof>
      </goal>
      <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.32" steps="1340963"/></proof>
      </goal>
      <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.37" steps="1340945"/></proof>
      </goal>
      <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.5" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="5.07" steps="1609177"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="multiplier_qft_swap&#39;vc" expl="VC for multiplier_qft_swap" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="multiplier_qft_swap&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.61" steps="1028791"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="965182"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="965205"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="965227"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.62" steps="1028859"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="965229"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="965242"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="965255"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.62" steps="965258"/></proof>
   </goal>
   <goal name="multiplier_qft_swap&#39;vc.8.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.65" steps="1029691"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="965302"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.69" steps="1035112"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1117896"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.12" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.12.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.75" steps="1052724"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1052747"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1052765"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.20" steps="1118673"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1052717"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1052730"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1052743"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1118771"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1052790"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1052955"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.91" steps="1118387"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.95" steps="1118414"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.24" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.34"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1053206"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1053210"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1053220"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.28" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.28.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.82" steps="1053224"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1053227"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.30" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.30.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="4.25" steps="1394805"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.93" steps="1118550"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1053245"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1118488"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1053454"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1123054"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1054215"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1124576"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.95" steps="1124478"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.39" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.39.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.84" steps="1055487"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.94" steps="1125413"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1127435"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1055883"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1128950"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.44" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.44.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.83" steps="1057162"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.82" steps="1129843"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1130585"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.83" steps="1131056"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="1058406"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1058426"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.50" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1058444"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.51" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1134121"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.52" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1058388"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.53" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1058401"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.54" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.83" steps="1058414"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.55" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.94" steps="1132060"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.56" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1058445"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.57" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.95" steps="1132673"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.58" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.01"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.59" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.11"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.60" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1131638"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.61" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.96" steps="1131351"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.62" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1058656"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.63" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1058676"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.64" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.64.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.79" steps="1058690"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.65" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1134466"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.66" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1058638"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.67" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1058651"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.68" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1058664"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.69" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.94" steps="1132305"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.70" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1058695"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.71" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1131835"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.72" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1059152"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.73" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="4.12" steps="1530086"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.74" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.94" steps="1132124"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.75" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="4.75" steps="1533084"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.76" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.76.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="multiplier_qft_swap&#39;vc.76.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="sequence_eq">
     <goal name="multiplier_qft_swap&#39;vc.76.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.91" steps="1133277"/></proof>
     </goal>
     <goal name="multiplier_qft_swap&#39;vc.76.0.0.1" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="multiplier_qft_pre&#39;def">
       <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="multiplier_qft_pre&#39;spec">
         <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.58" steps="1451319"/></proof>
         </goal>
         <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.54" steps="1451326"/></proof>
         </goal>
         <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.42" steps="1451326"/></proof>
         </goal>
         <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.73" steps="1528075"/></proof>
         </goal>
         <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0.4" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.37" steps="1451326"/></proof>
         </goal>
         <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0.5" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.49" steps="1451317"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.55" steps="1451319"/></proof>
       </goal>
       <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.52" steps="1451326"/></proof>
       </goal>
       <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.55" steps="1451326"/></proof>
       </goal>
       <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.93" steps="1528075"/></proof>
       </goal>
       <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.5" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.55" steps="1451317"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="multiplier_qft_swap&#39;vc.76.0.0.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.75" steps="1060998"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="restricted_modular_multiplier&#39;vc" expl="VC for restricted_modular_multiplier" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="restricted_modular_multiplier&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.60" steps="1029700"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.77" steps="1293770"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.65" steps="966361"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.55" steps="1029800"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="966426"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.58" steps="1033168"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.58" steps="1032092"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.60" steps="966531"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.76" steps="1033463"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="973553"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="973566"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.56" steps="1038921"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.62" steps="1039762"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.35" steps="1039444"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.88" steps="1120164"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.01" steps="1422162"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1054311"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1120179"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1054296"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.95" steps="1123511"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.83" steps="1122467"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1054366"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.71" steps="1123702"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1054557"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1054570"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.86" steps="1122697"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.82" steps="1123558"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1054693"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1054885"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.87" steps="1123454"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.48" steps="1123481"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.31" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.24"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.57" steps="1055107"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1055111"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.34" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.26"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1055125"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.83" steps="1055128"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1055131"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.52" steps="1123607"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.55" steps="1055153"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1126859"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1055926"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1125737"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.91" steps="1128184"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1057197"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.95" steps="1129169"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="1057629"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1127937"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.50" steps="1130374"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1058732"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.50" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1131194"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.51" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1132128"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.52" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1130400"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.53" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.51"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.54" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1059986"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.55" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1130415"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.56" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1059971"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.57" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.02" steps="1134177"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.58" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1132861"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.59" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1060046"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.60" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.68" steps="1134078"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.61" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1060249"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.62" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="1060262"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.63" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.00" steps="1132991"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.64" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.58" steps="1133894"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.65" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="1060341"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.66" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(mod1
       (i
        + (mod1 (- modular_inverse pick bound) bound * mod1 (pick * i) bound))
       bound)" arg2="0" arg3="in" arg4="Ensures6">
   <goal name="restricted_modular_multiplier&#39;vc.66.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures6">
   </transf>
   </goal>
   <goal name="restricted_modular_multiplier&#39;vc.66.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(mod1
  (i + (mod1 (- modular_inverse pick bound) bound * mod1 (pick * i) bound))
  bound)" arg2="(mod1
  (mod1 i bound + mod1 ((mod1 (- modular_inverse pick bound) bound * mod1 (pick * i) bound))
  bound)bound)">
    <goal name="restricted_modular_multiplier&#39;vc.66.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="mod_mod_mult">
     <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b c. -a * (b*c) = a*b* -c)">
      <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="8"><result status="valid" time="1.54" steps="1060435"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="h">
       <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.1.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="mod_mod_mult_rev">
        <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.1.0.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="one_mult">
         <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
         <proof prover="0"><result status="valid" time="4.46"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.70" steps="1060439"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.65" steps="1133955"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.66.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.93" steps="1133906"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="restricted_modular_multiplier&#39;vc.66.1.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="add_mod_left">
     <goal name="restricted_modular_multiplier&#39;vc.66.1.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="add_mod_right">
      <goal name="restricted_modular_multiplier&#39;vc.66.1.1.0.0" expl="equality hypothesis" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.66.1.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.97" steps="1133906"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.66.1.1.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.96" steps="1133906"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.67" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.97" steps="1133294"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.68" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.88" steps="1130858"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.69" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.43"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.70" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.87" steps="1060382"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.71" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.91" steps="1130873"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.72" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1060367"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.73" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.03" steps="1134442"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.74" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1133141"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.75" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1060452"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.76" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.07" steps="1134364"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.77" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.88" steps="1060598"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.78" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1060611"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.79" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.67" steps="1133301"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.80" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.05" steps="1134204"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.81" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.91" steps="1133609"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.82" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.91" steps="1061039"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.83" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="11.53" steps="43673425"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.84" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.82" steps="1134063"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.85" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1061065"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.86" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(kronecker (ket (n + 1) 0) (ket 1 0))" arg2="(ket (n+2) 0)" arg3="in" arg4="Ensures">
   <goal name="restricted_modular_multiplier&#39;vc.86.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(kronecker (kronecker (ket 1 0) (ket n 0)) (ket 1 0))" arg2="(ket (n+2) 0)" arg3="in" arg4="Ensures">
    <goal name="restricted_modular_multiplier&#39;vc.86.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="1.80" steps="1061107"/></proof>
    </goal>
    <goal name="restricted_modular_multiplier&#39;vc.86.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_kets">
     <goal name="restricted_modular_multiplier&#39;vc.86.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_kets">
      <goal name="restricted_modular_multiplier&#39;vc.86.0.1.0.0" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="1.56" steps="1061150"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.86.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.87" steps="1133878"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.86.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.59" steps="1061107"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.86.0.1.0.3" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="2.32"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.86.0.1.0.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.94" steps="1077294"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.86.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.89" steps="1061107"/></proof>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.86.0.1.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="3.15" steps="1133869"/></proof>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.86.0.1.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.14" steps="1077294"/></proof>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.86.0.1.4" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.83" steps="1134762"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="restricted_modular_multiplier&#39;vc.86.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="kronecker_kets">
    <goal name="restricted_modular_multiplier&#39;vc.86.1.0" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.69" steps="1061115"/></proof>
    </goal>
    <goal name="restricted_modular_multiplier&#39;vc.86.1.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="2.80" steps="1133815"/></proof>
    </goal>
    <goal name="restricted_modular_multiplier&#39;vc.86.1.2" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.92" steps="1061075"/></proof>
    </goal>
    <goal name="restricted_modular_multiplier&#39;vc.86.1.3" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="2.51"/></proof>
    </goal>
    <goal name="restricted_modular_multiplier&#39;vc.86.1.4" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.83" steps="1077262"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.87" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="restricted_modular_multiplier&#39;vc.87.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="restricted_modular_multiplier&#39;vc.87.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="sequence_eq">
     <goal name="restricted_modular_multiplier&#39;vc.87.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.50" steps="1135194"/></proof>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="multiplier_qft_swap&#39;def">
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="goal_comm">
       <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="multiplier_qft_swap&#39;spec">
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.51" steps="1454421"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.55" steps="1454428"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.55" steps="1534972"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="4.23" steps="1536112"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0.0.4" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="4.36" steps="1536082"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.95" steps="1063029"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.90" steps="1063036"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.08" steps="1134981"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.10" steps="1135800"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="multiplier_qft_pre&#39;def">
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="goal_comm">
       <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="multiplier_qft_pre&#39;spec">
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.70" steps="1454421"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.76" steps="1536758"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.58" steps="1534972"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.24" steps="1454428"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0.4" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.83" steps="1536948"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0.5" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.83" steps="1536420"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.91" steps="1063029"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.76" steps="1136365"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.04" steps="1134981"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.92" steps="1063036"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.5" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.71" steps="1136102"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="check_first_bit_is_one_for_multiplier&#39;vc" expl="VC for check_first_bit_is_one_for_multiplier" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.69" steps="967723"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.42" steps="968056"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.36" steps="1030531"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="968103"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.99" steps="1302600"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="990433"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.48" steps="975618"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="path_sem_to_sem">
     <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(width (insert_qbits (check_first_bit_is_one n) (n + 1) (n + 2) (n + 2)))" arg2="((n+1) + ((n+2)+1))">
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="kronecker_ket_l">
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.35" steps="1037823"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.38" steps="1037832"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.84" steps="1203435"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0.0.3" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="8.19"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="2.48" steps="1037831"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="insert_qbits_path_sem_basis">
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.56" steps="975511"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.71" steps="1037839"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.37" steps="1037824"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.92" steps="1203435"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.4" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="3.93"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.5" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="3.77"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.6" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.99" steps="1053998"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.7" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.31" steps="1203435"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.8" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.75" steps="1203471"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.9" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.96" steps="1053992"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.10" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.64" steps="1053992"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.11" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="sem_to_path_sem">
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.11.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.33" steps="1202515"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="path_sem_to_sem">
     <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(width (insert_qbits (check_first_bit_is_one n) (n + 1) (n + 2) (n + 2)))" arg2="((n+1) + ((n+2)+1))">
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="kronecker_ket_l">
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.32" steps="1037978"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.39" steps="1037987"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.32" steps="1205624"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.3" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_ket_l">
        <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.3.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.61" steps="1037978"/></proof>
        </goal>
        <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.3.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.61" steps="975649"/></proof>
        </goal>
        <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.3.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.75" steps="1205723"/></proof>
        </goal>
        <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.3.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.92" steps="1054128"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="2.66" steps="1037986"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="insert_qbits_path_sem_basis">
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.62" steps="975642"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.58" steps="1037994"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.59" steps="1037979"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.64" steps="1205624"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.4" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="ket_is_a_ket_basis_elt">
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.4.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.65" steps="1037978"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.4.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.68" steps="1206431"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.5" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.76" steps="1206925"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.6" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.85" steps="1054153"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.7" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.73" steps="1205624"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.8" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.28" steps="1205723"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.9" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.95" steps="1054147"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.10" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.85" steps="1054147"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.11" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="sem_to_path_sem">
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.11.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.58" steps="1205574"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="check_order_pre&#39;vc" expl="VC for check_order_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="check_order_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.52" steps="968496"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="968911"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.47" steps="1031149"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.72" steps="1031662"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="1056200"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1056456"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1122009"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1125272"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.00" steps="1125294"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1056723"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1056727"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1056730"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1056740"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1056751"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.14" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="leq_trans" arg2="with" arg3="(polysquare (n + 1) ((cont_size * 2) + 1) 0 0)">
   <goal name="check_order_pre&#39;vc.14.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="1.58" steps="1056755"/></proof>
   </goal>
   <goal name="check_order_pre&#39;vc.14.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="polysquare_update" arg2="with" arg3="(n+1)">
    <goal name="check_order_pre&#39;vc.14.1.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="2.99" steps="1125363"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.14.1.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.86" steps="1056755"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.14.1.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.83" steps="1056755"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.14.1.3" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.84" steps="1056755"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.14.1.4" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.86" steps="1056762"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1056802"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1125414"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1056794"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.78" steps="1124812"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.19" steps="1125504"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1058518"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1126374"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.87" steps="1127104"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.72" steps="1059577"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.02" steps="1127905"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1128616"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1060750"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1060991"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.93" steps="1129442"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.29" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(i - bound)" arg2="(mod1 (i - bound) (power 2 (n+1)))">
   <goal name="check_order_pre&#39;vc.29.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="check_order_pre&#39;vc.29.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="place_substract_in_comput_basis&#39;spec1">
     <goal name="check_order_pre&#39;vc.29.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.49" steps="1399203"/></proof>
     </goal>
     <goal name="check_order_pre&#39;vc.29.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.86" steps="1479899"/></proof>
     </goal>
     <goal name="check_order_pre&#39;vc.29.0.0.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="5.17" steps="1739664"/></proof>
     </goal>
     <goal name="check_order_pre&#39;vc.29.0.0.3" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="5.32" steps="1739802"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="check_order_pre&#39;vc.29.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="mod_inf">
    <goal name="check_order_pre&#39;vc.29.1.0" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.71" steps="1061213"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.29.1.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="4.50" steps="1556323"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.45" steps="1557028"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.74" steps="1129951"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="1056798"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1124845"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.65" steps="1464497"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.02" steps="1125520"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1058561"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1129164"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.38" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.17"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.03" steps="1129930"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.84" steps="1059823"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.04" steps="1130904"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.04" steps="1131545"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1061018"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.83" steps="1061259"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1132361"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.46" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="check_order_pre&#39;vc.46.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="place_substract_in_comput_basis&#39;spec1">
    <goal name="check_order_pre&#39;vc.46.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="2.19" steps="1399445"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.46.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.94" steps="1481708"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.46.0.2" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="2.21"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.46.0.3" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="((((2 * n) + 4) - n) - 1)" arg2="(n+2+1)">
     <goal name="check_order_pre&#39;vc.46.0.3.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="check_order_pre&#39;vc.46.0.3.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.95" steps="1481712"/></proof>
      </goal>
      <goal name="check_order_pre&#39;vc.46.0.3.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.52" steps="1399443"/></proof>
      </goal>
      <goal name="check_order_pre&#39;vc.46.0.3.0.2" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="1.97"/></proof>
      </goal>
      <goal name="check_order_pre&#39;vc.46.0.3.0.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.33" steps="1399440"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="check_order_pre&#39;vc.46.0.3.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="2.24" steps="1399459"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.47" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures5">
   <goal name="check_order_pre&#39;vc.47.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="check_order_pre&#39;vc.47.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(mod1 (i - bound) (power 2 (n + 1)))" arg2="(power 2 (n+1) + (i - bound))">
     <goal name="check_order_pre&#39;vc.47.0.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="1.96"/></proof>
     </goal>
     <goal name="check_order_pre&#39;vc.47.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="check_order_pre&#39;vc.47.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="(i-bound),power 2 (n+1), -1,(power 2 (n + 1) + (i - bound))">
       <goal name="check_order_pre&#39;vc.47.0.0.1.0.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="Hinst">
        <goal name="check_order_pre&#39;vc.47.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
        <goal name="check_order_pre&#39;vc.47.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="2.11"/></proof>
        </goal>
        <goal name="check_order_pre&#39;vc.47.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.53" steps="1399559"/></proof>
        </goal>
        <goal name="check_order_pre&#39;vc.47.0.0.1.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="2.11"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="check_order_pre&#39;vc.47.0.1" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="2.04"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1132791"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1066885"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.50" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="check_order_pre&#39;vc.50.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.83" steps="1061500"/></proof>
   </goal>
   <goal name="check_order_pre&#39;vc.50.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.63" steps="1061755"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.51" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="check_order_pre&#39;vc.51.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.92" steps="1129927"/></proof>
   </goal>
   <goal name="check_order_pre&#39;vc.51.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.00" steps="1132764"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.52" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="check_order_pre&#39;vc.52.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.97" steps="1130359"/></proof>
   </goal>
   <goal name="check_order_pre&#39;vc.52.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.02" steps="1133146"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.53" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1067613"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.54" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.96" steps="4591593"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.55" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.06" steps="1136355"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.56" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.13" steps="1142990"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.57" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.37" steps="1341579"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="check_order&#39;vc" expl="VC for check_order" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="check_order&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="969387"/></proof>
  </goal>
  <goal name="check_order&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.79" steps="1031434"/></proof>
  </goal>
  <goal name="check_order&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.53" steps="969790"/></proof>
  </goal>
  <goal name="check_order&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="969803"/></proof>
  </goal>
  <goal name="check_order&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="969816"/></proof>
  </goal>
  <goal name="check_order&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.75" steps="1032495"/></proof>
  </goal>
  <goal name="check_order&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.94" steps="1056975"/></proof>
  </goal>
  <goal name="check_order&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.14" steps="1125770"/></proof>
  </goal>
  <goal name="check_order&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.66" steps="1057201"/></proof>
  </goal>
  <goal name="check_order&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.65" steps="1057214"/></proof>
  </goal>
  <goal name="check_order&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="1057227"/></proof>
  </goal>
  <goal name="check_order&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1126019"/></proof>
  </goal>
  <goal name="check_order&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.03" steps="1126043"/></proof>
  </goal>
  <goal name="check_order&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1057267"/></proof>
  </goal>
  <goal name="check_order&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="1057278"/></proof>
  </goal>
  <goal name="check_order&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.95" steps="1057282"/></proof>
  </goal>
  <goal name="check_order&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.99" steps="1057292"/></proof>
  </goal>
  <goal name="check_order&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.92" steps="1057296"/></proof>
  </goal>
  <goal name="check_order&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1057299"/></proof>
  </goal>
  <goal name="check_order&#39;vc.19" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="leq_trans" arg2="with" arg3="(polysquare (n + 1) ((cont_size * 2) + 1) 0 0)">
   <goal name="check_order&#39;vc.19.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="1.74" steps="1057302"/></proof>
   </goal>
   <goal name="check_order&#39;vc.19.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="polysquare_update" arg2="with" arg3="(n+1)">
    <goal name="check_order&#39;vc.19.1.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="2.75" steps="1126102"/></proof>
    </goal>
    <goal name="check_order&#39;vc.19.1.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.72" steps="1057302"/></proof>
    </goal>
    <goal name="check_order&#39;vc.19.1.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.70" steps="1057302"/></proof>
    </goal>
    <goal name="check_order&#39;vc.19.1.3" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.99" steps="1057302"/></proof>
    </goal>
    <goal name="check_order&#39;vc.19.1.4" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.79" steps="1057309"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.93" steps="1126149"/></proof>
  </goal>
  <goal name="check_order&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1057321"/></proof>
  </goal>
  <goal name="check_order&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.27" steps="1125419"/></proof>
  </goal>
  <goal name="check_order&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.30" steps="1126169"/></proof>
  </goal>
  <goal name="check_order&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.00" steps="1059019"/></proof>
  </goal>
  <goal name="check_order&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.00" steps="1127092"/></proof>
  </goal>
  <goal name="check_order&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.02" steps="1127808"/></proof>
  </goal>
  <goal name="check_order&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.84" steps="1060213"/></proof>
  </goal>
  <goal name="check_order&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.97" steps="1128704"/></proof>
  </goal>
  <goal name="check_order&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.00" steps="1129328"/></proof>
  </goal>
  <goal name="check_order&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1061254"/></proof>
  </goal>
  <goal name="check_order&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.95" steps="1129890"/></proof>
  </goal>
  <goal name="check_order&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.92" steps="1061485"/></proof>
  </goal>
  <goal name="check_order&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.98" steps="1061498"/></proof>
  </goal>
  <goal name="check_order&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.94" steps="1061511"/></proof>
  </goal>
  <goal name="check_order&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.95" steps="1061498"/></proof>
  </goal>
  <goal name="check_order&#39;vc.36" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(ket (n + 1) i)" arg2="(ket (n + 1) (mod1(i-bound+bound) (power 2 (n+1))))">
   <goal name="check_order&#39;vc.36.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures6">
    <goal name="check_order&#39;vc.36.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="2.30"/></proof>
    </goal>
    <goal name="check_order&#39;vc.36.0.1" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="((((2 * n) + 4) - n) - 1)" arg2="(n+2+1)">
     <goal name="check_order&#39;vc.36.0.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="check_order&#39;vc.36.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.95" steps="1130111"/></proof>
      </goal>
      <goal name="check_order&#39;vc.36.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.89" steps="1061493"/></proof>
      </goal>
      <goal name="check_order&#39;vc.36.0.1.0.2" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="2.29"/></proof>
      </goal>
      <goal name="check_order&#39;vc.36.0.1.0.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.81" steps="1061501"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="check_order&#39;vc.36.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.81" steps="1061517"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="check_order&#39;vc.36.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="mod_inf">
    <goal name="check_order&#39;vc.36.1.0" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.87" steps="1061522"/></proof>
    </goal>
    <goal name="check_order&#39;vc.36.1.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="2.28"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.97" steps="1130375"/></proof>
  </goal>
  <goal name="check_order&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1057326"/></proof>
  </goal>
  <goal name="check_order&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.96" steps="1127544"/></proof>
  </goal>
  <goal name="check_order&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.04" steps="1128295"/></proof>
  </goal>
  <goal name="check_order&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.87" steps="1059031"/></proof>
  </goal>
  <goal name="check_order&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1129280"/></proof>
  </goal>
  <goal name="check_order&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.01" steps="1636757"/></proof>
  </goal>
  <goal name="check_order&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1129973"/></proof>
  </goal>
  <goal name="check_order&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.69" steps="1060261"/></proof>
  </goal>
  <goal name="check_order&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.04" steps="1131180"/></proof>
  </goal>
  <goal name="check_order&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1131898"/></proof>
  </goal>
  <goal name="check_order&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="1061494"/></proof>
  </goal>
  <goal name="check_order&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.97" steps="1132451"/></proof>
  </goal>
  <goal name="check_order&#39;vc.50" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1061705"/></proof>
  </goal>
  <goal name="check_order&#39;vc.51" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1061718"/></proof>
  </goal>
  <goal name="check_order&#39;vc.52" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1061731"/></proof>
  </goal>
  <goal name="check_order&#39;vc.53" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1061718"/></proof>
  </goal>
  <goal name="check_order&#39;vc.54" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(ket (n + 1) i)" arg2="(ket (n + 1) (mod1((mod1 (i - bound) (power 2 (n + 1)))+bound) (power 2 (n+1))))">
   <goal name="check_order&#39;vc.54.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures6">
    <goal name="check_order&#39;vc.54.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="1.92"/></proof>
    </goal>
    <goal name="check_order&#39;vc.54.0.1" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="((((2 * n) + 4) - n) - 1)" arg2="(n+2+1)">
     <goal name="check_order&#39;vc.54.0.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="check_order&#39;vc.54.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.02" steps="1132550"/></proof>
      </goal>
      <goal name="check_order&#39;vc.54.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.86" steps="1061721"/></proof>
      </goal>
      <goal name="check_order&#39;vc.54.0.1.0.2" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="2.18"/></proof>
      </goal>
      <goal name="check_order&#39;vc.54.0.1.0.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.86" steps="1061721"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="check_order&#39;vc.54.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.83" steps="1061737"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="check_order&#39;vc.54.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(mod1 (i - bound) (power 2 (n + 1)))" arg2="(power 2 (n + 1) + (i-bound) )">
    <goal name="check_order&#39;vc.54.1.0" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="ket_eq">
     <goal name="check_order&#39;vc.54.1.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.10" steps="1132550"/></proof>
     </goal>
     <goal name="check_order&#39;vc.54.1.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.88" steps="1061719"/></proof>
     </goal>
     <goal name="check_order&#39;vc.54.1.0.2" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="check_order&#39;vc.54.1.0.2.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="unicity_div_mod" arg2="with" arg3="1">
       <goal name="check_order&#39;vc.54.1.0.2.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="2.35"/></proof>
       </goal>
       <goal name="check_order&#39;vc.54.1.0.2.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.67" steps="1400658"/></proof>
       </goal>
       <goal name="check_order&#39;vc.54.1.0.2.0.2" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="2.22"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="check_order&#39;vc.54.1.1" expl="equality hypothesis" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="check_order&#39;vc.54.1.1.0" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="goal_comm">
      <goal name="check_order&#39;vc.54.1.1.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="unicity_div_mod" arg2="with" arg3="(-1)">
       <goal name="check_order&#39;vc.54.1.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="2.36"/></proof>
       </goal>
       <goal name="check_order&#39;vc.54.1.1.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.40" steps="1400655"/></proof>
       </goal>
       <goal name="check_order&#39;vc.54.1.1.0.0.2" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="2.16"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order&#39;vc.55" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.07" steps="1132836"/></proof>
  </goal>
  <goal name="check_order&#39;vc.56" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.88" steps="1066973"/></proof>
  </goal>
  <goal name="check_order&#39;vc.57" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.10" steps="1135700"/></proof>
  </goal>
  <goal name="check_order&#39;vc.58" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.88" steps="1067194"/></proof>
  </goal>
  <goal name="check_order&#39;vc.59" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1067207"/></proof>
  </goal>
  <goal name="check_order&#39;vc.60" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1067220"/></proof>
  </goal>
  <goal name="check_order&#39;vc.61" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.03" steps="1136167"/></proof>
  </goal>
  <goal name="check_order&#39;vc.62" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1067514"/></proof>
  </goal>
  <goal name="check_order&#39;vc.63" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.99" steps="4598073"/></proof>
  </goal>
  <goal name="check_order&#39;vc.64" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.03" steps="1136525"/></proof>
  </goal>
  <goal name="check_order&#39;vc.65" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.75" steps="1142316"/></proof>
  </goal>
  <goal name="check_order&#39;vc.66" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.70" steps="1341376"/></proof>
  </goal>
  <goal name="check_order&#39;vc.67" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="2.25"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="uncheck_order&#39;vc" expl="VC for uncheck_order" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="uncheck_order&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.66" steps="970385"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="970398"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="970411"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1033659"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.76" steps="1033493"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.99" steps="1033883"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.83" steps="1032990"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.7" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="uncheck_order&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="uncheck_order&#39;vc.7.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="3.61" steps="1205142"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="uncheck_order&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.79" steps="1303959"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.9" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(check_order n bound i&#39;)" arg2="(check_order n bound i)">
   <goal name="uncheck_order&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="1.72" steps="971018"/></proof>
   </goal>
   <goal name="uncheck_order&#39;vc.9.1" expl="equality hypothesis" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="uncheck_order&#39;vc.9.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="check_order&#39;def">
     <goal name="uncheck_order&#39;vc.9.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="goal_comm">
      <goal name="uncheck_order&#39;vc.9.1.0.0.0" expl="apply premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="uncheck_order&#39;vc.9.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="check_order&#39;spec">
        <goal name="uncheck_order&#39;vc.9.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.36" steps="1347072"/></proof>
        </goal>
        <goal name="uncheck_order&#39;vc.9.1.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.43" steps="1347079"/></proof>
        </goal>
        <goal name="uncheck_order&#39;vc.9.1.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.35" steps="1347079"/></proof>
        </goal>
        <goal name="uncheck_order&#39;vc.9.1.0.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.41" steps="1347079"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="uncheck_order&#39;vc.9.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.68" steps="970817"/></proof>
     </goal>
     <goal name="uncheck_order&#39;vc.9.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.65" steps="970824"/></proof>
     </goal>
     <goal name="uncheck_order&#39;vc.9.1.0.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.66" steps="970824"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_restricted_modular_multiplier&#39;vc" expl="VC for cont_restricted_modular_multiplier" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_restricted_modular_multiplier&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.74" steps="1033113"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="971357"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.69" steps="971361"/></proof>
   </goal>
   <goal name="cont_restricted_modular_multiplier&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.73" steps="971376"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.72" steps="971372"/></proof>
   </goal>
   <goal name="cont_restricted_modular_multiplier&#39;vc.3.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.66" steps="971385"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.82" steps="1034451"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.67" steps="971454"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.73" steps="1034567"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="972158"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.45" steps="972162"/></proof>
   </goal>
   <goal name="cont_restricted_modular_multiplier&#39;vc.8.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.66" steps="972177"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.48" steps="972186"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1038247"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.46" steps="972232"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="972376"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="972577"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.88" steps="1037739"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.93" steps="1037766"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.16" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.16.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.88"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.17" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.17.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.80" steps="972799"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.18" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.18.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.82" steps="972810"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.32" steps="1326656"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="972860"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="972874"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="972878"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="972895"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.78" steps="1035518"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="972838"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="972851"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="972866"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.09" steps="1039044"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="972912"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="973164"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.96" steps="987988"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.32" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.32.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="2.75" steps="1078354"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.33" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
   <goal name="cont_restricted_modular_multiplier&#39;vc.33.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
    <goal name="cont_restricted_modular_multiplier&#39;vc.33.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="Ensures4">
     <goal name="cont_restricted_modular_multiplier&#39;vc.33.0.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="2.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.34" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
   <goal name="cont_restricted_modular_multiplier&#39;vc.34.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures4">
    <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (restricted_modular_multiplier pick bound n (mod1 i bound)))" arg2="(n+(n+2))">
     <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.50" steps="1038683"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.74" steps="1038683"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.97" steps="1364496"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0.0.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.76" steps="1334629"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.56" steps="973336"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.35" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.35.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="restricted_modular_multiplier&#39;spec" arg2="with" arg3="(mod1 i&#39; bound)">
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="restricted_modular_multiplier&#39;spec" arg2="with" arg3="(mod1 i&#39; bound)">
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="8"><result status="valid" time="2.23" steps="1350498"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.22" steps="1350502"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.25" steps="1350509"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.22" steps="1350511"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.61" steps="1423011"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.20" steps="1350500"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.6" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.76" steps="1423011"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.58" steps="1350502"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.50" steps="1350509"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.26" steps="1350511"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.76" steps="1422859"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.5" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.37" steps="1350500"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.6" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.76" steps="1423011"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="971847"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.58" steps="1033895"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.38" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.82" steps="1045676"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.39" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="993572"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.40" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="978725"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.41" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.41.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(ket (n + 1) i)" arg2="(kronecker (ket 1 0) (ket n i))">
     <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(ket (n + 1) (mod1 (pick * i) bound))" arg2="(kronecker (ket 1 0 ) (ket n (mod1 (pick * i) bound)))">
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_to_sem">
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (place o 1 ((2 * n) + 4)))" arg2="(1 + n + ((n+2+1)))">
        <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_ket_l">
         <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.51" steps="1043698"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.56" steps="1043704"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="4.69"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.3" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.71" steps="1043695"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.3.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.61" steps="978659"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.3.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="3.75" steps="1221674"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.3.3" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.69" steps="1059840"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="2.63" steps="1043706"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
        <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
         <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="place_kron_right">
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.84" steps="1059655"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.61" steps="978661"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.62" steps="978666"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.53" steps="1059840"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0.0.4" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.88" steps="1044943"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_kets">
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="1.63" steps="978696"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.61" steps="978659"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.20" steps="1043695"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.1.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.73" steps="1059602"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.1.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.28" steps="1044788"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_kets">
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="1.63" steps="978686"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.61" steps="978659"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.55" steps="1043695"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.1.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.35" steps="1059602"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.1.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.35" steps="978661"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.42" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.42.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(ket (n + 1) i)" arg2="(kronecker (ket 1 0) (ket n i))">
     <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(ket (n + 1) (mod1 (pick * i) bound))" arg2="(kronecker (ket 1 0 ) (ket n (mod1 (pick * i) bound)))">
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_to_sem">
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (place o 1 ((2 * n) + 4)))" arg2="(1 + n + ((n+2+1)))">
        <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_ket_l">
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.19" steps="1041681"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.52" steps="1041687"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="3.59"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.3" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.57" steps="1041678"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.3.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.56" steps="978700"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.3.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="3.06" steps="1223887"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.3.3" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.76" steps="1057820"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="2.20" steps="1041689"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
        <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="place_kron_right">
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.30" steps="1057611"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.32" steps="978702"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.31" steps="978707"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="2.38" steps="1057820"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1.0.4" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="2.29" steps="1042919"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_kets">
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="1.58" steps="978737"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.58" steps="978700"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.17" steps="1041678"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.1.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.37" steps="1057578"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.1.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.27" steps="1042865"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_kets">
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="1.34" steps="978720"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.29" steps="978700"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.18" steps="1041678"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.1.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.32" steps="1057578"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.1.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.35" steps="978702"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.43" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.43.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cont_restricted_modular_multiplier&#39;vc.43.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures12" arg2="with" arg3="i&#39;">
     <goal name="cont_restricted_modular_multiplier&#39;vc.43.0.0.0" expl="postcondition" proved="true">
     <proof prover="8"><result status="valid" time="1.30" steps="978741"/></proof>
     </goal>
     <goal name="cont_restricted_modular_multiplier&#39;vc.43.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.33" steps="978752"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="modular_multiplier_with_ancillas&#39;vc" expl="VC for modular_multiplier_with_ancillas" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="modular_multiplier_with_ancillas&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.30" steps="972342"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.31" steps="972355"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.32" steps="972370"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.32" steps="972383"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.32" steps="972376"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.32" steps="972817"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.6.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.54" steps="1034977"/></proof>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.6.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.59" steps="972832"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.7.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.29" steps="972838"/></proof>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.7.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.31" steps="972849"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.13" steps="1035504"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1059992"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.10.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.45" steps="1059996"/></proof>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.10.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.47" steps="1060011"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.11" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.11.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.42" steps="1060007"/></proof>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.11.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.73" steps="1060016"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1060033"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1060037"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.46" steps="1060158"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.34" steps="1127887"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1060191"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="1060291"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.35" steps="1127878"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.40" steps="1127850"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.20" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.20.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.47" steps="1060519"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.42" steps="1060530"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.53" steps="1411747"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.23" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.07"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.38" steps="1060563"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.38" steps="1060567"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.26" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="leq_trans" arg2="with" arg3="(polysquare (n + 1) (power cont_size 2 * 4)
     (cont_size * ((cont_size * (2 * adder_gate_bound n)) + 6)) 0)">
   <goal name="modular_multiplier_with_ancillas&#39;vc.26.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="1.41" steps="1060570"/></proof>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.26.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="polysquare_update" arg2="with" arg3="(n+1)">
    <goal name="modular_multiplier_with_ancillas&#39;vc.26.1.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="2.32" steps="1127971"/></proof>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.26.1.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.44" steps="1060570"/></proof>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.26.1.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.44" steps="1060570"/></proof>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.26.1.3" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.43" steps="1060570"/></proof>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.26.1.4" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.44" steps="1060577"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.71" steps="1128018"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.28" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.28.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.68" steps="1060576"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.29" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.29.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.74" steps="1129707"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.41" steps="1128805"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.30" steps="1130489"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.45" steps="1062322"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.33" steps="1131587"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.35" steps="1132260"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.46" steps="1063506"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.37" steps="1133107"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.35" steps="1133778"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.42" steps="1064719"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.39" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.39.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.73" steps="1064723"/></proof>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.39.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.45" steps="1064738"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="1064747"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="1064760"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.43" steps="1064764"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.43" steps="1064855"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.36" steps="1134629"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.45" steps="1064888"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.45" steps="1064971"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1064979"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.37" steps="1134946"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.43" steps="1060580"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.50" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.31" steps="1127581"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.51" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.39" steps="1128302"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.52" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.44" steps="1062275"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.53" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.35" steps="1129139"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.54" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.33" steps="1129831"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.55" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.44" steps="1063306"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.56" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.46" steps="1130543"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.57" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.44" steps="1131264"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.58" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.43" steps="1064367"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.59" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1064380"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.60" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.44" steps="1064395"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.61" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.44" steps="1064408"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.62" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.42" steps="1064412"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.63" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.45" steps="1064528"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.64" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.29" steps="1131847"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.65" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1064561"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.66" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="1064644"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.67" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1064647"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.68" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.34" steps="1132174"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.69" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.45" steps="1070289"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.70" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="1070302"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.71" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.52" steps="1070317"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.72" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.49" steps="1070330"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.73" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.48" steps="1070334"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.74" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.53" steps="1070435"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.75" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.50" steps="1138664"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.76" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.49" steps="1070468"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.77" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.45" steps="1139025"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.78" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.98" steps="4654366"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.79" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.41" steps="1139349"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.80" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="1070885"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.81" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.65" steps="1148775"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.82" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1140662"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.83" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1070931"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.84" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(cont_restricted_modular_multiplier pick bound n i&#39;)" arg2="(cont_restricted_modular_multiplier pick bound n i)">
   <goal name="modular_multiplier_with_ancillas&#39;vc.84.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(check_order n bound i&#39;)" arg2="(check_order n bound i)">
    <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="1.78" steps="1070957"/></proof>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="check_order&#39;def">
     <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="goal_comm">
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0.0" expl="apply premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="check_order&#39;spec">
        <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.07" steps="1415367"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.34" steps="1493391"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.13" steps="1415374"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.04" steps="1415374"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.82" steps="1070961"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.39" steps="1139309"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.49" steps="1070968"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.84.1" expl="equality hypothesis" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0" expl="equality hypothesis" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="cont_restricted_modular_multiplier&#39;spec" arg2="with" arg3="i">
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="cont_restricted_modular_multiplier&#39;spec" arg2="with" arg3="i">
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.0" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="2.06" steps="1472438"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.09" steps="1472442"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.10" steps="1472449"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.04" steps="1472451"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.05" steps="1472449"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.05" steps="1472440"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.6" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.06" steps="1472449"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.06" steps="1472442"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.09" steps="1472449"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.12" steps="1472451"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.03" steps="1472449"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.5" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.10" steps="1472440"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.6" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.17" steps="1472449"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.85" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.19" steps="1034952"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.86" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.30" steps="972829"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.87" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.14" steps="1035071"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.88" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.44" steps="1036247"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.89" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.27" steps="1037954"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.90" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.46" steps="1128249"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.91" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.39" steps="1060062"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.92" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.36" steps="1130413"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.93" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.53" steps="1131444"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.94" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.39" steps="1060208"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.95" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.30" steps="1130629"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.96" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.88" steps="1415056"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.97" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.80"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.98" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.32" steps="1130632"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.99" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.67" steps="1060458"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.100" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.43" steps="1060469"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.101" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.64" steps="1060473"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.102" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.56" steps="1060476"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.103" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.47" steps="1060479"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.104" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.43" steps="1130703"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.105" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.40" steps="1060509"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.106" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.34" steps="1130241"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.107" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.36" steps="1128890"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.108" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.54" steps="1131032"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.109" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.44" steps="1062218"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.110" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.35" steps="1132173"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.111" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.51" steps="1130698"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.112" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.48" steps="1132854"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.113" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.44" steps="1063462"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.114" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.34" steps="1133739"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.115" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.40" steps="1134467"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.116" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.37" steps="1133126"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.117" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.47" steps="1064628"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.118" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.33" steps="1135216"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.119" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.58" steps="1136458"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.120" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.43" steps="1064742"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.121" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.45" steps="1136241"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.122" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.47" steps="1135596"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.123" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="1060513"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.124" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.38" steps="1130243"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.125" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.66" steps="1131050"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.126" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.47" steps="1062202"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.127" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.66" steps="1131895"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.128" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.68" steps="1132556"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.129" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="1063243"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.130" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.63" steps="1133242"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.131" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.55" steps="1133924"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.132" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="1064279"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.133" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.47" steps="1134450"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.134" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.44" steps="1064312"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.135" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.47" steps="1064486"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.136" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.48" steps="1064489"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.137" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.60" steps="1134840"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.138" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.60" steps="1140670"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.139" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.44" steps="1069800"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.140" expl="precondition" proved="true">
  <proof prover="10"><result status="valid" time="0.95" steps="4978251"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.141" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1142023"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.142" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.40" steps="1138419"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.143" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.48" steps="1069842"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.144" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.65" steps="1140764"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.145" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.44" steps="1142084"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.146" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.35" steps="1141152"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.147" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.97"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.148" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.37" steps="1141655"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.149" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="1070298"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.150" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.64" steps="1150832"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.151" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.93"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.152" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
   <goal name="modular_multiplier_with_ancillas&#39;vc.152.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(kronecker (ket 1 0) (ket n i))" arg2="(ket (n+1) i)">
    <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(kronecker (ket (n + 2) 0) (ket 1 0))" arg2="(ket (n+3) 0)" arg3="in" arg4="Ensures1">
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
      <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(kronecker (ket 1 0) (ket n (mod1 (pick * i) bound)))" arg2="( (ket (n+1) (mod1 (pick * i) bound)))">
       <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="Ensures1">
        <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.73" steps="1070377"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_kets">
        <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="1.74" steps="1070411"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.58" steps="1070375"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.1.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.58" steps="1151050"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.1.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.39" steps="1151024"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.1.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.50" steps="1152371"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="4.51" steps="1676508"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_kets">
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.1.0" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.74" steps="1070378"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.49" steps="1070347"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.1.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.41" steps="1150930"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.1.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.46" steps="1150904"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.1.4" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.44" steps="1070356"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.153" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
   <goal name="modular_multiplier_with_ancillas&#39;vc.153.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(kronecker (ket 1 0) (ket n i))" arg2="(ket (n+1) i)">
    <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(kronecker (ket (n + 2) 0) (ket 1 0))" arg2="(ket (n+3) 0)" arg3="in" arg4="Ensures1">
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="Ensures1">
      <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.47" steps="1070435"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_kets">
      <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="1.48" steps="1070451"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.83" steps="1141749"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.73" steps="1070428"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.1.3" expl="rewrite premises" proved="true">
      <proof prover="10"><result status="valid" time="4.29" steps="10202809"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.1.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.42" steps="1142660"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_kets">
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.1.0" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.73" steps="1070459"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.76" steps="1070428"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.1.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.41" steps="1141749"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.1.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.42" steps="1142660"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.1.4" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.53" steps="1070437"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.154" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="1085745"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.155" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.155.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="sequence_eq">
     <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.54" steps="1143268"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.1" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="3.83"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="uncheck_order&#39;spec" arg2="with" arg3="i">
       <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="uncheck_order&#39;spec" arg2="with" arg3="i">
        <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.18" steps="1471933"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.11" steps="1471937"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.25" steps="1548887"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.39" steps="1550617"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.0.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.11" steps="1471944"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.10" steps="1471937"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.25" steps="1548887"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.53" steps="1550441"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.12" steps="1471944"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permut_modular_multiplier&#39;vc" expl="VC for permut_modular_multiplier" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permut_modular_multiplier&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="980129"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.33" steps="980142"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.33" steps="980157"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.18" steps="1046308"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="980195"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.5" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_bijective_auto">
   <goal name="permut_modular_multiplier&#39;vc.5.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="permut_modular_multiplier&#39;vc.5.0.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="permut_modular_multiplier&#39;vc.5.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.46" steps="1396762"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permut_modular_multiplier&#39;vc.5.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="permut_modular_multiplier&#39;vc.5.1.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="permut_modular_multiplier&#39;vc.5.1.0.0" expl="apply premises" proved="true">
     <transf name="exists" proved="true" arg1="(if e&#39; = 2*n+3 then 0 else e&#39; +1)">
      <goal name="permut_modular_multiplier&#39;vc.5.1.0.0.0" proved="true">
      <proof prover="8"><result status="valid" time="3.47" steps="1397452"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.34" steps="983253"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="983266"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.31" steps="983281"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.20" steps="1048864"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.36" steps="983319"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.31" steps="983474"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.34" steps="983487"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.28" steps="983502"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.17" steps="1049081"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.34" steps="983540"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.30" steps="983707"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.19" steps="1048519"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.33" steps="983924"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="983935"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="983939"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.32" steps="1333309"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.22" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.92"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.12" steps="1048564"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.32" steps="1333499"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.32" steps="984022"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.26" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures31">
  </transf>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.33" steps="984174"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.34" steps="984187"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.35" steps="984202"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.16" steps="1049534"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.30" steps="984240"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.32" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_bijective_auto">
   <goal name="permut_modular_multiplier&#39;vc.32.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="permut_modular_multiplier&#39;vc.32.0.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="permut_modular_multiplier&#39;vc.32.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.45" steps="1405999"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permut_modular_multiplier&#39;vc.32.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="permut_modular_multiplier&#39;vc.32.1.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="permut_modular_multiplier&#39;vc.32.1.0.0" expl="apply premises" proved="true">
     <transf name="exists" proved="true" arg1="(if e&#39; = 2*n+3 then 0 else e&#39; +1)">
      <goal name="permut_modular_multiplier&#39;vc.32.1.0.0.0" proved="true">
      <proof prover="8"><result status="valid" time="3.49" steps="1406564"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.48" steps="1000813"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.34" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.16" steps="1050308"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.35" expl="postcondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="permut_modular_multiplier&#39;vc.35.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="leq_trans" arg2="with" arg3="(polysquare (n + 2)
     (0 + (((power cont_size 2 * 4) + (8 * cont_size)) + 4))
     (4 + ((cont_size * ((cont_size * (2 * adder_gate_bound n)) + 6)) + 8))
     (0 + (cont_size * 6)))">
    <goal name="permut_modular_multiplier&#39;vc.35.0.0" expl="apply premises" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="permut_modular_multiplier&#39;vc.35.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="result&#39;def">
      <goal name="permut_modular_multiplier&#39;vc.35.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="Ensures20">
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="permut_modular_multiplier&#39;vc.35.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.59" steps="985876"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.36" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="permut_modular_multiplier&#39;vc.36.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="permut_modular_multiplier&#39;vc.36.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(modular_multiplier_with_ancillas pick bound n 0)" arg2="(modular_multiplier_with_ancillas pick bound n i)">
     <goal name="permut_modular_multiplier&#39;vc.36.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="path_sem_to_sem">
      <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(width
   (with_permutation (modular_multiplier_with_ancillas pick bound n i)
    (fun (i1:int) -&gt; if i1 &lt; 1 then (i1 + ((2 * n) + 4)) - 1 else i1 - 1)))" arg2="(n+(n+4))">
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_ket_l">
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.24" steps="1050586"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.28" steps="1050580"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="3.71"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.64" steps="1238865"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec5">
         <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="4.99" steps="1650685"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="set_bijective_auto">
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="4.66"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(width (modular_multiplier_with_ancillas pick bound n i))" arg2="((2 * n) + 4)">
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
             <transf name="exists" proved="true" arg1="(if e&#39; = 2*n+3 then 0 else e&#39; +1)">
              <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.1.0.0.0.0" proved="true">
              <proof prover="8"><result status="valid" time="4.52" steps="1732027"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.1.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="4.23" steps="1650745"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(ket (n + 4) 0)" arg2="(kronecker (ket (n + 3) 0) (ket 1 0))">
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
         <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="with_permutation_kronecker_gen">
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="3.59"/></proof>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.61" steps="1050573"/></proof>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.44" steps="1066867"/></proof>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(((2 * n) + 4) - 1)" arg2="(n+ (n+3))">
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_ket_l">
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.24" steps="1050586"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.27" steps="1050573"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3.0.2" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="3.58"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3.0.3" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="3.10" steps="1237881"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="1.30" steps="985863"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.4" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.42" steps="1066867"/></proof>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(((2 * n) + 4) - 1)" arg2="(n+ (n+3))">
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_ket_l">
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.25" steps="1050586"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.27" steps="1050573"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5.0.2" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="3.55"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5.0.3" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="3.17" steps="1237881"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="1.31" steps="985863"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.6" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.45" steps="1066892"/></proof>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.7" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_is_a_ket_basis_elt">
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.7.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="3.60"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.7.1" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="ket_is_a_ket_basis_elt">
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.7.1.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.28" steps="1050573"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.7.1.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="3.20" steps="1239191"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="sem_to_path_sem">
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(kronecker (ket (n + 2) 0) (ket 1 0))" arg2="(ket (n+3) 0)" arg3="in" arg4="Ensures16">
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="3.58"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.1" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_kets">
             <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.1.0" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="1.37" steps="985873"/></proof>
             </goal>
             <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.19" steps="1050573"/></proof>
             </goal>
             <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.1.2" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.33" steps="985847"/></proof>
             </goal>
             <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.1.3" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="3.05" steps="1239173"/></proof>
             </goal>
             <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.1.4" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.60" steps="1066591"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_kets">
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="1.35" steps="985887"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.1.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.25" steps="1050573"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.1.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.33" steps="985847"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.1.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.06" steps="1239191"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.1.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.37" steps="1066591"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="permut_modular_multiplier&#39;vc.36.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="modular_multiplier_with_ancillas&#39;spec" arg2="with" arg3="i">
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="modular_multiplier_with_ancillas&#39;spec" arg2="with" arg3="i">
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="1.86" steps="1367711"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.90" steps="1367715"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.91" steps="1367722"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.93" steps="1367724"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.91" steps="1440049"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.5" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.00" steps="1367713"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.6" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.14" steps="1440049"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.89" steps="1367715"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.08" steps="1367722"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.05" steps="1367724"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.16" steps="1440044"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.5" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.02" steps="1367713"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.6" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.12" steps="1440049"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.37" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="permut_modular_multiplier&#39;vc.37.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="permut_modular_multiplier&#39;vc.37.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(modular_multiplier_with_ancillas pick bound n 0)" arg2="(modular_multiplier_with_ancillas pick bound n i)">
     <goal name="permut_modular_multiplier&#39;vc.37.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="path_sem_to_sem">
      <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(width
   (with_permutation (modular_multiplier_with_ancillas pick bound n i)
    (fun (i1:int) -&gt; if i1 &lt; 1 then (i1 + ((2 * n) + 4)) - 1 else i1 - 1)))" arg2="(n+(n+4))">
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_ket_l">
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.25" steps="1050783"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.27" steps="1050777"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.26" steps="1250002"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.18" steps="1239221"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec5">
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="4.34" steps="1648443"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="set_bijective_auto">
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="4.69" steps="1732931"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(width (modular_multiplier_with_ancillas pick bound n i))" arg2="((2 * n) + 4)">
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
             <transf name="exists" proved="true" arg1="(if e&#39; = 2*n+3 then 0 else e&#39; +1)">
              <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.1.0.0.0.0" proved="true">
              <proof prover="8"><result status="valid" time="4.69" steps="1732520"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.1.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="4.13" steps="1648308"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(ket (n + 4) 0)" arg2="(kronecker (ket (n + 3) 0) (ket 1 0))">
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="with_permutation_kronecker_gen">
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="3.95"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.50" steps="1050776"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.38" steps="1067068"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(((2 * n) + 4) - 1)" arg2="(n+ (n+3))">
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_ket_l">
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.23" steps="1050783"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.22" steps="1050777"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3.0.2" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.13" steps="1250002"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3.0.3" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.10" steps="1238238"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="1.56" steps="986069"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.4" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.34" steps="1067068"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(((2 * n) + 4) - 1)" arg2="(n+ (n+3))">
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_ket_l">
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.29" steps="1050783"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.23" steps="1050777"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5.0.2" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.17" steps="1250002"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5.0.3" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.19" steps="1238238"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="1.33" steps="986069"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.6" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.53" steps="1067093"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.7" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_is_a_ket_basis_elt">
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.7.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="3.18" steps="1243612"/></proof>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.7.1" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="ket_is_a_ket_basis_elt">
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.7.1.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.18" steps="1050777"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.7.1.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.27" steps="1239546"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="sem_to_path_sem">
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(kronecker (ket (n + 2) 0) (ket 1 0))" arg2="(ket (n+3) 0)" arg3="in" arg4="Ensures16">
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="3.69"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.1" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_kets">
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.1.0" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="1.60" steps="986079"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.20" steps="1050777"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.1.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.34" steps="986053"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.1.3" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="3.18" steps="1239523"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.1.4" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.45" steps="1066794"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_kets">
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="1.35" steps="986079"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.1.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.24" steps="1050777"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.1.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.37" steps="986053"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.1.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.24" steps="1239546"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.1.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.39" steps="1066794"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="permut_modular_multiplier&#39;vc.37.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="modular_multiplier_with_ancillas&#39;spec" arg2="with" arg3="i">
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="modular_multiplier_with_ancillas&#39;spec" arg2="with" arg3="i">
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="2.00" steps="1367932"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.94" steps="1367936"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.88" steps="1367943"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.90" steps="1367945"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.05" steps="1440458"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.5" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.94" steps="1367934"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.6" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.97" steps="1440458"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.93" steps="1367936"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.90" steps="1367943"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.87" steps="1367945"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.13" steps="1440455"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.5" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.90" steps="1367934"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.6" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.04" steps="1440458"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="modular_multiplier&#39;vc" expl="VC for modular_multiplier" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="modular_multiplier&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.27" steps="1304110"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.42" steps="974841"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.29" steps="1312193"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.56" steps="974916"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.30" steps="1313735"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.15" steps="1039872"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.13" steps="1040704"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.7" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="x" arg2="(ket n (ket_to_int x))">
   <goal name="modular_multiplier&#39;vc.7.0" expl="precondition" proved="true">
   <transf name="case" proved="true" arg1="(0&lt;= ket_to_int x &lt; bound )">
    <goal name="modular_multiplier&#39;vc.7.0.0" expl="true case (precondition)" proved="true">
    <transf name="exists" proved="true" arg1="(ket n (mod1 (mod1 pick bound * (ket_to_int x)) bound))">
     <goal name="modular_multiplier&#39;vc.7.0.0.0" proved="true">
     <transf name="apply" proved="true" arg1="sem_to_path_sem">
      <goal name="modular_multiplier&#39;vc.7.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="1.85"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="modular_multiplier&#39;vc.7.0.1" expl="false case (precondition)" proved="true">
    <transf name="exists" proved="true" arg1="(ket n (ket_to_int x))">
     <goal name="modular_multiplier&#39;vc.7.0.1.0" proved="true">
     <transf name="apply" proved="true" arg1="sem_to_path_sem">
      <goal name="modular_multiplier&#39;vc.7.0.1.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="Ensures">
       <goal name="modular_multiplier&#39;vc.7.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="modular_multiplier&#39;vc.7.0.1.0.0.0.0" proved="true">
        <proof prover="0"><result status="valid" time="1.92"/></proof>
        </goal>
        <goal name="modular_multiplier&#39;vc.7.0.1.0.0.0.1" proved="true">
        <transf name="replace" proved="true" arg1="n" arg2="(ket_length x)">
         <goal name="modular_multiplier&#39;vc.7.0.1.0.0.0.1.0" proved="true">
         <proof prover="0"><result status="valid" time="1.93"/></proof>
         </goal>
         <goal name="modular_multiplier&#39;vc.7.0.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="3.62" steps="1356049"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="modular_multiplier&#39;vc.7.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="n" arg2="(ket_length x)">
    <goal name="modular_multiplier&#39;vc.7.1.0" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="2.24" steps="1041163"/></proof>
    </goal>
    <goal name="modular_multiplier&#39;vc.7.1.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="3.67" steps="1356046"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.13" steps="1049519"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.37" steps="1089453"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.24" steps="1050301"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.11" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="modular_multiplier&#39;vc.11.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="3.31" steps="1336468"/></proof>
   </goal>
   <goal name="modular_multiplier&#39;vc.11.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="Ensures10">
    <goal name="modular_multiplier&#39;vc.11.1.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (permut_modular_multiplier (mod1 pick bound) bound n) - (n + 4))" arg2="n">
     <goal name="modular_multiplier&#39;vc.11.1.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.43" steps="1335158"/></proof>
     </goal>
     <goal name="modular_multiplier&#39;vc.11.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.38" steps="982541"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="modular_multiplier&#39;vc.11.1.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="sem_to_path_sem">
     <goal name="modular_multiplier&#39;vc.11.1.1.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(mod1 (pick * i) bound)" arg2="(mod1 (mod1 pick bound * i) bound)">
      <goal name="modular_multiplier&#39;vc.11.1.1.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="Ensures13">
       <goal name="modular_multiplier&#39;vc.11.1.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.41" steps="982543"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="modular_multiplier&#39;vc.11.1.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="1"><result status="valid" time="5.86" steps="287016"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier&#39;vc.12" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="modular_multiplier&#39;vc.12.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="3.28" steps="1336483"/></proof>
   </goal>
   <goal name="modular_multiplier&#39;vc.12.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="Ensures11">
    <goal name="modular_multiplier&#39;vc.12.1.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (permut_modular_multiplier (mod1 pick bound) bound n) - (n + 4))" arg2="n">
     <goal name="modular_multiplier&#39;vc.12.1.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.36" steps="1334942"/></proof>
     </goal>
     <goal name="modular_multiplier&#39;vc.12.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.60" steps="982708"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="modular_multiplier&#39;vc.12.1.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="sem_to_path_sem">
     <goal name="modular_multiplier&#39;vc.12.1.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="Ensures13">
      <goal name="modular_multiplier&#39;vc.12.1.1.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.40" steps="982710"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="multiplier_gate_bound&#39;vc" expl="VC for multiplier_gate_bound" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="multiplier_gate_bound&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_gate_bound&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.57" steps="975774"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_gate_bound&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_gate_bound&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.67" steps="1038029"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_gate_bound&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.84" steps="1302018"/></proof>
  </goal>
  <goal name="multiplier_gate_bound&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_gate_bound&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.81"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_gate_bound&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_gate_bound&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.49" steps="1038142"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_gate_bound&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="976076"/></proof>
  </goal>
  <goal name="multiplier_gate_bound&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="5.10" steps="272060"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
