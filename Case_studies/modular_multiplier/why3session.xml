<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="8" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="10" name="Z3" version="4.8.6" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="modular_multiplier.mlw"/>
<theory name="Multiplier" proved="true">
 <goal name="multiplier_pre&#39;vc" expl="VC for multiplier_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="multiplier_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.49" steps="962850"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.55" steps="963067"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="963080"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.53" steps="963655"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="963668"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.10" steps="1028181"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.12" steps="1028245"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.28" steps="964180"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.36" steps="1033903"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.9" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(forall a b c. a*b*c = a * (b*c))">
   <goal name="multiplier_pre&#39;vc.9.0" expl="asserted formula" proved="true">
   <proof prover="8"><result status="valid" time="1.27" steps="971215"/></proof>
   </goal>
   <goal name="multiplier_pre&#39;vc.9.1" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="h">
    <goal name="multiplier_pre&#39;vc.9.1.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="compat_int_order_mult">
     <goal name="multiplier_pre&#39;vc.9.1.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.03" steps="1033999"/></proof>
     </goal>
     <goal name="multiplier_pre&#39;vc.9.1.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="multiplier_pre&#39;vc.9.1.0.1.0" proved="true">
      <proof prover="8"><result status="valid" time="3.10" steps="1301649"/></proof>
      </goal>
      <goal name="multiplier_pre&#39;vc.9.1.0.1.1" proved="true">
      <proof prover="8"><result status="valid" time="3.16" steps="1303919"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_pre&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.28" steps="971191"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.25" steps="971204"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.28" steps="971610"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.27" steps="971621"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.29" steps="971897"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.29" steps="971910"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.07" steps="1035280"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.11" steps="1035349"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.31" steps="972389"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.24" steps="962855"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.25" steps="962868"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.25" steps="963458"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.27" steps="963490"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="970290"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="970303"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.64" steps="1034084"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.60" steps="1033364"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.57" steps="970803"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.28" expl="variant decrease" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="971238"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.61" steps="1034814"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.60" steps="1034731"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.80" steps="1453598"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.86" steps="1123709"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.33" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="multiplier_pre&#39;vc.33.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="2.52" steps="1037809"/></proof>
   </goal>
   <goal name="multiplier_pre&#39;vc.33.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="multiplier_pre&#39;vc.33.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="multiplier_pre&#39;vc.33.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H4">
      <goal name="multiplier_pre&#39;vc.33.1.0.0.0" expl="postcondition" proved="true">
      <transf name="assert" proved="true" arg1="(forall a b c. a* (b+c) = a*b + a*c)">
       <goal name="multiplier_pre&#39;vc.33.1.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="8"><result status="valid" time="2.31" steps="1383815"/></proof>
       </goal>
       <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="h">
        <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="leq_trans_add">
         <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.31" steps="1463417"/></proof>
         </goal>
         <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.1" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="H17">
          <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.1.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="((cont_size * adder_gate_bound n) * 1)" arg2="((adder_gate_bound n *cont_size ) )">
           <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="leq_trans_mult">
            <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="3.27" steps="1463410"/></proof>
            </goal>
            <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="1.73"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="2.05" steps="1383836"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_pre&#39;vc.34" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H4">
   <goal name="multiplier_pre&#39;vc.34.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="multiplier_pre&#39;vc.34.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="multiplier_pre&#39;vc.34.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ind_isum_one">
      <goal name="multiplier_pre&#39;vc.34.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="path_sem_to_sem">
        <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(width result)" arg2="(n+ (n+1+1))">
         <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.93" steps="1370897"/></proof>
          </goal>
          <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="3.01" steps="1370906"/></proof>
          </goal>
          <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="1.67"/></proof>
          </goal>
          <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="4.19" steps="1603878"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="1.88" steps="1293503"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="H11">
         <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(ket n i)" arg2="(bv_to_ket (int_to_bv i n))">
          <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="case" proved="true" arg1="(getbv (int_to_bv i n) @ 0 = 0)">
           <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="replace" proved="true" arg1="(cont o 0 n o2)" arg2="(cont o3 0 n o5)">
            <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="H22">
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
             <proof prover="0"><result status="valid" time="1.68"/></proof>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="replace" proved="true" arg1="(width o3)" arg2="(n+1+1)
">
              <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_ket_l">
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="3.02" steps="1370922"/></proof>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.95" steps="1293523"/></proof>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="1.71"/></proof>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1.0.3" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.93" steps="1293508"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="1.92" steps="1293527"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="1.69"/></proof>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.3" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.92" steps="1293511"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="2.03" steps="1310771"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1" expl="false case (apply premises)" proved="true">
           <transf name="replace" proved="true" arg1="(cont o 0 n o2)" arg2="(cont o3 0 n o5)">
            <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0" expl="false case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="H21">
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0" expl="false case (apply premises)" proved="true">
             <transf name="replace" proved="true" arg1="(b + (pick * ((getbv (int_to_bv i n) @ 0) * power 2 (n - 1))))" arg2="((pick * ( power 2 (n - 1)))+b)">
              <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.0" expl="false case (apply premises)" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_eq">
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
               </transf>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="sem_to_path_sem">
                <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
                <transf name="replace" proved="true" arg1="(apply_qft (n + 1) b)" arg2="(apply_qft (n + 1) (mod1 b bound))">
                 <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="4.33" steps="1611974"/></proof>
                 </goal>
                 <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="0"><result status="valid" time="1.72"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="0"><result status="valid" time="1.70"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="replace" proved="true" arg1="(width o3)" arg2="(n+1+1)
">
              <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_ket_l">
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="3.07" steps="1370921"/></proof>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.94" steps="1293527"/></proof>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="4.41" steps="1606089"/></proof>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1.0.3" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.09" steps="1293512"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="1.98" steps="1293531"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="2.02"/></proof>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.3" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="1.76"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="2.46" steps="1310775"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
          <proof prover="0"><result status="valid" time="1.73"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="multiplier_pre&#39;vc.34.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.06" steps="1293496"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="multiplier_pre&#39;vc.34.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="multiplier_pre&#39;vc.34.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="multiplier_pre&#39;vc.34.1.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="path_sem_to_sem">
      <goal name="multiplier_pre&#39;vc.34.1.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(width result)" arg2="(n+ (n+1+1))">
       <goal name="multiplier_pre&#39;vc.34.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_ket_l">
        <goal name="multiplier_pre&#39;vc.34.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.55" steps="1463485"/></proof>
        </goal>
        <goal name="multiplier_pre&#39;vc.34.1.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.57" steps="1463494"/></proof>
        </goal>
        <goal name="multiplier_pre&#39;vc.34.1.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="2.03"/></proof>
        </goal>
        <goal name="multiplier_pre&#39;vc.34.1.0.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="4.72" steps="1709996"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="multiplier_pre&#39;vc.34.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="2.13" steps="1383890"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="multiplier_pre&#39;vc.34.1.0.0.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="H11">
       <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="sem_to_path_sem">
        <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="sem_comp" arg2="with" arg3="(kronecker (ket n i)
    (kronecker
     (apply_qft (n + 1)
      (mod1
       (b
        + (pick
           * ind_isum
             (fun (k:int) -&gt;
               (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))
             0 ((j - 1) + 1)))
       bound))
     (ket 1 0)))">
         <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(j-1)" arg2="o15">
          <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="H13">
           <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.04" steps="1383878"/></proof>
           </goal>
           <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.22" steps="1383878"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="2.27" steps="1383876"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(ket n i)" arg2="(bv_to_ket (int_to_bv i n))">
          <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
          <transf name="case" proved="true" arg1="(getbv (int_to_bv i n) @ j = 0)
">
           <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0" expl="true case (apply premises)" proved="true">
           <transf name="apply" proved="true" arg1="path_sem_to_sem">
            <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(width
o16)" arg2="(n+(n+1+1))">
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="kronecker_ket_l">
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="3.48" steps="1463529"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="3.52" steps="1463538"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="4.74" steps="1713744"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0.0.3" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="4.81" steps="1717845"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="3.51" steps="1463538"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="o16" arg2="(cont o20 j n o22)">
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="H36">
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(ind_isum
             (fun (k:int) -&gt;
               (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))
             0 (j + 1))" arg2="(ind_isum
             (fun (k:int) -&gt;
               (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))
             0 (j -1 + 1))">
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
               </transf>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
               <transf name="rewrite" proved="true" arg1="ind_isum_re">
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
                <transf name="replace" proved="true" arg1="(j+1-1)" arg2="j">
                 <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0" expl="equality hypothesis" proved="true">
                 <transf name="rewrite" proved="true" arg1="add_zero">
                  <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                  <transf name="replace" proved="true" arg1="(j-1+1)" arg2="j">
                   <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
                   <transf name="compute_specified" proved="true" >
                   </transf>
                   </goal>
                   <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="8"><result status="valid" time="2.23" steps="1383912"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.48" steps="1401129"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="8"><result status="valid" time="2.61" steps="1383912"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="2.25" steps="1383914"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
              <transf name="replace" proved="true" arg1="(width
o20)" arg2="((n+1+1))">
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="3.59" steps="1463529"/></proof>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.21" steps="1383915"/></proof>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="2.02"/></proof>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1.0.3" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.24" steps="1383895"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="2.21" steps="1383914"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
              <proof prover="0"><result status="valid" time="2.14"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.3" expl="rewrite premises" proved="true">
              <proof prover="0"><result status="valid" time="2.01"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="2.45" steps="1401107"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1" expl="false case (apply premises)" proved="true">
           <transf name="apply" proved="true" arg1="path_sem_to_sem">
            <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(width
o16)" arg2="(n+(n+1+1))">
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="kronecker_ket_l">
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="3.55" steps="1463530"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="3.57" steps="1463539"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0.0.2" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="2.02"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0.0.3" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="4.84" steps="1718023"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="3.29" steps="1463539"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="o16" arg2="(cont o20 j n o22)">
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="H35">
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_eq">
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
               </transf>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="sem_to_path_sem">
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0" expl="apply premises" proved="true">
                <transf name="replace" proved="true" arg1="(b
      + (pick
         * ind_isum
           (fun (k:int) -&gt;
             (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))
           0 (j + 1)))" arg2="((pick * power 2 ((n - j) - 1))  +(b
      + (pick
         * ind_isum
           (fun (k:int) -&gt;
             (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))
           0 (j - 1+1))) )">
                 <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="(pick * power 2 ((n - j) - 1))" arg2="o21">
                  <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="H37">
                  </transf>
                  </goal>
                  <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="8"><result status="valid" time="2.23" steps="1383909"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1" expl="equality hypothesis" proved="true">
                 <transf name="rewrite" proved="true" arg1="ind_isum_re">
                  <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
                  <transf name="assert" proved="true" arg1="(forall a p i i&#39; r r&#39;. r = r&#39; -&gt; i = i&#39; -&gt; a+ (p * (i+r)) = p*r&#39; + (a + p*i&#39;))">
                   <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.0" expl="asserted formula" proved="true">
                   <proof prover="8"><result status="valid" time="2.20" steps="1384107"/></proof>
                   </goal>
                   <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
                   <transf name="apply" proved="true" arg1="h">
                    <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.1.0" expl="apply premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
                     <proof prover="0"><result status="valid" time="3.13"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.1.1" expl="apply premises" proved="true">
                    <transf name="replace" proved="true" arg1="(j-1+1)" arg2="(j+1-1)">
                     <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.1.1.0" expl="apply premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                     </transf>
                     </goal>
                     <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.1.1.1" expl="equality hypothesis" proved="true">
                     <proof prover="8"><result status="valid" time="2.14" steps="1384132"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="2.31" steps="1383918"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
              <transf name="replace" proved="true" arg1="(width
o20)" arg2="((n+1+1))">
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="3.15" steps="1463530"/></proof>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.99" steps="1383919"/></proof>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="2.11"/></proof>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1.0.3" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.99" steps="1383899"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="2.27" steps="1383918"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.2" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="5.08" steps="1715714"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.3" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="5.18" steps="1712463"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="2.43" steps="1401113"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
          <proof prover="0"><result status="valid" time="2.00"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.58" steps="1463893"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_pre&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="962798"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.36" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="969806"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.37" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="969810"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.38" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(pick * i)" arg2="(pick
           * ind_isum
             (fun (k:int) -&gt;
               (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))
             0 ((n - 1) + 1))">
   <goal name="multiplier_pre&#39;vc.38.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures2">
    <goal name="multiplier_pre&#39;vc.38.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.56" steps="969887"/></proof>
    </goal>
    <goal name="multiplier_pre&#39;vc.38.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.62" steps="969887"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="multiplier_pre&#39;vc.38.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(pick * i)" arg2="(pick * bv_to_int (int_to_bv i n))">
    <goal name="multiplier_pre&#39;vc.38.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
     <goal name="multiplier_pre&#39;vc.38.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(n-1+1)" arg2="n">
      <goal name="multiplier_pre&#39;vc.38.1.0.0.0" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(length1 (int_to_bv i n))" arg2="n">
       <goal name="multiplier_pre&#39;vc.38.1.0.0.0.0" expl="equality hypothesis" proved="true">
       <transf name="replace" proved="true" arg1="(fun (k:int) -&gt; (getbv (int_to_bv i n) @ k) * power 2 ((n - 1) - k))" arg2="(fun (k:int) -&gt; (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))">
        <goal name="multiplier_pre&#39;vc.38.1.0.0.0.0.0" expl="equality hypothesis" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
        <goal name="multiplier_pre&#39;vc.38.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="set_equal_func">
         <goal name="multiplier_pre&#39;vc.38.1.0.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.32" steps="1296104"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="multiplier_pre&#39;vc.38.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="3.32" steps="1299039"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="multiplier_pre&#39;vc.38.1.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="1.57" steps="969885"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="multiplier_pre&#39;vc.38.1.1" expl="equality hypothesis" proved="true">
    <proof prover="0"><result status="valid" time="1.65"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_pre&#39;vc.39" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="970088"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="multiplier_qft_pre&#39;vc" expl="VC for multiplier_qft_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="multiplier_qft_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.52" steps="1027649"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.60" steps="970194"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.16" steps="1033239"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.57" steps="970227"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.54" steps="1032880"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.57" steps="970622"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.55" steps="970644"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.55" steps="970648"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.8" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="multiplier_qft_pre&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.86" steps="1344532"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="2.29"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.46" steps="986364"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.60" steps="971401"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.12" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(mod1 (b + (pick * i)) bound)" arg2="((fun (b1:int) -&gt; mod1 (b1 + (pick * i)) bound) @ b)">
   <goal name="multiplier_qft_pre&#39;vc.12.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="path_sem_to_sem">
    <goal name="multiplier_qft_pre&#39;vc.12.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="2.25"/></proof>
    </goal>
    <goal name="multiplier_qft_pre&#39;vc.12.0.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="Ensures4">
     <goal name="multiplier_qft_pre&#39;vc.12.0.1.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.33" steps="1316776"/></proof>
     </goal>
     <goal name="multiplier_qft_pre&#39;vc.12.0.1.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.43" steps="1330386"/></proof>
     </goal>
     <goal name="multiplier_qft_pre&#39;vc.12.0.1.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.28" steps="971411"/></proof>
     </goal>
     <goal name="multiplier_qft_pre&#39;vc.12.0.1.3" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="multiplier_qft_pre&#39;vc.12.0.1.3.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="sem_to_path_sem">
       <goal name="multiplier_qft_pre&#39;vc.12.0.1.3.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="Ensures9">
        <goal name="multiplier_qft_pre&#39;vc.12.0.1.3.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.23" steps="971413"/></proof>
        </goal>
        <goal name="multiplier_qft_pre&#39;vc.12.0.1.3.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.28" steps="971413"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="multiplier_qft_pre&#39;vc.12.1" expl="equality hypothesis" proved="true">
   <proof prover="8"><result status="valid" time="3.33" steps="1304121"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="3.00"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.14" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="multiplier_qft_pre&#39;vc.14.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="multiplier_qft_pre&#39;vc.14.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="multiplier_qft_pre&#39;vc.14.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="apply_function_in_qft_basis&#39;spec">
      <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="apply_function_in_qft_basis&#39;spec">
       <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
       <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.91" steps="1410057"/></proof>
       </goal>
       <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.88" steps="1341050"/></proof>
       </goal>
       <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.85" steps="1341066"/></proof>
       </goal>
       <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.86" steps="1341048"/></proof>
       </goal>
       <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="4.10" steps="1609567"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.89" steps="1410057"/></proof>
      </goal>
      <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.89" steps="1341050"/></proof>
      </goal>
      <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.92" steps="1341066"/></proof>
      </goal>
      <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.94" steps="1341048"/></proof>
      </goal>
      <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.5" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="4.14" steps="1609606"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="multiplier_qft_swap&#39;vc" expl="VC for multiplier_qft_swap" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="multiplier_qft_swap&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.12" steps="1028866"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.23" steps="965269"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.30" steps="965292"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.33" steps="965314"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.20" steps="1028938"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="965316"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="965329"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.34" steps="965342"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.62" steps="965345"/></proof>
   </goal>
   <goal name="multiplier_qft_swap&#39;vc.8.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.25" steps="1029770"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.37" steps="965389"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.21" steps="1035199"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.44" steps="1117993"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.12" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.12.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.75" steps="1052821"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1052844"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1052862"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.42" steps="1118770"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1052814"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1052827"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1052840"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.41" steps="1118868"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="1052887"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1053052"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.31" steps="1118484"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.33" steps="1118511"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.24" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.90"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1053303"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.41" steps="1053307"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.42" steps="1053317"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.28" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.28.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.40" steps="1053321"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.41" steps="1053324"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.30" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.30.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.56" steps="1395474"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.39" steps="1118647"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.45" steps="1053342"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.46" steps="1118585"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1053551"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.45" steps="1123136"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1054297"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.38" steps="1124662"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.47" steps="1124563"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.39" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.39.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.84" steps="1055579"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.38" steps="1125487"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.39" steps="1127491"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.43" steps="1055975"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1128992"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.44" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.44.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.83" steps="1057254"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.82" steps="1129945"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1130663"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.83" steps="1131145"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="1058513"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1058533"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.50" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1058551"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.51" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1134192"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.52" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1058495"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.53" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1058508"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.54" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="1058521"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.55" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.50" steps="1132083"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.56" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.49" steps="1058552"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.57" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.95" steps="1132776"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.58" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.01"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.59" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.11"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.60" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1131617"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.61" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.56" steps="1131374"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.62" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1058758"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.63" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1058778"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.64" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.64.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.79" steps="1058792"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.65" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1134495"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.66" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1058740"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.67" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1058753"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.68" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1058766"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.69" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.94" steps="1132323"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.70" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1058797"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.71" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1131826"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.72" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1059274"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.73" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="4.12" steps="1530705"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.74" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.94" steps="1132161"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.75" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="4.75" steps="1533706"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.76" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.76.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="multiplier_qft_swap&#39;vc.76.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="sequence_eq">
     <goal name="multiplier_qft_swap&#39;vc.76.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.91" steps="1133396"/></proof>
     </goal>
     <goal name="multiplier_qft_swap&#39;vc.76.0.0.1" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="multiplier_qft_pre&#39;def">
       <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="multiplier_qft_pre&#39;spec">
         <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.58" steps="1451422"/></proof>
         </goal>
         <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.54" steps="1451429"/></proof>
         </goal>
         <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.42" steps="1451429"/></proof>
         </goal>
         <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.73" steps="1528178"/></proof>
         </goal>
         <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0.4" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.37" steps="1451429"/></proof>
         </goal>
         <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0.5" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.04" steps="1451420"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.13" steps="1451422"/></proof>
       </goal>
       <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.52" steps="1451429"/></proof>
       </goal>
       <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.55" steps="1451429"/></proof>
       </goal>
       <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.93" steps="1528178"/></proof>
       </goal>
       <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.5" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.55" steps="1451420"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="multiplier_qft_swap&#39;vc.76.0.0.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.75" steps="1061090"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="restricted_modular_multiplier&#39;vc" expl="VC for restricted_modular_multiplier" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="restricted_modular_multiplier&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.60" steps="1029652"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.77" steps="1293953"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.65" steps="966448"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.55" steps="1029743"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="966518"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.58" steps="1033214"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.58" steps="1032173"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.60" steps="966623"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.76" steps="1033507"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="973650"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="973663"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.56" steps="1039018"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.62" steps="1039859"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.69" steps="1039536"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.88" steps="1120256"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.01" steps="1424317"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1054403"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1120271"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1054388"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.95" steps="1123603"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.83" steps="1122559"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1054458"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.71" steps="1123794"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1054644"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1054657"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.86" steps="1122784"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.82" steps="1123645"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1054780"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1054972"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.87" steps="1123541"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1123568"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.31" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.24"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.57" steps="1055194"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1055198"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.34" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.26"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1055212"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.83" steps="1055215"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1055218"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.96" steps="1123694"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1055240"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1126881"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1056018"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1125804"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.91" steps="1128276"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1057289"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.95" steps="1129228"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="1057721"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1127994"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.00" steps="1130440"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1058834"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.50" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1131296"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.51" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1132213"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.52" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1130502"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.53" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.51"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.54" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1060088"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.55" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1130517"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.56" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1060073"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.57" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.02" steps="1134220"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.58" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1132904"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.59" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1060153"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.60" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.68" steps="1134120"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.61" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1060341"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.62" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="1060354"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.63" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.00" steps="1133081"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.64" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.58" steps="1133984"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.65" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="1060445"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.66" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(mod1
       (i
        + (mod1 (- modular_inverse pick bound) bound * mod1 (pick * i) bound))
       bound)" arg2="0" arg3="in" arg4="Ensures6">
   <goal name="restricted_modular_multiplier&#39;vc.66.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures6">
   </transf>
   </goal>
   <goal name="restricted_modular_multiplier&#39;vc.66.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(mod1
  (i + (mod1 (- modular_inverse pick bound) bound * mod1 (pick * i) bound))
  bound)" arg2="(mod1
  (mod1 i bound + mod1 ((mod1 (- modular_inverse pick bound) bound * mod1 (pick * i) bound))
  bound)bound)">
    <goal name="restricted_modular_multiplier&#39;vc.66.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="mod_mod_mult">
     <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b c. -a * (b*c) = a*b* -c)">
      <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="8"><result status="valid" time="1.54" steps="1060527"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="h">
       <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.1.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="mod_mod_mult_rev">
        <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.1.0.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="one_mult">
         <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
         <proof prover="0"><result status="valid" time="4.46"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.70" steps="1060531"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.65" steps="1134047"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.66.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.93" steps="1134004"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="restricted_modular_multiplier&#39;vc.66.1.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="add_mod_left">
     <goal name="restricted_modular_multiplier&#39;vc.66.1.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="add_mod_right">
      <goal name="restricted_modular_multiplier&#39;vc.66.1.1.0.0" expl="equality hypothesis" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.66.1.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.97" steps="1134004"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.66.1.1.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.96" steps="1134004"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.67" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.97" steps="1133363"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.68" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.88" steps="1130840"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.69" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.43"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.70" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.87" steps="1060469"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.71" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.91" steps="1130855"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.72" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1060454"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.73" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.03" steps="1134529"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.74" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1133223"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.75" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1060534"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.76" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.07" steps="1134436"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.77" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.88" steps="1060690"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.78" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1060703"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.79" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.67" steps="1133372"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.80" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.05" steps="1134280"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.81" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.91" steps="1133676"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.82" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.91" steps="1061131"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.83" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="11.53" steps="43561636"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.84" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.82" steps="1134110"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.85" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1061157"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.86" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(kronecker (ket (n + 1) 0) (ket 1 0))" arg2="(ket (n+2) 0)" arg3="in" arg4="Ensures">
   <goal name="restricted_modular_multiplier&#39;vc.86.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(kronecker (kronecker (ket 1 0) (ket n 0)) (ket 1 0))" arg2="(ket (n+2) 0)" arg3="in" arg4="Ensures">
    <goal name="restricted_modular_multiplier&#39;vc.86.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="1.80" steps="1061194"/></proof>
    </goal>
    <goal name="restricted_modular_multiplier&#39;vc.86.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_kets">
     <goal name="restricted_modular_multiplier&#39;vc.86.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_kets">
      <goal name="restricted_modular_multiplier&#39;vc.86.0.1.0.0" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="1.83" steps="1061242"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.86.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.87" steps="1133925"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.86.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.59" steps="1061199"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.86.0.1.0.3" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="2.32"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.86.0.1.0.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.94" steps="1077386"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.86.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.89" steps="1061199"/></proof>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.86.0.1.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="3.15" steps="1133914"/></proof>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.86.0.1.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.14" steps="1077386"/></proof>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.86.0.1.4" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.83" steps="1134808"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="restricted_modular_multiplier&#39;vc.86.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="kronecker_kets">
    <goal name="restricted_modular_multiplier&#39;vc.86.1.0" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.69" steps="1061207"/></proof>
    </goal>
    <goal name="restricted_modular_multiplier&#39;vc.86.1.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="2.80" steps="1133861"/></proof>
    </goal>
    <goal name="restricted_modular_multiplier&#39;vc.86.1.2" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.92" steps="1061167"/></proof>
    </goal>
    <goal name="restricted_modular_multiplier&#39;vc.86.1.3" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="2.51"/></proof>
    </goal>
    <goal name="restricted_modular_multiplier&#39;vc.86.1.4" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.83" steps="1077354"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.87" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="restricted_modular_multiplier&#39;vc.87.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="restricted_modular_multiplier&#39;vc.87.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="sequence_eq">
     <goal name="restricted_modular_multiplier&#39;vc.87.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.91" steps="1135273"/></proof>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="multiplier_qft_swap&#39;def">
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="goal_comm">
       <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="multiplier_qft_swap&#39;spec">
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.51" steps="1454559"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.55" steps="1454566"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="4.07" steps="1535110"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="4.23" steps="1536250"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0.0.4" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="4.36" steps="1536220"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.95" steps="1063121"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.90" steps="1063128"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.08" steps="1135059"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.10" steps="1135879"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="multiplier_qft_pre&#39;def">
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="goal_comm">
       <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="multiplier_qft_pre&#39;spec">
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.70" steps="1454559"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.76" steps="1536861"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.58" steps="1535110"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.24" steps="1454566"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0.4" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.83" steps="1537051"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0.5" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.83" steps="1536558"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.91" steps="1063121"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.76" steps="1136454"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.04" steps="1135059"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.92" steps="1063128"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.5" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.09" steps="1136181"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="check_first_bit_is_one_for_multiplier&#39;vc" expl="VC for check_first_bit_is_one_for_multiplier" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.69" steps="967810"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.67" steps="968143"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.36" steps="1030755"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="968190"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.99" steps="1302762"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="990525"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.48" steps="975710"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="path_sem_to_sem">
     <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(width (insert_qbits (check_first_bit_is_one n) (n + 1) (n + 2) (n + 2)))" arg2="((n+1) + ((n+2)+1))">
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="kronecker_ket_l">
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.35" steps="1037922"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.38" steps="1037931"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.84" steps="1203498"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0.0.3" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="8.19"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="2.48" steps="1037930"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="insert_qbits_path_sem_basis">
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.56" steps="975610"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.71" steps="1037938"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.37" steps="1037923"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.83" steps="1203498"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.4" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="3.93"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.5" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="4.25"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.6" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.99" steps="1054097"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.7" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.92" steps="1203498"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.8" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.75" steps="1203534"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.9" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.64" steps="1054091"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.10" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.96" steps="1054091"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.11" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="sem_to_path_sem">
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.11.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.33" steps="1202621"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="path_sem_to_sem">
     <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(width (insert_qbits (check_first_bit_is_one n) (n + 1) (n + 2) (n + 2)))" arg2="((n+1) + ((n+2)+1))">
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="kronecker_ket_l">
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.66" steps="1038077"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.73" steps="1038086"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.78" steps="1205737"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.3" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_ket_l">
        <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.3.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.61" steps="1038077"/></proof>
        </goal>
        <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.3.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.61" steps="975748"/></proof>
        </goal>
        <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.3.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.75" steps="1205810"/></proof>
        </goal>
        <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.3.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.92" steps="1054227"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="2.66" steps="1038085"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="insert_qbits_path_sem_basis">
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.62" steps="975741"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.58" steps="1038093"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.59" steps="1038078"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.73" steps="1205737"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.4" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="ket_is_a_ket_basis_elt">
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.4.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.65" steps="1038077"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.4.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.68" steps="1206512"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.5" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.76" steps="1207008"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.6" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.85" steps="1054252"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.7" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.64" steps="1205737"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.8" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.74" steps="1205810"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.9" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.95" steps="1054246"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.10" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.85" steps="1054246"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.11" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="sem_to_path_sem">
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.11.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.58" steps="1205675"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="check_order_pre&#39;vc" expl="VC for check_order_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="check_order_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.52" steps="968583"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="968998"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.47" steps="1031231"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.72" steps="1031721"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="1056302"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1056558"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1122111"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1125364"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.00" steps="1125386"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1056815"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1056819"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1056822"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1056832"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1056843"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.14" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="leq_trans" arg2="with" arg3="(polysquare (n + 1) ((cont_size * 2) + 1) 0 0)">
   <goal name="check_order_pre&#39;vc.14.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="1.58" steps="1056847"/></proof>
   </goal>
   <goal name="check_order_pre&#39;vc.14.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="polysquare_update" arg2="with" arg3="(n+1)">
    <goal name="check_order_pre&#39;vc.14.1.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="2.99" steps="1125455"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.14.1.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.86" steps="1056847"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.14.1.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.84" steps="1056847"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.14.1.3" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.83" steps="1056847"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.14.1.4" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.86" steps="1056854"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1056894"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1125506"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1056886"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.78" steps="1124903"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.19" steps="1125589"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1058610"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1126466"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.87" steps="1127196"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.72" steps="1059669"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.02" steps="1127993"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1128703"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1060842"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1061083"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.93" steps="1129524"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.29" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(i - bound)" arg2="(mod1 (i - bound) (power 2 (n+1)))">
   <goal name="check_order_pre&#39;vc.29.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="check_order_pre&#39;vc.29.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="place_substract_in_comput_basis&#39;spec1">
     <goal name="check_order_pre&#39;vc.29.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.49" steps="1399321"/></proof>
     </goal>
     <goal name="check_order_pre&#39;vc.29.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.86" steps="1480018"/></proof>
     </goal>
     <goal name="check_order_pre&#39;vc.29.0.0.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="5.17" steps="1739961"/></proof>
     </goal>
     <goal name="check_order_pre&#39;vc.29.0.0.3" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="5.32" steps="1739799"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="check_order_pre&#39;vc.29.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="mod_inf">
    <goal name="check_order_pre&#39;vc.29.1.0" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.71" steps="1061305"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.29.1.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="4.50" steps="1556788"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.45" steps="1556914"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.74" steps="1130043"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="1056890"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1124896"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.65" steps="1464530"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.02" steps="1125585"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1058653"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1129257"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.38" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.17"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.03" steps="1130023"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.84" steps="1059915"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.04" steps="1130969"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.04" steps="1131637"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1061115"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.83" steps="1061356"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1132458"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.46" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="check_order_pre&#39;vc.46.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="place_substract_in_comput_basis&#39;spec1">
    <goal name="check_order_pre&#39;vc.46.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="2.57" steps="1399538"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.46.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.94" steps="1481811"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.46.0.2" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="2.21"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.46.0.3" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="((((2 * n) + 4) - n) - 1)" arg2="(n+2+1)">
     <goal name="check_order_pre&#39;vc.46.0.3.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="check_order_pre&#39;vc.46.0.3.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.95" steps="1481800"/></proof>
      </goal>
      <goal name="check_order_pre&#39;vc.46.0.3.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.52" steps="1399536"/></proof>
      </goal>
      <goal name="check_order_pre&#39;vc.46.0.3.0.2" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="2.29"/></proof>
      </goal>
      <goal name="check_order_pre&#39;vc.46.0.3.0.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.33" steps="1399533"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="check_order_pre&#39;vc.46.0.3.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="2.24" steps="1399552"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.47" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures5">
   <goal name="check_order_pre&#39;vc.47.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="check_order_pre&#39;vc.47.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(mod1 (i - bound) (power 2 (n + 1)))" arg2="(power 2 (n+1) + (i - bound))">
     <goal name="check_order_pre&#39;vc.47.0.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="1.96"/></proof>
     </goal>
     <goal name="check_order_pre&#39;vc.47.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="check_order_pre&#39;vc.47.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="(i-bound),power 2 (n+1), -1,(power 2 (n + 1) + (i - bound))">
       <goal name="check_order_pre&#39;vc.47.0.0.1.0.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="Hinst">
        <goal name="check_order_pre&#39;vc.47.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
        <goal name="check_order_pre&#39;vc.47.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="2.11"/></proof>
        </goal>
        <goal name="check_order_pre&#39;vc.47.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.53" steps="1399662"/></proof>
        </goal>
        <goal name="check_order_pre&#39;vc.47.0.0.1.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="2.11"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="check_order_pre&#39;vc.47.0.1" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="2.04"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1132843"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1066977"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.50" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="check_order_pre&#39;vc.50.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.83" steps="1061592"/></proof>
   </goal>
   <goal name="check_order_pre&#39;vc.50.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.63" steps="1061857"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.51" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="check_order_pre&#39;vc.51.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.92" steps="1129998"/></proof>
   </goal>
   <goal name="check_order_pre&#39;vc.51.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.00" steps="1132795"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.52" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="check_order_pre&#39;vc.52.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.97" steps="1130415"/></proof>
   </goal>
   <goal name="check_order_pre&#39;vc.52.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.02" steps="1133204"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.53" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1067735"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.54" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.96" steps="4591791"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.55" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.06" steps="1136375"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.56" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.13" steps="1143015"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.57" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.37" steps="1341624"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="check_order&#39;vc" expl="VC for check_order" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="check_order&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="969479"/></proof>
  </goal>
  <goal name="check_order&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.79" steps="1031512"/></proof>
  </goal>
  <goal name="check_order&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.53" steps="969887"/></proof>
  </goal>
  <goal name="check_order&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="969900"/></proof>
  </goal>
  <goal name="check_order&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="969913"/></proof>
  </goal>
  <goal name="check_order&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.75" steps="1032570"/></proof>
  </goal>
  <goal name="check_order&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.94" steps="1057067"/></proof>
  </goal>
  <goal name="check_order&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.14" steps="1125854"/></proof>
  </goal>
  <goal name="check_order&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.03" steps="1057293"/></proof>
  </goal>
  <goal name="check_order&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.65" steps="1057306"/></proof>
  </goal>
  <goal name="check_order&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="1057319"/></proof>
  </goal>
  <goal name="check_order&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1126087"/></proof>
  </goal>
  <goal name="check_order&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.03" steps="1126120"/></proof>
  </goal>
  <goal name="check_order&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1057359"/></proof>
  </goal>
  <goal name="check_order&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="1057370"/></proof>
  </goal>
  <goal name="check_order&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.95" steps="1057374"/></proof>
  </goal>
  <goal name="check_order&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.99" steps="1057384"/></proof>
  </goal>
  <goal name="check_order&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.92" steps="1057388"/></proof>
  </goal>
  <goal name="check_order&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1057391"/></proof>
  </goal>
  <goal name="check_order&#39;vc.19" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="leq_trans" arg2="with" arg3="(polysquare (n + 1) ((cont_size * 2) + 1) 0 0)">
   <goal name="check_order&#39;vc.19.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="1.74" steps="1057394"/></proof>
   </goal>
   <goal name="check_order&#39;vc.19.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="polysquare_update" arg2="with" arg3="(n+1)">
    <goal name="check_order&#39;vc.19.1.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.36" steps="1126209"/></proof>
    </goal>
    <goal name="check_order&#39;vc.19.1.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="2.09" steps="1057394"/></proof>
    </goal>
    <goal name="check_order&#39;vc.19.1.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.99" steps="1057394"/></proof>
    </goal>
    <goal name="check_order&#39;vc.19.1.3" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.70" steps="1057394"/></proof>
    </goal>
    <goal name="check_order&#39;vc.19.1.4" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.79" steps="1057401"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.93" steps="1126256"/></proof>
  </goal>
  <goal name="check_order&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1057413"/></proof>
  </goal>
  <goal name="check_order&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.27" steps="1125466"/></proof>
  </goal>
  <goal name="check_order&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.30" steps="1126222"/></proof>
  </goal>
  <goal name="check_order&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.00" steps="1059101"/></proof>
  </goal>
  <goal name="check_order&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.00" steps="1127185"/></proof>
  </goal>
  <goal name="check_order&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.02" steps="1127901"/></proof>
  </goal>
  <goal name="check_order&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.84" steps="1060305"/></proof>
  </goal>
  <goal name="check_order&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.97" steps="1128780"/></proof>
  </goal>
  <goal name="check_order&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.00" steps="1129405"/></proof>
  </goal>
  <goal name="check_order&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1061346"/></proof>
  </goal>
  <goal name="check_order&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.95" steps="1129958"/></proof>
  </goal>
  <goal name="check_order&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.92" steps="1061577"/></proof>
  </goal>
  <goal name="check_order&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.98" steps="1061590"/></proof>
  </goal>
  <goal name="check_order&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.94" steps="1061603"/></proof>
  </goal>
  <goal name="check_order&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.95" steps="1061590"/></proof>
  </goal>
  <goal name="check_order&#39;vc.36" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(ket (n + 1) i)" arg2="(ket (n + 1) (mod1(i-bound+bound) (power 2 (n+1))))">
   <goal name="check_order&#39;vc.36.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures6">
    <goal name="check_order&#39;vc.36.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="2.30"/></proof>
    </goal>
    <goal name="check_order&#39;vc.36.0.1" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="((((2 * n) + 4) - n) - 1)" arg2="(n+2+1)">
     <goal name="check_order&#39;vc.36.0.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="check_order&#39;vc.36.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.95" steps="1130184"/></proof>
      </goal>
      <goal name="check_order&#39;vc.36.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.89" steps="1061585"/></proof>
      </goal>
      <goal name="check_order&#39;vc.36.0.1.0.2" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="2.29"/></proof>
      </goal>
      <goal name="check_order&#39;vc.36.0.1.0.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.81" steps="1061593"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="check_order&#39;vc.36.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.42" steps="1061609"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="check_order&#39;vc.36.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="mod_inf">
    <goal name="check_order&#39;vc.36.1.0" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.47" steps="1061614"/></proof>
    </goal>
    <goal name="check_order&#39;vc.36.1.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="1.93"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.48" steps="1130461"/></proof>
  </goal>
  <goal name="check_order&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1057418"/></proof>
  </goal>
  <goal name="check_order&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.96" steps="1127608"/></proof>
  </goal>
  <goal name="check_order&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.04" steps="1128383"/></proof>
  </goal>
  <goal name="check_order&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.87" steps="1059118"/></proof>
  </goal>
  <goal name="check_order&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.47" steps="1129368"/></proof>
  </goal>
  <goal name="check_order&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.17" steps="1637611"/></proof>
  </goal>
  <goal name="check_order&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.40" steps="1130066"/></proof>
  </goal>
  <goal name="check_order&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.69" steps="1060353"/></proof>
  </goal>
  <goal name="check_order&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.51" steps="1131268"/></proof>
  </goal>
  <goal name="check_order&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.57" steps="1131969"/></proof>
  </goal>
  <goal name="check_order&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="1061586"/></proof>
  </goal>
  <goal name="check_order&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.53" steps="1132415"/></proof>
  </goal>
  <goal name="check_order&#39;vc.50" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1061807"/></proof>
  </goal>
  <goal name="check_order&#39;vc.51" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="1061820"/></proof>
  </goal>
  <goal name="check_order&#39;vc.52" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.53" steps="1061833"/></proof>
  </goal>
  <goal name="check_order&#39;vc.53" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1061820"/></proof>
  </goal>
  <goal name="check_order&#39;vc.54" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(ket (n + 1) i)" arg2="(ket (n + 1) (mod1((mod1 (i - bound) (power 2 (n + 1)))+bound) (power 2 (n+1))))">
   <goal name="check_order&#39;vc.54.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures6">
    <goal name="check_order&#39;vc.54.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="1.92"/></proof>
    </goal>
    <goal name="check_order&#39;vc.54.0.1" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="((((2 * n) + 4) - n) - 1)" arg2="(n+2+1)">
     <goal name="check_order&#39;vc.54.0.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="check_order&#39;vc.54.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.51" steps="1132613"/></proof>
      </goal>
      <goal name="check_order&#39;vc.54.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.51" steps="1061823"/></proof>
      </goal>
      <goal name="check_order&#39;vc.54.0.1.0.2" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="2.18"/></proof>
      </goal>
      <goal name="check_order&#39;vc.54.0.1.0.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.86" steps="1061823"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="check_order&#39;vc.54.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.83" steps="1061839"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="check_order&#39;vc.54.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(mod1 (i - bound) (power 2 (n + 1)))" arg2="(power 2 (n + 1) + (i-bound) )">
    <goal name="check_order&#39;vc.54.1.0" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="ket_eq">
     <goal name="check_order&#39;vc.54.1.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.38" steps="1132613"/></proof>
     </goal>
     <goal name="check_order&#39;vc.54.1.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.46" steps="1061821"/></proof>
     </goal>
     <goal name="check_order&#39;vc.54.1.0.2" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="check_order&#39;vc.54.1.0.2.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="unicity_div_mod" arg2="with" arg3="1">
       <goal name="check_order&#39;vc.54.1.0.2.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="1.87"/></proof>
       </goal>
       <goal name="check_order&#39;vc.54.1.0.2.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.06" steps="1400761"/></proof>
       </goal>
       <goal name="check_order&#39;vc.54.1.0.2.0.2" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="1.84"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="check_order&#39;vc.54.1.1" expl="equality hypothesis" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="check_order&#39;vc.54.1.1.0" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="goal_comm">
      <goal name="check_order&#39;vc.54.1.1.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="unicity_div_mod" arg2="with" arg3="(-1)">
       <goal name="check_order&#39;vc.54.1.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="1.93"/></proof>
       </goal>
       <goal name="check_order&#39;vc.54.1.1.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.40" steps="1400758"/></proof>
       </goal>
       <goal name="check_order&#39;vc.54.1.1.0.0.2" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="2.16"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order&#39;vc.55" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.53" steps="1132893"/></proof>
  </goal>
  <goal name="check_order&#39;vc.56" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.88" steps="1067055"/></proof>
  </goal>
  <goal name="check_order&#39;vc.57" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.60" steps="1135795"/></proof>
  </goal>
  <goal name="check_order&#39;vc.58" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.88" steps="1067281"/></proof>
  </goal>
  <goal name="check_order&#39;vc.59" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1067294"/></proof>
  </goal>
  <goal name="check_order&#39;vc.60" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="1067307"/></proof>
  </goal>
  <goal name="check_order&#39;vc.61" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.03" steps="1136236"/></proof>
  </goal>
  <goal name="check_order&#39;vc.62" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1067601"/></proof>
  </goal>
  <goal name="check_order&#39;vc.63" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.99" steps="4598280"/></proof>
  </goal>
  <goal name="check_order&#39;vc.64" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.60" steps="1136602"/></proof>
  </goal>
  <goal name="check_order&#39;vc.65" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.75" steps="1142415"/></proof>
  </goal>
  <goal name="check_order&#39;vc.66" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.70" steps="1341487"/></proof>
  </goal>
  <goal name="check_order&#39;vc.67" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="2.25"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="uncheck_order&#39;vc" expl="VC for uncheck_order" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="uncheck_order&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.66" steps="970477"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.32" steps="970490"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.36" steps="970503"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.25" steps="1033751"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.22" steps="1033580"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.26" steps="1033980"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.16" steps="1033082"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.7" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="uncheck_order&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="uncheck_order&#39;vc.7.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="3.61" steps="1205210"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="uncheck_order&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.79" steps="1304674"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.9" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(check_order n bound i&#39;)" arg2="(check_order n bound i)">
   <goal name="uncheck_order&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="1.29" steps="971110"/></proof>
   </goal>
   <goal name="uncheck_order&#39;vc.9.1" expl="equality hypothesis" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="uncheck_order&#39;vc.9.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="check_order&#39;def">
     <goal name="uncheck_order&#39;vc.9.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="goal_comm">
      <goal name="uncheck_order&#39;vc.9.1.0.0.0" expl="apply premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="uncheck_order&#39;vc.9.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="check_order&#39;spec">
        <goal name="uncheck_order&#39;vc.9.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.84" steps="1347180"/></proof>
        </goal>
        <goal name="uncheck_order&#39;vc.9.1.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.95" steps="1347187"/></proof>
        </goal>
        <goal name="uncheck_order&#39;vc.9.1.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.35" steps="1347187"/></proof>
        </goal>
        <goal name="uncheck_order&#39;vc.9.1.0.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.99" steps="1347187"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="uncheck_order&#39;vc.9.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.34" steps="970909"/></proof>
     </goal>
     <goal name="uncheck_order&#39;vc.9.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.33" steps="970916"/></proof>
     </goal>
     <goal name="uncheck_order&#39;vc.9.1.0.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.35" steps="970916"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_restricted_modular_multiplier&#39;vc" expl="VC for cont_restricted_modular_multiplier" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_restricted_modular_multiplier&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.15" steps="1033205"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.38" steps="971449"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.36" steps="971453"/></proof>
   </goal>
   <goal name="cont_restricted_modular_multiplier&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.38" steps="971468"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.32" steps="971464"/></proof>
   </goal>
   <goal name="cont_restricted_modular_multiplier&#39;vc.3.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.34" steps="971477"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.20" steps="1034543"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.35" steps="971546"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.16" steps="1034674"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.38" steps="972250"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.45" steps="972254"/></proof>
   </goal>
   <goal name="cont_restricted_modular_multiplier&#39;vc.8.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.66" steps="972269"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.48" steps="972278"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.27" steps="1038339"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.46" steps="972324"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.40" steps="972468"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.41" steps="972669"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.22" steps="1037831"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.23" steps="1037858"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.16" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.16.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.88"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.17" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.17.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.43" steps="972891"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.18" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.18.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.43" steps="972902"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.49" steps="1327738"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="972952"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.46" steps="972966"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="972970"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.37" steps="972987"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.29" steps="1035610"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.41" steps="972930"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="972943"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="972958"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.32" steps="1039136"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.38" steps="973004"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="973261"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="988085"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.32" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.32.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="2.75" steps="1078461"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.33" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
   <goal name="cont_restricted_modular_multiplier&#39;vc.33.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
    <goal name="cont_restricted_modular_multiplier&#39;vc.33.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="Ensures4">
     <goal name="cont_restricted_modular_multiplier&#39;vc.33.0.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="2.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.34" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
   <goal name="cont_restricted_modular_multiplier&#39;vc.34.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures4">
    <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (restricted_modular_multiplier pick bound n (mod1 i bound)))" arg2="(n+(n+2))">
     <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.50" steps="1038780"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.74" steps="1038780"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.97" steps="1366097"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0.0.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.76" steps="1335481"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.56" steps="973433"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.35" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.35.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="restricted_modular_multiplier&#39;spec" arg2="with" arg3="(mod1 i&#39; bound)">
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="restricted_modular_multiplier&#39;spec" arg2="with" arg3="(mod1 i&#39; bound)">
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="8"><result status="valid" time="2.23" steps="1350596"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.22" steps="1350600"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.25" steps="1350607"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.22" steps="1350609"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.15" steps="1423114"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.20" steps="1350598"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.6" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.61" steps="1423114"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.12" steps="1350600"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.50" steps="1350607"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.26" steps="1350609"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.76" steps="1422957"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.5" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.37" steps="1350598"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.6" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.76" steps="1423114"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="971939"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.58" steps="1034017"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.38" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.33" steps="1045697"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.39" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="993659"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.40" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="978812"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.41" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.41.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(ket (n + 1) i)" arg2="(kronecker (ket 1 0) (ket n i))">
     <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(ket (n + 1) (mod1 (pick * i) bound))" arg2="(kronecker (ket 1 0 ) (ket n (mod1 (pick * i) bound)))">
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_to_sem">
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (place o 1 ((2 * n) + 4)))" arg2="(1 + n + ((n+2+1)))">
        <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_ket_l">
         <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.51" steps="1043790"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.56" steps="1043890"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="4.69"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.3" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.71" steps="1043787"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.3.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.61" steps="978751"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.3.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="3.75" steps="1222218"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.3.3" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.69" steps="1059936"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="2.63" steps="1043892"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
        <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
         <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="place_kron_right">
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.84" steps="1059751"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.61" steps="978753"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.62" steps="978758"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.53" steps="1059936"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0.0.4" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.88" steps="1045035"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_kets">
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="1.63" steps="978788"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.61" steps="978751"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.64" steps="1043787"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.1.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.73" steps="1059788"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.1.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.68" steps="1044974"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_kets">
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="1.63" steps="978778"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.61" steps="978751"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.55" steps="1043787"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.1.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.78" steps="1059788"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.1.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.35" steps="978753"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.42" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.42.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(ket (n + 1) i)" arg2="(kronecker (ket 1 0) (ket n i))">
     <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(ket (n + 1) (mod1 (pick * i) bound))" arg2="(kronecker (ket 1 0 ) (ket n (mod1 (pick * i) bound)))">
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_to_sem">
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (place o 1 ((2 * n) + 4)))" arg2="(1 + n + ((n+2+1)))">
        <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_ket_l">
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.63" steps="1041867"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.52" steps="1041873"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="4.32"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.3" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.57" steps="1041864"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.3.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.56" steps="978792"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.3.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="3.66" steps="1224412"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.3.3" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.76" steps="1057912"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="2.56" steps="1041875"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
        <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="place_kron_right">
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.73" steps="1057703"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.57" steps="978794"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.62" steps="978799"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="2.77" steps="1057912"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1.0.4" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="2.76" steps="1043105"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_kets">
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="1.58" steps="978824"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.58" steps="978792"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.66" steps="1041864"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.1.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.81" steps="1057764"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.1.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.73" steps="1042952"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_kets">
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="1.62" steps="978812"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.61" steps="978792"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.63" steps="1041864"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.1.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.82" steps="1057764"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.1.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.66" steps="978794"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.43" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.43.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cont_restricted_modular_multiplier&#39;vc.43.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures12" arg2="with" arg3="i&#39;">
     <goal name="cont_restricted_modular_multiplier&#39;vc.43.0.0.0" expl="postcondition" proved="true">
     <proof prover="8"><result status="valid" time="1.68" steps="978833"/></proof>
     </goal>
     <goal name="cont_restricted_modular_multiplier&#39;vc.43.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.65" steps="978844"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="modular_multiplier_with_ancillas&#39;vc" expl="VC for modular_multiplier_with_ancillas" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="modular_multiplier_with_ancillas&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.64" steps="972429"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.66" steps="972442"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="972457"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.65" steps="972470"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.59" steps="972463"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.61" steps="972909"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.6.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.54" steps="1035069"/></proof>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.6.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.59" steps="972924"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.7.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.59" steps="972930"/></proof>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.7.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.60" steps="972941"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.58" steps="1035596"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1060084"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.10.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.74" steps="1060088"/></proof>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.10.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.75" steps="1060103"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.11" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.11.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.80" steps="1060099"/></proof>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.11.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.73" steps="1060108"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1060125"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1060129"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1060250"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.83" steps="1127964"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1060283"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="1060383"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1127915"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.80" steps="1127937"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.20" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.20.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.77" steps="1060611"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="1060622"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.34" steps="1411970"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.23" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.07"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1060655"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="1060659"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.26" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="leq_trans" arg2="with" arg3="(polysquare (n + 1) (power cont_size 2 * 4)
     (cont_size * ((cont_size * (2 * adder_gate_bound n)) + 6)) 0)">
   <goal name="modular_multiplier_with_ancillas&#39;vc.26.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="1.76" steps="1060662"/></proof>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.26.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="polysquare_update" arg2="with" arg3="(n+1)">
    <goal name="modular_multiplier_with_ancillas&#39;vc.26.1.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="2.84" steps="1128063"/></proof>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.26.1.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.77" steps="1060662"/></proof>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.26.1.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.76" steps="1060662"/></proof>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.26.1.3" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.81" steps="1060662"/></proof>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.26.1.4" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.78" steps="1060669"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.71" steps="1128120"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.28" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.28.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.68" steps="1060668"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.29" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.29.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.74" steps="1129776"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.95" steps="1128872"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.87" steps="1130545"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1062414"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1131656"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.86" steps="1132335"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1063598"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1133165"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1133865"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.83" steps="1064821"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.39" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.39.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.73" steps="1064825"/></proof>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.39.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.82" steps="1064840"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1064849"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1064862"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1064866"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1064967"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.88" steps="1134711"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1065000"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1065083"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1065081"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1135046"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1060672"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.50" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1127669"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.51" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.91" steps="1128376"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.52" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1062367"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.53" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.93" steps="1129167"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.54" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1129907"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.55" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1063398"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.56" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.87" steps="1130612"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.57" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.88" steps="1131312"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.58" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1064459"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.59" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1064472"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.60" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.83" steps="1064487"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.61" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.90" steps="1064500"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.62" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1064504"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.63" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1064620"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.64" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1131932"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.65" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1064653"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.66" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="1064736"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.67" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1064739"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.68" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.86" steps="1132228"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.69" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1070391"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.70" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="1070404"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.71" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1070419"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.72" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1070432"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.73" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1070436"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.74" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1070522"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.75" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1138766"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.76" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.83" steps="1070555"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.77" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.05" steps="1139112"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.78" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.98" steps="4654392"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.79" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.00" steps="1139436"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.80" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.88" steps="1070972"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.81" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.65" steps="1148857"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.82" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1140744"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.83" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1071013"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.84" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(cont_restricted_modular_multiplier pick bound n i&#39;)" arg2="(cont_restricted_modular_multiplier pick bound n i)">
   <goal name="modular_multiplier_with_ancillas&#39;vc.84.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(check_order n bound i&#39;)" arg2="(check_order n bound i)">
    <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="1.78" steps="1071039"/></proof>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="check_order&#39;def">
     <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="goal_comm">
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0.0" expl="apply premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="check_order&#39;spec">
        <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.45" steps="1415470"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.34" steps="1493494"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.47" steps="1415477"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.53" steps="1415477"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.82" steps="1071043"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.83" steps="1139391"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.78" steps="1071050"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.84.1" expl="equality hypothesis" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0" expl="equality hypothesis" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="cont_restricted_modular_multiplier&#39;spec" arg2="with" arg3="i">
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="cont_restricted_modular_multiplier&#39;spec" arg2="with" arg3="i">
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.0" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="2.51" steps="1472541"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.53" steps="1472545"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.52" steps="1472552"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.55" steps="1472554"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.55" steps="1472552"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.61" steps="1472543"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.6" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.54" steps="1472552"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.53" steps="1472545"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.58" steps="1472552"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.55" steps="1472554"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.62" steps="1472552"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.5" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.61" steps="1472543"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.6" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.51" steps="1472552"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.85" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.59" steps="1035054"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.86" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="972921"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.87" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.60" steps="1035163"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.88" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.44" steps="1036339"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.89" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.60" steps="1038051"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.90" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.83" steps="1128286"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.91" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1060154"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.92" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.88" steps="1130440"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.93" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1131531"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.94" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1060300"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.95" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1130683"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.96" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.88" steps="1416417"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.97" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.10"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.98" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1130692"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.99" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.67" steps="1060550"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.100" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1060561"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.101" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.64" steps="1060565"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.102" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.56" steps="1060568"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.103" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1060571"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.104" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1130779"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.105" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1060601"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.106" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1130298"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.107" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1128995"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.108" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.54" steps="1131127"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.109" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1062315"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.110" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1132177"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.111" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.96" steps="1130773"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.112" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.96" steps="1132929"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.113" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1063564"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.114" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.96" steps="1133846"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.115" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.96" steps="1134555"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.116" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1133218"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.117" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.83" steps="1064720"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.118" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.81" steps="1135308"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.119" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.97" steps="1136550"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.120" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1064834"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.121" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.05" steps="1136333"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.122" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1135688"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.123" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="1060605"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.124" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1130296"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.125" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.66" steps="1131087"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.126" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1062294"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.127" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.66" steps="1132010"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.128" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.68" steps="1132624"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.129" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1063340"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.130" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.63" steps="1133315"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.131" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.55" steps="1133978"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.132" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1064381"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.133" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.88" steps="1134523"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.134" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1064414"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.135" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1064588"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.136" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1064591"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.137" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.60" steps="1134932"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.138" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.60" steps="1140757"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.139" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.83" steps="1069887"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.140" expl="precondition" proved="true">
  <proof prover="10"><result status="valid" time="0.95" steps="4977999"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.141" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1142110"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.142" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.00" steps="1138506"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.143" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.87" steps="1069929"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.144" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.65" steps="1140851"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.145" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.00" steps="1142181"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.146" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1141239"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.147" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.97"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.148" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1141732"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.149" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1070385"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.150" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.64" steps="1150919"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.151" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="2.24"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.152" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
   <goal name="modular_multiplier_with_ancillas&#39;vc.152.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(kronecker (ket 1 0) (ket n i))" arg2="(ket (n+1) i)">
    <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(kronecker (ket (n + 2) 0) (ket 1 0))" arg2="(ket (n+3) 0)" arg3="in" arg4="Ensures1">
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
      <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(kronecker (ket 1 0) (ket n (mod1 (pick * i) bound)))" arg2="( (ket (n+1) (mod1 (pick * i) bound)))">
       <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="Ensures1">
        <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.73" steps="1070469"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_kets">
        <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="1.74" steps="1070503"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.58" steps="1070467"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.1.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.01" steps="1151142"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.1.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.92" steps="1151116"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.1.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.01" steps="1152453"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="4.51" steps="1677043"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_kets">
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.1.0" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.74" steps="1070470"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.85" steps="1070439"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.1.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.95" steps="1151022"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.1.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.92" steps="1150996"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.1.4" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.83" steps="1070448"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.153" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
   <goal name="modular_multiplier_with_ancillas&#39;vc.153.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(kronecker (ket 1 0) (ket n i))" arg2="(ket (n+1) i)">
    <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(kronecker (ket (n + 2) 0) (ket 1 0))" arg2="(ket (n+3) 0)" arg3="in" arg4="Ensures1">
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="Ensures1">
      <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.79" steps="1070527"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_kets">
      <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="1.78" steps="1070543"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.83" steps="1141841"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.73" steps="1070520"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.1.3" expl="rewrite premises" proved="true">
      <proof prover="10"><result status="valid" time="4.96" steps="10196046"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.1.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.88" steps="1142752"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_kets">
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.1.0" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.73" steps="1070551"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.76" steps="1070520"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.1.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.95" steps="1141841"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.1.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="3.09" steps="1142752"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.1.4" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.82" steps="1070529"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.154" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.99" steps="1085837"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.155" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.155.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="sequence_eq">
     <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.99" steps="1143360"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.1" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="4.66"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="uncheck_order&#39;spec" arg2="with" arg3="i">
       <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="uncheck_order&#39;spec" arg2="with" arg3="i">
        <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.58" steps="1472041"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.55" steps="1472045"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="4.01" steps="1548995"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="4.07" steps="1550725"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.0.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.52" steps="1472052"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.53" steps="1472045"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="4.00" steps="1548995"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="4.06" steps="1550549"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.53" steps="1472052"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permut_modular_multiplier&#39;vc" expl="VC for permut_modular_multiplier" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permut_modular_multiplier&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="980211"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.66" steps="980224"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="980239"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.61" steps="1046419"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="980277"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.5" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_bijective_auto">
   <goal name="permut_modular_multiplier&#39;vc.5.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="permut_modular_multiplier&#39;vc.5.0.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="permut_modular_multiplier&#39;vc.5.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="4.22" steps="1397195"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permut_modular_multiplier&#39;vc.5.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="permut_modular_multiplier&#39;vc.5.1.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="permut_modular_multiplier&#39;vc.5.1.0.0" expl="apply premises" proved="true">
     <transf name="exists" proved="true" arg1="(if e&#39; = 2*n+3 then 0 else e&#39; +1)">
      <goal name="permut_modular_multiplier&#39;vc.5.1.0.0.0" proved="true">
      <proof prover="8"><result status="valid" time="4.21" steps="1398105"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="983345"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="983358"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.57" steps="983373"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.70" steps="1048979"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.64" steps="983411"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.66" steps="983566"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.69" steps="983579"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.65" steps="983594"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.72" steps="1049167"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.65" steps="983632"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.65" steps="983799"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.74" steps="1048611"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.67" steps="984016"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="984027"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="984031"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.23" steps="1333651"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.22" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.92"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.70" steps="1048648"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.07" steps="1333766"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.64" steps="984114"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.26" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures31">
  </transf>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="984266"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="984279"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.69" steps="984294"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.71" steps="1049610"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="984332"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.32" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_bijective_auto">
   <goal name="permut_modular_multiplier&#39;vc.32.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="permut_modular_multiplier&#39;vc.32.0.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="permut_modular_multiplier&#39;vc.32.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="4.15" steps="1405959"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permut_modular_multiplier&#39;vc.32.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="permut_modular_multiplier&#39;vc.32.1.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="permut_modular_multiplier&#39;vc.32.1.0.0" expl="apply premises" proved="true">
     <transf name="exists" proved="true" arg1="(if e&#39; = 2*n+3 then 0 else e&#39; +1)">
      <goal name="permut_modular_multiplier&#39;vc.32.1.0.0.0" proved="true">
      <proof prover="8"><result status="valid" time="4.24" steps="1406699"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1000905"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.34" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.76" steps="1050436"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.35" expl="postcondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="permut_modular_multiplier&#39;vc.35.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="leq_trans" arg2="with" arg3="(polysquare (n + 2)
     (0 + (((power cont_size 2 * 4) + (8 * cont_size)) + 4))
     (4 + ((cont_size * ((cont_size * (2 * adder_gate_bound n)) + 6)) + 8))
     (0 + (cont_size * 6)))">
    <goal name="permut_modular_multiplier&#39;vc.35.0.0" expl="apply premises" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="permut_modular_multiplier&#39;vc.35.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="result&#39;def">
      <goal name="permut_modular_multiplier&#39;vc.35.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="Ensures20">
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="permut_modular_multiplier&#39;vc.35.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.59" steps="985968"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.36" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="permut_modular_multiplier&#39;vc.36.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="permut_modular_multiplier&#39;vc.36.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(modular_multiplier_with_ancillas pick bound n 0)" arg2="(modular_multiplier_with_ancillas pick bound n i)">
     <goal name="permut_modular_multiplier&#39;vc.36.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="path_sem_to_sem">
      <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(width
   (with_permutation (modular_multiplier_with_ancillas pick bound n i)
    (fun (i1:int) -&gt; if i1 &lt; 1 then (i1 + ((2 * n) + 4)) - 1 else i1 - 1)))" arg2="(n+(n+4))">
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_ket_l">
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.83" steps="1050655"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.82" steps="1050657"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="4.69"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.64" steps="1239324"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec5">
         <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="4.99" steps="1651243"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="set_bijective_auto">
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="5.72"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(width (modular_multiplier_with_ancillas pick bound n i))" arg2="((2 * n) + 4)">
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
             <transf name="exists" proved="true" arg1="(if e&#39; = 2*n+3 then 0 else e&#39; +1)">
              <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.1.0.0.0.0" proved="true">
              <proof prover="8"><result status="valid" time="5.42" steps="1732348"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.1.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="5.04" steps="1651231"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(ket (n + 4) 0)" arg2="(kronecker (ket (n + 3) 0) (ket 1 0))">
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
         <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="with_permutation_kronecker_gen">
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="4.39"/></proof>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.61" steps="1050656"/></proof>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.93" steps="1066940"/></proof>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(((2 * n) + 4) - 1)" arg2="(n+ (n+3))">
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_ket_l">
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.73" steps="1050655"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.79" steps="1050650"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3.0.2" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="4.37"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3.0.3" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="3.77" steps="1238328"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="1.67" steps="985955"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.4" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.95" steps="1066940"/></proof>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(((2 * n) + 4) - 1)" arg2="(n+ (n+3))">
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_ket_l">
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.78" steps="1050655"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.75" steps="1050650"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5.0.2" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="4.35"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5.0.3" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="3.82" steps="1238328"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="1.63" steps="985955"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.6" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.96" steps="1066965"/></proof>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.7" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_is_a_ket_basis_elt">
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.7.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="4.33"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.7.1" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="ket_is_a_ket_basis_elt">
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.7.1.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.75" steps="1050650"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.7.1.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="3.98" steps="1239631"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="sem_to_path_sem">
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(kronecker (ket (n + 2) 0) (ket 1 0))" arg2="(ket (n+3) 0)" arg3="in" arg4="Ensures16">
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="4.60"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.1" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_kets">
             <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.1.0" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="1.71" steps="985965"/></proof>
             </goal>
             <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.77" steps="1050650"/></proof>
             </goal>
             <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.1.2" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.69" steps="985939"/></proof>
             </goal>
             <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.1.3" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="3.83" steps="1239613"/></proof>
             </goal>
             <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.1.4" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.60" steps="1066674"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_kets">
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="1.68" steps="985979"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.1.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.77" steps="1050650"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.1.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.66" steps="985939"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.1.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.79" steps="1239631"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.1.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.85" steps="1066674"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="permut_modular_multiplier&#39;vc.36.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="modular_multiplier_with_ancillas&#39;spec" arg2="with" arg3="i">
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="modular_multiplier_with_ancillas&#39;spec" arg2="with" arg3="i">
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="2.33" steps="1367819"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.36" steps="1367823"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.37" steps="1367830"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.40" steps="1367832"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.75" steps="1440157"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.5" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.44" steps="1367821"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.6" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.77" steps="1440157"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.44" steps="1367823"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.08" steps="1367830"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.37" steps="1367832"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.65" steps="1440152"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.5" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.37" steps="1367821"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.6" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.70" steps="1440157"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.37" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="permut_modular_multiplier&#39;vc.37.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="permut_modular_multiplier&#39;vc.37.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(modular_multiplier_with_ancillas pick bound n 0)" arg2="(modular_multiplier_with_ancillas pick bound n i)">
     <goal name="permut_modular_multiplier&#39;vc.37.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="path_sem_to_sem">
      <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(width
   (with_permutation (modular_multiplier_with_ancillas pick bound n i)
    (fun (i1:int) -&gt; if i1 &lt; 1 then (i1 + ((2 * n) + 4)) - 1 else i1 - 1)))" arg2="(n+(n+4))">
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_ket_l">
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.75" steps="1050843"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.74" steps="1050843"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.92" steps="1250523"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.74" steps="1239623"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec5">
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="5.12" steps="1648963"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="set_bijective_auto">
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="5.43" steps="1733456"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(width (modular_multiplier_with_ancillas pick bound n i))" arg2="((2 * n) + 4)">
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
             <transf name="exists" proved="true" arg1="(if e&#39; = 2*n+3 then 0 else e&#39; +1)">
              <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.1.0.0.0.0" proved="true">
              <proof prover="8"><result status="valid" time="5.55" steps="1732916"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.1.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="5.17" steps="1648802"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(ket (n + 4) 0)" arg2="(kronecker (ket (n + 3) 0) (ket 1 0))">
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="with_permutation_kronecker_gen">
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="4.45"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.50" steps="1050853"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.91" steps="1067123"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(((2 * n) + 4) - 1)" arg2="(n+ (n+3))">
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_ket_l">
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.71" steps="1050843"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.71" steps="1050843"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3.0.2" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.79" steps="1250523"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3.0.3" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.78" steps="1238645"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="1.67" steps="986161"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.4" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.87" steps="1067123"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(((2 * n) + 4) - 1)" arg2="(n+ (n+3))">
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_ket_l">
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.72" steps="1050843"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.69" steps="1050843"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5.0.2" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.86" steps="1250523"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5.0.3" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.72" steps="1238645"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="1.56" steps="986161"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.6" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.98" steps="1067148"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.7" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_is_a_ket_basis_elt">
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.7.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="4.01" steps="1244018"/></proof>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.7.1" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="ket_is_a_ket_basis_elt">
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.7.1.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.80" steps="1050843"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.7.1.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.92" steps="1239983"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="sem_to_path_sem">
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(kronecker (ket (n + 2) 0) (ket 1 0))" arg2="(ket (n+3) 0)" arg3="in" arg4="Ensures16">
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="4.42"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.1" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_kets">
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.1.0" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="1.60" steps="986171"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.86" steps="1050843"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.1.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.78" steps="986145"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.1.3" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="3.90" steps="1239960"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.1.4" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.93" steps="1066871"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_kets">
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="1.74" steps="986171"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.1.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.75" steps="1050843"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.1.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.61" steps="986145"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.1.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.87" steps="1239983"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.1.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.90" steps="1066871"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="permut_modular_multiplier&#39;vc.37.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="modular_multiplier_with_ancillas&#39;spec" arg2="with" arg3="i">
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="modular_multiplier_with_ancillas&#39;spec" arg2="with" arg3="i">
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="2.41" steps="1368030"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.42" steps="1368034"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.36" steps="1368041"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.35" steps="1368043"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.66" steps="1440556"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.5" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.37" steps="1368032"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.6" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.70" steps="1440556"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.41" steps="1368034"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.38" steps="1368041"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.44" steps="1368043"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.69" steps="1440553"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.5" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.43" steps="1368032"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.6" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.62" steps="1440556"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="modular_multiplier&#39;vc" expl="VC for modular_multiplier" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="modular_multiplier&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.96" steps="1304147"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.69" steps="974933"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.97" steps="1312778"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.56" steps="975008"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.04" steps="1313861"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.66" steps="1039971"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.75" steps="1040803"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.7" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="x" arg2="(ket n (ket_to_int x))">
   <goal name="modular_multiplier&#39;vc.7.0" expl="precondition" proved="true">
   <transf name="case" proved="true" arg1="(0&lt;= ket_to_int x &lt; bound )">
    <goal name="modular_multiplier&#39;vc.7.0.0" expl="true case (precondition)" proved="true">
    <transf name="exists" proved="true" arg1="(ket n (mod1 (mod1 pick bound * (ket_to_int x)) bound))">
     <goal name="modular_multiplier&#39;vc.7.0.0.0" proved="true">
     <transf name="apply" proved="true" arg1="sem_to_path_sem">
      <goal name="modular_multiplier&#39;vc.7.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="2.25"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="modular_multiplier&#39;vc.7.0.1" expl="false case (precondition)" proved="true">
    <transf name="exists" proved="true" arg1="(ket n (ket_to_int x))">
     <goal name="modular_multiplier&#39;vc.7.0.1.0" proved="true">
     <transf name="apply" proved="true" arg1="sem_to_path_sem">
      <goal name="modular_multiplier&#39;vc.7.0.1.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="Ensures">
       <goal name="modular_multiplier&#39;vc.7.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="modular_multiplier&#39;vc.7.0.1.0.0.0.0" proved="true">
        <proof prover="0"><result status="valid" time="2.23"/></proof>
        </goal>
        <goal name="modular_multiplier&#39;vc.7.0.1.0.0.0.1" proved="true">
        <transf name="replace" proved="true" arg1="n" arg2="(ket_length x)">
         <goal name="modular_multiplier&#39;vc.7.0.1.0.0.0.1.0" proved="true">
         <proof prover="0"><result status="valid" time="2.27"/></proof>
         </goal>
         <goal name="modular_multiplier&#39;vc.7.0.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="4.66" steps="1356572"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="modular_multiplier&#39;vc.7.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="n" arg2="(ket_length x)">
    <goal name="modular_multiplier&#39;vc.7.1.0" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="2.88" steps="1041262"/></proof>
    </goal>
    <goal name="modular_multiplier&#39;vc.7.1.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="4.61" steps="1356049"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.67" steps="1049544"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.97" steps="1089519"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.78" steps="1050422"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.11" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="modular_multiplier&#39;vc.11.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="4.27" steps="1336468"/></proof>
   </goal>
   <goal name="modular_multiplier&#39;vc.11.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="Ensures10">
    <goal name="modular_multiplier&#39;vc.11.1.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (permut_modular_multiplier (mod1 pick bound) bound n) - (n + 4))" arg2="n">
     <goal name="modular_multiplier&#39;vc.11.1.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="4.22" steps="1335135"/></proof>
     </goal>
     <goal name="modular_multiplier&#39;vc.11.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.38" steps="982633"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="modular_multiplier&#39;vc.11.1.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="sem_to_path_sem">
     <goal name="modular_multiplier&#39;vc.11.1.1.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(mod1 (pick * i) bound)" arg2="(mod1 (mod1 pick bound * i) bound)">
      <goal name="modular_multiplier&#39;vc.11.1.1.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="Ensures13">
       <goal name="modular_multiplier&#39;vc.11.1.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.41" steps="982635"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="modular_multiplier&#39;vc.11.1.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="1"><result status="valid" time="6.66" steps="287020"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier&#39;vc.12" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="modular_multiplier&#39;vc.12.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="3.97" steps="1336790"/></proof>
   </goal>
   <goal name="modular_multiplier&#39;vc.12.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="Ensures11">
    <goal name="modular_multiplier&#39;vc.12.1.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (permut_modular_multiplier (mod1 pick bound) bound n) - (n + 4))" arg2="n">
     <goal name="modular_multiplier&#39;vc.12.1.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.83" steps="1335258"/></proof>
     </goal>
     <goal name="modular_multiplier&#39;vc.12.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.60" steps="982795"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="modular_multiplier&#39;vc.12.1.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="sem_to_path_sem">
     <goal name="modular_multiplier&#39;vc.12.1.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="Ensures13">
      <goal name="modular_multiplier&#39;vc.12.1.1.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.40" steps="982797"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="multiplier_gate_bound&#39;vc" expl="VC for multiplier_gate_bound" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="multiplier_gate_bound&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_gate_bound&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.57" steps="975861"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_gate_bound&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_gate_bound&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.67" steps="1038116"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_gate_bound&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.84" steps="1302127"/></proof>
  </goal>
  <goal name="multiplier_gate_bound&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_gate_bound&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.81"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_gate_bound&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_gate_bound&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.49" steps="1038229"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_gate_bound&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="976163"/></proof>
  </goal>
  <goal name="multiplier_gate_bound&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="5.10" steps="272068"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
