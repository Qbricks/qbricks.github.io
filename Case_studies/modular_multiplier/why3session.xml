<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="8" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="10" name="Z3" version="4.8.6" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="modular_multiplier.mlw"/>
<theory name="Multiplier" proved="true">
 <goal name="multiplier_pre&#39;vc" expl="VC for multiplier_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="multiplier_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.49" steps="957300"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.55" steps="957517"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="957530"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.52" steps="958110"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.52" steps="958123"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.47" steps="1024415"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.50" steps="1024483"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="958625"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.69" steps="1028034"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.9" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(forall a b c. a*b*c = a * (b*c))">
   <goal name="multiplier_pre&#39;vc.9.0" expl="asserted formula" proved="true">
   <proof prover="8"><result status="valid" time="1.64" steps="965713"/></proof>
   </goal>
   <goal name="multiplier_pre&#39;vc.9.1" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="h">
    <goal name="multiplier_pre&#39;vc.9.1.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="compat_int_order_mult">
     <goal name="multiplier_pre&#39;vc.9.1.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.70" steps="1028140"/></proof>
     </goal>
     <goal name="multiplier_pre&#39;vc.9.1.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="multiplier_pre&#39;vc.9.1.0.1.0" proved="true">
      <proof prover="8"><result status="valid" time="4.26" steps="1254680"/></proof>
      </goal>
      <goal name="multiplier_pre&#39;vc.9.1.0.1.1" proved="true">
      <proof prover="8"><result status="valid" time="3.79" steps="1256694"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_pre&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="965689"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="965702"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="966123"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.56" steps="966134"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="966410"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.64" steps="966423"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.69" steps="1029576"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1029645"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="966907"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="957305"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.55" steps="957318"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.52" steps="957913"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.53" steps="957945"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="964785"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="964798"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.53" steps="1028185"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.59" steps="1027465"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.66" steps="965296"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.28" expl="variant decrease" proved="true">
  <proof prover="8"><result status="valid" time="1.67" steps="965731"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.64" steps="1028940"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.66" steps="1028882"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="4.56" steps="1404630"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.86" steps="1118110"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.33" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="multiplier_pre&#39;vc.33.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="2.52" steps="1031904"/></proof>
   </goal>
   <goal name="multiplier_pre&#39;vc.33.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="multiplier_pre&#39;vc.33.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="multiplier_pre&#39;vc.33.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H4">
      <goal name="multiplier_pre&#39;vc.33.1.0.0.0" expl="postcondition" proved="true">
      <transf name="assert" proved="true" arg1="(forall a b c. a* (b+c) = a*b + a*c)">
       <goal name="multiplier_pre&#39;vc.33.1.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="8"><result status="valid" time="2.31" steps="1376727"/></proof>
       </goal>
       <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="h">
        <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="leq_trans_add">
         <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="4.69" steps="1453433"/></proof>
         </goal>
         <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.1" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="H17">
          <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.1.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="((cont_size * adder_gate_bound n) * 1)" arg2="((adder_gate_bound n *cont_size ) )">
           <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="leq_trans_mult">
            <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="4.73" steps="1453298"/></proof>
            </goal>
            <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="2.45"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="multiplier_pre&#39;vc.33.1.0.0.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="2.95" steps="1376748"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_pre&#39;vc.34" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H4">
   <goal name="multiplier_pre&#39;vc.34.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="multiplier_pre&#39;vc.34.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="multiplier_pre&#39;vc.34.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ind_isum_one">
      <goal name="multiplier_pre&#39;vc.34.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="path_sem_to_sem">
        <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(width result)" arg2="(n+ (n+1+1))">
         <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="4.73" steps="1358941"/></proof>
          </goal>
          <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="4.02" steps="1358950"/></proof>
          </goal>
          <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="2.67"/></proof>
          </goal>
          <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="5.80" steps="1586830"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="3.30" steps="1286395"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="H11">
         <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(ket n i)" arg2="(bv_to_ket (int_to_bv i n))">
          <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="case" proved="true" arg1="(getbv (int_to_bv i n) @ 0 = 0)">
           <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0" expl="true case (apply premises)" proved="true">
           <transf name="replace" proved="true" arg1="(cont o 0 n o2)" arg2="(cont o3 0 n o5)">
            <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="H22">
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
             <proof prover="0"><result status="valid" time="2.77"/></proof>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="replace" proved="true" arg1="(width o3)" arg2="(n+1+1)
">
              <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_ket_l">
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="4.61" steps="1358976"/></proof>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="3.26" steps="1286410"/></proof>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="2.55"/></proof>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1.0.3" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.73" steps="1286400"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="2.82" steps="1286419"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="2.05"/></proof>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.0.3" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="3.31" steps="1286403"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="2.99" steps="1303693"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1" expl="false case (apply premises)" proved="true">
           <transf name="replace" proved="true" arg1="(cont o 0 n o2)" arg2="(cont o3 0 n o5)">
            <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0" expl="false case (apply premises)" proved="true">
            <transf name="rewrite" proved="true" arg1="H21">
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0" expl="false case (apply premises)" proved="true">
             <transf name="replace" proved="true" arg1="(b + (pick * ((getbv (int_to_bv i n) @ 0) * power 2 (n - 1))))" arg2="((pick * ( power 2 (n - 1)))+b)">
              <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.0" expl="false case (apply premises)" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_eq">
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
               </transf>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="sem_to_path_sem">
                <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
                <transf name="replace" proved="true" arg1="(apply_qft (n + 1) b)" arg2="(apply_qft (n + 1) (mod1 b bound))">
                 <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="5.79" steps="1593752"/></proof>
                 </goal>
                 <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="0"><result status="valid" time="2.42"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="0"><result status="valid" time="2.20"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="replace" proved="true" arg1="(width o3)" arg2="(n+1+1)
">
              <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_ket_l">
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="4.62" steps="1358975"/></proof>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.99" steps="1286414"/></proof>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="5.69" steps="1589554"/></proof>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1.0.3" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="3.15" steps="1286404"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="2.82" steps="1286423"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="2.36"/></proof>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.0.3" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="3.46"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="2.84" steps="1303697"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="multiplier_pre&#39;vc.34.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
          <proof prover="0"><result status="valid" time="2.16"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="multiplier_pre&#39;vc.34.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.62" steps="1286388"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="multiplier_pre&#39;vc.34.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="multiplier_pre&#39;vc.34.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="multiplier_pre&#39;vc.34.1.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="path_sem_to_sem">
      <goal name="multiplier_pre&#39;vc.34.1.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(width result)" arg2="(n+ (n+1+1))">
       <goal name="multiplier_pre&#39;vc.34.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_ket_l">
        <goal name="multiplier_pre&#39;vc.34.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="5.37" steps="1453558"/></proof>
        </goal>
        <goal name="multiplier_pre&#39;vc.34.1.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="4.32" steps="1453567"/></proof>
        </goal>
        <goal name="multiplier_pre&#39;vc.34.1.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="2.45"/></proof>
        </goal>
        <goal name="multiplier_pre&#39;vc.34.1.0.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="6.31" steps="1694753"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="multiplier_pre&#39;vc.34.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="2.80" steps="1376802"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="multiplier_pre&#39;vc.34.1.0.0.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="H11">
       <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="sem_to_path_sem">
        <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="sem_comp" arg2="with" arg3="(kronecker (ket n i)
    (kronecker
     (apply_qft (n + 1)
      (mod1
       (b
        + (pick
           * ind_isum
             (fun (k:int) -&gt;
               (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))
             0 ((j - 1) + 1)))
       bound))
     (ket 1 0)))">
         <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(j-1)" arg2="o15">
          <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="H13">
           <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.24" steps="1376790"/></proof>
           </goal>
           <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.99" steps="1376790"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="2.92" steps="1376788"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(ket n i)" arg2="(bv_to_ket (int_to_bv i n))">
          <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
          <transf name="case" proved="true" arg1="(getbv (int_to_bv i n) @ j = 0)
">
           <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0" expl="true case (apply premises)" proved="true">
           <transf name="apply" proved="true" arg1="path_sem_to_sem">
            <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(width
o16)" arg2="(n+(n+1+1))">
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="kronecker_ket_l">
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="4.82" steps="1453632"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="4.45" steps="1453641"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="6.40" steps="1699211"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0.0.3" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="6.24" steps="1701897"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="4.34" steps="1453639"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="o16" arg2="(cont o20 j n o22)">
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="H36">
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(ind_isum
             (fun (k:int) -&gt;
               (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))
             0 (j + 1))" arg2="(ind_isum
             (fun (k:int) -&gt;
               (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))
             0 (j -1 + 1))">
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
               </transf>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
               <transf name="rewrite" proved="true" arg1="ind_isum_re">
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
                <transf name="replace" proved="true" arg1="(j+1-1)" arg2="j">
                 <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0" expl="equality hypothesis" proved="true">
                 <transf name="rewrite" proved="true" arg1="add_zero">
                  <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                  <transf name="replace" proved="true" arg1="(j-1+1)" arg2="j">
                   <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
                   <transf name="compute_specified" proved="true" >
                   </transf>
                   </goal>
                   <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="8"><result status="valid" time="2.71" steps="1376824"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.48" steps="1394021"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="8"><result status="valid" time="2.61" steps="1376824"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="2.79" steps="1376826"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
              <transf name="replace" proved="true" arg1="(width
o20)" arg2="((n+1+1))">
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="4.35" steps="1453627"/></proof>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.90" steps="1376817"/></proof>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="2.69"/></proof>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1.0.3" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.88" steps="1376807"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="2.90" steps="1376826"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
              <proof prover="0"><result status="valid" time="2.62"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.0.3" expl="rewrite premises" proved="true">
              <proof prover="0"><result status="valid" time="2.75"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="3.21" steps="1393999"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1" expl="false case (apply premises)" proved="true">
           <transf name="apply" proved="true" arg1="path_sem_to_sem">
            <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(width
o16)" arg2="(n+(n+1+1))">
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="kronecker_ket_l">
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="4.68" steps="1453623"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="4.79" steps="1453632"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0.0.2" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="2.49"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0.0.3" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="6.91" steps="1701999"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="4.92" steps="1453635"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="o16" arg2="(cont o20 j n o22)">
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="H35">
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="kronecker_eq">
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
               </transf>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="sem_to_path_sem">
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0" expl="apply premises" proved="true">
                <transf name="replace" proved="true" arg1="(b
      + (pick
         * ind_isum
           (fun (k:int) -&gt;
             (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))
           0 (j + 1)))" arg2="((pick * power 2 ((n - j) - 1))  +(b
      + (pick
         * ind_isum
           (fun (k:int) -&gt;
             (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))
           0 (j - 1+1))) )">
                 <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.0" expl="apply premises" proved="true">
                 <transf name="replace" proved="true" arg1="(pick * power 2 ((n - j) - 1))" arg2="o21">
                  <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="H37">
                  </transf>
                  </goal>
                  <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="8"><result status="valid" time="3.24" steps="1376821"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1" expl="equality hypothesis" proved="true">
                 <transf name="rewrite" proved="true" arg1="ind_isum_re">
                  <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
                  <transf name="assert" proved="true" arg1="(forall a p i i&#39; r r&#39;. r = r&#39; -&gt; i = i&#39; -&gt; a+ (p * (i+r)) = p*r&#39; + (a + p*i&#39;))">
                   <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.0" expl="asserted formula" proved="true">
                   <proof prover="8"><result status="valid" time="2.99" steps="1377019"/></proof>
                   </goal>
                   <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
                   <transf name="apply" proved="true" arg1="h">
                    <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.1.0" expl="apply premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
                     <proof prover="0"><result status="valid" time="4.08"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.1.1" expl="apply premises" proved="true">
                    <transf name="replace" proved="true" arg1="(j-1+1)" arg2="(j+1-1)">
                     <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.1.1.0" expl="apply premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                     </transf>
                     </goal>
                     <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.0.1.1.1" expl="equality hypothesis" proved="true">
                     <proof prover="8"><result status="valid" time="2.91" steps="1377044"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                  <proof prover="8"><result status="valid" time="3.04" steps="1376830"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
              <transf name="replace" proved="true" arg1="(width
o20)" arg2="((n+1+1))">
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="kronecker_ket_l">
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="4.96" steps="1453623"/></proof>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1.0.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="3.01" steps="1376821"/></proof>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1.0.2" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="2.53"/></proof>
                </goal>
                <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1.0.3" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.99" steps="1376811"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.1.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="3.35" steps="1376830"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.2" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="6.57" steps="1700657"/></proof>
              </goal>
              <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.0.3" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="6.47" steps="1697302"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.0.1.1.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="3.19" steps="1394005"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
          <proof prover="0"><result status="valid" time="2.52"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="multiplier_pre&#39;vc.34.1.0.0.1.0.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="4.56" steps="1453989"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_pre&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.97" steps="957248"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.36" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.99" steps="964301"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.37" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="964305"/></proof>
  </goal>
  <goal name="multiplier_pre&#39;vc.38" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(pick * i)" arg2="(pick
           * ind_isum
             (fun (k:int) -&gt;
               (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))
             0 ((n - 1) + 1))">
   <goal name="multiplier_pre&#39;vc.38.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures2">
    <goal name="multiplier_pre&#39;vc.38.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.56" steps="964382"/></proof>
    </goal>
    <goal name="multiplier_pre&#39;vc.38.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.62" steps="964382"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="multiplier_pre&#39;vc.38.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(pick * i)" arg2="(pick * bv_to_int (int_to_bv i n))">
    <goal name="multiplier_pre&#39;vc.38.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
     <goal name="multiplier_pre&#39;vc.38.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(n-1+1)" arg2="n">
      <goal name="multiplier_pre&#39;vc.38.1.0.0.0" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(length1 (int_to_bv i n))" arg2="n">
       <goal name="multiplier_pre&#39;vc.38.1.0.0.0.0" expl="equality hypothesis" proved="true">
       <transf name="replace" proved="true" arg1="(fun (k:int) -&gt; (getbv (int_to_bv i n) @ k) * power 2 ((n - 1) - k))" arg2="(fun (k:int) -&gt; (getbv (int_to_bv i n) @ k) * power 2 ((n - k) - 1))">
        <goal name="multiplier_pre&#39;vc.38.1.0.0.0.0.0" expl="equality hypothesis" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
        <goal name="multiplier_pre&#39;vc.38.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="set_equal_func">
         <goal name="multiplier_pre&#39;vc.38.1.0.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="4.20" steps="1252217"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="multiplier_pre&#39;vc.38.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="3.85" steps="1256916"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="multiplier_pre&#39;vc.38.1.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="1.57" steps="964380"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="multiplier_pre&#39;vc.38.1.1" expl="equality hypothesis" proved="true">
    <proof prover="0"><result status="valid" time="2.14"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_pre&#39;vc.39" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.89" steps="964588"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="multiplier_qft_pre&#39;vc" expl="VC for multiplier_qft_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="multiplier_qft_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.44" steps="1020754"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.89" steps="964689"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.05" steps="1027382"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.91" steps="964722"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.13" steps="1026971"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.98" steps="965105"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.01" steps="965127"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.05" steps="965131"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.8" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="multiplier_qft_pre&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="4.72" steps="1297567"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="3.10"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.02" steps="980868"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.60" steps="965892"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.12" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(mod1 (b + (pick * i)) bound)" arg2="((fun (b1:int) -&gt; mod1 (b1 + (pick * i)) bound) @ b)">
   <goal name="multiplier_qft_pre&#39;vc.12.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures4">
    <goal name="multiplier_qft_pre&#39;vc.12.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.88" steps="1272453"/></proof>
    </goal>
    <goal name="multiplier_qft_pre&#39;vc.12.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.97" steps="1285832"/></proof>
    </goal>
    <goal name="multiplier_qft_pre&#39;vc.12.0.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.57" steps="965902"/></proof>
    </goal>
    <goal name="multiplier_qft_pre&#39;vc.12.0.3" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="multiplier_qft_pre&#39;vc.12.0.3.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="Ensures9">
      <goal name="multiplier_qft_pre&#39;vc.12.0.3.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.61" steps="965904"/></proof>
      </goal>
      <goal name="multiplier_qft_pre&#39;vc.12.0.3.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.61" steps="965904"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="multiplier_qft_pre&#39;vc.12.1" expl="equality hypothesis" proved="true">
   <proof prover="8"><result status="valid" time="3.88" steps="1257691"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="3.45"/></proof>
  </goal>
  <goal name="multiplier_qft_pre&#39;vc.14" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="multiplier_qft_pre&#39;vc.14.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="multiplier_qft_pre&#39;vc.14.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="multiplier_qft_pre&#39;vc.14.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="apply_function_in_qft_basis&#39;spec">
      <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="apply_function_in_qft_basis&#39;spec">
       <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
       <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.53" steps="1403968"/></proof>
       </goal>
       <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.29" steps="1333944"/></proof>
       </goal>
       <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.29" steps="1333960"/></proof>
       </goal>
       <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.28" steps="1333942"/></proof>
       </goal>
       <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="5.73" steps="1599694"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="4.19" steps="1403968"/></proof>
      </goal>
      <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.32" steps="1333944"/></proof>
      </goal>
      <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.32" steps="1333960"/></proof>
      </goal>
      <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.37" steps="1333942"/></proof>
      </goal>
      <goal name="multiplier_qft_pre&#39;vc.14.0.0.0.5" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="5.07" steps="1599865"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="multiplier_qft_swap&#39;vc" expl="VC for multiplier_qft_swap" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="multiplier_qft_swap&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.61" steps="1025176"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="959724"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="959747"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="959769"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.62" steps="1025226"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="959771"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="959784"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="959797"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.62" steps="959800"/></proof>
   </goal>
   <goal name="multiplier_qft_swap&#39;vc.8.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.65" steps="1026017"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="959844"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.69" steps="1029480"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1112294"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.12" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.12.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.75" steps="1047324"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1047347"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1047365"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.20" steps="1112983"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1047317"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1047330"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1047343"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1113169"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1047390"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1047555"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.91" steps="1112910"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.95" steps="1112937"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.24" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.34"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1047806"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1047810"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1047820"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.28" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.28.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.82" steps="1047824"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1047827"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.30" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.30.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="4.25" steps="1351504"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.93" steps="1113073"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1047845"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1113011"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1048054"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1114228"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1048828"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1116019"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.95" steps="1115699"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.39" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.39.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.84" steps="1050112"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.94" steps="1117895"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1119534"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1050498"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1121557"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.44" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.44.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.83" steps="1051767"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.82" steps="1125844"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1126758"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.83" steps="1127407"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="1053001"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1053021"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.50" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1053039"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.51" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1130259"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.52" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1052983"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.53" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1052996"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.54" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.83" steps="1053009"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.55" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.53" steps="1128320"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.56" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1053040"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.57" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.95" steps="1128831"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.58" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.01"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.59" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.11"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.60" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1127793"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.61" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.48" steps="1127500"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.62" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1053251"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.63" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1053271"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.64" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.64.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.79" steps="1053285"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.65" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1130629"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.66" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1053233"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.67" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1053246"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.68" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1053259"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.69" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.53" steps="1128423"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.70" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1053290"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.71" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1128007"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.72" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1053747"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.73" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="4.12" steps="1475155"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.74" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.94" steps="1128402"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.75" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="4.10" steps="1477671"/></proof>
  </goal>
  <goal name="multiplier_qft_swap&#39;vc.76" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="multiplier_qft_swap&#39;vc.76.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="multiplier_qft_swap&#39;vc.76.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="sequence_eq">
     <goal name="multiplier_qft_swap&#39;vc.76.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.91" steps="1126321"/></proof>
     </goal>
     <goal name="multiplier_qft_swap&#39;vc.76.0.0.1" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="multiplier_qft_pre&#39;def">
       <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="multiplier_qft_pre&#39;spec">
         <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.14" steps="1444327"/></proof>
         </goal>
         <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.54" steps="1444334"/></proof>
         </goal>
         <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.42" steps="1444334"/></proof>
         </goal>
         <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.73" steps="1520912"/></proof>
         </goal>
         <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0.4" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.37" steps="1444334"/></proof>
         </goal>
         <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.0.0.5" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.49" steps="1444325"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.55" steps="1444327"/></proof>
       </goal>
       <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.18" steps="1444334"/></proof>
       </goal>
       <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.55" steps="1444334"/></proof>
       </goal>
       <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.93" steps="1520912"/></proof>
       </goal>
       <goal name="multiplier_qft_swap&#39;vc.76.0.0.1.0.5" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.55" steps="1444325"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="multiplier_qft_swap&#39;vc.76.0.0.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.75" steps="1055585"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="restricted_modular_multiplier&#39;vc" expl="VC for restricted_modular_multiplier" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="restricted_modular_multiplier&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.60" steps="1026057"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.77" steps="1255032"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.65" steps="960908"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.55" steps="1026132"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="960973"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.58" steps="1029679"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.58" steps="1028669"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.60" steps="961088"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.30" steps="1030008"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="968158"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="968171"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.56" steps="1033299"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.62" steps="1034155"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.35" steps="1033847"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.40" steps="1114331"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.01" steps="1371435"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.49" steps="1048916"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1114346"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1048901"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.95" steps="1118039"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.83" steps="1117000"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1048976"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.71" steps="1118235"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1049157"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1049170"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.45" steps="1117220"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.82" steps="1118081"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1049293"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1049485"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.87" steps="1117704"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.48" steps="1117731"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.31" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.24"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.57" steps="1049707"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1049711"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.34" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.26"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1049725"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.83" steps="1049728"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1049731"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.52" steps="1117853"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.55" steps="1049753"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.47" steps="1119041"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.48" steps="1050551"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.41" steps="1121829"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.47" steps="1120752"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.49" steps="1051797"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.52" steps="1125389"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="1052229"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1124348"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.50" steps="1126793"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1053342"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.50" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1127765"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.51" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1128593"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.52" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1126824"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.53" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.51"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.54" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1054613"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.55" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.40" steps="1126839"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.56" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1054598"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.57" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.02" steps="1130575"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.58" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1129265"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.59" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1054673"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.60" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.68" steps="1130488"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.61" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1054839"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.62" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="1054852"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.63" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.00" steps="1129434"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.64" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.58" steps="1130342"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.65" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="1054953"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.66" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(mod1
       (i
        + (mod1 (- modular_inverse pick bound) bound * mod1 (pick * i) bound))
       bound)" arg2="0" arg3="in" arg4="Ensures6">
   <goal name="restricted_modular_multiplier&#39;vc.66.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures6">
   </transf>
   </goal>
   <goal name="restricted_modular_multiplier&#39;vc.66.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(mod1
  (i + (mod1 (- modular_inverse pick bound) bound * mod1 (pick * i) bound))
  bound)" arg2="(mod1
  (mod1 i bound + mod1 ((mod1 (- modular_inverse pick bound) bound * mod1 (pick * i) bound))
  bound)bound)">
    <goal name="restricted_modular_multiplier&#39;vc.66.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="mod_mod_mult">
     <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b c. -a * (b*c) = a*b* -c)">
      <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="8"><result status="valid" time="1.54" steps="1055025"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="h">
       <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.1.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="mod_mod_mult_rev">
        <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.1.0.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="one_mult">
         <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
         <proof prover="0"><result status="valid" time="3.86"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.70" steps="1055024"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="restricted_modular_multiplier&#39;vc.66.1.0.0.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.65" steps="1130472"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.66.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.93" steps="1130403"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="restricted_modular_multiplier&#39;vc.66.1.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="add_mod_left">
     <goal name="restricted_modular_multiplier&#39;vc.66.1.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="add_mod_right">
      <goal name="restricted_modular_multiplier&#39;vc.66.1.1.0.0" expl="equality hypothesis" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.66.1.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.97" steps="1130403"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.66.1.1.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.96" steps="1130403"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.67" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.97" steps="1129784"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.68" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.88" steps="1127263"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.69" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.43"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.70" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.87" steps="1054996"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.71" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.91" steps="1127278"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.72" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1054981"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.73" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.03" steps="1130981"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.74" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1129675"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.75" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1055059"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.76" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.07" steps="1130898"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.77" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.88" steps="1055220"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.78" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1055233"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.79" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.67" steps="1129859"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.80" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.05" steps="1130767"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.81" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.91" steps="1130188"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.82" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.91" steps="1055661"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.83" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="11.53" steps="46160108"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.84" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.45" steps="1130424"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.85" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="1055690"/></proof>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.86" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(kronecker (ket (n + 1) 0) (ket 1 0))" arg2="(ket (n+2) 0)" arg3="in" arg4="Ensures">
   <goal name="restricted_modular_multiplier&#39;vc.86.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(kronecker (kronecker (ket 1 0) (ket n 0)) (ket 1 0))" arg2="(ket (n+2) 0)" arg3="in" arg4="Ensures">
    <goal name="restricted_modular_multiplier&#39;vc.86.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="1.80" steps="1055732"/></proof>
    </goal>
    <goal name="restricted_modular_multiplier&#39;vc.86.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_kets">
     <goal name="restricted_modular_multiplier&#39;vc.86.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_kets">
      <goal name="restricted_modular_multiplier&#39;vc.86.0.1.0.0" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="1.56" steps="1055775"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.86.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.51" steps="1130228"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.86.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.59" steps="1055734"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.86.0.1.0.3" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="2.32"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.86.0.1.0.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.94" steps="1071919"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.86.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.89" steps="1055734"/></proof>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.86.0.1.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="3.15" steps="1130220"/></proof>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.86.0.1.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.14" steps="1071919"/></proof>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.86.0.1.4" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.83" steps="1131113"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="restricted_modular_multiplier&#39;vc.86.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="kronecker_kets">
    <goal name="restricted_modular_multiplier&#39;vc.86.1.0" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.69" steps="1055742"/></proof>
    </goal>
    <goal name="restricted_modular_multiplier&#39;vc.86.1.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="2.80" steps="1130177"/></proof>
    </goal>
    <goal name="restricted_modular_multiplier&#39;vc.86.1.2" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.92" steps="1055707"/></proof>
    </goal>
    <goal name="restricted_modular_multiplier&#39;vc.86.1.3" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="2.51"/></proof>
    </goal>
    <goal name="restricted_modular_multiplier&#39;vc.86.1.4" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.83" steps="1071889"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="restricted_modular_multiplier&#39;vc.87" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="restricted_modular_multiplier&#39;vc.87.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="restricted_modular_multiplier&#39;vc.87.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="sequence_eq">
     <goal name="restricted_modular_multiplier&#39;vc.87.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.50" steps="1131673"/></proof>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="multiplier_qft_swap&#39;def">
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="goal_comm">
       <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="multiplier_qft_swap&#39;spec">
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.11" steps="1447453"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.55" steps="1447460"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.55" steps="1523018"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="4.23" steps="1524158"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.0.0.0.4" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="4.36" steps="1524128"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.95" steps="1057624"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.90" steps="1057631"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.08" steps="1131476"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.1.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.10" steps="1132295"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="multiplier_qft_pre&#39;def">
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="goal_comm">
       <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="multiplier_qft_pre&#39;spec">
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.70" steps="1447453"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.76" steps="1524792"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.58" steps="1523018"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.24" steps="1447460"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0.4" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.83" steps="1524982"/></proof>
         </goal>
         <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.0.0.0.5" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.83" steps="1524471"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.91" steps="1057624"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.76" steps="1132769"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.04" steps="1131476"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.92" steps="1057631"/></proof>
      </goal>
      <goal name="restricted_modular_multiplier&#39;vc.87.0.0.2.5" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.71" steps="1132596"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="check_first_bit_is_one_for_multiplier&#39;vc" expl="VC for check_first_bit_is_one_for_multiplier" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.69" steps="962285"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.42" steps="962618"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.36" steps="1026811"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="962665"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.47" steps="1258086"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="985038"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.48" steps="970218"/></proof>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="path_sem_to_sem">
     <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(width (insert_qbits (check_first_bit_is_one n) (n + 1) (n + 2) (n + 2)))" arg2="((n+1) + ((n+2)+1))">
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="kronecker_ket_l">
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.35" steps="1032018"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.38" steps="1032027"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.84" steps="1196384"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0.0.3" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="8.19"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="2.48" steps="1032026"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="insert_qbits_path_sem_basis">
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.56" steps="970126"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.71" steps="1032034"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.37" steps="1032019"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.92" steps="1196384"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.4" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="3.93"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.5" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="3.77"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.6" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.99" steps="1048188"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.7" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.31" steps="1196384"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.8" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.75" steps="1196440"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.9" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.96" steps="1048172"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.10" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.64" steps="1048172"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.11" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="sem_to_path_sem">
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.7.0.0.1.11.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.33" steps="1195514"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="path_sem_to_sem">
     <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(width (insert_qbits (check_first_bit_is_one n) (n + 1) (n + 2) (n + 2)))" arg2="((n+1) + ((n+2)+1))">
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="kronecker_ket_l">
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.32" steps="1032173"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.39" steps="1032182"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.32" steps="1198630"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.3" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_ket_l">
        <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.3.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.24" steps="1032173"/></proof>
        </goal>
        <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.3.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.61" steps="970264"/></proof>
        </goal>
        <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.3.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.75" steps="1198675"/></proof>
        </goal>
        <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.0.3.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.92" steps="1048303"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="2.66" steps="1032181"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="insert_qbits_path_sem_basis">
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.62" steps="970257"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.21" steps="1032189"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.22" steps="1032174"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.21" steps="1198630"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.4" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="ket_is_a_ket_basis_elt">
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.4.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.65" steps="1032173"/></proof>
       </goal>
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.4.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.68" steps="1199360"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.5" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.76" steps="1199770"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.6" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.85" steps="1048328"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.7" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.73" steps="1198630"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.8" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.28" steps="1198675"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.9" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.95" steps="1048322"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.10" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.85" steps="1048322"/></proof>
      </goal>
      <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.11" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="sem_to_path_sem">
       <goal name="check_first_bit_is_one_for_multiplier&#39;vc.8.0.0.1.11.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.58" steps="1198537"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="check_order_pre&#39;vc" expl="VC for check_order_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="check_order_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.52" steps="963058"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="963473"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.47" steps="1027482"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.72" steps="1027939"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="1050795"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1051051"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1115902"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1116141"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.00" steps="1116168"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1051313"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1051317"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.22" steps="1051320"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1051330"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1051341"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.14" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="leq_trans" arg2="with" arg3="(polysquare (n + 1) ((cont_size * 2) + 1) 0 0)">
   <goal name="check_order_pre&#39;vc.14.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="1.58" steps="1051345"/></proof>
   </goal>
   <goal name="check_order_pre&#39;vc.14.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="polysquare_update" arg2="with" arg3="(n+1)">
    <goal name="check_order_pre&#39;vc.14.1.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="2.99" steps="1116249"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.14.1.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.86" steps="1051345"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.14.1.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.83" steps="1051345"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.14.1.3" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.84" steps="1051345"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.14.1.4" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.86" steps="1051352"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.14" steps="1051392"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1116300"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1051389"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.22" steps="1117571"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.19" steps="1121903"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1053138"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1122932"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.87" steps="1123592"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.72" steps="1054202"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.02" steps="1124385"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1125043"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1055375"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1055616"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.93" steps="1125984"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.29" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(i - bound)" arg2="(mod1 (i - bound) (power 2 (n+1)))">
   <goal name="check_order_pre&#39;vc.29.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="check_order_pre&#39;vc.29.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="place_substract_in_comput_basis&#39;spec1">
     <goal name="check_order_pre&#39;vc.29.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.49" steps="1392228"/></proof>
     </goal>
     <goal name="check_order_pre&#39;vc.29.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.86" steps="1469431"/></proof>
     </goal>
     <goal name="check_order_pre&#39;vc.29.0.0.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="5.17" steps="1726217"/></proof>
     </goal>
     <goal name="check_order_pre&#39;vc.29.0.0.3" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="5.32" steps="1725736"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="check_order_pre&#39;vc.29.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="mod_inf">
    <goal name="check_order_pre&#39;vc.29.1.0" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.71" steps="1055818"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.29.1.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="4.50" steps="1503723"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.45" steps="1504321"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.74" steps="1126467"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="1051393"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1117640"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.65" steps="1420713"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.02" steps="1121918"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1053171"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1125631"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.38" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.17"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.03" steps="1126331"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.84" steps="1054413"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.04" steps="1127329"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.04" steps="1128062"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1055608"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.83" steps="1055849"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1128657"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.46" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="check_order_pre&#39;vc.46.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="place_substract_in_comput_basis&#39;spec1">
    <goal name="check_order_pre&#39;vc.46.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="2.19" steps="1392446"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.46.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.94" steps="1471400"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.46.0.2" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="2.21"/></proof>
    </goal>
    <goal name="check_order_pre&#39;vc.46.0.3" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="((((2 * n) + 4) - n) - 1)" arg2="(n+2+1)">
     <goal name="check_order_pre&#39;vc.46.0.3.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="check_order_pre&#39;vc.46.0.3.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.95" steps="1471387"/></proof>
      </goal>
      <goal name="check_order_pre&#39;vc.46.0.3.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.52" steps="1392444"/></proof>
      </goal>
      <goal name="check_order_pre&#39;vc.46.0.3.0.2" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="1.97"/></proof>
      </goal>
      <goal name="check_order_pre&#39;vc.46.0.3.0.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.33" steps="1392441"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="check_order_pre&#39;vc.46.0.3.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="2.24" steps="1392460"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.47" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures5">
   <goal name="check_order_pre&#39;vc.47.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="check_order_pre&#39;vc.47.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(mod1 (i - bound) (power 2 (n + 1)))" arg2="(power 2 (n+1) + (i - bound))">
     <goal name="check_order_pre&#39;vc.47.0.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="1.96"/></proof>
     </goal>
     <goal name="check_order_pre&#39;vc.47.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="check_order_pre&#39;vc.47.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="(i-bound),power 2 (n+1), -1,(power 2 (n + 1) + (i - bound))">
       <goal name="check_order_pre&#39;vc.47.0.0.1.0.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="Hinst">
        <goal name="check_order_pre&#39;vc.47.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
        <goal name="check_order_pre&#39;vc.47.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="2.11"/></proof>
        </goal>
        <goal name="check_order_pre&#39;vc.47.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.53" steps="1392572"/></proof>
        </goal>
        <goal name="check_order_pre&#39;vc.47.0.0.1.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="2.11"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="check_order_pre&#39;vc.47.0.1" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="2.04"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1129094"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1061485"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.50" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="check_order_pre&#39;vc.50.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.83" steps="1056105"/></proof>
   </goal>
   <goal name="check_order_pre&#39;vc.50.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.63" steps="1056370"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.51" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="check_order_pre&#39;vc.51.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.92" steps="1126304"/></proof>
   </goal>
   <goal name="check_order_pre&#39;vc.51.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.00" steps="1129026"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.52" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="check_order_pre&#39;vc.52.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.97" steps="1126733"/></proof>
   </goal>
   <goal name="check_order_pre&#39;vc.52.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.02" steps="1129476"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="check_order_pre&#39;vc.53" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1062233"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.54" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.96" steps="4577550"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.55" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.06" steps="1132709"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.56" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.13" steps="1139277"/></proof>
  </goal>
  <goal name="check_order_pre&#39;vc.57" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.37" steps="1313936"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="check_order&#39;vc" expl="VC for check_order" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="check_order&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="963942"/></proof>
  </goal>
  <goal name="check_order&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.79" steps="1027727"/></proof>
  </goal>
  <goal name="check_order&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.53" steps="964320"/></proof>
  </goal>
  <goal name="check_order&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="964333"/></proof>
  </goal>
  <goal name="check_order&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="964346"/></proof>
  </goal>
  <goal name="check_order&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.75" steps="1028772"/></proof>
  </goal>
  <goal name="check_order&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.94" steps="1051570"/></proof>
  </goal>
  <goal name="check_order&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.14" steps="1116657"/></proof>
  </goal>
  <goal name="check_order&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.66" steps="1051806"/></proof>
  </goal>
  <goal name="check_order&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.65" steps="1051819"/></proof>
  </goal>
  <goal name="check_order&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="1051832"/></proof>
  </goal>
  <goal name="check_order&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1116943"/></proof>
  </goal>
  <goal name="check_order&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.03" steps="1116970"/></proof>
  </goal>
  <goal name="check_order&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1051872"/></proof>
  </goal>
  <goal name="check_order&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.98" steps="1051883"/></proof>
  </goal>
  <goal name="check_order&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.95" steps="1051887"/></proof>
  </goal>
  <goal name="check_order&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.99" steps="1051897"/></proof>
  </goal>
  <goal name="check_order&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.92" steps="1051901"/></proof>
  </goal>
  <goal name="check_order&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1051904"/></proof>
  </goal>
  <goal name="check_order&#39;vc.19" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="leq_trans" arg2="with" arg3="(polysquare (n + 1) ((cont_size * 2) + 1) 0 0)">
   <goal name="check_order&#39;vc.19.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="1.74" steps="1051907"/></proof>
   </goal>
   <goal name="check_order&#39;vc.19.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="polysquare_update" arg2="with" arg3="(n+1)">
    <goal name="check_order&#39;vc.19.1.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="2.75" steps="1117055"/></proof>
    </goal>
    <goal name="check_order&#39;vc.19.1.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.72" steps="1051907"/></proof>
    </goal>
    <goal name="check_order&#39;vc.19.1.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.70" steps="1051907"/></proof>
    </goal>
    <goal name="check_order&#39;vc.19.1.3" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.99" steps="1051907"/></proof>
    </goal>
    <goal name="check_order&#39;vc.19.1.4" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="2.19" steps="1051914"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.44" steps="1117102"/></proof>
  </goal>
  <goal name="check_order&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.10" steps="1051931"/></proof>
  </goal>
  <goal name="check_order&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.27" steps="1118699"/></proof>
  </goal>
  <goal name="check_order&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.30" steps="1122648"/></proof>
  </goal>
  <goal name="check_order&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.00" steps="1053629"/></proof>
  </goal>
  <goal name="check_order&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.00" steps="1123569"/></proof>
  </goal>
  <goal name="check_order&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.02" steps="1124285"/></proof>
  </goal>
  <goal name="check_order&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.84" steps="1054833"/></proof>
  </goal>
  <goal name="check_order&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.97" steps="1125127"/></proof>
  </goal>
  <goal name="check_order&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.00" steps="1125845"/></proof>
  </goal>
  <goal name="check_order&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1055874"/></proof>
  </goal>
  <goal name="check_order&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.95" steps="1126415"/></proof>
  </goal>
  <goal name="check_order&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.92" steps="1056085"/></proof>
  </goal>
  <goal name="check_order&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.98" steps="1056098"/></proof>
  </goal>
  <goal name="check_order&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.94" steps="1056111"/></proof>
  </goal>
  <goal name="check_order&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.95" steps="1056098"/></proof>
  </goal>
  <goal name="check_order&#39;vc.36" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(ket (n + 1) i)" arg2="(ket (n + 1) (mod1(i-bound+bound) (power 2 (n+1))))">
   <goal name="check_order&#39;vc.36.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures6">
    <goal name="check_order&#39;vc.36.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="2.30"/></proof>
    </goal>
    <goal name="check_order&#39;vc.36.0.1" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="((((2 * n) + 4) - n) - 1)" arg2="(n+2+1)">
     <goal name="check_order&#39;vc.36.0.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="check_order&#39;vc.36.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.95" steps="1126580"/></proof>
      </goal>
      <goal name="check_order&#39;vc.36.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.89" steps="1056108"/></proof>
      </goal>
      <goal name="check_order&#39;vc.36.0.1.0.2" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="2.29"/></proof>
      </goal>
      <goal name="check_order&#39;vc.36.0.1.0.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.81" steps="1056101"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="check_order&#39;vc.36.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.81" steps="1056117"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="check_order&#39;vc.36.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="mod_inf">
    <goal name="check_order&#39;vc.36.1.0" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.87" steps="1056122"/></proof>
    </goal>
    <goal name="check_order&#39;vc.36.1.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="2.28"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.97" steps="1126848"/></proof>
  </goal>
  <goal name="check_order&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1051936"/></proof>
  </goal>
  <goal name="check_order&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.96" steps="1120846"/></proof>
  </goal>
  <goal name="check_order&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.04" steps="1124793"/></proof>
  </goal>
  <goal name="check_order&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.87" steps="1053641"/></proof>
  </goal>
  <goal name="check_order&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1125735"/></proof>
  </goal>
  <goal name="check_order&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.01" steps="1585406"/></proof>
  </goal>
  <goal name="check_order&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1126437"/></proof>
  </goal>
  <goal name="check_order&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.69" steps="1054851"/></proof>
  </goal>
  <goal name="check_order&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.04" steps="1127654"/></proof>
  </goal>
  <goal name="check_order&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1128268"/></proof>
  </goal>
  <goal name="check_order&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="1056084"/></proof>
  </goal>
  <goal name="check_order&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.97" steps="1128680"/></proof>
  </goal>
  <goal name="check_order&#39;vc.50" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1056300"/></proof>
  </goal>
  <goal name="check_order&#39;vc.51" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1056313"/></proof>
  </goal>
  <goal name="check_order&#39;vc.52" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1056326"/></proof>
  </goal>
  <goal name="check_order&#39;vc.53" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="1056313"/></proof>
  </goal>
  <goal name="check_order&#39;vc.54" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(ket (n + 1) i)" arg2="(ket (n + 1) (mod1((mod1 (i - bound) (power 2 (n + 1)))+bound) (power 2 (n+1))))">
   <goal name="check_order&#39;vc.54.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures6">
    <goal name="check_order&#39;vc.54.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="1.92"/></proof>
    </goal>
    <goal name="check_order&#39;vc.54.0.1" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="((((2 * n) + 4) - n) - 1)" arg2="(n+2+1)">
     <goal name="check_order&#39;vc.54.0.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="check_order&#39;vc.54.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.02" steps="1128804"/></proof>
      </goal>
      <goal name="check_order&#39;vc.54.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.86" steps="1056316"/></proof>
      </goal>
      <goal name="check_order&#39;vc.54.0.1.0.2" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="2.18"/></proof>
      </goal>
      <goal name="check_order&#39;vc.54.0.1.0.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.86" steps="1056316"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="check_order&#39;vc.54.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.83" steps="1056332"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="check_order&#39;vc.54.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(mod1 (i - bound) (power 2 (n + 1)))" arg2="(power 2 (n + 1) + (i-bound) )">
    <goal name="check_order&#39;vc.54.1.0" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="ket_eq">
     <goal name="check_order&#39;vc.54.1.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.10" steps="1128804"/></proof>
     </goal>
     <goal name="check_order&#39;vc.54.1.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.88" steps="1056314"/></proof>
     </goal>
     <goal name="check_order&#39;vc.54.1.0.2" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="check_order&#39;vc.54.1.0.2.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="unicity_div_mod" arg2="with" arg3="1">
       <goal name="check_order&#39;vc.54.1.0.2.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="2.35"/></proof>
       </goal>
       <goal name="check_order&#39;vc.54.1.0.2.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.67" steps="1393671"/></proof>
       </goal>
       <goal name="check_order&#39;vc.54.1.0.2.0.2" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="2.22"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="check_order&#39;vc.54.1.1" expl="equality hypothesis" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="check_order&#39;vc.54.1.1.0" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="goal_comm">
      <goal name="check_order&#39;vc.54.1.1.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="unicity_div_mod" arg2="with" arg3="(-1)">
       <goal name="check_order&#39;vc.54.1.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="2.36"/></proof>
       </goal>
       <goal name="check_order&#39;vc.54.1.1.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.81" steps="1393668"/></proof>
       </goal>
       <goal name="check_order&#39;vc.54.1.1.0.0.2" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="2.16"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_order&#39;vc.55" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.07" steps="1129079"/></proof>
  </goal>
  <goal name="check_order&#39;vc.56" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.88" steps="1061561"/></proof>
  </goal>
  <goal name="check_order&#39;vc.57" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.10" steps="1131966"/></proof>
  </goal>
  <goal name="check_order&#39;vc.58" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.88" steps="1061779"/></proof>
  </goal>
  <goal name="check_order&#39;vc.59" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1061792"/></proof>
  </goal>
  <goal name="check_order&#39;vc.60" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="1061805"/></proof>
  </goal>
  <goal name="check_order&#39;vc.61" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.03" steps="1132405"/></proof>
  </goal>
  <goal name="check_order&#39;vc.62" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1062099"/></proof>
  </goal>
  <goal name="check_order&#39;vc.63" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.99" steps="4584313"/></proof>
  </goal>
  <goal name="check_order&#39;vc.64" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.03" steps="1132867"/></proof>
  </goal>
  <goal name="check_order&#39;vc.65" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.75" steps="1138618"/></proof>
  </goal>
  <goal name="check_order&#39;vc.66" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.70" steps="1313380"/></proof>
  </goal>
  <goal name="check_order&#39;vc.67" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="2.25"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="uncheck_order&#39;vc" expl="VC for uncheck_order" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="uncheck_order&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.66" steps="964940"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="964953"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="964966"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1029897"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.76" steps="1029746"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.99" steps="1030137"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.83" steps="1029240"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.7" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="uncheck_order&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="uncheck_order&#39;vc.7.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="3.61" steps="1200395"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="uncheck_order&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.79" steps="1263986"/></proof>
  </goal>
  <goal name="uncheck_order&#39;vc.9" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(check_order n bound i&#39;)" arg2="(check_order n bound i)">
   <goal name="uncheck_order&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="1.72" steps="965573"/></proof>
   </goal>
   <goal name="uncheck_order&#39;vc.9.1" expl="equality hypothesis" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="uncheck_order&#39;vc.9.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="check_order&#39;def">
     <goal name="uncheck_order&#39;vc.9.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="goal_comm">
      <goal name="uncheck_order&#39;vc.9.1.0.0.0" expl="apply premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="uncheck_order&#39;vc.9.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="check_order&#39;spec">
        <goal name="uncheck_order&#39;vc.9.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.36" steps="1340016"/></proof>
        </goal>
        <goal name="uncheck_order&#39;vc.9.1.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.43" steps="1340023"/></proof>
        </goal>
        <goal name="uncheck_order&#39;vc.9.1.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.35" steps="1340023"/></proof>
        </goal>
        <goal name="uncheck_order&#39;vc.9.1.0.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.41" steps="1340023"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="uncheck_order&#39;vc.9.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.68" steps="965394"/></proof>
     </goal>
     <goal name="uncheck_order&#39;vc.9.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.65" steps="965401"/></proof>
     </goal>
     <goal name="uncheck_order&#39;vc.9.1.0.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.66" steps="965401"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cont_restricted_modular_multiplier&#39;vc" expl="VC for cont_restricted_modular_multiplier" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cont_restricted_modular_multiplier&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.74" steps="1029409"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="965907"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.69" steps="965911"/></proof>
   </goal>
   <goal name="cont_restricted_modular_multiplier&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.73" steps="965926"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.72" steps="965922"/></proof>
   </goal>
   <goal name="cont_restricted_modular_multiplier&#39;vc.3.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.66" steps="965935"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.82" steps="1030647"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.67" steps="965999"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.73" steps="1030358"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="966715"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.45" steps="966719"/></proof>
   </goal>
   <goal name="cont_restricted_modular_multiplier&#39;vc.8.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.66" steps="966734"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.48" steps="966743"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1033997"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.46" steps="966794"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="966938"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="967139"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.88" steps="1033074"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.93" steps="1033049"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.16" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.16.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.88"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.17" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.17.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.80" steps="967361"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.18" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.18.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.82" steps="967372"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.32" steps="1278769"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="967422"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="967436"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="967440"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="967457"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.78" steps="1030796"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="967400"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="967413"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="967428"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.09" steps="1034440"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="967474"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.85" steps="967736"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.96" steps="982565"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.32" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.32.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="2.75" steps="1061950"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.33" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
   <goal name="cont_restricted_modular_multiplier&#39;vc.33.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
    <goal name="cont_restricted_modular_multiplier&#39;vc.33.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="Ensures4">
     <goal name="cont_restricted_modular_multiplier&#39;vc.33.0.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="2.03"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.34" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
   <goal name="cont_restricted_modular_multiplier&#39;vc.34.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures4">
    <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (restricted_modular_multiplier pick bound n (mod1 i bound)))" arg2="(n+(n+2))">
     <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.50" steps="1033778"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.74" steps="1033773"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.97" steps="1314389"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0.0.3" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.76" steps="1284662"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="cont_restricted_modular_multiplier&#39;vc.34.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.56" steps="967903"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.35" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.35.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="restricted_modular_multiplier&#39;spec" arg2="with" arg3="(mod1 i&#39; bound)">
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="restricted_modular_multiplier&#39;spec" arg2="with" arg3="(mod1 i&#39; bound)">
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="8"><result status="valid" time="2.23" steps="1343457"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.22" steps="1343461"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.25" steps="1343468"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.22" steps="1343470"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.61" steps="1415020"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.20" steps="1343459"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.0.6" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.76" steps="1415020"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.58" steps="1343461"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.50" steps="1343468"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.26" steps="1343470"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.76" steps="1414868"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.5" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.37" steps="1343459"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.35.0.0.0.6" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.76" steps="1415020"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="966369"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.58" steps="1029874"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.38" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.82" steps="1036720"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.39" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="988157"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.40" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="973315"/></proof>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.41" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.41.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(ket (n + 1) i)" arg2="(kronecker (ket 1 0) (ket n i))">
     <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(ket (n + 1) (mod1 (pick * i) bound))" arg2="(kronecker (ket 1 0 ) (ket n (mod1 (pick * i) bound)))">
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_to_sem">
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (place o 1 ((2 * n) + 4)))" arg2="(1 + n + ((n+2+1)))">
        <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_ket_l">
         <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.51" steps="1037688"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.56" steps="1037694"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="4.69"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.3" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.71" steps="1037685"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.3.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.61" steps="973254"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.3.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="3.75" steps="1211938"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.0.3.3" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.69" steps="1053874"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="2.63" steps="1037696"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
        <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
         <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="place_kron_right">
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.84" steps="1053701"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.61" steps="973256"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="1.62" steps="973261"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.94" steps="1053874"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.0.1.0.0.4" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="2.88" steps="1038933"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_kets">
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="1.63" steps="973298"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.61" steps="973254"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.58" steps="1037685"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.1.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.73" steps="1053632"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.0.1.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.76" steps="1038785"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_kets">
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="1.63" steps="973281"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.61" steps="973254"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.55" steps="1037685"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.1.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.90" steps="1053632"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.41.0.0.1.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.63" steps="973256"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.42" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.42.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(ket (n + 1) i)" arg2="(kronecker (ket 1 0) (ket n i))">
     <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(ket (n + 1) (mod1 (pick * i) bound))" arg2="(kronecker (ket 1 0 ) (ket n (mod1 (pick * i) bound)))">
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_to_sem">
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (place o 1 ((2 * n) + 4)))" arg2="(1 + n + ((n+2+1)))">
        <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_ket_l">
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.56" steps="1035678"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.52" steps="1035684"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="4.67"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.3" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.57" steps="1035675"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.3.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="1.56" steps="973302"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.3.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="3.67" steps="1214164"/></proof>
          </goal>
          <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.0.3.3" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.76" steps="1051857"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="2.60" steps="1035686"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_assoc_use_rev">
        <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="place_kron_right">
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.73" steps="1051648"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.64" steps="973304"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="1.58" steps="973309"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="3.04" steps="1051857"/></proof>
         </goal>
         <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.0.1.0.4" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="2.68" steps="1036916"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_kets">
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="1.58" steps="973339"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.58" steps="973302"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.56" steps="1035675"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.1.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.10" steps="1051615"/></proof>
       </goal>
       <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.0.1.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.68" steps="1036768"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_kets">
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="1.63" steps="973322"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.72" steps="973302"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.70" steps="1035675"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.1.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.93" steps="1051615"/></proof>
      </goal>
      <goal name="cont_restricted_modular_multiplier&#39;vc.42.0.0.1.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.64" steps="973304"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cont_restricted_modular_multiplier&#39;vc.43" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cont_restricted_modular_multiplier&#39;vc.43.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cont_restricted_modular_multiplier&#39;vc.43.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures12" arg2="with" arg3="i&#39;">
     <goal name="cont_restricted_modular_multiplier&#39;vc.43.0.0.0" expl="postcondition" proved="true">
     <proof prover="8"><result status="valid" time="1.66" steps="973343"/></proof>
     </goal>
     <goal name="cont_restricted_modular_multiplier&#39;vc.43.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.62" steps="973354"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="modular_multiplier_with_ancillas&#39;vc" expl="VC for modular_multiplier_with_ancillas" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="modular_multiplier_with_ancillas&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.67" steps="966884"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.66" steps="966897"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.67" steps="966912"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.67" steps="966925"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.65" steps="966918"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.68" steps="967369"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.6.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.54" steps="1030390"/></proof>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.6.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.59" steps="967384"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.7.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.55" steps="967390"/></proof>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.7.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.62" steps="967401"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.56" steps="1030826"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1054597"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.10.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.74" steps="1054601"/></proof>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.10.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.75" steps="1054616"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.11" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.11.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.74" steps="1054612"/></proof>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.11.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.73" steps="1054621"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1054638"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1054642"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1054763"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.79" steps="1119737"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1054796"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="1054896"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.74" steps="1120058"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.81" steps="1120085"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.20" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.20.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.76" steps="1055124"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1055135"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.11" steps="1361836"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.23" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.07"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1055168"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1055172"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.26" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="leq_trans" arg2="with" arg3="(polysquare (n + 1) (power cont_size 2 * 4)
     (cont_size * ((cont_size * (2 * adder_gate_bound n)) + 6)) 0)">
   <goal name="modular_multiplier_with_ancillas&#39;vc.26.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="1.83" steps="1055175"/></proof>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.26.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="polysquare_update" arg2="with" arg3="(n+1)">
    <goal name="modular_multiplier_with_ancillas&#39;vc.26.1.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="2.95" steps="1120375"/></proof>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.26.1.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.87" steps="1055175"/></proof>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.26.1.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.79" steps="1055175"/></proof>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.26.1.3" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.80" steps="1055175"/></proof>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.26.1.4" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.81" steps="1055182"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.71" steps="1120422"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.28" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.28.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.68" steps="1055181"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.29" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.29.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.74" steps="1125922"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.79" steps="1124975"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.77" steps="1126625"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="1056917"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.81" steps="1127911"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.83" steps="1128571"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1058111"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1129399"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1130053"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1059334"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.39" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.39.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.73" steps="1059338"/></proof>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.39.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.81" steps="1059353"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="1059362"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="1059375"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.83" steps="1059379"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1059485"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1130727"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1059518"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1059601"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1059616"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1131062"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1055185"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.50" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.76" steps="1123786"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.51" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.77" steps="1124570"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.52" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1056880"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.53" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.80" steps="1125541"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.54" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.81" steps="1126148"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.55" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1057921"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.56" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.46" steps="1126860"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.57" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.44" steps="1127523"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.58" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.72" steps="1058967"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.59" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1058980"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.60" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1058995"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.61" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="1059008"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.62" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1059012"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.63" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1059118"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.64" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.78" steps="1128220"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.65" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1059151"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.66" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="1059234"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.67" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1059237"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.68" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.86" steps="1128537"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.69" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1064869"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.70" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="1064882"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.71" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.52" steps="1064897"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.72" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.49" steps="1064910"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.73" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.48" steps="1064914"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.74" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.53" steps="1065030"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.75" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.50" steps="1134357"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.76" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.49" steps="1065063"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.77" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.45" steps="1134682"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.78" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.98" steps="4636138"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.79" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.41" steps="1134964"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.80" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="1065480"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.81" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.65" steps="1144087"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.82" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1136247"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.83" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1065521"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.84" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(cont_restricted_modular_multiplier pick bound n i&#39;)" arg2="(cont_restricted_modular_multiplier pick bound n i)">
   <goal name="modular_multiplier_with_ancillas&#39;vc.84.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(check_order n bound i&#39;)" arg2="(check_order n bound i)">
    <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="1.78" steps="1065547"/></proof>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="check_order&#39;def">
     <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="goal_comm">
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0.0" expl="apply premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="check_order&#39;spec">
        <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.07" steps="1408388"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.34" steps="1488403"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.13" steps="1408395"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.44" steps="1408395"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.82" steps="1065551"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.85" steps="1134852"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.84.0.1.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.79" steps="1065558"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="modular_multiplier_with_ancillas&#39;vc.84.1" expl="equality hypothesis" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0" expl="equality hypothesis" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="cont_restricted_modular_multiplier&#39;spec" arg2="with" arg3="i">
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="cont_restricted_modular_multiplier&#39;spec" arg2="with" arg3="i">
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.0" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="2.47" steps="1465455"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.45" steps="1465459"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.55" steps="1465466"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.56" steps="1465468"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.50" steps="1465466"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.52" steps="1465457"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.0.6" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.54" steps="1465466"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.53" steps="1465459"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.48" steps="1465466"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.12" steps="1465468"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.03" steps="1465466"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.5" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.10" steps="1465457"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.84.1.0.0.6" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.17" steps="1465466"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.85" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.19" steps="1030516"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.86" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="967381"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.87" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.14" steps="1030634"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.88" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.44" steps="1031750"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.89" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.27" steps="1033342"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.90" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.46" steps="1120676"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.91" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="1054642"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.92" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1122719"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.93" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.53" steps="1124000"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.94" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.72" steps="1054783"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.95" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.83" steps="1123219"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.96" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.88" steps="1365884"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.97" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.16"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.98" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.77" steps="1123308"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.99" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.67" steps="1055033"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.100" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1055044"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.101" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.64" steps="1055048"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.102" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.56" steps="1055051"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.103" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.47" steps="1055054"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.104" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.43" steps="1123418"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.105" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1055084"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.106" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.81" steps="1126561"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.107" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.83" steps="1125170"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.108" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.54" steps="1127347"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.109" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1056828"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.110" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.87" steps="1128393"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.111" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.51" steps="1126931"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.112" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.48" steps="1129148"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.113" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1058074"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.114" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.87" steps="1129943"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.115" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.86" steps="1130536"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.116" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.83" steps="1129246"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.117" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1059250"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.118" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1131336"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.119" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.58" steps="1132578"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.120" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1059359"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.121" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.96" steps="1132366"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.122" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.88" steps="1131721"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.123" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="1055088"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.124" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.82" steps="1126560"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.125" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.66" steps="1127351"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.126" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1056792"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.127" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.66" steps="1128180"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.128" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.68" steps="1128837"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.129" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="1057848"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.130" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.63" steps="1129497"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.131" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.55" steps="1130208"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.132" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="1058906"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.133" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.47" steps="1130701"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.134" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1058939"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.135" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1059113"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.136" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1059116"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.137" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.60" steps="1131115"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.138" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.60" steps="1136322"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.139" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1064407"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.140" expl="precondition" proved="true">
  <proof prover="10"><result status="valid" time="0.95" steps="4963226"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.141" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1137594"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.142" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1134100"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.143" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1064449"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.144" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.65" steps="1136388"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.145" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.96" steps="1137585"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.146" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.96" steps="1136678"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.147" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.97"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.148" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.95" steps="1137090"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.149" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="1064903"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.150" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.64" steps="1146062"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.151" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="2.31"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.152" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
   <goal name="modular_multiplier_with_ancillas&#39;vc.152.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(kronecker (ket 1 0) (ket n i))" arg2="(ket (n+1) i)">
    <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(kronecker (ket (n + 2) 0) (ket 1 0))" arg2="(ket (n+3) 0)" arg3="in" arg4="Ensures1">
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
      <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(kronecker (ket 1 0) (ket n (mod1 (pick * i) bound)))" arg2="( (ket (n+1) (mod1 (pick * i) bound)))">
       <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="Ensures1">
        <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.73" steps="1064987"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_kets">
        <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="1.74" steps="1065036"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.58" steps="1064985"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.1.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.58" steps="1146288"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.1.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.82" steps="1146239"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.0.0.1.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.93" steps="1147515"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="4.51" steps="1623805"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_kets">
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.1.0" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.74" steps="1064988"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.82" steps="1064957"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.1.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.91" steps="1146144"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.1.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.92" steps="1146128"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.152.0.1.4" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.82" steps="1064966"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.153" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
   <goal name="modular_multiplier_with_ancillas&#39;vc.153.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(kronecker (ket 1 0) (ket n i))" arg2="(ket (n+1) i)">
    <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(kronecker (ket (n + 2) 0) (ket 1 0))" arg2="(ket (n+3) 0)" arg3="in" arg4="Ensures1">
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="Ensures1">
      <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.80" steps="1065040"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_kets">
      <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="1.77" steps="1065056"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.83" steps="1137149"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.73" steps="1065033"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.1.3" expl="rewrite premises" proved="true">
      <proof prover="10"><result status="valid" time="5.31" steps="10189393"/></proof>
      </goal>
      <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.0.1.4" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.90" steps="1138074"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_kets">
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.1.0" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.73" steps="1065064"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.76" steps="1065033"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.1.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.86" steps="1137149"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.1.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.97" steps="1138074"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.153.0.1.4" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.82" steps="1065042"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.154" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.99" steps="1080370"/></proof>
  </goal>
  <goal name="modular_multiplier_with_ancillas&#39;vc.155" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="modular_multiplier_with_ancillas&#39;vc.155.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="sequence_eq">
     <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.99" steps="1139385"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.1" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="4.45"/></proof>
     </goal>
     <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="uncheck_order&#39;spec" arg2="with" arg3="i">
       <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="uncheck_order&#39;spec" arg2="with" arg3="i">
        <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.54" steps="1464941"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.50" steps="1464945"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.84" steps="1543804"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.95" steps="1545512"/></proof>
        </goal>
        <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.0.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.53" steps="1464952"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.51" steps="1464945"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.88" steps="1543804"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.53" steps="1545336"/></proof>
       </goal>
       <goal name="modular_multiplier_with_ancillas&#39;vc.155.0.0.2.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.12" steps="1464952"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="permut_modular_multiplier&#39;vc" expl="VC for permut_modular_multiplier" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permut_modular_multiplier&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="974719"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="974732"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="974747"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.61" steps="1037763"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="974785"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.5" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_bijective_auto">
   <goal name="permut_modular_multiplier&#39;vc.5.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="permut_modular_multiplier&#39;vc.5.0.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="permut_modular_multiplier&#39;vc.5.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="4.15" steps="1350989"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permut_modular_multiplier&#39;vc.5.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="permut_modular_multiplier&#39;vc.5.1.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="permut_modular_multiplier&#39;vc.5.1.0.0" expl="apply premises" proved="true">
     <transf name="exists" proved="true" arg1="(if e&#39; = 2*n+3 then 0 else e&#39; +1)">
      <goal name="permut_modular_multiplier&#39;vc.5.1.0.0.0" proved="true">
      <proof prover="8"><result status="valid" time="4.01" steps="1351581"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="977853"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="977866"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="977881"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.86" steps="1045378"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.69" steps="977919"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="978069"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.64" steps="978082"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="978097"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.83" steps="1045585"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="978135"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.59" steps="978302"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.62" steps="1045057"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.60" steps="978519"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="978530"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="978534"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.88" steps="1291509"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.22" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.92"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.61" steps="1045130"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.93" steps="1291414"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.64" steps="978617"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.26" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures31">
  </transf>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="978769"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.67" steps="978782"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="978797"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1046196"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="978835"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.32" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_bijective_auto">
   <goal name="permut_modular_multiplier&#39;vc.32.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="permut_modular_multiplier&#39;vc.32.0.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="permut_modular_multiplier&#39;vc.32.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="4.07" steps="1360074"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="permut_modular_multiplier&#39;vc.32.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="permut_modular_multiplier&#39;vc.32.1.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="permut_modular_multiplier&#39;vc.32.1.0.0" expl="apply premises" proved="true">
     <transf name="exists" proved="true" arg1="(if e&#39; = 2*n+3 then 0 else e&#39; +1)">
      <goal name="permut_modular_multiplier&#39;vc.32.1.0.0.0" proved="true">
      <proof prover="8"><result status="valid" time="4.06" steps="1360984"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.80" steps="995413"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.34" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.66" steps="1046757"/></proof>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.35" expl="postcondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="permut_modular_multiplier&#39;vc.35.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="leq_trans" arg2="with" arg3="(polysquare (n + 2)
     (0 + (((power cont_size 2 * 4) + (8 * cont_size)) + 4))
     (4 + ((cont_size * ((cont_size * (2 * adder_gate_bound n)) + 6)) + 8))
     (0 + (cont_size * 6)))">
    <goal name="permut_modular_multiplier&#39;vc.35.0.0" expl="apply premises" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="permut_modular_multiplier&#39;vc.35.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="result&#39;def">
      <goal name="permut_modular_multiplier&#39;vc.35.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="Ensures20">
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="permut_modular_multiplier&#39;vc.35.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.59" steps="980471"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.36" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="permut_modular_multiplier&#39;vc.36.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="permut_modular_multiplier&#39;vc.36.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(modular_multiplier_with_ancillas pick bound n 0)" arg2="(modular_multiplier_with_ancillas pick bound n i)">
     <goal name="permut_modular_multiplier&#39;vc.36.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="path_sem_to_sem">
      <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(width
   (with_permutation (modular_multiplier_with_ancillas pick bound n i)
    (fun (i1:int) -&gt; if i1 &lt; 1 then (i1 + ((2 * n) + 4)) - 1 else i1 - 1)))" arg2="(n+(n+4))">
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_ket_l">
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.61" steps="1047082"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.67" steps="1047085"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="4.33"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.64" steps="1231781"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec5">
         <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="4.99" steps="1638779"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="set_bijective_auto">
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="6.73"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(width (modular_multiplier_with_ancillas pick bound n i))" arg2="((2 * n) + 4)">
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
             <transf name="exists" proved="true" arg1="(if e&#39; = 2*n+3 then 0 else e&#39; +1)">
              <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.1.0.0.0.0" proved="true">
              <proof prover="8"><result status="valid" time="5.44" steps="1721636"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.0.1.0.1.1.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="5.27" steps="1638990"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(ket (n + 4) 0)" arg2="(kronecker (ket (n + 3) 0) (ket 1 0))">
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
         <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="with_permutation_kronecker_gen">
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="4.66"/></proof>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.61" steps="1047079"/></proof>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.95" steps="1063369"/></proof>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(((2 * n) + 4) - 1)" arg2="(n+ (n+3))">
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_ket_l">
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.71" steps="1047082"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.65" steps="1047078"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3.0.2" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="4.54"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3.0.3" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="3.92" steps="1230825"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.3.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="1.66" steps="980468"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.4" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="3.07" steps="1063369"/></proof>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(((2 * n) + 4) - 1)" arg2="(n+ (n+3))">
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="kronecker_ket_l">
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.88" steps="1047082"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5.0.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.90" steps="1047078"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5.0.2" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="4.73"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5.0.3" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="4.08" steps="1230825"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.5.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="1.77" steps="980468"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.6" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.88" steps="1063394"/></proof>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.7" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_is_a_ket_basis_elt">
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.7.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="4.80"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.7.1" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="ket_is_a_ket_basis_elt">
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.7.1.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="2.71" steps="1047078"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.7.1.1" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="4.24" steps="1232587"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="sem_to_path_sem">
           <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(kronecker (ket (n + 2) 0) (ket 1 0))" arg2="(ket (n+3) 0)" arg3="in" arg4="Ensures16">
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="4.64"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.1" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_kets">
             <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.1.0" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="1.73" steps="980478"/></proof>
             </goal>
             <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.72" steps="1047078"/></proof>
             </goal>
             <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.1.2" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="1.65" steps="980452"/></proof>
             </goal>
             <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.1.3" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="3.79" steps="1232569"/></proof>
             </goal>
             <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.0.0.0.8.0.1.4" expl="rewrite premises" proved="true">
             <proof prover="8"><result status="valid" time="2.60" steps="1063097"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_kets">
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="1.67" steps="980492"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.1.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.74" steps="1047078"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.1.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.73" steps="980452"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.1.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.84" steps="1232587"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.0.1.1.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.92" steps="1063097"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="permut_modular_multiplier&#39;vc.36.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="modular_multiplier_with_ancillas&#39;spec" arg2="with" arg3="i">
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="modular_multiplier_with_ancillas&#39;spec" arg2="with" arg3="i">
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="2.37" steps="1360706"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.41" steps="1360710"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.39" steps="1360717"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.35" steps="1360719"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.65" steps="1431859"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.5" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.00" steps="1360708"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.0.6" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.14" steps="1431859"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.30" steps="1360710"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.08" steps="1360717"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.05" steps="1360719"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.16" steps="1431854"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.5" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.02" steps="1360708"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.36.0.0.1.0.6" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.12" steps="1431859"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="permut_modular_multiplier&#39;vc.37" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="permut_modular_multiplier&#39;vc.37.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="permut_modular_multiplier&#39;vc.37.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(modular_multiplier_with_ancillas pick bound n 0)" arg2="(modular_multiplier_with_ancillas pick bound n i)">
     <goal name="permut_modular_multiplier&#39;vc.37.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="path_sem_to_sem">
      <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(width
   (with_permutation (modular_multiplier_with_ancillas pick bound n i)
    (fun (i1:int) -&gt; if i1 &lt; 1 then (i1 + ((2 * n) + 4)) - 1 else i1 - 1)))" arg2="(n+(n+4))">
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_ket_l">
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.64" steps="1047273"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.27" steps="1047269"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.26" steps="1239717"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.18" steps="1232112"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="with_permutation&#39;spec5">
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="4.34" steps="1636291"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="set_bijective_auto">
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="4.69" steps="1722481"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(width (modular_multiplier_with_ancillas pick bound n i))" arg2="((2 * n) + 4)">
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
             <transf name="exists" proved="true" arg1="(if e&#39; = 2*n+3 then 0 else e&#39; +1)">
              <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.1.0.0.0.0" proved="true">
              <proof prover="8"><result status="valid" time="4.69" steps="1722028"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.0.1.0.1.1.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="4.96" steps="1636212"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(ket (n + 4) 0)" arg2="(kronecker (ket (n + 3) 0) (ket 1 0))">
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_assoc_use">
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="with_permutation_kronecker_gen">
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="3.95"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.50" steps="1047270"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.2" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.38" steps="1063558"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(((2 * n) + 4) - 1)" arg2="(n+ (n+3))">
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_ket_l">
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.23" steps="1047273"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.22" steps="1047269"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3.0.2" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.72" steps="1239717"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3.0.3" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.60" steps="1231142"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.3.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="1.56" steps="980674"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.4" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.75" steps="1063558"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(((2 * n) + 4) - 1)" arg2="(n+ (n+3))">
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_ket_l">
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.29" steps="1047273"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.23" steps="1047269"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5.0.2" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.17" steps="1239717"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5.0.3" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.19" steps="1231142"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.5.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="1.63" steps="980674"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.6" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.53" steps="1063583"/></proof>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.7" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_is_a_ket_basis_elt">
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.7.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="3.67" steps="1236880"/></proof>
          </goal>
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.7.1" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="ket_is_a_ket_basis_elt">
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.7.1.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.55" steps="1047269"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.7.1.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.27" steps="1232917"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="sem_to_path_sem">
          <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(kronecker (ket (n + 2) 0) (ket 1 0))" arg2="(ket (n+3) 0)" arg3="in" arg4="Ensures16">
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="3.69"/></proof>
           </goal>
           <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.1" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_kets">
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.1.0" expl="equality hypothesis" proved="true">
            <proof prover="8"><result status="valid" time="1.60" steps="980684"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.20" steps="1047269"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.1.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="1.34" steps="980658"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.1.3" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="3.18" steps="1232901"/></proof>
            </goal>
            <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.0.0.8.0.1.4" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.45" steps="1063288"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_kets">
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="1.68" steps="980684"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.1.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.24" steps="1047269"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.1.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.37" steps="980658"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.1.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.24" steps="1232917"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.0.1.1.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.39" steps="1063288"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="permut_modular_multiplier&#39;vc.37.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="modular_multiplier_with_ancillas&#39;spec" arg2="with" arg3="i">
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="modular_multiplier_with_ancillas&#39;spec" arg2="with" arg3="i">
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="2.00" steps="1360917"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.94" steps="1360921"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.34" steps="1360928"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="2.29" steps="1360930"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.05" steps="1432096"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.5" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="1.94" steps="1360919"/></proof>
        </goal>
        <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.0.6" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.57" steps="1432096"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.30" steps="1360921"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.32" steps="1360928"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.3" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.31" steps="1360930"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.4" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.13" steps="1432093"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.5" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.28" steps="1360919"/></proof>
       </goal>
       <goal name="permut_modular_multiplier&#39;vc.37.0.0.1.0.6" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.04" steps="1432096"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="modular_multiplier&#39;vc" expl="VC for modular_multiplier" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="modular_multiplier&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.27" steps="1259738"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.42" steps="969413"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.81" steps="1265958"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.56" steps="969503"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.30" steps="1267285"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.55" steps="1034256"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.56" steps="1035049"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.7" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="x" arg2="(ket n (ket_to_int x))">
   <goal name="modular_multiplier&#39;vc.7.0" expl="precondition" proved="true">
   <transf name="case" proved="true" arg1="(0&lt;= ket_to_int x &lt; bound )">
    <goal name="modular_multiplier&#39;vc.7.0.0" expl="true case (precondition)" proved="true">
    <transf name="exists" proved="true" arg1="(ket n (mod1 (mod1 pick bound * (ket_to_int x)) bound))">
     <goal name="modular_multiplier&#39;vc.7.0.0.0" proved="true">
     <transf name="apply" proved="true" arg1="sem_to_path_sem">
      <goal name="modular_multiplier&#39;vc.7.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="2.20"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="modular_multiplier&#39;vc.7.0.1" expl="false case (precondition)" proved="true">
    <transf name="exists" proved="true" arg1="(ket n (ket_to_int x))">
     <goal name="modular_multiplier&#39;vc.7.0.1.0" proved="true">
     <transf name="apply" proved="true" arg1="sem_to_path_sem">
      <goal name="modular_multiplier&#39;vc.7.0.1.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="Ensures">
       <goal name="modular_multiplier&#39;vc.7.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="modular_multiplier&#39;vc.7.0.1.0.0.0.0" proved="true">
        <proof prover="0"><result status="valid" time="1.92"/></proof>
        </goal>
        <goal name="modular_multiplier&#39;vc.7.0.1.0.0.0.1" proved="true">
        <transf name="replace" proved="true" arg1="n" arg2="(ket_length x)">
         <goal name="modular_multiplier&#39;vc.7.0.1.0.0.0.1.0" proved="true">
         <proof prover="0"><result status="valid" time="1.93"/></proof>
         </goal>
         <goal name="modular_multiplier&#39;vc.7.0.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="3.62" steps="1309858"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="modular_multiplier&#39;vc.7.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="n" arg2="(ket_length x)">
    <goal name="modular_multiplier&#39;vc.7.1.0" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="2.62" steps="1035501"/></proof>
    </goal>
    <goal name="modular_multiplier&#39;vc.7.1.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="3.67" steps="1308959"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.56" steps="1042440"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.79" steps="1070928"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.24" steps="1043610"/></proof>
  </goal>
  <goal name="modular_multiplier&#39;vc.11" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="modular_multiplier&#39;vc.11.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="3.89" steps="1290429"/></proof>
   </goal>
   <goal name="modular_multiplier&#39;vc.11.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="Ensures10">
    <goal name="modular_multiplier&#39;vc.11.1.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (permut_modular_multiplier (mod1 pick bound) bound n) - (n + 4))" arg2="n">
     <goal name="modular_multiplier&#39;vc.11.1.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.43" steps="1289154"/></proof>
     </goal>
     <goal name="modular_multiplier&#39;vc.11.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.38" steps="977136"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="modular_multiplier&#39;vc.11.1.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="sem_to_path_sem">
     <goal name="modular_multiplier&#39;vc.11.1.1.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(mod1 (pick * i) bound)" arg2="(mod1 (mod1 pick bound * i) bound)">
      <goal name="modular_multiplier&#39;vc.11.1.1.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="Ensures13">
       <goal name="modular_multiplier&#39;vc.11.1.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.41" steps="977138"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="modular_multiplier&#39;vc.11.1.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="1"><result status="valid" time="5.86" steps="281761"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_multiplier&#39;vc.12" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="modular_multiplier&#39;vc.12.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="3.86" steps="1295282"/></proof>
   </goal>
   <goal name="modular_multiplier&#39;vc.12.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="Ensures11">
    <goal name="modular_multiplier&#39;vc.12.1.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(width (permut_modular_multiplier (mod1 pick bound) bound n) - (n + 4))" arg2="n">
     <goal name="modular_multiplier&#39;vc.12.1.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.36" steps="1294146"/></proof>
     </goal>
     <goal name="modular_multiplier&#39;vc.12.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="1.60" steps="977293"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="modular_multiplier&#39;vc.12.1.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="sem_to_path_sem">
     <goal name="modular_multiplier&#39;vc.12.1.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="Ensures13">
      <goal name="modular_multiplier&#39;vc.12.1.1.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.40" steps="977295"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="multiplier_gate_bound&#39;vc" expl="VC for multiplier_gate_bound" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="multiplier_gate_bound&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_gate_bound&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.57" steps="970341"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_gate_bound&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_gate_bound&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.67" steps="1032194"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_gate_bound&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.84" steps="1258310"/></proof>
  </goal>
  <goal name="multiplier_gate_bound&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_gate_bound&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.81"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_gate_bound&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="multiplier_gate_bound&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.49" steps="1032307"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="multiplier_gate_bound&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="970643"/></proof>
  </goal>
  <goal name="multiplier_gate_bound&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="5.10" steps="266827"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
