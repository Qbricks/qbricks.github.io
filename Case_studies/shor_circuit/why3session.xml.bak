<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.7" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.8.6" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="8" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="shor_circuit.mlw"/>
<theory name="Shor">
 <goal name="create_superposition&#39;vc" expl="VC for create_superposition" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="create_superposition&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.80" steps="1070216"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="create_superposition&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.23" steps="1164596"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="create_superposition&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.48" steps="1230659"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="create_superposition&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="4.05" steps="1265286"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="create_superposition&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="create_superposition&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.63" steps="1262104"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="create_superposition&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.49" steps="1191958"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.72" steps="1270418"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.10" steps="1270822"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.36" steps="1349418"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.70"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.44" steps="1200970"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.49" steps="1201291"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.35" steps="1270823"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.69" steps="1201665"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.70" steps="1218221"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.98" steps="1270771"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.44" steps="1201690"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="modular_expo&#39;vc" expl="VC for modular_expo">
 <transf name="split_vc" >
  <goal name="modular_expo&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.34" steps="1007947"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.38" steps="1008196"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.44" steps="1008211"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.89" steps="1352601"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.49" steps="1008692"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.57" steps="1008707"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="7.14" steps="1361166"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.50" steps="1008984"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.89" steps="1072158"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.68" steps="1009062"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.08" steps="1081114"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.11" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_expo&#39;vc.11.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="((cont_size * multiplier_gate_bound n) * 1)" arg2="((cont_size * multiplier_gate_bound n) )">
    <goal name="modular_expo&#39;vc.11.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="leq_trans_mult_right">
     <goal name="modular_expo&#39;vc.11.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.85" steps="1081139"/></proof>
     </goal>
     <goal name="modular_expo&#39;vc.11.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="6.72" steps="1371160"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="modular_expo&#39;vc.11.0.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="3.25" steps="1015214"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_expo&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.72" steps="1015202"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.38" steps="1015217"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.14" expl="precondition">
  <proof prover="8"><result status="timeout" time="8.00" steps="1241389"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.99" steps="1015502"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.79" steps="1015513"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.21" steps="1015779"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.72" steps="1015794"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="6.55" steps="1369508"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.25" steps="1016064"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.88" steps="1081838"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.92" steps="1016133"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.23" expl="variant decrease" proved="true">
  <proof prover="8"><result status="valid" time="2.65" steps="1007978"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.24" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_expo&#39;vc.24.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="4.15" steps="1071816"/></proof>
   </goal>
   <goal name="modular_expo&#39;vc.24.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="5.30" steps="1071016"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_expo&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.83" steps="1013970"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.76" steps="1014215"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1014434"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.25" steps="1014449"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="6.00" steps="1389092"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.62" steps="1082281"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.10" steps="1081566"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.51" steps="1015002"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.42" steps="1015470"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.55" steps="1015485"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.35" expl="precondition">
  <proof prover="8"><result status="timeout" time="8.00" steps="1398250"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.27" steps="1083590"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.54" steps="1082775"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.66" steps="1015840"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.80" steps="1083557"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.22" steps="1165953"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.41" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="leq_trans_add">
   <goal name="modular_expo&#39;vc.41.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="4.14" steps="1096525"/></proof>
   </goal>
   <goal name="modular_expo&#39;vc.41.1" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="modular_expo&#39;vc.41.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="cont&#39;spec10">
     <goal name="modular_expo&#39;vc.41.1.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="3.41"/></proof>
     </goal>
     <goal name="modular_expo&#39;vc.41.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="7.14" steps="1535397"/></proof>
     </goal>
     <goal name="modular_expo&#39;vc.41.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="6.91" steps="1534289"/></proof>
     </goal>
     <goal name="modular_expo&#39;vc.41.1.0.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="4.32" steps="1456356"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_expo&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.42" steps="1096554"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.97" steps="1096569"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="6.46" steps="1481280"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.62" steps="1096818"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.27" steps="1096829"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.81" steps="1097104"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.70" steps="1097119"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="7.88" steps="1481934"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.50" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.66" steps="1167996"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.51" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.79" steps="1167258"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.52" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.72" steps="1097491"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.53" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.08" steps="1168075"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.54" expl="postcondition">
  <proof prover="8"><result status="timeout" time="7.00" steps="1170195"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.55" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="9.37" steps="1561835"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.56" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.06"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.57" expl="postcondition">
  <transf name="case" arg1="(getbv x k = 1)">
   <goal name="modular_expo&#39;vc.57.0" expl="true case (postcondition)" proved="true">
   <transf name="destruct" proved="true" arg1="H1">
    <goal name="modular_expo&#39;vc.57.0.0" expl="true case (postcondition)" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="modular_expo&#39;vc.57.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="modular_expo&#39;vc.57.0.0.0.0" expl="true case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="H8">
       <goal name="modular_expo&#39;vc.57.0.0.0.0.0" expl="true case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="cont_kron_pat_right">
        <goal name="modular_expo&#39;vc.57.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_eq">
         <goal name="modular_expo&#39;vc.57.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="5.09" steps="1365663"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.57.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="sem_to_path_sem">
          <goal name="modular_expo&#39;vc.57.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
      (k + 1))" arg2="(power 2 ((2 * n) - 1))">
           <goal name="modular_expo&#39;vc.57.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="3.05"/></proof>
           </goal>
           <goal name="modular_expo&#39;vc.57.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="ind_isum_one">
            <goal name="modular_expo&#39;vc.57.0.0.0.0.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="modular_expo&#39;vc.57.0.0.0.0.0.0.1.0.1.0.0" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="4.87" steps="1383809"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="modular_expo&#39;vc.57.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="4.91" steps="1365679"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.57.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="6.81" steps="1442373"/></proof>
        </goal>
        <goal name="modular_expo&#39;vc.57.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="7.33" steps="1442357"/></proof>
        </goal>
        <goal name="modular_expo&#39;vc.57.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="3.09"/></proof>
        </goal>
        <goal name="modular_expo&#39;vc.57.0.0.0.0.0.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="6.86" steps="1444081"/></proof>
        </goal>
        <goal name="modular_expo&#39;vc.57.0.0.0.0.0.5" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="7.17" steps="1444104"/></proof>
        </goal>
        <goal name="modular_expo&#39;vc.57.0.0.0.0.0.6" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="7.55" steps="1455064"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="modular_expo&#39;vc.57.0.1" expl="true case (postcondition)" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="modular_expo&#39;vc.57.0.1.0" expl="true case (postcondition)" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="modular_expo&#39;vc.57.0.1.0.0" expl="true case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="H8">
       <goal name="modular_expo&#39;vc.57.0.1.0.0.0" expl="true case (postcondition)" proved="true">
       <transf name="apply" proved="true" arg1="path_sem_comp" arg2="with" arg3="(kronecker (bv_to_ket x)
    (ket n
     (mod1
      (power a
       (ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1))
        0 (k -1+ 1)))
      bound))
)">
        <goal name="modular_expo&#39;vc.57.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(width o40)" arg2="(2*n+n)">
         <goal name="modular_expo&#39;vc.57.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="6.93" steps="1537404"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="7.90" steps="1537404"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="6.32" steps="1539186"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="3.57"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="modular_expo&#39;vc.57.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="5.30" steps="1458847"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.57.0.1.0.0.0.1" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(k-1)" arg2="o41">
         <goal name="modular_expo&#39;vc.57.0.1.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="H91">
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="4.29" steps="1458833"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="modular_expo&#39;vc.57.0.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="4.18" steps="1458840"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="H16">
         <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="cont_kron_pat_right">
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_eq">
           <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="5.19" steps="1458831"/></proof>
           </goal>
           <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="sem_to_path_sem">
            <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0" expl="apply premises" proved="true">
            <transf name="instantiate" proved="true" arg1="H18" arg2="(mod1
    (power a
     (ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
      ((k - 1) + 1)))
    bound)">
             <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(mod1
    (power a
     (ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
      (k + 1)))
    bound)" arg2="(mod1
    (power a (power 2 (((2 * n) - k) - 1))
     * mod1
       (power a
        (ind_isum
         (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
         ((k - 1) + 1)))
       bound)
    bound)
">
              <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(power a (power 2 (((2 * n) - k) - 1)))" arg2="o19">
               <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="Hinst">
                <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="6.27" steps="1541329"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="4.80" steps="1459363"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
              <transf name="rewrite" proved="true" arg1="ind_isum_right_extension">
               <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0" expl="equality hypothesis" proved="true">
                <transf name="rewrite" proved="true" arg1="power_sum">
                 <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                 <transf name="assert" proved="true" arg1="(forall a b c d. a=d -&gt; b= c -&gt; mod1 (a*b) bound = mod1 (c*mod1 d bound)bound)">
                  <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
                   <transf name="rewrite" proved="true" arg1="H">
                    <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
                    <transf name="replace" proved="true" arg1="a" arg2="(mod1 d bound + bound * div1 d bound)">
                     <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                     <transf name="rewrite" proved="true" arg1="mult_add_right">
                      <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                      <transf name="replace" proved="true" arg1="((mod1 d bound * c) + ((bound * div1 d bound) * c))" arg2="( ((bound * div1 d bound) * c) +(mod1 d bound * c) )">
                       <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                       <transf name="rewrite" proved="true" arg1="simpl_add_mod_left">
                        <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                        <proof prover="8"><result status="valid" time="4.32" steps="1458798"/></proof>
                        </goal>
                        <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                        <proof prover="8"><result status="valid" time="7.43" steps="1539555"/></proof>
                        </goal>
                        <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="7.67"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                       <proof prover="8"><result status="valid" time="3.71" steps="1458778"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                     <proof prover="1"><result status="valid" time="4.04"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="h">
                   <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
                   <transf name="replace" proved="true" arg1="(k-1+1)" arg2="k">
                    <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                    </transf>
                    </goal>
                    <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                    <proof prover="8"><result status="valid" time="3.77" steps="1459665"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.1.1" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="one_mult">
                    <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.1.1.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="3.80" steps="1459656"/></proof>
                    </goal>
                    <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                    <proof prover="8"><result status="valid" time="4.74" steps="1459658"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="ind_isum_pos">
                  <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="4.84" steps="1459356"/></proof>
                  </goal>
                  <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.1.1" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.1.1.0" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="5.96"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.40"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="3.86" steps="1459356"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="6.92" steps="1537422"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="5.65" steps="1537398"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.3" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="3.47"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.4" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="6.39" steps="1539160"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.5" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="7.07" steps="1539183"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.6" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="7.75" steps="1550742"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.57.0.1.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="5.87" steps="1537795"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="modular_expo&#39;vc.57.1" expl="false case (postcondition)">
   <transf name="destruct" arg1="H1">
    <goal name="modular_expo&#39;vc.57.1.0" expl="false case (postcondition)" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="modular_expo&#39;vc.57.1.0.0" expl="false case (postcondition)" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="modular_expo&#39;vc.57.1.0.0.0" expl="false case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="H8">
       <goal name="modular_expo&#39;vc.57.1.0.0.0.0" expl="false case (postcondition)" proved="true">
       <transf name="replace" proved="true" arg1="(ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1))
        0 (k + 1))" arg2="0">
        <goal name="modular_expo&#39;vc.57.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="cont_kron_pat_right1">
         <goal name="modular_expo&#39;vc.57.1.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
         <proof prover="1"><result status="valid" time="2.84"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.57.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="7.76" steps="1442374"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.57.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="6.45" steps="1442358"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.57.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.89"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.57.1.0.0.0.0.0.4" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="6.58" steps="1444077"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.57.1.0.0.0.0.0.5" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="6.44" steps="1444100"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.57.1.0.0.0.0.0.6" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="8.74" steps="1724780"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.57.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="ind_isum_one">
         <goal name="modular_expo&#39;vc.57.1.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="modular_expo&#39;vc.57.1.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
          <proof prover="1"><result status="valid" time="4.26"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="modular_expo&#39;vc.57.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="3.63" steps="1365683"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="modular_expo&#39;vc.57.1.1" expl="false case (postcondition)">
    <transf name="split_all_full" >
     <goal name="modular_expo&#39;vc.57.1.1.0" expl="false case (postcondition)">
     <transf name="eliminate_let" >
      <goal name="modular_expo&#39;vc.57.1.1.0.0" expl="false case (postcondition)">
      <transf name="rewrite" arg1="H8">
       <goal name="modular_expo&#39;vc.57.1.1.0.0.0" expl="false case (postcondition)">
       <transf name="apply" arg1="path_sem_comp" arg2="with" arg3="(kronecker (bv_to_ket x)
    (ket n
     (mod1
      (power a
       (ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1))
        0 (k -1+ 1)))
      bound))
)">
        <goal name="modular_expo&#39;vc.57.1.1.0.0.0.0" expl="apply premises">
        <transf name="replace" arg1="(width o40)" arg2="(2*n+n)">
         <goal name="modular_expo&#39;vc.57.1.1.0.0.0.0.0" expl="apply premises">
         <transf name="apply" arg1="kronecker_ket_l">
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="7.48" steps="1537405"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="7.34" steps="1537405"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.0.0.2" expl="apply premises">
          <proof prover="8"><result status="timeout" time="8.00" steps="1538530"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="4.37"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="modular_expo&#39;vc.57.1.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="5.15" steps="1458851"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.57.1.1.0.0.0.1" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(k-1)" arg2="o41">
         <goal name="modular_expo&#39;vc.57.1.1.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="H91">
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.1.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="3.92" steps="1458837"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="modular_expo&#39;vc.57.1.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="5.82" steps="1458844"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="H16">
         <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="cont_kron_pat_right1">
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
      (k + 1))" arg2="(ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
      (k -1+ 1))">
           <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
           </transf>
           </goal>
           <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="ind_isum_right_extension">
            <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.0.1.0" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="add_zero">
             <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.0.1.0.0" expl="equality hypothesis" proved="true">
             <transf name="replace" proved="true" arg1="(k-1+1)" arg2="k">
              <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
              <transf name="compute_specified" proved="true" >
              </transf>
              </goal>
              <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="3.98" steps="1458851"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.0.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="5.98"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="4.94" steps="1458837"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="5.96" steps="1537423"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="7.50" steps="1537399"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.3" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="4.01"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.4" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="6.87" steps="1539157"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.5" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="6.17" steps="1539180"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.6" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
           <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.6.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="9.14" steps="1827607"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.57.1.1.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="7.31" steps="1537796"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_expo&#39;vc.58" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.57" steps="1049105"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.59" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.63" steps="1049420"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.60" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.62" steps="1049423"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.61" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.54" steps="1049454"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.62" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures3">
   <goal name="modular_expo&#39;vc.62.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
      (((2 * n) - 1) + 1))" arg2="(bv_to_int x)">
    <goal name="modular_expo&#39;vc.62.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="2.73" steps="1049472"/></proof>
    </goal>
    <goal name="modular_expo&#39;vc.62.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
     <goal name="modular_expo&#39;vc.62.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="ind_isum_eq_gen">
      <goal name="modular_expo&#39;vc.62.0.1.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="modular_expo&#39;vc.62.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="modular_expo&#39;vc.62.0.1.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="2.78"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="modular_expo&#39;vc.62.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.01" steps="1049472"/></proof>
      </goal>
      <goal name="modular_expo&#39;vc.62.0.1.0.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.52" steps="1049481"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="modular_expo&#39;vc.62.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="3.90" steps="1049474"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="shor_circ_pre&#39;vc" expl="VC for shor_circ_pre">
 <transf name="split_vc" >
  <goal name="shor_circ_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.22" steps="1080659"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.85" steps="1080648"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.02" steps="1082708"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.55" steps="1130250"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.33" steps="1202486"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.59" steps="1231401"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.00" steps="1229508"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.36" steps="1230948"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.89" steps="1231189"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="6.74" steps="1231746"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="6.21" steps="1232410"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.96" steps="1232640"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.11" steps="1165139"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.99" steps="1165152"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.33" steps="1165167"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.23" steps="1165186"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.44" steps="1165177"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.28" steps="1233559"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.18" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="shor_circ_pre&#39;vc.18.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.93" steps="1165551"/></proof>
   </goal>
   <goal name="shor_circ_pre&#39;vc.18.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="4.34" steps="1165551"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ_pre&#39;vc.19" expl="precondition">
  <proof prover="8"><result status="timeout" time="7.00" steps="1234667"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.20" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (create_superposition (2 * n) (3 * n) (ket n 1)))" arg2="(2*n+n)">
   <goal name="shor_circ_pre&#39;vc.20.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="kronecker_ket_l">
    <goal name="shor_circ_pre&#39;vc.20.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="5.42" steps="1233881"/></proof>
    </goal>
    <goal name="shor_circ_pre&#39;vc.20.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="5.07" steps="1233881"/></proof>
    </goal>
    <goal name="shor_circ_pre&#39;vc.20.0.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="5.67" steps="1235163"/></proof>
    </goal>
    <goal name="shor_circ_pre&#39;vc.20.0.3" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="6.39" steps="1235161"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="shor_circ_pre&#39;vc.20.1" expl="equality hypothesis" proved="true">
   <proof prover="8"><result status="valid" time="3.30" steps="1165629"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ_pre&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.35" steps="1165626"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.22" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
   <goal name="shor_circ_pre&#39;vc.22.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_scal">
    <goal name="shor_circ_pre&#39;vc.22.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="scalar_eq">
     <goal name="shor_circ_pre&#39;vc.22.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
      <goal name="shor_circ_pre&#39;vc.22.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_sum_">
       <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
        <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="6.39" steps="1234748"/></proof>
        </goal>
        <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.67" steps="1165627"/></proof>
        </goal>
        <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.39" steps="1165643"/></proof>
        </goal>
        <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="modular_expo&#39;spec">
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_eq">
             <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="3.21"/></proof>
             </goal>
             <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="4.33" steps="1545923"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="5.75" steps="1545927"/></proof>
            </goal>
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="4.67" steps="1545934"/></proof>
            </goal>
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="4.59" steps="1545936"/></proof>
            </goal>
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.4" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="4.28" steps="1545940"/></proof>
            </goal>
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.5" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="5.43" steps="1545925"/></proof>
            </goal>
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.6" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="7.06" steps="1626526"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.21" steps="1165636"/></proof>
       </goal>
       <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="5.63" steps="1285485"/></proof>
       </goal>
       <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
         <transf name="replace" proved="true" arg1="(width (modular_expo a bound n))" arg2="(2*n+n)">
          <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="ket_kronecker_l">
           <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="3.39"/></proof>
           </goal>
           <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="5.62" steps="1235190"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="3.76" steps="1165655"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="shor_circ_pre&#39;vc.22.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="shor_circ_pre&#39;vc.22.0.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="3.35"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="shor_circ_pre&#39;vc.22.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.29" steps="1165629"/></proof>
      </goal>
      <goal name="shor_circ_pre&#39;vc.22.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="2.94" steps="1165631"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_circ_pre&#39;vc.22.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="3.35"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ_pre&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.67" steps="1234292"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.83" steps="1165742"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.91" steps="1165987"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.97" steps="1166206"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.20" steps="1166219"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.06" steps="1166234"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.07" steps="1166253"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.23" steps="1166244"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="6.24" steps="1234629"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.54" steps="1166549"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.11" steps="1236593"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="6.71" steps="1236209"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.45" steps="1166629"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.25" steps="1166603"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.14" steps="1166616"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.54" steps="1166631"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.38" steps="1166650"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.68" steps="1166641"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.97" steps="1235500"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.11" steps="1166922"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.98" steps="1237074"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.85" steps="1236008"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.45" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="5.88" steps="1329230"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.46" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="shor_circ_pre&#39;vc.46.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures39">
    <goal name="shor_circ_pre&#39;vc.46.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures27">
     <goal name="shor_circ_pre&#39;vc.46.0.0.0" expl="postcondition" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b. a&lt;= b -&gt; max a b = b)">
      <goal name="shor_circ_pre&#39;vc.46.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="shor_circ_pre&#39;vc.46.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="3.74"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="shor_circ_pre&#39;vc.46.0.0.0.1" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="h">
       <goal name="shor_circ_pre&#39;vc.46.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="5.50" steps="1329050"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ_pre&#39;vc.47" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="4.96" steps="1329869"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.48" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="shor_circ_pre&#39;vc.48.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="result" arg2="(create_superposition (2 * n) (3 * n) (ket n 1) -- modular_expo a bound n)">
    <goal name="shor_circ_pre&#39;vc.48.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="Ensures47">
    </transf>
    </goal>
    <goal name="shor_circ_pre&#39;vc.48.0.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="3.08" steps="1257910"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="shor_ket&#39;vc" expl="VC for shor_ket" proved="true">
 <proof prover="1"><result status="valid" time="2.90"/></proof>
 </goal>
 <goal name="shor_circ&#39;vc" expl="VC for shor_circ" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="shor_circ&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.37" steps="1010275"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.05" steps="1135081"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.04" steps="1141719"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.07" steps="1141712"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.58" steps="1075682"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.94" steps="1134920"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.07" steps="1134802"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.46" steps="1203310"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.95" steps="1134664"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.31" steps="1203172"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.03" steps="1235666"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.24" steps="1235241"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.42" steps="1248138"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.38" steps="1246723"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.28" steps="1237932"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.21" steps="1238173"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.26" steps="1239534"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.11" steps="1240548"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.20" steps="1241794"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.51" steps="1174093"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.54" steps="1174394"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.46" steps="1243921"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.80" steps="1182155"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.88" steps="1182168"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.81" steps="1182183"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.78" steps="1182202"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.81" steps="1182193"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.27" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (shor_circ_pre a bound n))" arg2="(2*n+n)">
   <goal name="shor_circ&#39;vc.27.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="kronecker_ket_l">
    <goal name="shor_circ&#39;vc.27.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="4.74" steps="1251463"/></proof>
    </goal>
    <goal name="shor_circ&#39;vc.27.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="4.61" steps="1251463"/></proof>
    </goal>
    <goal name="shor_circ&#39;vc.27.0.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="5.06" steps="1252745"/></proof>
    </goal>
    <goal name="shor_circ&#39;vc.27.0.3" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="5.25" steps="1252743"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="shor_circ&#39;vc.27.1" expl="equality hypothesis" proved="true">
   <proof prover="8"><result status="valid" time="3.22" steps="1182379"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ&#39;vc.28" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="shor_circ&#39;vc.28.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="scalar_eq_gen">
    <goal name="shor_circ&#39;vc.28.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="ket_sum_eq">
     <goal name="shor_circ&#39;vc.28.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="6.23" steps="1251475"/></proof>
     </goal>
     <goal name="shor_circ&#39;vc.28.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.96" steps="1182374"/></proof>
     </goal>
     <goal name="shor_circ&#39;vc.28.0.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="shor_circ&#39;vc.28.0.0.2.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="shor_circ&#39;vc.28.0.0.2.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_eq">
        <goal name="shor_circ&#39;vc.28.0.0.2.0.0.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="4.88"/></proof>
        </goal>
        <goal name="shor_circ&#39;vc.28.0.0.2.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="4.52" steps="1182386"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_circ&#39;vc.28.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.18" steps="1182374"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ&#39;vc.29" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_scal">
   <goal name="shor_circ&#39;vc.29.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="scalar_eq_gen">
    <goal name="shor_circ&#39;vc.29.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_sum_">
     <goal name="shor_circ&#39;vc.29.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_scalar_rev_l">
      <goal name="shor_circ&#39;vc.29.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
       <goal name="shor_circ&#39;vc.29.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="6.70" steps="1251585"/></proof>
       </goal>
       <goal name="shor_circ&#39;vc.29.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.31" steps="1182482"/></proof>
       </goal>
       <goal name="shor_circ&#39;vc.29.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.95" steps="1182482"/></proof>
       </goal>
       <goal name="shor_circ&#39;vc.29.0.0.0.0.3" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures71">
          <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_rev_qft_unit">
           <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
            <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="scalar_eq">
             <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
              <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
               <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="4.51"/></proof>
               </goal>
               <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="3.12" steps="1182494"/></proof>
               </goal>
               <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="3.99"/></proof>
               </goal>
               <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                 <transf name="eliminate_if" proved="true" >
                  <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0" proved="true">
                  <transf name="replace" proved="true" arg1="(ket_to_int (bv_to_ket a1))" arg2="(bv_to_int a1)">
                   <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="kronecker_eq">
                     <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="0"><result status="valid" time="10.09" steps="2150608"/></proof>
                     </goal>
                     <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0.0.1" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="4.88" steps="1205094"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0.1" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="6.17" steps="1319414"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="8"><result status="valid" time="6.21" steps="1274884"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="scalar_ket_l">
                 <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="5.70"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="4.92"/></proof>
              </goal>
              <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="3.42" steps="1182498"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="3.49" steps="1182505"/></proof>
           </goal>
           <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="4.88"/></proof>
           </goal>
           <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="5.56" steps="1252862"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="4.65"/></proof>
          </goal>
          <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.2" expl="rewrite premises" proved="true">
          <transf name="replace" proved="true" arg1="((3 * n) - width (qft_rev (2 * n)))" arg2="n">
           <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.2.0" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="3.67"/></proof>
           </goal>
           <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.2.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="3.58" steps="1182503"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="shor_circ&#39;vc.29.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="4.86" steps="1251585"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="shor_circ&#39;vc.29.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="3.64" steps="1182491"/></proof>
     </goal>
     <goal name="shor_circ&#39;vc.29.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="3.18" steps="1182491"/></proof>
     </goal>
     <goal name="shor_circ&#39;vc.29.0.0.3" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="shor_circ&#39;vc.29.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="shor_circ&#39;vc.29.0.0.3.0.0" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (place (qft_rev (2 * n)) 0 (3 * n)))" arg2="(2*n+n)">
        <goal name="shor_circ&#39;vc.29.0.0.3.0.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_ket_l">
         <goal name="shor_circ&#39;vc.29.0.0.3.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="5.18" steps="1251598"/></proof>
         </goal>
         <goal name="shor_circ&#39;vc.29.0.0.3.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="5.70" steps="1251598"/></proof>
         </goal>
         <goal name="shor_circ&#39;vc.29.0.0.3.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="4.73"/></proof>
         </goal>
         <goal name="shor_circ&#39;vc.29.0.0.3.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="4.35"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="shor_circ&#39;vc.29.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="3.42" steps="1182510"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_circ&#39;vc.29.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="4.21" steps="1182482"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="shor_circ&#39;vc.29.1" expl="rewrite premises" proved="true">
   <transf name="replace" proved="true" arg1="(width (place (qft_rev (2 * n)) 0 (3 * n)))" arg2="(3*n)">
    <goal name="shor_circ&#39;vc.29.1.0" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="4.05"/></proof>
    </goal>
    <goal name="shor_circ&#39;vc.29.1.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="4.45" steps="1182484"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.98" steps="1252210"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.02" steps="1182644"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.48" steps="1251728"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.12" steps="1182659"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.67" steps="1182662"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.27" steps="1182661"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.50" steps="1182913"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.61" steps="1251843"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.59" steps="1182928"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.03" steps="1182931"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.04" steps="1182917"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.72" steps="1183143"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.27" steps="1183444"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.68" steps="1253183"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.00" steps="1183739"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.54" steps="1183752"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.22" steps="1183767"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.61" steps="1183786"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.46" steps="1183777"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.89" steps="1253115"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.50" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.21" steps="1338314"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.51" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="3.21"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.52" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.61" steps="1266042"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.53" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.70" steps="1266343"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.54" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.45" steps="1338660"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.55" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.73" steps="1266638"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.56" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.76" steps="1266651"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.57" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.85" steps="1266666"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.58" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.82" steps="1266685"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.59" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.86" steps="1266676"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.60" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.53" steps="1338573"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.61" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="4.58" steps="1338852"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.62" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="shor_circ&#39;vc.62.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures10">
    <goal name="shor_circ&#39;vc.62.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(ancillas (place (qft_rev (2 * n)) 0 (3 * n)))" arg2="0">
     <goal name="shor_circ&#39;vc.62.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="max_left">
      <goal name="shor_circ&#39;vc.62.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="4.55" steps="1338606"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="shor_circ&#39;vc.62.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="3.02" steps="1283478"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ&#39;vc.63" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="5.03" steps="1339494"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.64" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="shor_circ&#39;vc.64.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="shor_circ&#39;vc.64.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures57">
     <goal name="shor_circ&#39;vc.64.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="scalar_assoc">
      <goal name="shor_circ&#39;vc.64.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="scalar_eq_gen">
       <goal name="shor_circ&#39;vc.64.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq">
        <goal name="shor_circ&#39;vc.64.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="5.08" steps="1339592"/></proof>
        </goal>
        <goal name="shor_circ&#39;vc.64.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.95" steps="1268566"/></proof>
        </goal>
        <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="ket_sum_eq">
           <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="4.97" steps="1339605"/></proof>
           </goal>
           <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.01" steps="1268578"/></proof>
           </goal>
           <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0.0.2" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0.0.2.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0.0.2.0.0" expl="apply premises" proved="true">
             <transf name="eliminate_if" proved="true" >
              <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0.0.2.0.0.0" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0.0.2.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="9.43" steps="1710115"/></proof>
               </goal>
               <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0.0.2.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="5.61" steps="1384382"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="shor_circ&#39;vc.64.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="8.15" steps="1684090"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="k_bound&#39;vc" expl="VC for k_bound">
 <transf name="split_vc" >
  <goal name="k_bound&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="k_bound&#39;vc.0.0" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(forall  a b c . (a-. b) -. (c+.b) = (a-.c) -. (b+.b))">
    <goal name="k_bound&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="k_bound&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <transf name="replace" proved="true" arg1="((a -. b) -. (c +. b))" arg2="((a -. b -. c -. b))">
      <goal name="k_bound&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="replace" proved="true" arg1="((a -. b) -. c-.b )" arg2="(a -. c -. b -. b)">
       <goal name="k_bound&#39;vc.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="8"><result status="valid" time="4.35" steps="1075993"/></proof>
       </goal>
       <goal name="k_bound&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="minus_elim">
        <goal name="k_bound&#39;vc.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="minus_elim">
         <goal name="k_bound&#39;vc.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
         <transf name="rewrite" proved="true" arg1="minus_elim">
          <goal name="k_bound&#39;vc.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="6.71" steps="1351597"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="k_bound&#39;vc.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="4.72" steps="1075984"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="k_bound&#39;vc.0.0.1" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="3.86" steps="1011528"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="6.49" steps="1346605"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.80" steps="1011538"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="6.50" steps="1359028"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.52" steps="1076963"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.29" steps="1077255"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.98" steps="1011655"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="6.61" steps="1382510"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.98"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.9" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(k &lt;= (div1 (power 2 (2 * n)) (multi_order a bound) ))">
   <goal name="k_bound&#39;vc.9.0" expl="asserted formula" proved="true">
   <proof prover="8"><result status="valid" time="3.90" steps="1011716"/></proof>
   </goal>
   <goal name="k_bound&#39;vc.9.1" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="i_to_c_mult">
    <goal name="k_bound&#39;vc.9.1.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c_add">
     <goal name="k_bound&#39;vc.9.1.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="compat_i_to_c_infeq">
      <goal name="k_bound&#39;vc.9.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="3.52"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.10" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="i_to_c_strict_pos">
   <goal name="k_bound&#39;vc.10.0" expl="apply premises" proved="true">
   <transf name="assert" proved="true" arg1="(forall a b. 0&lt; a -&gt; 0&lt;= b -&gt; 0&lt; a+b)">
    <goal name="k_bound&#39;vc.10.0.0" expl="asserted formula" proved="true">
    <proof prover="8"><result status="valid" time="5.23" steps="1078474"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.10.0.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="h">
     <goal name="k_bound&#39;vc.10.0.1.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b. 0&lt; a -&gt; 0&lt; b -&gt; 0&lt; a*b)">
      <goal name="k_bound&#39;vc.10.0.1.0.0" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="6.06"/></proof>
      </goal>
      <goal name="k_bound&#39;vc.10.0.1.0.1" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="h">
       <goal name="k_bound&#39;vc.10.0.1.0.1.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="positive_div">
        <goal name="k_bound&#39;vc.10.0.1.0.1.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="k_bound&#39;vc.10.0.1.0.1.0.0.0" proved="true">
         <proof prover="8"><result status="valid" time="3.61" steps="1011964"/></proof>
         </goal>
         <goal name="k_bound&#39;vc.10.0.1.0.1.0.0.1" proved="true">
         <proof prover="2"><result status="valid" time="1.57" steps="3556811"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="k_bound&#39;vc.10.0.1.0.1.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.66" steps="1011964"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="k_bound&#39;vc.10.0.1.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.94" steps="1011843"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.11" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pow_inv_2&#39;def">
   <goal name="k_bound&#39;vc.11.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="inv_order_complex">
    <goal name="k_bound&#39;vc.11.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="2.82" steps="1011738"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.11.0.1" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="1.93" steps="3540202"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.11.0.2" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="1.91" steps="3547456"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="k_bound&#39;vc.11.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="4.85" steps="1077514"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.04" steps="1077437"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.01" steps="1011738"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="8.16" steps="1461132"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="3.04"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="7.81" steps="1432368"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.01" steps="1011778"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.95" steps="1011774"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.19" expl="postcondition">
  <proof prover="8"><result status="timeout" time="10.00" steps="1524507"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.20" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="c_one" arg2="( i_to_c (power 2 (2 * n)) *. pow_inv_2 (2*n))">
   <goal name="k_bound&#39;vc.20.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="compat_order_mult">
    <goal name="k_bound&#39;vc.20.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c_mult" arg2="in" arg3="Ensures">
     <goal name="k_bound&#39;vc.20.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_add" arg2="in" arg3="Ensures">
      <goal name="k_bound&#39;vc.20.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.90" steps="1011810"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="k_bound&#39;vc.20.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="4.40" steps="1078761"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.20.0.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="4.38" steps="1078724"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.20.0.3" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.29" steps="1011792"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.20.0.4" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="4.19" steps="1078752"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="k_bound&#39;vc.20.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="3.18"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.21" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="i_to_c_mult" arg2="in" arg3="Ensures1">
   <goal name="k_bound&#39;vc.21.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="i_to_c_add" arg2="in" arg3="Ensures1">
    <goal name="k_bound&#39;vc.21.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="2.57" steps="1011828"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="best_appr_&#39;vc" expl="VC for best_appr_">
 <transf name="split_vc" >
  <goal name="best_appr_&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.79" steps="1011959"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="best_appr_&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="6.28" steps="1342560"/></proof>
   </goal>
   <goal name="best_appr_&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.43" steps="1011977"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="best_appr_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="6.63" steps="1442237"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.35" steps="1012118"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="7.76" steps="1438607"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.31" steps="1122592"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.47" steps="1012174"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="6.38" steps="1452650"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.29" steps="1122722"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.35" steps="1077644"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.99" steps="1156742"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="7.30" steps="1466379"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.79" steps="1157340"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="8.89" steps="1715286"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="4.13"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.67" steps="1089969"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="7.76" steps="1692200"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="4.17"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.27" steps="1089982"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="8.19" steps="1664498"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="6.64" steps="1207772"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.58" steps="1157501"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="6.27" steps="1248801"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="3.13"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.72" steps="1090022"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="4.89" steps="1207622"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.26" expl="postcondition">
  <transf name="replace" arg1="(i_to_c k -. (pow_inv_2 (2 * n) *. i_to_c (result * multi_order a bound)))" arg2="(((i_to_c k /. i_to_c (multi_order a bound))
   -. (i_to_c result *. pow_inv_2 (2 * n))) *. i_to_c (multi_order a bound))">
   <goal name="best_appr_&#39;vc.26.0" expl="postcondition">
   <transf name="apply" arg1="transitive_infeq" arg2="with" arg3="(  pow_inv_2 ((2 * n) + 1) *.( i_to_c (multi_order a bound)) )">
    <goal name="best_appr_&#39;vc.26.0.0" expl="apply premises">
    <transf name="rewrite" arg1="mult_modulus">
     <goal name="best_appr_&#39;vc.26.0.0.0" expl="apply premises">
     <transf name="apply" arg1="compat_order_mult_both">
      <goal name="best_appr_&#39;vc.26.0.0.0.0" expl="apply premises">
      <transf name="split_vc" >
       <goal name="best_appr_&#39;vc.26.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="5.23" steps="1158785"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.26.0.0.0.0.1" expl="apply premises">
       <proof prover="8"><result status="timeout" time="10.00" steps="1612494"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_&#39;vc.26.0.0.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="best_appr_&#39;vc.26.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="4.58" steps="1158781"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.26.0.0.0.1.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.91" steps="1090082"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="best_appr_&#39;vc.26.0.1" expl="apply premises">
    <transf name="apply" arg1="compat_order_mult_rev" arg2="with" arg3="(i_to_c (power 2 (2*n+1) * b))">
     <goal name="best_appr_&#39;vc.26.0.1.0" expl="apply premises">
     <proof prover="8"><result status="timeout" time="10.00" steps="1716401"/></proof>
     </goal>
     <goal name="best_appr_&#39;vc.26.0.1.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="4.85"/></proof>
     </goal>
     <goal name="best_appr_&#39;vc.26.0.1.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="6.20" steps="1158805"/></proof>
     </goal>
     <goal name="best_appr_&#39;vc.26.0.1.3" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
      <goal name="best_appr_&#39;vc.26.0.1.3.0" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(forall a b. c_zero&lt;. a -&gt; c_zero&lt;.b -&gt; c_zero&lt;. a*.b)">
       <goal name="best_appr_&#39;vc.26.0.1.3.0.0" expl="asserted formula" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="best_appr_&#39;vc.26.0.1.3.0.0.0" expl="asserted formula" proved="true">
        <proof prover="8"><result status="valid" time="6.02" steps="1158832"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_&#39;vc.26.0.1.3.0.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="h">
        <goal name="best_appr_&#39;vc.26.0.1.3.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="7.37" steps="1667934"/></proof>
        </goal>
        <goal name="best_appr_&#39;vc.26.0.1.3.0.1.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="9.38" steps="1669687"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="best_appr_&#39;vc.26.0.1.4" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="((c_one /. (ttwo *. i_to_c b)) *. i_to_c (power 2 ((2 * n) + 1) * b))" arg2="(i_to_c (power 2 (2 * n)))">
      <goal name="best_appr_&#39;vc.26.0.1.4.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="((pow_inv_2 ((2 * n) + 1) *. i_to_c (multi_order a bound))
   *. i_to_c (power 2 ((2 * n) + 1) * b))" arg2="(i_to_c (b * multi_order a bound))">
       <goal name="best_appr_&#39;vc.26.0.1.4.0.0" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="1.21" steps="3632098"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.26.0.1.4.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
        <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
         <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0" expl="equality hypothesis" proved="true">
         <transf name="assert" proved="true" arg1="(forall a b c d. a*. c = c_one -&gt; (a*.b) *. (c*.d) = b*.d)">
          <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.0" expl="asserted formula" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="replace" proved="true" arg1="((a *. b) *. (c *. d))" arg2="((a *. c) *. (b *. d))">
            <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
            <proof prover="8"><result status="valid" time="4.29" steps="1158845"/></proof>
            </goal>
            <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="6"><result status="valid" time="1.98" steps="24157"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="rewrite" proved="true" arg1="h">
           <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="4.48" steps="1158927"/></proof>
           </goal>
           <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.1.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="8.43" steps="1668428"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_&#39;vc.26.0.1.4.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="power_sum">
       <goal name="best_appr_&#39;vc.26.0.1.4.1.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
        <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
         <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0" expl="equality hypothesis" proved="true">
         <transf name="replace" proved="true" arg1="(i_to_c (power 2 1))" arg2="ttwo">
          <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0" expl="equality hypothesis" proved="true">
          <transf name="assert" proved="true" arg1="(forall a b c. c_zero &lt;&gt; (a*.b) -&gt;(c_one /.(a*.b))*. (c*.a*.b) = c)">
           <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
            <transf name="replace" proved="true" arg1="((c *. a) *. b)" arg2="((a *. b) *. c)">
             <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
             <transf name="rewrite" proved="true" arg1="mult_assoc_rev">
              <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
              <proof prover="8"><result status="valid" time="9.47" steps="1717070"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="7.82" steps="1666797"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="4.90" steps="1285214"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="3.01" steps="1090096"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_&#39;vc.26.0.1.4.1.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="4.08" steps="1157623"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.26.0.1.4.1.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.60" steps="1090094"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_&#39;vc.26.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(((i_to_c k /. i_to_c (multi_order a bound))
      -. (i_to_c result *. pow_inv_2 (2 * n)))
     *. i_to_c (multi_order a bound))" arg2="(i_to_c (multi_order a bound)*.((i_to_c k /. i_to_c (multi_order a bound))
      -. (i_to_c result *. pow_inv_2 (2 * n)))
     )">
    <goal name="best_appr_&#39;vc.26.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="mult_distr_minus">
     <goal name="best_appr_&#39;vc.26.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b c d. a= c -&gt; b = d -&gt; a-.b = c-.d)">
      <goal name="best_appr_&#39;vc.26.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="8"><result status="valid" time="3.48" steps="1090204"/></proof>
      </goal>
      <goal name="best_appr_&#39;vc.26.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="h">
       <goal name="best_appr_&#39;vc.26.1.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="5.40" steps="1249124"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.26.1.0.0.1.1" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
        <goal name="best_appr_&#39;vc.26.1.0.0.1.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="5.84" steps="1363673"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="best_appr_&#39;vc.26.1.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="4.81" steps="1158797"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="best_appr_orders&#39;vc" expl="VC for best_appr_orders">
 <transf name="eliminate_let" >
  <goal name="best_appr_orders&#39;vc.0" expl="VC for best_appr_orders">
  <transf name="split_vc" >
   <goal name="best_appr_orders&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="4.76" steps="1077384"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.67" steps="1013109"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.2" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.2.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="3.39" steps="1013113"/></proof>
    </goal>
    <goal name="best_appr_orders&#39;vc.0.2.1" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="2.56" steps="1013128"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.3" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.3.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="2.58" steps="1013124"/></proof>
    </goal>
    <goal name="best_appr_orders&#39;vc.0.3.1" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="2.57" steps="1013137"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.53" steps="1013156"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.5" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.5.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="2.54" steps="1013140"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.6" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.55" steps="1013159"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.7" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.7.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="2.53" steps="1013405"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.8" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.8.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="6.41" steps="1417604"/></proof>
    </goal>
    <goal name="best_appr_orders&#39;vc.0.8.1" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="2.68" steps="1013423"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.9" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.9.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="5.31" steps="1124059"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.10" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="6.09" steps="1158128"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.11" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="((cont_size * multiplier_gate_bound n) * 1)" arg2="((cont_size * multiplier_gate_bound n) )">
    <goal name="best_appr_orders&#39;vc.0.11.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="2.49" steps="1013549"/></proof>
    </goal>
    <goal name="best_appr_orders&#39;vc.0.11.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="2.50" steps="1013570"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.12" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="8.53" steps="1486579"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.13" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.13.0" expl="precondition" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="best_appr_orders&#39;vc.0.13.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="div_pos">
      <goal name="best_appr_orders&#39;vc.0.13.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
       <goal name="best_appr_orders&#39;vc.0.13.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="mult_pos">
        <goal name="best_appr_orders&#39;vc.0.13.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="6.21" steps="1299382"/></proof>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.13.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="5.94" steps="1302583"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_orders&#39;vc.0.13.0.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="5.77" steps="1299068"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.14" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.14.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="7.04" steps="1477001"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.15" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.15.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="9.31" steps="1505190"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.16" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.16.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="compat_order_mult_rev" arg2="with" arg3="(pow_inv_2 (2*n))">
     <goal name="best_appr_orders&#39;vc.0.16.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="5.37" steps="1080328"/></proof>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.16.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.70" steps="1013593"/></proof>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.16.0.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="8.27" steps="1505108"/></proof>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.16.0.3" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="6.67" steps="1506254"/></proof>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.16.0.4" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(modulus
   ((i_to_c (k * power 2 (2 * n)) /. i_to_c (multi_order a bound))
    -&#39;&#39; i_to_c (best_appr_ k a bound n))
   *. pow_inv_2 (2 * n))" arg2="(modulus
  ((i_to_c k /. i_to_c (multi_order a bound))
   -. (pow_inv_2 (2 * n) *. i_to_c (best_appr_ k a bound n))))">
      <goal name="best_appr_orders&#39;vc.0.16.0.4.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="((c_one /. ttwo) *. pow_inv_2 (2 * n))" arg2="( pow_inv_2 (2 * n +1))">
       <goal name="best_appr_orders&#39;vc.0.16.0.4.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.47" steps="1013593"/></proof>
       </goal>
       <goal name="best_appr_orders&#39;vc.0.16.0.4.0.1" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="7.20" steps="1510340"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_orders&#39;vc.0.16.0.4.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(modulus
   ((i_to_c (k * power 2 (2 * n)) /. i_to_c (multi_order a bound))
    -&#39;&#39; i_to_c (best_appr_ k a bound n))
   *. pow_inv_2 (2 * n))" arg2="(modulus
   (((i_to_c (k * power 2 (2 * n)) /. i_to_c (multi_order a bound))
    -&#39;&#39; i_to_c (best_appr_ k a bound n)
 )  *. pow_inv_2 (2 * n)))">
       <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0" expl="equality hypothesis" proved="true">
       <transf name="assert" proved="true" arg1="(forall a b c. (a-&#39;&#39;b) *. c = a*. c -. b*.c)">
        <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.0" expl="asserted formula" proved="true">
        <transf name="eliminate_definition" proved="true" >
         <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.0.0" expl="asserted formula" proved="true">
         <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
          <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="8"><result status="valid" time="7.38" steps="1332245"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="h">
         <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0" expl="equality hypothesis" proved="true">
         <transf name="assert" proved="true" arg1="(forall a b . a = b -&gt; modulus a = modulus b)">
          <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.0" expl="asserted formula" proved="true">
          <proof prover="8"><result status="valid" time="2.51" steps="1013724"/></proof>
          </goal>
          <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1" expl="equality hypothesis" proved="true">
          <transf name="apply" proved="true" arg1="h">
           <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0" expl="apply premises" proved="true">
           <transf name="assert" proved="true" arg1="(forall a b c d. a = b -&gt; c = d -&gt; a-.c = b-.d)">
            <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.0" expl="asserted formula" proved="true">
            <proof prover="8"><result status="valid" time="2.59" steps="1013845"/></proof>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="h">
             <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
              <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
              <transf name="assert" proved="true" arg1="(forall a b c d. b*.d = c_one -&gt;  c_zero &lt;&gt; c-&gt; ((a*.b)/.c)*.d = a/.c)">
               <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.0" expl="asserted formula" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.0.0" expl="asserted formula" proved="true">
                <transf name="replace" proved="true" arg1="(((a *. b) /. c) *. d)" arg2="(((a *. (b*.d)) /. c) )">
                 <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
                 <proof prover="8"><result status="valid" time="5.49" steps="1129366"/></proof>
                 </goal>
                 <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="8"><result status="valid" time="8.91" steps="1513342"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.1" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="h">
                <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="7.84" steps="1511286"/></proof>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.1.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="4.39" steps="1129300"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="4.43" steps="1080580"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_orders&#39;vc.0.16.0.4.1.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="mult_modulus">
        <goal name="best_appr_orders&#39;vc.0.16.0.4.1.1.0" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="8.47" steps="1509693"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.17" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="2.71" steps="1013584"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.18" expl="postcondition">
   <transf name="split_vc" >
    <goal name="best_appr_orders&#39;vc.0.18.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="2.69" steps="1013583"/></proof>
    </goal>
    <goal name="best_appr_orders&#39;vc.0.18.1" expl="postcondition">
    <transf name="case" arg1="(best_appr_ k a bound n = power 2 (2 * n))">
     <goal name="best_appr_orders&#39;vc.0.18.1.0" expl="true case (postcondition)">
     <transf name="assert" arg1="(c_one -. pow_inv_2 (2*n+1) &lt;=. (i_to_c k /. i_to_c (multi_order a bound)) &lt;=. c_one +. pow_inv_2 (2*n+1))">
      <goal name="best_appr_orders&#39;vc.0.18.1.0.0" expl="asserted formula">
      <transf name="assert" arg1="(forall a b. real_ a -&gt; c_one &lt;=. b+. a /\ b-.a &lt;=. c_one -&gt; c_one -. a &lt;=. b &lt;=. c_one +.a)">
       <goal name="best_appr_orders&#39;vc.0.18.1.0.0.0" expl="asserted formula" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="best_appr_orders&#39;vc.0.18.1.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="8"><result status="valid" time="8.72" steps="1501217"/></proof>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.18.1.0.0.0.1" expl="asserted formula" proved="true">
        <proof prover="8"><result status="valid" time="8.98" steps="1564720"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1" expl="asserted formula">
       <transf name="apply" arg1="h1">
        <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="4.96" steps="1124819"/></proof>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1" expl="apply premises">
        <transf name="replace" arg1="c_one" arg2="(i_to_c (power 2 (2*n)) *. pow_inv_2 (2*n))">
         <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0" expl="apply premises">
         <transf name="replace" arg1="(pow_inv_2 ((2 * n) + 1))" arg2="(pow_inv_2 (2*n)  *. (c_one/.ttwo))">
          <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0" expl="apply premises">
          <transf name="replace" arg1="((i_to_c k /. i_to_c (multi_order a bound)) +. (pow_inv_2 ((2 * n) ) *. (c_one /. ttwo)))" arg2="(((i_to_c (k * power 2 (2*n)) /. i_to_c (multi_order a bound)) +. (c_one/.ttwo))*.pow_inv_2 (2*n))">
           <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="((i_to_c k /. i_to_c (multi_order a bound)) -. (pow_inv_2 ((2 * n) ) *. (c_one /. ttwo)))" arg2="(((i_to_c (k * power 2 (2*n)) /. i_to_c (multi_order a bound)) -. (c_one/.ttwo))*.pow_inv_2 (2*n))">
            <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="7.77" steps="1524698"/></proof>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1" expl="equality hypothesis" proved="true">
            <transf name="assert" proved="true" arg1="(forall a aa b c.a*.c = aa -&gt; aa -. c*.b = (a-. b) *. c )">
             <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.0" expl="asserted formula" proved="true">
             <proof prover="8"><result status="valid" time="8.33" steps="1491092"/></proof>
             </goal>
             <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
             <transf name="apply" proved="true" arg1="h">
              <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
               <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(i_to_c k *. i_to_c (power 2 (2 * n)))" arg2="(i_to_c (power 2 (2 * n))*. i_to_c k)">
                <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="assoc_mult_div_rev">
                 <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="assert" proved="true" arg1="(forall a b c d. a*. d = c_one -&gt; c&lt;&gt; c_zero -&gt; (a*. (b/.c))*. d = b/.c)">
                  <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.0.0" expl="asserted formula" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
                   <proof prover="8"><result status="valid" time="7.93" steps="1542312"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.0.1" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="h">
                   <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.0.1.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="6.28" steps="1490278"/></proof>
                   </goal>
                   <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.0.1.1" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="5.70" steps="1124843"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="4.01" steps="1124538"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="8"><result status="valid" time="5.11" steps="1080626"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1" expl="equality hypothesis">
           <transf name="assert" arg1="(forall a aa b c.a*.c = aa -&gt; aa +. c*.b = (a+. b) *. c )">
            <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.0" expl="asserted formula" proved="true">
            <proof prover="8"><result status="valid" time="7.16" steps="1491212"/></proof>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1" expl="equality hypothesis">
            <transf name="apply" arg1="h">
             <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0" expl="apply premises">
             <transf name="rewrite" arg1="i_to_c_mult_rev">
              <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0" expl="apply premises">
              <transf name="replace" arg1="(i_to_c k *. i_to_c (power 2 (2 * n)))" arg2="(i_to_c (power 2 (2 * n))*. i_to_c k)
">
               <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0" expl="apply premises">
               <transf name="rewrite" arg1="assoc_mult_div_rev">
                <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.0" expl="apply premises">
                <transf name="assert" arg1="(forall a b c d. a*. d = c_one -&gt; c&lt;&gt; c_zero -&gt; (a*. (b/.c))*. d = b/.c)">
                 <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.0.0" expl="asserted formula">
                 <transf name="split_vc" >
                  <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.0.0.0" expl="asserted formula">
                  <proof prover="8"><result status="timeout" time="10.00" steps="1522292"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.0.1" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="h">
                  <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.0.1.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="6.92" steps="1490115"/></proof>
                  </goal>
                  <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.0.1.1" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="4.30" steps="1124843"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="5.70" steps="1124538"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="4.95" steps="1080626"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="7.10" steps="1491299"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="7.16" steps="1489042"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_orders&#39;vc.0.18.1.0.1" expl="true case (postcondition)" proved="true">
      <transf name="case" proved="true" arg1="(k &lt;&gt; multi_order a bound)">
       <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0" expl="true case (postcondition)" proved="true">
       <transf name="case" proved="true" arg1="( k &lt; multi_order a bound)">
        <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0" expl="true case (postcondition)" proved="true">
        <transf name="assert" proved="true" arg1="((i_to_c k /. i_to_c (multi_order a bound)) &lt;.  (c_one -. pow_inv_2 ((2 * n) + 1)))">
         <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0" expl="asserted formula" proved="true">
         <transf name="replace" proved="true" arg1="(i_to_c k /. i_to_c (multi_order a bound))" arg2="(c_one -. (i_to_c ( multi_order a bound-k) /. i_to_c (multi_order a bound)))
">
          <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0" expl="asserted formula" proved="true">
          <transf name="rewrite" proved="true" arg1="pow_inv_2&#39;def">
           <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="assert" proved="true" arg1="(c_one /. i_to_c (power 2 ((2 * n) + 1)) &lt;. (i_to_c (multi_order a bound - k) /. i_to_c (multi_order a bound)))">
            <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
            <transf name="apply" proved="true" arg1="transitive_inf_infeq" arg2="with" arg3="(c_one /. i_to_c (multi_order a bound))
">
             <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="inv_inf">
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="4.27" steps="1080426"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="2.70" steps="1013654"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2.0" proved="true">
               <transf name="apply" proved="true" arg1="inf_to_sup">
                <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.76" steps="1013654"/></proof>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2.0.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="4.64" steps="1080426"/></proof>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2.0.2" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="i_to_c_inf">
                 <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2.0.2.0" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="9.11" steps="1557582"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2.1" proved="true">
               <proof prover="1"><result status="valid" time="3.63"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="compat_infeq_div">
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="8.10" steps="1492712"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="5.83" steps="1080406"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.1.2" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="4.61" steps="1080430"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.1.3" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="2.47" steps="1013654"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.1.4" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="6.43" steps="1487000"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1" expl="asserted formula" proved="true">
            <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
             <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
             <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
              <transf name="apply" proved="true" arg1="compat_inf_add_left">
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="3.96" steps="1080504"/></proof>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="7.45" steps="1556540"/></proof>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="7.57" steps="1556396"/></proof>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1.0.0.3" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="4.07" steps="1080483"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="4.01" steps="1079251"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="assert" proved="true" arg1="(forall a b c . c &lt;&gt; c_zero -&gt; b = c-.a -&gt; a/. c = c_one -. b/.c)">
           <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0" expl="asserted formula" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0" expl="asserted formula" proved="true">
            <transf name="replace" proved="true" arg1="c_one" arg2="(c/.c)">
             <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
             <transf name="rewrite" proved="true" arg1="div_distr_minus_rev">
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
              <transf name="apply" proved="true" arg1="div_eq">
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="H">
                <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
                 <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
                  <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="minus_add_out_right">
                   <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="minus_add_out_right">
                    <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="minus_add_out_right">
                     <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="8.31" steps="1544039"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.25" steps="1013688"/></proof>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="3.16" steps="1013688"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="2.30" steps="1013688"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="7.62" steps="1542780"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
           <transf name="apply" proved="true" arg1="h">
            <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.1.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="4.49" steps="1124519"/></proof>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.1.1" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="3.46"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.1" expl="true case (postcondition)" proved="true">
         <proof prover="8"><result status="valid" time="7.50" steps="1489835"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.1" expl="false case (true case. postcondition)" proved="true">
        <proof prover="8"><result status="valid" time="3.55" steps="1013681"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_orders&#39;vc.0.18.1.0.1.1" expl="false case (true case. postcondition)" proved="true">
       <proof prover="8"><result status="valid" time="2.58" steps="1029306"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.18.1.1" expl="false case (postcondition)" proved="true">
     <proof prover="8"><result status="valid" time="4.73" steps="1079970"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="greatest_factor&#39;vc" expl="VC for greatest_factor">
 <transf name="split_vc" >
  <goal name="greatest_factor&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.56" steps="1013569"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="6.71" steps="1344326"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1013670"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.3" expl="precondition">
  <transf name="split_vc" >
   <goal name="greatest_factor&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.93" steps="1013690"/></proof>
   </goal>
   <goal name="greatest_factor&#39;vc.3.1" expl="precondition">
   <transf name="apply" arg1="inf_trans" arg2="with" arg3="bound">
    <goal name="greatest_factor&#39;vc.3.1.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="2.93" steps="1013676"/></proof>
    </goal>
    <goal name="greatest_factor&#39;vc.3.1.1" expl="apply premises">
    <transf name="apply" arg1="inf_trans" arg2="with" arg3="(power 2 n)">
     <goal name="greatest_factor&#39;vc.3.1.1.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.45" steps="1013689"/></proof>
     </goal>
     <goal name="greatest_factor&#39;vc.3.1.1.1" expl="apply premises">
     <proof prover="6"><result status="timeout" time="10.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="greatest_factor&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.63" steps="1013726"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.28" steps="1014145"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.6" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures3">
   <goal name="greatest_factor&#39;vc.6.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="2.49" steps="1014182"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="greatest_factor&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="7.45" steps="1407519"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1014511"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.49"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="min_mod_sum&#39;vc" expl="VC for min_mod_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="min_mod_sum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.55" steps="1014986"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.89" steps="1345772"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.27" steps="1015122"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="6.77" steps="1363993"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.99" steps="1015151"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.34" steps="1015164"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.67" steps="1015179"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.66" steps="1015198"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.55" steps="1015189"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.40" steps="1015201"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.35" steps="1015706"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.30" steps="1015719"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.34" steps="1015734"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.13" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.13.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.22" steps="1015746"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.65" steps="1015744"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.42" steps="1015756"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.62" steps="1016082"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.80" steps="1016095"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.33" steps="1016110"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.43" steps="1016129"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.14" steps="1016120"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.81" steps="1016132"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.32" steps="1016337"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="7.61" steps="1465611"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.14" steps="1086160"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.79" steps="1016349"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="6.41" steps="1465593"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.27" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.27.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.34" steps="1016370"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.28" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.28.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="4.34" steps="1192773"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.29" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.29.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.67" steps="1053841"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.30" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.30.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="6.74" steps="1404082"/></proof>
   </goal>
   <goal name="min_mod_sum&#39;vc.30.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.41" steps="1053859"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.81" steps="1211334"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.32" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.32.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="min_mod_sum&#39;vc.32.0.0" expl="precondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="min_mod_sum&#39;vc.32.0.0.0" expl="VC for min_mod_sum" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="min_mod_sum&#39;vc.32.0.0.0.0" expl="precondition" proved="true">
      <proof prover="1"><result status="valid" time="3.27"/></proof>
      </goal>
      <goal name="min_mod_sum&#39;vc.32.0.0.0.1" expl="precondition" proved="true">
      <proof prover="8"><result status="valid" time="4.90" steps="1233247"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.33" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.33.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="min_mod_sum&#39;vc.33.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="min_mod_sum&#39;vc.33.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="min_mod_sum&#39;vc.33.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H">
       <goal name="min_mod_sum&#39;vc.33.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="min_mod_sum&#39;vc.33.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="eliminate_if" proved="true" >
         <goal name="min_mod_sum&#39;vc.33.0.0.0.0.0.0.0" expl="VC for min_mod_sum" proved="true">
         <proof prover="8"><result status="valid" time="7.78" steps="1880870"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="min_mod_sum&#39;vc.33.1" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="4.48" steps="1080183"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.34" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="4.10" steps="1210045"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.35" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.35.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Ensures2" arg2="i">
    <goal name="min_mod_sum&#39;vc.35.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="min_mod_sum&#39;vc.35.0.0.0" expl="destruct premise" proved="true">
     <proof prover="8"><result status="valid" time="6.63" steps="1506839"/></proof>
     </goal>
     <goal name="min_mod_sum&#39;vc.35.0.0.1" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Hinst">
      <goal name="min_mod_sum&#39;vc.35.0.0.1.0" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="6.26" steps="1518892"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="min_mod_sum&#39;vc.35.1" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="2.33" steps="1053841"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.27" steps="1053964"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.40" steps="1386210"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.38" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.38.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.89" steps="1211462"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.39" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.39.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="4.07" steps="1211867"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.40" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.40.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="4.05" steps="1211925"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.41" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.60" steps="1142079"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.42" expl="postcondition" proved="true">
  <transf name="eliminate_let" proved="true" >
   <goal name="min_mod_sum&#39;vc.42.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="transitive_infeq" arg2="with" arg3="(o k)">
    <goal name="min_mod_sum&#39;vc.42.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="Ensures2">
     <goal name="min_mod_sum&#39;vc.42.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="5.80" steps="1505978"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="min_mod_sum&#39;vc.42.0.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="H6">
     <goal name="min_mod_sum&#39;vc.42.0.1.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.08" steps="1142150"/></proof>
     </goal>
     <goal name="min_mod_sum&#39;vc.42.0.1.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.50" steps="1142150"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.43" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.43.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="compat_order_mult_rev" arg2="with" arg3="(c_one /. cpower (i_to_c (greatest_factor a bound n i)) 2)">
    <goal name="min_mod_sum&#39;vc.43.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="5.96" steps="1507679"/></proof>
    </goal>
    <goal name="min_mod_sum&#39;vc.43.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="6.39" steps="1510956"/></proof>
    </goal>
    <goal name="min_mod_sum&#39;vc.43.0.2" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.97"/></proof>
    </goal>
    <goal name="min_mod_sum&#39;vc.43.0.3" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="3.16"/></proof>
    </goal>
    <goal name="min_mod_sum&#39;vc.43.0.4" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="((cpower (i_to_c (greatest_factor a bound n i)) 2 *. result)
   *. (c_one /. cpower (i_to_c (greatest_factor a bound n i)) 2))" arg2="result">
     <goal name="min_mod_sum&#39;vc.43.0.4.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b. b&lt;&gt; c_zero -&gt; a*. (c_one/.b) = a/.b)">
      <goal name="min_mod_sum&#39;vc.43.0.4.0.0" expl="asserted formula" proved="true">
      <proof prover="8"><result status="valid" time="5.60" steps="1211440"/></proof>
      </goal>
      <goal name="min_mod_sum&#39;vc.43.0.4.0.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="h">
       <goal name="min_mod_sum&#39;vc.43.0.4.0.1.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="Ensures">
        <goal name="min_mod_sum&#39;vc.43.0.4.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.12" steps="1142506"/></proof>
        </goal>
        <goal name="min_mod_sum&#39;vc.43.0.4.0.1.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.87" steps="1142506"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="min_mod_sum&#39;vc.43.0.4.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.77"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="min_mod_sum&#39;vc.43.0.4.1" expl="equality hypothesis" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b. a&lt;&gt; c_zero -&gt; a*.b*. (c_one/.a) = b)">
      <goal name="min_mod_sum&#39;vc.43.0.4.1.0" expl="asserted formula" proved="true">
      <proof prover="8"><result status="valid" time="8.08" steps="1550896"/></proof>
      </goal>
      <goal name="min_mod_sum&#39;vc.43.0.4.1.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="h">
       <goal name="min_mod_sum&#39;vc.43.0.4.1.1.0" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="3.32" steps="1142499"/></proof>
       </goal>
       <goal name="min_mod_sum&#39;vc.43.0.4.1.1.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.79"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="separated_best_appr&#39;vc" expl="VC for separated_best_appr">
 <transf name="split_vc" >
  <goal name="separated_best_appr&#39;vc.0" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="i_to_c_sub_rev">
   <goal name="separated_best_appr&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="assert" proved="true" arg1="(forall a b c. (a-.b)-.(c+.b) = (a-.c) -. (b+.b))">
    <goal name="separated_best_appr&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="separated_best_appr&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <transf name="replace" proved="true" arg1="((a -. b) -. (c +. b))" arg2="(a-.b-.c-.b)">
      <goal name="separated_best_appr&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="replace" proved="true" arg1="((a -. c) -. (b +. b))" arg2="(a-.c-.b-.b)">
       <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
        <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
         <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
         <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
          <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
          <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
           <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
           <proof prover="8"><result status="valid" time="7.20" steps="1352588"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="separated_best_appr&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="4.22" steps="1081371"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="separated_best_appr&#39;vc.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="4.52" steps="1081371"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="separated_best_appr&#39;vc.0.0.1" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="h">
     <goal name="separated_best_appr&#39;vc.0.0.1.0" expl="assertion" proved="true">
     <transf name="apply" proved="true" arg1="subs_eq">
      <goal name="separated_best_appr&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
       <goal name="separated_best_appr&#39;vc.0.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
        <goal name="separated_best_appr&#39;vc.0.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="assert" proved="true" arg1="(forall a b c. c &lt;&gt; c_zero -&gt;  (a-.b)*.c = a*.c -. b*.c)">
         <goal name="separated_best_appr&#39;vc.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
         <proof prover="8"><result status="valid" time="6.20" steps="1351619"/></proof>
         </goal>
         <goal name="separated_best_appr&#39;vc.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="7.13" steps="1449078"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="separated_best_appr&#39;vc.0.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="4.98" steps="1081439"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="separated_best_appr&#39;vc.1" expl="assertion">
  <transf name="assert" arg1="(c_zero &lt;. ((i_to_c (k&#39; - k)
      *. (i_to_c (power 2 (2 * n)) /. i_to_c (multi_order a bound)))
     -. c_one))">
   <goal name="separated_best_appr&#39;vc.1.0" expl="asserted formula" proved="true">
   <transf name="assert" proved="true" arg1="(c_one &lt;. (i_to_c (power 2 (2 * n)) /. i_to_c (multi_order a bound)))">
    <goal name="separated_best_appr&#39;vc.1.0.0" expl="asserted formula" proved="true">
    <transf name="assert" proved="true" arg1="(i_to_c (multi_order a bound) &lt;. (i_to_c (power 2 (2 * n))  ))">
     <goal name="separated_best_appr&#39;vc.1.0.0.0" expl="asserted formula" proved="true">
     <transf name="apply" proved="true" arg1="i_to_c_inf">
      <goal name="separated_best_appr&#39;vc.1.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="inf_trans" arg2="with" arg3="bound">
       <goal name="separated_best_appr&#39;vc.1.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="7.32" steps="1377889"/></proof>
       </goal>
       <goal name="separated_best_appr&#39;vc.1.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="inf_trans" arg2="with" arg3="(power 2 n)">
        <goal name="separated_best_appr&#39;vc.1.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.49" steps="1016410"/></proof>
        </goal>
        <goal name="separated_best_appr&#39;vc.1.0.0.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="6"><result status="valid" time="9.90" steps="279948"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="separated_best_appr&#39;vc.1.0.0.1" expl="asserted formula" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b.c_zero &lt;. a -&gt; c_zero &lt;. b -&gt; b&lt;.a -&gt; c_one &lt;.a /.b)">
      <goal name="separated_best_appr&#39;vc.1.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0" expl="asserted formula" proved="true">
       <transf name="replace" proved="true" arg1="(a /. b)" arg2="(c_one +. ((a-.b)/.b))">
        <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.0" expl="asserted formula" proved="true">
        <transf name="assert" proved="true" arg1="(c_one +. c_zero &lt;. (c_one +. ((a -. b) /. b)))">
         <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
         <proof prover="8"><result status="valid" time="5.95" steps="1385800"/></proof>
         </goal>
         <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.0.1" expl="asserted formula" proved="true">
         <proof prover="8"><result status="valid" time="4.67" steps="1120651"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="replace" proved="true" arg1="c_one" arg2="(b/.b)">
         <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="8.25" steps="1424562"/></proof>
         </goal>
         <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="8.32" steps="1422404"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="separated_best_appr&#39;vc.1.0.0.1.1" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="2.81"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="separated_best_appr&#39;vc.1.0.1" expl="asserted formula" proved="true">
    <transf name="assert" proved="true" arg1="(c_one &lt;. (i_to_c (k&#39; - k)
       *. (i_to_c (power 2 (2 * n)) /. i_to_c (multi_order a bound))))">
     <goal name="separated_best_appr&#39;vc.1.0.1.0" expl="asserted formula" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b. c_one &lt;=. a -&gt; c_one &lt;. b -&gt; c_one &lt;. a*.b)">
      <goal name="separated_best_appr&#39;vc.1.0.1.0.0" expl="asserted formula" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="separated_best_appr&#39;vc.1.0.1.0.0.0" expl="asserted formula" proved="true">
       <proof prover="8"><result status="valid" time="8.56" steps="1433520"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="separated_best_appr&#39;vc.1.0.1.0.1" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="h1">
       <goal name="separated_best_appr&#39;vc.1.0.1.0.1.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="6.94" steps="1380281"/></proof>
       </goal>
       <goal name="separated_best_appr&#39;vc.1.0.1.0.1.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.38" steps="1016481"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="separated_best_appr&#39;vc.1.0.1.1" expl="asserted formula" proved="true">
     <proof prover="8"><result status="valid" time="4.41" steps="1081566"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="separated_best_appr&#39;vc.1.1" expl="assertion">
   <transf name="assert" arg1="(forall a b. real_ b -&gt; c_zero &lt;. a-. b -&gt; b &lt;.a)">
    <goal name="separated_best_appr&#39;vc.1.1.0" expl="asserted formula">
    <proof prover="8"><result status="timeout" time="10.00" steps="1456210"/></proof>
    </goal>
    <goal name="separated_best_appr&#39;vc.1.1.1" expl="assertion" proved="true">
    <transf name="apply" proved="true" arg1="h">
     <goal name="separated_best_appr&#39;vc.1.1.1.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="3.03"/></proof>
     </goal>
     <goal name="separated_best_appr&#39;vc.1.1.1.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.85" steps="1081262"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="separated_best_appr&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.30" steps="1016408"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.28" steps="1016421"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.33" steps="1016436"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.99" steps="1016455"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.57" steps="1016446"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.06" steps="1081292"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.52" steps="1016493"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1016506"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.07" steps="1016521"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.47" steps="1016540"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.39" steps="1016531"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.68" steps="1081404"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.14" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="separated_best_appr&#39;vc.14.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.81" steps="1084911"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="separated_best_appr&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.47" steps="1016598"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="7.26" steps="1372271"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.84" steps="1129437"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.66" steps="1087416"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.14" steps="1016724"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="7.44" steps="1479882"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.81" steps="1131441"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.27" steps="1016767"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.21" steps="1016780"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.26" steps="1016795"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.26" steps="1016814"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.60" steps="1016805"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.98" steps="1087166"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.49" steps="1017005"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.24" steps="1017008"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.77" steps="1017018"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1017031"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.24" steps="1017046"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.52" steps="1017065"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.58" steps="1017056"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.74" steps="1087461"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.73" steps="1088037"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.34" steps="1017244"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="7.00" steps="1506905"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.97" steps="1136654"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.20" steps="1017267"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.18" steps="1017280"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.48" steps="1017295"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.45" steps="1017314"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.64" steps="1017305"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.71" steps="1087733"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.56" steps="1017395"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.38" steps="1017398"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.48" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.76"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.49" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.38"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
