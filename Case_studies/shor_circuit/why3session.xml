<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.7" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.8.6" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="8" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="shor_circuit.mlw"/>
<theory name="Shor" proved="true">
 <goal name="create_superposition&#39;vc" expl="VC for create_superposition" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="create_superposition&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.15" steps="1074005"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="create_superposition&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.38" steps="1166708"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="create_superposition&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.58" steps="1233857"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="create_superposition&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.82" steps="1267209"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="create_superposition&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="create_superposition&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.82" steps="1264428"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="create_superposition&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="1195547"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.78" steps="1274433"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1274837"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.24" steps="1353647"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.88"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1204549"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1204870"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.82" steps="1274838"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.67" steps="1205244"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.86" steps="1221785"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="2.83" steps="1274786"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="1205269"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="modular_expo&#39;vc" expl="VC for modular_expo" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="modular_expo&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.45" steps="1011521"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.45" steps="1011770"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="1011785"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.64" steps="1356101"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="1012266"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.47" steps="1012281"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.69" steps="1364599"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.48" steps="1012558"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.44" steps="1076007"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.48" steps="1012636"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.36" steps="1083633"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.11" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_expo&#39;vc.11.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="((cont_size * multiplier_gate_bound n) * 1)" arg2="((cont_size * multiplier_gate_bound n) )">
    <goal name="modular_expo&#39;vc.11.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="leq_trans_mult_right">
     <goal name="modular_expo&#39;vc.11.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.40" steps="1083653"/></proof>
     </goal>
     <goal name="modular_expo&#39;vc.11.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.72" steps="1375331"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="modular_expo&#39;vc.11.0.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.58" steps="1018803"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_expo&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.49" steps="1018791"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.57" steps="1018806"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.09" steps="1373600"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="1019091"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="1019102"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="1019368"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.49" steps="1019383"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.70" steps="1373919"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="1019653"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.46" steps="1084332"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.51" steps="1019722"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.23" expl="variant decrease" proved="true">
  <proof prover="8"><result status="valid" time="1.49" steps="1011552"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.24" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_expo&#39;vc.24.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.37" steps="1075455"/></proof>
   </goal>
   <goal name="modular_expo&#39;vc.24.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.37" steps="1074655"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_expo&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.44" steps="1017559"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.50" steps="1017804"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.46" steps="1018023"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.46" steps="1018038"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.66" steps="1394717"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.46" steps="1084840"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.55" steps="1084095"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="1018591"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.53" steps="1019059"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.52" steps="1019074"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.19" steps="1401003"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.51" steps="1086023"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.51" steps="1085263"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.55" steps="1019429"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.55" steps="1086039"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.71" steps="1168597"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.41" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="leq_trans_add">
   <goal name="modular_expo&#39;vc.41.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="1.67" steps="1100119"/></proof>
   </goal>
   <goal name="modular_expo&#39;vc.41.1" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="modular_expo&#39;vc.41.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="cont&#39;spec10">
     <goal name="modular_expo&#39;vc.41.1.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="2.13"/></proof>
     </goal>
     <goal name="modular_expo&#39;vc.41.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="3.44" steps="1539357"/></proof>
     </goal>
     <goal name="modular_expo&#39;vc.41.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="3.42" steps="1538258"/></proof>
     </goal>
     <goal name="modular_expo&#39;vc.41.1.0.3" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="2.21" steps="1460597"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_expo&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.65" steps="1100148"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="1100163"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.99" steps="1486101"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.60" steps="1100412"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="1100423"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.62" steps="1100698"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="1100713"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.82" steps="1486995"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.50" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.49" steps="1170374"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.51" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.42" steps="1169609"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.52" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.61" steps="1101075"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.53" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.75" steps="1170383"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.54" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="1.06" steps="30382"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.55" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="5.44" steps="1567598"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.56" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.02"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.57" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(getbv x k = 1)">
   <goal name="modular_expo&#39;vc.57.0" expl="true case (postcondition)" proved="true">
   <transf name="destruct" proved="true" arg1="H1">
    <goal name="modular_expo&#39;vc.57.0.0" expl="true case (postcondition)" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="modular_expo&#39;vc.57.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="modular_expo&#39;vc.57.0.0.0.0" expl="true case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="H8">
       <goal name="modular_expo&#39;vc.57.0.0.0.0.0" expl="true case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="cont_kron_pat_right">
        <goal name="modular_expo&#39;vc.57.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_eq">
         <goal name="modular_expo&#39;vc.57.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="2.30" steps="1369919"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.57.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="sem_to_path_sem">
          <goal name="modular_expo&#39;vc.57.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
      (k + 1))" arg2="(power 2 ((2 * n) - 1))">
           <goal name="modular_expo&#39;vc.57.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="2.06"/></proof>
           </goal>
           <goal name="modular_expo&#39;vc.57.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="ind_isum_one">
            <goal name="modular_expo&#39;vc.57.0.0.0.0.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="modular_expo&#39;vc.57.0.0.0.0.0.0.1.0.1.0.0" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="2.56" steps="1388060"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="modular_expo&#39;vc.57.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.46" steps="1369935"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.57.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.80" steps="1445284"/></proof>
        </goal>
        <goal name="modular_expo&#39;vc.57.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.79" steps="1445293"/></proof>
        </goal>
        <goal name="modular_expo&#39;vc.57.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.28"/></proof>
        </goal>
        <goal name="modular_expo&#39;vc.57.0.0.0.0.0.4" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="4.15" steps="1447022"/></proof>
        </goal>
        <goal name="modular_expo&#39;vc.57.0.0.0.0.0.5" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="3.96" steps="1447045"/></proof>
        </goal>
        <goal name="modular_expo&#39;vc.57.0.0.0.0.0.6" expl="rewrite premises" proved="true">
        <proof prover="8"><result status="valid" time="4.02" steps="1457980"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="modular_expo&#39;vc.57.0.1" expl="true case (postcondition)" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="modular_expo&#39;vc.57.0.1.0" expl="true case (postcondition)" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="modular_expo&#39;vc.57.0.1.0.0" expl="true case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="H8">
       <goal name="modular_expo&#39;vc.57.0.1.0.0.0" expl="true case (postcondition)" proved="true">
       <transf name="apply" proved="true" arg1="path_sem_comp" arg2="with" arg3="(kronecker (bv_to_ket x)
    (ket n
     (mod1
      (power a
       (ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1))
        0 (k -1+ 1)))
      bound))
)">
        <goal name="modular_expo&#39;vc.57.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(width o40)" arg2="(2*n+n)">
         <goal name="modular_expo&#39;vc.57.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="3.99" steps="1542730"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="3.89" steps="1542730"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="4.15" steps="1544112"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="2.40"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="modular_expo&#39;vc.57.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="2.48" steps="1463083"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.57.0.1.0.0.0.1" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(k-1)" arg2="o41">
         <goal name="modular_expo&#39;vc.57.0.1.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="H91">
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.50" steps="1463069"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="modular_expo&#39;vc.57.0.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="2.51" steps="1463076"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="H16">
         <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="cont_kron_pat_right">
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_eq">
           <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.48" steps="1463067"/></proof>
           </goal>
           <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="sem_to_path_sem">
            <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0" expl="apply premises" proved="true">
            <transf name="instantiate" proved="true" arg1="H18" arg2="(mod1
    (power a
     (ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
      ((k - 1) + 1)))
    bound)">
             <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(mod1
    (power a
     (ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
      (k + 1)))
    bound)" arg2="(mod1
    (power a (power 2 (((2 * n) - k) - 1))
     * mod1
       (power a
        (ind_isum
         (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
         ((k - 1) + 1)))
       bound)
    bound)
">
              <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(power a (power 2 (((2 * n) - k) - 1)))" arg2="o19">
               <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="Hinst">
                <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="4.09" steps="1546671"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="2.54" steps="1463609"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
              <transf name="rewrite" proved="true" arg1="ind_isum_right_extension">
               <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0" expl="equality hypothesis" proved="true">
                <transf name="rewrite" proved="true" arg1="power_sum">
                 <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                 <transf name="assert" proved="true" arg1="(forall a b c d. a=d -&gt; b= c -&gt; mod1 (a*b) bound = mod1 (c*mod1 d bound)bound)">
                  <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
                   <transf name="rewrite" proved="true" arg1="H">
                    <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
                    <transf name="replace" proved="true" arg1="a" arg2="(mod1 d bound + bound * div1 d bound)">
                     <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                     <transf name="rewrite" proved="true" arg1="mult_add_right">
                      <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                      <transf name="replace" proved="true" arg1="((mod1 d bound * c) + ((bound * div1 d bound) * c))" arg2="( ((bound * div1 d bound) * c) +(mod1 d bound * c) )">
                       <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                       <transf name="rewrite" proved="true" arg1="simpl_add_mod_left">
                        <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                        <proof prover="8"><result status="valid" time="2.50" steps="1463039"/></proof>
                        </goal>
                        <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                        <proof prover="8"><result status="valid" time="3.90" steps="1543889"/></proof>
                        </goal>
                        <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="4.25"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                       <proof prover="8"><result status="valid" time="2.48" steps="1463024"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                     <proof prover="1"><result status="valid" time="2.48"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
                  <transf name="apply" proved="true" arg1="h">
                   <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
                   <transf name="replace" proved="true" arg1="(k-1+1)" arg2="k">
                    <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                    </transf>
                    </goal>
                    <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                    <proof prover="8"><result status="valid" time="2.48" steps="1463901"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.1.1" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="one_mult">
                    <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.1.1.0" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.48" steps="1463892"/></proof>
                    </goal>
                    <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                    <proof prover="8"><result status="valid" time="2.51" steps="1463894"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="ind_isum_pos">
                  <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="2.50" steps="1463602"/></proof>
                  </goal>
                  <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.1.1" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.1.1.0" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.96"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="1"><result status="valid" time="2.51"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
               <proof prover="8"><result status="valid" time="2.43" steps="1463602"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="3.92" steps="1542740"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="3.85" steps="1542719"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.3" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.29"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.4" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="4.19" steps="1544078"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.5" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="4.19" steps="1544101"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.0.1.0.0.0.2.0.6" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="4.19" steps="1556044"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.57.0.1.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.93" steps="1542721"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="modular_expo&#39;vc.57.1" expl="false case (postcondition)" proved="true">
   <transf name="destruct" proved="true" arg1="H1">
    <goal name="modular_expo&#39;vc.57.1.0" expl="false case (postcondition)" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="modular_expo&#39;vc.57.1.0.0" expl="false case (postcondition)" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="modular_expo&#39;vc.57.1.0.0.0" expl="false case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="H8">
       <goal name="modular_expo&#39;vc.57.1.0.0.0.0" expl="false case (postcondition)" proved="true">
       <transf name="replace" proved="true" arg1="(ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1))
        0 (k + 1))" arg2="0">
        <goal name="modular_expo&#39;vc.57.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="cont_kron_pat_right1">
         <goal name="modular_expo&#39;vc.57.1.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
         <proof prover="1"><result status="valid" time="2.09"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.57.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="3.67" steps="1445285"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.57.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="3.66" steps="1445294"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.57.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.00"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.57.1.0.0.0.0.0.4" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="3.85" steps="1447018"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.57.1.0.0.0.0.0.5" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="3.89" steps="1447041"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.57.1.0.0.0.0.0.6" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="5.46" steps="1728305"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.57.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="ind_isum_one">
         <goal name="modular_expo&#39;vc.57.1.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="modular_expo&#39;vc.57.1.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
          <proof prover="1"><result status="valid" time="2.64"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="modular_expo&#39;vc.57.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="8"><result status="valid" time="2.36" steps="1369939"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="modular_expo&#39;vc.57.1.1" expl="false case (postcondition)" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="modular_expo&#39;vc.57.1.1.0" expl="false case (postcondition)" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="modular_expo&#39;vc.57.1.1.0.0" expl="false case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="H8">
       <goal name="modular_expo&#39;vc.57.1.1.0.0.0" expl="false case (postcondition)" proved="true">
       <transf name="apply" proved="true" arg1="path_sem_comp" arg2="with" arg3="(kronecker (bv_to_ket x)
    (ket n
     (mod1
      (power a
       (ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1))
        0 (k -1+ 1)))
      bound))
)">
        <goal name="modular_expo&#39;vc.57.1.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(width o40)" arg2="(2*n+n)">
         <goal name="modular_expo&#39;vc.57.1.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="3.93" steps="1542697"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="3.97" steps="1542697"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="2.30"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="2.34"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="modular_expo&#39;vc.57.1.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="2.55" steps="1463087"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.57.1.1.0.0.0.1" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(k-1)" arg2="o41">
         <goal name="modular_expo&#39;vc.57.1.1.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="H91">
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.1.0.0" expl="apply premises" proved="true">
          <proof prover="8"><result status="valid" time="2.51" steps="1463073"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="modular_expo&#39;vc.57.1.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="2.56" steps="1463080"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="H16">
         <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="cont_kron_pat_right1">
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
      (k + 1))" arg2="(ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
      (k -1+ 1))">
           <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
           </transf>
           </goal>
           <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="ind_isum_right_extension">
            <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.0.1.0" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="add_zero">
             <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.0.1.0.0" expl="equality hypothesis" proved="true">
             <transf name="replace" proved="true" arg1="(k-1+1)" arg2="k">
              <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
              <transf name="compute_specified" proved="true" >
              </transf>
              </goal>
              <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="8"><result status="valid" time="2.50" steps="1463087"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.0.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="4.13"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.53" steps="1463073"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.1" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="4.02" steps="1542712"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.2" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="3.90" steps="1542691"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.3" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.33"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.4" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="4.19" steps="1544069"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.5" expl="rewrite premises" proved="true">
          <proof prover="8"><result status="valid" time="4.18" steps="1544092"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.6" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
           <goal name="modular_expo&#39;vc.57.1.1.0.0.0.2.0.6.0" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="5.78" steps="1832766"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.57.1.1.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.96" steps="1542717"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_expo&#39;vc.58" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1052689"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.59" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1053004"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.60" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1053007"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.61" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1053038"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.62" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures3">
   <goal name="modular_expo&#39;vc.62.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
      (((2 * n) - 1) + 1))" arg2="(bv_to_int x)">
    <goal name="modular_expo&#39;vc.62.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="1.79" steps="1053056"/></proof>
    </goal>
    <goal name="modular_expo&#39;vc.62.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
     <goal name="modular_expo&#39;vc.62.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="ind_isum_eq_gen">
      <goal name="modular_expo&#39;vc.62.0.1.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="modular_expo&#39;vc.62.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="modular_expo&#39;vc.62.0.1.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.98"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="modular_expo&#39;vc.62.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.77" steps="1053056"/></proof>
      </goal>
      <goal name="modular_expo&#39;vc.62.0.1.0.2" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.75" steps="1053065"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="modular_expo&#39;vc.62.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="1.77" steps="1053058"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="shor_circ_pre&#39;vc" expl="VC for shor_circ_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="shor_circ_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.80" steps="1082803"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.75" steps="1082796"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.78" steps="1084950"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.82" steps="1133894"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.97" steps="1204298"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.08" steps="1235040"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.07" steps="1233162"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.14" steps="1234982"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.11" steps="1235223"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.13" steps="1235780"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.15" steps="1236444"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.13" steps="1236674"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.97" steps="1168718"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.93" steps="1168731"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.95" steps="1168746"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.96" steps="1168765"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.89" steps="1168756"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.10" steps="1237876"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.18" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="shor_circ_pre&#39;vc.18.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.89" steps="1169130"/></proof>
   </goal>
   <goal name="shor_circ_pre&#39;vc.18.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.87" steps="1169130"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ_pre&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.23"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.20" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (create_superposition (2 * n) (3 * n) (ket n 1)))" arg2="(2*n+n)">
   <goal name="shor_circ_pre&#39;vc.20.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="kronecker_ket_l">
    <goal name="shor_circ_pre&#39;vc.20.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.13" steps="1238223"/></proof>
    </goal>
    <goal name="shor_circ_pre&#39;vc.20.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.16" steps="1238223"/></proof>
    </goal>
    <goal name="shor_circ_pre&#39;vc.20.0.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.25" steps="1239505"/></proof>
    </goal>
    <goal name="shor_circ_pre&#39;vc.20.0.3" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.27" steps="1239503"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="shor_circ_pre&#39;vc.20.1" expl="equality hypothesis" proved="true">
   <proof prover="8"><result status="valid" time="1.94" steps="1169208"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ_pre&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.90" steps="1169205"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.22" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
   <goal name="shor_circ_pre&#39;vc.22.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_scal">
    <goal name="shor_circ_pre&#39;vc.22.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="scalar_eq">
     <goal name="shor_circ_pre&#39;vc.22.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
      <goal name="shor_circ_pre&#39;vc.22.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_sum_">
       <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
        <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.24" steps="1239090"/></proof>
        </goal>
        <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.95" steps="1169206"/></proof>
        </goal>
        <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.95" steps="1169222"/></proof>
        </goal>
        <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="modular_expo&#39;spec">
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_eq">
             <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="2.17"/></proof>
             </goal>
             <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.64" steps="1550179"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.68" steps="1550183"/></proof>
            </goal>
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.64" steps="1550190"/></proof>
            </goal>
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.61" steps="1550192"/></proof>
            </goal>
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.4" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.68" steps="1550196"/></proof>
            </goal>
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.5" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="2.69" steps="1550181"/></proof>
            </goal>
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.6" expl="rewrite premises" proved="true">
            <proof prover="8"><result status="valid" time="4.36" steps="1630763"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.92" steps="1169215"/></proof>
       </goal>
       <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="3.43" steps="1289782"/></proof>
       </goal>
       <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
         <transf name="replace" proved="true" arg1="(width (modular_expo a bound n))" arg2="(2*n+n)">
          <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="ket_kronecker_l">
           <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="2.17"/></proof>
           </goal>
           <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.27" steps="1239532"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="1.92" steps="1169234"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="shor_circ_pre&#39;vc.22.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="shor_circ_pre&#39;vc.22.0.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.20"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="shor_circ_pre&#39;vc.22.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.97" steps="1169208"/></proof>
      </goal>
      <goal name="shor_circ_pre&#39;vc.22.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="1.84" steps="1169210"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_circ_pre&#39;vc.22.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="2.24"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ_pre&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.04" steps="1238634"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.94" steps="1169321"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.92" steps="1169566"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.92" steps="1169785"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.93" steps="1169798"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.92" steps="1169813"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.90" steps="1169832"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.90" steps="1169823"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.15" steps="1239334"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.90" steps="1170123"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.28" steps="1243345"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.12" steps="1243730"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.91" steps="1170203"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.93" steps="1170177"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.95" steps="1170190"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.89" steps="1170205"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.90" steps="1170224"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.93" steps="1170215"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.25" steps="1243021"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.99" steps="1170501"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.25" steps="1244575"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.18" steps="1243524"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.45" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.56" steps="1331512"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.46" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="shor_circ_pre&#39;vc.46.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures39">
    <goal name="shor_circ_pre&#39;vc.46.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures27">
     <goal name="shor_circ_pre&#39;vc.46.0.0.0" expl="postcondition" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b. a&lt;= b -&gt; max a b = b)">
      <goal name="shor_circ_pre&#39;vc.46.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="shor_circ_pre&#39;vc.46.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="2.40"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="shor_circ_pre&#39;vc.46.0.0.0.1" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="h">
       <goal name="shor_circ_pre&#39;vc.46.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.42" steps="1331358"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ_pre&#39;vc.47" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.40" steps="1332173"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.48" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="shor_circ_pre&#39;vc.48.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="result" arg2="(create_superposition (2 * n) (3 * n) (ket n 1) -- modular_expo a bound n)">
    <goal name="shor_circ_pre&#39;vc.48.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="Ensures47">
    </transf>
    </goal>
    <goal name="shor_circ_pre&#39;vc.48.0.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="2.14" steps="1261499"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="shor_ket&#39;vc" expl="VC for shor_ket" proved="true">
 <proof prover="1"><result status="valid" time="2.05"/></proof>
 </goal>
 <goal name="shor_circ&#39;vc" expl="VC for shor_circ" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="shor_circ&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="1013859"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.87" steps="1142187"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.88" steps="1144105"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1144098"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1079256"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1141646"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.87" steps="1141913"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.14" steps="1205543"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.97" steps="1141775"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.03" steps="1205405"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.13" steps="1239563"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.86" steps="1242717"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.91" steps="1250719"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.87" steps="1249209"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.93" steps="1245283"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.10" steps="1245501"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.15" steps="1246732"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.19" steps="1247716"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.16" steps="1248885"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.93" steps="1177667"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.97" steps="1177968"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.99" steps="1250242"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.84" steps="1185754"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1185767"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1185782"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.84" steps="1185801"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.92" steps="1185792"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.27" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (shor_circ_pre a bound n))" arg2="(2*n+n)">
   <goal name="shor_circ&#39;vc.27.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="kronecker_ket_l">
    <goal name="shor_circ&#39;vc.27.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.16" steps="1254868"/></proof>
    </goal>
    <goal name="shor_circ&#39;vc.27.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.13" steps="1254868"/></proof>
    </goal>
    <goal name="shor_circ&#39;vc.27.0.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.29" steps="1256140"/></proof>
    </goal>
    <goal name="shor_circ&#39;vc.27.0.3" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="3.30" steps="1256138"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="shor_circ&#39;vc.27.1" expl="equality hypothesis" proved="true">
   <proof prover="8"><result status="valid" time="1.92" steps="1185983"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ&#39;vc.28" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="shor_circ&#39;vc.28.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="scalar_eq_gen">
    <goal name="shor_circ&#39;vc.28.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="ket_sum_eq">
     <goal name="shor_circ&#39;vc.28.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.20" steps="1254880"/></proof>
     </goal>
     <goal name="shor_circ&#39;vc.28.0.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.00" steps="1185978"/></proof>
     </goal>
     <goal name="shor_circ&#39;vc.28.0.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="shor_circ&#39;vc.28.0.0.2.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="shor_circ&#39;vc.28.0.0.2.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_eq">
        <goal name="shor_circ&#39;vc.28.0.0.2.0.0.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="2.56"/></proof>
        </goal>
        <goal name="shor_circ&#39;vc.28.0.0.2.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.96" steps="1185990"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_circ&#39;vc.28.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.98" steps="1185978"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ&#39;vc.29" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_scal">
   <goal name="shor_circ&#39;vc.29.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="scalar_eq_gen">
    <goal name="shor_circ&#39;vc.29.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_sum_">
     <goal name="shor_circ&#39;vc.29.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_scalar_rev_l">
      <goal name="shor_circ&#39;vc.29.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
       <goal name="shor_circ&#39;vc.29.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.11" steps="1254990"/></proof>
       </goal>
       <goal name="shor_circ&#39;vc.29.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.93" steps="1186086"/></proof>
       </goal>
       <goal name="shor_circ&#39;vc.29.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.94" steps="1186086"/></proof>
       </goal>
       <goal name="shor_circ&#39;vc.29.0.0.0.0.3" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures71">
          <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_rev_qft_unit">
           <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
            <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="scalar_eq">
             <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
              <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
               <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="2.62"/></proof>
               </goal>
               <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.95" steps="1186098"/></proof>
               </goal>
               <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="2.50"/></proof>
               </goal>
               <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                 <transf name="eliminate_if" proved="true" >
                  <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0" proved="true">
                  <transf name="replace" proved="true" arg1="(ket_to_int (bv_to_ket a1))" arg2="(bv_to_int a1)">
                   <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="kronecker_eq">
                     <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="0"><result status="valid" time="6.29" steps="2156441"/></proof>
                     </goal>
                     <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0.0.1" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="2.04" steps="1208683"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0.1" expl="apply premises" proved="true">
                    <proof prover="8"><result status="valid" time="3.49" steps="1321503"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="8"><result status="valid" time="3.39" steps="1276951"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="scalar_ket_l">
                 <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="2.57"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="2.72"/></proof>
              </goal>
              <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="2.02" steps="1186102"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="1.93" steps="1186109"/></proof>
           </goal>
           <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.79"/></proof>
           </goal>
           <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="3.29" steps="1256257"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.55"/></proof>
          </goal>
          <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.2" expl="rewrite premises" proved="true">
          <transf name="replace" proved="true" arg1="((3 * n) - width (qft_rev (2 * n)))" arg2="n">
           <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.2.0" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.62"/></proof>
           </goal>
           <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.2.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="1.92" steps="1186107"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="shor_circ&#39;vc.29.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="8"><result status="valid" time="3.15" steps="1254990"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="shor_circ&#39;vc.29.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.95" steps="1186095"/></proof>
     </goal>
     <goal name="shor_circ&#39;vc.29.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="8"><result status="valid" time="1.96" steps="1186095"/></proof>
     </goal>
     <goal name="shor_circ&#39;vc.29.0.0.3" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="shor_circ&#39;vc.29.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="shor_circ&#39;vc.29.0.0.3.0.0" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (place (qft_rev (2 * n)) 0 (3 * n)))" arg2="(2*n+n)">
        <goal name="shor_circ&#39;vc.29.0.0.3.0.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_ket_l">
         <goal name="shor_circ&#39;vc.29.0.0.3.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.08" steps="1255003"/></proof>
         </goal>
         <goal name="shor_circ&#39;vc.29.0.0.3.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="3.15" steps="1255003"/></proof>
         </goal>
         <goal name="shor_circ&#39;vc.29.0.0.3.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="2.49"/></proof>
         </goal>
         <goal name="shor_circ&#39;vc.29.0.0.3.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="2.59"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="shor_circ&#39;vc.29.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="1.94" steps="1186114"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_circ&#39;vc.29.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.94" steps="1186086"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="shor_circ&#39;vc.29.1" expl="rewrite premises" proved="true">
   <transf name="replace" proved="true" arg1="(width (place (qft_rev (2 * n)) 0 (3 * n)))" arg2="(3*n)">
    <goal name="shor_circ&#39;vc.29.1.0" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="2.53"/></proof>
    </goal>
    <goal name="shor_circ&#39;vc.29.1.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.99" steps="1186088"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.17" steps="1255640"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.99" steps="1186248"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.10" steps="1255180"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.99" steps="1186263"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.93" steps="1186266"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.90" steps="1186265"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.97" steps="1186517"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.16" steps="1255457"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.97" steps="1186532"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.99" steps="1186535"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.96" steps="1186521"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.95" steps="1186747"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.93" steps="1187048"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.20" steps="1256853"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.95" steps="1187343"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.94" steps="1187356"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.98" steps="1187371"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.96" steps="1187390"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.48" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.99" steps="1187381"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.49" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.21" steps="1256766"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.50" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.52" steps="1341963"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.51" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.69"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.52" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.08" steps="1269616"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.53" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.14" steps="1269917"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.54" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.44" steps="1342309"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.55" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.14" steps="1270212"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.56" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.16" steps="1270225"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.57" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.20" steps="1270240"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.58" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.16" steps="1270259"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.59" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.13" steps="1270250"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.60" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.56" steps="1342222"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.61" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.55" steps="1342501"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.62" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures6">
   <goal name="shor_circ&#39;vc.62.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures10">
    <goal name="shor_circ&#39;vc.62.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(ancillas (place (qft_rev (2 * n)) 0 (3 * n)))" arg2="0">
     <goal name="shor_circ&#39;vc.62.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="max_left">
      <goal name="shor_circ&#39;vc.62.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="3.52" steps="1342255"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="shor_circ&#39;vc.62.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="8"><result status="valid" time="2.28" steps="1287052"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ&#39;vc.63" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.49" steps="1343143"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.64" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="shor_circ&#39;vc.64.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="shor_circ&#39;vc.64.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures57">
     <goal name="shor_circ&#39;vc.64.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="scalar_assoc">
      <goal name="shor_circ&#39;vc.64.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="scalar_eq_gen">
       <goal name="shor_circ&#39;vc.64.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq">
        <goal name="shor_circ&#39;vc.64.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.45" steps="1343266"/></proof>
        </goal>
        <goal name="shor_circ&#39;vc.64.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="2.09" steps="1272170"/></proof>
        </goal>
        <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="ket_sum_eq">
           <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="3.51" steps="1343279"/></proof>
           </goal>
           <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0.0.1" expl="apply premises" proved="true">
           <proof prover="8"><result status="valid" time="2.16" steps="1272182"/></proof>
           </goal>
           <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0.0.2" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0.0.2.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0.0.2.0.0" expl="apply premises" proved="true">
             <transf name="eliminate_if" proved="true" >
              <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0.0.2.0.0.0" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0.0.2.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="5.48" steps="1713680"/></proof>
               </goal>
               <goal name="shor_circ&#39;vc.64.0.0.0.0.0.2.0.0.2.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="3.80" steps="1387214"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="shor_circ&#39;vc.64.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="5.34" steps="1689270"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="k_bound&#39;vc" expl="VC for k_bound" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="k_bound&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="k_bound&#39;vc.0.0" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(forall  a b c . (a-. b) -. (c+.b) = (a-.c) -. (b+.b))">
    <goal name="k_bound&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="k_bound&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <transf name="replace" proved="true" arg1="((a -. b) -. (c +. b))" arg2="((a -. b -. c -. b))">
      <goal name="k_bound&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="replace" proved="true" arg1="((a -. b) -. c-.b )" arg2="(a -. c -. b -. b)">
       <goal name="k_bound&#39;vc.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="8"><result status="valid" time="2.87" steps="1079895"/></proof>
       </goal>
       <goal name="k_bound&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="minus_elim">
        <goal name="k_bound&#39;vc.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="minus_elim">
         <goal name="k_bound&#39;vc.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
         <transf name="rewrite" proved="true" arg1="minus_elim">
          <goal name="k_bound&#39;vc.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="4.11" steps="1355963"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="k_bound&#39;vc.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="2.84" steps="1079886"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="k_bound&#39;vc.0.0.1" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="1.70" steps="1015107"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.07" steps="1350989"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.67" steps="1015122"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.14" steps="1364098"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.76" steps="1080890"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.73" steps="1081182"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="1015239"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.19" steps="1385661"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.03"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.9" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(k &lt;= (div1 (power 2 (2 * n)) (multi_order a bound) ))">
   <goal name="k_bound&#39;vc.9.0" expl="asserted formula" proved="true">
   <proof prover="8"><result status="valid" time="1.71" steps="1015300"/></proof>
   </goal>
   <goal name="k_bound&#39;vc.9.1" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="i_to_c_mult">
    <goal name="k_bound&#39;vc.9.1.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c_add">
     <goal name="k_bound&#39;vc.9.1.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="compat_i_to_c_infeq">
      <goal name="k_bound&#39;vc.9.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="2.04"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.10" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="i_to_c_strict_pos">
   <goal name="k_bound&#39;vc.10.0" expl="apply premises" proved="true">
   <transf name="assert" proved="true" arg1="(forall a b. 0&lt; a -&gt; 0&lt;= b -&gt; 0&lt; a+b)">
    <goal name="k_bound&#39;vc.10.0.0" expl="asserted formula" proved="true">
    <proof prover="8"><result status="valid" time="2.85" steps="1082405"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.10.0.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="h">
     <goal name="k_bound&#39;vc.10.0.1.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b. 0&lt; a -&gt; 0&lt; b -&gt; 0&lt; a*b)">
      <goal name="k_bound&#39;vc.10.0.1.0.0" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="3.18"/></proof>
      </goal>
      <goal name="k_bound&#39;vc.10.0.1.0.1" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="h">
       <goal name="k_bound&#39;vc.10.0.1.0.1.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="positive_div">
        <goal name="k_bound&#39;vc.10.0.1.0.1.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="k_bound&#39;vc.10.0.1.0.1.0.0.0" proved="true">
         <proof prover="8"><result status="valid" time="1.71" steps="1015548"/></proof>
         </goal>
         <goal name="k_bound&#39;vc.10.0.1.0.1.0.0.1" proved="true">
         <proof prover="2"><result status="valid" time="0.86" steps="3567200"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="k_bound&#39;vc.10.0.1.0.1.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.69" steps="1015548"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="k_bound&#39;vc.10.0.1.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.70" steps="1015427"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.11" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="pow_inv_2&#39;def">
   <goal name="k_bound&#39;vc.11.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="inv_order_complex">
    <goal name="k_bound&#39;vc.11.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.73" steps="1015322"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.11.0.1" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.84" steps="3549956"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.11.0.2" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="0.83" steps="3557210"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="k_bound&#39;vc.11.1" expl="rewrite premises" proved="true">
   <proof prover="8"><result status="valid" time="2.68" steps="1081431"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.74" steps="1081364"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.64" steps="1015322"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.41" steps="1466599"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.03"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.23" steps="1437611"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.66" steps="1015362"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.65" steps="1015358"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="4.04" steps="1531890"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.20" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="c_one" arg2="( i_to_c (power 2 (2 * n)) *. pow_inv_2 (2*n))">
   <goal name="k_bound&#39;vc.20.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="compat_order_mult">
    <goal name="k_bound&#39;vc.20.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c_mult" arg2="in" arg3="Ensures">
     <goal name="k_bound&#39;vc.20.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_add" arg2="in" arg3="Ensures">
      <goal name="k_bound&#39;vc.20.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="1.71" steps="1015394"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="k_bound&#39;vc.20.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="2.84" steps="1082688"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.20.0.2" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="2.81" steps="1082651"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.20.0.3" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.65" steps="1015376"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.20.0.4" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="2.81" steps="1082679"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="k_bound&#39;vc.20.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="2.07"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.21" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="i_to_c_mult" arg2="in" arg3="Ensures1">
   <goal name="k_bound&#39;vc.21.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="i_to_c_add" arg2="in" arg3="Ensures1">
    <goal name="k_bound&#39;vc.21.0.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="1.68" steps="1015412"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="best_appr_&#39;vc" expl="VC for best_appr_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="best_appr_&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="1015538"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="best_appr_&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="4.14" steps="1347114"/></proof>
   </goal>
   <goal name="best_appr_&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.70" steps="1015556"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="best_appr_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.60" steps="1446640"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1015697"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.32" steps="1443236"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1126511"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="1015753"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.37" steps="1456139"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.92" steps="1126641"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.72" steps="1081583"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.14" steps="1160251"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.37" steps="1472232"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.90" steps="1161114"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.21" steps="1720695"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.14"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1093553"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.08" steps="1697674"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.15"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.81" steps="1093566"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="5.09" steps="1669457"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.20" steps="1211546"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.89" steps="1161280"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.30" steps="1252452"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.14"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1093606"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.17" steps="1211391"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.26" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(i_to_c k -. (pow_inv_2 (2 * n) *. i_to_c (result * multi_order a bound)))" arg2="(((i_to_c k /. i_to_c (multi_order a bound))
   -. (i_to_c result *. pow_inv_2 (2 * n))) *. i_to_c (multi_order a bound))">
   <goal name="best_appr_&#39;vc.26.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="transitive_infeq" arg2="with" arg3="(  pow_inv_2 ((2 * n) + 1) *.( i_to_c (multi_order a bound)) )">
    <goal name="best_appr_&#39;vc.26.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="mult_modulus">
     <goal name="best_appr_&#39;vc.26.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="compat_order_mult_both">
      <goal name="best_appr_&#39;vc.26.0.0.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="best_appr_&#39;vc.26.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.98" steps="1162564"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.26.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="4.51" steps="1687200"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_&#39;vc.26.0.0.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="best_appr_&#39;vc.26.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="2.99" steps="1162560"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.26.0.0.0.1.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.80" steps="1093666"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="best_appr_&#39;vc.26.0.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="compat_order_mult_rev" arg2="with" arg3="(i_to_c (power 2 (2*n+1) * b))">
     <goal name="best_appr_&#39;vc.26.0.1.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="5.33" steps="1918798"/></proof>
     </goal>
     <goal name="best_appr_&#39;vc.26.0.1.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="3.65"/></proof>
     </goal>
     <goal name="best_appr_&#39;vc.26.0.1.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="3.08" steps="1162584"/></proof>
     </goal>
     <goal name="best_appr_&#39;vc.26.0.1.3" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
      <goal name="best_appr_&#39;vc.26.0.1.3.0" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(forall a b. c_zero&lt;. a -&gt; c_zero&lt;.b -&gt; c_zero&lt;. a*.b)">
       <goal name="best_appr_&#39;vc.26.0.1.3.0.0" expl="asserted formula" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="best_appr_&#39;vc.26.0.1.3.0.0.0" expl="asserted formula" proved="true">
        <proof prover="8"><result status="valid" time="3.05" steps="1162611"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_&#39;vc.26.0.1.3.0.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="h">
        <goal name="best_appr_&#39;vc.26.0.1.3.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="5.09" steps="1672138"/></proof>
        </goal>
        <goal name="best_appr_&#39;vc.26.0.1.3.0.1.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="5.18" steps="1674655"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="best_appr_&#39;vc.26.0.1.4" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="((c_one /. (ttwo *. i_to_c b)) *. i_to_c (power 2 ((2 * n) + 1) * b))" arg2="(i_to_c (power 2 (2 * n)))">
      <goal name="best_appr_&#39;vc.26.0.1.4.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="((pow_inv_2 ((2 * n) + 1) *. i_to_c (multi_order a bound))
   *. i_to_c (power 2 ((2 * n) + 1) * b))" arg2="(i_to_c (b * multi_order a bound))">
       <goal name="best_appr_&#39;vc.26.0.1.4.0.0" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="0.78" steps="3733559"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.26.0.1.4.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
        <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
         <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0" expl="equality hypothesis" proved="true">
         <transf name="assert" proved="true" arg1="(forall a b c d. a*. c = c_one -&gt; (a*.b) *. (c*.d) = b*.d)">
          <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.0" expl="asserted formula" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="replace" proved="true" arg1="((a *. b) *. (c *. d))" arg2="((a *. c) *. (b *. d))">
            <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
            <proof prover="8"><result status="valid" time="3.12" steps="1162624"/></proof>
            </goal>
            <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="6"><result status="valid" time="1.04" steps="24157"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="rewrite" proved="true" arg1="h">
           <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="3.20" steps="1162706"/></proof>
           </goal>
           <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.1.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="5.34" steps="1673404"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_&#39;vc.26.0.1.4.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="power_sum">
       <goal name="best_appr_&#39;vc.26.0.1.4.1.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
        <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
         <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0" expl="equality hypothesis" proved="true">
         <transf name="replace" proved="true" arg1="(i_to_c (power 2 1))" arg2="ttwo">
          <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0" expl="equality hypothesis" proved="true">
          <transf name="assert" proved="true" arg1="(forall a b c. c_zero &lt;&gt; (a*.b) -&gt;(c_one /.(a*.b))*. (c*.a*.b) = c)">
           <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
            <transf name="replace" proved="true" arg1="((c *. a) *. b)" arg2="((a *. b) *. c)">
             <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
             <transf name="rewrite" proved="true" arg1="mult_assoc_rev">
              <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
              <proof prover="8"><result status="valid" time="5.87" steps="1721511"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="5.04" steps="1672086"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="8"><result status="valid" time="3.44" steps="1289498"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="1.80" steps="1093680"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_&#39;vc.26.0.1.4.1.1" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="2.89" steps="1161402"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.26.0.1.4.1.2" expl="rewrite premises" proved="true">
       <proof prover="8"><result status="valid" time="1.84" steps="1093678"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_&#39;vc.26.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(((i_to_c k /. i_to_c (multi_order a bound))
      -. (i_to_c result *. pow_inv_2 (2 * n)))
     *. i_to_c (multi_order a bound))" arg2="(i_to_c (multi_order a bound)*.((i_to_c k /. i_to_c (multi_order a bound))
      -. (i_to_c result *. pow_inv_2 (2 * n)))
     )">
    <goal name="best_appr_&#39;vc.26.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="mult_distr_minus">
     <goal name="best_appr_&#39;vc.26.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b c d. a= c -&gt; b = d -&gt; a-.b = c-.d)">
      <goal name="best_appr_&#39;vc.26.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="8"><result status="valid" time="1.85" steps="1093788"/></proof>
      </goal>
      <goal name="best_appr_&#39;vc.26.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="h">
       <goal name="best_appr_&#39;vc.26.1.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="3.35" steps="1253038"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.26.1.0.0.1.1" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
        <goal name="best_appr_&#39;vc.26.1.0.0.1.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.78" steps="1367788"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="best_appr_&#39;vc.26.1.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="2.95" steps="1162576"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="best_appr_orders&#39;vc" expl="VC for best_appr_orders" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="best_appr_orders&#39;vc.0" expl="VC for best_appr_orders" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="best_appr_orders&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.86" steps="1084715"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.71" steps="1016683"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.2" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.2.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="1.69" steps="1016687"/></proof>
    </goal>
    <goal name="best_appr_orders&#39;vc.0.2.1" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="1.70" steps="1016702"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.3" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.3.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="1.68" steps="1016698"/></proof>
    </goal>
    <goal name="best_appr_orders&#39;vc.0.3.1" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="1.73" steps="1016711"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.63" steps="1016730"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.5" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.5.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="1.65" steps="1016714"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.6" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.72" steps="1016733"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.7" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.7.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="1.71" steps="1016979"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.8" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.8.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="4.40" steps="1421708"/></proof>
    </goal>
    <goal name="best_appr_orders&#39;vc.0.8.1" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="1.68" steps="1016997"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.9" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.9.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="3.05" steps="1131388"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.10" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.20" steps="1166407"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.11" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="((cont_size * multiplier_gate_bound n) * 1)" arg2="((cont_size * multiplier_gate_bound n) )">
    <goal name="best_appr_orders&#39;vc.0.11.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="1.71" steps="1017128"/></proof>
    </goal>
    <goal name="best_appr_orders&#39;vc.0.11.1" expl="equality hypothesis" proved="true">
    <proof prover="8"><result status="valid" time="1.71" steps="1017149"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.12" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="4.57" steps="1495579"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.13" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.13.0" expl="precondition" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="best_appr_orders&#39;vc.0.13.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="div_pos">
      <goal name="best_appr_orders&#39;vc.0.13.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
       <goal name="best_appr_orders&#39;vc.0.13.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="mult_pos">
        <goal name="best_appr_orders&#39;vc.0.13.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="4.02" steps="1304523"/></proof>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.13.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="4.05" steps="1307748"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_orders&#39;vc.0.13.0.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="4.00" steps="1304222"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.14" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.14.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="4.56" steps="1487544"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.15" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.15.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="4.65" steps="1514057"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.16" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.16.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="compat_order_mult_rev" arg2="with" arg3="(pow_inv_2 (2*n))">
     <goal name="best_appr_orders&#39;vc.0.16.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.91" steps="1087597"/></proof>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.16.0.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.75" steps="1017172"/></proof>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.16.0.2" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="4.65" steps="1514620"/></proof>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.16.0.3" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="4.70" steps="1515519"/></proof>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.16.0.4" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(modulus
   ((i_to_c (k * power 2 (2 * n)) /. i_to_c (multi_order a bound))
    -&#39;&#39; i_to_c (best_appr_ k a bound n))
   *. pow_inv_2 (2 * n))" arg2="(modulus
  ((i_to_c k /. i_to_c (multi_order a bound))
   -. (pow_inv_2 (2 * n) *. i_to_c (best_appr_ k a bound n))))">
      <goal name="best_appr_orders&#39;vc.0.16.0.4.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="((c_one /. ttwo) *. pow_inv_2 (2 * n))" arg2="( pow_inv_2 (2 * n +1))">
       <goal name="best_appr_orders&#39;vc.0.16.0.4.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.71" steps="1017172"/></proof>
       </goal>
       <goal name="best_appr_orders&#39;vc.0.16.0.4.0.1" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="4.69" steps="1519071"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_orders&#39;vc.0.16.0.4.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(modulus
   ((i_to_c (k * power 2 (2 * n)) /. i_to_c (multi_order a bound))
    -&#39;&#39; i_to_c (best_appr_ k a bound n))
   *. pow_inv_2 (2 * n))" arg2="(modulus
   (((i_to_c (k * power 2 (2 * n)) /. i_to_c (multi_order a bound))
    -&#39;&#39; i_to_c (best_appr_ k a bound n)
 )  *. pow_inv_2 (2 * n)))">
       <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0" expl="equality hypothesis" proved="true">
       <transf name="assert" proved="true" arg1="(forall a b c. (a-&#39;&#39;b) *. c = a*. c -. b*.c)">
        <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.0" expl="asserted formula" proved="true">
        <transf name="eliminate_definition" proved="true" >
         <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.0.0" expl="asserted formula" proved="true">
         <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
          <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="8"><result status="valid" time="4.53" steps="1336033"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="h">
         <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0" expl="equality hypothesis" proved="true">
         <transf name="assert" proved="true" arg1="(forall a b . a = b -&gt; modulus a = modulus b)">
          <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.0" expl="asserted formula" proved="true">
          <proof prover="8"><result status="valid" time="1.77" steps="1017303"/></proof>
          </goal>
          <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1" expl="equality hypothesis" proved="true">
          <transf name="apply" proved="true" arg1="h">
           <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0" expl="apply premises" proved="true">
           <transf name="assert" proved="true" arg1="(forall a b c d. a = b -&gt; c = d -&gt; a-.c = b-.d)">
            <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.0" expl="asserted formula" proved="true">
            <proof prover="8"><result status="valid" time="1.76" steps="1017424"/></proof>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="h">
             <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
              <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
              <transf name="assert" proved="true" arg1="(forall a b c d. b*.d = c_one -&gt;  c_zero &lt;&gt; c-&gt; ((a*.b)/.c)*.d = a/.c)">
               <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.0" expl="asserted formula" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.0.0" expl="asserted formula" proved="true">
                <transf name="replace" proved="true" arg1="(((a *. b) /. c) *. d)" arg2="(((a *. (b*.d)) /. c) )">
                 <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
                 <proof prover="8"><result status="valid" time="3.05" steps="1136545"/></proof>
                 </goal>
                 <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="8"><result status="valid" time="4.67" steps="1522388"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.1" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="h">
                <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="4.62" steps="1520678"/></proof>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.1.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.98" steps="1136479"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.1" expl="apply premises" proved="true">
             <proof prover="8"><result status="valid" time="2.86" steps="1087794"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_orders&#39;vc.0.16.0.4.1.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="mult_modulus">
        <goal name="best_appr_orders&#39;vc.0.16.0.4.1.1.0" expl="equality hypothesis" proved="true">
        <proof prover="8"><result status="valid" time="4.61" steps="1518986"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.17" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="1.67" steps="1017163"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.18" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.18.0" expl="postcondition" proved="true">
    <proof prover="8"><result status="valid" time="1.70" steps="1017162"/></proof>
    </goal>
    <goal name="best_appr_orders&#39;vc.0.18.1" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(best_appr_ k a bound n = power 2 (2 * n))">
     <goal name="best_appr_orders&#39;vc.0.18.1.0" expl="true case (postcondition)" proved="true">
     <transf name="assert" proved="true" arg1="(c_one -. pow_inv_2 (2*n+1) &lt;=. (i_to_c k /. i_to_c (multi_order a bound)) &lt;=. c_one +. pow_inv_2 (2*n+1))">
      <goal name="best_appr_orders&#39;vc.0.18.1.0.0" expl="asserted formula" proved="true">
      <transf name="assert" proved="true" arg1="(forall a b. real_ a -&gt; c_one &lt;=. b+. a /\ b-.a &lt;=. c_one -&gt; c_one -. a &lt;=. b &lt;=. c_one +.a)">
       <goal name="best_appr_orders&#39;vc.0.18.1.0.0.0" expl="asserted formula" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="best_appr_orders&#39;vc.0.18.1.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="8"><result status="valid" time="4.56" steps="1509678"/></proof>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.18.1.0.0.0.1" expl="asserted formula" proved="true">
        <proof prover="8"><result status="valid" time="5.94" steps="1572351"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1" expl="asserted formula" proved="true">
       <transf name="apply" proved="true" arg1="h1">
        <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="3.04" steps="1132132"/></proof>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="c_one" arg2="(i_to_c (power 2 (2*n)) *. pow_inv_2 (2*n))">
         <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(pow_inv_2 ((2 * n) + 1))" arg2="(pow_inv_2 (2*n)  *. (c_one/.ttwo))">
          <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="((i_to_c k /. i_to_c (multi_order a bound)) +. (pow_inv_2 ((2 * n) ) *. (c_one /. ttwo)))" arg2="(((i_to_c (k * power 2 (2*n)) /. i_to_c (multi_order a bound)) +. (c_one/.ttwo))*.pow_inv_2 (2*n))">
           <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="((i_to_c k /. i_to_c (multi_order a bound)) -. (pow_inv_2 ((2 * n) ) *. (c_one /. ttwo)))" arg2="(((i_to_c (k * power 2 (2*n)) /. i_to_c (multi_order a bound)) -. (c_one/.ttwo))*.pow_inv_2 (2*n))">
            <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="4.79" steps="1534043"/></proof>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1" expl="equality hypothesis" proved="true">
            <transf name="assert" proved="true" arg1="(forall a aa b c.a*.c = aa -&gt; aa -. c*.b = (a-. b) *. c )">
             <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.0" expl="asserted formula" proved="true">
             <proof prover="8"><result status="valid" time="4.60" steps="1498988"/></proof>
             </goal>
             <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
             <transf name="apply" proved="true" arg1="h">
              <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
               <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(i_to_c k *. i_to_c (power 2 (2 * n)))" arg2="(i_to_c (power 2 (2 * n))*. i_to_c k)">
                <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="assoc_mult_div_rev">
                 <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="assert" proved="true" arg1="(forall a b c d. a*. d = c_one -&gt; c&lt;&gt; c_zero -&gt; (a*. (b/.c))*. d = b/.c)">
                  <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.0.0" expl="asserted formula" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
                   <proof prover="8"><result status="valid" time="5.45" steps="1549663"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.0.1" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="h">
                   <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.0.1.0" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="4.65" steps="1498496"/></proof>
                   </goal>
                   <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.0.1.1" expl="apply premises" proved="true">
                   <proof prover="8"><result status="valid" time="2.96" steps="1132097"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="8"><result status="valid" time="3.03" steps="1131823"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="8"><result status="valid" time="2.96" steps="1087851"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="assert" proved="true" arg1="(forall a aa b c.a*.c = aa -&gt; aa +. c*.b = (a+. b) *. c )">
            <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.0" expl="asserted formula" proved="true">
            <proof prover="8"><result status="valid" time="4.65" steps="1499061"/></proof>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1" expl="equality hypothesis" proved="true">
            <transf name="apply" proved="true" arg1="h">
             <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
              <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(i_to_c k *. i_to_c (power 2 (2 * n)))" arg2="(i_to_c (power 2 (2 * n))*. i_to_c k)
">
               <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="assoc_mult_div_rev">
                <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                <transf name="assert" proved="true" arg1="(forall a b c d. a*. d = c_one -&gt; c&lt;&gt; c_zero -&gt; (a*. (b/.c))*. d = b/.c)">
                 <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.0.0" expl="asserted formula" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
                  <proof prover="0"><result status="valid" time="4.66" steps="1495682"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.0.1" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="h">
                  <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.0.1.0" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="4.67" steps="1498711"/></proof>
                  </goal>
                  <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.0.1.1" expl="apply premises" proved="true">
                  <proof prover="8"><result status="valid" time="2.99" steps="1132097"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="8"><result status="valid" time="2.96" steps="1131823"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="8"><result status="valid" time="2.90" steps="1087851"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
          <proof prover="8"><result status="valid" time="4.56" steps="1498724"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="4.57" steps="1497452"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_orders&#39;vc.0.18.1.0.1" expl="true case (postcondition)" proved="true">
      <transf name="case" proved="true" arg1="(k &lt;&gt; multi_order a bound)">
       <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0" expl="true case (postcondition)" proved="true">
       <transf name="case" proved="true" arg1="( k &lt; multi_order a bound)">
        <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0" expl="true case (postcondition)" proved="true">
        <transf name="assert" proved="true" arg1="((i_to_c k /. i_to_c (multi_order a bound)) &lt;.  (c_one -. pow_inv_2 ((2 * n) + 1)))">
         <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0" expl="asserted formula" proved="true">
         <transf name="replace" proved="true" arg1="(i_to_c k /. i_to_c (multi_order a bound))" arg2="(c_one -. (i_to_c ( multi_order a bound-k) /. i_to_c (multi_order a bound)))
">
          <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0" expl="asserted formula" proved="true">
          <transf name="rewrite" proved="true" arg1="pow_inv_2&#39;def">
           <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="assert" proved="true" arg1="(c_one /. i_to_c (power 2 ((2 * n) + 1)) &lt;. (i_to_c (multi_order a bound - k) /. i_to_c (multi_order a bound)))">
            <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
            <transf name="apply" proved="true" arg1="transitive_inf_infeq" arg2="with" arg3="(c_one /. i_to_c (multi_order a bound))
">
             <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="inv_inf">
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="2.89" steps="1087700"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="1.74" steps="1017233"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2.0" proved="true">
               <transf name="apply" proved="true" arg1="inf_to_sup">
                <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="1.66" steps="1017233"/></proof>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2.0.1" expl="apply premises" proved="true">
                <proof prover="8"><result status="valid" time="2.83" steps="1087700"/></proof>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2.0.2" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="i_to_c_inf">
                 <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2.0.2.0" expl="apply premises" proved="true">
                 <proof prover="8"><result status="valid" time="4.79" steps="1564365"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2.1" proved="true">
               <proof prover="1"><result status="valid" time="1.93"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="compat_infeq_div">
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="4.54" steps="1499828"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="2.86" steps="1087680"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.1.2" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="2.84" steps="1087704"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.1.3" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="1.70" steps="1017233"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.1.4" expl="apply premises" proved="true">
              <proof prover="8"><result status="valid" time="4.51" steps="1494300"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1" expl="asserted formula" proved="true">
            <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
             <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
             <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
              <transf name="apply" proved="true" arg1="compat_inf_add_left">
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.86" steps="1087778"/></proof>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="4.74" steps="1564479"/></proof>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="4.67" steps="1564253"/></proof>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1.0.0.3" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="2.83" steps="1087752"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="8"><result status="valid" time="2.71" steps="1086510"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="assert" proved="true" arg1="(forall a b c . c &lt;&gt; c_zero -&gt; b = c-.a -&gt; a/. c = c_one -. b/.c)">
           <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0" expl="asserted formula" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0" expl="asserted formula" proved="true">
            <transf name="replace" proved="true" arg1="c_one" arg2="(c/.c)">
             <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
             <transf name="rewrite" proved="true" arg1="div_distr_minus_rev">
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
              <transf name="apply" proved="true" arg1="div_eq">
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="H">
                <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
                 <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
                  <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="minus_add_out_right">
                   <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="minus_add_out_right">
                    <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="minus_add_out_right">
                     <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="8"><result status="valid" time="5.21" steps="1550903"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.69" steps="1017267"/></proof>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="8"><result status="valid" time="1.70" steps="1017267"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="8"><result status="valid" time="1.70" steps="1017267"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="8"><result status="valid" time="5.24" steps="1550017"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
           <transf name="apply" proved="true" arg1="h">
            <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.1.0" expl="apply premises" proved="true">
            <proof prover="8"><result status="valid" time="3.04" steps="1131803"/></proof>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.1.1" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="2.08"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.1" expl="true case (postcondition)" proved="true">
         <proof prover="8"><result status="valid" time="4.61" steps="1497318"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.1" expl="false case (true case. postcondition)" proved="true">
        <proof prover="8"><result status="valid" time="1.73" steps="1017260"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_orders&#39;vc.0.18.1.0.1.1" expl="false case (true case. postcondition)" proved="true">
       <proof prover="8"><result status="valid" time="1.87" steps="1032950"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.18.1.1" expl="false case (postcondition)" proved="true">
     <proof prover="8"><result status="valid" time="2.80" steps="1087234"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="greatest_factor&#39;vc" expl="VC for greatest_factor" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="greatest_factor&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1017148"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.12" steps="1351177"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1017249"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="greatest_factor&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.67" steps="1017269"/></proof>
   </goal>
   <goal name="greatest_factor&#39;vc.3.1" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="inf_trans" arg2="with" arg3="bound">
    <goal name="greatest_factor&#39;vc.3.1.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="1.75" steps="1017255"/></proof>
    </goal>
    <goal name="greatest_factor&#39;vc.3.1.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="inf_trans" arg2="with" arg3="(power 2 n)">
     <goal name="greatest_factor&#39;vc.3.1.1.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.73" steps="1017268"/></proof>
     </goal>
     <goal name="greatest_factor&#39;vc.3.1.1.1" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="3.59" steps="1377126"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="greatest_factor&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1017305"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.78" steps="1017729"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.6" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures3">
   <goal name="greatest_factor&#39;vc.6.0" expl="apply premises" proved="true">
   <proof prover="8"><result status="valid" time="1.77" steps="1017766"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="greatest_factor&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="4.28" steps="1416048"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1018090"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.86"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="min_mod_sum&#39;vc" expl="VC for min_mod_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="min_mod_sum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.67" steps="1018570"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.1" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.95" steps="1352465"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.69" steps="1018706"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.14" steps="1371173"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="1018735"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1018748"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.66" steps="1018763"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.66" steps="1018782"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="1018773"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.69" steps="1018785"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1019290"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="1019303"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.69" steps="1019318"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.13" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.13.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.75" steps="1019330"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.14" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1019328"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1019340"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1019661"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.69" steps="1019674"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.79" steps="1019689"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.72" steps="1019708"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1019699"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="1019711"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1019916"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.59" steps="1468868"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.73" steps="1088356"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.67" steps="1019928"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.54" steps="1468453"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.27" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.27.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.72" steps="1019949"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.28" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.28.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.23" steps="1195778"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.29" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.29.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.83" steps="1057420"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.30" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.30.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="4.29" steps="1407856"/></proof>
   </goal>
   <goal name="min_mod_sum&#39;vc.30.1" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="1.85" steps="1057438"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.09" steps="1215078"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.32" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.32.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="min_mod_sum&#39;vc.32.0.0" expl="precondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="min_mod_sum&#39;vc.32.0.0.0" expl="VC for min_mod_sum" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="min_mod_sum&#39;vc.32.0.0.0.0" expl="precondition" proved="true">
      <proof prover="1"><result status="valid" time="2.37"/></proof>
      </goal>
      <goal name="min_mod_sum&#39;vc.32.0.0.0.1" expl="precondition" proved="true">
      <proof prover="8"><result status="valid" time="3.25" steps="1235709"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.33" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.33.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="min_mod_sum&#39;vc.33.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="min_mod_sum&#39;vc.33.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="min_mod_sum&#39;vc.33.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H">
       <goal name="min_mod_sum&#39;vc.33.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="min_mod_sum&#39;vc.33.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="eliminate_if" proved="true" >
         <goal name="min_mod_sum&#39;vc.33.0.0.0.0.0.0.0" expl="VC for min_mod_sum" proved="true">
         <proof prover="8"><result status="valid" time="5.99" steps="1884065"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="min_mod_sum&#39;vc.33.1" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="2.94" steps="1086335"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.34" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="3.25" steps="1213764"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.35" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.35.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Ensures2" arg2="i">
    <goal name="min_mod_sum&#39;vc.35.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="min_mod_sum&#39;vc.35.0.0.0" expl="destruct premise" proved="true">
     <proof prover="8"><result status="valid" time="4.71" steps="1511891"/></proof>
     </goal>
     <goal name="min_mod_sum&#39;vc.35.0.0.1" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Hinst">
      <goal name="min_mod_sum&#39;vc.35.0.0.1.0" expl="postcondition" proved="true">
      <proof prover="8"><result status="valid" time="4.71" steps="1523122"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="min_mod_sum&#39;vc.35.1" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="1.74" steps="1057420"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.87" steps="1057526"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.27" steps="1390173"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.38" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.38.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.10" steps="1215191"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.39" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.39.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="3.19" steps="1215596"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.40" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.40.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="3.19" steps="1215654"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.41" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="1.95" steps="1145668"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.42" expl="postcondition" proved="true">
  <transf name="eliminate_let" proved="true" >
   <goal name="min_mod_sum&#39;vc.42.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="transitive_infeq" arg2="with" arg3="(o k)">
    <goal name="min_mod_sum&#39;vc.42.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="Ensures2">
     <goal name="min_mod_sum&#39;vc.42.0.0.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="4.81" steps="1510556"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="min_mod_sum&#39;vc.42.0.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="H6">
     <goal name="min_mod_sum&#39;vc.42.0.1.0" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="1.97" steps="1145734"/></proof>
     </goal>
     <goal name="min_mod_sum&#39;vc.42.0.1.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.07" steps="1145734"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.43" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.43.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="compat_order_mult_rev" arg2="with" arg3="(c_one /. cpower (i_to_c (greatest_factor a bound n i)) 2)">
    <goal name="min_mod_sum&#39;vc.43.0.0" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="4.97" steps="1512547"/></proof>
    </goal>
    <goal name="min_mod_sum&#39;vc.43.0.1" expl="apply premises" proved="true">
    <proof prover="8"><result status="valid" time="4.80" steps="1515898"/></proof>
    </goal>
    <goal name="min_mod_sum&#39;vc.43.0.2" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.38"/></proof>
    </goal>
    <goal name="min_mod_sum&#39;vc.43.0.3" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.09"/></proof>
    </goal>
    <goal name="min_mod_sum&#39;vc.43.0.4" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="((cpower (i_to_c (greatest_factor a bound n i)) 2 *. result)
   *. (c_one /. cpower (i_to_c (greatest_factor a bound n i)) 2))" arg2="result">
     <goal name="min_mod_sum&#39;vc.43.0.4.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b. b&lt;&gt; c_zero -&gt; a*. (c_one/.b) = a/.b)">
      <goal name="min_mod_sum&#39;vc.43.0.4.0.0" expl="asserted formula" proved="true">
      <proof prover="8"><result status="valid" time="3.04" steps="1215007"/></proof>
      </goal>
      <goal name="min_mod_sum&#39;vc.43.0.4.0.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="h">
       <goal name="min_mod_sum&#39;vc.43.0.4.0.1.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="Ensures">
        <goal name="min_mod_sum&#39;vc.43.0.4.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.89" steps="1146063"/></proof>
        </goal>
        <goal name="min_mod_sum&#39;vc.43.0.4.0.1.0.1" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.91" steps="1146063"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="min_mod_sum&#39;vc.43.0.4.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.02"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="min_mod_sum&#39;vc.43.0.4.1" expl="equality hypothesis" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b. a&lt;&gt; c_zero -&gt; a*.b*. (c_one/.a) = b)">
      <goal name="min_mod_sum&#39;vc.43.0.4.1.0" expl="asserted formula" proved="true">
      <proof prover="8"><result status="valid" time="5.24" steps="1555089"/></proof>
      </goal>
      <goal name="min_mod_sum&#39;vc.43.0.4.1.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="h">
       <goal name="min_mod_sum&#39;vc.43.0.4.1.1.0" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="1.89" steps="1146056"/></proof>
       </goal>
       <goal name="min_mod_sum&#39;vc.43.0.4.1.1.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.10"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="separated_best_appr&#39;vc" expl="VC for separated_best_appr" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="separated_best_appr&#39;vc.0" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="i_to_c_sub_rev">
   <goal name="separated_best_appr&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="assert" proved="true" arg1="(forall a b c. (a-.b)-.(c+.b) = (a-.c) -. (b+.b))">
    <goal name="separated_best_appr&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="separated_best_appr&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <transf name="replace" proved="true" arg1="((a -. b) -. (c +. b))" arg2="(a-.b-.c-.b)">
      <goal name="separated_best_appr&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="replace" proved="true" arg1="((a -. c) -. (b +. b))" arg2="(a-.c-.b-.b)">
       <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
        <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
         <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
         <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
          <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
          <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
           <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
           <proof prover="8"><result status="valid" time="4.27" steps="1359423"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="separated_best_appr&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="8"><result status="valid" time="2.96" steps="1086893"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="separated_best_appr&#39;vc.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="8"><result status="valid" time="2.96" steps="1086893"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="separated_best_appr&#39;vc.0.0.1" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="h">
     <goal name="separated_best_appr&#39;vc.0.0.1.0" expl="assertion" proved="true">
     <transf name="apply" proved="true" arg1="subs_eq">
      <goal name="separated_best_appr&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
       <goal name="separated_best_appr&#39;vc.0.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
        <goal name="separated_best_appr&#39;vc.0.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="assert" proved="true" arg1="(forall a b c. c &lt;&gt; c_zero -&gt;  (a-.b)*.c = a*.c -. b*.c)">
         <goal name="separated_best_appr&#39;vc.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
         <proof prover="8"><result status="valid" time="4.15" steps="1358485"/></proof>
         </goal>
         <goal name="separated_best_appr&#39;vc.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="4.59" steps="1453344"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="separated_best_appr&#39;vc.0.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="8"><result status="valid" time="2.86" steps="1086966"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="separated_best_appr&#39;vc.1" expl="assertion" proved="true">
  <transf name="assert" proved="true" arg1="(c_zero &lt;. ((i_to_c (k&#39; - k)
      *. (i_to_c (power 2 (2 * n)) /. i_to_c (multi_order a bound)))
     -. c_one))">
   <goal name="separated_best_appr&#39;vc.1.0" expl="asserted formula" proved="true">
   <transf name="assert" proved="true" arg1="(c_one &lt;. (i_to_c (power 2 (2 * n)) /. i_to_c (multi_order a bound)))">
    <goal name="separated_best_appr&#39;vc.1.0.0" expl="asserted formula" proved="true">
    <transf name="assert" proved="true" arg1="(i_to_c (multi_order a bound) &lt;. (i_to_c (power 2 (2 * n))  ))">
     <goal name="separated_best_appr&#39;vc.1.0.0.0" expl="asserted formula" proved="true">
     <transf name="apply" proved="true" arg1="i_to_c_inf">
      <goal name="separated_best_appr&#39;vc.1.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="inf_trans" arg2="with" arg3="bound">
       <goal name="separated_best_appr&#39;vc.1.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="4.24" steps="1384953"/></proof>
       </goal>
       <goal name="separated_best_appr&#39;vc.1.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="inf_trans" arg2="with" arg3="(power 2 n)">
        <goal name="separated_best_appr&#39;vc.1.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.74" steps="1019989"/></proof>
        </goal>
        <goal name="separated_best_appr&#39;vc.1.0.0.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="6"><result status="valid" time="6.55" steps="280034"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="separated_best_appr&#39;vc.1.0.0.1" expl="asserted formula" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b.c_zero &lt;. a -&gt; c_zero &lt;. b -&gt; b&lt;.a -&gt; c_one &lt;.a /.b)">
      <goal name="separated_best_appr&#39;vc.1.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0" expl="asserted formula" proved="true">
       <transf name="replace" proved="true" arg1="(a /. b)" arg2="(c_one +. ((a-.b)/.b))">
        <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.0" expl="asserted formula" proved="true">
        <transf name="assert" proved="true" arg1="(c_one +. c_zero &lt;. (c_one +. ((a -. b) /. b)))">
         <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
         <proof prover="8"><result status="valid" time="4.18" steps="1393218"/></proof>
         </goal>
         <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.0.1" expl="asserted formula" proved="true">
         <proof prover="8"><result status="valid" time="2.95" steps="1126118"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="replace" proved="true" arg1="c_one" arg2="(b/.b)">
         <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="4.92" steps="1431273"/></proof>
         </goal>
         <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="8"><result status="valid" time="4.84" steps="1429373"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="separated_best_appr&#39;vc.1.0.0.1.1" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="1.94"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="separated_best_appr&#39;vc.1.0.1" expl="asserted formula" proved="true">
    <transf name="assert" proved="true" arg1="(c_one &lt;. (i_to_c (k&#39; - k)
       *. (i_to_c (power 2 (2 * n)) /. i_to_c (multi_order a bound))))">
     <goal name="separated_best_appr&#39;vc.1.0.1.0" expl="asserted formula" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b. c_one &lt;=. a -&gt; c_one &lt;. b -&gt; c_one &lt;. a*.b)">
      <goal name="separated_best_appr&#39;vc.1.0.1.0.0" expl="asserted formula" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="separated_best_appr&#39;vc.1.0.1.0.0.0" expl="asserted formula" proved="true">
       <proof prover="8"><result status="valid" time="5.13" steps="1439965"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="separated_best_appr&#39;vc.1.0.1.0.1" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="h1">
       <goal name="separated_best_appr&#39;vc.1.0.1.0.1.0" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="4.13" steps="1388426"/></proof>
       </goal>
       <goal name="separated_best_appr&#39;vc.1.0.1.0.1.1" expl="apply premises" proved="true">
       <proof prover="8"><result status="valid" time="1.66" steps="1020060"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="separated_best_appr&#39;vc.1.0.1.1" expl="asserted formula" proved="true">
     <proof prover="8"><result status="valid" time="2.84" steps="1087088"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="separated_best_appr&#39;vc.1.1" expl="assertion" proved="true">
   <transf name="assert" proved="true" arg1="(forall a b. real_ b -&gt; c_zero &lt;. a-. b -&gt; b &lt;.a)">
    <goal name="separated_best_appr&#39;vc.1.1.0" expl="asserted formula" proved="true">
    <proof prover="8"><result status="valid" time="4.33" steps="1469145"/></proof>
    </goal>
    <goal name="separated_best_appr&#39;vc.1.1.1" expl="assertion" proved="true">
    <transf name="apply" proved="true" arg1="h">
     <goal name="separated_best_appr&#39;vc.1.1.1.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="2.30"/></proof>
     </goal>
     <goal name="separated_best_appr&#39;vc.1.1.1.1" expl="apply premises" proved="true">
     <proof prover="8"><result status="valid" time="2.77" steps="1086774"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="separated_best_appr&#39;vc.2" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1019987"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.3" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="1020000"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.4" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1020015"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.5" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="1020034"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.6" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1020025"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.7" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.75" steps="1086809"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.8" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1020072"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.9" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.73" steps="1020085"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.10" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="1020100"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.11" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.67" steps="1020119"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.12" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.72" steps="1020110"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.13" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.74" steps="1086888"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.14" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="separated_best_appr&#39;vc.14.0" expl="precondition" proved="true">
   <proof prover="8"><result status="valid" time="2.87" steps="1087225"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="separated_best_appr&#39;vc.15" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.82" steps="1020177"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.16" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.22" steps="1374773"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.17" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.12" steps="1131652"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.18" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.80" steps="1089644"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.19" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="1020303"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.20" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.14" steps="1483689"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.21" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.76" steps="1133622"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.22" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.54" steps="1020346"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.23" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.56" steps="1020359"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.24" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.55" steps="1020374"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.25" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.58" steps="1020393"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.26" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.60" steps="1020384"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.27" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.72" steps="1089358"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.28" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1020584"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.29" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1020587"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.30" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.71" steps="1020597"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.31" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.77" steps="1020610"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.32" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="1020625"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.33" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.72" steps="1020644"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.34" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.75" steps="1020635"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.35" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.79" steps="1089575"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.36" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.84" steps="1090089"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.37" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="1020823"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.38" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="4.65" steps="1509677"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.39" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="3.02" steps="1138846"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.40" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.76" steps="1020846"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.41" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="1020859"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.42" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.70" steps="1020874"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.43" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.68" steps="1020893"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.44" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.74" steps="1020884"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.45" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="2.73" steps="1089824"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.46" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.65" steps="1020974"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.47" expl="precondition" proved="true">
  <proof prover="8"><result status="valid" time="1.63" steps="1020977"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.48" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.99"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.49" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.40"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
