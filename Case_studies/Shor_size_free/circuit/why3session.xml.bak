<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.8.6" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="8" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="circuit.mlw"/>
<theory name="Shor">
 <goal name="create_superposition&#39;vc" expl="VC for create_superposition" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="create_superposition&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.84" steps="22903"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.06" steps="1066901"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="create_superposition&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.88" steps="22903"/></proof>
   <proof prover="8" obsolete="true"><result status="valid" time="3.25" steps="1156641"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="create_superposition&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.86" steps="22970"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.54" steps="1227057"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="create_superposition&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.86" steps="23220"/></proof>
   <proof prover="8" obsolete="true"><result status="valid" time="3.73" steps="1256931"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="create_superposition&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="create_superposition&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.93" steps="23420"/></proof>
   <proof prover="8" obsolete="true"><result status="valid" time="3.61" steps="1254293"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="create_superposition&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.93" steps="23690"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="2.24" steps="1186968"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.93" steps="23949"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.69" steps="1267035"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.96"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.90" steps="1267439"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.98" steps="24015"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="4.09" steps="1320732"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.94"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.10" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="23999"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="2.25" steps="1196051"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.11" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="23999"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="2.28" steps="1196372"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.12" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.94" steps="23999"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.11" steps="1267344"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.99" steps="24256"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.89" steps="1196746"/></proof>
  </goal>
  <goal name="create_superposition&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="1.02" steps="24256"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.73" steps="1196749"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="modular_expo&#39;vc" expl="VC for modular_expo">
 <transf name="split_vc" >
  <goal name="modular_expo&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.93" steps="23061"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.72" steps="1002946"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.83" steps="23061"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="2.06" steps="1002961"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.63"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="4.57" steps="1308486"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.81" steps="23114"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.96" steps="1003319"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.81" steps="23114"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.71" steps="1003344"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.83" steps="23113"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.61" steps="1009279"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.87" steps="23113"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.65" steps="1009294"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.7" expl="precondition">
  <proof prover="1"><result status="timeout" time="5.00"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="4.51" steps="1314943"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.97" steps="23113"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.88" steps="1009570"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.9" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.85" steps="23130"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.22" steps="1073084"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.10" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.90" steps="23115"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="2.04" steps="1009646"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.11" expl="variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.84" steps="23026"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.70" steps="1002977"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.12" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.88" steps="23042"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.00" steps="1068122"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.13" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.86" steps="23077"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.77" steps="1008894"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.14" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.82" steps="23077"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="2.05" steps="1008909"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.55"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="4.81" steps="1313249"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.16" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.82" steps="23130"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="2.00" steps="1009256"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.17" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.83" steps="23130"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.94" steps="1009274"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.18" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.86" steps="23130"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.95" steps="1009565"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.19" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.86" steps="23130"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.97" steps="1009580"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.20" expl="precondition">
  <proof prover="1"><result status="timeout" time="5.00"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="4.09" steps="1315765"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.21" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.81" steps="23131"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.15" steps="1074128"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.22" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.82" steps="23147"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.02" steps="1073399"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.23" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.84" steps="23132"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.97" steps="1009933"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.24" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="modular_expo&#39;vc.24.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.87" steps="23391"/></proof>
   <proof prover="8" obsolete="true"><result status="valid" time="3.13" steps="1074401"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modular_expo&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.91" steps="25818"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.50" steps="1159680"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.26" expl="postcondition">
  <transf name="case" arg1="(getbv x k = 1)">
   <goal name="modular_expo&#39;vc.26.0" expl="true case (postcondition)">
   <transf name="destruct" arg1="H1">
    <goal name="modular_expo&#39;vc.26.0.0" expl="true case (postcondition)">
    <transf name="split_all_full" >
     <goal name="modular_expo&#39;vc.26.0.0.0" expl="true case (postcondition)">
     <transf name="eliminate_let" >
      <goal name="modular_expo&#39;vc.26.0.0.0.0" expl="true case (postcondition)">
      <transf name="rewrite" arg1="H8">
       <goal name="modular_expo&#39;vc.26.0.0.0.0.0" expl="true case (postcondition)">
       <transf name="rewrite" arg1="cont_kron_pat_right">
        <goal name="modular_expo&#39;vc.26.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_eq">
         <goal name="modular_expo&#39;vc.26.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="1" obsolete="true"><result status="valid" time="1.99"/></proof>
         <proof prover="6"><result status="valid" time="0.92" steps="24044"/></proof>
         <proof prover="8" obsolete="true"><result status="valid" time="2.65" steps="1341821"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.26.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
      (k + 1))" arg2="(power 2 ((2 * n) - 1))">
          <goal name="modular_expo&#39;vc.26.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="1.53"/></proof>
          <proof prover="6"><result status="timeout" time="5.00"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.26.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
          <transf name="rewrite" proved="true" arg1="ind_isum_one">
           <goal name="modular_expo&#39;vc.26.0.0.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="modular_expo&#39;vc.26.0.0.0.0.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
            <proof prover="1" obsolete="true"><result status="valid" time="1.95"/></proof>
            <proof prover="6"><result status="valid" time="0.97" steps="24065"/></proof>
            <proof prover="8" obsolete="true"><result status="valid" time="2.95" steps="1359557"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="modular_expo&#39;vc.26.0.0.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
           <proof prover="1" obsolete="true"><result status="valid" time="1.97"/></proof>
           <proof prover="6"><result status="valid" time="0.97" steps="24044"/></proof>
           <proof prover="8" obsolete="true"><result status="valid" time="2.60" steps="1341844"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.26.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1" obsolete="true"><result status="valid" time="2.44"/></proof>
        <proof prover="6"><result status="valid" time="1.00" steps="24045"/></proof>
        <proof prover="8" obsolete="true"><result status="valid" time="3.92" steps="1418521"/></proof>
        </goal>
        <goal name="modular_expo&#39;vc.26.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="1" obsolete="true"><result status="valid" time="2.04"/></proof>
        <proof prover="6"><result status="valid" time="0.96" steps="24044"/></proof>
        <proof prover="8" obsolete="true"><result status="valid" time="3.94" steps="1418530"/></proof>
        </goal>
        <goal name="modular_expo&#39;vc.26.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.71"/></proof>
        <proof prover="6"><result status="timeout" time="5.00"/></proof>
        </goal>
        <goal name="modular_expo&#39;vc.26.0.0.0.0.0.4" expl="rewrite premises">
        <proof prover="1"><result status="timeout" time="5.00"/></proof>
        <proof prover="6"><result status="timeout" time="5.00"/></proof>
        <proof prover="8" obsolete="true"><result status="valid" time="4.14" steps="1420275"/></proof>
        </goal>
        <goal name="modular_expo&#39;vc.26.0.0.0.0.0.5" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.68"/></proof>
        <proof prover="6"><result status="timeout" time="5.00"/></proof>
        <proof prover="8" obsolete="true"><result status="valid" time="4.40" steps="1420298"/></proof>
        </goal>
        <goal name="modular_expo&#39;vc.26.0.0.0.0.0.6" expl="rewrite premises">
        <proof prover="1"><result status="timeout" time="5.00"/></proof>
        <proof prover="6"><result status="timeout" time="5.00"/></proof>
        <proof prover="8" obsolete="true"><result status="valid" time="4.28" steps="1430867"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="modular_expo&#39;vc.26.0.1" expl="true case (postcondition)">
    <transf name="split_all_full" >
     <goal name="modular_expo&#39;vc.26.0.1.0" expl="true case (postcondition)">
     <transf name="eliminate_let" >
      <goal name="modular_expo&#39;vc.26.0.1.0.0" expl="true case (postcondition)">
      <transf name="rewrite" arg1="H8">
       <goal name="modular_expo&#39;vc.26.0.1.0.0.0" expl="true case (postcondition)">
       <transf name="apply" arg1="path_sem_comp" arg2="with" arg3="(kronecker (bv_to_ket x)
    (ket n
     (mod1
      (power a
       (ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1))
        0 (k -1+ 1)))
      bound))
)">
        <goal name="modular_expo&#39;vc.26.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(width o17)" arg2="(2*n+n)">
         <goal name="modular_expo&#39;vc.26.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="modular_expo&#39;vc.26.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="6"><result status="valid" time="0.95" steps="24437"/></proof>
          <proof prover="8" obsolete="true"><result status="valid" time="4.15" steps="1510752"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.26.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="6"><result status="valid" time="0.94" steps="24437"/></proof>
          <proof prover="8" obsolete="true"><result status="valid" time="4.15" steps="1510752"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.26.0.1.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="1.89"/></proof>
          <proof prover="6"><result status="timeout" time="5.00"/></proof>
          <proof prover="8" obsolete="true"><result status="valid" time="4.35" steps="1512544"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.26.0.1.0.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="2.31"/></proof>
          <proof prover="6"><result status="timeout" time="5.00"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="modular_expo&#39;vc.26.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="6"><result status="valid" time="0.96" steps="24437"/></proof>
         <proof prover="8" obsolete="true"><result status="valid" time="2.53" steps="1433709"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.26.0.1.0.0.0.1" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="H34">
         <goal name="modular_expo&#39;vc.26.0.1.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="6"><result status="valid" time="0.94" steps="24437"/></proof>
         <proof prover="8" obsolete="true"><result status="valid" time="2.59" steps="1433695"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2" expl="apply premises">
        <transf name="rewrite" arg1="H16">
         <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0" expl="apply premises">
         <transf name="rewrite" arg1="cont_kron_pat_right">
          <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="kronecker_eq">
           <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <proof prover="1" obsolete="true"><result status="valid" time="2.35"/></proof>
           <proof prover="6"><result status="valid" time="0.91" steps="24437"/></proof>
           <proof prover="8" obsolete="true"><result status="valid" time="2.64" steps="1433693"/></proof>
           </goal>
           <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="H18">
            <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(mod1
    (power a
     (ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
      (k + 1)))
    bound)" arg2="(mod1
    (power a (power 2 (((2 * n) - k) - 1))
     * mod1
       (power a
        (ind_isum
         (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
         ((k - 1) + 1)))
       bound)
    bound)
">
             <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="H21">
              <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1" expl="equality hypothesis" proved="true">
             <transf name="rewrite" proved="true" arg1="ind_isum_right_extension">
              <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0" expl="equality hypothesis" proved="true">
               <transf name="rewrite" proved="true" arg1="power_sum">
                <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0" expl="equality hypothesis" proved="true">
                <transf name="assert" proved="true" arg1="(forall a b c d. a=d -&gt; b= c -&gt; mod1 (a*b) bound = mod1 (c*mod1 d bound)bound)">
                 <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0.0" expl="asserted formula" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
                  <transf name="rewrite" proved="true" arg1="H">
                   <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
                   <transf name="replace" proved="true" arg1="a" arg2="(mod1 d bound + bound * div1 d bound)">
                    <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                    <transf name="rewrite" proved="true" arg1="mult_add_right">
                     <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                     <transf name="replace" proved="true" arg1="((mod1 d bound * c) + ((bound * div1 d bound) * c))" arg2="( ((bound * div1 d bound) * c) +(mod1 d bound * c) )">
                      <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                      <transf name="rewrite" proved="true" arg1="simpl_add_mod_left">
                       <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                       <proof prover="1" obsolete="true"><result status="valid" time="2.29"/></proof>
                       <proof prover="6"><result status="valid" time="0.95" steps="24005"/></proof>
                       <proof prover="8" obsolete="true"><result status="valid" time="2.67" steps="1433715"/></proof>
                       </goal>
                       <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="1" obsolete="true"><result status="valid" time="2.52"/></proof>
                       <proof prover="6"><result status="valid" time="0.93" steps="23987"/></proof>
                       <proof prover="8" obsolete="true"><result status="valid" time="4.28" steps="1511237"/></proof>
                       </goal>
                       <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                       <proof prover="1"><result status="valid" time="2.84"/></proof>
                       <proof prover="6"><result status="timeout" time="5.00"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                      <proof prover="1" obsolete="true"><result status="valid" time="2.51"/></proof>
                      <proof prover="6"><result status="valid" time="0.90" steps="23987"/></proof>
                      <proof prover="8" obsolete="true"><result status="valid" time="2.79" steps="1433725"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                    <proof prover="1"><result status="valid" time="2.33"/></proof>
                    <proof prover="6"><result status="timeout" time="5.00"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
                 <transf name="apply" proved="true" arg1="h">
                  <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0.1.0" expl="apply premises" proved="true">
                  <transf name="replace" proved="true" arg1="(k-1+1)" arg2="k">
                   <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                   </transf>
                   </goal>
                   <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="1" obsolete="true"><result status="valid" time="2.45"/></proof>
                   <proof prover="6"><result status="valid" time="0.94" steps="24437"/></proof>
                   <proof prover="8" obsolete="true"><result status="valid" time="2.36" steps="1433974"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0.1.1" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="one_mult">
                   <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0.1.1.0" expl="apply premises" proved="true">
                   <proof prover="1" obsolete="true"><result status="valid" time="1.95"/></proof>
                   <proof prover="6"><result status="valid" time="0.97" steps="24437"/></proof>
                   <proof prover="8" obsolete="true"><result status="valid" time="2.96" steps="1433965"/></proof>
                   </goal>
                   <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                   <proof prover="1" obsolete="true"><result status="valid" time="2.43"/></proof>
                   <proof prover="6"><result status="valid" time="0.96" steps="24437"/></proof>
                   <proof prover="8" obsolete="true"><result status="valid" time="2.72" steps="1433967"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="ind_isum_pos">
                 <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.1.0" expl="apply premises" proved="true">
                 <proof prover="1" obsolete="true"><result status="valid" time="2.30"/></proof>
                 <proof prover="6"><result status="valid" time="0.92" steps="24437"/></proof>
                 <proof prover="8" obsolete="true"><result status="valid" time="2.82" steps="1433695"/></proof>
                 </goal>
                 <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.1.1" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.1.1.0" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="2.50"/></proof>
                  <proof prover="6"><result status="timeout" time="5.00"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.0.0.2" expl="rewrite premises" proved="true">
                <proof prover="1"><result status="valid" time="1.97"/></proof>
                <proof prover="6"><result status="timeout" time="5.00"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.0.1.1" expl="rewrite premises" proved="true">
              <proof prover="1" obsolete="true"><result status="valid" time="2.01"/></proof>
              <proof prover="6"><result status="valid" time="0.94" steps="24437"/></proof>
              <proof prover="8" obsolete="true"><result status="valid" time="2.61" steps="1433695"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="2.16"/></proof>
            <proof prover="6"><result status="timeout" time="5.00"/></proof>
            <proof prover="8" obsolete="true"><result status="valid" time="4.34" steps="1512720"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.1" expl="rewrite premises" proved="true">
          <proof prover="1" obsolete="true"><result status="valid" time="2.34"/></proof>
          <proof prover="6"><result status="valid" time="0.95" steps="24437"/></proof>
          <proof prover="8" obsolete="true"><result status="valid" time="3.75" steps="1510788"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.2" expl="rewrite premises" proved="true">
          <proof prover="1" obsolete="true"><result status="valid" time="2.33"/></proof>
          <proof prover="6"><result status="valid" time="0.95" steps="24437"/></proof>
          <proof prover="8" obsolete="true"><result status="valid" time="3.78" steps="1510763"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.3" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.33"/></proof>
          <proof prover="6"><result status="timeout" time="5.00"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.4" expl="rewrite premises">
          <proof prover="1"><result status="timeout" time="5.00"/></proof>
          <proof prover="6"><result status="timeout" time="5.00"/></proof>
          <proof prover="8" obsolete="true"><result status="valid" time="3.97" steps="1512528"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.5" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.89"/></proof>
          <proof prover="6"><result status="timeout" time="5.00"/></proof>
          <proof prover="8" obsolete="true"><result status="valid" time="4.07" steps="1512551"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.26.0.1.0.0.0.2.0.6" expl="rewrite premises">
          <proof prover="1"><result status="timeout" time="5.00"/></proof>
          <proof prover="6"><result status="timeout" time="5.00"/></proof>
          <proof prover="8" obsolete="true"><result status="valid" time="4.06" steps="1523723"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.26.0.1.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="1" obsolete="true"><result status="valid" time="2.35"/></proof>
        <proof prover="6"><result status="valid" time="0.93" steps="24437"/></proof>
        <proof prover="8" obsolete="true"><result status="valid" time="4.47" steps="1511167"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="modular_expo&#39;vc.26.1" expl="false case (postcondition)">
   <transf name="destruct" arg1="H1">
    <goal name="modular_expo&#39;vc.26.1.0" expl="false case (postcondition)">
    <transf name="split_all_full" >
     <goal name="modular_expo&#39;vc.26.1.0.0" expl="false case (postcondition)">
     <transf name="eliminate_let" >
      <goal name="modular_expo&#39;vc.26.1.0.0.0" expl="false case (postcondition)">
      <transf name="rewrite" arg1="H8">
       <goal name="modular_expo&#39;vc.26.1.0.0.0.0" expl="false case (postcondition)">
       <transf name="replace" arg1="(ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1))
        0 (k + 1))" arg2="0">
        <goal name="modular_expo&#39;vc.26.1.0.0.0.0.0" expl="false case (postcondition)">
        <transf name="rewrite" arg1="cont_kron_pat_right1">
         <goal name="modular_expo&#39;vc.26.1.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
         <proof prover="1"><result status="valid" time="1.77"/></proof>
         <proof prover="6"><result status="timeout" time="5.00"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.26.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="1" obsolete="true"><result status="valid" time="2.12"/></proof>
         <proof prover="6"><result status="valid" time="0.94" steps="24008"/></proof>
         <proof prover="8" obsolete="true"><result status="valid" time="4.07" steps="1418519"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.26.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="1" obsolete="true"><result status="valid" time="2.09"/></proof>
         <proof prover="6"><result status="valid" time="0.92" steps="24008"/></proof>
         <proof prover="8" obsolete="true"><result status="valid" time="4.13" steps="1418554"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.26.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.77"/></proof>
         <proof prover="6"><result status="timeout" time="5.00"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.26.1.0.0.0.0.0.4" expl="rewrite premises">
         <proof prover="1"><result status="timeout" time="5.00"/></proof>
         <proof prover="6"><result status="timeout" time="5.00"/></proof>
         <proof prover="8" obsolete="true"><result status="valid" time="4.21" steps="1420271"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.26.1.0.0.0.0.0.5" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.72"/></proof>
         <proof prover="6"><result status="timeout" time="5.00"/></proof>
         <proof prover="8" obsolete="true"><result status="valid" time="4.33" steps="1420294"/></proof>
         </goal>
         <goal name="modular_expo&#39;vc.26.1.0.0.0.0.0.6" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
          <goal name="modular_expo&#39;vc.26.1.0.0.0.0.0.6.0" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.16"/></proof>
          <proof prover="6"><result status="timeout" time="5.00"/></proof>
          <proof prover="8" obsolete="true"><result status="valid" time="5.49" steps="1695901"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.26.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="ind_isum_one">
         <goal name="modular_expo&#39;vc.26.1.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="modular_expo&#39;vc.26.1.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
          <proof prover="1"><result status="valid" time="2.38"/></proof>
          <proof prover="6"><result status="timeout" time="5.00"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="modular_expo&#39;vc.26.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="1" obsolete="true"><result status="valid" time="2.13"/></proof>
         <proof prover="6"><result status="valid" time="0.95" steps="24008"/></proof>
         <proof prover="8" obsolete="true"><result status="valid" time="2.54" steps="1341848"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="modular_expo&#39;vc.26.1.1" expl="false case (postcondition)">
    <transf name="split_all_full" >
     <goal name="modular_expo&#39;vc.26.1.1.0" expl="false case (postcondition)">
     <transf name="eliminate_let" >
      <goal name="modular_expo&#39;vc.26.1.1.0.0" expl="false case (postcondition)">
      <transf name="rewrite" arg1="H8">
       <goal name="modular_expo&#39;vc.26.1.1.0.0.0" expl="false case (postcondition)">
       <transf name="apply" arg1="path_sem_comp" arg2="with" arg3="(kronecker (bv_to_ket x)
    (ket n
     (mod1
      (power a
       (ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1))
        0 (k -1+ 1)))
      bound))
)">
        <goal name="modular_expo&#39;vc.26.1.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(width o17)" arg2="(2*n+n)">
         <goal name="modular_expo&#39;vc.26.1.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="kronecker_ket_l">
          <goal name="modular_expo&#39;vc.26.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="6"><result status="valid" time="0.98" steps="24399"/></proof>
          <proof prover="8" obsolete="true"><result status="valid" time="4.20" steps="1510760"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.26.1.1.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="6"><result status="valid" time="0.93" steps="24399"/></proof>
          <proof prover="8" obsolete="true"><result status="valid" time="4.20" steps="1510760"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.26.1.1.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="1.91"/></proof>
          <proof prover="6"><result status="timeout" time="5.00"/></proof>
          <proof prover="8" obsolete="true"><result status="valid" time="4.19" steps="1512516"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.26.1.1.0.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="2.12"/></proof>
          <proof prover="6"><result status="timeout" time="5.00"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="modular_expo&#39;vc.26.1.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="6"><result status="valid" time="0.94" steps="24399"/></proof>
         <proof prover="8" obsolete="true"><result status="valid" time="2.26" steps="1433713"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.26.1.1.0.0.0.1" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="H34">
         <goal name="modular_expo&#39;vc.26.1.1.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="6"><result status="valid" time="0.92" steps="24399"/></proof>
         <proof prover="8" obsolete="true"><result status="valid" time="2.60" steps="1433699"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.26.1.1.0.0.0.2" expl="apply premises">
        <transf name="rewrite" arg1="H16">
         <goal name="modular_expo&#39;vc.26.1.1.0.0.0.2.0" expl="apply premises">
         <transf name="rewrite" arg1="cont_kron_pat_right1">
          <goal name="modular_expo&#39;vc.26.1.1.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
      (k + 1))" arg2="(ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
      (k -1+ 1))">
           <goal name="modular_expo&#39;vc.26.1.1.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
           </transf>
           </goal>
           <goal name="modular_expo&#39;vc.26.1.1.0.0.0.2.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="ind_isum_right_extension">
            <goal name="modular_expo&#39;vc.26.1.1.0.0.0.2.0.0.1.0" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="add_zero">
             <goal name="modular_expo&#39;vc.26.1.1.0.0.0.2.0.0.1.0.0" expl="equality hypothesis" proved="true">
             <transf name="replace" proved="true" arg1="(k-1+1)" arg2="k">
              <goal name="modular_expo&#39;vc.26.1.1.0.0.0.2.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
              <transf name="compute_specified" proved="true" >
              </transf>
              </goal>
              <goal name="modular_expo&#39;vc.26.1.1.0.0.0.2.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="1" obsolete="true"><result status="valid" time="2.28"/></proof>
              <proof prover="6"><result status="valid" time="0.92" steps="24399"/></proof>
              <proof prover="8" obsolete="true"><result status="valid" time="2.49" steps="1433706"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="modular_expo&#39;vc.26.1.1.0.0.0.2.0.0.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="3.04"/></proof>
             <proof prover="6"><result status="timeout" time="5.00"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="modular_expo&#39;vc.26.1.1.0.0.0.2.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="1" obsolete="true"><result status="valid" time="2.39"/></proof>
            <proof prover="6"><result status="valid" time="0.92" steps="24399"/></proof>
            <proof prover="8" obsolete="true"><result status="valid" time="2.82" steps="1433699"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="modular_expo&#39;vc.26.1.1.0.0.0.2.0.1" expl="rewrite premises" proved="true">
          <proof prover="1" obsolete="true"><result status="valid" time="2.15"/></proof>
          <proof prover="6"><result status="valid" time="0.88" steps="24400"/></proof>
          <proof prover="8" obsolete="true"><result status="valid" time="3.94" steps="1510760"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.26.1.1.0.0.0.2.0.2" expl="rewrite premises" proved="true">
          <proof prover="1" obsolete="true"><result status="valid" time="2.48"/></proof>
          <proof prover="6"><result status="valid" time="0.96" steps="24399"/></proof>
          <proof prover="8" obsolete="true"><result status="valid" time="4.40" steps="1510764"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.26.1.1.0.0.0.2.0.3" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.00"/></proof>
          <proof prover="6"><result status="timeout" time="5.00"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.26.1.1.0.0.0.2.0.4" expl="rewrite premises">
          <proof prover="1"><result status="timeout" time="5.00"/></proof>
          <proof prover="6"><result status="timeout" time="5.00"/></proof>
          <proof prover="8" obsolete="true"><result status="valid" time="4.01" steps="1512500"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.26.1.1.0.0.0.2.0.5" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.30"/></proof>
          <proof prover="6"><result status="timeout" time="5.00"/></proof>
          <proof prover="8" obsolete="true"><result status="valid" time="4.03" steps="1512523"/></proof>
          </goal>
          <goal name="modular_expo&#39;vc.26.1.1.0.0.0.2.0.6" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="bv_to_ket_to_bv">
           <goal name="modular_expo&#39;vc.26.1.1.0.0.0.2.0.6.0" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.80"/></proof>
           <proof prover="6"><result status="timeout" time="5.00"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="modular_expo&#39;vc.26.1.1.0.0.0.3" expl="apply premises" proved="true">
        <proof prover="1" obsolete="true"><result status="valid" time="2.05"/></proof>
        <proof prover="6"><result status="valid" time="0.88" steps="24399"/></proof>
        <proof prover="8" obsolete="true"><result status="valid" time="3.81" steps="1511168"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="modular_expo&#39;vc.27" expl="precondition" proved="true">
  <proof prover="1" obsolete="true"><result status="valid" time="2.07"/></proof>
  <proof prover="6"><result status="valid" time="0.90" steps="22923"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.83" steps="22959"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="2.03" steps="1044244"/></proof>
  </goal>
  <goal name="modular_expo&#39;vc.29" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures1">
   <goal name="modular_expo&#39;vc.29.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ind_isum (fun (l:int) -&gt; (getbv x @ l) * power 2 (((2 * n) - l) - 1)) 0
      (((2 * n) - 1) + 1))" arg2="(bv_to_int x)">
    <goal name="modular_expo&#39;vc.29.0.0" expl="postcondition" proved="true">
    <proof prover="1" obsolete="true"><result status="valid" time="1.52"/></proof>
    <proof prover="6"><result status="valid" time="0.85" steps="23010"/></proof>
    <proof prover="8" obsolete="true"><result status="valid" time="1.85" steps="1044261"/></proof>
    </goal>
    <goal name="modular_expo&#39;vc.29.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
     <goal name="modular_expo&#39;vc.29.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="ind_isum_eq_gen">
      <goal name="modular_expo&#39;vc.29.0.1.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="modular_expo&#39;vc.29.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="modular_expo&#39;vc.29.0.1.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="1" obsolete="true"><result status="valid" time="1.80"/></proof>
        <proof prover="6"><result status="valid" time="0.88" steps="23030"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="modular_expo&#39;vc.29.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="1" obsolete="true"><result status="valid" time="1.58"/></proof>
      <proof prover="6"><result status="valid" time="0.87" steps="23010"/></proof>
      <proof prover="8" obsolete="true"><result status="valid" time="1.65" steps="1044261"/></proof>
      </goal>
      <goal name="modular_expo&#39;vc.29.0.1.0.2" expl="apply premises" proved="true">
      <proof prover="1" obsolete="true"><result status="valid" time="1.82"/></proof>
      <proof prover="6"><result status="valid" time="0.89" steps="23010"/></proof>
      <proof prover="8" obsolete="true"><result status="valid" time="1.66" steps="1044270"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="modular_expo&#39;vc.29.1" expl="rewrite premises" proved="true">
   <proof prover="6"><result status="valid" time="0.90" steps="23010"/></proof>
   <proof prover="8" obsolete="true"><result status="valid" time="1.50" steps="1044263"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="shor_circ_pre&#39;vc" expl="VC for shor_circ_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="shor_circ_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.87" steps="22994"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="2.78" steps="1072615"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.87" steps="22960"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="2.96" steps="1072398"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.90" steps="23283"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="2.70" steps="1079478"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.90" steps="22907"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.13" steps="1126382"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.90" steps="22974"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.25" steps="1193784"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.90" steps="23224"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.07" steps="1227694"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.91" steps="23426"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.03" steps="1225578"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.7" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.91" steps="23698"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.05" steps="1226888"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.93" steps="23747"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="2.97" steps="1227061"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.9" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.94" steps="23998"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.00" steps="1227590"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.10" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.92" steps="24210"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.01" steps="1228192"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.11" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="24245"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.07" steps="1228371"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.12" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.90" steps="24713"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.86" steps="1160007"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.13" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="24713"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.87" steps="1160020"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.14" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.98" steps="24713"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.80" steps="1160035"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.15" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.96" steps="24713"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.79" steps="1160054"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.16" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.94" steps="24713"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.86" steps="1160045"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.17" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.96" steps="24773"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.42" steps="1229133"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.18" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="shor_circ_pre&#39;vc.18.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.93" steps="24812"/></proof>
   <proof prover="8" obsolete="true"><result status="valid" time="1.89" steps="1160331"/></proof>
   </goal>
   <goal name="shor_circ_pre&#39;vc.18.1" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.98" steps="24812"/></proof>
   <proof prover="8" obsolete="true"><result status="valid" time="1.86" steps="1160331"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ_pre&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.98"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.10" steps="1230618"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.20" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (create_superposition (2 * n) (3 * n) (ket n 1)))" arg2="(2*n+n)">
   <goal name="shor_circ_pre&#39;vc.20.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="kronecker_ket_l">
    <goal name="shor_circ_pre&#39;vc.20.0.0" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="0.99" steps="24932"/></proof>
    <proof prover="8" obsolete="true"><result status="valid" time="2.97" steps="1229367"/></proof>
    </goal>
    <goal name="shor_circ_pre&#39;vc.20.0.1" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="1.01" steps="24932"/></proof>
    <proof prover="8" obsolete="true"><result status="valid" time="3.02" steps="1229367"/></proof>
    </goal>
    <goal name="shor_circ_pre&#39;vc.20.0.2" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="1.95"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    <proof prover="8" obsolete="true"><result status="valid" time="3.56" steps="1230632"/></proof>
    </goal>
    <goal name="shor_circ_pre&#39;vc.20.0.3" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="1.93"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    <proof prover="8" obsolete="true"><result status="valid" time="3.59" steps="1230630"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="shor_circ_pre&#39;vc.20.1" expl="equality hypothesis" proved="true">
   <proof prover="6"><result status="valid" time="0.98" steps="24932"/></proof>
   <proof prover="8" obsolete="true"><result status="valid" time="1.83" steps="1160379"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ_pre&#39;vc.21" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.98" steps="24991"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="2.10" steps="1160376"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.22" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
   <goal name="shor_circ_pre&#39;vc.22.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_scal">
    <goal name="shor_circ_pre&#39;vc.22.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="scalar_eq">
     <goal name="shor_circ_pre&#39;vc.22.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_ket_sum_distr_l_rew">
      <goal name="shor_circ_pre&#39;vc.22.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_sum_">
       <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
        <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="6"><result status="valid" time="0.94" steps="24991"/></proof>
        <proof prover="8" obsolete="true"><result status="valid" time="3.47" steps="1230196"/></proof>
        </goal>
        <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="6"><result status="valid" time="0.91" steps="24991"/></proof>
        <proof prover="8" obsolete="true"><result status="valid" time="2.15" steps="1160377"/></proof>
        </goal>
        <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="6"><result status="valid" time="0.98" steps="24991"/></proof>
        <proof prover="8" obsolete="true"><result status="valid" time="2.14" steps="1160393"/></proof>
        </goal>
        <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="modular_expo&#39;spec">
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="kronecker_eq">
             <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="1.86"/></proof>
             <proof prover="6"><result status="timeout" time="5.00"/></proof>
             </goal>
             <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="6"><result status="valid" time="1.00" steps="25050"/></proof>
             <proof prover="8" obsolete="true"><result status="valid" time="2.92" steps="1523090"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="6"><result status="valid" time="0.91" steps="25050"/></proof>
            <proof prover="8" obsolete="true"><result status="valid" time="2.97" steps="1523094"/></proof>
            </goal>
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="6"><result status="valid" time="0.90" steps="25050"/></proof>
            <proof prover="8" obsolete="true"><result status="valid" time="2.76" steps="1523101"/></proof>
            </goal>
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="6"><result status="valid" time="0.96" steps="25050"/></proof>
            <proof prover="8" obsolete="true"><result status="valid" time="2.90" steps="1523103"/></proof>
            </goal>
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.4" expl="rewrite premises" proved="true">
            <proof prover="6"><result status="valid" time="0.93" steps="25050"/></proof>
            <proof prover="8" obsolete="true"><result status="valid" time="2.87" steps="1523107"/></proof>
            </goal>
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.5" expl="rewrite premises" proved="true">
            <proof prover="6"><result status="valid" time="0.92" steps="25050"/></proof>
            <proof prover="8" obsolete="true"><result status="valid" time="2.93" steps="1523092"/></proof>
            </goal>
            <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.0.3.0.0.0.6" expl="rewrite premises" proved="true">
            <proof prover="1"><result status="valid" time="1.85"/></proof>
            <proof prover="6"><result status="timeout" time="5.00"/></proof>
            <proof prover="8" obsolete="true"><result status="valid" time="4.83" steps="1604050"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="6"><result status="valid" time="0.89" steps="24991"/></proof>
       <proof prover="8" obsolete="true"><result status="valid" time="1.89" steps="1160386"/></proof>
       </goal>
       <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="6"><result status="valid" time="0.89" steps="24991"/></proof>
       <proof prover="8" obsolete="true"><result status="valid" time="3.22" steps="1268775"/></proof>
       </goal>
       <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
         <transf name="replace" proved="true" arg1="(width (modular_expo a bound n))" arg2="(2*n+n)">
          <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="ket_kronecker_l">
           <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="2.15"/></proof>
           <proof prover="6"><result status="timeout" time="5.00"/></proof>
           </goal>
           <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="2.05"/></proof>
           <proof prover="6"><result status="timeout" time="5.00"/></proof>
           <proof prover="8" obsolete="true"><result status="valid" time="3.61" steps="1230640"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="shor_circ_pre&#39;vc.22.0.0.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="6"><result status="valid" time="0.87" steps="25050"/></proof>
          <proof prover="8" obsolete="true"><result status="valid" time="1.88" steps="1160405"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="shor_circ_pre&#39;vc.22.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="shor_circ_pre&#39;vc.22.0.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.30"/></proof>
       <proof prover="6"><result status="timeout" time="5.00"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="shor_circ_pre&#39;vc.22.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="6"><result status="valid" time="0.89" steps="24991"/></proof>
      <proof prover="8" obsolete="true"><result status="valid" time="2.20" steps="1160379"/></proof>
      </goal>
      <goal name="shor_circ_pre&#39;vc.22.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="6"><result status="valid" time="0.93" steps="24991"/></proof>
      <proof prover="8" obsolete="true"><result status="valid" time="2.16" steps="1160381"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_circ_pre&#39;vc.22.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="2.01"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ_pre&#39;vc.23" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.88" steps="25051"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.02" steps="1229735"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.24" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.87" steps="24991"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.87" steps="1160502"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.25" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.92" steps="24991"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.86" steps="1160515"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.26" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.95" steps="24991"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.89" steps="1160530"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.27" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.93" steps="24991"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.95" steps="1160549"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.28" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.92" steps="24991"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.94" steps="1160540"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.29" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.92" steps="24991"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.46" steps="1229537"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.30" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.93" steps="25050"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.95" steps="1160810"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.31" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.99"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.57" steps="1231029"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.32" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.87" steps="25030"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.05" steps="1230022"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.95" steps="25332"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.74" steps="1325263"/></proof>
  </goal>
  <goal name="shor_circ_pre&#39;vc.34" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="shor_circ_pre&#39;vc.34.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="result" arg2="(create_superposition (2 * n) (3 * n) (ket n 1) -- modular_expo a bound n)">
    <goal name="shor_circ_pre&#39;vc.34.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="Ensures19">
    </transf>
    </goal>
    <goal name="shor_circ_pre&#39;vc.34.0.1" expl="equality hypothesis" proved="true">
    <proof prover="6"><result status="valid" time="1.28" steps="34548"/></proof>
    <proof prover="8" obsolete="true"><result status="valid" time="2.22" steps="1251832"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="shor_ket&#39;vc" expl="VC for shor_ket" proved="true">
 <proof prover="1"><result status="valid" time="1.77"/></proof>
 <proof prover="6"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="shor_circ&#39;vc" expl="VC for shor_circ">
 <transf name="split_vc" >
  <goal name="shor_circ&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.94" steps="22907"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.96" steps="1005047"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.00" steps="23013"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="2.81" steps="1129772"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.98" steps="23382"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="2.94" steps="1138127"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.03" steps="23348"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="2.97" steps="1138120"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.99" steps="24028"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="1.69" steps="1070460"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.94" steps="23289"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="2.93" steps="1129241"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.93" steps="23013"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.11" steps="1129498"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.7" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.97" steps="23080"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.05" steps="1200060"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.95" steps="23013"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="2.86" steps="1129360"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.9" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.09" steps="23080"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.21" steps="1199922"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.10" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.09" steps="23330"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.32" steps="1230848"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.11" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.92" steps="23532"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.37" steps="1229973"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.12" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.95" steps="23722"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="3.48" steps="1244784"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.13" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.91" steps="23687"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.14" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.93" steps="23635"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.15" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.97" steps="23685"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.16" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.96" steps="23935"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.17" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.96" steps="24038"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.18" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.96" steps="24313"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.19" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.97" steps="24698"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.20" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.96" steps="24698"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.21" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.99" steps="24698"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.22" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.99" steps="24972"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.23" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.98" steps="24972"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.24" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.97" steps="24972"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.25" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.99" steps="24972"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.26" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.99" steps="24972"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.27" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(width (shor_circ_pre a bound n))" arg2="(2*n+n)">
   <goal name="shor_circ&#39;vc.27.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="kronecker_ket_l">
    <goal name="shor_circ&#39;vc.27.0.0" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="0.97" steps="25080"/></proof>
    </goal>
    <goal name="shor_circ&#39;vc.27.0.1" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="0.99" steps="25080"/></proof>
    </goal>
    <goal name="shor_circ&#39;vc.27.0.2" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.69"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    </goal>
    <goal name="shor_circ&#39;vc.27.0.3" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.36"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="shor_circ&#39;vc.27.1" expl="equality hypothesis" proved="true">
   <proof prover="6"><result status="valid" time="0.99" steps="25081"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ&#39;vc.28" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="shor_circ&#39;vc.28.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="scalar_eq_gen">
    <goal name="shor_circ&#39;vc.28.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="ket_sum_eq">
     <goal name="shor_circ&#39;vc.28.0.0.0" expl="apply premises" proved="true">
     <proof prover="6"><result status="valid" time="1.00" steps="25134"/></proof>
     </goal>
     <goal name="shor_circ&#39;vc.28.0.0.1" expl="apply premises" proved="true">
     <proof prover="6"><result status="valid" time="1.01" steps="25134"/></proof>
     </goal>
     <goal name="shor_circ&#39;vc.28.0.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="shor_circ&#39;vc.28.0.0.2.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="shor_circ&#39;vc.28.0.0.2.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_eq">
        <goal name="shor_circ&#39;vc.28.0.0.2.0.0.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="2.67"/></proof>
        <proof prover="6"><result status="timeout" time="5.00"/></proof>
        </goal>
        <goal name="shor_circ&#39;vc.28.0.0.2.0.0.1" expl="apply premises" proved="true">
        <proof prover="6"><result status="valid" time="1.05" steps="25187"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_circ&#39;vc.28.0.1" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="1.04" steps="25134"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ&#39;vc.29" expl="precondition">
  <transf name="rewrite" arg1="path_sem_scal">
   <goal name="shor_circ&#39;vc.29.0" expl="precondition">
   <transf name="apply" arg1="scalar_eq_gen">
    <goal name="shor_circ&#39;vc.29.0.0" expl="apply premises">
    <transf name="rewrite" arg1="path_sem_sum_">
     <goal name="shor_circ&#39;vc.29.0.0.0" expl="apply premises">
     <transf name="rewrite" arg1="ket_sum_scalar_rev_l">
      <goal name="shor_circ&#39;vc.29.0.0.0.0" expl="apply premises">
      <transf name="apply" arg1="ket_sum_eq_gen">
       <goal name="shor_circ&#39;vc.29.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="6"><result status="valid" time="1.04" steps="25187"/></proof>
       </goal>
       <goal name="shor_circ&#39;vc.29.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="6"><result status="valid" time="0.96" steps="25187"/></proof>
       </goal>
       <goal name="shor_circ&#39;vc.29.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="6"><result status="valid" time="0.97" steps="25187"/></proof>
       </goal>
       <goal name="shor_circ&#39;vc.29.0.0.0.0.3" expl="apply premises">
       <transf name="split_vc" >
        <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0" expl="apply premises">
        <transf name="compute_specified" >
         <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0" expl="apply premises">
         <transf name="rewrite" arg1="Ensures69">
          <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0" expl="apply premises">
          <transf name="rewrite" arg1="path_sem_rev_qft_unit">
           <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0" expl="apply premises">
           <transf name="rewrite" arg1="kronecker_scalar_distr">
            <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0" expl="apply premises">
            <transf name="apply" arg1="scalar_eq">
             <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises">
             <transf name="rewrite" arg1="kronecker_ket_sum_distr_l_rew">
              <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0" expl="apply premises">
              <transf name="apply" arg1="ket_sum_eq_gen">
               <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="3.06"/></proof>
               <proof prover="6"><result status="timeout" time="5.00"/></proof>
               </goal>
               <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="1" obsolete="true"><result status="valid" time="2.08"/></proof>
               <proof prover="6"><result status="valid" time="1.02" steps="25241"/></proof>
               </goal>
               <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="2.50"/></proof>
               <proof prover="6"><result status="timeout" time="5.00"/></proof>
               </goal>
               <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3" expl="apply premises">
               <transf name="split_vc" >
                <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0" expl="apply premises">
                <transf name="compute_specified" >
                 <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0" expl="apply premises">
                 <transf name="eliminate_if" >
                  <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0">
                  <transf name="split_vc" >
                   <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises">
                   <transf name="replace" arg1="(ket_to_int (bv_to_ket a1))" arg2="(bv_to_int a1)
">
                    <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises">
                    <transf name="apply" arg1="kronecker_eq">
                     <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises">
                     <proof prover="1"><result status="timeout" time="5.00"/></proof>
                     <proof prover="6"><result status="timeout" time="5.00"/></proof>
                     </goal>
                     <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0.0.1" expl="apply premises" proved="true">
                     <proof prover="6"><result status="valid" time="1.00" steps="25437"/></proof>
                     <proof prover="8" obsolete="true"><result status="valid" time="2.05" steps="1199828"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.0.1" expl="equality hypothesis">
                    <proof prover="1"><result status="timeout" time="5.00"/></proof>
                    <proof prover="6"><result status="timeout" time="5.00"/></proof>
                    <proof prover="8" obsolete="true"><result status="valid" time="3.44" steps="1271589"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="1"><result status="valid" time="2.26"/></proof>
                   <proof prover="6"><result status="timeout" time="5.00"/></proof>
                   <proof prover="8" obsolete="true"><result status="valid" time="3.38" steps="1303837"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="scalar_ket_l">
                 <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="2.32"/></proof>
                 <proof prover="6"><result status="timeout" time="5.00"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="2.55"/></proof>
              <proof prover="6"><result status="timeout" time="5.00"/></proof>
              </goal>
              <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
              <proof prover="1" obsolete="true"><result status="valid" time="2.46"/></proof>
              <proof prover="6"><result status="valid" time="0.92" steps="25241"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="1" obsolete="true"><result status="valid" time="2.54"/></proof>
           <proof prover="6"><result status="valid" time="0.96" steps="25241"/></proof>
           </goal>
           <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.46"/></proof>
           <proof prover="6"><result status="timeout" time="5.00"/></proof>
           </goal>
           <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.0.3" expl="rewrite premises">
           <proof prover="1"><result status="timeout" time="5.00"/></proof>
           <proof prover="6"><result status="timeout" time="5.00"/></proof>
           <proof prover="8" obsolete="true"><result status="valid" time="3.32" steps="1249450"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.51"/></proof>
          <proof prover="6"><result status="timeout" time="5.00"/></proof>
          </goal>
          <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.2" expl="rewrite premises" proved="true">
          <transf name="replace" proved="true" arg1="((3 * n) - width (qft_rev (2 * n)))" arg2="n
">
           <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.2.0" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="2.79"/></proof>
           <proof prover="6"><result status="timeout" time="5.00"/></proof>
           </goal>
           <goal name="shor_circ&#39;vc.29.0.0.0.0.3.0.0.2.1" expl="equality hypothesis" proved="true">
           <proof prover="6"><result status="valid" time="0.92" steps="25241"/></proof>
           <proof prover="8" obsolete="true"><result status="valid" time="1.90" steps="1177242"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="shor_circ&#39;vc.29.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="6"><result status="valid" time="0.93" steps="25187"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="shor_circ&#39;vc.29.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="6"><result status="valid" time="0.92" steps="25187"/></proof>
     </goal>
     <goal name="shor_circ&#39;vc.29.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="6"><result status="valid" time="0.93" steps="25187"/></proof>
     </goal>
     <goal name="shor_circ&#39;vc.29.0.0.3" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="shor_circ&#39;vc.29.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="shor_circ&#39;vc.29.0.0.3.0.0" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="(width (place (qft_rev (2 * n)) 0 (3 * n)))" arg2="(2*n+n)">
        <goal name="shor_circ&#39;vc.29.0.0.3.0.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_ket_l">
         <goal name="shor_circ&#39;vc.29.0.0.3.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="6"><result status="valid" time="0.95" steps="25241"/></proof>
         </goal>
         <goal name="shor_circ&#39;vc.29.0.0.3.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="6"><result status="valid" time="0.94" steps="25241"/></proof>
         </goal>
         <goal name="shor_circ&#39;vc.29.0.0.3.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="2.51"/></proof>
         <proof prover="6"><result status="timeout" time="5.00"/></proof>
         </goal>
         <goal name="shor_circ&#39;vc.29.0.0.3.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="2.61"/></proof>
         <proof prover="6"><result status="timeout" time="5.00"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="shor_circ&#39;vc.29.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="6"><result status="valid" time="1.06" steps="25241"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="shor_circ&#39;vc.29.0.1" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="1.08" steps="25187"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="shor_circ&#39;vc.29.1" expl="rewrite premises" proved="true">
   <transf name="replace" proved="true" arg1="(width (place (qft_rev (2 * n)) 0 (3 * n)))" arg2="(3*n)">
    <goal name="shor_circ&#39;vc.29.1.0" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="2.56"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    </goal>
    <goal name="shor_circ&#39;vc.29.1.1" expl="equality hypothesis" proved="true">
    <proof prover="6"><result status="valid" time="1.07" steps="25187"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="shor_circ&#39;vc.30" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.08" steps="25241"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.31" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.05" steps="25134"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.32" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.96" steps="25134"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.33" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.95" steps="25134"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.34" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.03" steps="25134"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.35" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.03" steps="25134"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.36" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.99" steps="25134"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.37" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.03" steps="25134"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.38" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.25" steps="25134"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.39" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.01" steps="25187"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.40" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.93" steps="25460"/></proof>
  </goal>
  <goal name="shor_circ&#39;vc.41" expl="postcondition">
  <transf name="eliminate_definition" >
   <goal name="shor_circ&#39;vc.41.0" expl="postcondition">
   <transf name="rewrite" arg1="result&#39;def">
    <goal name="shor_circ&#39;vc.41.0.0" expl="postcondition">
    <transf name="rewrite" arg1="Ensures22">
     <goal name="shor_circ&#39;vc.41.0.0.0" expl="postcondition">
     <transf name="rewrite" arg1="scalar_assoc">
      <goal name="shor_circ&#39;vc.41.0.0.0.0" expl="postcondition">
      <transf name="apply" arg1="scalar_eq_gen">
       <goal name="shor_circ&#39;vc.41.0.0.0.0.0" expl="apply premises">
       <transf name="apply" arg1="ket_sum_eq">
        <goal name="shor_circ&#39;vc.41.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="6"><result status="valid" time="1.35" steps="34676"/></proof>
        <proof prover="8" obsolete="true"><result status="valid" time="3.07" steps="1335037"/></proof>
        </goal>
        <goal name="shor_circ&#39;vc.41.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="6"><result status="valid" time="1.40" steps="34676"/></proof>
        <proof prover="8" obsolete="true"><result status="valid" time="1.92" steps="1261673"/></proof>
        </goal>
        <goal name="shor_circ&#39;vc.41.0.0.0.0.0.2" expl="apply premises">
        <transf name="split_vc" >
         <goal name="shor_circ&#39;vc.41.0.0.0.0.0.2.0" expl="apply premises">
         <transf name="compute_specified" >
          <goal name="shor_circ&#39;vc.41.0.0.0.0.0.2.0.0" expl="apply premises">
          <transf name="apply" arg1="ket_sum_eq">
           <goal name="shor_circ&#39;vc.41.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <proof prover="6"><result status="valid" time="1.39" steps="34748"/></proof>
           <proof prover="8" obsolete="true"><result status="valid" time="3.13" steps="1335049"/></proof>
           </goal>
           <goal name="shor_circ&#39;vc.41.0.0.0.0.0.2.0.0.1" expl="apply premises" proved="true">
           <proof prover="6"><result status="valid" time="1.40" steps="34748"/></proof>
           <proof prover="8" obsolete="true"><result status="valid" time="1.94" steps="1261685"/></proof>
           </goal>
           <goal name="shor_circ&#39;vc.41.0.0.0.0.0.2.0.0.2" expl="apply premises">
           <transf name="split_vc" >
            <goal name="shor_circ&#39;vc.41.0.0.0.0.0.2.0.0.2.0" expl="apply premises">
            <transf name="compute_specified" >
             <goal name="shor_circ&#39;vc.41.0.0.0.0.0.2.0.0.2.0.0" expl="apply premises">
             <transf name="eliminate_if" >
              <goal name="shor_circ&#39;vc.41.0.0.0.0.0.2.0.0.2.0.0.0">
              <transf name="split_vc" >
               <goal name="shor_circ&#39;vc.41.0.0.0.0.0.2.0.0.2.0.0.0.0" expl="apply premises">
               <proof prover="1"><result status="timeout" time="5.00"/></proof>
               <proof prover="6"><result status="timeout" time="5.00"/></proof>
               <proof prover="8" obsolete="true"><result status="valid" time="4.80" steps="1697856"/></proof>
               </goal>
               <goal name="shor_circ&#39;vc.41.0.0.0.0.0.2.0.0.2.0.0.0.1" expl="apply premises">
               <proof prover="1"><result status="timeout" time="5.00"/></proof>
               <proof prover="6"><result status="timeout" time="5.00"/></proof>
               <proof prover="8" obsolete="true"><result status="valid" time="3.42" steps="1378417"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="shor_circ&#39;vc.41.0.0.0.0.1" expl="apply premises">
       <proof prover="1"><result status="timeout" time="5.00"/></proof>
       <proof prover="6"><result status="timeout" time="5.00"/></proof>
       <proof prover="8" obsolete="true"><result status="valid" time="4.72" steps="1673906"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="k_bound&#39;vc" expl="VC for k_bound">
 <transf name="split_vc" >
  <goal name="k_bound&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="k_bound&#39;vc.0.0" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(forall  a b c . (a-. b) -. (c+.b) = (a-.c) -. (b+.b))">
    <goal name="k_bound&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="k_bound&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <transf name="replace" proved="true" arg1="((a -. b) -. (c +. b))" arg2="((a -. b -. c -. b))">
      <goal name="k_bound&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="replace" proved="true" arg1="((a -. b) -. c-.b )" arg2="(a -. c -. b -. b)">
       <goal name="k_bound&#39;vc.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="2.23"/></proof>
       <proof prover="6"><result status="timeout" time="5.00"/></proof>
       </goal>
       <goal name="k_bound&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="minus_elim">
        <goal name="k_bound&#39;vc.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="minus_elim">
         <goal name="k_bound&#39;vc.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
         <transf name="rewrite" proved="true" arg1="minus_elim">
          <goal name="k_bound&#39;vc.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
          <proof prover="1"><result status="valid" time="2.25"/></proof>
          <proof prover="6"><result status="timeout" time="5.00"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="k_bound&#39;vc.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="1"><result status="valid" time="2.18"/></proof>
      <proof prover="6"><result status="timeout" time="5.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="k_bound&#39;vc.0.0.1" expl="precondition" proved="true">
    <proof prover="6"><result status="valid" time="0.88" steps="22920"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.18"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.90" steps="22990"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.97"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.91" steps="23024"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.97" steps="23041"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.95" steps="23295"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.90"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.35"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.9" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(k &lt;= (div1 (power 2 (2 * n)) (multi_order a bound) ))">
   <goal name="k_bound&#39;vc.9.0" expl="asserted formula" proved="true">
   <proof prover="6"><result status="valid" time="0.94" steps="23528"/></proof>
   </goal>
   <goal name="k_bound&#39;vc.9.1" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="i_to_c_mult">
    <goal name="k_bound&#39;vc.9.1.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c_add">
     <goal name="k_bound&#39;vc.9.1.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="compat_i_to_c_infeq">
      <goal name="k_bound&#39;vc.9.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="2.29"/></proof>
      <proof prover="6"><result status="timeout" time="5.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.10" expl="precondition">
  <transf name="apply" arg1="i_to_c_strict_pos">
   <goal name="k_bound&#39;vc.10.0" expl="apply premises">
   <transf name="assert" arg1="(forall a b. 0&lt; a -&gt; 0&lt;= b -&gt; 0&lt; a+b)">
    <goal name="k_bound&#39;vc.10.0.0" expl="asserted formula" proved="true">
    <proof prover="6"><result status="valid" time="0.90" steps="23595"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.10.0.1" expl="apply premises">
    <transf name="apply" arg1="h">
     <goal name="k_bound&#39;vc.10.0.1.0" expl="apply premises">
     <transf name="assert" arg1="(forall a b. 0&lt; a -&gt; 0&lt; b -&gt; 0&lt; a*b)">
      <goal name="k_bound&#39;vc.10.0.1.0.0" expl="asserted formula" proved="true">
      <proof prover="6"><result status="valid" time="0.89" steps="23595"/></proof>
      </goal>
      <goal name="k_bound&#39;vc.10.0.1.0.1" expl="apply premises">
      <transf name="apply" arg1="h">
       <goal name="k_bound&#39;vc.10.0.1.0.1.0" expl="apply premises">
       <transf name="apply" arg1="positive_div">
        <goal name="k_bound&#39;vc.10.0.1.0.1.0.0" expl="apply premises">
        <transf name="split_vc" >
         <goal name="k_bound&#39;vc.10.0.1.0.1.0.0.0" proved="true">
         <proof prover="6"><result status="valid" time="0.96" steps="23584"/></proof>
         </goal>
         <goal name="k_bound&#39;vc.10.0.1.0.1.0.0.1">
         <proof prover="1"><result status="timeout" time="5.00"/></proof>
         <proof prover="2" obsolete="true"><result status="valid" time="0.66" steps="3537962"/></proof>
         <proof prover="6"><result status="timeout" time="5.00"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="k_bound&#39;vc.10.0.1.0.1.1" expl="apply premises" proved="true">
       <proof prover="6"><result status="valid" time="0.96" steps="23584"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="k_bound&#39;vc.10.0.1.1" expl="apply premises" proved="true">
     <proof prover="6"><result status="valid" time="0.93" steps="23584"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.11" expl="precondition">
  <transf name="rewrite" arg1="pow_inv_2&#39;def">
   <goal name="k_bound&#39;vc.11.0" expl="precondition">
   <transf name="apply" arg1="inv_order_complex">
    <goal name="k_bound&#39;vc.11.0.0" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="0.99" steps="23640"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.11.0.1" expl="apply premises">
    <proof prover="1"><result status="timeout" time="5.00"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.62" steps="3523498"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.11.0.2" expl="apply premises">
    <proof prover="1"><result status="timeout" time="5.00"/></proof>
    <proof prover="2" obsolete="true"><result status="valid" time="0.66" steps="3530754"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="k_bound&#39;vc.11.1" expl="rewrite premises" proved="true">
   <proof prover="6"><result status="valid" time="0.84" steps="23640"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.12" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.96" steps="23609"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.13" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.98" steps="23609"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.30"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.30"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.37"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.17" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.00" steps="23725"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.84" steps="23668"/></proof>
  </goal>
  <goal name="k_bound&#39;vc.19" expl="postcondition">
  <transf name="instantiate" arg1="compat_order_mult" arg2="(((i_to_c k *. i_to_c (multi_order a bound)) +. i_to_c i)
   *. pow_inv_2 (2 * n)),c_one,( i_to_c ( power 2 (2 * n)))">
   <goal name="k_bound&#39;vc.19.0" expl="postcondition">
   <proof prover="1"><result status="timeout" time="5.00"/></proof>
   <proof prover="6"><result status="timeout" time="5.00"/></proof>
   <proof prover="8" obsolete="true"><result status="valid" time="4.78" steps="1506430"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.20" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="c_one" arg2="( i_to_c (power 2 (2 * n)) *. pow_inv_2 (2*n))">
   <goal name="k_bound&#39;vc.20.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="compat_order_mult">
    <goal name="k_bound&#39;vc.20.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c_mult" arg2="in" arg3="Ensures">
     <goal name="k_bound&#39;vc.20.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_add" arg2="in" arg3="Ensures">
      <goal name="k_bound&#39;vc.20.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="6"><result status="valid" time="0.97" steps="23727"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="k_bound&#39;vc.20.0.1" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.40"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.20.0.2" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.42"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.20.0.3" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="0.97" steps="23726"/></proof>
    </goal>
    <goal name="k_bound&#39;vc.20.0.4" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.41"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="k_bound&#39;vc.20.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="2.33"/></proof>
   <proof prover="6"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="k_bound&#39;vc.21" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="i_to_c_mult" arg2="in" arg3="Ensures1">
   <goal name="k_bound&#39;vc.21.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="i_to_c_add" arg2="in" arg3="Ensures1">
    <goal name="k_bound&#39;vc.21.0.0" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.80" steps="23785"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="best_appr_&#39;vc" expl="VC for best_appr_">
 <transf name="split_vc" >
  <goal name="best_appr_&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.98" steps="22909"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="best_appr_&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="2.05"/></proof>
   <proof prover="6"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="best_appr_&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.79" steps="22909"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="best_appr_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.13"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.78" steps="23293"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.23"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.22"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.01" steps="23419"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.24"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.14"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.9" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.00" steps="23419"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.21"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.09"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.12" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.83" steps="23616"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.13" expl="precondition">
  <proof prover="1"><result status="timeout" time="5.00"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  <proof prover="8" obsolete="true"><result status="valid" time="4.04" steps="1605559"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.39"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.15" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.02" steps="24015"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.37"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.35"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.18" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="23947"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.29"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.30"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.21" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.84" steps="23947"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.22" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.40"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.47"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.84" steps="23947"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.81" steps="24015"/></proof>
  </goal>
  <goal name="best_appr_&#39;vc.26" expl="postcondition">
  <transf name="replace" arg1="(i_to_c k -. (pow_inv_2 (2 * n) *. i_to_c (result * multi_order a bound)))" arg2="(((i_to_c k /. i_to_c (multi_order a bound))
   -. (i_to_c result *. pow_inv_2 (2 * n))) *. i_to_c (multi_order a bound))">
   <goal name="best_appr_&#39;vc.26.0" expl="postcondition">
   <transf name="apply" arg1="transitive_infeq" arg2="with" arg3="(  pow_inv_2 ((2 * n) + 1) *.( i_to_c (multi_order a bound)) )">
    <goal name="best_appr_&#39;vc.26.0.0" expl="apply premises">
    <transf name="rewrite" arg1="mult_modulus">
     <goal name="best_appr_&#39;vc.26.0.0.0" expl="apply premises">
     <transf name="apply" arg1="compat_order_mult_both">
      <goal name="best_appr_&#39;vc.26.0.0.0.0" expl="apply premises">
      <transf name="split_vc" >
       <goal name="best_appr_&#39;vc.26.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.52"/></proof>
       <proof prover="6"><result status="timeout" time="5.00"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.26.0.0.0.0.1" expl="apply premises">
       <proof prover="1"><result status="timeout" time="5.00"/></proof>
       <proof prover="6"><result status="timeout" time="5.00"/></proof>
       <proof prover="8" obsolete="true"><result status="valid" time="4.03" steps="1597672"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_&#39;vc.26.0.0.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="best_appr_&#39;vc.26.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.48"/></proof>
       <proof prover="6"><result status="timeout" time="5.00"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.26.0.0.0.1.1" expl="apply premises" proved="true">
       <proof prover="6"><result status="valid" time="0.85" steps="24086"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="best_appr_&#39;vc.26.0.1" expl="apply premises">
    <transf name="apply" arg1="compat_order_mult_rev" arg2="with" arg3="(i_to_c (power 2 (2*n+1) * b))">
     <goal name="best_appr_&#39;vc.26.0.1.0" expl="apply premises">
     <proof prover="1"><result status="timeout" time="5.00"/></proof>
     <proof prover="6"><result status="timeout" time="5.00"/></proof>
     <proof prover="8" obsolete="true"><result status="valid" time="4.08" steps="1609327"/></proof>
     </goal>
     <goal name="best_appr_&#39;vc.26.0.1.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="3.73"/></proof>
     <proof prover="6"><result status="timeout" time="5.00"/></proof>
     </goal>
     <goal name="best_appr_&#39;vc.26.0.1.2" expl="apply premises">
     <proof prover="1"><result status="timeout" time="5.00"/></proof>
     <proof prover="6"><result status="timeout" time="5.00"/></proof>
     <proof prover="8" obsolete="true"><result status="valid" time="2.41" steps="1155123"/></proof>
     </goal>
     <goal name="best_appr_&#39;vc.26.0.1.3" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
      <goal name="best_appr_&#39;vc.26.0.1.3.0" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(forall a b. c_zero&lt;. a -&gt; c_zero&lt;.b -&gt; c_zero&lt;. a*.b)">
       <goal name="best_appr_&#39;vc.26.0.1.3.0.0" expl="asserted formula" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="best_appr_&#39;vc.26.0.1.3.0.0.0" expl="asserted formula" proved="true">
        <proof prover="1"><result status="valid" time="2.48"/></proof>
        <proof prover="6"><result status="timeout" time="5.00"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_&#39;vc.26.0.1.3.0.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="h">
        <goal name="best_appr_&#39;vc.26.0.1.3.0.1.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="2.58"/></proof>
        <proof prover="6"><result status="timeout" time="5.00"/></proof>
        </goal>
        <goal name="best_appr_&#39;vc.26.0.1.3.0.1.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="2.48"/></proof>
        <proof prover="6"><result status="timeout" time="5.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="best_appr_&#39;vc.26.0.1.4" expl="apply premises">
     <transf name="replace" arg1="((c_one /. (ttwo *. i_to_c b)) *. i_to_c (power 2 ((2 * n) + 1) * b))" arg2="(i_to_c (power 2 (2 * n)))">
      <goal name="best_appr_&#39;vc.26.0.1.4.0" expl="apply premises">
      <transf name="replace" arg1="((pow_inv_2 ((2 * n) + 1) *. i_to_c (multi_order a bound))
   *. i_to_c (power 2 ((2 * n) + 1) * b))" arg2="(i_to_c (b * multi_order a bound))">
       <goal name="best_appr_&#39;vc.26.0.1.4.0.0" expl="apply premises">
       <proof prover="1"><result status="timeout" time="5.00"/></proof>
       <proof prover="2" obsolete="true"><result status="valid" time="0.53" steps="3531636"/></proof>
       <proof prover="6"><result status="timeout" time="5.00"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.26.0.1.4.0.1" expl="equality hypothesis">
       <transf name="rewrite" arg1="i_to_c_mult_rev">
        <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0" expl="equality hypothesis">
        <transf name="rewrite" arg1="i_to_c_mult_rev">
         <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0" expl="equality hypothesis">
         <transf name="assert" arg1="(forall a b c d. a*. c = c_one -&gt; (a*.b) *. (c*.d) = b*.d)">
          <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.0" expl="asserted formula" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="replace" proved="true" arg1="((a *. b) *. (c *. d))" arg2="((a *. c) *. (b *. d))">
            <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
            <proof prover="1"><result status="valid" time="2.48"/></proof>
            <proof prover="6"><result status="timeout" time="5.00"/></proof>
            </goal>
            <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="6"><result status="valid" time="0.86" steps="24157"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.1" expl="equality hypothesis">
          <transf name="rewrite" arg1="h">
           <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
           <proof prover="6"><result status="valid" time="0.90" steps="24086"/></proof>
           </goal>
           <goal name="best_appr_&#39;vc.26.0.1.4.0.1.0.0.1.1" expl="rewrite premises">
           <proof prover="1"><result status="timeout" time="5.00"/></proof>
           <proof prover="6"><result status="timeout" time="5.00"/></proof>
           <proof prover="8" obsolete="true"><result status="valid" time="3.87" steps="1576452"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_&#39;vc.26.0.1.4.1" expl="equality hypothesis">
      <transf name="rewrite" arg1="power_sum">
       <goal name="best_appr_&#39;vc.26.0.1.4.1.0" expl="equality hypothesis">
       <transf name="rewrite" arg1="i_to_c_mult_rev">
        <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0" expl="equality hypothesis">
        <transf name="rewrite" arg1="i_to_c_mult_rev">
         <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0" expl="equality hypothesis">
         <transf name="replace" arg1="(i_to_c (power 2 1))" arg2="ttwo">
          <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0" expl="equality hypothesis">
          <transf name="assert" arg1="(forall a b c. c_zero &lt;&gt; (a*.b) -&gt;(c_one /.(a*.b))*. (c*.a*.b) = c)">
           <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0.0" expl="asserted formula">
           <transf name="split_vc" >
            <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0.0.0" expl="asserted formula">
            <transf name="replace" arg1="((c *. a) *. b)" arg2="((a *. b) *. c)">
             <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0.0.0.0" expl="asserted formula">
             <transf name="rewrite" arg1="mult_assoc_rev">
              <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0.0.0.0.0" expl="asserted formula">
              <proof prover="1"><result status="timeout" time="5.00"/></proof>
              <proof prover="6"><result status="timeout" time="5.00"/></proof>
              <proof prover="8" obsolete="true"><result status="valid" time="4.34" steps="1624242"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="6"><result status="valid" time="0.86" steps="24111"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.0.1" expl="equality hypothesis">
           <proof prover="1"><result status="timeout" time="5.00"/></proof>
           <proof prover="6"><result status="timeout" time="5.00"/></proof>
           <proof prover="8" obsolete="true"><result status="valid" time="2.87" steps="1235705"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="best_appr_&#39;vc.26.0.1.4.1.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="6"><result status="valid" time="0.83" steps="24086"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_&#39;vc.26.0.1.4.1.1" expl="rewrite premises" proved="true">
       <proof prover="6"><result status="valid" time="1.05" steps="24086"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.26.0.1.4.1.2" expl="rewrite premises" proved="true">
       <proof prover="6"><result status="valid" time="1.04" steps="24086"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_&#39;vc.26.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(((i_to_c k /. i_to_c (multi_order a bound))
      -. (i_to_c result *. pow_inv_2 (2 * n)))
     *. i_to_c (multi_order a bound))" arg2="(i_to_c (multi_order a bound)*.((i_to_c k /. i_to_c (multi_order a bound))
      -. (i_to_c result *. pow_inv_2 (2 * n)))
     )">
    <goal name="best_appr_&#39;vc.26.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="mult_distr_minus">
     <goal name="best_appr_&#39;vc.26.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b c d. a= c -&gt; b = d -&gt; a-.b = c-.d)">
      <goal name="best_appr_&#39;vc.26.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="6"><result status="valid" time="0.85" steps="24245"/></proof>
      </goal>
      <goal name="best_appr_&#39;vc.26.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="h">
       <goal name="best_appr_&#39;vc.26.1.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.50"/></proof>
       <proof prover="6"><result status="timeout" time="5.00"/></proof>
       </goal>
       <goal name="best_appr_&#39;vc.26.1.0.0.1.1" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
        <goal name="best_appr_&#39;vc.26.1.0.0.1.1.0" expl="apply premises" proved="true">
        <proof prover="6"><result status="valid" time="0.86" steps="24086"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="best_appr_&#39;vc.26.1.1" expl="equality hypothesis" proved="true">
    <proof prover="6"><result status="valid" time="0.85" steps="24086"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="best_appr_orders&#39;vc" expl="VC for best_appr_orders">
 <transf name="eliminate_let" >
  <goal name="best_appr_orders&#39;vc.0" expl="VC for best_appr_orders">
  <transf name="split_vc" >
   <goal name="best_appr_orders&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="2.12"/></proof>
   <proof prover="6"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="1.02" steps="23138"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.2" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.2.0" expl="precondition" proved="true">
    <proof prover="6"><result status="valid" time="0.86" steps="23138"/></proof>
    </goal>
    <goal name="best_appr_orders&#39;vc.0.2.1" expl="precondition" proved="true">
    <proof prover="6"><result status="valid" time="0.84" steps="23138"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.3" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.3.0" expl="precondition" proved="true">
    <proof prover="6"><result status="valid" time="0.84" steps="23138"/></proof>
    </goal>
    <goal name="best_appr_orders&#39;vc.0.3.1" expl="precondition" proved="true">
    <proof prover="6"><result status="valid" time="0.84" steps="23138"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="1.01" steps="23138"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.5" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.5.0" expl="precondition" proved="true">
    <proof prover="6"><result status="valid" time="0.84" steps="23138"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.6" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.87" steps="23138"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.7" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.7.0" expl="precondition" proved="true">
    <proof prover="6"><result status="valid" time="0.98" steps="23263"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.8" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.8.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="2.12"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    </goal>
    <goal name="best_appr_orders&#39;vc.0.8.1" expl="precondition" proved="true">
    <proof prover="6"><result status="valid" time="1.01" steps="23263"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.9" expl="precondition">
   <transf name="split_vc" >
    <goal name="best_appr_orders&#39;vc.0.9.0" expl="precondition">
    <proof prover="1"><result status="timeout" time="5.00"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    <proof prover="8" obsolete="true"><result status="valid" time="2.44" steps="1107091"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.10" expl="precondition">
   <proof prover="1"><result status="timeout" time="5.00"/></proof>
   <proof prover="6"><result status="timeout" time="5.00"/></proof>
   <proof prover="8" obsolete="true"><result status="valid" time="2.61" steps="1128685"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.11" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="1.03" steps="23586"/></proof>
   <proof prover="8" obsolete="true"><result status="valid" time="1.20" steps="1008178"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.12" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="2.26"/></proof>
   <proof prover="6"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.13" expl="precondition">
   <transf name="split_vc" >
    <goal name="best_appr_orders&#39;vc.0.13.0" expl="precondition">
    <transf name="eliminate_definition" >
     <goal name="best_appr_orders&#39;vc.0.13.0.0" expl="precondition">
     <transf name="apply" arg1="div_pos">
      <goal name="best_appr_orders&#39;vc.0.13.0.0.0" expl="apply premises">
      <transf name="rewrite" arg1="i_to_c_mult_rev">
       <goal name="best_appr_orders&#39;vc.0.13.0.0.0.0" expl="apply premises">
       <transf name="apply" arg1="mult_pos">
        <goal name="best_appr_orders&#39;vc.0.13.0.0.0.0.0" expl="apply premises">
        <proof prover="1"><result status="timeout" time="5.00"/></proof>
        <proof prover="6"><result status="timeout" time="5.00"/></proof>
        <proof prover="8" obsolete="true"><result status="valid" time="3.59" steps="1291059"/></proof>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.13.0.0.0.0.1" expl="apply premises">
        <proof prover="1"><result status="timeout" time="5.00"/></proof>
        <proof prover="6"><result status="timeout" time="5.00"/></proof>
        <proof prover="8" obsolete="true"><result status="valid" time="3.60" steps="1293972"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_orders&#39;vc.0.13.0.0.1" expl="apply premises">
      <proof prover="1"><result status="timeout" time="5.00"/></proof>
      <proof prover="6"><result status="timeout" time="5.00"/></proof>
      <proof prover="8" obsolete="true"><result status="valid" time="3.58" steps="1290339"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.14" expl="precondition">
   <transf name="split_vc" >
    <goal name="best_appr_orders&#39;vc.0.14.0" expl="precondition">
    <proof prover="1"><result status="timeout" time="5.00"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    <proof prover="8" obsolete="true"><result status="valid" time="3.84" steps="1406200"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.15" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="best_appr_orders&#39;vc.0.15.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="2.13"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.16" expl="precondition">
   <transf name="split_vc" >
    <goal name="best_appr_orders&#39;vc.0.16.0" expl="precondition">
    <transf name="apply" arg1="compat_order_mult_rev" arg2="with" arg3="(pow_inv_2 (2*n))">
     <goal name="best_appr_orders&#39;vc.0.16.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="2.08"/></proof>
     <proof prover="6"><result status="timeout" time="5.00"/></proof>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.16.0.1" expl="apply premises" proved="true">
     <proof prover="6"><result status="valid" time="0.87" steps="23845"/></proof>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.16.0.2" expl="apply premises">
     <proof prover="1"><result status="timeout" time="5.00"/></proof>
     <proof prover="6"><result status="timeout" time="5.00"/></proof>
     <proof prover="8" obsolete="true"><result status="valid" time="3.67" steps="1416716"/></proof>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.16.0.3" expl="apply premises">
     <proof prover="1"><result status="timeout" time="5.00"/></proof>
     <proof prover="6"><result status="timeout" time="5.00"/></proof>
     <proof prover="8" obsolete="true"><result status="valid" time="3.67" steps="1418223"/></proof>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.16.0.4" expl="apply premises">
     <transf name="replace" arg1="(modulus
   ((i_to_c (k * power 2 (2 * n)) /. i_to_c (multi_order a bound))
    -&#39;&#39; i_to_c (best_appr_ k a bound n))
   *. pow_inv_2 (2 * n))" arg2="(modulus
  ((i_to_c k /. i_to_c (multi_order a bound))
   -. (pow_inv_2 (2 * n) *. i_to_c (best_appr_ k a bound n))))">
      <goal name="best_appr_orders&#39;vc.0.16.0.4.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="((c_one /. ttwo) *. pow_inv_2 (2 * n))" arg2="( pow_inv_2 (2 * n +1))">
       <goal name="best_appr_orders&#39;vc.0.16.0.4.0.0" expl="apply premises" proved="true">
       <proof prover="6"><result status="valid" time="0.90" steps="23845"/></proof>
       </goal>
       <goal name="best_appr_orders&#39;vc.0.16.0.4.0.1" expl="equality hypothesis" proved="true">
       <proof prover="1"><result status="valid" time="2.49"/></proof>
       <proof prover="6"><result status="timeout" time="5.00"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_orders&#39;vc.0.16.0.4.1" expl="equality hypothesis">
      <transf name="replace" arg1="(modulus
   ((i_to_c (k * power 2 (2 * n)) /. i_to_c (multi_order a bound))
    -&#39;&#39; i_to_c (best_appr_ k a bound n))
   *. pow_inv_2 (2 * n))" arg2="(modulus
   (((i_to_c (k * power 2 (2 * n)) /. i_to_c (multi_order a bound))
    -&#39;&#39; i_to_c (best_appr_ k a bound n)
 )  *. pow_inv_2 (2 * n)))">
       <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0" expl="equality hypothesis">
       <transf name="assert" arg1="(forall a b c. (a-&#39;&#39;b) *. c = a*. c -. b*.c)">
        <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.0" expl="asserted formula">
        <transf name="eliminate_definition" >
         <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.0.0" expl="asserted formula">
         <transf name="rewrite" arg1="(-.)&#39;def">
          <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.0.0.0" expl="asserted formula">
          <proof prover="1"><result status="timeout" time="5.00"/></proof>
          <proof prover="6"><result status="timeout" time="5.00"/></proof>
          <proof prover="8" obsolete="true"><result status="valid" time="3.75" steps="1322661"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1" expl="equality hypothesis">
        <transf name="rewrite" arg1="h">
         <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0" expl="equality hypothesis">
         <transf name="assert" arg1="(forall a b . a = b -&gt; modulus a = modulus b)">
          <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.0" expl="asserted formula" proved="true">
          <proof prover="6"><result status="valid" time="0.89" steps="23932"/></proof>
          </goal>
          <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1" expl="equality hypothesis">
          <transf name="apply" arg1="h">
           <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0" expl="apply premises">
           <transf name="assert" arg1="(forall a b c d. a = b -&gt; c = d -&gt; a-.c = b-.d)">
            <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.0" expl="asserted formula" proved="true">
            <proof prover="6"><result status="valid" time="0.85" steps="23997"/></proof>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1" expl="apply premises">
            <transf name="apply" arg1="h">
             <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0" expl="apply premises">
             <transf name="rewrite" arg1="i_to_c_mult_rev">
              <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0" expl="apply premises">
              <transf name="assert" arg1="(forall a b c d. b*.d = c_one -&gt;  c_zero &lt;&gt; c-&gt; ((a*.b)/.c)*.d = a/.c)">
               <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.0" expl="asserted formula" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.0.0" expl="asserted formula" proved="true">
                <transf name="replace" proved="true" arg1="(((a *. b) /. c) *. d)" arg2="(((a *. (b*.d)) /. c) )">
                 <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
                 <proof prover="1"><result status="valid" time="2.59"/></proof>
                 <proof prover="6"><result status="timeout" time="5.00"/></proof>
                 </goal>
                 <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="1"><result status="valid" time="2.34"/></proof>
                 <proof prover="6"><result status="timeout" time="5.00"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.1" expl="apply premises">
               <transf name="apply" arg1="h">
                <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.1.0" expl="apply premises">
                <proof prover="1"><result status="timeout" time="5.00"/></proof>
                <proof prover="6"><result status="timeout" time="5.00"/></proof>
                <proof prover="8" obsolete="true"><result status="valid" time="3.77" steps="1422994"/></proof>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.0.0.1.1" expl="apply premises">
                <proof prover="1"><result status="timeout" time="5.00"/></proof>
                <proof prover="6"><result status="timeout" time="5.00"/></proof>
                <proof prover="8" obsolete="true"><result status="valid" time="2.42" steps="1112292"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="best_appr_orders&#39;vc.0.16.0.4.1.0.1.0.1.0.1.1" expl="apply premises" proved="true">
             <proof prover="6"><result status="valid" time="0.96" steps="23845"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_orders&#39;vc.0.16.0.4.1.1" expl="equality hypothesis">
       <transf name="rewrite" arg1="mult_modulus">
        <goal name="best_appr_orders&#39;vc.0.16.0.4.1.1.0" expl="equality hypothesis">
        <proof prover="1"><result status="timeout" time="5.00"/></proof>
        <proof prover="6"><result status="timeout" time="5.00"/></proof>
        <proof prover="8" obsolete="true"><result status="valid" time="3.75" steps="1421160"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.17" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.95" steps="23650"/></proof>
   </goal>
   <goal name="best_appr_orders&#39;vc.0.18" expl="postcondition">
   <transf name="split_vc" >
    <goal name="best_appr_orders&#39;vc.0.18.0" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.96" steps="23650"/></proof>
    </goal>
    <goal name="best_appr_orders&#39;vc.0.18.1" expl="postcondition">
    <transf name="case" arg1="(best_appr_ k a bound n = power 2 (2 * n))">
     <goal name="best_appr_orders&#39;vc.0.18.1.0" expl="true case (postcondition)">
     <transf name="assert" arg1="(c_one -. pow_inv_2 (2*n+1) &lt;=. (i_to_c k /. i_to_c (multi_order a bound)) &lt;=. c_one +. pow_inv_2 (2*n+1))">
      <goal name="best_appr_orders&#39;vc.0.18.1.0.0" expl="asserted formula">
      <transf name="assert" arg1="(forall a b. real_ a -&gt; c_one &lt;=. b+. a /\ b-.a &lt;=. c_one -&gt; c_one -. a &lt;=. b &lt;=. c_one +.a)">
       <goal name="best_appr_orders&#39;vc.0.18.1.0.0.0" expl="asserted formula">
       <transf name="split_vc" >
        <goal name="best_appr_orders&#39;vc.0.18.1.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="1"><result status="valid" time="2.36"/></proof>
        <proof prover="6"><result status="timeout" time="5.00"/></proof>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.18.1.0.0.0.1" expl="asserted formula">
        <proof prover="1"><result status="timeout" time="5.00"/></proof>
        <proof prover="6"><result status="timeout" time="5.00"/></proof>
        <proof prover="8" obsolete="true"><result status="valid" time="4.52" steps="1475196"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1" expl="asserted formula">
       <transf name="apply" arg1="h1">
        <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.0" expl="apply premises">
        <proof prover="1"><result status="timeout" time="5.00"/></proof>
        <proof prover="6"><result status="timeout" time="5.00"/></proof>
        <proof prover="8" obsolete="true"><result status="valid" time="2.49" steps="1107846"/></proof>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1" expl="apply premises">
        <transf name="replace" arg1="c_one" arg2="(i_to_c (power 2 (2*n)) *. pow_inv_2 (2*n))">
         <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0" expl="apply premises">
         <transf name="replace" arg1="(pow_inv_2 ((2 * n) + 1))" arg2="(pow_inv_2 (2*n)  *. (c_one/.ttwo))">
          <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0" expl="apply premises">
          <transf name="replace" arg1="((i_to_c k /. i_to_c (multi_order a bound)) +. (pow_inv_2 ((2 * n) ) *. (c_one /. ttwo)))" arg2="(((i_to_c (k * power 2 (2*n)) /. i_to_c (multi_order a bound)) +. (c_one/.ttwo))*.pow_inv_2 (2*n))">
           <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0" expl="apply premises">
           <transf name="replace" arg1="((i_to_c k /. i_to_c (multi_order a bound)) -. (pow_inv_2 ((2 * n) ) *. (c_one /. ttwo)))" arg2="(((i_to_c (k * power 2 (2*n)) /. i_to_c (multi_order a bound)) -. (c_one/.ttwo))*.pow_inv_2 (2*n))">
            <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.0" expl="apply premises">
            <proof prover="1"><result status="timeout" time="5.00"/></proof>
            <proof prover="6"><result status="timeout" time="5.00"/></proof>
            <proof prover="8" obsolete="true"><result status="valid" time="3.79" steps="1421126"/></proof>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1" expl="equality hypothesis">
            <transf name="assert" arg1="(forall a aa b c.a*.c = aa -&gt; aa -. c*.b = (a-. b) *. c )">
             <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.0" expl="asserted formula" proved="true">
             <proof prover="1"><result status="valid" time="2.11"/></proof>
             <proof prover="6"><result status="timeout" time="5.00"/></proof>
             </goal>
             <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1" expl="equality hypothesis">
             <transf name="apply" arg1="h">
              <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0" expl="apply premises">
              <transf name="rewrite" arg1="i_to_c_mult_rev">
               <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0" expl="apply premises">
               <transf name="replace" arg1="(i_to_c k *. i_to_c (power 2 (2 * n)))" arg2="(i_to_c (power 2 (2 * n))*. i_to_c k)">
                <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0" expl="apply premises">
                <transf name="rewrite" arg1="assoc_mult_div_rev">
                 <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.0" expl="apply premises">
                 <transf name="assert" arg1="(forall a b c d. a*. d = c_one -&gt; c&lt;&gt; c_zero -&gt; (a*. (b/.c))*. d = b/.c)">
                  <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.0.0" expl="asserted formula">
                  <transf name="split_vc" >
                   <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.0.0.0" expl="asserted formula">
                   <proof prover="1"><result status="timeout" time="5.00"/></proof>
                   <proof prover="6"><result status="timeout" time="5.00"/></proof>
                   <proof prover="8" obsolete="true"><result status="valid" time="4.16" steps="1456234"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.0.1" expl="apply premises">
                  <transf name="apply" arg1="h">
                   <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.0.1.0" expl="apply premises">
                   <proof prover="1"><result status="timeout" time="5.00"/></proof>
                   <proof prover="6"><result status="timeout" time="5.00"/></proof>
                   <proof prover="8" obsolete="true"><result status="valid" time="3.84" steps="1404764"/></proof>
                   </goal>
                   <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.0.1.1" expl="apply premises">
                   <proof prover="1"><result status="timeout" time="5.00"/></proof>
                   <proof prover="6"><result status="timeout" time="5.00"/></proof>
                   <proof prover="8" obsolete="true"><result status="valid" time="2.60" steps="1107955"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.0.1" expl="rewrite premises">
                 <proof prover="1"><result status="timeout" time="5.00"/></proof>
                 <proof prover="6"><result status="timeout" time="5.00"/></proof>
                 <proof prover="8" obsolete="true"><result status="valid" time="2.47" steps="1107560"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="6"><result status="valid" time="1.01" steps="23740"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1" expl="equality hypothesis">
           <transf name="assert" arg1="(forall a aa b c.a*.c = aa -&gt; aa +. c*.b = (a+. b) *. c )">
            <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.0" expl="asserted formula" proved="true">
            <proof prover="1"><result status="valid" time="2.32"/></proof>
            <proof prover="6"><result status="timeout" time="5.00"/></proof>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1" expl="equality hypothesis">
            <transf name="apply" arg1="h">
             <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0" expl="apply premises">
             <transf name="rewrite" arg1="i_to_c_mult_rev">
              <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0" expl="apply premises">
              <transf name="replace" arg1="(i_to_c k *. i_to_c (power 2 (2 * n)))" arg2="(i_to_c (power 2 (2 * n))*. i_to_c k)
">
               <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0" expl="apply premises">
               <transf name="rewrite" arg1="assoc_mult_div_rev">
                <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.0" expl="apply premises">
                <transf name="assert" arg1="(forall a b c d. a*. d = c_one -&gt; c&lt;&gt; c_zero -&gt; (a*. (b/.c))*. d = b/.c)">
                 <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.0.0" expl="asserted formula">
                 <transf name="split_vc" >
                  <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.0.0.0" expl="asserted formula">
                  <proof prover="1"><result status="timeout" time="5.00"/></proof>
                  <proof prover="6"><result status="timeout" time="5.00"/></proof>
                  <proof prover="8" obsolete="true"><result status="valid" time="4.26" steps="1456582"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.0.1" expl="apply premises">
                 <transf name="apply" arg1="h">
                  <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.0.1.0" expl="apply premises">
                  <proof prover="1"><result status="timeout" time="5.00"/></proof>
                  <proof prover="6"><result status="timeout" time="5.00"/></proof>
                  <proof prover="8" obsolete="true"><result status="valid" time="3.65" steps="1404723"/></proof>
                  </goal>
                  <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.0.1.1" expl="apply premises">
                  <proof prover="1"><result status="timeout" time="5.00"/></proof>
                  <proof prover="6"><result status="timeout" time="5.00"/></proof>
                  <proof prover="8" obsolete="true"><result status="valid" time="2.48" steps="1107955"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.0.1" expl="rewrite premises">
                <proof prover="1"><result status="timeout" time="5.00"/></proof>
                <proof prover="6"><result status="timeout" time="5.00"/></proof>
                <proof prover="8" obsolete="true"><result status="valid" time="2.50" steps="1107560"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="6"><result status="valid" time="0.85" steps="23740"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
          <proof prover="1"><result status="valid" time="1.94"/></proof>
          <proof prover="6"><result status="timeout" time="5.00"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="best_appr_orders&#39;vc.0.18.1.0.0.1.1.1" expl="equality hypothesis">
         <proof prover="1"><result status="timeout" time="5.00"/></proof>
         <proof prover="6"><result status="timeout" time="5.00"/></proof>
         <proof prover="8" obsolete="true"><result status="valid" time="3.74" steps="1403188"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="best_appr_orders&#39;vc.0.18.1.0.1" expl="true case (postcondition)">
      <transf name="case" arg1="(k &lt;&gt; multi_order a bound)">
       <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0" expl="true case (postcondition)">
       <transf name="case" arg1="( k &lt; multi_order a bound)">
        <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0" expl="true case (postcondition)">
        <transf name="assert" arg1="((i_to_c k /. i_to_c (multi_order a bound)) &lt;.  (c_one -. pow_inv_2 ((2 * n) + 1)))">
         <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0" expl="asserted formula">
         <transf name="replace" arg1="(i_to_c k /. i_to_c (multi_order a bound))" arg2="(c_one -. (i_to_c ( multi_order a bound-k) /. i_to_c (multi_order a bound)))
">
          <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0" expl="asserted formula">
          <transf name="rewrite" arg1="pow_inv_2&#39;def">
           <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0" expl="asserted formula">
           <transf name="assert" arg1="(c_one /. i_to_c (power 2 ((2 * n) + 1)) &lt;. (i_to_c (multi_order a bound - k) /. i_to_c (multi_order a bound)))">
            <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0" expl="asserted formula">
            <transf name="apply" arg1="transitive_inf_infeq" arg2="with" arg3="(c_one /. i_to_c (multi_order a bound))
">
             <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0" expl="apply premises">
             <transf name="apply" arg1="inv_inf">
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.26"/></proof>
              <proof prover="6"><result status="timeout" time="5.00"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="6"><result status="valid" time="0.99" steps="23871"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2" expl="apply premises">
              <transf name="split_vc" >
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2.0">
               <transf name="apply" arg1="inf_to_sup">
                <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
                <proof prover="6"><result status="valid" time="0.98" steps="23871"/></proof>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2.0.1" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.16"/></proof>
                <proof prover="6"><result status="timeout" time="5.00"/></proof>
                </goal>
                <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2.0.2" expl="apply premises">
                <transf name="apply" arg1="i_to_c_inf">
                 <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2.0.2.0" expl="apply premises">
                 <proof prover="1"><result status="timeout" time="5.00"/></proof>
                 <proof prover="6"><result status="timeout" time="5.00"/></proof>
                 <proof prover="8" obsolete="true"><result status="valid" time="3.83" steps="1471027"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.0.2.1" proved="true">
               <proof prover="1"><result status="valid" time="2.22"/></proof>
               <proof prover="6"><result status="timeout" time="5.00"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.1" expl="apply premises">
             <transf name="apply" arg1="compat_infeq_div">
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.30"/></proof>
              <proof prover="6"><result status="timeout" time="5.00"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.23"/></proof>
              <proof prover="6"><result status="timeout" time="5.00"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.1.2" expl="apply premises" proved="true">
              <proof prover="1"><result status="valid" time="2.07"/></proof>
              <proof prover="6"><result status="timeout" time="5.00"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.1.3" expl="apply premises" proved="true">
              <proof prover="6"><result status="valid" time="0.88" steps="23871"/></proof>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.0.1.4" expl="apply premises">
              <proof prover="1"><result status="timeout" time="5.00"/></proof>
              <proof prover="6"><result status="timeout" time="5.00"/></proof>
              <proof prover="8" obsolete="true"><result status="valid" time="3.69" steps="1400873"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1" expl="asserted formula">
            <transf name="rewrite" arg1="minus_as_add_opp">
             <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1.0" expl="asserted formula">
             <transf name="rewrite" arg1="minus_as_add_opp">
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1.0.0" expl="asserted formula">
              <transf name="apply" arg1="compat_inf_add_left">
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="2.30"/></proof>
               <proof prover="6"><result status="timeout" time="5.00"/></proof>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1.0.0.1" expl="apply premises">
               <proof prover="1"><result status="timeout" time="5.00"/></proof>
               <proof prover="6"><result status="timeout" time="5.00"/></proof>
               <proof prover="8" obsolete="true"><result status="valid" time="3.88" steps="1470647"/></proof>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1.0.0.2" expl="apply premises">
               <proof prover="1"><result status="timeout" time="5.00"/></proof>
               <proof prover="6"><result status="timeout" time="5.00"/></proof>
               <proof prover="8" obsolete="true"><result status="valid" time="4.00" steps="1470681"/></proof>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.0.1.0.0.3" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="2.47"/></proof>
               <proof prover="6"><result status="timeout" time="5.00"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="6"><result status="valid" time="0.92" steps="23872"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1" expl="equality hypothesis">
          <transf name="assert" arg1="(forall a b c . c &lt;&gt; c_zero -&gt; b = c-.a -&gt; a/. c = c_one -. b/.c)">
           <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0" expl="asserted formula">
           <transf name="split_vc" >
            <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0" expl="asserted formula">
            <transf name="replace" arg1="c_one" arg2="(c/.c)">
             <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0" expl="asserted formula">
             <transf name="rewrite" arg1="div_distr_minus_rev">
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0" expl="asserted formula">
              <transf name="apply" arg1="div_eq">
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0" expl="apply premises">
               <transf name="rewrite" arg1="H">
                <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0.0" expl="apply premises">
                <transf name="rewrite" arg1="minus_as_add_opp">
                 <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises">
                 <transf name="rewrite" arg1="minus_as_add_opp">
                  <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises">
                  <transf name="rewrite" arg1="minus_add_out_right">
                   <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises">
                   <transf name="rewrite" arg1="minus_add_out_right">
                    <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises">
                    <transf name="rewrite" arg1="minus_add_out_right">
                     <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises">
                     <proof prover="1"><result status="timeout" time="5.00"/></proof>
                     <proof prover="6"><result status="timeout" time="5.00"/></proof>
                     <proof prover="8" obsolete="true"><result status="valid" time="4.11" steps="1457308"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="6"><result status="valid" time="0.93" steps="23959"/></proof>
               </goal>
               <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="6"><result status="valid" time="0.94" steps="23959"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="6"><result status="valid" time="0.91" steps="23959"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.0.0.1" expl="equality hypothesis">
             <proof prover="1"><result status="timeout" time="5.00"/></proof>
             <proof prover="6"><result status="timeout" time="5.00"/></proof>
             <proof prover="8" obsolete="true"><result status="valid" time="4.14" steps="1456363"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.1" expl="equality hypothesis">
           <transf name="apply" arg1="h">
            <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.1.0" expl="apply premises">
            <proof prover="1"><result status="timeout" time="5.00"/></proof>
            <proof prover="6"><result status="timeout" time="5.00"/></proof>
            <proof prover="8" obsolete="true"><result status="valid" time="2.47" steps="1107531"/></proof>
            </goal>
            <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.0.1.1.1" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="2.31"/></proof>
            <proof prover="6"><result status="timeout" time="5.00"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.0.1" expl="true case (postcondition)" proved="true">
         <proof prover="1"><result status="valid" time="3.17"/></proof>
         <proof prover="6"><result status="timeout" time="5.00"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="best_appr_orders&#39;vc.0.18.1.0.1.0.1" expl="false case (true case. postcondition)" proved="true">
        <proof prover="6"><result status="valid" time="0.88" steps="23871"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="best_appr_orders&#39;vc.0.18.1.0.1.1" expl="false case (true case. postcondition)" proved="true">
       <proof prover="6"><result status="valid" time="0.85" steps="23914"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="best_appr_orders&#39;vc.0.18.1.1" expl="false case (postcondition)" proved="true">
     <proof prover="6"><result status="valid" time="0.92" steps="23674"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="greatest_factor&#39;vc" expl="VC for greatest_factor">
 <transf name="split_vc" >
  <goal name="greatest_factor&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.92" steps="22909"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.40"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.85" steps="22966"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.3" expl="precondition">
  <transf name="split_vc" >
   <goal name="greatest_factor&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.85" steps="22967"/></proof>
   </goal>
   <goal name="greatest_factor&#39;vc.3.1" expl="precondition">
   <transf name="apply" arg1="inf_trans" arg2="with" arg3="bound">
    <goal name="greatest_factor&#39;vc.3.1.0" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="0.91" steps="22966"/></proof>
    </goal>
    <goal name="greatest_factor&#39;vc.3.1.1" expl="apply premises">
    <transf name="apply" arg1="inf_trans" arg2="with" arg3="(power 2 n)">
     <goal name="greatest_factor&#39;vc.3.1.1.0" expl="apply premises" proved="true">
     <proof prover="6"><result status="valid" time="0.90" steps="22966"/></proof>
     </goal>
     <goal name="greatest_factor&#39;vc.3.1.1.1" expl="apply premises">
     <proof prover="1"><result status="timeout" time="5.00"/></proof>
     <proof prover="2" obsolete="true"><result status="valid" time="0.52" steps="3407460"/></proof>
     <proof prover="6"><result status="timeout" time="5.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="greatest_factor&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.85" steps="22967"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.87" steps="23016"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.6" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures3">
   <goal name="greatest_factor&#39;vc.6.0" expl="apply premises" proved="true">
   <proof prover="6"><result status="valid" time="0.87" steps="23018"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="greatest_factor&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.31"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.85" steps="23016"/></proof>
  </goal>
  <goal name="greatest_factor&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.29"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="min_mod_sum&#39;vc" expl="VC for min_mod_sum">
 <transf name="split_vc" >
  <goal name="min_mod_sum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.85" steps="22908"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.22"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.84" steps="23050"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.22"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.87" steps="23224"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.86" steps="23224"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.90" steps="23224"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.7" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="23224"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.88" steps="23224"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.9" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.90" steps="23224"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.10" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.02" steps="23330"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.11" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.84" steps="23330"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.12" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.90" steps="23330"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.13" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.13.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.90" steps="23330"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.14" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.90" steps="23330"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.15" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="23330"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.16" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="23330"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.17" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.91" steps="23330"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.18" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="23330"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.19" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="23330"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.20" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.91" steps="23330"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.21" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="23330"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.22" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="23386"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.14"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.24" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="23527"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.25" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.86" steps="23475"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.26" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.22"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.27" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.27.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.89" steps="23475"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.28" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.28.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="2.37"/></proof>
   <proof prover="6"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.29" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.29.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.82" steps="23046"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.30" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.30.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="2.25"/></proof>
   <proof prover="6"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="min_mod_sum&#39;vc.30.1" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.85" steps="23046"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.31" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.86" steps="23223"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.32" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.32.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="min_mod_sum&#39;vc.32.0.0" expl="precondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="min_mod_sum&#39;vc.32.0.0.0" expl="VC for min_mod_sum" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="min_mod_sum&#39;vc.32.0.0.0.0" expl="precondition" proved="true">
      <proof prover="1"><result status="valid" time="2.71"/></proof>
      <proof prover="6"><result status="timeout" time="5.00"/></proof>
      </goal>
      <goal name="min_mod_sum&#39;vc.32.0.0.0.1" expl="precondition" proved="true">
      <proof prover="1"><result status="valid" time="2.05"/></proof>
      <proof prover="6"><result status="timeout" time="5.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.33" expl="postcondition">
  <transf name="split_vc" >
   <goal name="min_mod_sum&#39;vc.33.0" expl="postcondition">
   <transf name="eliminate_let" >
    <goal name="min_mod_sum&#39;vc.33.0.0" expl="postcondition">
    <transf name="split_vc" >
     <goal name="min_mod_sum&#39;vc.33.0.0.0" expl="postcondition">
     <transf name="split_all_full" >
      <goal name="min_mod_sum&#39;vc.33.0.0.0.0" expl="postcondition">
      <transf name="rewrite" arg1="H">
       <goal name="min_mod_sum&#39;vc.33.0.0.0.0.0" expl="postcondition">
       <transf name="compute_specified" >
        <goal name="min_mod_sum&#39;vc.33.0.0.0.0.0.0" expl="postcondition">
        <transf name="eliminate_if" >
         <goal name="min_mod_sum&#39;vc.33.0.0.0.0.0.0.0" expl="VC for min_mod_sum">
         <proof prover="1"><result status="timeout" time="5.00"/></proof>
         <proof prover="6"><result status="timeout" time="5.00"/></proof>
         <proof prover="8" obsolete="true"><result status="valid" time="4.62" steps="1851757"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="min_mod_sum&#39;vc.33.1" expl="postcondition">
   <proof prover="1"><result status="timeout" time="5.00"/></proof>
   <proof prover="6"><result status="timeout" time="5.00"/></proof>
   <proof prover="8" obsolete="true"><result status="valid" time="2.54" steps="1074293"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.34" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.39"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.35" expl="postcondition">
  <transf name="split_vc" >
   <goal name="min_mod_sum&#39;vc.35.0" expl="postcondition">
   <transf name="instantiate" arg1="Ensures2" arg2="i">
    <goal name="min_mod_sum&#39;vc.35.0.0" expl="postcondition">
    <transf name="destruct" arg1="Hinst">
     <goal name="min_mod_sum&#39;vc.35.0.0.0" expl="destruct premise" proved="true">
     <proof prover="1"><result status="valid" time="2.38"/></proof>
     <proof prover="6"><result status="timeout" time="5.00"/></proof>
     </goal>
     <goal name="min_mod_sum&#39;vc.35.0.0.1" expl="postcondition">
     <transf name="compute_hyp_specified" arg1="in" arg2="Hinst">
      <goal name="min_mod_sum&#39;vc.35.0.0.1.0" expl="postcondition">
      <proof prover="1"><result status="timeout" time="5.00"/></proof>
      <proof prover="6"><result status="timeout" time="5.00"/></proof>
      <proof prover="8" obsolete="true"><result status="valid" time="4.11" steps="1469188"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="min_mod_sum&#39;vc.35.1" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.87" steps="23211"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.36" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.86" steps="22907"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.37" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.18"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.38" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.38.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="1.04" steps="23065"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.39" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.39.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="2.28"/></proof>
   <proof prover="6"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.40" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_mod_sum&#39;vc.40.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="2.37"/></proof>
   <proof prover="6"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.41" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.87" steps="23328"/></proof>
  </goal>
  <goal name="min_mod_sum&#39;vc.42" expl="postcondition" proved="true">
  <transf name="eliminate_let" proved="true" >
   <goal name="min_mod_sum&#39;vc.42.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="transitive_infeq" arg2="with" arg3="(o k)">
    <goal name="min_mod_sum&#39;vc.42.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="Ensures2">
     <goal name="min_mod_sum&#39;vc.42.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="2.41"/></proof>
     <proof prover="6"><result status="timeout" time="5.00"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="min_mod_sum&#39;vc.42.0.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="H6">
     <goal name="min_mod_sum&#39;vc.42.0.1.0" expl="apply premises" proved="true">
     <proof prover="6"><result status="valid" time="0.82" steps="23332"/></proof>
     </goal>
     <goal name="min_mod_sum&#39;vc.42.0.1.1" expl="apply premises" proved="true">
     <proof prover="6"><result status="valid" time="0.86" steps="23332"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="min_mod_sum&#39;vc.43" expl="postcondition">
  <transf name="split_vc" >
   <goal name="min_mod_sum&#39;vc.43.0" expl="postcondition">
   <transf name="apply" arg1="compat_order_mult_rev" arg2="with" arg3="(c_one /. cpower (i_to_c (greatest_factor a bound n i)) 2)">
    <goal name="min_mod_sum&#39;vc.43.0.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.44"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    </goal>
    <goal name="min_mod_sum&#39;vc.43.0.1" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.50"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    </goal>
    <goal name="min_mod_sum&#39;vc.43.0.2" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.97"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    </goal>
    <goal name="min_mod_sum&#39;vc.43.0.3" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="2.64"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    </goal>
    <goal name="min_mod_sum&#39;vc.43.0.4" expl="apply premises">
    <transf name="replace" arg1="((cpower (i_to_c (greatest_factor a bound n i)) 2 *. result)
   *. (c_one /. cpower (i_to_c (greatest_factor a bound n i)) 2))" arg2="result">
     <goal name="min_mod_sum&#39;vc.43.0.4.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b. b&lt;&gt; c_zero -&gt; a*. (c_one/.b) = a/.b)">
      <goal name="min_mod_sum&#39;vc.43.0.4.0.0" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="2.63"/></proof>
      <proof prover="6"><result status="timeout" time="5.00"/></proof>
      </goal>
      <goal name="min_mod_sum&#39;vc.43.0.4.0.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="h">
       <goal name="min_mod_sum&#39;vc.43.0.4.0.1.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="Ensures">
        <goal name="min_mod_sum&#39;vc.43.0.4.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="6"><result status="valid" time="0.85" steps="23266"/></proof>
        </goal>
        <goal name="min_mod_sum&#39;vc.43.0.4.0.1.0.1" expl="apply premises" proved="true">
        <proof prover="6"><result status="valid" time="0.84" steps="23266"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="min_mod_sum&#39;vc.43.0.4.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.68"/></proof>
       <proof prover="6"><result status="timeout" time="5.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="min_mod_sum&#39;vc.43.0.4.1" expl="equality hypothesis">
     <transf name="assert" arg1="(forall a b. a&lt;&gt; c_zero -&gt; a*.b*. (c_one/.a) = b)">
      <goal name="min_mod_sum&#39;vc.43.0.4.1.0" expl="asserted formula">
      <proof prover="1"><result status="timeout" time="5.00"/></proof>
      <proof prover="6"><result status="timeout" time="5.00"/></proof>
      <proof prover="8" obsolete="true"><result status="valid" time="3.89" steps="1502619"/></proof>
      </goal>
      <goal name="min_mod_sum&#39;vc.43.0.4.1.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="h">
       <goal name="min_mod_sum&#39;vc.43.0.4.1.1.0" expl="equality hypothesis" proved="true">
       <proof prover="6"><result status="valid" time="0.86" steps="23266"/></proof>
       </goal>
       <goal name="min_mod_sum&#39;vc.43.0.4.1.1.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="2.43"/></proof>
       <proof prover="6"><result status="timeout" time="5.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="separated_best_appr&#39;vc" expl="VC for separated_best_appr">
 <transf name="split_vc" >
  <goal name="separated_best_appr&#39;vc.0" expl="assertion">
  <transf name="rewrite" arg1="i_to_c_sub_rev">
   <goal name="separated_best_appr&#39;vc.0.0" expl="assertion">
   <transf name="assert" arg1="(forall a b c. (a-.b)-.(c+.b) = (a-.c) -. (b+.b))">
    <goal name="separated_best_appr&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="separated_best_appr&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <transf name="replace" proved="true" arg1="((a -. b) -. (c +. b))" arg2="(a-.b-.c-.b)">
      <goal name="separated_best_appr&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="replace" proved="true" arg1="((a -. c) -. (b +. b))" arg2="(a-.c-.b-.b)">
       <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
        <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
         <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
         <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
          <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
          <transf name="rewrite" proved="true" arg1="minus_as_add_opp">
           <goal name="separated_best_appr&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
           <proof prover="1"><result status="valid" time="2.24"/></proof>
           <proof prover="6"><result status="timeout" time="5.00"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="separated_best_appr&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="1"><result status="valid" time="2.29"/></proof>
       <proof prover="6"><result status="timeout" time="5.00"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="separated_best_appr&#39;vc.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="1"><result status="valid" time="2.30"/></proof>
      <proof prover="6"><result status="timeout" time="5.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="separated_best_appr&#39;vc.0.0.1" expl="assertion">
    <transf name="rewrite" arg1="h">
     <goal name="separated_best_appr&#39;vc.0.0.1.0" expl="assertion">
     <transf name="apply" arg1="subs_eq">
      <goal name="separated_best_appr&#39;vc.0.0.1.0.0" expl="apply premises">
      <transf name="rewrite" arg1="i_to_c_mult_rev">
       <goal name="separated_best_appr&#39;vc.0.0.1.0.0.0" expl="apply premises">
       <transf name="rewrite" arg1="i_to_c_mult_rev">
        <goal name="separated_best_appr&#39;vc.0.0.1.0.0.0.0" expl="apply premises">
        <transf name="assert" arg1="(forall a b c. c &lt;&gt; c_zero -&gt;  (a-.b)*.c = a*.c -. b*.c)">
         <goal name="separated_best_appr&#39;vc.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
         <proof prover="1"><result status="valid" time="2.29"/></proof>
         <proof prover="6"><result status="timeout" time="5.00"/></proof>
         </goal>
         <goal name="separated_best_appr&#39;vc.0.0.1.0.0.0.0.1" expl="apply premises">
         <proof prover="1"><result status="timeout" time="5.00"/></proof>
         <proof prover="6"><result status="timeout" time="5.00"/></proof>
         <proof prover="8" obsolete="true"><result status="valid" time="3.69" steps="1358769"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="separated_best_appr&#39;vc.0.0.1.0.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="2.21"/></proof>
      <proof prover="6"><result status="timeout" time="5.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="separated_best_appr&#39;vc.1" expl="assertion">
  <transf name="assert" arg1="(c_zero &lt;. ((i_to_c (k&#39; - k)
      *. (i_to_c (power 2 (2 * n)) /. i_to_c (multi_order a bound)))
     -. c_one))">
   <goal name="separated_best_appr&#39;vc.1.0" expl="asserted formula">
   <transf name="assert" arg1="(c_one &lt;. (i_to_c (power 2 (2 * n)) /. i_to_c (multi_order a bound)))">
    <goal name="separated_best_appr&#39;vc.1.0.0" expl="asserted formula">
    <transf name="assert" arg1="(i_to_c (multi_order a bound) &lt;. (i_to_c (power 2 (2 * n))  ))">
     <goal name="separated_best_appr&#39;vc.1.0.0.0" expl="asserted formula">
     <transf name="apply" arg1="i_to_c_inf">
      <goal name="separated_best_appr&#39;vc.1.0.0.0.0" expl="apply premises">
      <transf name="apply" arg1="inf_trans" arg2="with" arg3="bound">
       <goal name="separated_best_appr&#39;vc.1.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.30"/></proof>
       <proof prover="6"><result status="timeout" time="5.00"/></proof>
       </goal>
       <goal name="separated_best_appr&#39;vc.1.0.0.0.0.1" expl="apply premises">
       <transf name="apply" arg1="inf_trans" arg2="with" arg3="(power 2 n)">
        <goal name="separated_best_appr&#39;vc.1.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="6"><result status="valid" time="0.85" steps="22960"/></proof>
        </goal>
        <goal name="separated_best_appr&#39;vc.1.0.0.0.0.1.1" expl="apply premises">
        <proof prover="1"><result status="timeout" time="5.00"/></proof>
        <proof prover="2" obsolete="true"><result status="valid" time="0.54" steps="3426297"/></proof>
        <proof prover="6"><result status="timeout" time="5.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="separated_best_appr&#39;vc.1.0.0.1" expl="asserted formula">
     <transf name="assert" arg1="(forall a b.c_zero &lt;. a -&gt; c_zero &lt;. b -&gt; b&lt;.a -&gt; c_one &lt;.a /.b)">
      <goal name="separated_best_appr&#39;vc.1.0.0.1.0" expl="asserted formula">
      <transf name="split_vc" >
       <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0" expl="asserted formula">
       <transf name="replace" arg1="(a /. b)" arg2="(c_one +. ((a-.b)/.b))">
        <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.0" expl="asserted formula">
        <transf name="assert" arg1="(c_one +. c_zero &lt;. (c_one +. ((a -. b) /. b)))">
         <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.0.0" expl="asserted formula">
         <proof prover="1"><result status="timeout" time="5.00"/></proof>
         <proof prover="6"><result status="timeout" time="5.00"/></proof>
         <proof prover="8" obsolete="true"><result status="valid" time="3.42" steps="1340892"/></proof>
         </goal>
         <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.0.1" expl="asserted formula">
         <proof prover="1"><result status="timeout" time="5.00"/></proof>
         <proof prover="6"><result status="timeout" time="5.00"/></proof>
         <proof prover="8" obsolete="true"><result status="valid" time="2.44" steps="1103108"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.1" expl="equality hypothesis">
        <transf name="replace" arg1="c_one" arg2="(b/.b)">
         <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.1.0" expl="equality hypothesis">
         <proof prover="1"><result status="timeout" time="5.00"/></proof>
         <proof prover="6"><result status="timeout" time="5.00"/></proof>
         <proof prover="8" obsolete="true"><result status="valid" time="3.76" steps="1379929"/></proof>
         </goal>
         <goal name="separated_best_appr&#39;vc.1.0.0.1.0.0.1.1" expl="equality hypothesis">
         <proof prover="1"><result status="timeout" time="5.00"/></proof>
         <proof prover="6"><result status="timeout" time="5.00"/></proof>
         <proof prover="8" obsolete="true"><result status="valid" time="3.73" steps="1377250"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="separated_best_appr&#39;vc.1.0.0.1.1" expl="asserted formula" proved="true">
      <proof prover="1"><result status="valid" time="2.28"/></proof>
      <proof prover="6"><result status="timeout" time="5.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="separated_best_appr&#39;vc.1.0.1" expl="asserted formula">
    <transf name="assert" arg1="(c_one &lt;. (i_to_c (k&#39; - k)
       *. (i_to_c (power 2 (2 * n)) /. i_to_c (multi_order a bound))))">
     <goal name="separated_best_appr&#39;vc.1.0.1.0" expl="asserted formula">
     <transf name="assert" arg1="(forall a b. c_one &lt;=. a -&gt; c_one &lt;. b -&gt; c_one &lt;. a*.b)">
      <goal name="separated_best_appr&#39;vc.1.0.1.0.0" expl="asserted formula">
      <transf name="split_vc" >
       <goal name="separated_best_appr&#39;vc.1.0.1.0.0.0" expl="asserted formula">
       <proof prover="1"><result status="timeout" time="5.00"/></proof>
       <proof prover="6"><result status="timeout" time="5.00"/></proof>
       <proof prover="8" obsolete="true"><result status="valid" time="3.83" steps="1388355"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="separated_best_appr&#39;vc.1.0.1.0.1" expl="asserted formula">
      <transf name="apply" arg1="h1">
       <goal name="separated_best_appr&#39;vc.1.0.1.0.1.0" expl="apply premises">
       <proof prover="1"><result status="timeout" time="5.00"/></proof>
       <proof prover="6"><result status="timeout" time="5.00"/></proof>
       <proof prover="8" obsolete="true"><result status="valid" time="3.44" steps="1336350"/></proof>
       </goal>
       <goal name="separated_best_appr&#39;vc.1.0.1.0.1.1" expl="apply premises" proved="true">
       <proof prover="6"><result status="valid" time="1.02" steps="23010"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="separated_best_appr&#39;vc.1.0.1.1" expl="asserted formula" proved="true">
     <proof prover="1"><result status="valid" time="2.21"/></proof>
     <proof prover="6"><result status="timeout" time="5.00"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="separated_best_appr&#39;vc.1.1" expl="assertion">
   <transf name="assert" arg1="(forall a b. real_ b -&gt; c_zero &lt;. a-. b -&gt; b &lt;.a)">
    <goal name="separated_best_appr&#39;vc.1.1.0" expl="asserted formula">
    <proof prover="1"><result status="timeout" time="5.00"/></proof>
    <proof prover="6"><result status="timeout" time="5.00"/></proof>
    <proof prover="8" obsolete="true"><result status="valid" time="4.22" steps="1416759"/></proof>
    </goal>
    <goal name="separated_best_appr&#39;vc.1.1.1" expl="assertion" proved="true">
    <transf name="apply" proved="true" arg1="h">
     <goal name="separated_best_appr&#39;vc.1.1.1.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="2.75"/></proof>
     <proof prover="6"><result status="timeout" time="5.00"/></proof>
     </goal>
     <goal name="separated_best_appr&#39;vc.1.1.1.1" expl="apply premises" proved="true">
     <proof prover="6"><result status="valid" time="0.82" steps="23026"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="separated_best_appr&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.84" steps="23010"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.86" steps="23010"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.86" steps="23010"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.86" steps="23010"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.85" steps="23010"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.7" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.84" steps="23011"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.85" steps="23111"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.9" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.83" steps="23111"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.10" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.83" steps="23111"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.11" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.85" steps="23111"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.12" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.84" steps="23111"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.13" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="23111"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.14" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="separated_best_appr&#39;vc.14.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="2.33"/></proof>
   <proof prover="6"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="separated_best_appr&#39;vc.15" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.84" steps="23443"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.31"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.30"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.37"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.19" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.86" steps="23701"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.38"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.32"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.22" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="23905"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.23" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="23905"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.24" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.90" steps="23905"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.25" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.88" steps="23905"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.26" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.87" steps="23905"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.27" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.85" steps="23906"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.28" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.87" steps="24048"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.29" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.90" steps="24049"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.30" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="24119"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.31" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.86" steps="24119"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.32" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.87" steps="24119"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.33" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.91" steps="24119"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.34" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.90" steps="24119"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.35" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.86" steps="24119"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.36" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.31"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.37" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.88" steps="24262"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.38" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.27"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.39" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.36"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.40" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="24262"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.41" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.86" steps="24262"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.42" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="24262"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.43" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.89" steps="24262"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.44" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.90" steps="24262"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.45" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.87" steps="24263"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.46" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.02" steps="24262"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.47" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="1.03" steps="24262"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.48" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.43"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="separated_best_appr&#39;vc.49" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.85"/></proof>
  <proof prover="6"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
