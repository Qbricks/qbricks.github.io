<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="5" name="CVC4" version="1.7" alternative="strings" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="7" name="Z3" version="4.8.6" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="10" name="Z3" version="4.8.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="11" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="complex_operations.mlw"/>
<theory name="Simpl_op" proved="true">
 <goal name="add_im_re&#39;vc" expl="VC for add_im_re" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_im_re&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.07" steps="43442"/></proof>
  </goal>
  <goal name="add_im_re&#39;vc.1" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.06" steps="43032"/></proof>
  </goal>
  <goal name="add_im_re&#39;vc.2" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Assert">
   <goal name="add_im_re&#39;vc.2.0" expl="precondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="add_im_re&#39;vc.2.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="t_real_part&#39;def">
     <goal name="add_im_re&#39;vc.2.0.0.0" expl="precondition" proved="true">
     <proof prover="11"><result status="valid" time="0.10" steps="54334"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add_im_re&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.42" steps="192257"/></proof>
  </goal>
  <goal name="add_im_re&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.09" steps="53503"/></proof>
  </goal>
  <goal name="add_im_re&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.11" steps="53562"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_real_part&#39;vc" expl="VC for add_real_part" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_real_part&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.07" steps="43102"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_im_part&#39;vc" expl="VC for add_im_part" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_im_part&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.05" steps="43159"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_real_part_rev&#39;vc" expl="VC for add_real_part_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_real_part_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.16" steps="43225"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_im_part_rev&#39;vc" expl="VC for add_im_part_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_im_part_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="43282"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mult_distr_add_r&#39;vc" expl="VC for mult_distr_add_r" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mult_distr_add_r&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.07" steps="43340"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_add_minus&#39;vc" expl="VC for add_add_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_add_minus&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.10" steps="50508"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mult_distr_minus&#39;vc" expl="VC for mult_distr_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mult_distr_minus&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(b-.c)" arg2="(b+. (-.c))">
   <goal name="mult_distr_minus&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.20" steps="94882"/></proof>
   </goal>
   <goal name="mult_distr_minus&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.07" steps="43449"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="minus_out&#39;vc" expl="VC for minus_out" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="minus_out&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.07" steps="43516"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mult_distr_add_r_rev&#39;vc" expl="VC for mult_distr_add_r_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mult_distr_add_r_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.07" steps="43592"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mult_distr_minus_rev&#39;vc" expl="VC for mult_distr_minus_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mult_distr_minus_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.18" steps="43661"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="div_distr_add&#39;vc" expl="VC for div_distr_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="div_distr_add&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="43765"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="div_distr_minus&#39;vc" expl="VC for div_distr_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="div_distr_minus&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="((b-.c)/.a)" arg2="((b-.c) *.  (c_one/.a))">
   <goal name="div_distr_minus&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.19" steps="94304"/></proof>
   </goal>
   <goal name="div_distr_minus&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.18" steps="43888"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="div_distr_add_rev&#39;vc" expl="VC for div_distr_add_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="div_distr_add_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="44001"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="div_distr_minus_rev&#39;vc" expl="VC for div_distr_minus_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="div_distr_minus_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="44138"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mult_distr_add_l&#39;vc" expl="VC for mult_distr_add_l" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mult_distr_add_l&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.09" steps="51563"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mult_distr_add_l_rev&#39;vc" expl="VC for mult_distr_add_l_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mult_distr_add_l_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="44293"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mult_distr_minus_r&#39;vc" expl="VC for mult_distr_minus_r" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mult_distr_minus_r&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.06" steps="44353"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mult_distr_minus_ll&#39;vc" expl="VC for mult_distr_minus_ll" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mult_distr_minus_ll&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.18" steps="99472"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mult_distr_minus_ri&#39;vc" expl="VC for mult_distr_minus_ri" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mult_distr_minus_ri&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="51785"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="minus_distr_op&#39;vc" expl="VC for minus_distr_op" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="minus_distr_op&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(a -. (b +. c))" arg2="(a +. (-.(b +. c)))">
   <goal name="minus_distr_op&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(-. (b +. c))" arg2="(-.b +. -. c)">
    <goal name="minus_distr_op&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.21" steps="51543"/></proof>
    </goal>
    <goal name="minus_distr_op&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.17" steps="44558"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="minus_distr_op&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.17" steps="44548"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="mult_distr_minus_l&#39;vc" expl="VC for mult_distr_minus_l" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mult_distr_minus_l&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.06" steps="44615"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="assoc_right&#39;vc" expl="VC for assoc_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="assoc_right&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="44686"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="assoc_right_mult&#39;vc" expl="VC for assoc_right_mult" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="assoc_right_mult&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="44748"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="minus_elim&#39;vc" expl="VC for minus_elim" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="minus_elim&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.06" steps="44790"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="minus_eq_t&#39;vc" expl="VC for minus_eq_t" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="minus_eq_t&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.12" steps="41596"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="minus_distr_elim&#39;vc" expl="VC for minus_distr_elim" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="minus_distr_elim&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.10" steps="52084"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="plus_minus_distr_elim&#39;vc" expl="VC for plus_minus_distr_elim" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="plus_minus_distr_elim&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.08" steps="52537"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="def_by_minus&#39;vc" expl="VC for def_by_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="def_by_minus&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.85" steps="182634"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="switch&#39;vc" expl="VC for switch" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="switch&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.12" steps="52460"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="meet_a_c&#39;vc" expl="VC for meet_a_c" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="meet_a_c&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.19" steps="45743"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="meet_a_d&#39;vc" expl="VC for meet_a_d" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="meet_a_d&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.10" steps="52515"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="meet_b_c&#39;vc" expl="VC for meet_b_c" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="meet_b_c&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.08" steps="52717"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="meet_b_d&#39;vc" expl="VC for meet_b_d" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="meet_b_d&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.10" steps="52896"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="meet_c_d&#39;vc" expl="VC for meet_c_d" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="meet_c_d&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.10" steps="52995"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inv_add&#39;vc" expl="VC for inv_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="inv_add&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.07" steps="46120"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="switch_m&#39;vc" expl="VC for switch_m" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="switch_m&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="45678"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="meet_a_c_m&#39;vc" expl="VC for meet_a_c_m" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="meet_a_c_m&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="45755"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="meet_a_d_m&#39;vc" expl="VC for meet_a_d_m" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="meet_a_d_m&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.18" steps="45834"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="meet_b_c_m&#39;vc" expl="VC for meet_b_c_m" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="meet_b_c_m&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="45913"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="meet_b_d_m&#39;vc" expl="VC for meet_b_d_m" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="meet_b_d_m&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="45992"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="meet_c_d_m&#39;vc" expl="VC for meet_c_d_m" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="meet_c_d_m&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.07" steps="46071"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="t_real_part_add&#39;vc" expl="VC for t_real_part_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="t_real_part_add&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.18" steps="46141"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="t_real_part_subs&#39;vc" expl="VC for t_real_part_subs" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="t_real_part_subs&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="minus_elim">
   <goal name="t_real_part_subs&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="minus_elim">
    <goal name="t_real_part_subs&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="t_real_part_add">
     <goal name="t_real_part_subs&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="add_eq_t">
      <goal name="t_real_part_subs&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.11" steps="39296"/></proof>
      </goal>
      <goal name="t_real_part_subs&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="t_real_part_subs&#39;vc.0.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.08" steps="50129"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="t_im_part_add&#39;vc" expl="VC for t_im_part_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="t_im_part_add&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="46250"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="t_im_part_subs&#39;vc" expl="VC for t_im_part_subs" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="t_im_part_subs&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.13" steps="572219"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="t_real_part_real&#39;vc" expl="VC for t_real_part_real" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="t_real_part_real&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.09" steps="52632"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="t_real_part_im&#39;vc" expl="VC for t_real_part_im" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="t_real_part_im&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="82856"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="im_t_im_part_im&#39;vc" expl="VC for im_t_im_part_im" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="im_t_im_part_im&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.09" steps="52601"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="t_im_part_im&#39;vc" expl="VC for t_im_part_im" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="t_im_part_im&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="46539"/></proof>
  </goal>
  <goal name="t_im_part_im&#39;vc.1" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.18" steps="46577"/></proof>
  </goal>
  <goal name="t_im_part_im&#39;vc.2" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="minus_out">
   <goal name="t_im_part_im&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.23" steps="54842"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="t_im_part_real&#39;vc" expl="VC for t_im_part_real" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="t_im_part_real&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="t_im_part_real&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.74" steps="343183"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="a_div_b_mult_a&#39;vc" expl="VC for a_div_b_mult_a" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="a_div_b_mult_a&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.07" steps="46805"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Base_type" proved="true">
 <goal name="null_product" proved="true">
 <proof prover="11"><result status="valid" time="0.21" steps="98651"/></proof>
 </goal>
 <goal name="couple_value&#39;vc" expl="VC for couple_value" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="couple_value&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.25" steps="139570"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="couple_value_dev&#39;vc" expl="VC for couple_value_dev" proved="true">
 <proof prover="11"><result status="valid" time="0.23" steps="140032"/></proof>
 </goal>
 <goal name="neutral_c_zero&#39;vc" expl="VC for neutral_c_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_c_zero&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.87" steps="359140"/></proof>
  </goal>
  <goal name="neutral_c_zero&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.80" steps="359018"/></proof>
  </goal>
  <goal name="neutral_c_zero&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.18" steps="362727"/></proof>
  </goal>
  <goal name="neutral_c_zero&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.18" steps="133178"/></proof>
  </goal>
  <goal name="neutral_c_zero&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="neutral_c_zero&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="neutral_c_zero&#39;vc.4.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.39" steps="179496"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum&#39;vc" expl="VC for sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.24" steps="374068"/></proof>
  </goal>
  <goal name="sum&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.20" steps="141781"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_empty&#39;vc" expl="VC for sum_empty" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_empty&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.14" steps="136898"/></proof>
  </goal>
  <goal name="sum_empty&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.31" steps="372367"/></proof>
  </goal>
  <goal name="sum_empty&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="141847"/></proof>
  </goal>
  <goal name="sum_empty&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.34" steps="167123"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_one&#39;vc" expl="VC for sum_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.11" steps="145126"/></proof>
  </goal>
  <goal name="sum_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.46" steps="385323"/></proof>
  </goal>
  <goal name="sum_one&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.35" steps="174966"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_add&#39;vc" expl="VC for sum_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_add&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.64" steps="415022"/></proof>
  </goal>
  <goal name="sum_add&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.20" steps="172156"/></proof>
  </goal>
  <goal name="sum_add&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.22" steps="172157"/></proof>
  </goal>
  <goal name="sum_add&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.38" steps="198141"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_plus_one&#39;vc" expl="VC for sum_plus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_plus_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.24" steps="140624"/></proof>
  </goal>
  <goal name="sum_plus_one&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.33" steps="141543"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_partition&#39;vc" expl="VC for sum_partition" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_partition&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.38" steps="148071"/></proof>
  </goal>
  <goal name="sum_partition&#39;vc.1" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.35" steps="150338"/></proof>
  </goal>
  <goal name="sum_partition&#39;vc.2" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_partition&#39;vc.2.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.35" steps="150322"/></proof>
   </goal>
   <goal name="sum_partition&#39;vc.2.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.35" steps="150654"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_partition&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.39" steps="152247"/></proof>
  </goal>
  <goal name="sum_partition&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.45" steps="167290"/></proof>
  </goal>
  <goal name="sum_partition&#39;vc.5" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.34" steps="167987"/></proof>
  </goal>
  <goal name="sum_partition&#39;vc.6" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="sum_partition&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="sum_partition&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="sum_partition&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.36" steps="193492"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sum_partition&#39;vc.6.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.58" steps="216745"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_real&#39;vc" expl="VC for sum_real" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_real&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.18" steps="146152"/></proof>
  </goal>
  <goal name="sum_real&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.39" steps="165315"/></proof>
  </goal>
  <goal name="sum_real&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.37" steps="165105"/></proof>
  </goal>
  <goal name="sum_real&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.39" steps="165352"/></proof>
  </goal>
  <goal name="sum_real&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.30" steps="157713"/></proof>
  </goal>
  <goal name="sum_real&#39;vc.5" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.40" steps="166775"/></proof>
  </goal>
  <goal name="sum_real&#39;vc.6" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="148061"/></proof>
  </goal>
  <goal name="sum_real&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.40" steps="167777"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="map_sum_eq&#39;vc" expl="VC for map_sum_eq" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="map_sum_eq&#39;vc.0" expl="VC for map_sum_eq" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="map_sum_eq&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.19" steps="161004"/></proof>
   </goal>
   <goal name="map_sum_eq&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="1.47" steps="398638"/></proof>
   </goal>
   <goal name="map_sum_eq&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.20" steps="161421"/></proof>
   </goal>
   <goal name="map_sum_eq&#39;vc.0.3" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="map_sum_eq&#39;vc.0.3.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.59" steps="213484"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_comp&#39;vc" expl="VC for sum_comp" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="sum_comp&#39;vc.0" expl="VC for sum_comp" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_comp&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.16" steps="138302"/></proof>
   </goal>
   <goal name="sum_comp&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="1.31" steps="376581"/></proof>
   </goal>
   <goal name="sum_comp&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.35" steps="154876"/></proof>
   </goal>
   <goal name="sum_comp&#39;vc.0.3" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="sum_comp&#39;vc.0.3.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sum&#39;def">
     <goal name="sum_comp&#39;vc.0.3.0.0" expl="postcondition" proved="true">
     <transf name="compute_hyp" proved="true" arg1="in" arg2="Ensures">
      <goal name="sum_comp&#39;vc.0.3.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="sum&#39;def">
       <goal name="sum_comp&#39;vc.0.3.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="sum&#39;def">
        <goal name="sum_comp&#39;vc.0.3.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="5"><result status="valid" time="1.27" steps="649065"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_comp_rev&#39;vc" expl="VC for sum_comp_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_comp_rev&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="goal_comm">
   <goal name="sum_comp_rev&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="5"><result status="valid" time="0.95" steps="506760"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_iter_&#39;vc" expl="VC for sum_iter_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_iter_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.20" steps="364577"/></proof>
  </goal>
  <goal name="sum_iter_&#39;vc.1" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="sum_iter_&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="opposite&#39;def">
    <goal name="sum_iter_&#39;vc.1.0.0" expl="VC for sum_iter_" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sum_iter_&#39;vc.1.0.0.0" expl="VC for sum_iter_" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="sum_iter_&#39;vc.1.0.0.0.0" expl="VC for sum_iter_" proved="true">
      <proof prover="11"><result status="valid" time="0.26" steps="146317"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sum_iter_&#39;vc.2" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="sum_iter_&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="opposite_com&#39;def">
    <goal name="sum_iter_&#39;vc.2.0.0" expl="VC for sum_iter_" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="sum_iter_&#39;vc.2.0.0.0" expl="VC for sum_iter_" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="sum_iter_&#39;vc.2.0.0.0.0" expl="VC for sum_iter_" proved="true">
      <proof prover="11"><result status="valid" time="0.52" steps="198695"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sum_iter_&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.33" steps="144822"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_zero" proved="true">
 <proof prover="11"><result status="valid" time="0.33" steps="145540"/></proof>
 </goal>
 <goal name="sum_eq&#39;vc" expl="VC for sum_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_eq&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.34" steps="197254"/></proof>
  </goal>
  <goal name="sum_eq&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.84" steps="429406"/></proof>
  </goal>
  <goal name="sum_eq&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="192449"/></proof>
  </goal>
  <goal name="sum_eq&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="201107"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_eq_gen&#39;vc" expl="VC for sum_eq_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_eq_gen&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.36" steps="154079"/></proof>
  </goal>
  <goal name="sum_eq_gen&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.35" steps="154661"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_disjoint_transitivity&#39;vc" expl="VC for sum_disjoint_transitivity" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_disjoint_transitivity&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="144411"/></proof>
  </goal>
  <goal name="sum_disjoint_transitivity&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.69" steps="384800"/></proof>
  </goal>
  <goal name="sum_disjoint_transitivity&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="144838"/></proof>
  </goal>
  <goal name="sum_disjoint_transitivity&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.44" steps="175208"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_to_cartesian_product&#39;vc" expl="VC for sum_to_cartesian_product" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_to_cartesian_product&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="139994"/></proof>
  </goal>
  <goal name="sum_to_cartesian_product&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.39" steps="391643"/></proof>
  </goal>
  <goal name="sum_to_cartesian_product&#39;vc.2" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="sum_to_cartesian_product&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="sum&#39;def">
    <goal name="sum_to_cartesian_product&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sum&#39;def">
     <goal name="sum_to_cartesian_product&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="sum&#39;def">
      <goal name="sum_to_cartesian_product&#39;vc.2.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="Ensures">
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_from_cartesian_product&#39;vc" expl="VC for sum_from_cartesian_product" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="sum_from_cartesian_product&#39;vc.0" expl="VC for sum_from_cartesian_product" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_from_cartesian_product&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.94" steps="380752"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum&#39;vc" expl="VC for ind_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="141604"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_to_int_iterate&#39;vc" expl="VC for ind_sum_to_int_iterate" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_to_int_iterate&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.33" steps="167539"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_cardone&#39;vc" expl="VC for ind_sum_cardone" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_cardone&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.12" steps="137909"/></proof>
  </goal>
  <goal name="ind_sum_cardone&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.34" steps="167837"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_right_extension&#39;vc" expl="VC for ind_sum_right_extension" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_right_extension&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.18" steps="141859"/></proof>
  </goal>
  <goal name="ind_sum_right_extension&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.34" steps="168606"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_trans&#39;vc" expl="VC for ind_sum_trans" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_trans&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.14" steps="117795"/></proof>
  </goal>
  <goal name="ind_sum_trans&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.20" steps="126900"/></proof>
  </goal>
  <goal name="ind_sum_trans&#39;vc.2" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="ind_sum_trans&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="1.04" steps="358156"/></proof>
   </goal>
   <goal name="ind_sum_trans&#39;vc.2.1" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ind_sum_to_int_iterate">
    <goal name="ind_sum_trans&#39;vc.2.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ind_sum_to_int_iterate">
     <goal name="ind_sum_trans&#39;vc.2.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ind_sum_to_int_iterate">
      <goal name="ind_sum_trans&#39;vc.2.1.0.0.0" expl="postcondition" proved="true">
      <transf name="instantiate" proved="true" arg1="int_iterate_transitivity" arg2="(fun (y0:complex) (y1:complex) -&gt; y0 +. y1),f,i,k,j">
       <goal name="ind_sum_trans&#39;vc.2.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="11"><result status="valid" time="0.31" steps="176440"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_plus_one&#39;vc" expl="VC for ind_sum_plus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_plus_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.12" steps="138386"/></proof>
  </goal>
  <goal name="ind_sum_plus_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.18" steps="142222"/></proof>
  </goal>
  <goal name="ind_sum_plus_one&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.37" steps="168882"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="real_ind_sum&#39;vc" expl="VC for real_ind_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_ind_sum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.16" steps="118022"/></proof>
  </goal>
  <goal name="real_ind_sum&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="real_ind_sum&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.21" steps="127053"/></proof>
   </goal>
   <goal name="real_ind_sum&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.13" steps="118051"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="real_ind_sum&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="127083"/></proof>
  </goal>
  <goal name="real_ind_sum&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.35" steps="133202"/></proof>
  </goal>
  <goal name="real_ind_sum&#39;vc.4" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="real_ind_sum&#39;vc.4.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.23" steps="127087"/></proof>
   </goal>
   <goal name="real_ind_sum&#39;vc.4.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.24" steps="127135"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="real_ind_sum&#39;vc.5" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.14" steps="118047"/></proof>
  </goal>
  <goal name="real_ind_sum&#39;vc.6" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.30" steps="134179"/></proof>
  </goal>
  <goal name="real_ind_sum&#39;vc.7" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.15" steps="118071"/></proof>
  </goal>
  <goal name="real_ind_sum&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="real_ind_sum&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.33" steps="133308"/></proof>
   </goal>
   <goal name="real_ind_sum&#39;vc.8.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.35" steps="135393"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="positive_ind_sum&#39;vc" expl="VC for positive_ind_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="positive_ind_sum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.15" steps="118214"/></proof>
  </goal>
  <goal name="positive_ind_sum&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.25" steps="127290"/></proof>
  </goal>
  <goal name="positive_ind_sum&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="127293"/></proof>
  </goal>
  <goal name="positive_ind_sum&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.30" steps="133572"/></proof>
  </goal>
  <goal name="positive_ind_sum&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.15" steps="118248"/></proof>
  </goal>
  <goal name="positive_ind_sum&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.35" steps="134782"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="positive_sum&#39;vc" expl="VC for positive_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="positive_sum&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.40" steps="169986"/></proof>
  </goal>
  <goal name="positive_sum&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.42" steps="170258"/></proof>
  </goal>
  <goal name="positive_sum&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.32" steps="164242"/></proof>
  </goal>
  <goal name="positive_sum&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.39" steps="173011"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_eq&#39;vc" expl="VC for ind_sum_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_eq&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.30" steps="174577"/></proof>
  </goal>
  <goal name="ind_sum_eq&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.19" steps="161713"/></proof>
  </goal>
  <goal name="ind_sum_eq&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.36" steps="169857"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_eq_del_bound&#39;vc" expl="VC for ind_sum_eq_del_bound" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_eq_del_bound&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.33" steps="134182"/></proof>
  </goal>
  <goal name="ind_sum_eq_del_bound&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.35" steps="135386"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_eq_del_bound_rev&#39;vc" expl="VC for ind_sum_eq_del_bound_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_eq_del_bound_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.33" steps="135437"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_eq_gen&#39;vc" expl="VC for ind_sum_eq_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_eq_gen&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.34" steps="134470"/></proof>
  </goal>
  <goal name="ind_sum_eq_gen&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.28" steps="128434"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_eq_bound&#39;vc" expl="VC for ind_sum_eq_bound" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_eq_bound&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.24" steps="134723"/></proof>
  </goal>
  <goal name="ind_sum_eq_bound&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.30" steps="128704"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_comp&#39;vc" expl="VC for ind_sum_comp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_comp&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.20" steps="144303"/></proof>
  </goal>
  <goal name="ind_sum_comp&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.33" steps="154317"/></proof>
  </goal>
  <goal name="ind_sum_comp&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.43" steps="376969"/></proof>
  </goal>
  <goal name="ind_sum_comp&#39;vc.3" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ind_sum_to_int_iterate">
   <goal name="ind_sum_comp&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(fun (k:int) -&gt; ((fun (y0:complex) (y1:complex) -&gt; y0 +. y1) @ (f @ k)) @ (g @ k))" arg2="(fun (k:int) -&gt; (f @ k) +. (g @ k))" arg3="in" arg4="Ensures">
    <goal name="ind_sum_comp&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures">
     <goal name="ind_sum_comp&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.36" steps="171081"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ind_sum_comp&#39;vc.3.0.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.43" steps="177827"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_comp_rev&#39;vc" expl="VC for ind_sum_comp_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_comp_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.90" steps="338069"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_to_iterate&#39;vc" expl="VC for ind_sum_to_iterate" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_to_iterate&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.18" steps="144801"/></proof>
  </goal>
  <goal name="ind_sum_to_iterate&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.34" steps="377092"/></proof>
  </goal>
  <goal name="ind_sum_to_iterate&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.33" steps="173388"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_to_sum&#39;vc" expl="VC for ind_sum_to_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_to_sum&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.32" steps="137444"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="map_ind_sum_eq&#39;vc" expl="VC for map_ind_sum_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="map_ind_sum_eq&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.33" steps="166493"/></proof>
  </goal>
  <goal name="map_ind_sum_eq&#39;vc.1" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ind_sum_to_sum">
   <goal name="map_ind_sum_eq&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ind_sum_to_sum">
    <goal name="map_ind_sum_eq&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(to_fset k l)" arg2="(map f (to_fset i j))">
     <goal name="map_ind_sum_eq&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.40" steps="201826"/></proof>
     </goal>
     <goal name="map_ind_sum_eq&#39;vc.1.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.36" steps="190349"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_scal&#39;vc" expl="VC for sum_scal" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="sum_scal&#39;vc.0" expl="VC for sum_scal" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_scal&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.13" steps="101560"/></proof>
   </goal>
   <goal name="sum_scal&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.15" steps="121547"/></proof>
   </goal>
   <goal name="sum_scal&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.31" steps="146192"/></proof>
   </goal>
   <goal name="sum_scal&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.29" steps="164863"/></proof>
   </goal>
   <goal name="sum_scal&#39;vc.0.4" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sum_scal&#39;vc.0.4.0" expl="variant decrease" proved="true">
    <proof prover="11"><result status="valid" time="0.35" steps="153227"/></proof>
    </goal>
    <goal name="sum_scal&#39;vc.0.4.1" expl="variant decrease" proved="true">
    <proof prover="11"><result status="valid" time="0.36" steps="153535"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sum_scal&#39;vc.0.5" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sum_scal&#39;vc.0.5.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.17" steps="131568"/></proof>
    </goal>
    <goal name="sum_scal&#39;vc.0.5.1" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(add (choose s) (remove (choose s) s))" arg2="s" arg3="in" arg4="Ensures2">
     <goal name="sum_scal&#39;vc.0.5.1.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures2">
      <goal name="sum_scal&#39;vc.0.5.1.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(add (choose s) (remove (choose s) s))" arg2="s" arg3="in" arg4="Ensures1">
       <goal name="sum_scal&#39;vc.0.5.1.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures1">
        <goal name="sum_scal&#39;vc.0.5.1.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="sum_scal&#39;vc.0.5.1.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="5"><result status="valid" time="0.24" steps="136825"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="sum_scal&#39;vc.0.5.1.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="0.26" steps="144024"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="sum_scal&#39;vc.0.5.1.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.27" steps="143907"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_scal_right&#39;vc" expl="VC for sum_scal_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_scal_right&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.14" steps="101761"/></proof>
  </goal>
  <goal name="sum_scal_right&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.13" steps="121926"/></proof>
  </goal>
  <goal name="sum_scal_right&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="146308"/></proof>
  </goal>
  <goal name="sum_scal_right&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.28" steps="165160"/></proof>
  </goal>
  <goal name="sum_scal_right&#39;vc.4" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_scal_right&#39;vc.4.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.34" steps="153545"/></proof>
   </goal>
   <goal name="sum_scal_right&#39;vc.4.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.33" steps="153863"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_scal_right&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_scal_right&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.17" steps="131955"/></proof>
   </goal>
   <goal name="sum_scal_right&#39;vc.5.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="sum_scal_right&#39;vc.5.1.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(add (choose s) (remove (choose s) s))" arg2="s" arg3="in" arg4="Ensures2">
     <goal name="sum_scal_right&#39;vc.5.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures2">
      <goal name="sum_scal_right&#39;vc.5.1.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(add (choose s) (remove (choose s) s))" arg2="s" arg3="in" arg4="Ensures1">
       <goal name="sum_scal_right&#39;vc.5.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures1">
        <goal name="sum_scal_right&#39;vc.5.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="sum_scal_right&#39;vc.5.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="mult_distr_add_l">
          <goal name="sum_scal_right&#39;vc.5.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="apply" proved="true" arg1="add_eq_t">
           <goal name="sum_scal_right&#39;vc.5.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="0.18" steps="134319"/></proof>
           </goal>
           <goal name="sum_scal_right&#39;vc.5.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures">
            <goal name="sum_scal_right&#39;vc.5.1.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="11"><result status="valid" time="0.18" steps="134312"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="sum_scal_right&#39;vc.5.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="0.27" steps="144418"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="sum_scal_right&#39;vc.5.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.32" steps="144300"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_scal_rev_right&#39;vc" expl="VC for sum_scal_rev_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_scal_rev_right&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.29" steps="129798"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_scal_rev&#39;vc" expl="VC for sum_scal_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_scal_rev&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="sum_scal_rev&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_scal&#39;vc" expl="VC for ind_sum_scal" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_scal&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ind_sum_to_sum">
   <goal name="ind_sum_scal&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ind_sum_to_sum">
    <goal name="ind_sum_scal&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="Ensures">
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_scal_rev&#39;vc" expl="VC for ind_sum_scal_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_scal_rev&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="ind_sum_scal_rev&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="scal_ind_sum&#39;vc" expl="VC for scal_ind_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="scal_ind_sum&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(ind_sum (fun (i1:int) -&gt; (f @ i1) *. a) i j)" arg2="(ind_sum (fun (i1:int) -&gt; a *. (f @ i1)) i j )">
   <goal name="scal_ind_sum&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="scal_ind_sum&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.27" steps="130991"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="scal_ind_sum&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="scal_ind_sum&#39;vc.0.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="ind_sum_scal_rev">
     <goal name="scal_ind_sum&#39;vc.0.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="ind_sum_eq">
      <goal name="scal_ind_sum&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="scal_ind_sum&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="scal_ind_sum&#39;vc.0.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.26" steps="131065"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="scal_ind_sum_rev&#39;vc" expl="VC for scal_ind_sum_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="scal_ind_sum_rev&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(ind_sum f i j *. a)" arg2="( a*. ind_sum f i j )">
   <goal name="scal_ind_sum_rev&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="scal_ind_sum_rev&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="ind_sum_eq">
     <goal name="scal_ind_sum_rev&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="scal_ind_sum_rev&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.24" steps="131292"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="scal_ind_sum_rev&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.29" steps="131123"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_scal_gen&#39;vc" expl="VC for sum_scal_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_scal_gen&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="sum_scal">
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_scal_gen&#39;vc" expl="VC for ind_sum_scal_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_scal_gen&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="ind_sum_scal">
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_commute&#39;vc" expl="VC for ind_sum_commute" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="ind_sum_commute&#39;vc.0" expl="VC for ind_sum_commute" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_sum_commute&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.20" steps="155149"/></proof>
   </goal>
   <goal name="ind_sum_commute&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="1.51" steps="389793"/></proof>
   </goal>
   <goal name="ind_sum_commute&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.21" steps="155428"/></proof>
   </goal>
   <goal name="ind_sum_commute&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.21" steps="155431"/></proof>
   </goal>
   <goal name="ind_sum_commute&#39;vc.0.4" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ind_sum_to_int_iterate">
    <goal name="ind_sum_commute&#39;vc.0.4.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ind_sum_to_int_iterate">
     <goal name="ind_sum_commute&#39;vc.0.4.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures">
      <goal name="ind_sum_commute&#39;vc.0.4.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ind_sum_to_int_iterate">
       <goal name="ind_sum_commute&#39;vc.0.4.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="ind_sum_to_int_iterate">
        <goal name="ind_sum_commute&#39;vc.0.4.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_hyp" proved="true" >
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_commute&#39;vc" expl="VC for sum_commute" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_commute&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.24" steps="155611"/></proof>
  </goal>
  <goal name="sum_commute&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.52" steps="408598"/></proof>
  </goal>
  <goal name="sum_commute&#39;vc.2" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="sum_commute&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="sum&#39;def">
    <goal name="sum_commute&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sum&#39;def">
     <goal name="sum_commute&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="sum&#39;def">
      <goal name="sum_commute&#39;vc.2.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="sum&#39;def">
       <goal name="sum_commute&#39;vc.2.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="(fun (a1:a) -&gt; iterate (fun (y0:complex) (y1:complex) -&gt; y0 +. y1) sb (f @ a1))" arg2="(fun (a1:a) -&gt;
    iterate (fun (y0:complex) (y1:complex) -&gt; y0 +. y1) sb (fun (a2:b) -&gt; (f @ a1) @ a2))">
        <goal name="sum_commute&#39;vc.2.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="Ensures">
        </transf>
        </goal>
        <goal name="sum_commute&#39;vc.2.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.53" steps="234548"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="non_c_zero&#39;vc" expl="VC for non_c_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="non_c_zero&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="non_c_zero&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.44" steps="217617"/></proof>
   </goal>
   <goal name="non_c_zero&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.42" steps="217643"/></proof>
   </goal>
   <goal name="non_c_zero&#39;vc.0.2" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="non_c_zero&#39;vc.0.2.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="nonn_part&#39;def" arg2="in" arg3="result&#39;def">
     <goal name="non_c_zero&#39;vc.0.2.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.74" steps="246288"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="get_non_c_zero_member&#39;vc" expl="VC for get_non_c_zero_member" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_non_c_zero_member&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.33" steps="168771"/></proof>
  </goal>
  <goal name="get_non_c_zero_member&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="get_non_c_zero_member&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.31" steps="168772"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_non_c_zero_member&#39;vc" expl="VC for set_non_c_zero_member" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_non_c_zero_member&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.32" steps="169073"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="set_non_c_zero_member_gen&#39;vc" expl="VC for set_non_c_zero_member_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_non_c_zero_member_gen&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.31" steps="169343"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="set_non_c_zero_member_gen_&#39;vc" expl="VC for set_non_c_zero_member_gen_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_non_c_zero_member_gen_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.35" steps="169631"/></proof>
  </goal>
  <goal name="set_non_c_zero_member_gen_&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.30" steps="169740"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_nullity_partition&#39;vc" expl="VC for sum_nullity_partition" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_nullity_partition&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.20" steps="157908"/></proof>
  </goal>
  <goal name="sum_nullity_partition&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.41" steps="398723"/></proof>
  </goal>
  <goal name="sum_nullity_partition&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.37" steps="192332"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="non_null_map&#39;vc" expl="VC for non_null_map" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="non_null_map&#39;vc.0" expl="VC for non_null_map" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="non_null_map&#39;vc.0.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_map_mem">
    <goal name="non_null_map&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="instantiate" proved="true" arg1="map_antec" arg2="f,s,e">
     <goal name="non_null_map&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="non_null_map&#39;vc.0.0.0.0.0" expl="destruct premise" proved="true">
      <proof prover="11"><result status="valid" time="0.36" steps="190287"/></proof>
      </goal>
      <goal name="non_null_map&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.44" steps="199230"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="non_null_map&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="1.20" steps="439322"/></proof>
   </goal>
   <goal name="non_null_map&#39;vc.0.2" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures">
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="map_sum_eq_nonnull&#39;vc" expl="VC for map_sum_eq_nonnull" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="map_sum_eq_nonnull&#39;vc.0" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Requires">
  </transf>
  </goal>
  <goal name="map_sum_eq_nonnull&#39;vc.1" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures1">
  </transf>
  </goal>
  <goal name="map_sum_eq_nonnull&#39;vc.2" expl="assertion" proved="true">
  <transf name="apply" proved="true" arg1="Ensures2">
  </transf>
  </goal>
  <goal name="map_sum_eq_nonnull&#39;vc.3" expl="precondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="map_sum_eq_nonnull&#39;vc.3.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="non_c_zero&#39;def">
    <goal name="map_sum_eq_nonnull&#39;vc.3.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="nonn_part&#39;def">
     <goal name="map_sum_eq_nonnull&#39;vc.3.0.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="set_filter">
      <goal name="map_sum_eq_nonnull&#39;vc.3.0.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="map_sum_eq_nonnull&#39;vc.3.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="0.16" steps="825083"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="map_sum_eq_nonnull&#39;vc.3.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="10"><result status="valid" time="0.54" steps="3447158"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="map_sum_eq_nonnull&#39;vc.4" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_map_mem">
   <goal name="map_sum_eq_nonnull&#39;vc.4.0" expl="apply premises" proved="true">
   <transf name="assert" proved="true" arg1="(mem e (map f s))">
    <goal name="map_sum_eq_nonnull&#39;vc.4.0.0" expl="asserted formula" proved="true">
    <proof prover="11"><result status="valid" time="0.37" steps="194477"/></proof>
    </goal>
    <goal name="map_sum_eq_nonnull&#39;vc.4.0.1" expl="apply premises" proved="true">
    <transf name="instantiate" proved="true" arg1="map_antec" arg2="f,s,e">
     <goal name="map_sum_eq_nonnull&#39;vc.4.0.1.0" expl="apply premises" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="map_sum_eq_nonnull&#39;vc.4.0.1.0.0" expl="destruct premise" proved="true">
      <transf name="apply" proved="true" arg1="h">
      </transf>
      </goal>
      <goal name="map_sum_eq_nonnull&#39;vc.4.0.1.0.1" expl="apply premises" proved="true">
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="map_sum_eq_nonnull&#39;vc.4.0.1.0.1.0" expl="apply premises" proved="true">
       <transf name="exists" proved="true" arg1="a">
        <goal name="map_sum_eq_nonnull&#39;vc.4.0.1.0.1.0.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="map_sum_eq_nonnull&#39;vc.4.0.1.0.1.0.0.0" proved="true">
         <proof prover="11"><result status="valid" time="0.60" steps="209389"/></proof>
         </goal>
         <goal name="map_sum_eq_nonnull&#39;vc.4.0.1.0.1.0.0.1" proved="true">
         <proof prover="11"><result status="valid" time="0.21" steps="183165"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="map_sum_eq_nonnull&#39;vc.5" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="map_sum_eq_nonnull&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Assert">
    <goal name="map_sum_eq_nonnull&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_null_but_one&#39;vc" expl="VC for sum_null_but_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_null_but_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.27" steps="218318"/></proof>
  </goal>
  <goal name="sum_null_but_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.85" steps="464566"/></proof>
  </goal>
  <goal name="sum_null_but_one&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.27" steps="218558"/></proof>
  </goal>
  <goal name="sum_null_but_one&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.62" steps="238694"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_null&#39;vc" expl="VC for sum_null" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_null&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.82" steps="462506"/></proof>
  </goal>
  <goal name="sum_null&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.27" steps="218870"/></proof>
  </goal>
  <goal name="sum_null&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.27" steps="218873"/></proof>
  </goal>
  <goal name="sum_null&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.57" steps="239757"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_null_&#39;vc" expl="VC for sum_null_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_null_&#39;vc.0" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(is_empty (non_c_zero s t))">
   <goal name="sum_null_&#39;vc.0.0" expl="asserted formula" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="sum_null_&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="apply" proved="true" arg1="set_empty">
     <goal name="sum_null_&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="sum_null_&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.47" steps="205731"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sum_null_&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.32" steps="176299"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_null_&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.19" steps="163225"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_null_forall&#39;vc" expl="VC for sum_null_forall" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_null_forall&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.39" steps="177691"/></proof>
  </goal>
  <goal name="sum_null_forall&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_null_forall&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.52" steps="188448"/></proof>
   </goal>
   <goal name="sum_null_forall&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.47" steps="188748"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_null_forall&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.43" steps="188846"/></proof>
  </goal>
  <goal name="sum_null_forall&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.50" steps="188906"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_null&#39;vc" expl="VC for ind_sum_null" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_null&#39;vc.0" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(is_empty (non_c_zero (to_fset i j) t) )">
   <goal name="ind_sum_null&#39;vc.0.0" expl="asserted formula" proved="true">
   <proof prover="10"><result status="valid" time="0.59" steps="2910304"/></proof>
   </goal>
   <goal name="ind_sum_null&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.34" steps="182110"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_sum_null&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.36" steps="184057"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_null_but_one_elt&#39;vc" expl="VC for sum_null_but_one_elt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_null_but_one_elt&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_null_but_one_elt&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.44" steps="181640"/></proof>
   </goal>
   <goal name="sum_null_but_one_elt&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.36" steps="173249"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_null_but_one_elt&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.27" steps="166113"/></proof>
  </goal>
  <goal name="sum_null_but_one_elt&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="222345"/></proof>
  </goal>
  <goal name="sum_null_but_one_elt&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.86" steps="478154"/></proof>
  </goal>
  <goal name="sum_null_but_one_elt&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.19" steps="222585"/></proof>
  </goal>
  <goal name="sum_null_but_one_elt&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.48" steps="233369"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_null_but_maybe_one_elt&#39;vc" expl="VC for sum_null_but_maybe_one_elt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_null_but_maybe_one_elt&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="2.12" steps="469550"/></proof>
  </goal>
  <goal name="sum_null_but_maybe_one_elt&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.34" steps="216526"/></proof>
  </goal>
  <goal name="sum_null_but_maybe_one_elt&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="sum_null_but_maybe_one_elt&#39;vc.2.0" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(is_empty (non_c_zero s t))">
    <goal name="sum_null_but_maybe_one_elt&#39;vc.2.0.0" expl="asserted formula" proved="true">
    <transf name="apply" proved="true" arg1="set_empty">
     <goal name="sum_null_but_maybe_one_elt&#39;vc.2.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="sum_null_but_maybe_one_elt&#39;vc.2.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.65" steps="300375"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="sum_null_but_maybe_one_elt&#39;vc.2.0.1" expl="precondition" proved="true">
    <proof prover="11"><result status="valid" time="0.64" steps="271092"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sum_null_but_maybe_one_elt&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_null_but_maybe_one_elt&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.37" steps="173767"/></proof>
   </goal>
   <goal name="sum_null_but_maybe_one_elt&#39;vc.3.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.19" steps="162472"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_null_but_maybe_one_elt&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_null_but_maybe_one_elt&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.49" steps="181823"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_null_but_maybe_one_elt&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_null_but_maybe_one_elt&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.58" steps="238580"/></proof>
   </goal>
   <goal name="sum_null_but_maybe_one_elt&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.28" steps="175921"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_null_but_maybe_two_elt&#39;vc" expl="VC for sum_null_but_maybe_two_elt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_null_but_maybe_two_elt&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.36" steps="175098"/></proof>
  </goal>
  <goal name="sum_null_but_maybe_two_elt&#39;vc.1" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(not elt = elt&#39;)">
   <goal name="sum_null_but_maybe_two_elt&#39;vc.1.0" expl="asserted formula" proved="true">
   <proof prover="11"><result status="valid" time="0.18" steps="166670"/></proof>
   </goal>
   <goal name="sum_null_but_maybe_two_elt&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.32" steps="178098"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_null_but_maybe_two_elt&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="187587"/></proof>
  </goal>
  <goal name="sum_null_but_maybe_two_elt&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.33" steps="178888"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_null_but_maybe_one_elt&#39;vc" expl="VC for ind_sum_null_but_maybe_one_elt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_null_but_maybe_one_elt&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="191181"/></proof>
  </goal>
  <goal name="ind_sum_null_but_maybe_one_elt&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.44" steps="191932"/></proof>
  </goal>
  <goal name="ind_sum_null_but_maybe_one_elt&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.36" steps="186136"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_null_but_maybe_two_elt&#39;vc" expl="VC for ind_sum_null_but_maybe_two_elt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_null_but_maybe_two_elt&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.44" steps="191650"/></proof>
  </goal>
  <goal name="ind_sum_null_but_maybe_two_elt&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.50" steps="192026"/></proof>
  </goal>
  <goal name="ind_sum_null_but_maybe_two_elt&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="172631"/></proof>
  </goal>
  <goal name="ind_sum_null_but_maybe_two_elt&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.48" steps="192921"/></proof>
  </goal>
  <goal name="ind_sum_null_but_maybe_two_elt&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.37" steps="186623"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_map_filter&#39;vc" expl="VC for ind_sum_map_filter" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_map_filter&#39;vc.0" expl="precondition" proved="true">
  <proof prover="10"><result status="valid" time="0.52" steps="3476287"/></proof>
  </goal>
  <goal name="ind_sum_map_filter&#39;vc.1" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_map_mem">
   <goal name="ind_sum_map_filter&#39;vc.1.0" expl="apply premises" proved="true">
   <transf name="instantiate" proved="true" arg1="Requires" arg2="e">
    <goal name="ind_sum_map_filter&#39;vc.1.0.0" expl="apply premises" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="ind_sum_map_filter&#39;vc.1.0.0.0" expl="destruct premise" proved="true">
     <proof prover="11"><result status="valid" time="2.49" steps="836385"/></proof>
     </goal>
     <goal name="ind_sum_map_filter&#39;vc.1.0.0.1" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="ind_sum_map_filter&#39;vc.1.0.0.1.0" expl="apply premises" proved="true">
      <transf name="destruct" proved="true" arg1="Hinst1">
       <goal name="ind_sum_map_filter&#39;vc.1.0.0.1.0.0" expl="destruct premise" proved="true">
       <proof prover="11"><result status="valid" time="0.56" steps="285034"/></proof>
       </goal>
       <goal name="ind_sum_map_filter&#39;vc.1.0.0.1.0.1" expl="apply premises" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst1">
        <goal name="ind_sum_map_filter&#39;vc.1.0.0.1.0.1.0" expl="apply premises" proved="true">
        <transf name="exists" proved="true" arg1="ant">
         <goal name="ind_sum_map_filter&#39;vc.1.0.0.1.0.1.0.0" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="ind_sum_map_filter&#39;vc.1.0.0.1.0.1.0.0.0" proved="true">
          <proof prover="11"><result status="valid" time="0.70" steps="299855"/></proof>
          </goal>
          <goal name="ind_sum_map_filter&#39;vc.1.0.0.1.0.1.0.0.1" proved="true">
          <proof prover="11"><result status="valid" time="0.32" steps="270339"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ind_sum_map_filter&#39;vc.2" expl="precondition" proved="true">
  <transf name="instantiate" proved="true" arg1="map_antec" arg2="g,(to_fset 0 n&#39;),e">
   <goal name="ind_sum_map_filter&#39;vc.2.0" expl="precondition" proved="true">
   <transf name="destruct" proved="true" arg1="Hinst">
    <goal name="ind_sum_map_filter&#39;vc.2.0.0" expl="destruct premise" proved="true">
    <proof prover="11"><result status="valid" time="0.26" steps="229205"/></proof>
    </goal>
    <goal name="ind_sum_map_filter&#39;vc.2.0.1" expl="precondition" proved="true">
    <transf name="instantiate" proved="true" arg1="Requires" arg2="e">
     <goal name="ind_sum_map_filter&#39;vc.2.0.1.0" expl="precondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="ind_sum_map_filter&#39;vc.2.0.1.0.0" expl="precondition" proved="true">
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="ind_sum_map_filter&#39;vc.2.0.1.0.0.0" expl="destruct premise" proved="true">
       <proof prover="11"><result status="valid" time="1.73" steps="563257"/></proof>
       </goal>
       <goal name="ind_sum_map_filter&#39;vc.2.0.1.0.0.1" expl="precondition" proved="true">
       <transf name="apply" proved="true" arg1="in_my_filter">
        <goal name="ind_sum_map_filter&#39;vc.2.0.1.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.75" steps="300320"/></proof>
        </goal>
        <goal name="ind_sum_map_filter&#39;vc.2.0.1.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.70" steps="302375"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ind_sum_map_filter&#39;vc.3" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(is_empty (non_c_zero (my_filter (to_fset 0 n) (fun (x:int) -&gt; not (p @ x) = True)) f))">
   <goal name="ind_sum_map_filter&#39;vc.3.0" expl="asserted formula" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="ind_sum_map_filter&#39;vc.3.0.0" expl="asserted formula" proved="true">
    <transf name="apply" proved="true" arg1="set_empty">
     <goal name="ind_sum_map_filter&#39;vc.3.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="ind_sum_map_filter&#39;vc.3.0.0.0.0" expl="apply premises" proved="true">
      <transf name="case" proved="true" arg1="(mem e (to_fset 0 n))">
       <goal name="ind_sum_map_filter&#39;vc.3.0.0.0.0.0" expl="true case (apply premises)" proved="true">
       <transf name="case" proved="true" arg1="(p e)">
        <goal name="ind_sum_map_filter&#39;vc.3.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
        <transf name="assert" proved="true" arg1="(not (mem e (my_filter (to_fset 0 n) (fun (x:int) -&gt; not (p @ x) = True))))">
         <goal name="ind_sum_map_filter&#39;vc.3.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
         <proof prover="11"><result status="valid" time="0.69" steps="288721"/></proof>
         </goal>
         <goal name="ind_sum_map_filter&#39;vc.3.0.0.0.0.0.0.1" expl="true case (apply premises)" proved="true">
         <transf name="assert" proved="true" arg1="(not (fun (x:int) -&gt; not (p @ x) = True) e)">
          <goal name="ind_sum_map_filter&#39;vc.3.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
          <proof prover="11"><result status="valid" time="0.59" steps="286446"/></proof>
          </goal>
          <goal name="ind_sum_map_filter&#39;vc.3.0.0.0.0.0.0.1.1" expl="true case (apply premises)" proved="true">
          <transf name="assert" proved="true" arg1="(not (mem e (my_filter (to_fset 0 n) (fun (x:int) -&gt; not (p @ x) = True))))">
           <goal name="ind_sum_map_filter&#39;vc.3.0.0.0.0.0.0.1.1.0" expl="asserted formula" proved="true">
           <proof prover="11"><result status="valid" time="0.59" steps="289958"/></proof>
           </goal>
           <goal name="ind_sum_map_filter&#39;vc.3.0.0.0.0.0.0.1.1.1" expl="true case (apply premises)" proved="true">
           <proof prover="11"><result status="valid" time="1.08" steps="366442"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="ind_sum_map_filter&#39;vc.3.0.0.0.0.0.1" expl="false case (true case. apply premises)" proved="true">
        <proof prover="11"><result status="valid" time="0.76" steps="305235"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="ind_sum_map_filter&#39;vc.3.0.0.0.0.1" expl="false case (apply premises)" proved="true">
       <proof prover="11"><result status="valid" time="0.87" steps="305424"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="ind_sum_map_filter&#39;vc.3.1" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(forall s : set int. is_empty s -&gt; cardinal s = 0)">
    <goal name="ind_sum_map_filter&#39;vc.3.1.0" expl="asserted formula" proved="true">
    <proof prover="11"><result status="valid" time="0.46" steps="243413"/></proof>
    </goal>
    <goal name="ind_sum_map_filter&#39;vc.3.1.1" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="h">
     <goal name="ind_sum_map_filter&#39;vc.3.1.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="h1">
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ind_sum_map_filter&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="229834"/></proof>
  </goal>
  <goal name="ind_sum_map_filter&#39;vc.5" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ind_sum_to_sum">
   <goal name="ind_sum_map_filter&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(union (my_filter (to_fset 0 n) p)
   (my_filter (to_fset 0 n) (fun (x:int) -&gt; not (p @ x) = True)))" arg2="(to_fset 0 n)" arg3="in" arg4="Ensures19">
    <goal name="ind_sum_map_filter&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures19">
     <goal name="ind_sum_map_filter&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="add_zero_t">
      <goal name="ind_sum_map_filter&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ind_sum_to_sum">
       <goal name="ind_sum_map_filter&#39;vc.5.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="(my_filter (to_fset 0 n) p)" arg2="(map g (to_fset 0 n&#39;))">
        <goal name="ind_sum_map_filter&#39;vc.5.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="Ensures">
        </transf>
        </goal>
        <goal name="ind_sum_map_filter&#39;vc.5.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.28" steps="228391"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="ind_sum_map_filter&#39;vc.5.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="sum_null_">
       <goal name="ind_sum_map_filter&#39;vc.5.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="ind_sum_map_filter&#39;vc.5.0.0.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="10"><result status="valid" time="0.71" steps="3821035"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="ind_sum_map_filter&#39;vc.5.0.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="2.51" steps="796309"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_c_one&#39;vc" expl="VC for neutral_c_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="neutral_c_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.49" steps="399125"/></proof>
  </goal>
  <goal name="neutral_c_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.19" steps="399078"/></proof>
  </goal>
  <goal name="neutral_c_one&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.49" steps="399161"/></proof>
  </goal>
  <goal name="neutral_c_one&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="160966"/></proof>
  </goal>
  <goal name="neutral_c_one&#39;vc.4" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="neutral_c_one&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="iterable&#39;def">
    <goal name="neutral_c_one&#39;vc.4.0.0" expl="VC for neutral_c_one" proved="true">
    <transf name="exists" proved="true" arg1="c_one">
     <goal name="neutral_c_one&#39;vc.4.0.0.0" proved="true">
     <proof prover="11"><result status="valid" time="0.44" steps="180646"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="product_iter&#39;vc" expl="VC for product_iter" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="product_iter&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.35" steps="172046"/></proof>
  </goal>
  <goal name="product_iter&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="product_iter&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.32" steps="172036"/></proof>
   </goal>
   <goal name="product_iter&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.32" steps="172031"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="product_iter&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="product_iter&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="1.30" steps="405564"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="product_iter&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="product_iter&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.37" steps="176902"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="product&#39;vc" expl="VC for product" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="product&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="165162"/></proof>
  </goal>
  <goal name="product&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.22" steps="171377"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="product_eq&#39;vc" expl="VC for product_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="product_eq&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.34" steps="231385"/></proof>
  </goal>
  <goal name="product_eq&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="222460"/></proof>
  </goal>
  <goal name="product_eq&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.27" steps="225611"/></proof>
  </goal>
  <goal name="product_eq&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.49" steps="235800"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="product_eq_gen&#39;vc" expl="VC for product_eq_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="product_eq_gen&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.38" steps="181262"/></proof>
  </goal>
  <goal name="product_eq_gen&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.34" steps="181273"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="product_empty&#39;vc" expl="VC for product_empty" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="product_empty&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.13" steps="165616"/></proof>
  </goal>
  <goal name="product_empty&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="171223"/></proof>
  </goal>
  <goal name="product_empty&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="172231"/></proof>
  </goal>
  <goal name="product_empty&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.39" steps="205932"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="product_iter_&#39;vc" expl="VC for product_iter_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="product_iter_&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.19" steps="161529"/></proof>
  </goal>
  <goal name="product_iter_&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.19" steps="166860"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_product&#39;vc" expl="VC for add_product" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_product&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="205769"/></proof>
  </goal>
  <goal name="add_product&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="206785"/></proof>
  </goal>
  <goal name="add_product&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="206786"/></proof>
  </goal>
  <goal name="add_product&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.47" steps="238516"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="product_add&#39;vc" expl="VC for product_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="product_add&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.44" steps="190733"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="neutral_one" proved="true">
 <proof prover="11"><result status="valid" time="0.34" steps="174228"/></proof>
 </goal>
 <goal name="ind_product&#39;vc" expl="VC for ind_product" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_product&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.19" steps="167311"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_product_eq&#39;vc" expl="VC for ind_product_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_product_eq&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.35" steps="205021"/></proof>
  </goal>
  <goal name="ind_product_eq&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.20" steps="190300"/></proof>
  </goal>
  <goal name="ind_product_eq&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.40" steps="199836"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_product_cardone&#39;vc" expl="VC for ind_product_cardone" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_product_cardone&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.13" steps="162077"/></proof>
  </goal>
  <goal name="ind_product_cardone&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.39" steps="199419"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_product_eq_gen&#39;vc" expl="VC for ind_product_eq_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_product_eq_gen&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.37" steps="157951"/></proof>
  </goal>
  <goal name="ind_product_eq_gen&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.32" steps="151385"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_product_right_extension&#39;vc" expl="VC for ind_product_right_extension" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_product_right_extension&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="181141"/></proof>
  </goal>
  <goal name="ind_product_right_extension&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="168092"/></proof>
  </goal>
  <goal name="ind_product_right_extension&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.41" steps="200602"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_product_left_extension&#39;vc" expl="VC for ind_product_left_extension" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_product_left_extension&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.34" steps="1508924"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_product_to_product&#39;vc" expl="VC for ind_product_to_product" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_product_to_product&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.23" steps="387194"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="map_product_eq&#39;vc" expl="VC for map_product_eq" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="map_product_eq&#39;vc.0" expl="VC for map_product_eq" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="map_product_eq&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.23" steps="192989"/></proof>
   </goal>
   <goal name="map_product_eq&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.24" steps="193380"/></proof>
   </goal>
   <goal name="map_product_eq&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.23" steps="193383"/></proof>
   </goal>
   <goal name="map_product_eq&#39;vc.0.3" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="map_product_eq&#39;vc.0.3.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="5.88" steps="2053627"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="map_ind_product_eq&#39;vc" expl="VC for map_ind_product_eq" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="map_ind_product_eq&#39;vc.0" expl="VC for map_ind_product_eq" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="map_ind_product_eq&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.20" steps="178873"/></proof>
   </goal>
   <goal name="map_ind_product_eq&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.20" steps="179704"/></proof>
   </goal>
   <goal name="map_ind_product_eq&#39;vc.0.2" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ind_product t k l)" arg2="( product (map f (to_fset i j)) t)">
    <goal name="map_ind_product_eq&#39;vc.0.2.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures">
     <goal name="map_ind_product_eq&#39;vc.0.2.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="Ensures2">
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="map_ind_product_eq&#39;vc.0.2.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.39" steps="217418"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_product_right_extension_comm&#39;vc" expl="VC for ind_product_right_extension_comm" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_product_right_extension_comm&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.36" steps="160290"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_product_eq_func&#39;vc" expl="VC for ind_product_eq_func" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_product_eq_func&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_product_eq_func&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.22" steps="194261"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_product_eq_func&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.24" steps="194487"/></proof>
  </goal>
  <goal name="ind_product_eq_func&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="194490"/></proof>
  </goal>
  <goal name="ind_product_eq_func&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.22" steps="194493"/></proof>
  </goal>
  <goal name="ind_product_eq_func&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.24" steps="194496"/></proof>
  </goal>
  <goal name="ind_product_eq_func&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.31" steps="203809"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_product_trans&#39;vc" expl="VC for ind_product_trans" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_product_trans&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.19" steps="169681"/></proof>
  </goal>
  <goal name="ind_product_trans&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.22" steps="169684"/></proof>
  </goal>
  <goal name="ind_product_trans&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.35" steps="181445"/></proof>
  </goal>
  <goal name="ind_product_trans&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_product_trans&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.22" steps="169811"/></proof>
   </goal>
   <goal name="ind_product_trans&#39;vc.3.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.18" steps="169811"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_product_trans&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.40" steps="202516"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_product_zero_pre&#39;vc" expl="VC for ind_product_zero_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_product_zero_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.16" steps="142296"/></proof>
  </goal>
  <goal name="ind_product_zero_pre&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_product_zero_pre&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.29" steps="153359"/></proof>
   </goal>
   <goal name="ind_product_zero_pre&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.16" steps="142361"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_product_zero_pre&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.44" steps="163131"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_product_zero&#39;vc" expl="VC for ind_product_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_product_zero&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_product_zero&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.40" steps="160281"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_product_zero_elt&#39;vc" expl="VC for ind_product_zero_elt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_product_zero_elt&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.39" steps="160661"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_product_const_c_one&#39;vc" expl="VC for ind_product_const_c_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_product_const_c_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.31" steps="154220"/></proof>
  </goal>
  <goal name="ind_product_const_c_one&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_product_const_c_one&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.17" steps="143083"/></proof>
   </goal>
   <goal name="ind_product_const_c_one&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.19" steps="143092"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_product_const_c_one&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="154306"/></proof>
  </goal>
  <goal name="ind_product_const_c_one&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.40" steps="162257"/></proof>
  </goal>
  <goal name="ind_product_const_c_one&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.11" steps="399659"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_filter_decomp&#39;vc" expl="VC for sum_filter_decomp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_filter_decomp&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.66" steps="272079"/></proof>
  </goal>
  <goal name="sum_filter_decomp&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_filter_decomp&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.48" steps="265361"/></proof>
   </goal>
   <goal name="sum_filter_decomp&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.62" steps="274158"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_filter_decomp&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_filter_decomp&#39;vc.2.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="sum_filter_decomp&#39;vc.2.0.0" expl="precondition" proved="true">
    <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
     <goal name="sum_filter_decomp&#39;vc.2.0.0.0" expl="precondition" proved="true">
     <transf name="instantiate" proved="true" arg1="Requires2" arg2="e">
      <goal name="sum_filter_decomp&#39;vc.2.0.0.0.0" expl="precondition" proved="true">
      <transf name="destruct" proved="true" arg1="Hinst">
       <goal name="sum_filter_decomp&#39;vc.2.0.0.0.0.0" expl="destruct premise" proved="true">
       <proof prover="11"><result status="valid" time="0.37" steps="291904"/></proof>
       </goal>
       <goal name="sum_filter_decomp&#39;vc.2.0.0.0.0.1" expl="precondition" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="sum_filter_decomp&#39;vc.2.0.0.0.0.1.0" expl="destruct premise" proved="true">
        <proof prover="11"><result status="valid" time="0.35" steps="291908"/></proof>
        </goal>
        <goal name="sum_filter_decomp&#39;vc.2.0.0.0.0.1.1" expl="precondition" proved="true">
        <proof prover="11"><result status="valid" time="0.91" steps="345957"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sum_filter_decomp&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="1.00" steps="362110"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_filter_decomp&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.85" steps="323711"/></proof>
  </goal>
  <goal name="sum_filter_decomp&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="sum_filter_decomp&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_empty1">
    <goal name="sum_filter_decomp&#39;vc.4.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sum_filter_decomp&#39;vc.4.0.0.0" expl="apply premises" proved="true">
     <transf name="case" proved="true" arg1="(mem e (my_filter s2
        (fun (x:b) -&gt; (p1 @ x) = True /\ not ((p @ choose s) @ x) = True)))">
      <goal name="sum_filter_decomp&#39;vc.4.0.0.0.0" expl="true case (apply premises)" proved="true">
      <proof prover="11"><result status="valid" time="1.18" steps="448153"/></proof>
      </goal>
      <goal name="sum_filter_decomp&#39;vc.4.0.0.0.1" expl="false case (apply premises)" proved="true">
      <proof prover="11"><result status="valid" time="1.83" steps="648801"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sum_filter_decomp&#39;vc.5" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="sum_filter_decomp&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="sum_null">
    <goal name="sum_filter_decomp&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sum_empty">
     <goal name="sum_filter_decomp&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.25" steps="248815"/></proof>
     </goal>
     <goal name="sum_filter_decomp&#39;vc.5.0.0.1" expl="rewrite premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="sum_filter_decomp&#39;vc.5.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="set_empty">
       <goal name="sum_filter_decomp&#39;vc.5.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="sum_filter_decomp&#39;vc.5.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="case" proved="true" arg1="(mem e (my_filter s2 p1))">
         <goal name="sum_filter_decomp&#39;vc.5.0.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
         <transf name="assert" proved="true" arg1="(exists e&#39;:a. mem e&#39; s /\ ((p @ e&#39;) @ e) = True)">
          <goal name="sum_filter_decomp&#39;vc.5.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="11"><result status="valid" time="1.69" steps="535419"/></proof>
          </goal>
          <goal name="sum_filter_decomp&#39;vc.5.0.0.1.0.0.0.0.1" expl="true case (apply premises)" proved="true">
          <proof prover="11"><result status="valid" time="0.77" steps="314436"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sum_filter_decomp&#39;vc.5.0.0.1.0.0.0.1" expl="false case (apply premises)" proved="true">
         <proof prover="11"><result status="valid" time="0.31" steps="290352"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="sum_filter_decomp&#39;vc.5.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="1.03" steps="336694"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sum_filter_decomp&#39;vc.5.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="sum_filter_decomp&#39;vc.5.1.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="H">
     <goal name="sum_filter_decomp&#39;vc.5.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="sum_one">
      <goal name="sum_filter_decomp&#39;vc.5.1.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="sum_filter_decomp&#39;vc.5.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="sum_eq_gen">
        <goal name="sum_filter_decomp&#39;vc.5.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="set_equal">
         <goal name="sum_filter_decomp&#39;vc.5.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="sum_filter_decomp&#39;vc.5.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.79" steps="366023"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sum_filter_decomp&#39;vc.5.1.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="sum_filter_decomp&#39;vc.5.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="assert" proved="true" arg1="(exists e&#39;:a. mem e&#39; s /\ ((p @ e&#39;) @ e) = True)">
           <goal name="sum_filter_decomp&#39;vc.5.1.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
           <proof prover="11"><result status="valid" time="1.32" steps="548646"/></proof>
           </goal>
           <goal name="sum_filter_decomp&#39;vc.5.1.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="0.59" steps="275720"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="sum_filter_decomp&#39;vc.5.1.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.24" steps="248830"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="sum_filter_decomp&#39;vc.5.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.24" steps="248832"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="sum_filter_decomp&#39;vc.5.1.0.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="sum_filter_decomp&#39;vc.5.1.0.1.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(my_filter s2 p1)" arg2="(union
   (my_filter s2
    (fun (x:b) -&gt; (p1 @ x) = True /\ not ((p @ choose s) @ x) = True))
   (my_filter s2 (p @ choose s)))">
       <goal name="sum_filter_decomp&#39;vc.5.1.0.1.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures">
        <goal name="sum_filter_decomp&#39;vc.5.1.0.1.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="sum_plus_one">
         <goal name="sum_filter_decomp&#39;vc.5.1.0.1.0.0.0.0" expl="postcondition" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="sum_filter_decomp&#39;vc.5.1.0.1.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="apply" proved="true" arg1="add_eq_t_rev">
           <goal name="sum_filter_decomp&#39;vc.5.1.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="0.31" steps="303127"/></proof>
           </goal>
           <goal name="sum_filter_decomp&#39;vc.5.1.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="1.61" steps="728038"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="sum_filter_decomp&#39;vc.5.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="0.32" steps="303131"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="sum_filter_decomp&#39;vc.5.1.0.1.0.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="set_equal">
        <goal name="sum_filter_decomp&#39;vc.5.1.0.1.0.1.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="sum_filter_decomp&#39;vc.5.1.0.1.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="11"><result status="valid" time="1.27" steps="562492"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="sum_filter_decomp&#39;vc.5.1.0.1.0.1.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="sum_filter_decomp&#39;vc.5.1.0.1.0.1.1.0" expl="apply premises" proved="true">
         <proof prover="11"><result status="valid" time="1.88" steps="842737"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Indic" proved="true">
 <goal name="indic&#39;vc" expl="VC for indic" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="indic&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.16" steps="121730"/></proof>
  </goal>
  <goal name="indic&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.22" steps="127625"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="get_indic&#39;vc" expl="VC for get_indic" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_indic&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.30" steps="134665"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="indic_bool&#39;vc" expl="VC for indic_bool" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="indic_bool&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.13" steps="117918"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="indic_comm&#39;vc" expl="VC for indic_comm" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="indic_comm&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="135159"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="indic_transl_r&#39;vc" expl="VC for indic_transl_r" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="indic_transl_r&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.16" steps="122687"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="indic_transl_l&#39;vc" expl="VC for indic_transl_l" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="indic_transl_l&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.16" steps="122868"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="indic_2&#39;vc" expl="VC for indic_2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="indic_2&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.32" steps="137218"/></proof>
  </goal>
  <goal name="indic_2&#39;vc.1" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.32" steps="137198"/></proof>
  </goal>
  <goal name="indic_2&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="indic_2&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.23" steps="130105"/></proof>
   </goal>
   <goal name="indic_2&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.24" steps="130107"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="indic_2&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="indic_2&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.36" steps="143276"/></proof>
   </goal>
   <goal name="indic_2&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.37" steps="143791"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="indic_2_if&#39;vc" expl="VC for indic_2_if" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="indic_2_if&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="indic_2_if&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="indic_2_if&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="indic_2&#39;spec">
     <goal name="indic_2_if&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.54" steps="170566"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="indic_2_comm&#39;vc" expl="VC for indic_2_comm" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="indic_2_comm&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.35" steps="136596"/></proof>
  </goal>
  <goal name="indic_2_comm&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.31" steps="136734"/></proof>
  </goal>
  <goal name="indic_2_comm&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.30" steps="136855"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_indic&#39;vc" expl="VC for sum_indic" proved="true">
 <proof prover="11"><result status="valid" time="0.10" steps="118788"/></proof>
 </goal>
 <goal name="ind_sum_indic&#39;vc" expl="VC for ind_sum_indic" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_indic&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="ind_sum_indic&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="sum_indic&#39;def">
    <goal name="ind_sum_indic&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ind_sum_to_sum">
     <goal name="ind_sum_indic&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.39" steps="172779"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_indic_t&#39;vc" expl="VC for sum_indic_t" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="sum_indic_t&#39;vc.0" expl="VC for sum_indic_t" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_indic_t&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.20" steps="159931"/></proof>
   </goal>
   <goal name="sum_indic_t&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="1.34" steps="457498"/></proof>
   </goal>
   <goal name="sum_indic_t&#39;vc.0.2" expl="postcondition" proved="true">
   <transf name="compute_hyp" proved="true" arg1="in" arg2="Ensures">
    <goal name="sum_indic_t&#39;vc.0.2.0" expl="postcondition" proved="true">
    <transf name="compute_hyp" proved="true" >
     <goal name="sum_indic_t&#39;vc.0.2.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures">
      <goal name="sum_indic_t&#39;vc.0.2.0.0.0" expl="postcondition" proved="true">
      <proof prover="11"><result status="valid" time="0.49" steps="247378"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_indic_ts&#39;vc" expl="VC for sum_indic_ts" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_indic_ts&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="160112"/></proof>
  </goal>
  <goal name="sum_indic_ts&#39;vc.1" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="sum_indic_ts&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="sum_indic&#39;def" arg2="in" arg3="Ensures">
    <goal name="sum_indic_ts&#39;vc.1.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.51" steps="204561"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_indic_t&#39;vc" expl="VC for ind_sum_indic_t" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_indic_t&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.44" steps="185592"/></proof>
  </goal>
  <goal name="ind_sum_indic_t&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.51" steps="209317"/></proof>
  </goal>
  <goal name="ind_sum_indic_t&#39;vc.2" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ind_sum_indic&#39;spec" arg2="in" arg3="Ensures">
   <goal name="ind_sum_indic_t&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ind_sum_to_sum">
    <goal name="ind_sum_indic_t&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="ind_sum_indic_t&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="sum_indic&#39;def" arg2="in" arg3="Ensures">
      <goal name="ind_sum_indic_t&#39;vc.2.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="11"><result status="valid" time="0.55" steps="214252"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="ind_sum_indic_t&#39;vc.2.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.39" steps="201513"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_indic_t_quant&#39;vc" expl="VC for ind_sum_indic_t_quant" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_indic_t_quant&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.37" steps="165375"/></proof>
  </goal>
  <goal name="ind_sum_indic_t_quant&#39;vc.1" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="ind_sum_indic&#39;spec">
   <goal name="ind_sum_indic_t_quant&#39;vc.1.0" expl="assertion" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="ind_sum_indic_t_quant&#39;vc.1.0.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="sum_indic&#39;def">
     <goal name="ind_sum_indic_t_quant&#39;vc.1.0.0.0" expl="assertion" proved="true">
     <transf name="rewrite" proved="true" arg1="ind_sum_to_sum">
      <goal name="ind_sum_indic_t_quant&#39;vc.1.0.0.0.0" expl="assertion" proved="true">
      <proof prover="11"><result status="valid" time="0.31" steps="173094"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="ind_sum_indic_t_quant&#39;vc.1.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.28" steps="158905"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_sum_indic_t_quant&#39;vc.2" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="Assert1" arg2="i">
   <goal name="ind_sum_indic_t_quant&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="Hinst">
    <goal name="ind_sum_indic_t_quant&#39;vc.2.0.0" expl="destruct premise" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="ind_sum_indic_t_quant&#39;vc.2.0.0.0" expl="destruct premise" proved="true">
     <proof prover="11"><result status="valid" time="0.16" steps="147534"/></proof>
     </goal>
     <goal name="ind_sum_indic_t_quant&#39;vc.2.0.0.1" expl="destruct premise" proved="true">
     <proof prover="11"><result status="valid" time="0.18" steps="147536"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ind_sum_indic_t_quant&#39;vc.2.0.1" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(ind_sum (fun (e:int) -&gt; (t @ e) *. indic i e) l h)" arg2="(ind_sum_indic t l h i)">
     <goal name="ind_sum_indic_t_quant&#39;vc.2.0.1.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.40" steps="165933"/></proof>
     </goal>
     <goal name="ind_sum_indic_t_quant&#39;vc.2.0.1.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="Assert">
      <goal name="ind_sum_indic_t_quant&#39;vc.2.0.1.1.0" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="0.32" steps="167426"/></proof>
      </goal>
      <goal name="ind_sum_indic_t_quant&#39;vc.2.0.1.1.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.17" steps="147592"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Inv_func" proved="true">
 <goal name="inv_func&#39;vc" expl="VC for inv_func" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="inv_func&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.61" steps="266269"/></proof>
  </goal>
  <goal name="inv_func&#39;vc.1" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(exists e. mem e s)">
   <goal name="inv_func&#39;vc.1.0" expl="asserted formula" proved="true">
   <proof prover="11"><result status="valid" time="0.71" steps="275697"/></proof>
   </goal>
   <goal name="inv_func&#39;vc.1.1" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(exists a. mem a s /\ e&#39; = ((f @ a) ))">
    <goal name="inv_func&#39;vc.1.1.0" expl="asserted formula" proved="true">
    <proof prover="11"><result status="valid" time="0.60" steps="276302"/></proof>
    </goal>
    <goal name="inv_func&#39;vc.1.1.1" expl="precondition" proved="true">
    <proof prover="11"><result status="valid" time="0.67" steps="278330"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="inv_func&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.55" steps="268463"/></proof>
  </goal>
  <goal name="inv_func&#39;vc.3" expl="assertion" proved="true">
  <transf name="assert" proved="true" arg1="(indic_bool (f e) e&#39;1)">
   <goal name="inv_func&#39;vc.3.0" expl="asserted formula" proved="true">
   <proof prover="11"><result status="valid" time="0.69" steps="278231"/></proof>
   </goal>
   <goal name="inv_func&#39;vc.3.1" expl="assertion" proved="true">
   <transf name="assert" proved="true" arg1="(f e = f e&#39;)">
    <goal name="inv_func&#39;vc.3.1.0" expl="asserted formula" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="inv_func&#39;vc.3.1.0.0" expl="asserted formula" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="inv_func&#39;vc.3.1.0.0.0" expl="asserted formula" proved="true">
      <transf name="replace" proved="true" arg1="(f e)" arg2="e&#39;1">
       <goal name="inv_func&#39;vc.3.1.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="assert" proved="true" arg1="(indic_bool (f e&#39;) e&#39;1)">
        <goal name="inv_func&#39;vc.3.1.0.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="11"><result status="valid" time="0.86" steps="334395"/></proof>
        </goal>
        <goal name="inv_func&#39;vc.3.1.0.0.0.0.1" expl="asserted formula" proved="true">
        <proof prover="11"><result status="valid" time="0.59" steps="325829"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="inv_func&#39;vc.3.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="0.59" steps="325810"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="inv_func&#39;vc.3.1.1" expl="assertion" proved="true">
    <proof prover="11"><result status="valid" time="0.69" steps="279236"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="inv_func&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.30" steps="252376"/></proof>
  </goal>
  <goal name="inv_func&#39;vc.5" expl="precondition" proved="true">
  <transf name="case" proved="true" arg1="( exists e1 e2. mem e1 s_indic /\ mem e2 s_indic /\ e1 &lt;&gt; e2)
">
   <goal name="inv_func&#39;vc.5.0" expl="true case (precondition)" proved="true">
   <proof prover="11"><result status="valid" time="0.57" steps="268090"/></proof>
   </goal>
   <goal name="inv_func&#39;vc.5.1" expl="false case (precondition)" proved="true">
   <transf name="assert" proved="true" arg1="(exists e. mem e s_indic)">
    <goal name="inv_func&#39;vc.5.1.0" expl="asserted formula" proved="true">
    <proof prover="11"><result status="valid" time="0.77" steps="277323"/></proof>
    </goal>
    <goal name="inv_func&#39;vc.5.1.1" expl="false case (precondition)" proved="true">
    <transf name="destruct" proved="true" arg1="h">
     <goal name="inv_func&#39;vc.5.1.1.0" expl="false case (precondition)" proved="true">
     <transf name="exists" proved="true" arg1="e">
      <goal name="inv_func&#39;vc.5.1.1.0.0" proved="true">
      <proof prover="11"><result status="valid" time="0.48" steps="268180"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="inv_func&#39;vc.6" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.32" steps="252385"/></proof>
  </goal>
  <goal name="inv_func&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.72" steps="277539"/></proof>
  </goal>
  <goal name="inv_func&#39;vc.8" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(indic_bool (f result ) e&#39;)">
   <goal name="inv_func&#39;vc.8.0" expl="asserted formula" proved="true">
   <transf name="assert" proved="true" arg1="( (f result )  = e&#39;)">
    <goal name="inv_func&#39;vc.8.0.0" expl="asserted formula" proved="true">
    <proof prover="11"><result status="valid" time="0.70" steps="278930"/></proof>
    </goal>
    <goal name="inv_func&#39;vc.8.0.1" expl="asserted formula" proved="true">
    <proof prover="11"><result status="valid" time="0.55" steps="268202"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="inv_func&#39;vc.8.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.50" steps="268165"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bijective_inv_func&#39;vc" expl="VC for bijective_inv_func" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="bijective_inv_func&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="bijective_inv_func&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_bijective1">
    <goal name="bijective_inv_func&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bijective_inv_func&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="1.02" steps="377691"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="bijective_inv_func&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bijective_inv_func&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="bijective_inv_func&#39;vc.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="case" proved="true" arg1="(inv_func f s s&#39; e = inv_func f s s&#39; e&#39;)">
       <goal name="bijective_inv_func&#39;vc.0.0.1.0.0.0" expl="true case (apply premises)" proved="true">
       <transf name="case" proved="true" arg1="(f(inv_func f s s&#39; e) = f(inv_func f s s&#39; e&#39;))">
        <goal name="bijective_inv_func&#39;vc.0.0.1.0.0.0.0" expl="true case (apply premises)" proved="true">
        <proof prover="11"><result status="valid" time="0.45" steps="224500"/></proof>
        </goal>
        <goal name="bijective_inv_func&#39;vc.0.0.1.0.0.0.1" expl="false case (true case. apply premises)" proved="true">
        <proof prover="11"><result status="valid" time="0.40" steps="224126"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="bijective_inv_func&#39;vc.0.0.1.0.0.1" expl="false case (apply premises)" proved="true">
       <proof prover="11"><result status="valid" time="0.26" steps="210755"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="bijective_inv_func&#39;vc.0.0.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bijective_inv_func&#39;vc.0.0.2.0" expl="apply premises" proved="true">
     <transf name="compute_in_goal" proved="true" >
      <goal name="bijective_inv_func&#39;vc.0.0.2.0.0" expl="apply premises" proved="true">
      <transf name="exists" proved="true" arg1="(f e&#39;)">
       <goal name="bijective_inv_func&#39;vc.0.0.2.0.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="bijective_inv_func&#39;vc.0.0.2.0.0.0.0" proved="true">
        <proof prover="11"><result status="valid" time="0.58" steps="283146"/></proof>
        </goal>
        <goal name="bijective_inv_func&#39;vc.0.0.2.0.0.0.1" proved="true">
        <transf name="assert" proved="true" arg1="(f (inv_func f s s&#39; (f @ e&#39;)) = f e&#39;)">
         <goal name="bijective_inv_func&#39;vc.0.0.2.0.0.0.1.0" expl="asserted formula" proved="true">
         <proof prover="11"><result status="valid" time="0.53" steps="230750"/></proof>
         </goal>
         <goal name="bijective_inv_func&#39;vc.0.0.2.0.0.0.1.1" proved="true">
         <proof prover="11"><result status="valid" time="0.56" steps="231180"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="inv_rec&#39;vc" expl="VC for inv_rec" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="inv_rec&#39;vc.0" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(inv_func f s s&#39; (f @ e) &lt;&gt; e)">
   <goal name="inv_rec&#39;vc.0.0" expl="true case (postcondition)" proved="true">
   <transf name="assert" proved="true" arg1="(f (inv_func f s s&#39; (f @ e)) &lt;&gt; f e)">
    <goal name="inv_rec&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <proof prover="11"><result status="valid" time="0.54" steps="204592"/></proof>
    </goal>
    <goal name="inv_rec&#39;vc.0.0.1" expl="true case (postcondition)" proved="true">
    <proof prover="11"><result status="valid" time="0.51" steps="204022"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="inv_rec&#39;vc.0.1" expl="false case (postcondition)" proved="true">
   <proof prover="11"><result status="valid" time="0.21" steps="183355"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="inv_&#39;vc" expl="VC for inv_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="inv_&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.22" steps="184089"/></proof>
  </goal>
  <goal name="inv_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="184092"/></proof>
  </goal>
  <goal name="inv_&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.31" steps="232666"/></proof>
  </goal>
  <goal name="inv_&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.31" steps="232669"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inv_bijective&#39;vc" expl="VC for inv_bijective" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="inv_bijective&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.25" steps="185371"/></proof>
  </goal>
  <goal name="inv_bijective&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="185374"/></proof>
  </goal>
  <goal name="inv_bijective&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.71" steps="271833"/></proof>
  </goal>
  <goal name="inv_bijective&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="inv_bijective&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.68" steps="270793"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="inv_bijective&#39;vc.4" expl="precondition" proved="true">
  <transf name="exists" proved="true" arg1="(f e&#39;)">
   <goal name="inv_bijective&#39;vc.4.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="inv_bijective&#39;vc.4.0.0" proved="true">
    <proof prover="11"><result status="valid" time="0.51" steps="261476"/></proof>
    </goal>
    <goal name="inv_bijective&#39;vc.4.0.1" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="inv_bijective&#39;vc.4.0.1.0" proved="true">
     <proof prover="11"><result status="valid" time="0.72" steps="271921"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="inv_bijective&#39;vc.5" expl="postcondition" proved="true">
  <transf name="compute_hyp" proved="true" >
   <goal name="inv_bijective&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="inv_bijective&#39;vc.5.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.53" steps="264250"/></proof>
    </goal>
    <goal name="inv_bijective&#39;vc.5.0.1" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.55" steps="229301"/></proof>
    </goal>
    <goal name="inv_bijective&#39;vc.5.0.2" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.52" steps="264250"/></proof>
    </goal>
    <goal name="inv_bijective&#39;vc.5.0.3" expl="postcondition" proved="true">
    <transf name="exists" proved="true" arg1="(f e&#39;)">
     <goal name="inv_bijective&#39;vc.5.0.3.0" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="inv_bijective&#39;vc.5.0.3.0.0" proved="true">
      <proof prover="11"><result status="valid" time="0.54" steps="264222"/></proof>
      </goal>
      <goal name="inv_bijective&#39;vc.5.0.3.0.1" proved="true">
      <proof prover="11"><result status="valid" time="0.58" steps="275331"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_bijective_inv&#39;vc" expl="VC for set_bijective_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_bijective_inv&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.53" steps="259634"/></proof>
  </goal>
  <goal name="set_bijective_inv&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.51" steps="259739"/></proof>
  </goal>
  <goal name="set_bijective_inv&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.65" steps="268827"/></proof>
  </goal>
  <goal name="set_bijective_inv&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.30" steps="246118"/></proof>
  </goal>
  <goal name="set_bijective_inv&#39;vc.4" expl="postcondition" proved="true">
  <transf name="compute_hyp" proved="true" >
   <goal name="set_bijective_inv&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.68" steps="270849"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_bij_inv&#39;vc" expl="VC for set_bij_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_bij_inv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="set_bij_inv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_bijective1">
    <goal name="set_bij_inv&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="set_bij_inv&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="0.67" steps="306705"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="set_bij_inv&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="set_bij_inv&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="0.64" steps="306755"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="set_bij_inv&#39;vc.0.0.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="set_bij_inv&#39;vc.0.0.2.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="0.77" steps="314129"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="set_bij_inv&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="set_bij_inv&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_bijective1">
    <goal name="set_bij_inv&#39;vc.1.0.0" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="0.60" steps="308432"/></proof>
    </goal>
    <goal name="set_bij_inv&#39;vc.1.0.1" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="0.77" steps="316855"/></proof>
    </goal>
    <goal name="set_bij_inv&#39;vc.1.0.2" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="2.61" steps="550160"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="set_bij_inv&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.65" steps="275549"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inv_f&#39;vc" expl="VC for inv_f" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="inv_f&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.24" steps="191649"/></proof>
  </goal>
  <goal name="inv_f&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="191652"/></proof>
  </goal>
  <goal name="inv_f&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.55" steps="267711"/></proof>
  </goal>
  <goal name="inv_f&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.68" steps="277080"/></proof>
  </goal>
  <goal name="inv_f&#39;vc.4" expl="precondition" proved="true">
  <transf name="exists" proved="true" arg1="(f e&#39;)">
   <goal name="inv_f&#39;vc.4.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="inv_f&#39;vc.4.0.0" proved="true">
    <proof prover="11"><result status="valid" time="0.54" steps="267851"/></proof>
    </goal>
    <goal name="inv_f&#39;vc.4.0.1" proved="true">
    <proof prover="11"><result status="valid" time="0.69" steps="277443"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="inv_f&#39;vc.5" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.30" steps="255472"/></proof>
  </goal>
  <goal name="inv_f&#39;vc.6" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.35" steps="255475"/></proof>
  </goal>
  <goal name="inv_f&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.59" steps="270713"/></proof>
  </goal>
  <goal name="inv_f&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.57" steps="270786"/></proof>
  </goal>
  <goal name="inv_f&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.66" steps="618331"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inv_f_back&#39;vc" expl="VC for inv_f_back" proved="true">
 <proof prover="11"><result status="valid" time="0.44" steps="221739"/></proof>
 </goal>
 <goal name="inv_f_back_rev&#39;vc" expl="VC for inv_f_back_rev" proved="true">
 <proof prover="11"><result status="valid" time="1.62" steps="509844"/></proof>
 </goal>
 <goal name="injective_is_bijective&#39;vc" expl="VC for injective_is_bijective" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="injective_is_bijective&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.54" steps="272949"/></proof>
  </goal>
  <goal name="injective_is_bijective&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.55" steps="273063"/></proof>
  </goal>
  <goal name="injective_is_bijective&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.68" steps="281897"/></proof>
  </goal>
  <goal name="injective_is_bijective&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.72" steps="283515"/></proof>
  </goal>
  <goal name="injective_is_bijective&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="3.27" steps="585751"/></proof>
  </goal>
  <goal name="injective_is_bijective&#39;vc.5" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.73" steps="285807"/></proof>
  </goal>
  <goal name="injective_is_bijective&#39;vc.6" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.72" steps="285201"/></proof>
  </goal>
  <goal name="injective_is_bijective&#39;vc.7" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.53" steps="277439"/></proof>
  </goal>
  <goal name="injective_is_bijective&#39;vc.8" expl="precondition" proved="true">
  <transf name="case" proved="true" arg1="(e = f (choose s))">
   <goal name="injective_is_bijective&#39;vc.8.0" expl="true case (precondition)" proved="true">
   <proof prover="11"><result status="valid" time="0.72" steps="287571"/></proof>
   </goal>
   <goal name="injective_is_bijective&#39;vc.8.1" expl="false case (precondition)" proved="true">
   <transf name="apply" proved="true" arg1="set_map_mem">
    <goal name="injective_is_bijective&#39;vc.8.1.0" expl="apply premises" proved="true">
    <transf name="instantiate" proved="true" arg1="Ensures" arg2="e">
     <goal name="injective_is_bijective&#39;vc.8.1.0.0" expl="apply premises" proved="true">
     <transf name="destruct" proved="true" arg1="Hinst">
      <goal name="injective_is_bijective&#39;vc.8.1.0.0.0" expl="destruct premise" proved="true">
      <proof prover="11"><result status="valid" time="0.55" steps="277615"/></proof>
      </goal>
      <goal name="injective_is_bijective&#39;vc.8.1.0.0.1" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.68" steps="287775"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="injective_is_bijective&#39;vc.9" expl="precondition" proved="true">
  <transf name="instantiate" proved="true" arg1="map_antec" arg2="f,s,e">
   <goal name="injective_is_bijective&#39;vc.9.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.54" steps="277758"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="injective_is_bijective&#39;vc.10" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.53" steps="277829"/></proof>
  </goal>
  <goal name="injective_is_bijective&#39;vc.11" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.32" steps="262114"/></proof>
  </goal>
  <goal name="injective_is_bijective&#39;vc.12" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="injective_is_bijective&#39;vc.12.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.31" steps="259608"/></proof>
   </goal>
   <goal name="injective_is_bijective&#39;vc.12.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.54" steps="277990"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="injective_is_bijective_auto&#39;vc" expl="VC for injective_is_bijective_auto" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="injective_is_bijective_auto&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.25" steps="191539"/></proof>
  </goal>
  <goal name="injective_is_bijective_auto&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.38" steps="204161"/></proof>
  </goal>
  <goal name="injective_is_bijective_auto&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
  </transf>
  </goal>
  <goal name="injective_is_bijective_auto&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="192850"/></proof>
  </goal>
  <goal name="injective_is_bijective_auto&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.41" steps="206236"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inv_auto&#39;vc" expl="VC for inv_auto" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="inv_auto&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.24" steps="191926"/></proof>
  </goal>
  <goal name="inv_auto&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="204550"/></proof>
  </goal>
  <goal name="inv_auto&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="193783"/></proof>
  </goal>
  <goal name="inv_auto&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.43" steps="206700"/></proof>
  </goal>
  <goal name="inv_auto&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.42" steps="206792"/></proof>
  </goal>
  <goal name="inv_auto&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="193980"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Im_re" proved="true">
 <goal name="real&#39;vc" expl="VC for real" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(x = r_to_c (real_part x) +. im *. c_zero)">
   <goal name="real&#39;vc.0.0" expl="asserted formula" proved="true">
   <transf name="replace" proved="true" arg1="c_zero" arg2="(r_to_c (im_part x))">
    <goal name="real&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <proof prover="11"><result status="valid" time="0.10" steps="36397"/></proof>
    </goal>
    <goal name="real&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="replace" proved="true" arg1="(im_part x)" arg2="0.0">
     <goal name="real&#39;vc.0.0.1.0" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.11" steps="36404"/></proof>
     </goal>
     <goal name="real&#39;vc.0.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.10" steps="51231"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="real&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.18" steps="43019"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pure_im&#39;vc" expl="VC for pure_im" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pure_im&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.06" steps="43038"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="im_dec&#39;vc" expl="VC for im_dec" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="im_dec&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.07" steps="43558"/></proof>
  </goal>
  <goal name="im_dec&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="im_dec&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.10" steps="36495"/></proof>
   </goal>
   <goal name="im_dec&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.10" steps="36495"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="c_one_dec&#39;vc" expl="VC for c_one_dec" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="c_one_dec&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.18" steps="43704"/></proof>
  </goal>
  <goal name="c_one_dec&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="c_one_dec&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.11" steps="36528"/></proof>
   </goal>
   <goal name="c_one_dec&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.11" steps="36528"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="c_zero_dec&#39;vc" expl="VC for c_zero_dec" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="c_zero_dec&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.07" steps="43784"/></proof>
  </goal>
  <goal name="c_zero_dec&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="c_zero_dec&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.10" steps="36561"/></proof>
   </goal>
   <goal name="c_zero_dec&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.10" steps="36561"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ttwo_dec&#39;vc" expl="VC for ttwo_dec" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ttwo_dec&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ttwo_dec&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.12" steps="40225"/></proof>
   </goal>
   <goal name="ttwo_dec&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.12" steps="40221"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="FromInt" proved="true">
 <goal name="i_to_c&#39;vc" expl="VC for i_to_c" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.18" steps="46946"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_zero&#39;vc" expl="VC for i_to_c_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_zero&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="i_to_c_zero&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.18" steps="47901"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_surj&#39;vc" expl="VC for i_to_c_surj" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_surj&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(i_to_c (i * j) /. i_to_c j)" arg2="(((i_to_c i *. i_to_c j)) /. i_to_c j)">
   <goal name="i_to_c_surj&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="0.15" steps="196628"/></proof>
   </goal>
   <goal name="i_to_c_surj&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="i_to_c_surj&#39;vc.0.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c&#39;def">
     <goal name="i_to_c_surj&#39;vc.0.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c&#39;def">
      <goal name="i_to_c_surj&#39;vc.0.1.0.0.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="i_to_c&#39;def">
       <goal name="i_to_c_surj&#39;vc.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="r_to_c_mult">
        <goal name="i_to_c_surj&#39;vc.0.1.0.0.0.0.0" expl="equality hypothesis" proved="true">
        <proof prover="10"><result status="valid" time="0.06" steps="261402"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_eq&#39;vc" expl="VC for i_to_c_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_eq&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="i_to_c_eq&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.12" steps="44474"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_inf&#39;vc" expl="VC for i_to_c_inf" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_inf&#39;vc.0" expl="assertion" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="i_to_c_inf&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
    <goal name="i_to_c_inf&#39;vc.0.0.0" expl="assertion" proved="true">
    <transf name="replace" proved="true" arg1="(j -&#39; i)" arg2="(j + - i)">
     <goal name="i_to_c_inf&#39;vc.0.0.0.0" expl="assertion" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c&#39;def">
      <goal name="i_to_c_inf&#39;vc.0.0.0.0.0" expl="assertion" proved="true">
      <transf name="rewrite" proved="true" arg1="i_to_c&#39;def">
       <goal name="i_to_c_inf&#39;vc.0.0.0.0.0.0" expl="assertion" proved="true">
       <transf name="rewrite" proved="true" arg1="Add">
        <goal name="i_to_c_inf&#39;vc.0.0.0.0.0.0.0" expl="assertion" proved="true">
        <proof prover="11"><result status="valid" time="0.73" steps="340525"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="i_to_c_inf&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.10" steps="40961"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="i_to_c_inf&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.97" steps="332415"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_nzero&#39;vc" expl="VC for i_to_c_nzero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_nzero&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="47299"/></proof>
  </goal>
  <goal name="i_to_c_nzero&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.18" steps="47348"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_one&#39;vc" expl="VC for i_to_c_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="47348"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_add&#39;vc" expl="VC for i_to_c_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_add&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="i_to_c_add&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="i_to_c&#39;def">
    <goal name="i_to_c_add&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c&#39;def">
     <goal name="i_to_c_add&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c&#39;def">
      <goal name="i_to_c_add&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="11"><result status="valid" time="0.92" steps="351750"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_add_rev&#39;vc" expl="VC for i_to_c_add_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_add_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.14" steps="563400"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_ttwo&#39;vc" expl="VC for i_to_c_ttwo" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_ttwo&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.07" steps="47480"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_pos&#39;vc" expl="VC for i_to_c_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_pos&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.55" steps="239200"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_minus&#39;vc" expl="VC for i_to_c_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_minus&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="i_to_c_minus&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="i_to_c&#39;def">
    <goal name="i_to_c_minus&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c&#39;def">
     <goal name="i_to_c_minus&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.73" steps="322223"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_strict_pos&#39;vc" expl="VC for i_to_c_strict_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_strict_pos&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.64" steps="272943"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_mult_pos&#39;vc" expl="VC for i_to_c_mult_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_mult_pos&#39;vc.0" expl="assertion" proved="true">
  <transf name="replace" proved="true" arg1="(i_to_c j -. i_to_c i)" arg2="(i_to_c j +. (-. i_to_c i))">
   <goal name="i_to_c_mult_pos&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(j-&#39;1)" arg2="(j + -1)">
    <goal name="i_to_c_mult_pos&#39;vc.0.0.0" expl="assertion" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="i_to_c_mult_pos&#39;vc.0.0.0.0" expl="assertion" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c&#39;def">
      <goal name="i_to_c_mult_pos&#39;vc.0.0.0.0.0" expl="assertion" proved="true">
      <transf name="rewrite" proved="true" arg1="i_to_c&#39;def">
       <goal name="i_to_c_mult_pos&#39;vc.0.0.0.0.0.0" expl="assertion" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c&#39;def">
        <goal name="i_to_c_mult_pos&#39;vc.0.0.0.0.0.0.0" expl="assertion" proved="true">
        <transf name="replace" proved="true" arg1="(from_int (j+(-1)))" arg2="(from_int j +* from_int (- 1))">
         <goal name="i_to_c_mult_pos&#39;vc.0.0.0.0.0.0.0.0" expl="assertion" proved="true">
         <proof prover="10"><result status="valid" time="0.70" steps="1312714"/></proof>
         </goal>
         <goal name="i_to_c_mult_pos&#39;vc.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="11"><result status="valid" time="0.11" steps="54412"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="i_to_c_mult_pos&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.11" steps="40646"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="i_to_c_mult_pos&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.07" steps="47786"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="i_to_c_mult_pos&#39;vc.1" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.11" steps="40702"/></proof>
  </goal>
  <goal name="i_to_c_mult_pos&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.11" steps="40727"/></proof>
  </goal>
  <goal name="i_to_c_mult_pos&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="47866"/></proof>
  </goal>
  <goal name="i_to_c_mult_pos&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="i_to_c_mult_pos&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="i_to_c_mult_pos&#39;vc.4.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.18" steps="47798"/></proof>
    </goal>
    <goal name="i_to_c_mult_pos&#39;vc.4.0.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="i_to_c_mult_pos&#39;vc.4.0.1.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.12" steps="57878"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_mult&#39;vc" expl="VC for i_to_c_mult" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_mult&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.11" steps="40676"/></proof>
  </goal>
  <goal name="i_to_c_mult&#39;vc.1" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="55717"/></proof>
  </goal>
  <goal name="i_to_c_mult&#39;vc.2" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="57794"/></proof>
  </goal>
  <goal name="i_to_c_mult&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="i_to_c_mult&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.15" steps="47886"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="i_to_c_mult&#39;vc.4" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="i_to_c_mult&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="i_to_c&#39;def">
    <goal name="i_to_c_mult&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c&#39;def">
     <goal name="i_to_c_mult&#39;vc.4.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c&#39;def">
      <goal name="i_to_c_mult&#39;vc.4.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="11"><result status="valid" time="0.18" steps="59266"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_mult_rev&#39;vc" expl="VC for i_to_c_mult_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_mult_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.15" steps="570394"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_mult_assoc&#39;vc" expl="VC for i_to_c_mult_assoc" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_mult_assoc&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.34" steps="1338581"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_mult_assoc_rev&#39;vc" expl="VC for i_to_c_mult_assoc_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_mult_assoc_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.08" steps="433469"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_sub&#39;vc" expl="VC for i_to_c_sub" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_sub&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.14" steps="574510"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_sub_rev&#39;vc" expl="VC for i_to_c_sub_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_sub_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.14" steps="577623"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_opp&#39;vc" expl="VC for i_to_c_opp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_opp&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="i_to_c_opp&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="i_to_c&#39;def">
    <goal name="i_to_c_opp&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c&#39;def">
     <goal name="i_to_c_opp&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.23" steps="117965"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_div&#39;vc" expl="VC for i_to_c_div" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_div&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
   <goal name="i_to_c_div&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.17" steps="48870"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_minus_mult&#39;vc" expl="VC for i_to_c_minus_mult" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_minus_mult&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.12" steps="58309"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_div_leq_c_one&#39;vc" expl="VC for i_to_c_div_leq_c_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_div_leq_c_one&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="((i_to_c a /. i_to_c b)*.i_to_c b &lt;=. c_one *. i_to_c b)">
   <goal name="i_to_c_div_leq_c_one&#39;vc.0.0" expl="asserted formula" proved="true">
   <transf name="assert" proved="true" arg1="(i_to_c a &lt;. i_to_c b)">
    <goal name="i_to_c_div_leq_c_one&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <proof prover="7"><result status="valid" time="0.05" steps="106545"/></proof>
    </goal>
    <goal name="i_to_c_div_leq_c_one&#39;vc.0.0.1" expl="asserted formula" proved="true">
    <transf name="replace" proved="true" arg1="((i_to_c a /. i_to_c b) *. i_to_c b)" arg2="(i_to_c a)">
     <goal name="i_to_c_div_leq_c_one&#39;vc.0.0.1.0" expl="asserted formula" proved="true">
     <transf name="rewrite" proved="true" arg1="one_mult_t">
      <goal name="i_to_c_div_leq_c_one&#39;vc.0.0.1.0.0" expl="asserted formula" proved="true">
      <proof prover="11"><result status="valid" time="0.07" steps="48568"/></proof>
      </goal>
      <goal name="i_to_c_div_leq_c_one&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.11" steps="41253"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="i_to_c_div_leq_c_one&#39;vc.0.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.22" steps="107082"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="i_to_c_div_leq_c_one&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.09" steps="57989"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="compat_i_to_c_infeq&#39;vc" expl="VC for compat_i_to_c_infeq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="compat_i_to_c_infeq&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.14" steps="584285"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="compat_i_to_c_inf&#39;vc" expl="VC for compat_i_to_c_inf" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="compat_i_to_c_inf&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="7"><result status="valid" time="0.05" steps="107090"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="compat_i_to_c_inf_rev&#39;vc" expl="VC for compat_i_to_c_inf_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="compat_i_to_c_inf_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.16" steps="601239"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="compat_i_to_c_sup&#39;vc" expl="VC for compat_i_to_c_sup" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="compat_i_to_c_sup&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(i_to_c b &lt;. i_to_c a)">
   <goal name="compat_i_to_c_sup&#39;vc.0.0" expl="asserted formula" proved="true">
   <proof prover="7"><result status="valid" time="0.05" steps="107442"/></proof>
   </goal>
   <goal name="compat_i_to_c_sup&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.18" steps="48902"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="positive_int_squrt&#39;vc" expl="VC for positive_int_squrt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="positive_int_squrt&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.96" steps="366191"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="non_null_int_squrt&#39;vc" expl="VC for non_null_int_squrt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="non_null_int_squrt&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.22" steps="74843"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_constant&#39;vc" expl="VC for ind_sum_constant" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_constant&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_sum_constant&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.16" steps="146359"/></proof>
   </goal>
   <goal name="ind_sum_constant&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.16" steps="146368"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_sum_constant&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="157959"/></proof>
  </goal>
  <goal name="ind_sum_constant&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.38" steps="166996"/></proof>
  </goal>
  <goal name="ind_sum_constant&#39;vc.3" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="ind_sum_constant&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="ind_sum_constant&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(i&lt;j)">
     <goal name="ind_sum_constant&#39;vc.3.0.0.0" expl="true case (postcondition)" proved="true">
     <proof prover="11"><result status="valid" time="0.19" steps="150999"/></proof>
     </goal>
     <goal name="ind_sum_constant&#39;vc.3.0.0.1" expl="false case (postcondition)" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="ind_sum_constant&#39;vc.3.0.0.1.0" expl="false case (postcondition)" proved="true">
      <proof prover="11"><result status="valid" time="0.38" steps="189326"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="ind_sum_constant&#39;vc.3.1" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="ind_sum_constant&#39;vc.3.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="ind_sum_constant&#39;vc.3.1.0.0" expl="postcondition" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="ind_sum_constant&#39;vc.3.1.0.0.0" expl="postcondition" proved="true">
      <transf name="case" proved="true" arg1="(i&lt;j)">
       <goal name="ind_sum_constant&#39;vc.3.1.0.0.0.0" expl="true case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="H">
        <goal name="ind_sum_constant&#39;vc.3.1.0.0.0.0.0" expl="true case (postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures">
         <goal name="ind_sum_constant&#39;vc.3.1.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
         <transf name="rewrite" proved="true" arg1="Requires">
          <goal name="ind_sum_constant&#39;vc.3.1.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
          <transf name="replace" proved="true" arg1="(i_to_c ((j -&#39; 1) -&#39; i))" arg2="(i_to_c ((j -&#39; i)) -. c_one)">
           <goal name="ind_sum_constant&#39;vc.3.1.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
           <transf name="replace" proved="true" arg1="(valu *. i_to_c (j -&#39; i))" arg2="(valu *. (i_to_c (j -&#39; i-&#39;1)+.c_one))">
            <goal name="ind_sum_constant&#39;vc.3.1.0.0.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
            <transf name="assert" proved="true" arg1="(forall a b c. a*. (b+. c) = a*.b+.a*.c)">
             <goal name="ind_sum_constant&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
             <proof prover="11"><result status="valid" time="0.27" steps="158036"/></proof>
             </goal>
             <goal name="ind_sum_constant&#39;vc.3.1.0.0.0.0.0.0.0.0.0.1" expl="true case (postcondition)" proved="true">
             <transf name="rewrite" proved="true" arg1="h">
              <goal name="ind_sum_constant&#39;vc.3.1.0.0.0.0.0.0.0.0.0.1.0" expl="true case (postcondition)" proved="true">
              <transf name="apply" proved="true" arg1="add_eq_t">
               <goal name="ind_sum_constant&#39;vc.3.1.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="11"><result status="valid" time="0.33" steps="168836"/></proof>
               </goal>
               <goal name="ind_sum_constant&#39;vc.3.1.0.0.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
               <proof prover="11"><result status="valid" time="0.27" steps="158123"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="ind_sum_constant&#39;vc.3.1.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="11"><result status="valid" time="0.37" steps="169387"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="ind_sum_constant&#39;vc.3.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="11"><result status="valid" time="0.37" steps="168169"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="ind_sum_constant&#39;vc.3.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="11"><result status="valid" time="0.15" steps="146409"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="ind_sum_constant&#39;vc.3.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.14" steps="146386"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="ind_sum_constant&#39;vc.3.1.0.0.0.1" expl="false case (postcondition)" proved="true">
       <proof prover="11"><result status="valid" time="0.43" steps="168794"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_constant_from_z&#39;vc" expl="VC for ind_sum_constant_from_z" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_constant_from_z&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.18" steps="146453"/></proof>
  </goal>
  <goal name="ind_sum_constant_from_z&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.43" steps="165329"/></proof>
  </goal>
  <goal name="ind_sum_constant_from_z&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="146510"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sum_constant_lower_bound&#39;vc" expl="VC for sum_constant_lower_bound" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_constant_lower_bound&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="183786"/></proof>
  </goal>
  <goal name="sum_constant_lower_bound&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_constant_lower_bound&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.52" steps="205515"/></proof>
   </goal>
   <goal name="sum_constant_lower_bound&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.41" steps="207359"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_constant_lower_bound&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.52" steps="207487"/></proof>
  </goal>
  <goal name="sum_constant_lower_bound&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.50" steps="207751"/></proof>
  </goal>
  <goal name="sum_constant_lower_bound&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.25" steps="185192"/></proof>
  </goal>
  <goal name="sum_constant_lower_bound&#39;vc.5" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.50" steps="211286"/></proof>
  </goal>
  <goal name="sum_constant_lower_bound&#39;vc.6" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.54" steps="211769"/></proof>
  </goal>
  <goal name="sum_constant_lower_bound&#39;vc.7" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="sum_constant_lower_bound&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="sum_constant_lower_bound&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sum_empty">
     <goal name="sum_constant_lower_bound&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.38" steps="198483"/></proof>
     </goal>
     <goal name="sum_constant_lower_bound&#39;vc.7.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.39" steps="198740"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sum_constant_lower_bound&#39;vc.7.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="sum_constant_lower_bound&#39;vc.7.1.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="H">
     <goal name="sum_constant_lower_bound&#39;vc.7.1.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.42" steps="211325"/></proof>
     </goal>
     <goal name="sum_constant_lower_bound&#39;vc.7.1.0.1" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.45" steps="218413"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_inf&#39;vc" expl="VC for sum_inf" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_inf&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="184304"/></proof>
  </goal>
  <goal name="sum_inf&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="187794"/></proof>
  </goal>
  <goal name="sum_inf&#39;vc.2" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_inf&#39;vc.2.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.51" steps="205245"/></proof>
   </goal>
   <goal name="sum_inf&#39;vc.2.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.57" steps="207109"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_inf&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.51" steps="207386"/></proof>
  </goal>
  <goal name="sum_inf&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.51" steps="207436"/></proof>
  </goal>
  <goal name="sum_inf&#39;vc.5" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.50" steps="207714"/></proof>
  </goal>
  <goal name="sum_inf&#39;vc.6" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.52" steps="209883"/></proof>
  </goal>
  <goal name="sum_inf&#39;vc.7" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.58" steps="210502"/></proof>
  </goal>
  <goal name="sum_inf&#39;vc.8" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.61" steps="210794"/></proof>
  </goal>
  <goal name="sum_inf&#39;vc.9" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="sum_inf&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.54" steps="209617"/></proof>
   </goal>
   <goal name="sum_inf&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="2.95" steps="902016"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_constant&#39;vc" expl="VC for sum_constant" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_constant&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="184799"/></proof>
  </goal>
  <goal name="sum_constant&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_constant&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.49" steps="205740"/></proof>
   </goal>
   <goal name="sum_constant&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.56" steps="207604"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_constant&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.51" steps="207846"/></proof>
  </goal>
  <goal name="sum_constant&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.50" steps="211527"/></proof>
  </goal>
  <goal name="sum_constant&#39;vc.4" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.53" steps="212210"/></proof>
  </goal>
  <goal name="sum_constant&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.52" steps="216327"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_sum_constant_case&#39;vc" expl="VC for ind_sum_constant_case" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_sum_constant_case&#39;vc.0" expl="precondition" proved="true">
  <transf name="case" proved="true" arg1="(p e)">
   <goal name="ind_sum_constant_case&#39;vc.0.0" expl="true case (precondition)" proved="true">
   <proof prover="11"><result status="valid" time="1.15" steps="406354"/></proof>
   </goal>
   <goal name="ind_sum_constant_case&#39;vc.0.1" expl="false case (precondition)" proved="true">
   <transf name="assert" proved="true" arg1="(not (mem e (my_filter (to_fset 0 n) (p))) )">
    <goal name="ind_sum_constant_case&#39;vc.0.1.0" expl="asserted formula" proved="true">
    <proof prover="11"><result status="valid" time="0.48" steps="229459"/></proof>
    </goal>
    <goal name="ind_sum_constant_case&#39;vc.0.1.1" expl="false case (precondition)" proved="true">
    <proof prover="11"><result status="valid" time="0.48" steps="229398"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ind_sum_constant_case&#39;vc.1" expl="precondition" proved="true">
  <transf name="case" proved="true" arg1="(p e)">
   <goal name="ind_sum_constant_case&#39;vc.1.0" expl="true case (precondition)" proved="true">
   <proof prover="11"><result status="valid" time="0.76" steps="252080"/></proof>
   </goal>
   <goal name="ind_sum_constant_case&#39;vc.1.1" expl="false case (precondition)" proved="true">
   <proof prover="11"><result status="valid" time="1.15" steps="451686"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_sum_constant_case&#39;vc.2" expl="precondition" proved="true">
  <transf name="case" proved="true" arg1="(mem e (my_filter (to_fset 0 n) p))">
   <goal name="ind_sum_constant_case&#39;vc.2.0" expl="true case (precondition)" proved="true">
   <proof prover="11"><result status="valid" time="0.54" steps="233456"/></proof>
   </goal>
   <goal name="ind_sum_constant_case&#39;vc.2.1" expl="false case (precondition)" proved="true">
   <transf name="assert" proved="true" arg1="(mem e (my_filter (to_fset 0 n) (fun (x1:int) -&gt; not (p @ x1) = True)))">
    <goal name="ind_sum_constant_case&#39;vc.2.1.0" expl="asserted formula" proved="true">
    <proof prover="11"><result status="valid" time="1.00" steps="394871"/></proof>
    </goal>
    <goal name="ind_sum_constant_case&#39;vc.2.1.1" expl="false case (precondition)" proved="true">
    <proof prover="11"><result status="valid" time="0.47" steps="233546"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ind_sum_constant_case&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="ind_sum_constant_case&#39;vc.3.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_empty1">
    <goal name="ind_sum_constant_case&#39;vc.3.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="ind_sum_constant_case&#39;vc.3.0.0.0" expl="apply premises" proved="true">
     <transf name="case" proved="true" arg1="( p e)">
      <goal name="ind_sum_constant_case&#39;vc.3.0.0.0.0" expl="true case (apply premises)" proved="true">
      <transf name="assert" proved="true" arg1="(not (mem e (my_filter (to_fset 0 n) (fun (x1:int) -&gt; not (p @ x1) = True))))">
       <goal name="ind_sum_constant_case&#39;vc.3.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="11"><result status="valid" time="0.69" steps="280718"/></proof>
       </goal>
       <goal name="ind_sum_constant_case&#39;vc.3.0.0.0.0.1" expl="true case (apply premises)" proved="true">
       <proof prover="11"><result status="valid" time="0.57" steps="281221"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="ind_sum_constant_case&#39;vc.3.0.0.0.1" expl="false case (apply premises)" proved="true">
      <transf name="assert" proved="true" arg1="(not (mem e (my_filter (to_fset 0 n) (p))))">
       <goal name="ind_sum_constant_case&#39;vc.3.0.0.0.1.0" expl="asserted formula" proved="true">
       <proof prover="11"><result status="valid" time="0.59" steps="273716"/></proof>
       </goal>
       <goal name="ind_sum_constant_case&#39;vc.3.0.0.0.1.1" expl="false case (apply premises)" proved="true">
       <proof prover="11"><result status="valid" time="0.57" steps="273414"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ind_sum_constant_case&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.16" steps="465954"/></proof>
  </goal>
  <goal name="ind_sum_constant_case&#39;vc.5" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="4.03" steps="1372684"/></proof>
  </goal>
  <goal name="ind_sum_constant_case&#39;vc.6" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="Requires">
   <goal name="ind_sum_constant_case&#39;vc.6.0" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="to_fset_bounds">
    <goal name="ind_sum_constant_case&#39;vc.6.0.0" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="0.54" steps="241102"/></proof>
    </goal>
    <goal name="ind_sum_constant_case&#39;vc.6.0.1" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="0.50" steps="238609"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ind_sum_constant_case&#39;vc.6.1" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="1.56" steps="576573"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_sum_constant_case&#39;vc.7" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(union (my_filter (to_fset 0 n) p)
   (my_filter (to_fset 0 n) (fun (x1:int) -&gt; not (p @ x1) = True)))" arg2="(to_fset 0 n)" arg3="in" arg4="Ensures12">
   <goal name="ind_sum_constant_case&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ind_sum_to_sum">
    <goal name="ind_sum_constant_case&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures12">
     <goal name="ind_sum_constant_case&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures">
      <goal name="ind_sum_constant_case&#39;vc.7.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures6">
       <goal name="ind_sum_constant_case&#39;vc.7.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="(cardinal (my_filter (to_fset 0 n) p))" arg2="k1">
        <goal name="ind_sum_constant_case&#39;vc.7.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="replace" proved="true" arg1="(cardinal
        (my_filter (to_fset 0 n) (fun (x1:int) -&gt; not (p @ x1) = True)))" arg2="(n-&#39; k1)">
         <goal name="ind_sum_constant_case&#39;vc.7.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="11"><result status="valid" time="0.28" steps="223089"/></proof>
         </goal>
         <goal name="ind_sum_constant_case&#39;vc.7.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="replace" proved="true" arg1="(n-&#39;k1)" arg2="((cardinal (union (my_filter (to_fset 0 n) p)
   (my_filter (to_fset 0 n) (fun (x1:int) -&gt; not (p @ x1) = True))))-&#39; k1)">
          <goal name="ind_sum_constant_case&#39;vc.7.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
          <proof prover="11"><result status="valid" time="6.55" steps="2168652"/></proof>
          </goal>
          <goal name="ind_sum_constant_case&#39;vc.7.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
          <proof prover="11"><result status="valid" time="1.66" steps="601690"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="ind_sum_constant_case&#39;vc.7.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.29" steps="223091"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="ind_sum_constant_case&#39;vc.7.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="1.47" steps="559184"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_const_one&#39;vc" expl="VC for sum_const_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_const_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.38" steps="193943"/></proof>
  </goal>
  <goal name="sum_const_one&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.39" steps="201219"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Conjugate" proved="true">
 <goal name="conjugate&#39;vc" expl="VC for conjugate" proved="true">
 <proof prover="11"><result status="valid" time="0.11" steps="117316"/></proof>
 </goal>
 <goal name="real_part_conjugate&#39;vc" expl="VC for real_part_conjugate" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_part_conjugate&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="real_part_conjugate&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="1.46" steps="421376"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="im_part_conjugate&#39;vc" expl="VC for im_part_conjugate" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="im_part_conjugate&#39;vc.0" expl="precondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="im_part_conjugate&#39;vc.0.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="pure_im_&#39;def">
    <goal name="im_part_conjugate&#39;vc.0.0.0" expl="VC for im_part_conjugate" proved="true">
    <transf name="instantiate" proved="true" arg1="unic_decomp" arg2="(im *. t_im_part i),0.0,(im_part i)">
     <goal name="im_part_conjugate&#39;vc.0.0.0.0" expl="VC for im_part_conjugate" proved="true">
     <proof prover="11"><result status="valid" time="0.21" steps="130372"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="im_part_conjugate&#39;vc.1" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="im_part_conjugate&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="3.16" steps="746385"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="invol_conjugate&#39;vc" expl="VC for invol_conjugate" proved="true">
 <transf name="eliminate_definition" proved="true" >
  <goal name="invol_conjugate&#39;vc.0" expl="VC for invol_conjugate" proved="true">
  <transf name="rewrite" proved="true" arg1="conjugate&#39;def">
   <goal name="invol_conjugate&#39;vc.0.0" expl="VC for invol_conjugate" proved="true">
   <transf name="rewrite" proved="true" arg1="conjugate&#39;def">
    <goal name="invol_conjugate&#39;vc.0.0.0" expl="VC for invol_conjugate" proved="true">
    <transf name="rewrite" proved="true" arg1="minus_elim">
     <goal name="invol_conjugate&#39;vc.0.0.0.0" expl="VC for invol_conjugate" proved="true">
     <transf name="rewrite" proved="true" arg1="minus_elim">
      <goal name="invol_conjugate&#39;vc.0.0.0.0.0" expl="VC for invol_conjugate" proved="true">
      <proof prover="11"><result status="valid" time="0.51" steps="198911"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="add_conjugate&#39;vc" expl="VC for add_conjugate" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_conjugate&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="add_conjugate&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="conjugate&#39;def">
    <goal name="add_conjugate&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="conjugate&#39;def">
     <goal name="add_conjugate&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="add_real_part_rev">
      <goal name="add_conjugate&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="add_im_part_rev">
       <goal name="add_conjugate&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="assert" proved="true" arg1="(forall a b c d. (a+.b) -. (c+.d) = (a-.c)+.(b-.d))">
        <goal name="add_conjugate&#39;vc.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <transf name="assert" proved="true" arg1="(forall a b. a-. b = a+. (-.b))">
         <goal name="add_conjugate&#39;vc.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="add_conjugate&#39;vc.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="11"><result status="valid" time="0.21" steps="129355"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="add_conjugate&#39;vc.0.0.0.0.0.0.0.1" expl="asserted formula" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="add_conjugate&#39;vc.0.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
          <transf name="rewrite" proved="true" arg1="h1">
           <goal name="add_conjugate&#39;vc.0.0.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
           <transf name="rewrite" proved="true" arg1="h1">
            <goal name="add_conjugate&#39;vc.0.0.0.0.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
            <transf name="rewrite" proved="true" arg1="h1">
             <goal name="add_conjugate&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
             <transf name="assert" proved="true" arg1="(forall a b. -. (a+. b) = -. a+. -. b)">
              <goal name="add_conjugate&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="add_conjugate&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
               <proof prover="11"><result status="valid" time="0.24" steps="129425"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="add_conjugate&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="asserted formula" proved="true">
              <transf name="rewrite" proved="true" arg1="h1">
               <goal name="add_conjugate&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.1.0" expl="asserted formula" proved="true">
               <transf name="assert" proved="true" arg1="(forall a b c d. ((a+.b) +. (c+.d)) = (a+.c) +. (b+.d))">
                <goal name="add_conjugate&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="add_conjugate&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
                 <proof prover="11"><result status="valid" time="0.42" steps="139586"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="add_conjugate&#39;vc.0.0.0.0.0.0.0.1.0.0.0.0.1.0.1" expl="asserted formula" proved="true">
                <proof prover="11"><result status="valid" time="0.22" steps="129569"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="add_conjugate&#39;vc.0.0.0.0.0.0.1" expl="postcondition" proved="true">
        <proof prover="11"><result status="valid" time="0.40" steps="141243"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="add_own_conjugate&#39;vc" expl="VC for add_own_conjugate" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_own_conjugate&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(ttwo *. t_real_part i)" arg2="((t_real_part i) +. (t_real_part i))">
   <goal name="add_own_conjugate&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="complex_decomp" arg2="i">
    <goal name="add_own_conjugate&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="add_own_conjugate&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="eliminate_definition" proved="true" >
      <goal name="add_own_conjugate&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="11"><result status="valid" time="0.84" steps="208595"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="add_own_conjugate&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.24" steps="127766"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="itself_times_conjugate&#39;vc" expl="VC for itself_times_conjugate" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="itself_times_conjugate&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="127799"/></proof>
  </goal>
  <goal name="itself_times_conjugate&#39;vc.1" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="127823"/></proof>
  </goal>
  <goal name="itself_times_conjugate&#39;vc.2" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="itself_times_conjugate&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.50" steps="155698"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="itself_times_conjugate&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.42" steps="148609"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_to_modulus&#39;vc" expl="VC for conjugate_to_modulus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conjugate_to_modulus&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="conjugate_to_modulus&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.30" steps="136770"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_times_itself_pos&#39;vc" expl="VC for conjugate_times_itself_pos" proved="true">
 <transf name="split_all_full" proved="true" >
  <goal name="conjugate_times_itself_pos&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="itself_times_conjugate">
   <goal name="conjugate_times_itself_pos&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="conjugate_times_itself_pos&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="add_pos">
     <goal name="conjugate_times_itself_pos&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="0.35" steps="154287"/></proof>
     </goal>
     <goal name="conjugate_times_itself_pos&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="0.33" steps="154152"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_conjugate&#39;vc" expl="VC for sum_conjugate" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_conjugate&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.28" steps="144274"/></proof>
  </goal>
  <goal name="sum_conjugate&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.14" steps="130577"/></proof>
  </goal>
  <goal name="sum_conjugate&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.35" steps="176633"/></proof>
  </goal>
  <goal name="sum_conjugate&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.41" steps="198738"/></proof>
  </goal>
  <goal name="sum_conjugate&#39;vc.4" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_conjugate&#39;vc.4.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.49" steps="183337"/></proof>
   </goal>
   <goal name="sum_conjugate&#39;vc.4.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.48" steps="183650"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_conjugate&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_conjugate&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.49" steps="220116"/></proof>
   </goal>
   <goal name="sum_conjugate&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.37" steps="171364"/></proof>
   </goal>
   <goal name="sum_conjugate&#39;vc.5.2" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="sum_conjugate&#39;vc.5.2.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="((f @ choose s) +. sum (remove (choose s) s) f)" arg2="(sum s f)">
     <goal name="sum_conjugate&#39;vc.5.2.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(add (choose s) (remove (choose s) s))" arg2="s" arg3="in" arg4="Ensures2">
      <goal name="sum_conjugate&#39;vc.5.2.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures2">
       <goal name="sum_conjugate&#39;vc.5.2.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="(add (choose s) (remove (choose s) s))" arg2="s" arg3="in" arg4="Ensures3">
        <goal name="sum_conjugate&#39;vc.5.2.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures3">
         <goal name="sum_conjugate&#39;vc.5.2.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures1">
          <goal name="sum_conjugate&#39;vc.5.2.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="Ensures">
           <goal name="sum_conjugate&#39;vc.5.2.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="compute_specified" proved="true" >
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="sum_conjugate&#39;vc.5.2.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.42" steps="183509"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="sum_conjugate&#39;vc.5.2.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="0.35" steps="183315"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="sum_conjugate&#39;vc.5.2.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.45" steps="183529"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_module_one&#39;vc" expl="VC for conjugate_module_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conjugate_module_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="128204"/></proof>
  </goal>
  <goal name="conjugate_module_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="128218"/></proof>
  </goal>
  <goal name="conjugate_module_one&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="128235"/></proof>
  </goal>
  <goal name="conjugate_module_one&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.13" steps="117977"/></proof>
  </goal>
  <goal name="conjugate_module_one&#39;vc.4" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(square_rt (i *. conjugate i) = c_one)">
   <goal name="conjugate_module_one&#39;vc.4.0" expl="asserted formula" proved="true">
   <proof prover="11"><result status="valid" time="0.22" steps="128218"/></proof>
   </goal>
   <goal name="conjugate_module_one&#39;vc.4.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.21" steps="128240"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="conjugate_module_one&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="128786"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_module_one_rev&#39;vc" expl="VC for conjugate_module_one_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conjugate_module_one_rev&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.13" steps="118004"/></proof>
  </goal>
  <goal name="conjugate_module_one_rev&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="128357"/></proof>
  </goal>
  <goal name="conjugate_module_one_rev&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="135110"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_real&#39;vc" expl="VC for conjugate_real" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conjugate_real&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.34" steps="136625"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_real_gen&#39;vc" expl="VC for conjugate_real_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conjugate_real_gen&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="128452"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_one&#39;vc" expl="VC for conjugate_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conjugate_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.24" steps="128505"/></proof>
  </goal>
  <goal name="conjugate_one&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.22" steps="128484"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_c_zero&#39;vc" expl="VC for conjugate_c_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conjugate_c_zero&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.24" steps="128583"/></proof>
  </goal>
  <goal name="conjugate_c_zero&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="128562"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_indic&#39;vc" expl="VC for conjugate_indic" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conjugate_indic&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.31" steps="140968"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_indic_rev&#39;vc" expl="VC for conjugate_indic_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conjugate_indic_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.24" steps="133591"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_indic_gen_int&#39;vc" expl="VC for conjugate_indic_gen_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conjugate_indic_gen_int&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.24" steps="133191"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_pure_im&#39;vc" expl="VC for conjugate_pure_im" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conjugate_pure_im&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.39" steps="386078"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_im&#39;vc" expl="VC for conjugate_im" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conjugate_im&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="132591"/></proof>
  </goal>
  <goal name="conjugate_im&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.37" steps="139615"/></proof>
  </goal>
  <goal name="conjugate_im&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.15" steps="121420"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_value&#39;vc" expl="VC for conjugate_value" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conjugate_value&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.36" steps="142224"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_minus_value&#39;vc" expl="VC for conjugate_minus_value" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conjugate_minus_value&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.14" steps="121578"/></proof>
  </goal>
  <goal name="conjugate_minus_value&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.14" steps="121581"/></proof>
  </goal>
  <goal name="conjugate_minus_value&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.13" steps="121584"/></proof>
  </goal>
  <goal name="conjugate_minus_value&#39;vc.3" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(t_im_part c = (-. b))">
   <goal name="conjugate_minus_value&#39;vc.3.0" expl="asserted formula" proved="true">
   <proof prover="11"><result status="valid" time="0.14" steps="121619"/></proof>
   </goal>
   <goal name="conjugate_minus_value&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.42" steps="144484"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="prod_conjugate&#39;vc" expl="VC for prod_conjugate" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="prod_conjugate&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="t_decomp_mult">
   <goal name="prod_conjugate&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="add_eq_t">
    <goal name="prod_conjugate&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="3.96" steps="1100885"/></proof>
    </goal>
    <goal name="prod_conjugate&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="mult_eq_t">
     <goal name="prod_conjugate&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="0.14" steps="121777"/></proof>
     </goal>
     <goal name="prod_conjugate&#39;vc.0.0.1.1" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="im_part_conjugate">
      <goal name="prod_conjugate&#39;vc.0.0.1.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="real_part_conjugate">
       <goal name="prod_conjugate&#39;vc.0.0.1.1.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="minus_out_right">
        <goal name="prod_conjugate&#39;vc.0.0.1.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.34" steps="147472"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="mult_conjugate&#39;vc" expl="VC for mult_conjugate" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mult_conjugate&#39;vc.0" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="( t_real_part (conjugate (a *. b)) = t_real_part (conjugate a *. conjugate b))">
   <goal name="mult_conjugate&#39;vc.0.0" expl="asserted formula" proved="true">
   <proof prover="11"><result status="valid" time="1.28" steps="458949"/></proof>
   </goal>
   <goal name="mult_conjugate&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.42" steps="152783"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="mult_conjugate&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="2.21" steps="706898"/></proof>
  </goal>
  <goal name="mult_conjugate&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.12" steps="122001"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_prod&#39;vc" expl="VC for conjugate_prod" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conjugate_prod&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="t_decomp_mult">
   <goal name="conjugate_prod&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="add_eq_t">
    <goal name="conjugate_prod&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="4.61" steps="1262505"/></proof>
    </goal>
    <goal name="conjugate_prod&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="mult_eq_t">
     <goal name="conjugate_prod&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="0.14" steps="121936"/></proof>
     </goal>
     <goal name="conjugate_prod&#39;vc.0.0.1.1" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="im_part_conjugate">
      <goal name="conjugate_prod&#39;vc.0.0.1.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="real_part_conjugate">
       <goal name="conjugate_prod&#39;vc.0.0.1.1.0.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.38" steps="146533"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="conj_conj_prod&#39;vc" expl="VC for conj_conj_prod" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conj_conj_prod&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.97" steps="312599"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="conj_prod_conj&#39;vc" expl="VC for conj_prod_conj" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conj_prod_conj&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.27" steps="147936"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="itself_prod_conjugate_modulus_one&#39;vc" expl="VC for itself_prod_conjugate_modulus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="itself_prod_conjugate_modulus_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.25" steps="132826"/></proof>
  </goal>
  <goal name="itself_prod_conjugate_modulus_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="132840"/></proof>
  </goal>
  <goal name="itself_prod_conjugate_modulus_one&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.27" steps="132857"/></proof>
  </goal>
  <goal name="itself_prod_conjugate_modulus_one&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.14" steps="122176"/></proof>
  </goal>
  <goal name="itself_prod_conjugate_modulus_one&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="132906"/></proof>
  </goal>
  <goal name="itself_prod_conjugate_modulus_one&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.12" steps="122160"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_prod_itself_modulus_one&#39;vc" expl="VC for conjugate_prod_itself_modulus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conjugate_prod_itself_modulus_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.24" steps="132881"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="modulus_opposite&#39;vc" expl="VC for modulus_opposite" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="modulus_opposite&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="132986"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="modulus_conjugate&#39;vc" expl="VC for modulus_conjugate" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="modulus_conjugate&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.54" steps="196755"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="modulus_pos&#39;vc" expl="VC for modulus_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="modulus_pos&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.25" steps="133112"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="modulus_neg&#39;vc" expl="VC for modulus_neg" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="modulus_neg&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="133190"/></proof>
  </goal>
  <goal name="modulus_neg&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.37" steps="144673"/></proof>
  </goal>
  <goal name="modulus_neg&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="133242"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Int_dec_parts" proved="true">
 <goal name="int_part&#39;vc" expl="VC for int_part" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_part&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.13" steps="121157"/></proof>
  </goal>
  <goal name="int_part&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.25" steps="1363841"/></proof>
  </goal>
  <goal name="int_part&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="int_part&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(from_int(floor (real_part x)) &lt;=* real_part x)">
    <goal name="int_part&#39;vc.2.0.0" expl="asserted formula" proved="true">
    <proof prover="11"><result status="valid" time="0.26" steps="133142"/></proof>
    </goal>
    <goal name="int_part&#39;vc.2.0.1" expl="postcondition" proved="true">
    <proof prover="7"><result status="valid" time="0.23" steps="616585"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="int_part&#39;vc.2.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(  real_part x &lt;* from_int(floor (real_part x)+1))">
    <goal name="int_part&#39;vc.2.1.0" expl="asserted formula" proved="true">
    <transf name="instantiate" proved="true" arg1="Floor_down" arg2="(real_part x)">
     <goal name="int_part&#39;vc.2.1.0.0" expl="asserted formula" proved="true">
     <transf name="eliminate_definition" proved="true" >
      <goal name="int_part&#39;vc.2.1.0.0.0" expl="asserted formula" proved="true">
      <transf name="assert" proved="true" arg1="( real_part x &lt;&#39; from_int (floor (real_part x) + 1))">
       <goal name="int_part&#39;vc.2.1.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="11"><result status="valid" time="0.25" steps="135638"/></proof>
       </goal>
       <goal name="int_part&#39;vc.2.1.0.0.0.1" expl="asserted formula" proved="true">
       <proof prover="11"><result status="valid" time="2.00" steps="571316"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="int_part&#39;vc.2.1.1" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="2.69" steps="731389"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="int_part_int&#39;vc" expl="VC for int_part_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_part_int&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="10"><result status="valid" time="0.25" steps="1364772"/></proof>
  </goal>
  <goal name="int_part_int&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="int_part_int&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.24" steps="132227"/></proof>
   </goal>
   <goal name="int_part_int&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.25" steps="132250"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="dec_part&#39;vc" expl="VC for dec_part" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="dec_part&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.14" steps="121624"/></proof>
  </goal>
  <goal name="dec_part&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="dec_part&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.23" steps="132354"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="dec_part&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="dec_part&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.28" steps="132403"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="dec_part&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="dec_part&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.27" steps="132401"/></proof>
   </goal>
   <goal name="dec_part&#39;vc.3.1" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="result" arg2="( x +. (-. int_part x))">
    <goal name="dec_part&#39;vc.3.1.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="c_one" arg2="( (c_one +. int_part x) +. (-. int_part x))">
     <goal name="dec_part&#39;vc.3.1.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.32" steps="147096"/></proof>
     </goal>
     <goal name="dec_part&#39;vc.3.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.40" steps="146162"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="dec_part&#39;vc.3.1.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.23" steps="132393"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="dec_part_decomp&#39;vc" expl="VC for dec_part_decomp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="dec_part_decomp&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.38" steps="141638"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="dec_part_decomp_rev&#39;vc" expl="VC for dec_part_decomp_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="dec_part_decomp_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="132568"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="dec_part_decomp_int&#39;vc" expl="VC for dec_part_decomp_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="dec_part_decomp_int&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.28" steps="141359"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="dec_part_decomp_int_rev&#39;vc" expl="VC for dec_part_decomp_int_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="dec_part_decomp_int_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="132705"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
