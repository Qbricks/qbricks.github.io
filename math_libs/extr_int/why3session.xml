<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.6" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="extr_int.mlw"/>
<theory name="Ind_isum" proved="true">
 <goal name="ind_isum&#39;vc" expl="VC for ind_isum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_isum&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.08" steps="66314"/></proof>
   </goal>
   <goal name="ind_isum&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.06" steps="63978"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_isum&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_isum&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.24" steps="120024"/></proof>
   </goal>
   <goal name="ind_isum&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="128639"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_empty&#39;vc" expl="VC for ind_isum_empty" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_empty&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="109960"/></proof>
  </goal>
  <goal name="ind_isum_empty&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.11" steps="113153"/></proof>
  </goal>
  <goal name="ind_isum_empty&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.18" steps="115139"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_one&#39;vc" expl="VC for ind_isum_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.17" steps="97023"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_plus_one&#39;vc" expl="VC for ind_isum_plus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_plus_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07" steps="110172"/></proof>
  </goal>
  <goal name="ind_isum_plus_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.12" steps="113371"/></proof>
  </goal>
  <goal name="ind_isum_plus_one&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.23" steps="121422"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_to_isum&#39;vc" expl="VC for ind_isum_to_isum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_to_isum&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="1.15" steps="461664"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_const&#39;vc" expl="VC for ind_isum_const" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_const&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07" steps="110498"/></proof>
  </goal>
  <goal name="ind_isum_const&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_isum_const&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="114139"/></proof>
   </goal>
   <goal name="ind_isum_const&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.11" steps="110700"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_isum_const&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.17" steps="114166"/></proof>
  </goal>
  <goal name="ind_isum_const&#39;vc.3" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="ind_isum_const&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.20" steps="120249"/></proof>
   </goal>
   <goal name="ind_isum_const&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="115113"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_null&#39;vc" expl="VC for ind_isum_null" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_null&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.08" steps="89486"/></proof>
  </goal>
  <goal name="ind_isum_null&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_isum_null&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="92381"/></proof>
   </goal>
   <goal name="ind_isum_null&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.09" steps="89547"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_isum_null&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.13" steps="92408"/></proof>
  </goal>
  <goal name="ind_isum_null&#39;vc.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.18" steps="98244"/></proof>
  </goal>
  <goal name="ind_isum_null&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.17" steps="98295"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_right_extension&#39;vc" expl="VC for ind_isum_right_extension" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_right_extension&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.12" steps="113928"/></proof>
  </goal>
  <goal name="ind_isum_right_extension&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.21" steps="122289"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_re&#39;vc" expl="VC for ind_isum_re" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_re&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.09" steps="89762"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_re_null&#39;vc" expl="VC for ind_isum_re_null" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_re_null&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.17" steps="99705"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_null_but_maybe_one_elt&#39;vc" expl="VC for ind_isum_null_but_maybe_one_elt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_null_but_maybe_one_elt&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.09" steps="90154"/></proof>
  </goal>
  <goal name="ind_isum_null_but_maybe_one_elt&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.14" steps="93101"/></proof>
  </goal>
  <goal name="ind_isum_null_but_maybe_one_elt&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.14" steps="93251"/></proof>
  </goal>
  <goal name="ind_isum_null_but_maybe_one_elt&#39;vc.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.18" steps="99550"/></proof>
  </goal>
  <goal name="ind_isum_null_but_maybe_one_elt&#39;vc.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.14" steps="93055"/></proof>
  </goal>
  <goal name="ind_isum_null_but_maybe_one_elt&#39;vc.5" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_isum_null_but_maybe_one_elt&#39;vc.5.0" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="93095"/></proof>
   </goal>
   <goal name="ind_isum_null_but_maybe_one_elt&#39;vc.5.1" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.09" steps="90254"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_isum_null_but_maybe_one_elt&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_isum_null_but_maybe_one_elt&#39;vc.6.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.09" steps="90238"/></proof>
   </goal>
   <goal name="ind_isum_null_but_maybe_one_elt&#39;vc.6.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.13" steps="93127"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_isum_null_but_maybe_one_elt&#39;vc.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_isum_null_but_maybe_one_elt&#39;vc.7.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="99480"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_isum_null_but_maybe_one_elt&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_isum_null_but_maybe_one_elt&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="ind_isum_null_but_maybe_one_elt&#39;vc.8.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.03" steps="96"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_eq&#39;vc" expl="VC for ind_isum_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_eq&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.17" steps="120921"/></proof>
  </goal>
  <goal name="ind_isum_eq&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.12" steps="114838"/></proof>
  </goal>
  <goal name="ind_isum_eq&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.18" steps="116314"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_to_guard&#39;vc" expl="VC for ind_isum_to_guard" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_to_guard&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.23" steps="127821"/></proof>
  </goal>
  <goal name="ind_isum_to_guard&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.23" steps="125127"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_no_guard&#39;vc" expl="VC for ind_isum_no_guard" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_no_guard&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.24" steps="128150"/></proof>
  </goal>
  <goal name="ind_isum_no_guard&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.22" steps="125475"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_eq_gen&#39;vc" expl="VC for ind_isum_eq_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_eq_gen&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.17" steps="99742"/></proof>
  </goal>
  <goal name="ind_isum_eq_gen&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.14" steps="94071"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_func_const&#39;vc" expl="VC for ind_isum_func_const" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_func_const&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.11" steps="94392"/></proof>
  </goal>
  <goal name="ind_isum_func_const&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.23" steps="122853"/></proof>
  </goal>
  <goal name="ind_isum_func_const&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.22"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_pos&#39;vc" expl="VC for ind_isum_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_pos&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_isum_pos&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.09" steps="91845"/></proof>
   </goal>
   <goal name="ind_isum_pos&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.10" steps="91854"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_isum_pos&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.14" steps="94760"/></proof>
  </goal>
  <goal name="ind_isum_pos&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.17" steps="101440"/></proof>
  </goal>
  <goal name="ind_isum_pos&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.17" steps="101401"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_map_auto&#39;vc" expl="VC for ind_isum_map_auto" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_map_auto&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.12" steps="116936"/></proof>
  </goal>
  <goal name="ind_isum_map_auto&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.32" steps="147905"/></proof>
  </goal>
  <goal name="ind_isum_map_auto&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.13" steps="117090"/></proof>
  </goal>
  <goal name="ind_isum_map_auto&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="551727"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_rev&#39;vc" expl="VC for ind_isum_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_rev&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="ind_isum_rev&#39;vc.0.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_bijective1">
    <goal name="ind_isum_rev&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="ind_isum_rev&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="4"><result status="valid" time="0.25" steps="154996"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ind_isum_rev&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="ind_isum_rev&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <proof prover="4"><result status="valid" time="0.26" steps="155176"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ind_isum_rev&#39;vc.0.0.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="ind_isum_rev&#39;vc.0.0.2.0" expl="apply premises" proved="true">
     <transf name="exists" proved="true" arg1="(((j - e&#39;) - 1) + i)">
      <goal name="ind_isum_rev&#39;vc.0.0.2.0.0" proved="true">
      <proof prover="4"><result status="valid" time="0.37" steps="154882"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ind_isum_rev&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="2.27" steps="14789"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_map&#39;vc" expl="VC for ind_isum_map" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_map&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.13" steps="117234"/></proof>
  </goal>
  <goal name="ind_isum_map&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.34" steps="150777"/></proof>
  </goal>
  <goal name="ind_isum_map&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.16" steps="117388"/></proof>
  </goal>
  <goal name="ind_isum_map&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="414727"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_map_auto_bij&#39;vc" expl="VC for ind_isum_map_auto_bij" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_map_auto_bij&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.28" steps="138043"/></proof>
  </goal>
  <goal name="ind_isum_map_auto_bij&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.25" steps="138414"/></proof>
  </goal>
  <goal name="ind_isum_map_auto_bij&#39;vc.2" expl="precondition" proved="true">
  <transf name="instantiate" proved="true" arg1="Requires2" arg2="e&#39;">
   <goal name="ind_isum_map_auto_bij&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="5.02" steps="1984265"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_isum_map_auto_bij&#39;vc.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.14" steps="126803"/></proof>
  </goal>
  <goal name="ind_isum_map_auto_bij&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.29" steps="139931"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_map_bij&#39;vc" expl="VC for ind_isum_map_bij" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_map_bij&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.30" steps="139053"/></proof>
  </goal>
  <goal name="ind_isum_map_bij&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.30" steps="139571"/></proof>
  </goal>
  <goal name="ind_isum_map_bij&#39;vc.2" expl="precondition" proved="true">
  <transf name="instantiate" proved="true" arg1="Requires2" arg2="e&#39;">
   <goal name="ind_isum_map_bij&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.11" steps="1109"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_isum_map_bij&#39;vc.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.14" steps="127570"/></proof>
  </goal>
  <goal name="ind_isum_map_bij&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.28" steps="141195"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_transl&#39;vc" expl="VC for ind_isum_transl" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_transl&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.13" steps="118089"/></proof>
  </goal>
  <goal name="ind_isum_transl&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="1.20" steps="359984"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_transl_plus_one&#39;vc" expl="VC for ind_isum_transl_plus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_transl_plus_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.20" steps="104913"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_transl_minus_one&#39;vc" expl="VC for ind_isum_transl_minus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_transl_minus_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.21" steps="105152"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_scal&#39;vc" expl="VC for ind_isum_scal" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_scal&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_isum_scal&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.11" steps="94418"/></proof>
   </goal>
   <goal name="ind_isum_scal&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.11" steps="94427"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_isum_scal&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.16" steps="97578"/></proof>
  </goal>
  <goal name="ind_isum_scal&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.53"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="minus_ind_isum&#39;vc" expl="VC for minus_ind_isum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="minus_ind_isum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07" steps="70456"/></proof>
  </goal>
  <goal name="minus_ind_isum&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="1.12" steps="355389"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="minus_ind_isum_rev&#39;vc" expl="VC for minus_ind_isum_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="minus_ind_isum_rev&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="minus_ind_isum">
   <goal name="minus_ind_isum_rev&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
   <goal name="minus_ind_isum_rev&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="4"><result status="valid" time="0.09" steps="70657"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_scal_rev&#39;vc" expl="VC for ind_isum_scal_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_scal_rev&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07" steps="70855"/></proof>
  </goal>
  <goal name="ind_isum_scal_rev&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="1.01" steps="336175"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_scal_rev_right&#39;vc" expl="VC for ind_isum_scal_rev_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_scal_rev_right&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.08" steps="71070"/></proof>
  </goal>
  <goal name="ind_isum_scal_rev_right&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.99" steps="336772"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_scal_right&#39;vc" expl="VC for ind_isum_scal_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_scal_right&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.08" steps="71285"/></proof>
  </goal>
  <goal name="ind_isum_scal_right&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.96" steps="337117"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_bound&#39;vc" expl="VC for ind_isum_bound" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_bound&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_isum_bound&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.18" steps="98588"/></proof>
   </goal>
   <goal name="ind_isum_bound&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.12" steps="95443"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_isum_bound&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.17" steps="98626"/></proof>
  </goal>
  <goal name="ind_isum_bound&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.23" steps="106186"/></proof>
  </goal>
  <goal name="ind_isum_bound&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.29" steps="107629"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_bound_eq&#39;vc" expl="VC for ind_isum_bound_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_bound_eq&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_isum_bound_eq&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.12" steps="95724"/></proof>
   </goal>
   <goal name="ind_isum_bound_eq&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.12" steps="95733"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_isum_bound_eq&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.17" steps="98926"/></proof>
  </goal>
  <goal name="ind_isum_bound_eq&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.23" steps="108303"/></proof>
  </goal>
  <goal name="ind_isum_bound_eq&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.24" steps="108596"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_scal_gen&#39;vc" expl="VC for ind_isum_scal_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_scal_gen&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="ind_isum_scal">
   <goal name="ind_isum_scal_gen&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="4"><result status="valid" time="0.10" steps="74824"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_trans&#39;vc" expl="VC for ind_isum_trans" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_trans&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.14" steps="120296"/></proof>
  </goal>
  <goal name="ind_isum_trans&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.15" steps="120299"/></proof>
  </goal>
  <goal name="ind_isum_trans&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.24" steps="124440"/></proof>
  </goal>
  <goal name="ind_isum_trans&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ind_isum_trans&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="120429"/></proof>
   </goal>
   <goal name="ind_isum_trans&#39;vc.3.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="120429"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ind_isum_trans&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.30" steps="129907"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="From_int_iter" proved="true">
 <goal name="from_int_sum&#39;vc" expl="VC for from_int_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="from_int_sum&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="from_int_sum&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="196793"/></proof>
   </goal>
   <goal name="from_int_sum&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.27" steps="196802"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="from_int_sum&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.42" steps="210327"/></proof>
  </goal>
  <goal name="from_int_sum&#39;vc.2" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(j=i)">
   <goal name="from_int_sum&#39;vc.2.0" expl="true case (postcondition)" proved="true">
   <proof prover="4"><result status="valid" time="0.59" steps="225496"/></proof>
   </goal>
   <goal name="from_int_sum&#39;vc.2.1" expl="false case (postcondition)" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="from_int_sum&#39;vc.2.1.0" expl="false case (postcondition)" proved="true">
    <proof prover="4"><result status="valid" time="0.18" steps="196545"/></proof>
    </goal>
    <goal name="from_int_sum&#39;vc.2.1.1" expl="false case (postcondition)" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="from_int_sum&#39;vc.2.1.1.0" expl="false case (postcondition)" proved="true">
     <transf name="destruct" proved="true" arg1="H">
      <goal name="from_int_sum&#39;vc.2.1.1.0.0" expl="false case (postcondition)" proved="true">
      <transf name="destruct" proved="true" arg1="H">
       <goal name="from_int_sum&#39;vc.2.1.1.0.0.0" expl="false case (postcondition)" proved="true">
       <transf name="replace" proved="true" arg1="((j - 1) + 1)" arg2="j" arg3="in" arg4="H1
">
        <goal name="from_int_sum&#39;vc.2.1.1.0.0.0.0" expl="false case (postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="H1">
         <goal name="from_int_sum&#39;vc.2.1.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
         <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
          <goal name="from_int_sum&#39;vc.2.1.1.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
          <proof prover="4"><result status="valid" time="2.31" steps="647801"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="from_int_sum&#39;vc.2.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.45" steps="210361"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="from_int_sum&#39;vc.2.1.1.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="4"><result status="valid" time="0.19" steps="196814"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="i_to_c_sum&#39;vc" expl="VC for i_to_c_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="i_to_c_sum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.50" steps="240921"/></proof>
  </goal>
  <goal name="i_to_c_sum&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.48" steps="241337"/></proof>
  </goal>
  <goal name="i_to_c_sum&#39;vc.2" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="i_to_c_sum&#39;vc.2.0" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.49" steps="243816"/></proof>
   </goal>
   <goal name="i_to_c_sum&#39;vc.2.1" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.69" steps="258435"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="i_to_c_sum&#39;vc.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.70" steps="258385"/></proof>
  </goal>
  <goal name="i_to_c_sum&#39;vc.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.64" steps="258549"/></proof>
  </goal>
  <goal name="i_to_c_sum&#39;vc.5" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="i_to_c_sum&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="i_to_c_sum&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="isum&#39;def">
     <goal name="i_to_c_sum&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="iterate_one">
      <goal name="i_to_c_sum&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="4"><result status="valid" time="0.51" steps="257835"/></proof>
      </goal>
      <goal name="i_to_c_sum&#39;vc.5.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.23" steps="226230"/></proof>
      </goal>
      <goal name="i_to_c_sum&#39;vc.5.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="1.67" steps="696104"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="i_to_c_sum&#39;vc.5.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="i_to_c_sum&#39;vc.5.1.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(add (choose s) (remove (choose s) s))" arg2="s" arg3="in" arg4="H">
     <goal name="i_to_c_sum&#39;vc.5.1.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="i_to_c_sum&#39;vc.5.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H2">
       <goal name="i_to_c_sum&#39;vc.5.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="H1">
        <goal name="i_to_c_sum&#39;vc.5.1.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="1"><result status="valid" time="4.80"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="i_to_c_sum&#39;vc.5.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="4"><result status="valid" time="0.52" steps="258169"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="from_int_product&#39;vc" expl="VC for from_int_product" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="from_int_product&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.29" steps="210556"/></proof>
  </goal>
  <goal name="from_int_product&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="from_int_product&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="197311"/></proof>
   </goal>
   <goal name="from_int_product&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="197320"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="from_int_product&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.41" steps="210854"/></proof>
  </goal>
  <goal name="from_int_product&#39;vc.3" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(j=i)">
   <goal name="from_int_product&#39;vc.3.0" expl="true case (postcondition)" proved="true">
   <proof prover="4"><result status="valid" time="0.56" steps="225774"/></proof>
   </goal>
   <goal name="from_int_product&#39;vc.3.1" expl="false case (postcondition)" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="from_int_product&#39;vc.3.1.0" expl="false case (postcondition)" proved="true">
    <proof prover="4"><result status="valid" time="0.19" steps="197091"/></proof>
    </goal>
    <goal name="from_int_product&#39;vc.3.1.1" expl="false case (postcondition)" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="from_int_product&#39;vc.3.1.1.0" expl="false case (postcondition)" proved="true">
     <transf name="destruct" proved="true" arg1="H">
      <goal name="from_int_product&#39;vc.3.1.1.0.0" expl="false case (postcondition)" proved="true">
      <transf name="destruct" proved="true" arg1="H">
       <goal name="from_int_product&#39;vc.3.1.1.0.0.0" expl="false case (postcondition)" proved="true">
       <transf name="replace" proved="true" arg1="((j - 1) + 1)" arg2="j" arg3="in" arg4="H1
">
        <goal name="from_int_product&#39;vc.3.1.1.0.0.0.0" expl="false case (postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="H1">
         <goal name="from_int_product&#39;vc.3.1.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
         <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
          <goal name="from_int_product&#39;vc.3.1.1.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
          <proof prover="4"><result status="valid" time="0.61" steps="229231"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="from_int_product&#39;vc.3.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.32" steps="210897"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="from_int_product&#39;vc.3.1.1.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="4"><result status="valid" time="0.20" steps="197339"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="P_minmax_b" proved="true">
 <goal name="min_filter_b&#39;vc" expl="VC for min_filter_b" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="min_filter_b&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_filter_b&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.32" steps="164975"/></proof>
   </goal>
   <goal name="min_filter_b&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.18" steps="153446"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_filter_b&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_filter_b&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.43" steps="173229"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_filter_b&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_filter_b&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="min_filter_b&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="min_filter_b&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="min_filter&#39;def1">
      <goal name="min_filter_b&#39;vc.2.0.0.0.0" expl="postcondition" proved="true">
      <transf name="case" proved="true" arg1="(i+&#39; 1 = j)">
       <goal name="min_filter_b&#39;vc.2.0.0.0.0.0" expl="true case (postcondition)" proved="true">
       <proof prover="4"><result status="valid" time="1.73" steps="548292"/></proof>
       </goal>
       <goal name="min_filter_b&#39;vc.2.0.0.0.0.1" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="min_set&#39;def">
        <goal name="min_filter_b&#39;vc.2.0.0.0.0.1.0" expl="false case (postcondition)" proved="true">
        <transf name="assert" proved="true" arg1="(result
  &lt;=&#39; min (choose (to_fset i j))
    (min_set (remove (choose (to_fset i j)) (to_fset i j))))">
         <goal name="min_filter_b&#39;vc.2.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
         <transf name="assert" proved="true" arg1="(forall a b c. a &lt;=&#39; b -&gt; a &lt;=&#39; c -&gt; a &lt;=&#39; min b c)">
          <goal name="min_filter_b&#39;vc.2.0.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
          <proof prover="4"><result status="valid" time="0.55" steps="207479"/></proof>
          </goal>
          <goal name="min_filter_b&#39;vc.2.0.0.0.0.1.0.0.1" expl="asserted formula" proved="true">
          <transf name="apply" proved="true" arg1="h">
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="min_filter_b&#39;vc.2.0.0.0.0.1.0.1" expl="false case (postcondition)" proved="true">
         <transf name="assert" proved="true" arg1="(min (choose (to_fset i j))
    (min_set (remove (choose (to_fset i j)) (to_fset i j))) &lt;=&#39; i )">
          <goal name="min_filter_b&#39;vc.2.0.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
          <transf name="assert" proved="true" arg1="(forall a b c. b &lt;=&#39; a -&gt; c &lt;=&#39; a -&gt;  min b c &lt;=&#39; a)">
           <goal name="min_filter_b&#39;vc.2.0.0.0.0.1.0.1.0.0" expl="asserted formula" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="min_filter_b&#39;vc.2.0.0.0.0.1.0.1.0.0.0" expl="asserted formula" proved="true">
            <proof prover="4"><result status="valid" time="0.54" steps="208242"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="min_filter_b&#39;vc.2.0.0.0.0.1.0.1.0.1" expl="asserted formula" proved="true">
           <transf name="apply" proved="true" arg1="h">
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="min_filter_b&#39;vc.2.0.0.0.0.1.0.1.1" expl="false case (postcondition)" proved="true">
          <proof prover="4"><result status="valid" time="0.31" steps="204391"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="min_filter_b&#39;vc.2.0.0.0.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="4"><result status="valid" time="0.53" steps="218886"/></proof>
        </goal>
        <goal name="min_filter_b&#39;vc.2.0.0.0.0.1.2" expl="rewrite premises" proved="true">
        <proof prover="4"><result status="valid" time="0.55" steps="218819"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="min_filter_b&#39;vc.2.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="1.61" steps="595545"/></proof>
      </goal>
      <goal name="min_filter_b&#39;vc.2.0.0.0.2" expl="rewrite premises" proved="true">
      <transf name="case" proved="true" arg1="(i+&#39; 1 = j)">
       <goal name="min_filter_b&#39;vc.2.0.0.0.2.0" expl="true case (rewrite premises)" proved="true">
       <proof prover="4"><result status="valid" time="1.48" steps="549394"/></proof>
       </goal>
       <goal name="min_filter_b&#39;vc.2.0.0.0.2.1" expl="false case (rewrite premises)" proved="true">
       <transf name="rewrite" proved="true" arg1="min_set&#39;def">
        <goal name="min_filter_b&#39;vc.2.0.0.0.2.1.0" expl="false case (rewrite premises)" proved="true">
        <transf name="assert" proved="true" arg1="(result
  &lt;=&#39; min (choose (to_fset i j))
    (min_set (remove (choose (to_fset i j)) (to_fset i j))))">
         <goal name="min_filter_b&#39;vc.2.0.0.0.2.1.0.0" expl="asserted formula" proved="true">
         <transf name="assert" proved="true" arg1="(forall a b c. a &lt;=&#39; b -&gt; a &lt;=&#39; c -&gt; a &lt;=&#39; min b c)">
          <goal name="min_filter_b&#39;vc.2.0.0.0.2.1.0.0.0" expl="asserted formula" proved="true">
          <proof prover="4"><result status="valid" time="0.58" steps="207479"/></proof>
          </goal>
          <goal name="min_filter_b&#39;vc.2.0.0.0.2.1.0.0.1" expl="asserted formula" proved="true">
          <transf name="apply" proved="true" arg1="h">
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="min_filter_b&#39;vc.2.0.0.0.2.1.0.1" expl="false case (rewrite premises)" proved="true">
         <transf name="assert" proved="true" arg1="(min (choose (to_fset i j))
    (min_set (remove (choose (to_fset i j)) (to_fset i j))) &lt;=&#39; i )">
          <goal name="min_filter_b&#39;vc.2.0.0.0.2.1.0.1.0" expl="asserted formula" proved="true">
          <transf name="assert" proved="true" arg1="(forall a b c. b &lt;=&#39; a -&gt; c &lt;=&#39; a -&gt;  min b c &lt;=&#39; a)">
           <goal name="min_filter_b&#39;vc.2.0.0.0.2.1.0.1.0.0" expl="asserted formula" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="min_filter_b&#39;vc.2.0.0.0.2.1.0.1.0.0.0" expl="asserted formula" proved="true">
            <proof prover="4"><result status="valid" time="0.58" steps="208242"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="min_filter_b&#39;vc.2.0.0.0.2.1.0.1.0.1" expl="asserted formula" proved="true">
           <transf name="apply" proved="true" arg1="h">
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="min_filter_b&#39;vc.2.0.0.0.2.1.0.1.1" expl="false case (rewrite premises)" proved="true">
          <proof prover="4"><result status="valid" time="0.46" steps="204395"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="min_filter_b&#39;vc.2.0.0.0.2.1.1" expl="rewrite premises" proved="true">
        <proof prover="4"><result status="valid" time="0.60" steps="218886"/></proof>
        </goal>
        <goal name="min_filter_b&#39;vc.2.0.0.0.2.1.2" expl="rewrite premises" proved="true">
        <proof prover="4"><result status="valid" time="0.62" steps="218819"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="min_filter_b&#39;vc.2.1" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="min_filter_b&#39;vc.2.1.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="min_filter_b&#39;vc.2.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="min_filter&#39;def">
      <goal name="min_filter_b&#39;vc.2.1.0.0.0" expl="postcondition" proved="true">
      <transf name="case" proved="true" arg1="(i+&#39; 1 = j)">
       <goal name="min_filter_b&#39;vc.2.1.0.0.0.0" expl="true case (postcondition)" proved="true">
       <proof prover="4"><result status="valid" time="0.32" steps="203460"/></proof>
       </goal>
       <goal name="min_filter_b&#39;vc.2.1.0.0.0.1" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="min_set&#39;def">
        <goal name="min_filter_b&#39;vc.2.1.0.0.0.1.0" expl="false case (postcondition)" proved="true">
        <transf name="assert" proved="true" arg1="(result
  &lt;=&#39; min (choose (to_fset i j))
    (min_set (remove (choose (to_fset i j)) (to_fset i j))))">
         <goal name="min_filter_b&#39;vc.2.1.0.0.0.1.0.0" expl="asserted formula" proved="true">
         <transf name="assert" proved="true" arg1="(forall a b c. a &lt;=&#39; b -&gt; a &lt;=&#39; c -&gt; a &lt;=&#39; min b c)">
          <goal name="min_filter_b&#39;vc.2.1.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
          <proof prover="4"><result status="valid" time="0.55" steps="208279"/></proof>
          </goal>
          <goal name="min_filter_b&#39;vc.2.1.0.0.0.1.0.0.1" expl="asserted formula" proved="true">
          <transf name="apply" proved="true" arg1="h">
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="min_filter_b&#39;vc.2.1.0.0.0.1.0.1" expl="false case (postcondition)" proved="true">
         <transf name="assert" proved="true" arg1="(min (choose (to_fset i j))
    (min_set (remove (choose (to_fset i j)) (to_fset i j))) &lt;=&#39; i )">
          <goal name="min_filter_b&#39;vc.2.1.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
          <transf name="assert" proved="true" arg1="(forall a b c. b &lt;=&#39; a -&gt; c &lt;=&#39; a -&gt;  min b c &lt;=&#39; a)">
           <goal name="min_filter_b&#39;vc.2.1.0.0.0.1.0.1.0.0" expl="asserted formula" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="min_filter_b&#39;vc.2.1.0.0.0.1.0.1.0.0.0" expl="asserted formula" proved="true">
            <proof prover="4"><result status="valid" time="0.54" steps="208888"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="min_filter_b&#39;vc.2.1.0.0.0.1.0.1.0.1" expl="asserted formula" proved="true">
           <transf name="apply" proved="true" arg1="h">
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="min_filter_b&#39;vc.2.1.0.0.0.1.0.1.1" expl="false case (postcondition)" proved="true">
          <proof prover="4"><result status="valid" time="0.32" steps="204916"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="min_filter_b&#39;vc.2.1.0.0.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="4"><result status="valid" time="0.58" steps="219683"/></proof>
        </goal>
        <goal name="min_filter_b&#39;vc.2.1.0.0.0.1.2" expl="rewrite premises" proved="true">
        <proof prover="4"><result status="valid" time="0.44" steps="219611"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="min_filter_b&#39;vc.2.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="1.60" steps="598238"/></proof>
      </goal>
      <goal name="min_filter_b&#39;vc.2.1.0.0.2" expl="rewrite premises" proved="true">
      <transf name="case" proved="true" arg1="(i+&#39; 1 = j)">
       <goal name="min_filter_b&#39;vc.2.1.0.0.2.0" expl="true case (rewrite premises)" proved="true">
       <proof prover="4"><result status="valid" time="0.32" steps="200100"/></proof>
       </goal>
       <goal name="min_filter_b&#39;vc.2.1.0.0.2.1" expl="false case (rewrite premises)" proved="true">
       <transf name="rewrite" proved="true" arg1="min_set&#39;def">
        <goal name="min_filter_b&#39;vc.2.1.0.0.2.1.0" expl="false case (rewrite premises)" proved="true">
        <transf name="assert" proved="true" arg1="(result
  &lt;=&#39; min (choose (to_fset i j))
    (min_set (remove (choose (to_fset i j)) (to_fset i j))))">
         <goal name="min_filter_b&#39;vc.2.1.0.0.2.1.0.0" expl="asserted formula" proved="true">
         <transf name="assert" proved="true" arg1="(forall a b c. a &lt;=&#39; b -&gt; a &lt;=&#39; c -&gt; a &lt;=&#39; min b c)">
          <goal name="min_filter_b&#39;vc.2.1.0.0.2.1.0.0.0" expl="asserted formula" proved="true">
          <proof prover="4"><result status="valid" time="0.58" steps="208279"/></proof>
          </goal>
          <goal name="min_filter_b&#39;vc.2.1.0.0.2.1.0.0.1" expl="asserted formula" proved="true">
          <transf name="apply" proved="true" arg1="h">
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="min_filter_b&#39;vc.2.1.0.0.2.1.0.1" expl="false case (rewrite premises)" proved="true">
         <transf name="assert" proved="true" arg1="(min (choose (to_fset i j))
    (min_set (remove (choose (to_fset i j)) (to_fset i j))) &lt;=&#39; i )">
          <goal name="min_filter_b&#39;vc.2.1.0.0.2.1.0.1.0" expl="asserted formula" proved="true">
          <transf name="assert" proved="true" arg1="(forall a b c. b &lt;=&#39; a -&gt; c &lt;=&#39; a -&gt;  min b c &lt;=&#39; a)">
           <goal name="min_filter_b&#39;vc.2.1.0.0.2.1.0.1.0.0" expl="asserted formula" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="min_filter_b&#39;vc.2.1.0.0.2.1.0.1.0.0.0" expl="asserted formula" proved="true">
            <proof prover="4"><result status="valid" time="0.56" steps="208888"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="min_filter_b&#39;vc.2.1.0.0.2.1.0.1.0.1" expl="asserted formula" proved="true">
           <transf name="apply" proved="true" arg1="h">
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="min_filter_b&#39;vc.2.1.0.0.2.1.0.1.1" expl="false case (rewrite premises)" proved="true">
          <proof prover="4"><result status="valid" time="0.32" steps="204871"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="min_filter_b&#39;vc.2.1.0.0.2.1.1" expl="rewrite premises" proved="true">
        <proof prover="4"><result status="valid" time="0.44" steps="219683"/></proof>
        </goal>
        <goal name="min_filter_b&#39;vc.2.1.0.0.2.1.2" expl="rewrite premises" proved="true">
        <proof prover="4"><result status="valid" time="0.44" steps="219611"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="min_filter_b&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_filter_b&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.31" steps="164993"/></proof>
   </goal>
   <goal name="min_filter_b&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="153816"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_filter_b&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_filter_b&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.34" steps="165671"/></proof>
   </goal>
   <goal name="min_filter_b&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.33" steps="165615"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_filter_b&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_filter_b&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.30" steps="165145"/></proof>
   </goal>
   <goal name="min_filter_b&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.36" steps="174285"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="min_filter_b&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="min_filter_b&#39;vc.6.0" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.27" steps="165309"/></proof>
   </goal>
   <goal name="min_filter_b&#39;vc.6.1" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.36" steps="174391"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
