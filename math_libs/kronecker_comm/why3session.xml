<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.8.6" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="7" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="8" name="Z3" version="4.8.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="9" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="kronecker_comm.mlw"/>
<theory name="Kronecker_comm" proved="true">
 <goal name="kronecker_scalar_distr&#39;vc" expl="VC for kronecker_scalar_distr" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_scalar_distr&#39;vc.0" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.10" steps="480"/></proof>
  </goal>
  <goal name="kronecker_scalar_distr&#39;vc.1" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="0.09" steps="480"/></proof>
  </goal>
  <goal name="kronecker_scalar_distr&#39;vc.2" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_values">
   <goal name="kronecker_scalar_distr&#39;vc.2.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="scalar_values">
    <goal name="kronecker_scalar_distr&#39;vc.2.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="scalar_values">
     <goal name="kronecker_scalar_distr&#39;vc.2.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_values">
      <goal name="kronecker_scalar_distr&#39;vc.2.0.0.0.0" expl="precondition" proved="true">
      <proof prover="9"><result status="valid" time="0.44" steps="217517"/></proof>
      </goal>
      <goal name="kronecker_scalar_distr&#39;vc.2.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.57" steps="236229"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_scalar_distr&#39;vc.2.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.26" steps="201853"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="kronecker_scalar_distr&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.26" steps="201826"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_scalar_distr_r&#39;vc" expl="VC for kronecker_scalar_distr_r" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="kronecker_scalar_distr_r&#39;vc.0" expl="VC for kronecker_scalar_distr_r" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="kronecker_scalar_distr_r&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.57" steps="234361"/></proof>
   </goal>
   <goal name="kronecker_scalar_distr_r&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.56" steps="234490"/></proof>
   </goal>
   <goal name="kronecker_scalar_distr_r&#39;vc.0.2" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="kronecker_scalar_distr_r&#39;vc.0.2.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="scalar_values">
     <goal name="kronecker_scalar_distr_r&#39;vc.0.2.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="scalar_values">
      <goal name="kronecker_scalar_distr_r&#39;vc.0.2.0.0.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_values">
       <goal name="kronecker_scalar_distr_r&#39;vc.0.2.0.0.0.0" expl="precondition" proved="true">
       <proof prover="7"><result status="valid" time="0.10" steps="540"/></proof>
       </goal>
       <goal name="kronecker_scalar_distr_r&#39;vc.0.2.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.56" steps="236269"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_scalar_distr_r&#39;vc.0.2.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.25" steps="201930"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_scalar_distr_r&#39;vc.0.3" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.26" steps="201903"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_scalar_distr_rev&#39;vc" expl="VC for kronecker_scalar_distr_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_scalar_distr_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.41" steps="211544"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_scalar_distr_rev_r&#39;vc" expl="VC for kronecker_scalar_distr_rev_r" proved="true">
 <proof prover="9"><result status="valid" time="0.40" steps="211323"/></proof>
 </goal>
 <goal name="kronecker_scalars&#39;vc" expl="VC for kronecker_scalars" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="kronecker_scalars&#39;vc.0" expl="VC for kronecker_scalars" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="kronecker_scalars&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.76" steps="281204"/></proof>
   </goal>
   <goal name="kronecker_scalars&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.74" steps="281197"/></proof>
   </goal>
   <goal name="kronecker_scalars&#39;vc.0.2" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="scalar_values">
    <goal name="kronecker_scalars&#39;vc.0.2.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_values">
     <goal name="kronecker_scalars&#39;vc.0.2.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_values">
      <goal name="kronecker_scalars&#39;vc.0.2.0.0.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="scalar_values">
       <goal name="kronecker_scalars&#39;vc.0.2.0.0.0.0" expl="precondition" proved="true">
       <transf name="rewrite" proved="true" arg1="scalar_values">
        <goal name="kronecker_scalars&#39;vc.0.2.0.0.0.0.0" expl="precondition" proved="true">
        <proof prover="9"><result status="valid" time="1.83" steps="630968"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="kronecker_scalars&#39;vc.0.2.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.57" steps="238536"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_scalars&#39;vc.0.2.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.25" steps="202268"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_scalars&#39;vc.0.3" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.26" steps="202241"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="mat_k_id&#39;vc" expl="VC for mat_k_id" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mat_k_id&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.55" steps="224784"/></proof>
  </goal>
  <goal name="mat_k_id&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.54" steps="224784"/></proof>
  </goal>
  <goal name="mat_k_id&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.24" steps="197051"/></proof>
  </goal>
  <goal name="mat_k_id&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.76" steps="289276"/></proof>
  </goal>
  <goal name="mat_k_id&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.74" steps="289276"/></proof>
  </goal>
  <goal name="mat_k_id&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.76" steps="287576"/></proof>
  </goal>
  <goal name="mat_k_id&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.75" steps="287576"/></proof>
  </goal>
  <goal name="mat_k_id&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.73" steps="288255"/></proof>
  </goal>
  <goal name="mat_k_id&#39;vc.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.70" steps="288255"/></proof>
  </goal>
  <goal name="mat_k_id&#39;vc.9" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.20" steps="19840"/></proof>
  </goal>
  <goal name="mat_k_id&#39;vc.10" expl="precondition" proved="true">
  <proof prover="7"><result status="valid" time="1.32" steps="20220"/></proof>
  </goal>
  <goal name="mat_k_id&#39;vc.11" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="mat_k_id&#39;vc.11.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.78" steps="295410"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="mat_k_id&#39;vc.12" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.34" steps="260098"/></proof>
  </goal>
  <goal name="mat_k_id&#39;vc.13" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(rows m *&#39; power 2 n)" arg2="(power 2 n *&#39; rows m)
">
   <goal name="mat_k_id&#39;vc.13.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(columns m *&#39; power 2 n)" arg2="(power 2 n *&#39; columns m)
">
    <goal name="mat_k_id&#39;vc.13.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures6">
     <goal name="mat_k_id&#39;vc.13.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="set_equal_mat">
      <goal name="mat_k_id&#39;vc.13.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make_r">
       <goal name="mat_k_id&#39;vc.13.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="0.07" steps="427"/></proof>
       </goal>
       <goal name="mat_k_id&#39;vc.13.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="0.13" steps="5187"/></proof>
       </goal>
       <goal name="mat_k_id&#39;vc.13.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="0.14" steps="5187"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="mat_k_id&#39;vc.13.0.0.0.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make_c">
       <goal name="mat_k_id&#39;vc.13.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="7"><result status="valid" time="0.07" steps="427"/></proof>
       </goal>
       <goal name="mat_k_id&#39;vc.13.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="0.14" steps="5187"/></proof>
       </goal>
       <goal name="mat_k_id&#39;vc.13.0.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="0.14" steps="5187"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="mat_k_id&#39;vc.13.0.0.0.2" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="mat_k_id&#39;vc.13.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="assert_make">
        <goal name="mat_k_id&#39;vc.13.0.0.0.2.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="mat_k_id&#39;vc.13.0.0.0.2.0.0.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="0.17" steps="7316"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="mat_k_id&#39;vc.13.0.0.0.2.0.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="mat_k_id&#39;vc.13.0.0.0.2.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.72" steps="293501"/></proof>
         </goal>
         <goal name="mat_k_id&#39;vc.13.0.0.0.2.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="0.14" steps="5291"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="mat_k_id&#39;vc.13.0.0.0.2.0.2" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="mat_k_id&#39;vc.13.0.0.0.2.0.2.0" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.74" steps="293501"/></proof>
         </goal>
         <goal name="mat_k_id&#39;vc.13.0.0.0.2.0.2.1" expl="rewrite premises" proved="true">
         <proof prover="7"><result status="valid" time="0.13" steps="5291"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="mat_k_id&#39;vc.13.0.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="0.29" steps="260194"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="mat_k_id&#39;vc.13.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="0.28" steps="260194"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="mat_k_id_values&#39;vc" expl="VC for mat_k_id_values" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mat_k_id_values&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="mat_k_id&#39;spec">
   <goal name="mat_k_id_values&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.55" steps="576545"/></proof>
   </goal>
   <goal name="mat_k_id_values&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.26" steps="202130"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="mat_k_id_rows&#39;vc" expl="VC for mat_k_id_rows" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mat_k_id_rows&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="mat_k_id&#39;spec">
   <goal name="mat_k_id_rows&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="assert_make_r">
    <goal name="mat_k_id_rows&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="0.25" steps="197882"/></proof>
    </goal>
    <goal name="mat_k_id_rows&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.13" steps="19840"/></proof>
    </goal>
    <goal name="mat_k_id_rows&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="1.14" steps="19840"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="mat_k_id_rows&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.27" steps="197884"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="mat_k_id_columns&#39;vc" expl="VC for mat_k_id_columns" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mat_k_id_columns&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="mat_k_id&#39;spec">
   <goal name="mat_k_id_columns&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="3.39" steps="65074"/></proof>
   </goal>
   <goal name="mat_k_id_columns&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.26" steps="197990"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="id_k_mat&#39;vc" expl="VC for id_k_mat" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="id_k_mat&#39;vc.0" expl="VC for id_k_mat" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="id_k_mat&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.25" steps="198103"/></proof>
   </goal>
   <goal name="id_k_mat&#39;vc.0.1" expl="assertion" proved="true">
   <transf name="apply" proved="true" arg1="set_equal_mat">
    <goal name="id_k_mat&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="assert_make_r">
     <goal name="id_k_mat&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="0.17" steps="2782"/></proof>
     </goal>
     <goal name="id_k_mat&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(0 &lt;&#39; rows m)">
      <goal name="id_k_mat&#39;vc.0.1.0.1.0" expl="asserted formula" proved="true">
      <proof prover="9"><result status="valid" time="0.59" steps="290517"/></proof>
      </goal>
      <goal name="id_k_mat&#39;vc.0.1.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="0.13" steps="2708"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="id_k_mat&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(0 &lt;&#39; columns m)">
      <goal name="id_k_mat&#39;vc.0.1.0.2.0" expl="asserted formula" proved="true">
      <proof prover="9"><result status="valid" time="0.61" steps="290517"/></proof>
      </goal>
      <goal name="id_k_mat&#39;vc.0.1.0.2.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="0.12" steps="2708"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="id_k_mat&#39;vc.0.1.1" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="assert_make_c">
     <goal name="id_k_mat&#39;vc.0.1.1.0" expl="apply premises" proved="true">
     <proof prover="7"><result status="valid" time="0.17" steps="2808"/></proof>
     </goal>
     <goal name="id_k_mat&#39;vc.0.1.1.1" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(0 &lt;&#39; rows m)">
      <goal name="id_k_mat&#39;vc.0.1.1.1.0" expl="asserted formula" proved="true">
      <proof prover="9"><result status="valid" time="0.66" steps="290517"/></proof>
      </goal>
      <goal name="id_k_mat&#39;vc.0.1.1.1.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="0.12" steps="2708"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="id_k_mat&#39;vc.0.1.1.2" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(0 &lt;&#39; columns m)">
      <goal name="id_k_mat&#39;vc.0.1.1.2.0" expl="asserted formula" proved="true">
      <proof prover="9"><result status="valid" time="0.68" steps="290517"/></proof>
      </goal>
      <goal name="id_k_mat&#39;vc.0.1.1.2.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="0.12" steps="2708"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="id_k_mat&#39;vc.0.1.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="id_k_mat&#39;vc.0.1.2.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(rows (identity n) *&#39; rows m)" arg2="(power 2 n *&#39; rows m)" arg3="in" arg4="Ensures
">
      <goal name="id_k_mat&#39;vc.0.1.2.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(columns (identity n) *&#39; rows m)" arg2="(power 2 n *&#39; rows m)" arg3="in" arg4="Ensures">
       <goal name="id_k_mat&#39;vc.0.1.2.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="0.61" steps="294236"/></proof>
       </goal>
       <goal name="id_k_mat&#39;vc.0.1.2.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="7"><result status="valid" time="0.08" steps="383"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="id_k_mat&#39;vc.0.1.2.0.1" expl="equality hypothesis" proved="true">
      <proof prover="7"><result status="valid" time="0.08" steps="383"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="id_k_mat&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.75" steps="291009"/></proof>
   </goal>
   <goal name="id_k_mat&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.76" steps="291008"/></proof>
   </goal>
   <goal name="id_k_mat&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.74" steps="291743"/></proof>
   </goal>
   <goal name="id_k_mat&#39;vc.0.5" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.76" steps="291737"/></proof>
   </goal>
   <goal name="id_k_mat&#39;vc.0.6" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.36" steps="260000"/></proof>
   </goal>
   <goal name="id_k_mat&#39;vc.0.7" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.70" steps="291009"/></proof>
   </goal>
   <goal name="id_k_mat&#39;vc.0.8" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.73" steps="291008"/></proof>
   </goal>
   <goal name="id_k_mat&#39;vc.0.9" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.75" steps="291743"/></proof>
   </goal>
   <goal name="id_k_mat&#39;vc.0.10" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.74" steps="291737"/></proof>
   </goal>
   <goal name="id_k_mat&#39;vc.0.11" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(0 &lt;&#39; rows m)">
    <goal name="id_k_mat&#39;vc.0.11.0" expl="asserted formula" proved="true">
    <proof prover="9"><result status="valid" time="0.66" steps="290842"/></proof>
    </goal>
    <goal name="id_k_mat&#39;vc.0.11.1" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="1.36" steps="549864"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="id_k_mat&#39;vc.0.12" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(0 &lt;&#39; columns m)">
    <goal name="id_k_mat&#39;vc.0.12.0" expl="asserted formula" proved="true">
    <proof prover="9"><result status="valid" time="0.69" steps="290856"/></proof>
    </goal>
    <goal name="id_k_mat&#39;vc.0.12.1" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="1.40" steps="550112"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="id_k_mat&#39;vc.0.13" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="id_k_mat&#39;vc.0.13.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="identity&#39;def">
     <goal name="id_k_mat&#39;vc.0.13.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="assert_make">
      <goal name="id_k_mat&#39;vc.0.13.0.0.0" expl="precondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="id_k_mat&#39;vc.0.13.0.0.0.0" expl="precondition" proved="true">
       <proof prover="9"><result status="valid" time="0.76" steps="295523"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="id_k_mat&#39;vc.0.13.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="id_k_mat&#39;vc.0.13.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="0.17" steps="3114"/></proof>
       </goal>
       <goal name="id_k_mat&#39;vc.0.13.0.0.1.1" expl="rewrite premises" proved="true">
       <transf name="assert" proved="true" arg1="(div i (rows m) *&#39; rows m&lt;&#39; power 2 n *&#39; rows m)
">
        <goal name="id_k_mat&#39;vc.0.13.0.0.1.1.0" expl="asserted formula" proved="true">
        <proof prover="7"><result status="valid" time="1.35" steps="23555"/></proof>
        </goal>
        <goal name="id_k_mat&#39;vc.0.13.0.0.1.1.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.36" steps="23031"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="id_k_mat&#39;vc.0.13.0.0.2" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="id_k_mat&#39;vc.0.13.0.0.2.0" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="0.19" steps="3114"/></proof>
       </goal>
       <goal name="id_k_mat&#39;vc.0.13.0.0.2.1" expl="rewrite premises" proved="true">
       <transf name="assert" proved="true" arg1="(div j (columns m) *&#39; columns m&lt;&#39; power 2 n *&#39; columns m)
">
        <goal name="id_k_mat&#39;vc.0.13.0.0.2.1.0" expl="asserted formula" proved="true">
        <proof prover="7"><result status="valid" time="1.38" steps="23715"/></proof>
        </goal>
        <goal name="id_k_mat&#39;vc.0.13.0.0.2.1.1" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="1.37" steps="23189"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="id_k_mat&#39;vc.0.13.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.34" steps="259993"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="id_k_mat&#39;vc.0.14" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.35" steps="260236"/></proof>
   </goal>
   <goal name="id_k_mat&#39;vc.0.15" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_equal_mat">
    <goal name="id_k_mat&#39;vc.0.15.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="assert_make_r">
     <goal name="id_k_mat&#39;vc.0.15.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="0.43" steps="276979"/></proof>
     </goal>
     <goal name="id_k_mat&#39;vc.0.15.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.56" steps="292100"/></proof>
     </goal>
     <goal name="id_k_mat&#39;vc.0.15.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.57" steps="292102"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="id_k_mat&#39;vc.0.15.1" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="assert_make_c">
     <goal name="id_k_mat&#39;vc.0.15.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="0.56" steps="276986"/></proof>
     </goal>
     <goal name="id_k_mat&#39;vc.0.15.1.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.73" steps="292100"/></proof>
     </goal>
     <goal name="id_k_mat&#39;vc.0.15.1.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.75" steps="292102"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="id_k_mat&#39;vc.0.15.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="id_k_mat&#39;vc.0.15.2.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="assert_make">
      <goal name="id_k_mat&#39;vc.0.15.2.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="id_k_mat&#39;vc.0.15.2.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.87" steps="664307"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="id_k_mat&#39;vc.0.15.2.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.75" steps="293932"/></proof>
      </goal>
      <goal name="id_k_mat&#39;vc.0.15.2.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.74" steps="293934"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="id_k_mat_values&#39;vc" expl="VC for id_k_mat_values" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="id_k_mat_values&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="id_k_mat&#39;spec">
   <goal name="id_k_mat_values&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="assert_make">
    <goal name="id_k_mat_values&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
    <goal name="id_k_mat_values&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.26" steps="203141"/></proof>
    </goal>
    <goal name="id_k_mat_values&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.26" steps="203141"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="id_k_mat_values&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.26" steps="203132"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="id_k_mat_rows&#39;vc" expl="VC for id_k_mat_rows" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="id_k_mat_rows&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="id_k_mat&#39;def">
   <goal name="id_k_mat_rows&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="id_k_mat_rows&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker&#39;spec2">
     <goal name="id_k_mat_rows&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="7"><result status="valid" time="0.16" steps="2447"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="id_k_mat_rows&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.26" steps="198943"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="id_k_mat_columns&#39;vc" expl="VC for id_k_mat_columns" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="id_k_mat_columns&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="id_k_mat&#39;def">
   <goal name="id_k_mat_columns&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="id_k_mat_columns&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="1.24" steps="505000"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="id_k_mat_columns&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.26" steps="199049"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="mat_prod_k_id&#39;vc" expl="VC for mat_prod_k_id" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="mat_prod_k_id&#39;vc.0" expl="VC for mat_prod_k_id" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="mat_prod_k_id&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="9"><result status="valid" time="0.51" steps="231728"/></proof>
   </goal>
   <goal name="mat_prod_k_id&#39;vc.0.1" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="Assert">
    <goal name="mat_prod_k_id&#39;vc.0.1.0" expl="assertion" proved="true">
    <transf name="apply" proved="true" arg1="set_equal_mat">
     <goal name="mat_prod_k_id&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="assert_make_r">
      <goal name="mat_prod_k_id&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.10" steps="17275"/></proof>
      </goal>
      <goal name="mat_prod_k_id&#39;vc.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.42" steps="22311"/></proof>
      </goal>
      <goal name="mat_prod_k_id&#39;vc.0.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.27" steps="22338"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="mat_prod_k_id&#39;vc.0.1.0.1" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="assert_make_c">
      <goal name="mat_prod_k_id&#39;vc.0.1.0.1.0" expl="apply premises" proved="true">
      <proof prover="7"><result status="valid" time="1.18" steps="17727"/></proof>
      </goal>
      <goal name="mat_prod_k_id&#39;vc.0.1.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.41" steps="22311"/></proof>
      </goal>
      <goal name="mat_prod_k_id&#39;vc.0.1.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="1.23" steps="22338"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="mat_prod_k_id&#39;vc.0.1.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="mat_prod_k_id&#39;vc.0.1.0.2.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make">
       <goal name="mat_prod_k_id&#39;vc.0.1.0.2.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="mat_prod_k_id&#39;vc.0.1.0.2.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="mat_k_id_values">
         <goal name="mat_prod_k_id&#39;vc.0.1.0.2.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="0.26" steps="203818"/></proof>
         </goal>
         <goal name="mat_prod_k_id&#39;vc.0.1.0.2.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.25" steps="203820"/></proof>
         </goal>
         <goal name="mat_prod_k_id&#39;vc.0.1.0.2.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.55" steps="234844"/></proof>
         </goal>
         <goal name="mat_prod_k_id&#39;vc.0.1.0.2.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.58" steps="234581"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="mat_prod_k_id&#39;vc.0.1.0.2.0.1" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.42" steps="22669"/></proof>
       </goal>
       <goal name="mat_prod_k_id&#39;vc.0.1.0.2.0.2" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="1.42" steps="22702"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="mat_prod_k_id&#39;vc.0.2" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="mat_mult_values">
    <goal name="mat_prod_k_id&#39;vc.0.2.0" expl="assertion" proved="true">
    <proof prover="9"><result status="valid" time="0.61" steps="295534"/></proof>
    </goal>
    <goal name="mat_prod_k_id&#39;vc.0.2.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.36" steps="261527"/></proof>
    </goal>
    <goal name="mat_prod_k_id&#39;vc.0.2.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="2.84" steps="57265"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="mat_prod_k_id&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.56" steps="291616"/></proof>
   </goal>
   <goal name="mat_prod_k_id&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.57" steps="292168"/></proof>
   </goal>
   <goal name="mat_prod_k_id&#39;vc.0.5" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.55" steps="291615"/></proof>
   </goal>
   <goal name="mat_prod_k_id&#39;vc.0.6" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.74" steps="291615"/></proof>
   </goal>
   <goal name="mat_prod_k_id&#39;vc.0.7" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.58" steps="291615"/></proof>
   </goal>
   <goal name="mat_prod_k_id&#39;vc.0.8" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.58" steps="291615"/></proof>
   </goal>
   <goal name="mat_prod_k_id&#39;vc.0.9" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.37" steps="260803"/></proof>
   </goal>
   <goal name="mat_prod_k_id&#39;vc.0.10" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.58" steps="294154"/></proof>
   </goal>
   <goal name="mat_prod_k_id&#39;vc.0.11" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.60" steps="294154"/></proof>
   </goal>
   <goal name="mat_prod_k_id&#39;vc.0.12" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.58" steps="291983"/></proof>
   </goal>
   <goal name="mat_prod_k_id&#39;vc.0.13" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.57" steps="292000"/></proof>
   </goal>
   <goal name="mat_prod_k_id&#39;vc.0.14" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="mat_prod_k_id&#39;vc.0.14.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Assert">
     <goal name="mat_prod_k_id&#39;vc.0.14.0.0" expl="precondition" proved="true">
     <proof prover="9"><result status="valid" time="0.64" steps="297257"/></proof>
     </goal>
     <goal name="mat_prod_k_id&#39;vc.0.14.0.1" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="set_valid_index">
      <goal name="mat_prod_k_id&#39;vc.0.14.0.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="mat_prod_k_id&#39;vc.0.14.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="0.38" steps="260891"/></proof>
       </goal>
       <goal name="mat_prod_k_id&#39;vc.0.14.0.1.0.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="0.48" steps="278499"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="mat_prod_k_id&#39;vc.0.14.0.1.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="mat_prod_k_id&#39;vc.0.14.0.1.1.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="0.40" steps="260891"/></proof>
       </goal>
       <goal name="mat_prod_k_id&#39;vc.0.14.0.1.1.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="0.64" steps="278507"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="mat_prod_k_id&#39;vc.0.15" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.36" steps="261227"/></proof>
   </goal>
   <goal name="mat_prod_k_id&#39;vc.0.16" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.36" steps="261347"/></proof>
   </goal>
   <goal name="mat_prod_k_id&#39;vc.0.17" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_equal_mat">
    <goal name="mat_prod_k_id&#39;vc.0.17.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="assert_make_r">
     <goal name="mat_prod_k_id&#39;vc.0.17.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="0.61" steps="296004"/></proof>
     </goal>
     <goal name="mat_prod_k_id&#39;vc.0.17.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.61" steps="295966"/></proof>
     </goal>
     <goal name="mat_prod_k_id&#39;vc.0.17.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.75" steps="295966"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="mat_prod_k_id&#39;vc.0.17.1" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="assert_make_c">
     <goal name="mat_prod_k_id&#39;vc.0.17.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="0.75" steps="295797"/></proof>
     </goal>
     <goal name="mat_prod_k_id&#39;vc.0.17.1.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.75" steps="295966"/></proof>
     </goal>
     <goal name="mat_prod_k_id&#39;vc.0.17.1.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.58" steps="295966"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="mat_prod_k_id&#39;vc.0.17.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="mat_prod_k_id&#39;vc.0.17.2.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures">
      <goal name="mat_prod_k_id&#39;vc.0.17.2.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="mat_mult_values">
       <goal name="mat_prod_k_id&#39;vc.0.17.2.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="assert_make">
        <goal name="mat_prod_k_id&#39;vc.0.17.2.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="mat_prod_k_id&#39;vc.0.17.2.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="mult_eq_t_rev">
          <goal name="mat_prod_k_id&#39;vc.0.17.2.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="ind_sum_eq">
           <goal name="mat_prod_k_id&#39;vc.0.17.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="0.25"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="mat_prod_k_id&#39;vc.0.17.2.0.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(rows (identity n))" arg2="(power 2 n)">
           <goal name="mat_prod_k_id&#39;vc.0.17.2.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(columns (identity n))" arg2="(power 2 n)">
            <goal name="mat_prod_k_id&#39;vc.0.17.2.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="0.62" steps="302287"/></proof>
            </goal>
            <goal name="mat_prod_k_id&#39;vc.0.17.2.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
            <proof prover="9"><result status="valid" time="0.35" steps="261780"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="mat_prod_k_id&#39;vc.0.17.2.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="0.34" steps="261780"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="mat_prod_k_id&#39;vc.0.17.2.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="0.58" steps="297871"/></proof>
        </goal>
        <goal name="mat_prod_k_id&#39;vc.0.17.2.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="0.73" steps="297871"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="mat_prod_k_id&#39;vc.0.17.2.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.35" steps="261780"/></proof>
       </goal>
       <goal name="mat_prod_k_id&#39;vc.0.17.2.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.73" steps="298159"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="mat_prod_k_id&#39;vc.0.17.2.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.37" steps="261780"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="id_k_mat_prod&#39;vc" expl="VC for id_k_mat_prod" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="id_k_mat_prod&#39;vc.0" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="0.60" steps="232342"/></proof>
  </goal>
  <goal name="id_k_mat_prod&#39;vc.1" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="mat_mult_values">
   <goal name="id_k_mat_prod&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="9"><result status="valid" time="0.55" steps="265739"/></proof>
   </goal>
   <goal name="id_k_mat_prod&#39;vc.1.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.28" steps="204484"/></proof>
   </goal>
   <goal name="id_k_mat_prod&#39;vc.1.2" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.59" steps="235930"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="id_k_mat_prod&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.31" steps="232070"/></proof>
  </goal>
  <goal name="id_k_mat_prod&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.31" steps="232250"/></proof>
  </goal>
  <goal name="id_k_mat_prod&#39;vc.4" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equal_mat">
   <goal name="id_k_mat_prod&#39;vc.4.0" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="assert_make_r">
    <goal name="id_k_mat_prod&#39;vc.4.0.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="0.10" steps="464"/></proof>
    </goal>
    <goal name="id_k_mat_prod&#39;vc.4.0.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="0.21" steps="5547"/></proof>
    </goal>
    <goal name="id_k_mat_prod&#39;vc.4.0.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="0.21" steps="5547"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="id_k_mat_prod&#39;vc.4.1" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="assert_make_c">
    <goal name="id_k_mat_prod&#39;vc.4.1.0" expl="apply premises" proved="true">
    <proof prover="7"><result status="valid" time="0.10" steps="464"/></proof>
    </goal>
    <goal name="id_k_mat_prod&#39;vc.4.1.1" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="0.20" steps="5547"/></proof>
    </goal>
    <goal name="id_k_mat_prod&#39;vc.4.1.2" expl="rewrite premises" proved="true">
    <proof prover="7"><result status="valid" time="0.21" steps="5547"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="id_k_mat_prod&#39;vc.4.2" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="id_k_mat_prod&#39;vc.4.2.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="assert_make">
     <goal name="id_k_mat_prod&#39;vc.4.2.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures">
      <goal name="id_k_mat_prod&#39;vc.4.2.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures3">
       <goal name="id_k_mat_prod&#39;vc.4.2.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="id_k_mat_prod&#39;vc.4.2.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="mult_eq_t">
         <goal name="id_k_mat_prod&#39;vc.4.2.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(rows (mat_mult m o))" arg2="(rows m)">
          <goal name="id_k_mat_prod&#39;vc.4.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(columns (mat_mult m o))" arg2="(columns o)">
           <goal name="id_k_mat_prod&#39;vc.4.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="0.70" steps="269938"/></proof>
           </goal>
           <goal name="id_k_mat_prod&#39;vc.4.2.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="0.31" steps="232625"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="id_k_mat_prod&#39;vc.4.2.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="9"><result status="valid" time="0.29" steps="232625"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="id_k_mat_prod&#39;vc.4.2.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures6">
          <goal name="id_k_mat_prod&#39;vc.4.2.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(rows (mat_mult m o))" arg2="(rows m)">
           <goal name="id_k_mat_prod&#39;vc.4.2.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(columns (mat_mult m o))" arg2="(columns o)">
            <goal name="id_k_mat_prod&#39;vc.4.2.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="0.71" steps="270475"/></proof>
            </goal>
            <goal name="id_k_mat_prod&#39;vc.4.2.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="9"><result status="valid" time="0.28" steps="232625"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="id_k_mat_prod&#39;vc.4.2.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="0.30" steps="232625"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="id_k_mat_prod&#39;vc.4.2.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="0.66" steps="268577"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="id_k_mat_prod&#39;vc.4.2.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.67" steps="268827"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="id_k_mat_prod&#39;vc.4.2.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.31" steps="232625"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="id_k_mat_prod&#39;vc.4.2.0.1" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.40" steps="24892"/></proof>
     </goal>
     <goal name="id_k_mat_prod&#39;vc.4.2.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="1.40" steps="24890"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="filter_sum_mod_indic&#39;vc" expl="VC for filter_sum_mod_indic" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="filter_sum_mod_indic&#39;vc.0" expl="VC for filter_sum_mod_indic" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="filter_sum_mod_indic&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.44" steps="215090"/></proof>
   </goal>
   <goal name="filter_sum_mod_indic&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.46" steps="215090"/></proof>
   </goal>
   <goal name="filter_sum_mod_indic&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.45" steps="297278"/></proof>
   </goal>
   <goal name="filter_sum_mod_indic&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.42" steps="297405"/></proof>
   </goal>
   <goal name="filter_sum_mod_indic&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.67" steps="314801"/></proof>
   </goal>
   <goal name="filter_sum_mod_indic&#39;vc.0.5" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures5">
    <goal name="filter_sum_mod_indic&#39;vc.0.5.0" expl="VC for filter_sum_mod_indic" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="filter_sum_mod_indic&#39;vc.0.5.0.0" expl="VC for filter_sum_mod_indic" proved="true">
     <transf name="instantiate" proved="true" arg1="map_antec" arg2="(fun (k:int) -&gt; (k *&#39; v) +&#39; p),(to_fset 0 n),e">
      <goal name="filter_sum_mod_indic&#39;vc.0.5.0.0.0" expl="VC for filter_sum_mod_indic" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="filter_sum_mod_indic&#39;vc.0.5.0.0.0.0" expl="VC for filter_sum_mod_indic" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="filter_sum_mod_indic&#39;vc.0.5.0.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="9"><result status="valid" time="0.90" steps="384729"/></proof>
        </goal>
        <goal name="filter_sum_mod_indic&#39;vc.0.5.0.0.0.0.1" expl="VC for filter_sum_mod_indic" proved="true">
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="filter_sum_mod_indic&#39;vc.0.5.0.0.0.0.1.0" expl="VC for filter_sum_mod_indic" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="filter_sum_mod_indic&#39;vc.0.5.0.0.0.0.1.0.0" expl="VC for filter_sum_mod_indic" proved="true">
          <transf name="rewrite" proved="true" arg1="Hinst">
           <goal name="filter_sum_mod_indic&#39;vc.0.5.0.0.0.0.1.0.0.0" expl="VC for filter_sum_mod_indic" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="filter_sum_mod_indic&#39;vc.0.5.0.0.0.0.1.0.0.0.0" expl="VC for filter_sum_mod_indic" proved="true">
            <transf name="assert" proved="true" arg1="(0&lt;=&#39; ((a *&#39; v) +&#39; p) &lt;&#39; v*&#39;n)">
             <goal name="filter_sum_mod_indic&#39;vc.0.5.0.0.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
             <proof prover="7"><result status="valid" time="0.93" steps="24859"/></proof>
             </goal>
             <goal name="filter_sum_mod_indic&#39;vc.0.5.0.0.0.0.1.0.0.0.0.1" expl="VC for filter_sum_mod_indic" proved="true">
             <proof prover="9"><result status="valid" time="0.96" steps="384733"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="filter_sum_mod_indic&#39;vc.0.5.0.1" expl="VC for filter_sum_mod_indic" proved="true">
     <transf name="eliminate_definition" proved="true" >
      <goal name="filter_sum_mod_indic&#39;vc.0.5.0.1.0" expl="VC for filter_sum_mod_indic" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="filter_sum_mod_indic&#39;vc.0.5.0.1.0.0" expl="VC for filter_sum_mod_indic" proved="true">
       <proof prover="9"><result status="valid" time="0.90" steps="339119"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="filter_sum_mod_indic&#39;vc.0.6" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures4">
    <goal name="filter_sum_mod_indic&#39;vc.0.6.0" expl="VC for filter_sum_mod_indic" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="filter_sum_mod_indic&#39;vc.0.6.0.0" expl="VC for filter_sum_mod_indic" proved="true">
     <transf name="apply" proved="true" arg1="set_map_mem">
      <goal name="filter_sum_mod_indic&#39;vc.0.6.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="filter_sum_mod_indic&#39;vc.0.6.0.0.0.0" expl="apply premises" proved="true">
       <transf name="exists" proved="true" arg1="(div e v)">
        <goal name="filter_sum_mod_indic&#39;vc.0.6.0.0.0.0.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="filter_sum_mod_indic&#39;vc.0.6.0.0.0.0.0.0" proved="true">
         <transf name="apply" proved="true" arg1="set_mem_to_fset">
          <goal name="filter_sum_mod_indic&#39;vc.0.6.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="assert" proved="true" arg1="(0&lt;=&#39; e &lt;&#39; v*&#39;n)">
           <goal name="filter_sum_mod_indic&#39;vc.0.6.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
           <proof prover="9"><result status="valid" time="1.74" steps="732542"/></proof>
           </goal>
           <goal name="filter_sum_mod_indic&#39;vc.0.6.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="7"><result status="valid" time="0.12" steps="3023"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="filter_sum_mod_indic&#39;vc.0.6.0.0.0.0.0.1" proved="true">
         <transf name="replace" proved="true" arg1="p" arg2="(mod e v)">
          <goal name="filter_sum_mod_indic&#39;vc.0.6.0.0.0.0.0.1.0" proved="true">
          <proof prover="7"><result status="valid" time="1.32" steps="21412"/></proof>
          </goal>
          <goal name="filter_sum_mod_indic&#39;vc.0.6.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
          <transf name="assert" proved="true" arg1="((fun (k:int) -&gt; indic (mod k v) p *. (g @ div k v)) e = (g @ div e v))">
           <goal name="filter_sum_mod_indic&#39;vc.0.6.0.0.0.0.0.1.1.0" expl="asserted formula" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="filter_sum_mod_indic&#39;vc.0.6.0.0.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
            <proof prover="9"><result status="valid" time="0.95" steps="340117"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="filter_sum_mod_indic&#39;vc.0.6.0.0.0.0.0.1.1.1" expl="equality hypothesis" proved="true">
           <transf name="instantiate" proved="true" arg1="map_antec" arg2="(fun (k:int) -&gt; (k *&#39; v) +&#39; p),(to_fset 0 n),e">
            <goal name="filter_sum_mod_indic&#39;vc.0.6.0.0.0.0.0.1.1.1.0" expl="equality hypothesis" proved="true">
            <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="h">
             <goal name="filter_sum_mod_indic&#39;vc.0.6.0.0.0.0.0.1.1.1.0.0" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="0.71" steps="339685"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="filter_sum_mod_indic&#39;vc.0.6.0.1" expl="VC for filter_sum_mod_indic" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="filter_sum_mod_indic&#39;vc.0.6.0.1.0" expl="VC for filter_sum_mod_indic" proved="true">
      <proof prover="9"><result status="valid" time="0.69" steps="338037"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="filter_sum_mod_indic&#39;vc.0.7" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="filter_sum_mod_indic&#39;vc.0.7.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="Ensures1">
     <goal name="filter_sum_mod_indic&#39;vc.0.7.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="filter_sum_mod_indic&#39;vc.0.7.0.0.0" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(0&lt;=&#39; e *&#39;v+&#39;p&lt;&#39; v*&#39;n)">
       <goal name="filter_sum_mod_indic&#39;vc.0.7.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="assert" proved="true" arg1="(0&lt;=&#39; e &lt;&#39;n)">
        <goal name="filter_sum_mod_indic&#39;vc.0.7.0.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="9"><result status="valid" time="1.94" steps="705825"/></proof>
        </goal>
        <goal name="filter_sum_mod_indic&#39;vc.0.7.0.0.0.0.1" expl="asserted formula" proved="true">
        <proof prover="7"><result status="valid" time="0.11" steps="3221"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="filter_sum_mod_indic&#39;vc.0.7.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="0.88" steps="335454"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="filter_sum_mod_indic&#39;vc.0.7.0.0.1" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="filter_sum_mod_indic&#39;vc.0.7.0.0.1.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(indic (mod ((e *&#39; v) +&#39; p) v) p)" arg2="c_one
">
        <goal name="filter_sum_mod_indic&#39;vc.0.7.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(div ((e *&#39; v) +&#39; p) v)" arg2="e
">
         <goal name="filter_sum_mod_indic&#39;vc.0.7.0.0.1.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="0.55" steps="317412"/></proof>
         </goal>
         <goal name="filter_sum_mod_indic&#39;vc.0.7.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="7"><result status="valid" time="0.14" steps="3515"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="filter_sum_mod_indic&#39;vc.0.7.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <proof prover="7"><result status="valid" time="1.00" steps="15038"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="filter_sum_mod_indic&#39;vc.0.8" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.28"/></proof>
   </goal>
   <goal name="filter_sum_mod_indic&#39;vc.0.9" expl="precondition" proved="true">
   <transf name="exists" proved="true" arg1="(div e&#39; v)">
    <goal name="filter_sum_mod_indic&#39;vc.0.9.0" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="filter_sum_mod_indic&#39;vc.0.9.0.0" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="filter_sum_mod_indic&#39;vc.0.9.0.0.0" proved="true">
      <transf name="apply" proved="true" arg1="Ensures2">
       <goal name="filter_sum_mod_indic&#39;vc.0.9.0.0.0.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="filter_sum_mod_indic&#39;vc.0.9.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="assert" proved="true" arg1="(0&lt;=&#39; e&#39; &lt;&#39; v*&#39;n)">
         <goal name="filter_sum_mod_indic&#39;vc.0.9.0.0.0.0.0.0" expl="asserted formula" proved="true">
         <transf name="assert" proved="true" arg1="(mem e&#39; (to_fset 0 (v *&#39; n)))
">
          <goal name="filter_sum_mod_indic&#39;vc.0.9.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="9"><result status="valid" time="0.69" steps="316618"/></proof>
          </goal>
          <goal name="filter_sum_mod_indic&#39;vc.0.9.0.0.0.0.0.0.1" expl="asserted formula" proved="true">
          <proof prover="9"><result status="valid" time="0.88" steps="337504"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="filter_sum_mod_indic&#39;vc.0.9.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="0.10" steps="3187"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="filter_sum_mod_indic&#39;vc.0.9.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="0.78" steps="340441"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="filter_sum_mod_indic&#39;vc.0.9.0.0.1" proved="true">
      <transf name="case" proved="true" arg1="(mod e&#39; v = p)">
       <goal name="filter_sum_mod_indic&#39;vc.0.9.0.0.1.0" expl="true case" proved="true">
       <proof prover="7"><result status="valid" time="1.35" steps="22026"/></proof>
       </goal>
       <goal name="filter_sum_mod_indic&#39;vc.0.9.0.0.1.1" expl="false case" proved="true">
       <transf name="assert" proved="true" arg1="((fun (k:int) -&gt; indic (mod k v) p *. (g @ div k v)) e&#39; &lt;&gt; c_zero)">
        <goal name="filter_sum_mod_indic&#39;vc.0.9.0.0.1.1.0" expl="asserted formula" proved="true">
        <proof prover="9"><result status="valid" time="0.75" steps="340169"/></proof>
        </goal>
        <goal name="filter_sum_mod_indic&#39;vc.0.9.0.0.1.1.1" expl="false case" proved="true">
        <transf name="instantiate" proved="true" arg1="decomp" arg2="e&#39;,v">
         <goal name="filter_sum_mod_indic&#39;vc.0.9.0.0.1.1.1.0" expl="false case" proved="true">
         <transf name="replace" proved="true" arg1="p" arg2="(mod e&#39; v)">
          <goal name="filter_sum_mod_indic&#39;vc.0.9.0.0.1.1.1.0.0" expl="false case" proved="true">
          <proof prover="9"><result status="valid" time="0.52" steps="317515"/></proof>
          </goal>
          <goal name="filter_sum_mod_indic&#39;vc.0.9.0.0.1.1.1.0.1" expl="equality hypothesis" proved="true">
          <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="h">
           <goal name="filter_sum_mod_indic&#39;vc.0.9.0.0.1.1.1.0.1.0" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="0.90" steps="340122"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="filter_sum_mod_indic&#39;vc.0.10" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="filter_sum_mod_indic&#39;vc.0.10.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(fun (b:int) -&gt; indic (mod ((b *&#39; v) +&#39; p) v) p *. (g @ div ((b *&#39; v) +&#39; p) v))" arg2="g
">
     <goal name="filter_sum_mod_indic&#39;vc.0.10.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures4">
      <goal name="filter_sum_mod_indic&#39;vc.0.10.0.0.0" expl="precondition" proved="true">
      <transf name="apply" proved="true" arg1="Ensures3">
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="filter_sum_mod_indic&#39;vc.0.10.0.1" expl="equality hypothesis" proved="true">
     <transf name="compute_hyp" proved="true" >
      <goal name="filter_sum_mod_indic&#39;vc.0.10.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="set_equal_func">
       <goal name="filter_sum_mod_indic&#39;vc.0.10.0.1.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="filter_sum_mod_indic&#39;vc.0.10.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="filter_sum_mod_indic&#39;vc.0.10.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="filter_sum_mod_indic&#39;vc.0.10.0.1.0.0.0.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="filter_sum_mod_indic&#39;vc.0.10.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(div ((e *&#39; v) +&#39; p) v)" arg2="e
">
            <goal name="filter_sum_mod_indic&#39;vc.0.10.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="0.70" steps="322266"/></proof>
            </goal>
            <goal name="filter_sum_mod_indic&#39;vc.0.10.0.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="7"><result status="valid" time="0.14" steps="4081"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="filter_sum_mod_indic&#39;vc.0.10.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(div ((e *&#39; v) +&#39; p) v)" arg2="e
">
            <goal name="filter_sum_mod_indic&#39;vc.0.10.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="7"><result status="valid" time="0.14" steps="4317"/></proof>
            </goal>
            <goal name="filter_sum_mod_indic&#39;vc.0.10.0.1.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="7"><result status="valid" time="0.15" steps="4081"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="filter_sum_mod_indic&#39;vc.0.11" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures5" arg2="in" arg3="Ensures">
    <goal name="filter_sum_mod_indic&#39;vc.0.11.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures2">
     <goal name="filter_sum_mod_indic&#39;vc.0.11.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures">
      <goal name="filter_sum_mod_indic&#39;vc.0.11.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures1">
       <goal name="filter_sum_mod_indic&#39;vc.0.11.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="filter_sum_mod_indic&#39;vc.0.11.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="replace" proved="true" arg1="(fun (b:int) -&gt; indic (mod ((b *&#39; v) +&#39; p) v) p *. (g @ div ((b *&#39; v) +&#39; p) v))" arg2="g
">
         <goal name="filter_sum_mod_indic&#39;vc.0.11.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="9"><result status="valid" time="0.43" steps="301928"/></proof>
         </goal>
         <goal name="filter_sum_mod_indic&#39;vc.0.11.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="compute_hyp" proved="true" >
          <goal name="filter_sum_mod_indic&#39;vc.0.11.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
          <transf name="apply" proved="true" arg1="set_equal_func">
           <goal name="filter_sum_mod_indic&#39;vc.0.11.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="filter_sum_mod_indic&#39;vc.0.11.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="filter_sum_mod_indic&#39;vc.0.11.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="eliminate_if" proved="true" >
              <goal name="filter_sum_mod_indic&#39;vc.0.11.0.0.0.0.0.1.0.0.0.0.0" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="filter_sum_mod_indic&#39;vc.0.11.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(div ((e *&#39; v) +&#39; p) v)" arg2="e
">
                <goal name="filter_sum_mod_indic&#39;vc.0.11.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="9"><result status="valid" time="0.73" steps="322947"/></proof>
                </goal>
                <goal name="filter_sum_mod_indic&#39;vc.0.11.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="7"><result status="valid" time="0.16" steps="4537"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="filter_sum_mod_indic&#39;vc.0.11.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(div ((e *&#39; v) +&#39; p) v)" arg2="e
">
                <goal name="filter_sum_mod_indic&#39;vc.0.11.0.0.0.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="7"><result status="valid" time="0.16" steps="4773"/></proof>
                </goal>
                <goal name="filter_sum_mod_indic&#39;vc.0.11.0.0.0.0.0.1.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                <proof prover="7"><result status="valid" time="0.16" steps="4537"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="filter_sum_indic_div&#39;vc" expl="VC for filter_sum_indic_div" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="filter_sum_indic_div&#39;vc.0" expl="VC for filter_sum_indic_div" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="filter_sum_indic_div&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.42" steps="215495"/></proof>
   </goal>
   <goal name="filter_sum_indic_div&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.40" steps="216651"/></proof>
   </goal>
   <goal name="filter_sum_indic_div&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.45" steps="325701"/></proof>
   </goal>
   <goal name="filter_sum_indic_div&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.47" steps="325830"/></proof>
   </goal>
   <goal name="filter_sum_indic_div&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.57" steps="343867"/></proof>
   </goal>
   <goal name="filter_sum_indic_div&#39;vc.0.5" expl="assertion" proved="true">
   <transf name="compute_hyp" proved="true" >
    <goal name="filter_sum_indic_div&#39;vc.0.5.0" expl="assertion" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="filter_sum_indic_div&#39;vc.0.5.0.0" expl="VC for filter_sum_indic_div" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="filter_sum_indic_div&#39;vc.0.5.0.0.0" expl="assertion" proved="true">
      <transf name="replace" proved="true" arg1="(mod ((p *&#39; v) +&#39; k) v)" arg2="k
">
       <goal name="filter_sum_indic_div&#39;vc.0.5.0.0.0.0" expl="assertion" proved="true">
       <proof prover="9"><result status="valid" time="0.65" steps="347879"/></proof>
       </goal>
       <goal name="filter_sum_indic_div&#39;vc.0.5.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="7"><result status="valid" time="0.14" steps="3392"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="filter_sum_indic_div&#39;vc.0.5.0.0.1" expl="assertion" proved="true">
      <transf name="replace" proved="true" arg1="(mod ((p *&#39; v) +&#39; k) v)" arg2="k
">
       <goal name="filter_sum_indic_div&#39;vc.0.5.0.0.1.0" expl="assertion" proved="true">
       <proof prover="7"><result status="valid" time="0.15" steps="3662"/></proof>
       </goal>
       <goal name="filter_sum_indic_div&#39;vc.0.5.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="7"><result status="valid" time="0.13" steps="3392"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="filter_sum_indic_div&#39;vc.0.6" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures5">
    <goal name="filter_sum_indic_div&#39;vc.0.6.0" expl="VC for filter_sum_indic_div" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="filter_sum_indic_div&#39;vc.0.6.0.0" expl="VC for filter_sum_indic_div" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures4" arg2="in" arg3="H">
      <goal name="filter_sum_indic_div&#39;vc.0.6.0.0.0" expl="VC for filter_sum_indic_div" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="filter_sum_indic_div&#39;vc.0.6.0.0.0.0" expl="VC for filter_sum_indic_div" proved="true">
       <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
        <goal name="filter_sum_indic_div&#39;vc.0.6.0.0.0.0.0" expl="VC for filter_sum_indic_div" proved="true">
        <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H1">
         <goal name="filter_sum_indic_div&#39;vc.0.6.0.0.0.0.0.0" expl="VC for filter_sum_indic_div" proved="true">
         <transf name="instantiate" proved="true" arg1="map_antec" arg2="(fun (y1:int) -&gt; (p *&#39; v) +&#39; y1),(to_fset 0 v),e">
          <goal name="filter_sum_indic_div&#39;vc.0.6.0.0.0.0.0.0.0" expl="VC for filter_sum_indic_div" proved="true">
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="filter_sum_indic_div&#39;vc.0.6.0.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
           <transf name="apply" proved="true" arg1="H1">
           </transf>
           </goal>
           <goal name="filter_sum_indic_div&#39;vc.0.6.0.0.0.0.0.0.0.1" expl="VC for filter_sum_indic_div" proved="true">
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="filter_sum_indic_div&#39;vc.0.6.0.0.0.0.0.0.0.1.0" expl="VC for filter_sum_indic_div" proved="true">
            <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Hinst">
             <goal name="filter_sum_indic_div&#39;vc.0.6.0.0.0.0.0.0.0.1.0.0" expl="VC for filter_sum_indic_div" proved="true">
             <transf name="assert" proved="true" arg1="(0&lt;=&#39; e &lt;&#39; v*&#39;n)">
              <goal name="filter_sum_indic_div&#39;vc.0.6.0.0.0.0.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
              <proof prover="7"><result status="valid" time="1.21" steps="33200"/></proof>
              </goal>
              <goal name="filter_sum_indic_div&#39;vc.0.6.0.0.0.0.0.0.0.1.0.0.1" expl="VC for filter_sum_indic_div" proved="true">
              <proof prover="9"><result status="valid" time="1.00" steps="420189"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="filter_sum_indic_div&#39;vc.0.6.0.1" expl="VC for filter_sum_indic_div" proved="true">
     <proof prover="9"><result status="valid" time="2.14" steps="683321"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="filter_sum_indic_div&#39;vc.0.7" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures4">
    <goal name="filter_sum_indic_div&#39;vc.0.7.0" expl="VC for filter_sum_indic_div" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="filter_sum_indic_div&#39;vc.0.7.0.0" expl="VC for filter_sum_indic_div" proved="true">
     <transf name="rewrite" proved="true" arg1="non_c_zero&#39;spec" arg2="in" arg3="H">
      <goal name="filter_sum_indic_div&#39;vc.0.7.0.0.0" expl="VC for filter_sum_indic_div" proved="true">
      <transf name="apply" proved="true" arg1="set_map_mem">
       <goal name="filter_sum_indic_div&#39;vc.0.7.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="filter_sum_indic_div&#39;vc.0.7.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="exists" proved="true" arg1="(mod e v)">
         <goal name="filter_sum_indic_div&#39;vc.0.7.0.0.0.0.0.0" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="filter_sum_indic_div&#39;vc.0.7.0.0.0.0.0.0.0" proved="true">
          <proof prover="9"><result status="valid" time="1.03" steps="367643"/></proof>
          </goal>
          <goal name="filter_sum_indic_div&#39;vc.0.7.0.0.0.0.0.0.1" proved="true">
          <transf name="assert" proved="true" arg1="(div e v = p)">
           <goal name="filter_sum_indic_div&#39;vc.0.7.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
           <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
            <goal name="filter_sum_indic_div&#39;vc.0.7.0.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
            <proof prover="9"><result status="valid" time="1.02" steps="368031"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="filter_sum_indic_div&#39;vc.0.7.0.0.0.0.0.0.1.1" proved="true">
           <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
            <goal name="filter_sum_indic_div&#39;vc.0.7.0.0.0.0.0.0.1.1.0" proved="true">
            <proof prover="7"><result status="valid" time="2.34" steps="32334"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="filter_sum_indic_div&#39;vc.0.7.0.1" expl="VC for filter_sum_indic_div" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="filter_sum_indic_div&#39;vc.0.7.0.1.0" expl="VC for filter_sum_indic_div" proved="true">
      <proof prover="9"><result status="valid" time="1.05" steps="367783"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="filter_sum_indic_div&#39;vc.0.8" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="filter_sum_indic_div&#39;vc.0.8.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures6">
     <goal name="filter_sum_indic_div&#39;vc.0.8.0.0" expl="VC for filter_sum_indic_div" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures7" arg2="in" arg3="H">
      <goal name="filter_sum_indic_div&#39;vc.0.8.0.0.0" expl="VC for filter_sum_indic_div" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="filter_sum_indic_div&#39;vc.0.8.0.0.0.0" expl="VC for filter_sum_indic_div" proved="true">
       <transf name="apply" proved="true" arg1="set_mem_to_fset">
        <goal name="filter_sum_indic_div&#39;vc.0.8.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="filter_sum_indic_div&#39;vc.0.8.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="0.18" steps="3204"/></proof>
         </goal>
         <goal name="filter_sum_indic_div&#39;vc.0.8.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="0.20" steps="3209"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="filter_sum_indic_div&#39;vc.0.8.0.0.0.1" expl="VC for filter_sum_indic_div" proved="true">
       <transf name="assert" proved="true" arg1="( (fun (b:int) -&gt; (g @ mod ((p *&#39; v) +&#39; b) v) *. indic (div ((p *&#39; v) +&#39; b) v) p) e = g e)
">
        <goal name="filter_sum_indic_div&#39;vc.0.8.0.0.0.1.0" expl="asserted formula" proved="true">
        <transf name="compute_hyp" proved="true" >
         <goal name="filter_sum_indic_div&#39;vc.0.8.0.0.0.1.0.0" expl="asserted formula" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="filter_sum_indic_div&#39;vc.0.8.0.0.0.1.0.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="filter_sum_indic_div&#39;vc.0.8.0.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="replace" proved="true" arg1="(mod ((p *&#39; v) +&#39; e) v)" arg2="e
">
            <goal name="filter_sum_indic_div&#39;vc.0.8.0.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
            <proof prover="9"><result status="valid" time="0.76" steps="348335"/></proof>
            </goal>
            <goal name="filter_sum_indic_div&#39;vc.0.8.0.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="7"><result status="valid" time="0.14" steps="3505"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="filter_sum_indic_div&#39;vc.0.8.0.0.0.1.0.0.0.1" expl="asserted formula" proved="true">
           <transf name="replace" proved="true" arg1="(mod ((p *&#39; v) +&#39; e) v)" arg2="e
">
            <goal name="filter_sum_indic_div&#39;vc.0.8.0.0.0.1.0.0.0.1.0" expl="asserted formula" proved="true">
            <proof prover="7"><result status="valid" time="0.15" steps="3739"/></proof>
            </goal>
            <goal name="filter_sum_indic_div&#39;vc.0.8.0.0.0.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="7"><result status="valid" time="0.14" steps="3505"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="filter_sum_indic_div&#39;vc.0.8.0.0.0.1.1" expl="VC for filter_sum_indic_div" proved="true">
        <proof prover="9"><result status="valid" time="0.94" steps="365815"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="filter_sum_indic_div&#39;vc.0.9" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.95" steps="366424"/></proof>
   </goal>
   <goal name="filter_sum_indic_div&#39;vc.0.10" expl="precondition" proved="true">
   <transf name="exists" proved="true" arg1="(mod e&#39; v)">
    <goal name="filter_sum_indic_div&#39;vc.0.10.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="filter_sum_indic_div&#39;vc.0.10.0.0" proved="true">
     <transf name="assert" proved="true" arg1="(mem (mod e&#39; v)  (to_fset 0 v) )">
      <goal name="filter_sum_indic_div&#39;vc.0.10.0.0.0" expl="asserted formula" proved="true">
      <proof prover="9"><result status="valid" time="1.00" steps="367461"/></proof>
      </goal>
      <goal name="filter_sum_indic_div&#39;vc.0.10.0.0.1" proved="true">
      <transf name="rewrite" proved="true" arg1="non_c_zero&#39;spec">
       <goal name="filter_sum_indic_div&#39;vc.0.10.0.0.1.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="filter_sum_indic_div&#39;vc.0.10.0.0.1.0.0" proved="true">
        <proof prover="9"><result status="valid" time="0.44" steps="327182"/></proof>
        </goal>
        <goal name="filter_sum_indic_div&#39;vc.0.10.0.0.1.0.1" proved="true">
        <proof prover="9"><result status="valid" time="1.15" steps="370220"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="filter_sum_indic_div&#39;vc.0.10.0.1" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="filter_sum_indic_div&#39;vc.0.10.0.1.0" proved="true">
      <transf name="assert" proved="true" arg1="(p = div e&#39; v)">
       <goal name="filter_sum_indic_div&#39;vc.0.10.0.1.0.0" expl="asserted formula" proved="true">
       <transf name="case" proved="true" arg1="(p &lt;&gt; div e&#39; v)">
        <goal name="filter_sum_indic_div&#39;vc.0.10.0.1.0.0.0" expl="true case (asserted formula)" proved="true">
        <transf name="rewrite" proved="true" arg1="non_c_zero&#39;spec" arg2="in" arg3="H">
         <goal name="filter_sum_indic_div&#39;vc.0.10.0.1.0.0.0.0" expl="true case (asserted formula)" proved="true">
         <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
          <goal name="filter_sum_indic_div&#39;vc.0.10.0.1.0.0.0.0.0" expl="true case (asserted formula)" proved="true">
          <proof prover="9"><result status="valid" time="1.03" steps="369169"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="filter_sum_indic_div&#39;vc.0.10.0.1.0.0.1" expl="false case (asserted formula)" proved="true">
        <proof prover="9"><result status="valid" time="0.48" steps="327182"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="filter_sum_indic_div&#39;vc.0.10.0.1.0.1" proved="true">
       <proof prover="7"><result status="valid" time="1.28" steps="21908"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="filter_sum_indic_div&#39;vc.0.11" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="filter_sum_indic_div&#39;vc.0.11.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="set_bijective1">
     <goal name="filter_sum_indic_div&#39;vc.0.11.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="filter_sum_indic_div&#39;vc.0.11.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="filter_sum_indic_div&#39;vc.0.11.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="set_non_c_zero_member">
        <goal name="filter_sum_indic_div&#39;vc.0.11.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="set_map_mem">
         <goal name="filter_sum_indic_div&#39;vc.0.11.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="exists" proved="true" arg1="e">
          <goal name="filter_sum_indic_div&#39;vc.0.11.0.0.0.0.0.0.0" proved="true">
          <proof prover="9"><result status="valid" time="1.14" steps="422841"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="filter_sum_indic_div&#39;vc.0.11.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="instantiate" proved="true" arg1="get_non_c_zero_member" arg2="(to_fset 0 v),(fun (b:int) -&gt;
     (fun (k:int) -&gt; (g @ mod k v) *. indic (div k v) p)
     @ (((fun (y0:int) (y1:int) -&gt; y0 +&#39; y1) @ (p *&#39; v)) @ b)),e">
         <goal name="filter_sum_indic_div&#39;vc.0.11.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Hinst">
          <goal name="filter_sum_indic_div&#39;vc.0.11.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="filter_sum_indic_div&#39;vc.0.11.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="Hinst">
            <goal name="filter_sum_indic_div&#39;vc.0.11.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
             <goal name="filter_sum_indic_div&#39;vc.0.11.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="H">
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="filter_sum_indic_div&#39;vc.0.11.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="filter_sum_indic_div&#39;vc.0.11.0.1.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.17" steps="424535"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="filter_sum_indic_div&#39;vc.0.11.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0" expl="apply premises" proved="true">
       <transf name="exists" proved="true" arg1="(mod e&#39; v)">
        <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.0" proved="true">
         <transf name="apply" proved="true" arg1="set_non_c_zero_member">
          <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="instantiate" proved="true" arg1="get_non_c_zero_member" arg2="(map ((fun (y0:int) (y1:int) -&gt; y0 +&#39; y1) @ (p *&#39; v)) (to_fset 0 v)),(fun (k:int) -&gt; (g @ mod k v) *. indic (div k v) p),e&#39;
">
           <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
            <transf name="apply" proved="true" arg1="H">
            </transf>
            </goal>
            <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Hinst">
             <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.15" steps="426623"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="instantiate" proved="true" arg1="get_non_c_zero_member" arg2="(map ((fun (y0:int) (y1:int) -&gt; y0 +&#39; y1) @ (p *&#39; v)) (to_fset 0 v)),(fun (k:int) -&gt; (g @ mod k v) *. indic (div k v) p),e&#39;
">
            <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.0.1.0.0.0" expl="destruct premise" proved="true">
             <transf name="apply" proved="true" arg1="H">
             </transf>
             </goal>
             <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
             <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Hinst">
              <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="0.45"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.1" proved="true">
         <transf name="replace" proved="true" arg1="p" arg2="(div e&#39; v)">
          <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.1.0" proved="true">
          <proof prover="7"><result status="valid" time="0.61" steps="15058"/></proof>
          </goal>
          <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.1.1" expl="equality hypothesis" proved="true">
          <transf name="instantiate" proved="true" arg1="get_non_c_zero_member" arg2="(map ((fun (y0:int) (y1:int) -&gt; y0 +&#39; y1) @ (p *&#39; v)) (to_fset 0 v)),(fun (k:int) -&gt; (g @ mod k v) *. indic (div k v) p),e&#39;
">
           <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.1.1.0.0" expl="destruct premise" proved="true">
            <transf name="apply" proved="true" arg1="H">
            </transf>
            </goal>
            <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
            <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Hinst">
             <goal name="filter_sum_indic_div&#39;vc.0.11.0.2.0.0.0.1.1.0.1.0" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="1.24" steps="432870"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="filter_sum_indic_div&#39;vc.0.12" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures5" arg2="in" arg3="Ensures">
    <goal name="filter_sum_indic_div&#39;vc.0.12.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures2">
     <goal name="filter_sum_indic_div&#39;vc.0.12.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures">
      <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures1">
       <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="sum_eq_gen">
         <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="set_equal">
          <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="instantiate" proved="true" arg1="get_non_c_zero_member" arg2="(to_fset 0 v),(fun (b:int) -&gt; (g @ mod ((p *&#39; v) +&#39; b) v) *. indic (div ((p *&#39; v) +&#39; b) v) p),e
">
            <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="set_non_c_zero_member">
             <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="0.78" steps="349458"/></proof>
             </goal>
             <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Hinst">
              <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(mod ((p *&#39; v) +&#39; e) v)" arg2="e" arg3="in" arg4="Hinst
">
               <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.02" steps="380276"/></proof>
               </goal>
               <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
               <proof prover="7"><result status="valid" time="4.45" steps="75273"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="set_non_c_zero_member">
            <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="0.77" steps="348880"/></proof>
            </goal>
            <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(mod ((p *&#39; v) +&#39; e) v)" arg2="e
">
              <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
              <transf name="instantiate" proved="true" arg1="get_non_c_zero_member" arg2="(to_fset 0 v),g,e">
               <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="7"><result status="valid" time="1.22" steps="23431"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
              <transf name="instantiate" proved="true" arg1="get_non_c_zero_member" arg2="(to_fset 0 v),g,e">
               <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.0.1.0.1.0.1.0" expl="equality hypothesis" proved="true">
               <proof prover="7"><result status="valid" time="0.14" steps="4504"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="instantiate" proved="true" arg1="get_non_c_zero_member" arg2="(to_fset 0 v),(fun (b:int) -&gt; (g @ mod ((p *&#39; v) +&#39; b) v) *. indic (div ((p *&#39; v) +&#39; b) v) p),x
">
            <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Hinst">
             <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="destruct" proved="true" arg1="Hinst">
              <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
              <transf name="apply" proved="true" arg1="H">
              </transf>
              </goal>
              <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(mod ((p *&#39; v) +&#39; x) v)" arg2="x
">
               <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="1.08" steps="382940"/></proof>
               </goal>
               <goal name="filter_sum_indic_div&#39;vc.0.12.0.0.0.0.0.1.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
               <proof prover="7"><result status="valid" time="0.17" steps="5203"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="filtered_ind_sum_mod_indic&#39;vc" expl="VC for filtered_ind_sum_mod_indic" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="filtered_ind_sum_mod_indic&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.43" steps="215915"/></proof>
  </goal>
  <goal name="filtered_ind_sum_mod_indic&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.44" steps="215915"/></proof>
  </goal>
  <goal name="filtered_ind_sum_mod_indic&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.34" steps="236821"/></proof>
  </goal>
  <goal name="filtered_ind_sum_mod_indic&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.32" steps="236827"/></proof>
  </goal>
  <goal name="filtered_ind_sum_mod_indic&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="filtered_ind_sum_mod_indic&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.37" steps="236831"/></proof>
   </goal>
   <goal name="filtered_ind_sum_mod_indic&#39;vc.4.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.32" steps="236833"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="filtered_ind_sum_mod_indic&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.21" steps="717793"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="filtered_ind_sum_indic_div&#39;vc" expl="VC for filtered_ind_sum_indic_div" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="filtered_ind_sum_indic_div&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.44" steps="216284"/></proof>
  </goal>
  <goal name="filtered_ind_sum_indic_div&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.44" steps="217418"/></proof>
  </goal>
  <goal name="filtered_ind_sum_indic_div&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.33" steps="237152"/></proof>
  </goal>
  <goal name="filtered_ind_sum_indic_div&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.32" steps="237158"/></proof>
  </goal>
  <goal name="filtered_ind_sum_indic_div&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="filtered_ind_sum_indic_div&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.32" steps="237162"/></proof>
   </goal>
   <goal name="filtered_ind_sum_indic_div&#39;vc.4.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.35" steps="237164"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="filtered_ind_sum_indic_div&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.29" steps="717987"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="prod_mat_k_id_pre&#39;vc" expl="VC for prod_mat_k_id_pre" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="prod_mat_k_id_pre&#39;vc.0" expl="VC for prod_mat_k_id_pre" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prod_mat_k_id_pre&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.28" steps="206653"/></proof>
   </goal>
   <goal name="prod_mat_k_id_pre&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.36" steps="264079"/></proof>
   </goal>
   <goal name="prod_mat_k_id_pre&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.84" steps="296220"/></proof>
   </goal>
   <goal name="prod_mat_k_id_pre&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.77" steps="297242"/></proof>
   </goal>
   <goal name="prod_mat_k_id_pre&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.59" steps="280254"/></proof>
   </goal>
   <goal name="prod_mat_k_id_pre&#39;vc.0.5" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.55" steps="280254"/></proof>
   </goal>
   <goal name="prod_mat_k_id_pre&#39;vc.0.6" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.59" steps="280331"/></proof>
   </goal>
   <goal name="prod_mat_k_id_pre&#39;vc.0.7" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.59" steps="280453"/></proof>
   </goal>
   <goal name="prod_mat_k_id_pre&#39;vc.0.8" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.62" steps="280330"/></proof>
   </goal>
   <goal name="prod_mat_k_id_pre&#39;vc.0.9" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.78" steps="296872"/></proof>
   </goal>
   <goal name="prod_mat_k_id_pre&#39;vc.0.10" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.78" steps="296871"/></proof>
   </goal>
   <goal name="prod_mat_k_id_pre&#39;vc.0.11" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.60" steps="280823"/></proof>
   </goal>
   <goal name="prod_mat_k_id_pre&#39;vc.0.12" expl="assertion" proved="true">
   <transf name="apply" proved="true" arg1="one_mult_t">
    <goal name="prod_mat_k_id_pre&#39;vc.0.12.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="0.79" steps="299646"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="prod_mat_k_id_pre&#39;vc.0.13" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="Assert">
    <goal name="prod_mat_k_id_pre&#39;vc.0.13.0" expl="assertion" proved="true">
    <transf name="replace" proved="true" arg1="(columns (mat_k_id m n))" arg2="(power 2 n *&#39; columns m)" arg3="in" arg4="Ensures1
">
     <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0" expl="assertion" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures1">
      <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0.0" expl="assertion" proved="true">
      <transf name="replace" proved="true" arg1="(ind_sum
    (fun (k:int) -&gt;
      get m (div i (power 2 n)) k *. get o k (div j (power 2 n)))
    0 (columns m))" arg2="(ind_sum
  (fun (k:int) -&gt;
    indic (mod k (power 2 n)) (mod i (power 2 n))
    *. ((fun (e:int) -&gt;
          get m (div i (power 2 n)) e *. get o e (div j (power 2 n)))
        @ div k (power 2 n)))
  0 (power 2 n *&#39; columns m))">
       <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0.0.0" expl="assertion" proved="true">
       <transf name="apply" proved="true" arg1="ind_sum_eq">
        <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="Ensures2">
           <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures3">
            <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make">
             <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="assert_make">
              <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="9"><result status="valid" time="2.37" steps="685414"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="0.63" steps="282128"/></proof>
              </goal>
              <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="0.37" steps="264905"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.36" steps="264905"/></proof>
             </goal>
             <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.35" steps="264912"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures">
        <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="one_mult_t" arg2="in" arg3="Assert">
         <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="Assert">
         </transf>
         </goal>
         <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.78" steps="299734"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="prod_mat_k_id_pre&#39;vc.0.13.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="0.71" steps="300192"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="prod_mat_k_id_pre&#39;vc.0.14" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="prod_mat_k_id_pre&#39;vc.0.14.0" expl="assertion" proved="true">
    <transf name="apply" proved="true" arg1="ind_sum_null">
     <goal name="prod_mat_k_id_pre&#39;vc.0.14.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="prod_mat_k_id_pre&#39;vc.0.14.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="prod_mat_k_id_pre&#39;vc.0.14.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="mat_k_id_values">
        <goal name="prod_mat_k_id_pre&#39;vc.0.14.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="mat_k_id_values">
         <goal name="prod_mat_k_id_pre&#39;vc.0.14.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="0.76" steps="301841"/></proof>
         </goal>
         <goal name="prod_mat_k_id_pre&#39;vc.0.14.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.34" steps="263862"/></proof>
         </goal>
         <goal name="prod_mat_k_id_pre&#39;vc.0.14.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="mat_k_id_columns" arg2="in" arg3="H">
          <goal name="prod_mat_k_id_pre&#39;vc.0.14.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="prod_mat_k_id_pre&#39;vc.0.14.0.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="0.35" steps="263862"/></proof>
           </goal>
           <goal name="prod_mat_k_id_pre&#39;vc.0.14.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="0.61" steps="280588"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="prod_mat_k_id_pre&#39;vc.0.14.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="0.36" steps="263862"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="prod_mat_k_id_pre&#39;vc.0.14.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.37" steps="263871"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="prod_mat_k_id_pre&#39;vc.0.14.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="0.36" steps="263862"/></proof>
        </goal>
        <goal name="prod_mat_k_id_pre&#39;vc.0.14.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="0.36" steps="263871"/></proof>
        </goal>
        <goal name="prod_mat_k_id_pre&#39;vc.0.14.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="0.76" steps="297228"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="prod_mat_k_id_pre&#39;vc.0.15" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="prod_mat_k_id_pre&#39;vc.0.15.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="prod_mat_k_id_pre&#39;vc.0.15.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="H">
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="prod_mat_k_id_pre&#39;vc.0.15.1" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="0.77" steps="299711"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="prod_mat_k_id&#39;vc" expl="VC for prod_mat_k_id" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="prod_mat_k_id&#39;vc.0" expl="VC for prod_mat_k_id" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prod_mat_k_id&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.57" steps="235528"/></proof>
   </goal>
   <goal name="prod_mat_k_id&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.77" steps="294675"/></proof>
   </goal>
   <goal name="prod_mat_k_id&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.61" steps="235527"/></proof>
   </goal>
   <goal name="prod_mat_k_id&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.55" steps="235527"/></proof>
   </goal>
   <goal name="prod_mat_k_id&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.34" steps="19887"/></proof>
   </goal>
   <goal name="prod_mat_k_id&#39;vc.0.5" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.35" steps="20316"/></proof>
   </goal>
   <goal name="prod_mat_k_id&#39;vc.0.6" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.33" steps="264809"/></proof>
   </goal>
   <goal name="prod_mat_k_id&#39;vc.0.7" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.35" steps="265003"/></proof>
   </goal>
   <goal name="prod_mat_k_id&#39;vc.0.8" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.77" steps="298057"/></proof>
   </goal>
   <goal name="prod_mat_k_id&#39;vc.0.9" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.95" steps="583927"/></proof>
   </goal>
   <goal name="prod_mat_k_id&#39;vc.0.10" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.92" steps="583955"/></proof>
   </goal>
   <goal name="prod_mat_k_id&#39;vc.0.11" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="prod_mat_k_id_pre">
    <goal name="prod_mat_k_id&#39;vc.0.11.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="assert_make">
     <goal name="prod_mat_k_id&#39;vc.0.11.0.0" expl="precondition" proved="true">
     <transf name="compute_hyp" proved="true" >
     </transf>
     </goal>
     <goal name="prod_mat_k_id&#39;vc.0.11.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.77" steps="300785"/></proof>
     </goal>
     <goal name="prod_mat_k_id&#39;vc.0.11.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.76" steps="300785"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="prod_mat_k_id&#39;vc.0.11.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.36" steps="265657"/></proof>
    </goal>
    <goal name="prod_mat_k_id&#39;vc.0.11.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.37" steps="265657"/></proof>
    </goal>
    <goal name="prod_mat_k_id&#39;vc.0.11.3" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.78" steps="300785"/></proof>
    </goal>
    <goal name="prod_mat_k_id&#39;vc.0.11.4" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.75" steps="300785"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="prod_mat_k_id&#39;vc.0.12" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.33" steps="265376"/></proof>
   </goal>
   <goal name="prod_mat_k_id&#39;vc.0.13" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.34" steps="265556"/></proof>
   </goal>
   <goal name="prod_mat_k_id&#39;vc.0.14" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.78" steps="300324"/></proof>
   </goal>
   <goal name="prod_mat_k_id&#39;vc.0.15" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures5">
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="prod_mat_k_id_dec&#39;vc" expl="VC for prod_mat_k_id_dec" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="prod_mat_k_id_dec&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="mat_prod_k_id&#39;spec">
   <goal name="prod_mat_k_id_dec&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="prod_mat_k_id&#39;spec">
    <goal name="prod_mat_k_id_dec&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="0.25" steps="207810"/></proof>
    </goal>
    <goal name="prod_mat_k_id_dec&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="0.30" steps="207810"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="prod_mat_k_id_dec&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.32" steps="207810"/></proof>
   </goal>
   <goal name="prod_mat_k_id_dec&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.28" steps="207810"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="k_id_prod_mat_pre&#39;vc" expl="VC for k_id_prod_mat_pre" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="k_id_prod_mat_pre&#39;vc.0" expl="VC for k_id_prod_mat_pre" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="k_id_prod_mat_pre&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.26" steps="208000"/></proof>
   </goal>
   <goal name="k_id_prod_mat_pre&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.35" steps="265349"/></proof>
   </goal>
   <goal name="k_id_prod_mat_pre&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.78" steps="297555"/></proof>
   </goal>
   <goal name="k_id_prod_mat_pre&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.79" steps="298587"/></proof>
   </goal>
   <goal name="k_id_prod_mat_pre&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.60" steps="281400"/></proof>
   </goal>
   <goal name="k_id_prod_mat_pre&#39;vc.0.5" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.57" steps="281400"/></proof>
   </goal>
   <goal name="k_id_prod_mat_pre&#39;vc.0.6" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.60" steps="281608"/></proof>
   </goal>
   <goal name="k_id_prod_mat_pre&#39;vc.0.7" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.56" steps="281842"/></proof>
   </goal>
   <goal name="k_id_prod_mat_pre&#39;vc.0.8" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.59" steps="281607"/></proof>
   </goal>
   <goal name="k_id_prod_mat_pre&#39;vc.0.9" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.76" steps="298236"/></proof>
   </goal>
   <goal name="k_id_prod_mat_pre&#39;vc.0.10" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.76" steps="298246"/></proof>
   </goal>
   <goal name="k_id_prod_mat_pre&#39;vc.0.11" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="k_id_prod_mat_pre&#39;vc.0.11.0" expl="precondition" proved="true">
    <transf name="assert" proved="true" arg1="(i  &lt;&#39; rows m *&#39; power 2 n)
">
     <goal name="k_id_prod_mat_pre&#39;vc.0.11.0.0" expl="asserted formula" proved="true">
     <proof prover="9"><result status="valid" time="0.37" steps="265126"/></proof>
     </goal>
     <goal name="k_id_prod_mat_pre&#39;vc.0.11.0.1" expl="precondition" proved="true">
     <proof prover="7"><result status="valid" time="0.15" steps="3606"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="k_id_prod_mat_pre&#39;vc.0.11.1" expl="precondition" proved="true">
    <transf name="assert" proved="true" arg1="( div i (rows m)*&#39; rows m &lt;&#39; power 2 n *&#39; rows m)
">
     <goal name="k_id_prod_mat_pre&#39;vc.0.11.1.0" expl="asserted formula" proved="true">
     <proof prover="7"><result status="valid" time="0.15" steps="3934"/></proof>
     </goal>
     <goal name="k_id_prod_mat_pre&#39;vc.0.11.1.1" expl="precondition" proved="true">
     <proof prover="7"><result status="valid" time="0.15" steps="3931"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="k_id_prod_mat_pre&#39;vc.0.12" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="one_mult_t">
    <goal name="k_id_prod_mat_pre&#39;vc.0.12.0" expl="assertion" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
    <goal name="k_id_prod_mat_pre&#39;vc.0.12.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.76" steps="301470"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="k_id_prod_mat_pre&#39;vc.0.13" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures1">
    <goal name="k_id_prod_mat_pre&#39;vc.0.13.0" expl="assertion" proved="true">
    <transf name="replace" proved="true" arg1="(columns (id_k_mat m n))" arg2="(columns m *&#39; power 2 n)
">
     <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0" expl="assertion" proved="true">
     <transf name="replace" proved="true" arg1="( ind_sum (fun (k:int) -&gt; get (id_k_mat m n) i k *. get (id_k_mat o n) k j) 0
  (columns m *&#39; power 2 n))" arg2="(ind_sum
  (fun (k:int) -&gt;
    ((fun (e:int) -&gt; get m (mod i (rows m)) e *. get o e (mod j (columns o)))
     @ mod k (columns m))
    *. indic (div k (columns m)) (div i (rows m)))
  0 (columns m *&#39; power 2 n))">
      <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.0" expl="assertion" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures">
       <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.0.0" expl="assertion" proved="true">
       <transf name="rewrite" proved="true" arg1="ind_sum_scal_rev">
        <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.0.0.0" expl="assertion" proved="true">
        <transf name="apply" proved="true" arg1="ind_sum_eq">
         <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="0.73" steps="307516"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="ind_sum_eq">
       <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.1.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures2">
          <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make">
           <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="Ensures3">
            <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make">
             <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="0.40"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.61" steps="283362"/></proof>
             </goal>
             <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.35" steps="266109"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="0.36" steps="266109"/></proof>
           </goal>
           <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="0.39" steps="266109"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="k_id_prod_mat_pre&#39;vc.0.13.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="0.71" steps="302007"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="k_id_prod_mat_pre&#39;vc.0.14" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="k_id_prod_mat_pre&#39;vc.0.14.0" expl="assertion" proved="true">
    <transf name="apply" proved="true" arg1="ind_sum_null">
     <goal name="k_id_prod_mat_pre&#39;vc.0.14.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="k_id_prod_mat_pre&#39;vc.0.14.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="k_id_prod_mat_pre&#39;vc.0.14.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures1">
        <goal name="k_id_prod_mat_pre&#39;vc.0.14.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures2">
         <goal name="k_id_prod_mat_pre&#39;vc.0.14.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make">
          <goal name="k_id_prod_mat_pre&#39;vc.0.14.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make">
           <goal name="k_id_prod_mat_pre&#39;vc.0.14.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="k_id_prod_mat_pre&#39;vc.0.14.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="0.41"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="k_id_prod_mat_pre&#39;vc.0.14.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="0.76" steps="298590"/></proof>
           </goal>
           <goal name="k_id_prod_mat_pre&#39;vc.0.14.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="0.36" steps="265105"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="k_id_prod_mat_pre&#39;vc.0.14.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="0.35" steps="265105"/></proof>
          </goal>
          <goal name="k_id_prod_mat_pre&#39;vc.0.14.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="0.77" steps="298588"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="k_id_prod_mat_pre&#39;vc.0.15" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="k_id_prod_mat_pre&#39;vc.0.15.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="one_mult_t">
     <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures">
      <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="(  ind_sum (fun (k:int) -&gt; get (id_k_mat m n) i k *. get (id_k_mat o n) k j) 0
  (columns (id_k_mat m n)))" arg2="(ind_sum
  (fun (k:int) -&gt;
    ((fun (e:int) -&gt; get m (mod i (rows m)) e *. get o e (mod j (columns o)))
     @ mod k (columns m))
    *. indic (div k (columns m)) (div i (rows m)))
  0 (columns m *&#39; power 2 n))">
        <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="H2">
        </transf>
        </goal>
        <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="ind_sum_eq_gen">
         <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="0.42" steps="303938"/></proof>
         </goal>
         <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.1.1" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="0.88" steps="341053"/></proof>
         </goal>
         <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.1.2" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.1.2.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.1.2.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="id_k_mat_values">
            <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.1.2.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="id_k_mat_values">
             <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.1.2.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="0"><result status="valid" time="0.49"/></proof>
             </goal>
             <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.1.2.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.43" steps="303965"/></proof>
             </goal>
             <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.1.2.0.0.0.2" expl="rewrite premises" proved="true">
             <transf name="rewrite" proved="true" arg1="id_k_mat_columns" arg2="in" arg3="H">
              <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.1.2.0.0.0.2.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.1.2.0.0.0.2.0.0" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="0.41" steps="303965"/></proof>
               </goal>
               <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.1.2.0.0.0.2.0.1" expl="rewrite premises" proved="true">
               <proof prover="9"><result status="valid" time="0.68" steps="322353"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.1.2.0.0.0.2.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="0.41" steps="303965"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.1.2.0.0.0.3" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.42" steps="303974"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.1.2.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="0.42" steps="303965"/></proof>
            </goal>
            <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.1.2.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="0.44" steps="303974"/></proof>
            </goal>
            <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.0.0.0.1.2.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="9"><result status="valid" time="0.84" steps="341180"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="k_id_prod_mat_pre&#39;vc.0.15.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.75" steps="302733"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="k_id_prod_mat_pre&#39;vc.0.15.1" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="0.75" steps="301151"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="k_id_prod_mat&#39;vc" expl="VC for k_id_prod_mat" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="k_id_prod_mat&#39;vc.0" expl="VC for k_id_prod_mat" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="k_id_prod_mat&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.56" steps="236373"/></proof>
   </goal>
   <goal name="k_id_prod_mat&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.75" steps="295999"/></proof>
   </goal>
   <goal name="k_id_prod_mat&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.55" steps="236372"/></proof>
   </goal>
   <goal name="k_id_prod_mat&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.57" steps="236729"/></proof>
   </goal>
   <goal name="k_id_prod_mat&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.19" steps="19887"/></proof>
   </goal>
   <goal name="k_id_prod_mat&#39;vc.0.5" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="1.22" steps="20316"/></proof>
   </goal>
   <goal name="k_id_prod_mat&#39;vc.0.6" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.35" steps="266035"/></proof>
   </goal>
   <goal name="k_id_prod_mat&#39;vc.0.7" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.35" steps="266236"/></proof>
   </goal>
   <goal name="k_id_prod_mat&#39;vc.0.8" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.71" steps="299339"/></proof>
   </goal>
   <goal name="k_id_prod_mat&#39;vc.0.9" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.89" steps="585430"/></proof>
   </goal>
   <goal name="k_id_prod_mat&#39;vc.0.10" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.84" steps="585513"/></proof>
   </goal>
   <goal name="k_id_prod_mat&#39;vc.0.11" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="assert_make">
    <goal name="k_id_prod_mat&#39;vc.0.11.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="k_id_prod_mat_pre">
     <goal name="k_id_prod_mat&#39;vc.0.11.0.0" expl="precondition" proved="true">
     <transf name="compute_hyp" proved="true" >
     </transf>
     </goal>
     <goal name="k_id_prod_mat&#39;vc.0.11.0.1" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="k_id_prod_mat&#39;vc.0.11.0.1.0" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.37" steps="266897"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="k_id_prod_mat&#39;vc.0.11.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.36" steps="266897"/></proof>
     </goal>
     <goal name="k_id_prod_mat&#39;vc.0.11.0.3" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.75" steps="302072"/></proof>
     </goal>
     <goal name="k_id_prod_mat&#39;vc.0.11.0.4" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.74" steps="302072"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="k_id_prod_mat&#39;vc.0.11.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.83" steps="302072"/></proof>
    </goal>
    <goal name="k_id_prod_mat&#39;vc.0.11.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.82" steps="302072"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="k_id_prod_mat&#39;vc.0.12" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.37" steps="266616"/></proof>
   </goal>
   <goal name="k_id_prod_mat&#39;vc.0.13" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.35" steps="266796"/></proof>
   </goal>
   <goal name="k_id_prod_mat&#39;vc.0.14" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.75" steps="301601"/></proof>
   </goal>
   <goal name="k_id_prod_mat&#39;vc.0.15" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures5">
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="k_id_prod_mat_dec&#39;vc" expl="VC for k_id_prod_mat_dec" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="k_id_prod_mat_dec&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="id_k_mat_prod&#39;spec">
   <goal name="k_id_prod_mat_dec&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="k_id_prod_mat&#39;spec">
    <goal name="k_id_prod_mat_dec&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
    <goal name="k_id_prod_mat_dec&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.25" steps="209161"/></proof>
    </goal>
    <goal name="k_id_prod_mat_dec&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.27" steps="209161"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="k_id_prod_mat_dec&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.28" steps="209161"/></proof>
   </goal>
   <goal name="k_id_prod_mat_dec&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="0.27" steps="209161"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="split_ne_pre&#39;vc" expl="VC for split_ne_pre" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="split_ne_pre&#39;vc.0" expl="VC for split_ne_pre" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="split_ne_pre&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="split_ne_pre&#39;vc.0.0.0" expl="assertion" proved="true">
    <proof prover="9"><result status="valid" time="0.60" steps="240249"/></proof>
    </goal>
    <goal name="split_ne_pre&#39;vc.0.0.1" expl="assertion" proved="true">
    <proof prover="7"><result status="valid" time="0.21" steps="3809"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.41" steps="224162"/></proof>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.43" steps="224167"/></proof>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.45" steps="224167"/></proof>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.44" steps="224162"/></proof>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.5" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.56" steps="240003"/></proof>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.6" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.26" steps="209606"/></proof>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.7" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.42" steps="224801"/></proof>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.8" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="( power 2 (nc1 +&#39; nr2))" arg2="(power 2 nc1 *&#39; power 2 nr2)
">
    <goal name="split_ne_pre&#39;vc.0.8.0" expl="precondition" proved="true">
    <transf name="assert" proved="true" arg1="((power 2 nc1 *&#39; div i (power 2 nr1)) &lt;=&#39; (power 2 nc1 *&#39; (power 2 nr2 -&#39;&#39; 1)))
">
     <goal name="split_ne_pre&#39;vc.0.8.0.0" expl="asserted formula" proved="true">
     <transf name="assert" proved="true" arg1="(div i (power 2 nr1) &lt;=&#39; power 2 nr2 -&#39;&#39;1)
">
      <goal name="split_ne_pre&#39;vc.0.8.0.0.0" expl="asserted formula" proved="true">
      <proof prover="8"><result status="valid" time="0.31" steps="2142103"/></proof>
      </goal>
      <goal name="split_ne_pre&#39;vc.0.8.0.0.1" expl="asserted formula" proved="true">
      <proof prover="7"><result status="valid" time="1.69" steps="29750"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="split_ne_pre&#39;vc.0.8.0.1" expl="precondition" proved="true">
     <proof prover="9"><result status="valid" time="0.57" steps="241938"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="split_ne_pre&#39;vc.0.8.1" expl="equality hypothesis" proved="true">
    <proof prover="7"><result status="valid" time="0.21" steps="6914"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.9" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.44" steps="224520"/></proof>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.10" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.48" steps="224520"/></proof>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.11" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.41" steps="225997"/></proof>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.12" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.40" steps="225930"/></proof>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.13" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.41" steps="225617"/></proof>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.14" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.43" steps="226153"/></proof>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.15" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.28" steps="210533"/></proof>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.16" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="split_ne_pre&#39;vc.0.16.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(rows m1)" arg2="(power 2 nr1)">
     <goal name="split_ne_pre&#39;vc.0.16.0.0" expl="precondition" proved="true">
     <proof prover="9"><result status="valid" time="0.26" steps="210533"/></proof>
     </goal>
     <goal name="split_ne_pre&#39;vc.0.16.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="0.27" steps="210533"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="split_ne_pre&#39;vc.0.16.1" expl="precondition" proved="true">
    <proof prover="7"><result status="valid" time="0.10" steps="553"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.17" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="split_ne_pre&#39;vc.0.17.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(columns m1)" arg2="(power 2 nc1)">
     <goal name="split_ne_pre&#39;vc.0.17.0.0" expl="precondition" proved="true">
     <proof prover="7"><result status="valid" time="1.87" steps="31998"/></proof>
     </goal>
     <goal name="split_ne_pre&#39;vc.0.17.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="0.25" steps="210556"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="split_ne_pre&#39;vc.0.17.1" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.57" steps="243079"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.18" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.28" steps="210418"/></proof>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.19" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="split_ne_pre&#39;vc.0.19.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(rows m2)" arg2="(power 2 nr2)">
     <goal name="split_ne_pre&#39;vc.0.19.0.0" expl="precondition" proved="true">
     <proof prover="0"><result status="valid" time="0.34"/></proof>
     </goal>
     <goal name="split_ne_pre&#39;vc.0.19.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="0.28" steps="210418"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="split_ne_pre&#39;vc.0.19.1" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.63" steps="245063"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.20" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="split_ne_pre&#39;vc.0.20.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(columns m2)" arg2="(power 2 nc2)">
     <goal name="split_ne_pre&#39;vc.0.20.0.0" expl="precondition" proved="true">
     <proof prover="9"><result status="valid" time="0.29" steps="210449"/></proof>
     </goal>
     <goal name="split_ne_pre&#39;vc.0.20.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="0.28" steps="210449"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="split_ne_pre&#39;vc.0.20.1" expl="precondition" proved="true">
    <proof prover="7"><result status="valid" time="0.11" steps="721"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.21" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.26" steps="210485"/></proof>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.22" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.35" steps="267103"/></proof>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.23" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.35"/></proof>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.24" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="split_ne_pre&#39;vc.0.24.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="id_k_mat_values">
     <goal name="split_ne_pre&#39;vc.0.24.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="mat_k_id_values">
      <goal name="split_ne_pre&#39;vc.0.24.0.0.0" expl="precondition" proved="true">
      <transf name="case" proved="true" arg1="(((indic (div i (rows m1)) (div k (columns m1))
    *. get m1 (mod i (rows m1)) (mod k (columns m1)))
   *. (indic (mod k (power 2 nc1)) (mod j (power 2 nc1))
       *. get m2 (div k (power 2 nc1)) (div j (power 2 nc1)))) &lt;&gt; c_zero)">
       <goal name="split_ne_pre&#39;vc.0.24.0.0.0.0" expl="true case (precondition)" proved="true">
       <transf name="assert" proved="true" arg1="(indic (div i (rows m1)) (div k (columns m1)) &lt;&gt; c_zero)">
        <goal name="split_ne_pre&#39;vc.0.24.0.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="9"><result status="valid" time="0.48" steps="230814"/></proof>
        </goal>
        <goal name="split_ne_pre&#39;vc.0.24.0.0.0.0.1" expl="true case (precondition)" proved="true">
        <proof prover="0"><result status="valid" time="0.28"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="split_ne_pre&#39;vc.0.24.0.0.0.1" expl="false case (precondition)" proved="true">
       <proof prover="9"><result status="valid" time="0.28" steps="210686"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="split_ne_pre&#39;vc.0.24.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.27" steps="210544"/></proof>
      </goal>
      <goal name="split_ne_pre&#39;vc.0.24.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.60" steps="247516"/></proof>
      </goal>
      <goal name="split_ne_pre&#39;vc.0.24.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="0.12" steps="865"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="split_ne_pre&#39;vc.0.24.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.28" steps="210544"/></proof>
     </goal>
     <goal name="split_ne_pre&#39;vc.0.24.0.2" expl="rewrite premises" proved="true">
     <proof prover="7"><result status="valid" time="0.12" steps="865"/></proof>
     </goal>
     <goal name="split_ne_pre&#39;vc.0.24.0.3" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.60" steps="247519"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.25" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="split_ne_pre&#39;vc.0.25.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.32" steps="237931"/></proof>
    </goal>
    <goal name="split_ne_pre&#39;vc.0.25.1" expl="precondition" proved="true">
    <proof prover="7"><result status="valid" time="0.13" steps="1007"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.26" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="split_ne_pre&#39;vc.0.26.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.34" steps="237947"/></proof>
    </goal>
    <goal name="split_ne_pre&#39;vc.0.26.1" expl="precondition" proved="true">
    <proof prover="7"><result status="valid" time="0.13" steps="1016"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="split_ne_pre&#39;vc.0.27" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="mat_mult_values">
    <goal name="split_ne_pre&#39;vc.0.27.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(columns (id_k_mat m1 nr2))" arg2="(power 2 nr2 *&#39; power 2 nc1)
">
     <goal name="split_ne_pre&#39;vc.0.27.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures4">
      <goal name="split_ne_pre&#39;vc.0.27.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_values">
       <goal name="split_ne_pre&#39;vc.0.27.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="split_ne_pre&#39;vc.0.27.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="7"><result status="valid" time="0.62" steps="31330"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="split_ne_pre&#39;vc.0.27.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.32" steps="237948"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="split_ne_pre&#39;vc.0.27.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="0.50" steps="255513"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="split_ne_pre&#39;vc.0.27.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.32" steps="237948"/></proof>
    </goal>
    <goal name="split_ne_pre&#39;vc.0.27.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.70" steps="281360"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="split_nw_pre&#39;vc" expl="VC for split_nw_pre" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="split_nw_pre&#39;vc.0" expl="VC for split_nw_pre" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="split_nw_pre&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="split_nw_pre&#39;vc.0.0.0" expl="assertion" proved="true">
    <proof prover="9"><result status="valid" time="0.60" steps="240773"/></proof>
    </goal>
    <goal name="split_nw_pre&#39;vc.0.0.1" expl="assertion" proved="true">
    <proof prover="7"><result status="valid" time="0.18" steps="3814"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.46" steps="224629"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.45" steps="224634"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.43" steps="224634"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.43" steps="224629"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.5" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.60" steps="240626"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.6" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.30" steps="210072"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.7" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="split_nw_pre&#39;vc.0.7.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.45" steps="224964"/></proof>
    </goal>
    <goal name="split_nw_pre&#39;vc.0.7.1" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.44" steps="225022"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.8" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="split_nw_pre&#39;vc.0.8.0" expl="precondition" proved="true">
    <transf name="assert" proved="true" arg1="( (power 2 nr2 *&#39; div j (power 2 nc2)) &lt;=&#39; power 2 nr2 *&#39; (power 2 nc1 -&#39;&#39;1))
">
     <goal name="split_nw_pre&#39;vc.0.8.0.0" expl="asserted formula" proved="true">
     <transf name="assert" proved="true" arg1="( (div j (power 2 nc2)) &lt;=&#39; (power 2 nc1 -&#39;&#39;1))
">
      <goal name="split_nw_pre&#39;vc.0.8.0.0.0" expl="asserted formula" proved="true">
      <proof prover="7"><result status="valid" time="4.89" steps="80021"/></proof>
      </goal>
      <goal name="split_nw_pre&#39;vc.0.8.0.0.1" expl="asserted formula" proved="true">
      <proof prover="7"><result status="valid" time="1.78" steps="29771"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="split_nw_pre&#39;vc.0.8.0.1" expl="precondition" proved="true">
     <proof prover="9"><result status="valid" time="0.55" steps="242438"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.9" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.44" steps="224987"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.10" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.43" steps="224987"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.11" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.45" steps="226484"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.12" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.45" steps="226438"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.13" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.47" steps="226137"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.14" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.45" steps="226649"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.15" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.29" steps="210999"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.16" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="0.09" steps="553"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.17" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="split_nw_pre&#39;vc.0.17.0" expl="precondition" proved="true">
    <proof prover="7"><result status="valid" time="1.89" steps="32032"/></proof>
    </goal>
    <goal name="split_nw_pre&#39;vc.0.17.1" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.61" steps="243627"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.18" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.29" steps="210790"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.19" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="split_nw_pre&#39;vc.0.19.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.39"/></proof>
    </goal>
    <goal name="split_nw_pre&#39;vc.0.19.1" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.64" steps="245134"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.20" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(columns m2 *&#39; power 2 nc1)" arg2="(power 2 (nc1 +&#39;nc2))
">
    <goal name="split_nw_pre&#39;vc.0.20.0" expl="precondition" proved="true">
    <proof prover="8"><result status="valid" time="0.47" steps="2290953"/></proof>
    </goal>
    <goal name="split_nw_pre&#39;vc.0.20.1" expl="equality hypothesis" proved="true">
    <proof prover="7"><result status="valid" time="0.17" steps="9974"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.21" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.27" steps="210922"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.22" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.37" steps="267540"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.23" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="split_nw_pre&#39;vc.0.23.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.29"/></proof>
    </goal>
    <goal name="split_nw_pre&#39;vc.0.23.1" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.27" steps="210957"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.24" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="split_nw_pre&#39;vc.0.24.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="mat_k_id_values">
     <goal name="split_nw_pre&#39;vc.0.24.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="id_k_mat_values">
      <goal name="split_nw_pre&#39;vc.0.24.0.0.0" expl="precondition" proved="true">
      <proof prover="0"><result status="valid" time="0.32"/></proof>
      </goal>
      <goal name="split_nw_pre&#39;vc.0.24.0.0.1" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(columns m1)" arg2="(power 2 nc1)">
       <goal name="split_nw_pre&#39;vc.0.24.0.0.1.0" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="split_nw_pre&#39;vc.0.24.0.0.1.0.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="0.28" steps="210989"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="split_nw_pre&#39;vc.0.24.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="0.28" steps="210995"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="split_nw_pre&#39;vc.0.24.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.61" steps="248023"/></proof>
      </goal>
      <goal name="split_nw_pre&#39;vc.0.24.0.0.3" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(rows m1)" arg2="(power 2 nr1)">
       <goal name="split_nw_pre&#39;vc.0.24.0.0.3.0" expl="rewrite premises" proved="true">
       <proof prover="7"><result status="valid" time="0.11" steps="857"/></proof>
       </goal>
       <goal name="split_nw_pre&#39;vc.0.24.0.0.3.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="0.26" steps="210995"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="split_nw_pre&#39;vc.0.24.0.1" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="(rows m1)" arg2="(power 2 nr1)">
      <goal name="split_nw_pre&#39;vc.0.24.0.1.0" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(rows m2)" arg2="(power 2 nr2)">
       <goal name="split_nw_pre&#39;vc.0.24.0.1.0.0" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.27" steps="210995"/></proof>
       </goal>
       <goal name="split_nw_pre&#39;vc.0.24.0.1.0.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="0.28" steps="210995"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="split_nw_pre&#39;vc.0.24.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="0.28" steps="210995"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="split_nw_pre&#39;vc.0.24.0.2" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="(columns m2)" arg2="(power 2 nc2)">
      <goal name="split_nw_pre&#39;vc.0.24.0.2.0" expl="rewrite premises" proved="true">
      <proof prover="7"><result status="valid" time="0.11" steps="857"/></proof>
      </goal>
      <goal name="split_nw_pre&#39;vc.0.24.0.2.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="0.29" steps="210995"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="split_nw_pre&#39;vc.0.24.0.3" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.59" steps="248026"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.25" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="0.12" steps="993"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.26" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="0.12" steps="1002"/></proof>
   </goal>
   <goal name="split_nw_pre&#39;vc.0.27" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="mat_mult_values">
    <goal name="split_nw_pre&#39;vc.0.27.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(columns (mat_k_id m1 nr2))" arg2="(power 2 nc1 *&#39; power 2 nr2)
">
     <goal name="split_nw_pre&#39;vc.0.27.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures4">
      <goal name="split_nw_pre&#39;vc.0.27.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="split_nw_pre&#39;vc.0.27.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="mat_k_id_values">
        <goal name="split_nw_pre&#39;vc.0.27.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="id_k_mat_values">
         <goal name="split_nw_pre&#39;vc.0.27.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="5"><result status="valid" time="0.16" steps="854588"/></proof>
         </goal>
         <goal name="split_nw_pre&#39;vc.0.27.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="split_nw_pre&#39;vc.0.27.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="0.34" steps="238389"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="split_nw_pre&#39;vc.0.27.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="split_nw_pre&#39;vc.0.27.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="0.32"/></proof>
          </goal>
          <goal name="split_nw_pre&#39;vc.0.27.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="0.73" steps="279399"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="split_nw_pre&#39;vc.0.27.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.71" steps="279638"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="split_nw_pre&#39;vc.0.27.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="split_nw_pre&#39;vc.0.27.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.31" steps="238389"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="split_nw_pre&#39;vc.0.27.0.0.0.0.2" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="split_nw_pre&#39;vc.0.27.0.0.0.0.2.0" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.32" steps="238389"/></proof>
         </goal>
         <goal name="split_nw_pre&#39;vc.0.27.0.0.0.0.2.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.67" steps="279631"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="split_nw_pre&#39;vc.0.27.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="0.31"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="split_nw_pre&#39;vc.0.27.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="0.52" steps="255949"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="split_nw_pre&#39;vc.0.27.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.34" steps="238392"/></proof>
    </goal>
    <goal name="split_nw_pre&#39;vc.0.27.2" expl="rewrite premises" proved="true">
    <transf name="apply" proved="true" arg1="set_valid_index">
     <goal name="split_nw_pre&#39;vc.0.27.2.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="0.71" steps="280133"/></proof>
     </goal>
     <goal name="split_nw_pre&#39;vc.0.27.2.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="split_nw_pre&#39;vc.0.27.2.1.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="0.34" steps="238389"/></proof>
      </goal>
      <goal name="split_nw_pre&#39;vc.0.27.2.1.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="mat_mult_columns">
       <goal name="split_nw_pre&#39;vc.0.27.2.1.1.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(columns (id_k_mat m2 nc1))" arg2="(columns m1 *&#39; columns m2)
">
        <goal name="split_nw_pre&#39;vc.0.27.2.1.1.0.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="0.69" steps="279364"/></proof>
        </goal>
        <goal name="split_nw_pre&#39;vc.0.27.2.1.1.0.1" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="0.72" steps="280164"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="split_nw_pre&#39;vc.0.27.2.1.1.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.32" steps="238389"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="split_ne&#39;vc" expl="VC for split_ne" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="split_ne&#39;vc.0" expl="VC for split_ne" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="split_ne&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.29" steps="209991"/></proof>
   </goal>
   <goal name="split_ne&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.36" steps="266795"/></proof>
   </goal>
   <goal name="split_ne&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.77" steps="300847"/></proof>
   </goal>
   <goal name="split_ne&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.77" steps="302361"/></proof>
   </goal>
   <goal name="split_ne&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.79" steps="302454"/></proof>
   </goal>
   <goal name="split_ne&#39;vc.0.5" expl="precondition" proved="true">
   <transf name="instantiate" proved="true" arg1="split_ne_pre" arg2="m1,m2,nc1,nc2,nr1,nr2,i,j">
    <goal name="split_ne&#39;vc.0.5.0" expl="precondition" proved="true">
    <proof prover="7"><result status="valid" time="4.60" steps="81330"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="split_ne&#39;vc.0.6" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.36" steps="267206"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="split_nw&#39;vc" expl="VC for split_nw" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="split_nw&#39;vc.0" expl="VC for split_nw" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="split_nw&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.30" steps="210271"/></proof>
   </goal>
   <goal name="split_nw&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.36" steps="267068"/></proof>
   </goal>
   <goal name="split_nw&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.82" steps="301195"/></proof>
   </goal>
   <goal name="split_nw&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.78" steps="302701"/></proof>
   </goal>
   <goal name="split_nw&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.80" steps="302804"/></proof>
   </goal>
   <goal name="split_nw&#39;vc.0.5" expl="precondition" proved="true">
   <transf name="instantiate" proved="true" arg1="split_nw_pre" arg2="m1,m2,nc1,nc2,nr1,nr2,i,j">
    <goal name="split_nw&#39;vc.0.5.0" expl="precondition" proved="true">
    <proof prover="7"><result status="valid" time="4.65" steps="81355"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="split_nw&#39;vc.0.6" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.34" steps="267486"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="shift_k_id&#39;vc" expl="VC for shift_k_id" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="shift_k_id&#39;vc.0" expl="VC for shift_k_id" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="shift_k_id&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.28" steps="210869"/></proof>
   </goal>
   <goal name="shift_k_id&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.25" steps="210872"/></proof>
   </goal>
   <goal name="shift_k_id&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.28" steps="210875"/></proof>
   </goal>
   <goal name="shift_k_id&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.29" steps="210878"/></proof>
   </goal>
   <goal name="shift_k_id&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.28" steps="210881"/></proof>
   </goal>
   <goal name="shift_k_id&#39;vc.0.5" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.28" steps="210884"/></proof>
   </goal>
   <goal name="shift_k_id&#39;vc.0.6" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.27" steps="210887"/></proof>
   </goal>
   <goal name="shift_k_id&#39;vc.0.7" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.28" steps="210890"/></proof>
   </goal>
   <goal name="shift_k_id&#39;vc.0.8" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.26" steps="210908"/></proof>
   </goal>
   <goal name="shift_k_id&#39;vc.0.9" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.28" steps="210911"/></proof>
   </goal>
   <goal name="shift_k_id&#39;vc.0.10" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.25" steps="210914"/></proof>
   </goal>
   <goal name="shift_k_id&#39;vc.0.11" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.26" steps="210917"/></proof>
   </goal>
   <goal name="shift_k_id&#39;vc.0.12" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.25" steps="210920"/></proof>
   </goal>
   <goal name="shift_k_id&#39;vc.0.13" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.27" steps="210923"/></proof>
   </goal>
   <goal name="shift_k_id&#39;vc.0.14" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.28" steps="210926"/></proof>
   </goal>
   <goal name="shift_k_id&#39;vc.0.15" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.29" steps="210929"/></proof>
   </goal>
   <goal name="shift_k_id&#39;vc.0.16" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="0.19" steps="3817"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_mult_commut&#39;vc" expl="VC for kronecker_mult_commut" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="kronecker_mult_commut&#39;vc.0" expl="VC for kronecker_mult_commut" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="kronecker_mult_commut&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.43" steps="225935"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="kronecker_mult_commut&#39;vc.0.1.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.51" steps="254233"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.33" steps="238662"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.34" steps="238665"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.32" steps="238668"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.5" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.32" steps="238671"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.6" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.49" steps="254468"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.7" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.49" steps="254485"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.8" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.49" steps="254502"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.9" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.49" steps="254519"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.10" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.32" steps="238701"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.11" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.39" steps="254483"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.12" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.33" steps="238732"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.13" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.51" steps="254510"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.14" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.35" steps="238763"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.15" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.31" steps="238766"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.16" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.32" steps="238769"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.17" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.33" steps="238772"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.18" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.33" steps="238775"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.19" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.32" steps="238778"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.20" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.32" steps="238781"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.21" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.31" steps="238784"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.22" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.32" steps="238816"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.23" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.33" steps="238819"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.24" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.31" steps="238822"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.25" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.31" steps="238825"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.26" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.30" steps="238828"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.27" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.31" steps="238831"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.28" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.30" steps="238834"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.29" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.32" steps="238837"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.30" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.31" steps="238855"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.31" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.31" steps="238858"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.32" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.31" steps="238861"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.33" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.33" steps="238864"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.34" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.33" steps="238867"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.35" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.32" steps="238870"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.36" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.32" steps="238873"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.37" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.32" steps="238876"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.38" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.32" steps="238894"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.39" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.37" steps="268116"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.40" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.79" steps="310608"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.41" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.37" steps="268530"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.42" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.36" steps="268738"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.43" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="2.36" steps="959590"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.44" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="kronecker_mult_commut&#39;vc.0.44.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.82" steps="316115"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.45" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.37" steps="268971"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.46" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.35" steps="269151"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.47" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.36" steps="269331"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.48" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="2.65" steps="975293"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.49" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="kronecker_mult_commut&#39;vc.0.49.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.84" steps="317627"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.50" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.38" steps="269536"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.51" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.37" steps="269539"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.52" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.37" steps="269542"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.53" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.38" steps="269545"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.54" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.37" steps="269548"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.55" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.36" steps="269551"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.56" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.35" steps="269554"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.57" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.36" steps="269557"/></proof>
   </goal>
   <goal name="kronecker_mult_commut&#39;vc.0.58" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(mat_mult (kronecker a b) (kronecker c d))" arg2="(mat_mult (mat_k_id (mat_mult a c) rb) (id_k_mat (mat_mult b d) cc))">
    <goal name="kronecker_mult_commut&#39;vc.0.58.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="0.34" steps="269554"/></proof>
    </goal>
    <goal name="kronecker_mult_commut&#39;vc.0.58.1" expl="equality hypothesis" proved="true">
    <transf name="replace" proved="true" arg1="(id_k_mat (mat_mult b d) cc)" arg2="(k_id_prod_mat b d cc)">
     <goal name="kronecker_mult_commut&#39;vc.0.58.1.0" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(mat_k_id (mat_mult a c) rb)" arg2="(mat_prod_k_id a c rb)">
      <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(kronecker a b)" arg2="(mat_mult (mat_k_id a rb) (id_k_mat b ca))">
       <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0" expl="equality hypothesis" proved="true">
       <transf name="replace" proved="true" arg1="(kronecker c d)" arg2="(mat_mult (mat_k_id c cb) (id_k_mat d cc))">
        <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0.0" expl="equality hypothesis" proved="true">
        <transf name="replace" proved="true" arg1="(mat_prod_k_id a c rb)" arg2="(prod_mat_k_id a c rb)">
         <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0.0.0" expl="equality hypothesis" proved="true">
         <transf name="rewrite" proved="true" arg1="prod_mat_k_id&#39;def">
          <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0.0.0.0" expl="equality hypothesis" proved="true">
          <transf name="rewrite" proved="true" arg1="k_id_prod_mat&#39;def">
           <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0.0.0.0.0" expl="equality hypothesis" proved="true">
           <transf name="replace" proved="true" arg1="(mat_mult (mat_mult (mat_k_id a rb) (id_k_mat b ca))
  (mat_mult (mat_k_id c cb) (id_k_mat d cc)))" arg2="(mat_mult  (mat_k_id a rb) (mat_mult (mat_mult (id_k_mat b ca) (mat_k_id c cb)) (id_k_mat d cc)))">
            <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0.0.0.0.0.0" expl="equality hypothesis" proved="true">
            <proof prover="9"><result status="valid" time="0.58" steps="286080"/></proof>
            </goal>
            <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="mat_mult_assoc">
             <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
             <transf name="rewrite" proved="true" arg1="mat_mult_assoc">
              <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="0.36" steps="269552"/></proof>
              </goal>
              <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="0.84" steps="316304"/></proof>
              </goal>
              <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="0.82" steps="315685"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.84" steps="316457"/></proof>
             </goal>
             <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.84" steps="316205"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="0.38" steps="269554"/></proof>
           </goal>
           <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="0.62" steps="286022"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="0.36" steps="269554"/></proof>
          </goal>
          <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="0.60" steps="286017"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="9"><result status="valid" time="0.36" steps="269561"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="0.36" steps="269561"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="0.38" steps="269561"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="kronecker_mult_commut&#39;vc.0.58.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="0.81" steps="315457"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_mult_commut&#39;vc.0.58.1.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="0.83" steps="315459"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_mult_commut_p&#39;vc" expl="VC for kronecker_mult_commut_p" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_mult_commut_p&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.37" steps="284108"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.40" steps="284145"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.41" steps="284178"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.39" steps="284215"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.40" steps="284252"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.41" steps="284285"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.42" steps="284322"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.44" steps="284325"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.40" steps="284328"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.9" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.39" steps="284331"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.10" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.38" steps="284334"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.11" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.36" steps="284337"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.12" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.39" steps="284340"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.13" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.40" steps="284343"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.14" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.64" steps="301695"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.15" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.38" steps="284357"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.16" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.38" steps="284360"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.17" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.38" steps="284363"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.18" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.62" steps="301719"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.19" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.40" steps="284377"/></proof>
  </goal>
  <goal name="kronecker_mult_commut_p&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.41" steps="284375"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_mult_commut_p_quant&#39;vc" expl="VC for kronecker_mult_commut_p_quant" proved="true">
 <proof prover="9"><result status="valid" time="0.64" steps="301801"/></proof>
 </goal>
</theory>
<theory name="Kronecker_distr" proved="true">
 <goal name="kronecker_add_distr_l&#39;vc" expl="VC for kronecker_add_distr_l" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="kronecker_add_distr_l&#39;vc.0" expl="VC for kronecker_add_distr_l" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="kronecker_add_distr_l&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.91" steps="325543"/></proof>
   </goal>
   <goal name="kronecker_add_distr_l&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.87" steps="325828"/></proof>
   </goal>
   <goal name="kronecker_add_distr_l&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.39" steps="283718"/></proof>
   </goal>
   <goal name="kronecker_add_distr_l&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.37" steps="283721"/></proof>
   </goal>
   <goal name="kronecker_add_distr_l&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="0.14" steps="746"/></proof>
   </goal>
   <goal name="kronecker_add_distr_l&#39;vc.0.5" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="0.13" steps="746"/></proof>
   </goal>
   <goal name="kronecker_add_distr_l&#39;vc.0.6" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="kronecker_add_distr_l&#39;vc.0.6.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures3">
     <goal name="kronecker_add_distr_l&#39;vc.0.6.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="add_values">
      <goal name="kronecker_add_distr_l&#39;vc.0.6.0.0.0" expl="precondition" proved="true">
      <proof prover="9"><result status="valid" time="0.93" steps="347855"/></proof>
      </goal>
      <goal name="kronecker_add_distr_l&#39;vc.0.6.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.40" steps="284086"/></proof>
      </goal>
      <goal name="kronecker_add_distr_l&#39;vc.0.6.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.38" steps="284086"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_add_distr_l&#39;vc.0.6.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.40" steps="284086"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_add_distr_l&#39;vc.0.7" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.61" steps="301635"/></proof>
   </goal>
   <goal name="kronecker_add_distr_l&#39;vc.0.8" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.63" steps="301652"/></proof>
   </goal>
   <goal name="kronecker_add_distr_l&#39;vc.0.9" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.43" steps="284081"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_add_distr_r&#39;vc" expl="VC for kronecker_add_distr_r" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="kronecker_add_distr_r&#39;vc.0" expl="VC for kronecker_add_distr_r" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="kronecker_add_distr_r&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.87" steps="326141"/></proof>
   </goal>
   <goal name="kronecker_add_distr_r&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.83" steps="326236"/></proof>
   </goal>
   <goal name="kronecker_add_distr_r&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.37" steps="283932"/></proof>
   </goal>
   <goal name="kronecker_add_distr_r&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.39" steps="283935"/></proof>
   </goal>
   <goal name="kronecker_add_distr_r&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="0.13" steps="746"/></proof>
   </goal>
   <goal name="kronecker_add_distr_r&#39;vc.0.5" expl="precondition" proved="true">
   <proof prover="7"><result status="valid" time="0.13" steps="746"/></proof>
   </goal>
   <goal name="kronecker_add_distr_r&#39;vc.0.6" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="kronecker_add_distr_r&#39;vc.0.6.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures3">
     <goal name="kronecker_add_distr_r&#39;vc.0.6.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="goal_comm">
      <goal name="kronecker_add_distr_r&#39;vc.0.6.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="add_value">
       <goal name="kronecker_add_distr_r&#39;vc.0.6.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_values">
        <goal name="kronecker_add_distr_r&#39;vc.0.6.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_values">
         <goal name="kronecker_add_distr_r&#39;vc.0.6.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="7"><result status="valid" time="0.41" steps="19771"/></proof>
         </goal>
         <goal name="kronecker_add_distr_r&#39;vc.0.6.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.85" steps="335162"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="kronecker_add_distr_r&#39;vc.0.6.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="0.88" steps="335162"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="kronecker_add_distr_r&#39;vc.0.6.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.36" steps="284314"/></proof>
       </goal>
       <goal name="kronecker_add_distr_r&#39;vc.0.6.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.40" steps="284314"/></proof>
       </goal>
       <goal name="kronecker_add_distr_r&#39;vc.0.6.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.39" steps="284314"/></proof>
       </goal>
       <goal name="kronecker_add_distr_r&#39;vc.0.6.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.89" steps="335180"/></proof>
       </goal>
       <goal name="kronecker_add_distr_r&#39;vc.0.6.0.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.88" steps="335180"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_add_distr_r&#39;vc.0.6.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.38" steps="284314"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_add_distr_r&#39;vc.0.7" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.37" steps="284287"/></proof>
   </goal>
   <goal name="kronecker_add_distr_r&#39;vc.0.8" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.65" steps="301875"/></proof>
   </goal>
   <goal name="kronecker_add_distr_r&#39;vc.0.9" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="0.64" steps="301899"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_ket_add_distr_r&#39;vc" expl="VC for kronecker_ket_add_distr_r" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_ket_add_distr_r&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.27" steps="458732"/></proof>
  </goal>
  <goal name="kronecker_ket_add_distr_r&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.01" steps="422600"/></proof>
  </goal>
  <goal name="kronecker_ket_add_distr_r&#39;vc.2" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="add_ket_l_to_add_mat">
   <goal name="kronecker_ket_add_distr_r&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="add_ket_l_to_add_mat">
    <goal name="kronecker_ket_add_distr_r&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="9"><result status="valid" time="0.57" steps="395717"/></proof>
    </goal>
    <goal name="kronecker_ket_add_distr_r&#39;vc.2.0.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.25" steps="460788"/></proof>
    </goal>
    <goal name="kronecker_ket_add_distr_r&#39;vc.2.0.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.66" steps="395710"/></proof>
    </goal>
    <goal name="kronecker_ket_add_distr_r&#39;vc.2.0.3" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.58" steps="395710"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_ket_add_distr_r&#39;vc.2.1" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="1.27" steps="460996"/></proof>
   </goal>
   <goal name="kronecker_ket_add_distr_r&#39;vc.2.2" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="1.26" steps="461493"/></proof>
   </goal>
   <goal name="kronecker_ket_add_distr_r&#39;vc.2.3" expl="rewrite premises" proved="true">
   <proof prover="9"><result status="valid" time="1.05" steps="461493"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_sum_distr_l&#39;vc" expl="VC for kronecker_sum_distr_l" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="kronecker_sum_distr_l&#39;vc.0" expl="VC for kronecker_sum_distr_l" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="kronecker_sum_distr_l&#39;vc.0.0" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="kronecker_sum_distr_l&#39;vc.0.0.0" expl="variant decrease" proved="true">
    <proof prover="9"><result status="valid" time="1.13" steps="492087"/></proof>
    </goal>
    <goal name="kronecker_sum_distr_l&#39;vc.0.0.1" expl="variant decrease" proved="true">
    <proof prover="9"><result status="valid" time="1.33" steps="532497"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.1" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="kronecker_sum_distr_l&#39;vc.0.1.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.72" steps="584871"/></proof>
    </goal>
    <goal name="kronecker_sum_distr_l&#39;vc.0.1.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.98" steps="585061"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.52" steps="533038"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.16" steps="499934"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.4" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="kronecker_sum_distr_l&#39;vc.0.4.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_l&#39;vc.0.4.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_l&#39;vc.0.4.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.49" steps="596351"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_l&#39;vc.0.4.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_l&#39;vc.0.4.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_l&#39;vc.0.4.1.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.70" steps="595648"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.5" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.12" steps="499953"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.6" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="kronecker_sum_distr_l&#39;vc.0.6.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_l&#39;vc.0.6.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_l&#39;vc.0.6.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.67" steps="599295"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_l&#39;vc.0.6.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_l&#39;vc.0.6.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_l&#39;vc.0.6.1.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.69" steps="598815"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.7" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.10" steps="499926"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.8" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.68" steps="472846"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.9" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.13" steps="499968"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.10" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="kronecker_sum_distr_l&#39;vc.0.10.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_l&#39;vc.0.10.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.27" steps="540237"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_l&#39;vc.0.10.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_l&#39;vc.0.10.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.27" steps="540237"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.11" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.58" steps="555088"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.12" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="kronecker_sum_distr_l&#39;vc.0.12.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.31" steps="540340"/></proof>
    </goal>
    <goal name="kronecker_sum_distr_l&#39;vc.0.12.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.32" steps="540340"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.13" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.71" steps="472925"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.14" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.71" steps="472936"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.15" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.26" steps="540191"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.16" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.58" steps="558753"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.17" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="kronecker_sum_distr_l&#39;vc.0.17.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_l&#39;vc.0.17.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_l&#39;vc.0.17.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.71" steps="608763"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_l&#39;vc.0.17.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_l&#39;vc.0.17.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_l&#39;vc.0.17.1.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.70" steps="608139"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.18" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures7">
    <goal name="kronecker_sum_distr_l&#39;vc.0.18.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.19" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures5">
    <goal name="kronecker_sum_distr_l&#39;vc.0.19.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.20" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.29" steps="541231"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.21" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.56" steps="476036"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.22" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.77" steps="512459"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.23" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="kronecker_sum_distr_l&#39;vc.0.23.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_l&#39;vc.0.23.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_l&#39;vc.0.23.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.68" steps="612359"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_l&#39;vc.0.23.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_l&#39;vc.0.23.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_l&#39;vc.0.23.1.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.71" steps="611681"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.24" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.66" steps="598571"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.25" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="kronecker_sum_distr_l&#39;vc.0.25.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures3">
     <goal name="kronecker_sum_distr_l&#39;vc.0.25.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures18">
      <goal name="kronecker_sum_distr_l&#39;vc.0.25.0.0.0" expl="precondition" proved="true">
      <proof prover="9"><result status="valid" time="1.05" steps="547799"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_l&#39;vc.0.25.1" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures3">
     <goal name="kronecker_sum_distr_l&#39;vc.0.25.1.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures18">
      <goal name="kronecker_sum_distr_l&#39;vc.0.25.1.0.0" expl="precondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="kronecker_sum_distr_l&#39;vc.0.25.1.0.0.0" expl="precondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_rows">
        <goal name="kronecker_sum_distr_l&#39;vc.0.25.1.0.0.0.0" expl="precondition" proved="true">
        <proof prover="7"><result status="valid" time="0.40" steps="22675"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.26" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures2">
    <goal name="kronecker_sum_distr_l&#39;vc.0.26.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures16">
     <goal name="kronecker_sum_distr_l&#39;vc.0.26.0.0" expl="precondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="kronecker_sum_distr_l&#39;vc.0.26.0.0.0" expl="precondition" proved="true">
      <proof prover="9"><result status="valid" time="1.36" steps="549599"/></proof>
      </goal>
      <goal name="kronecker_sum_distr_l&#39;vc.0.26.0.0.1" expl="precondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="kronecker_sum_distr_l&#39;vc.0.26.0.0.1.0" expl="precondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_columns">
        <goal name="kronecker_sum_distr_l&#39;vc.0.26.0.0.1.0.0" expl="precondition" proved="true">
        <proof prover="7"><result status="valid" time="0.56" steps="34045"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.27" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.78" steps="513345"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.28" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.75" steps="607109"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.29" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures3">
    <goal name="kronecker_sum_distr_l&#39;vc.0.29.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.78" steps="513506"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.30" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.22" steps="541906"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.31" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(add_mat (f @ choose s) (mat_sum (remove (choose s) s) f))" arg2="(mat_sum s f)" arg3="in" arg4="Ensures">
    <goal name="kronecker_sum_distr_l&#39;vc.0.31.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures">
     <goal name="kronecker_sum_distr_l&#39;vc.0.31.0.0" expl="assertion" proved="true">
     <transf name="replace" proved="true" arg1="(add (choose s) (remove (choose s) s))" arg2="s" arg3="in" arg4="Ensures19
">
      <goal name="kronecker_sum_distr_l&#39;vc.0.31.0.0.0" expl="assertion" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures19">
       <goal name="kronecker_sum_distr_l&#39;vc.0.31.0.0.0.0" expl="assertion" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures29">
        <goal name="kronecker_sum_distr_l&#39;vc.0.31.0.0.0.0.0" expl="assertion" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="kronecker_sum_distr_l&#39;vc.0.31.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="1.70" steps="611852"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_l&#39;vc.0.31.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="1.67" steps="609499"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.32" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(mat_sum s (fun (k:a) -&gt; kronecker (f @ k) m))" arg2="(kronecker (mat_sum s f) m )">
    <goal name="kronecker_sum_distr_l&#39;vc.0.32.0" expl="assertion" proved="true">
    <proof prover="9"><result status="valid" time="1.43" steps="614672"/></proof>
    </goal>
    <goal name="kronecker_sum_distr_l&#39;vc.0.32.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="Assert">
     <goal name="kronecker_sum_distr_l&#39;vc.0.32.1.0" expl="equality hypothesis" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.33" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(mat_sum s (fun (k:a) -&gt; kronecker (f @ k) m))" arg2="(kronecker (mat_sum s f) m )">
    <goal name="kronecker_sum_distr_l&#39;vc.0.33.0" expl="assertion" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_l&#39;vc.0.33.0.0" expl="assertion" proved="true">
     <proof prover="9"><result status="valid" time="1.43" steps="617716"/></proof>
     </goal>
     <goal name="kronecker_sum_distr_l&#39;vc.0.33.0.1" expl="assertion" proved="true">
     <proof prover="9"><result status="valid" time="1.71" steps="628540"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_l&#39;vc.0.33.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="Assert1">
     <goal name="kronecker_sum_distr_l&#39;vc.0.33.1.0" expl="equality hypothesis" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.34" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="kronecker_sum_distr_l&#39;vc.0.34.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="kronecker_sum_distr_l&#39;vc.0.34.0.0" expl="VC for kronecker_sum_distr_l" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="kronecker_sum_distr_l&#39;vc.0.34.0.0.0" expl="VC for kronecker_sum_distr_l" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="kronecker_sum_distr_l&#39;vc.0.34.0.0.0.0" expl="VC for kronecker_sum_distr_l" proved="true">
       <proof prover="9"><result status="valid" time="1.40" steps="608045"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_sum_distr_l&#39;vc.0.34.0.1" expl="VC for kronecker_sum_distr_l" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="kronecker_sum_distr_l&#39;vc.0.34.0.1.0" expl="VC for kronecker_sum_distr_l" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="kronecker_sum_distr_l&#39;vc.0.34.0.1.0.0" expl="VC for kronecker_sum_distr_l" proved="true">
       <proof prover="9"><result status="valid" time="1.64" steps="605623"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_l&#39;vc.0.34.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_l&#39;vc.0.34.1.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="kronecker_sum_distr_l&#39;vc.0.34.1.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="kronecker_sum_distr_l&#39;vc.0.34.1.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="H3">
        <goal name="kronecker_sum_distr_l&#39;vc.0.34.1.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_sum_distr_l&#39;vc.0.34.1.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="kronecker_sum_distr_l&#39;vc.0.34.1.1.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="1.31" steps="555612"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.35" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="kronecker_sum_distr_l&#39;vc.0.35.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="kronecker_sum_distr_l&#39;vc.0.35.0.0" expl="VC for kronecker_sum_distr_l" proved="true">
     <proof prover="9"><result status="valid" time="2.38" steps="765775"/></proof>
     </goal>
     <goal name="kronecker_sum_distr_l&#39;vc.0.35.0.1" expl="VC for kronecker_sum_distr_l" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_l&#39;vc.0.35.0.1.0" expl="VC for kronecker_sum_distr_l" proved="true">
      <proof prover="9"><result status="valid" time="1.66" steps="609229"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_l&#39;vc.0.35.1" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.0" expl="VC for kronecker_sum_distr_l" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.0.0" expl="VC for kronecker_sum_distr_l" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.0.0.0" expl="VC for kronecker_sum_distr_l" proved="true">
       <transf name="apply" proved="true" arg1="rows_mat_sum">
        <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.23" steps="624234"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.0.0.0.1" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="set_constant_size">
         <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="2.09" steps="739242"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.0.0.0.1.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.0.0.0.1.1.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.0.0.0.1.1.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="2.07" steps="738575"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.0.0.0.2" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="kronecker_rows">
           <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_rows">
            <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="0.76"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.1" expl="VC for kronecker_sum_distr_l" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="kronecker_sum_distr_l&#39;vc.0.35.1.1.0" expl="VC for kronecker_sum_distr_l" proved="true">
      <proof prover="9"><result status="valid" time="1.57" steps="638405"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_l&#39;vc.0.36" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="kronecker_sum_distr_l&#39;vc.0.36.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="kronecker_sum_distr_l&#39;vc.0.36.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="mat_sum_cardone">
      <goal name="kronecker_sum_distr_l&#39;vc.0.36.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="mat_sum_cardone">
       <goal name="kronecker_sum_distr_l&#39;vc.0.36.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
       <goal name="kronecker_sum_distr_l&#39;vc.0.36.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.83" steps="535568"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="kronecker_sum_distr_l&#39;vc.0.36.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.87" steps="535568"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_l&#39;vc.0.36.1" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="kronecker_sum_distr_l&#39;vc.0.36.1.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="H2">
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_sum_distr_r&#39;vc" expl="VC for kronecker_sum_distr_r" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="kronecker_sum_distr_r&#39;vc.0" expl="VC for kronecker_sum_distr_r" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="kronecker_sum_distr_r&#39;vc.0.0" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="kronecker_sum_distr_r&#39;vc.0.0.0" expl="variant decrease" proved="true">
    <proof prover="9"><result status="valid" time="0.92" steps="494451"/></proof>
    </goal>
    <goal name="kronecker_sum_distr_r&#39;vc.0.0.1" expl="variant decrease" proved="true">
    <proof prover="9"><result status="valid" time="1.47" steps="535066"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.1" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="kronecker_sum_distr_r&#39;vc.0.1.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.92" steps="587401"/></proof>
    </goal>
    <goal name="kronecker_sum_distr_r&#39;vc.0.1.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.94" steps="587591"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.56" steps="535612"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.98" steps="502207"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.4" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="kronecker_sum_distr_r&#39;vc.0.4.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_r&#39;vc.0.4.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_r&#39;vc.0.4.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.52" steps="598520"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_r&#39;vc.0.4.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_r&#39;vc.0.4.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_r&#39;vc.0.4.1.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.48" steps="597827"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.5" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.20" steps="502226"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.6" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="kronecker_sum_distr_r&#39;vc.0.6.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_r&#39;vc.0.6.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_r&#39;vc.0.6.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.77" steps="601513"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_r&#39;vc.0.6.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_r&#39;vc.0.6.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_r&#39;vc.0.6.1.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.76" steps="601008"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.7" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.23" steps="502199"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.8" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.74" steps="475091"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.9" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.14" steps="502241"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.10" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="kronecker_sum_distr_r&#39;vc.0.10.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_r&#39;vc.0.10.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.27" steps="542505"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_r&#39;vc.0.10.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_r&#39;vc.0.10.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.25" steps="542505"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.11" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.54" steps="557513"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.12" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="kronecker_sum_distr_r&#39;vc.0.12.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.26" steps="542608"/></proof>
    </goal>
    <goal name="kronecker_sum_distr_r&#39;vc.0.12.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.26" steps="542608"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.13" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.72" steps="475170"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.14" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.71" steps="475181"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.15" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.31" steps="542459"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.16" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.59" steps="561173"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.17" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="kronecker_sum_distr_r&#39;vc.0.17.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_r&#39;vc.0.17.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_r&#39;vc.0.17.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.75" steps="610818"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_r&#39;vc.0.17.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_r&#39;vc.0.17.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_r&#39;vc.0.17.1.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.74" steps="610195"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.18" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures7">
    <goal name="kronecker_sum_distr_r&#39;vc.0.18.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="1.58" steps="564255"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.19" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures5">
    <goal name="kronecker_sum_distr_r&#39;vc.0.19.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.20" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.27" steps="543499"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.21" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.75" steps="478281"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.22" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.62" steps="514704"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.23" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="kronecker_sum_distr_r&#39;vc.0.23.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_r&#39;vc.0.23.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_r&#39;vc.0.23.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.83" steps="614420"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_r&#39;vc.0.23.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_r&#39;vc.0.23.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_r&#39;vc.0.23.1.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.75" steps="613782"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.24" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.65" steps="600914"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.25" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="kronecker_sum_distr_r&#39;vc.0.25.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures3">
     <goal name="kronecker_sum_distr_r&#39;vc.0.25.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures18">
      <goal name="kronecker_sum_distr_r&#39;vc.0.25.0.0.0" expl="precondition" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_r&#39;vc.0.25.1" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures3">
     <goal name="kronecker_sum_distr_r&#39;vc.0.25.1.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures18">
      <goal name="kronecker_sum_distr_r&#39;vc.0.25.1.0.0" expl="precondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="kronecker_sum_distr_r&#39;vc.0.25.1.0.0.0" expl="precondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_rows">
        <goal name="kronecker_sum_distr_r&#39;vc.0.25.1.0.0.0.0" expl="precondition" proved="true">
        <proof prover="7"><result status="valid" time="0.46" steps="22699"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.26" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures2">
    <goal name="kronecker_sum_distr_r&#39;vc.0.26.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures16">
     <goal name="kronecker_sum_distr_r&#39;vc.0.26.0.0" expl="precondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="kronecker_sum_distr_r&#39;vc.0.26.0.0.0" expl="precondition" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
      <goal name="kronecker_sum_distr_r&#39;vc.0.26.0.0.1" expl="precondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="kronecker_sum_distr_r&#39;vc.0.26.0.0.1.0" expl="precondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_columns">
        <goal name="kronecker_sum_distr_r&#39;vc.0.26.0.0.1.0.0" expl="precondition" proved="true">
        <proof prover="7"><result status="valid" time="0.56" steps="34078"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.27" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.80" steps="515590"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.28" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.72" steps="609211"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.29" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures3">
    <goal name="kronecker_sum_distr_r&#39;vc.0.29.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="0.78" steps="515751"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.30" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.24" steps="544174"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.31" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(add_mat (f @ choose s) (mat_sum (remove (choose s) s) f))" arg2="(mat_sum s f)" arg3="in" arg4="Ensures2
">
    <goal name="kronecker_sum_distr_r&#39;vc.0.31.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures2">
     <goal name="kronecker_sum_distr_r&#39;vc.0.31.0.0" expl="assertion" proved="true">
     <transf name="replace" proved="true" arg1="(add (choose s) (remove (choose s) s))" arg2="s" arg3="in" arg4="Ensures19
">
      <goal name="kronecker_sum_distr_r&#39;vc.0.31.0.0.0" expl="assertion" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures19">
       <goal name="kronecker_sum_distr_r&#39;vc.0.31.0.0.0.0" expl="assertion" proved="true">
       <transf name="apply" proved="true" arg1="add_mat_eq">
        <goal name="kronecker_sum_distr_r&#39;vc.0.31.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_rows">
         <goal name="kronecker_sum_distr_r&#39;vc.0.31.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="kronecker_rows">
          <goal name="kronecker_sum_distr_r&#39;vc.0.31.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="mult_eq">
           <goal name="kronecker_sum_distr_r&#39;vc.0.31.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="0.79" steps="515825"/></proof>
           </goal>
           <goal name="kronecker_sum_distr_r&#39;vc.0.31.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.27" steps="544268"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="kronecker_sum_distr_r&#39;vc.0.31.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_columns">
         <goal name="kronecker_sum_distr_r&#39;vc.0.31.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="kronecker_columns">
          <goal name="kronecker_sum_distr_r&#39;vc.0.31.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="mult_eq">
           <goal name="kronecker_sum_distr_r&#39;vc.0.31.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="0.77" steps="515825"/></proof>
           </goal>
           <goal name="kronecker_sum_distr_r&#39;vc.0.31.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.28" steps="544268"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="kronecker_sum_distr_r&#39;vc.0.31.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
        <goal name="kronecker_sum_distr_r&#39;vc.0.31.0.0.0.0.3" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Ensures29">
         <goal name="kronecker_sum_distr_r&#39;vc.0.31.0.0.0.0.3.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="kronecker_sum_distr_r&#39;vc.0.31.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="9"><result status="valid" time="1.77" steps="613826"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_r&#39;vc.0.31.1" expl="equality hypothesis" proved="true">
    <proof prover="9"><result status="valid" time="1.72" steps="611568"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.32" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(mat_sum s (fun (k:a) -&gt; kronecker m (f @ k) ))" arg2="(kronecker m (mat_sum s f)  )">
    <goal name="kronecker_sum_distr_r&#39;vc.0.32.0" expl="assertion" proved="true">
    <proof prover="9"><result status="valid" time="1.54" steps="616632"/></proof>
    </goal>
    <goal name="kronecker_sum_distr_r&#39;vc.0.32.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="Assert">
     <goal name="kronecker_sum_distr_r&#39;vc.0.32.1.0" expl="equality hypothesis" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.33" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(mat_sum s (fun (k:a) -&gt; kronecker m (f @ k) ))" arg2="(kronecker m (mat_sum s f)  )">
    <goal name="kronecker_sum_distr_r&#39;vc.0.33.0" expl="assertion" proved="true">
    <proof prover="9"><result status="valid" time="1.72" steps="621221"/></proof>
    </goal>
    <goal name="kronecker_sum_distr_r&#39;vc.0.33.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="Assert1">
     <goal name="kronecker_sum_distr_r&#39;vc.0.33.1.0" expl="equality hypothesis" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.34" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="kronecker_sum_distr_r&#39;vc.0.34.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="kronecker_sum_distr_r&#39;vc.0.34.0.0" expl="VC for kronecker_sum_distr_r" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="kronecker_sum_distr_r&#39;vc.0.34.0.0.0" expl="VC for kronecker_sum_distr_r" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="kronecker_sum_distr_r&#39;vc.0.34.0.0.0.0" expl="VC for kronecker_sum_distr_r" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_columns">
        <goal name="kronecker_sum_distr_r&#39;vc.0.34.0.0.0.0.0" expl="VC for kronecker_sum_distr_r" proved="true">
        <transf name="apply" proved="true" arg1="columns_mat_sum">
         <goal name="kronecker_sum_distr_r&#39;vc.0.34.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="0.88" steps="542586"/></proof>
         </goal>
         <goal name="kronecker_sum_distr_r&#39;vc.0.34.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="set_constant_size">
          <goal name="kronecker_sum_distr_r&#39;vc.0.34.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="kronecker_sum_distr_r&#39;vc.0.34.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.89" steps="665202"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="kronecker_sum_distr_r&#39;vc.0.34.0.0.0.0.0.1.1" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="kronecker_sum_distr_r&#39;vc.0.34.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
           <proof prover="9"><result status="valid" time="1.87" steps="665362"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="kronecker_sum_distr_r&#39;vc.0.34.0.0.0.0.0.2" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="kronecker_sum_distr_r&#39;vc.0.34.0.0.0.0.0.2.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="kronecker_sum_distr_r&#39;vc.0.34.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_columns">
            <goal name="kronecker_sum_distr_r&#39;vc.0.34.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="0.57"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_sum_distr_r&#39;vc.0.34.0.1" expl="VC for kronecker_sum_distr_r" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_r&#39;vc.0.34.0.1.0" expl="VC for kronecker_sum_distr_r" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_columns">
       <goal name="kronecker_sum_distr_r&#39;vc.0.34.0.1.0.0" expl="VC for kronecker_sum_distr_r" proved="true">
       <proof prover="9"><result status="valid" time="0.80" steps="532891"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_r&#39;vc.0.34.1" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="kronecker_sum_distr_r&#39;vc.0.34.1.0" expl="VC for kronecker_sum_distr_r" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="kronecker_sum_distr_r&#39;vc.0.34.1.0.0" expl="VC for kronecker_sum_distr_r" proved="true">
      <transf name="apply" proved="true" arg1="H3">
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_sum_distr_r&#39;vc.0.34.1.1" expl="VC for kronecker_sum_distr_r" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_r&#39;vc.0.34.1.1.0" expl="VC for kronecker_sum_distr_r" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_columns">
       <goal name="kronecker_sum_distr_r&#39;vc.0.34.1.1.0.0" expl="VC for kronecker_sum_distr_r" proved="true">
       <proof prover="9"><result status="valid" time="0.91" steps="595500"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.35" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="kronecker_sum_distr_r&#39;vc.0.35.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="kronecker_sum_distr_r&#39;vc.0.35.0.0" expl="VC for kronecker_sum_distr_r" proved="true">
     <proof prover="9"><result status="valid" time="2.51" steps="768901"/></proof>
     </goal>
     <goal name="kronecker_sum_distr_r&#39;vc.0.35.0.1" expl="VC for kronecker_sum_distr_r" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_r&#39;vc.0.35.0.1.0" expl="VC for kronecker_sum_distr_r" proved="true">
      <proof prover="9"><result status="valid" time="1.66" steps="612322"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_r&#39;vc.0.35.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="kronecker_sum_distr_r&#39;vc.0.35.1.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_sum_distr_r&#39;vc.0.35.1.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="kronecker_sum_distr_r&#39;vc.0.35.1.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="Assert1">
        <goal name="kronecker_sum_distr_r&#39;vc.0.35.1.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_sum_distr_r&#39;vc.0.35.1.1" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="kronecker_sum_distr_r&#39;vc.0.35.1.1.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Assert">
       <goal name="kronecker_sum_distr_r&#39;vc.0.35.1.1.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_r&#39;vc.0.36" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="kronecker_sum_distr_r&#39;vc.0.36.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="kronecker_sum_distr_r&#39;vc.0.36.0.0" expl="postcondition" proved="true">
     <proof prover="9"><result status="valid" time="2.07" steps="624689"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_r&#39;vc.0.36.1" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="kronecker_sum_distr_r&#39;vc.0.36.1.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="kronecker_sum_distr_r&#39;vc.0.36.1.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="H4">
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="mat_sum_scalar&#39;vc" expl="VC for mat_sum_scalar" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="mat_sum_scalar&#39;vc.0" expl="VC for mat_sum_scalar" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="mat_sum_scalar&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.58" steps="537653"/></proof>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.48" steps="537355"/></proof>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.52" steps="542619"/></proof>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.58" steps="540087"/></proof>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.31" steps="541865"/></proof>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.5" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.14" steps="504565"/></proof>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.6" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.71" steps="477552"/></proof>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.7" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.13" steps="509178"/></proof>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.8" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.68" steps="481882"/></proof>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.9" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.50" steps="546468"/></proof>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.10" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="mat_sum_scalar&#39;vc.0.10.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="mat_sum_scalar&#39;vc.0.10.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.97" steps="596558"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="mat_sum_scalar&#39;vc.0.10.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="mat_sum_scalar&#39;vc.0.10.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.38" steps="866611"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.11" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="( s_rows (remove (choose s) s) (fun (k:a1) -&gt; a *.. (f @ k)))" arg2="(s_rows (remove (choose s) s) f )
">
    <goal name="mat_sum_scalar&#39;vc.0.11.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="mat_sum_scalar&#39;vc.0.11.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="scalar_rows">
      <goal name="mat_sum_scalar&#39;vc.0.11.0.0.0" expl="precondition" proved="true">
      <proof prover="9"><result status="valid" time="0.72" steps="479613"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="mat_sum_scalar&#39;vc.0.11.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="set_s_rows">
     <goal name="mat_sum_scalar&#39;vc.0.11.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="mat_sum_scalar&#39;vc.0.11.1.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.39" steps="547514"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="mat_sum_scalar&#39;vc.0.11.1.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.94" steps="556180"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.12" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="( s_columns (remove (choose s) s) (fun (k:a1) -&gt; a *.. (f @ k)))" arg2="(s_columns (remove (choose s) s) f )
">
    <goal name="mat_sum_scalar&#39;vc.0.12.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="mat_sum_scalar&#39;vc.0.12.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="scalar_columns">
      <goal name="mat_sum_scalar&#39;vc.0.12.0.0.0" expl="precondition" proved="true">
      <proof prover="9"><result status="valid" time="0.69" steps="479730"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="mat_sum_scalar&#39;vc.0.12.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="set_s_columns">
     <goal name="mat_sum_scalar&#39;vc.0.12.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="mat_sum_scalar&#39;vc.0.12.1.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.39" steps="549055"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="mat_sum_scalar&#39;vc.0.12.1.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.71" steps="558046"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.13" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.26" steps="544897"/></proof>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.14" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.70" steps="479698"/></proof>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.15" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.52" steps="547369"/></proof>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.16" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.26" steps="544453"/></proof>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.17" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.29" steps="544465"/></proof>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.18" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="mat_sum_scalar&#39;vc.0.18.0" expl="variant decrease" proved="true">
    <proof prover="9"><result status="valid" time="1.28" steps="544505"/></proof>
    </goal>
    <goal name="mat_sum_scalar&#39;vc.0.18.1" expl="variant decrease" proved="true">
    <proof prover="9"><result status="valid" time="1.67" steps="588122"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.19" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.74" steps="516135"/></proof>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.20" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.67" steps="588111"/></proof>
   </goal>
   <goal name="mat_sum_scalar&#39;vc.0.21" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="mat_sum_scalar&#39;vc.0.21.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="mat_sum_scalar&#39;vc.0.21.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="mat_sum_scalar">
      <goal name="mat_sum_scalar&#39;vc.0.21.0.0.0" expl="postcondition" proved="true">
      <proof prover="9"><result status="valid" time="0.80" steps="535945"/></proof>
      </goal>
      <goal name="mat_sum_scalar&#39;vc.0.21.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.81" steps="535947"/></proof>
      </goal>
      <goal name="mat_sum_scalar&#39;vc.0.21.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.82" steps="535949"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="mat_sum_scalar&#39;vc.0.21.1" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="mat_sum_scalar&#39;vc.0.21.1.0" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(cardinal s = 1)">
      <goal name="mat_sum_scalar&#39;vc.0.21.1.0.0" expl="true case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="mat_sum_cardone">
       <goal name="mat_sum_scalar&#39;vc.0.21.1.0.0.0" expl="true case (postcondition)" proved="true">
       <proof prover="9"><result status="valid" time="1.55" steps="629188"/></proof>
       </goal>
       <goal name="mat_sum_scalar&#39;vc.0.21.1.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.92" steps="596096"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="mat_sum_scalar&#39;vc.0.21.1.0.1" expl="false case (postcondition)" proved="true">
      <transf name="replace" proved="true" arg1="(add (choose s) (remove (choose s) s))" arg2="s" arg3="in" arg4="H11">
       <goal name="mat_sum_scalar&#39;vc.0.21.1.0.1.0" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="H11">
        <goal name="mat_sum_scalar&#39;vc.0.21.1.0.1.0.0" expl="false case (postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="H1">
         <goal name="mat_sum_scalar&#39;vc.0.21.1.0.1.0.0.0" expl="false case (postcondition)" proved="true">
         <transf name="rewrite" proved="true" arg1="mat_sum_plus_one">
          <goal name="mat_sum_scalar&#39;vc.0.21.1.0.1.0.0.0.0" expl="false case (postcondition)" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="mat_sum_scalar&#39;vc.0.21.1.0.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
           <transf name="rewrite" proved="true" arg1="H">
            <goal name="mat_sum_scalar&#39;vc.0.21.1.0.1.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
            <transf name="compute_specified" proved="true" >
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="mat_sum_scalar&#39;vc.0.21.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.46" steps="627582"/></proof>
          </goal>
          <goal name="mat_sum_scalar&#39;vc.0.21.1.0.1.0.0.0.2" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="set_constant_size">
           <goal name="mat_sum_scalar&#39;vc.0.21.1.0.1.0.0.0.2.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="mat_sum_scalar&#39;vc.0.21.1.0.1.0.0.0.2.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="1.59" steps="631703"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="mat_sum_scalar&#39;vc.0.21.1.0.1.0.0.0.2.1" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="mat_sum_scalar&#39;vc.0.21.1.0.1.0.0.0.2.1.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="1.61" steps="631725"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="mat_sum_scalar&#39;vc.0.21.1.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="9"><result status="valid" time="1.94" steps="671118"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_sum_distr_sc&#39;vc" expl="VC for kronecker_sum_distr_sc" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="kronecker_sum_distr_sc&#39;vc.0" expl="VC for kronecker_sum_distr_sc" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="kronecker_sum_distr_sc&#39;vc.0.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="kronecker_sum_distr_sc&#39;vc.0.0.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="1.65" steps="583763"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_sc&#39;vc.0.1" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="kronecker_sum_distr_sc&#39;vc.0.1.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="1.60" steps="581569"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_sc&#39;vc.0.2" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="kronecker_sum_distr_sc&#39;vc.0.2.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.53"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_sc&#39;vc.0.3" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="kronecker_sum_distr_sc&#39;vc.0.3.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.54"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_sc&#39;vc.0.4" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="kronecker_sum_distr_sc&#39;vc.0.4.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="1.71" steps="586456"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_sc&#39;vc.0.5" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="kronecker_sum_distr_sc&#39;vc.0.5.0" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="1.68" steps="584287"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_sc&#39;vc.0.6" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures2">
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_sc&#39;vc.0.7" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.72" steps="470665"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_sc&#39;vc.0.8" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.71" steps="477274"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_sc&#39;vc.0.9" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.71" steps="477279"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_sc&#39;vc.0.10" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="Ensures6">
   </transf>
   </goal>
   <goal name="kronecker_sum_distr_sc&#39;vc.0.11" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="0.77" steps="516521"/></proof>
   </goal>
   <goal name="kronecker_sum_distr_sc&#39;vc.0.12" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(mat_sum s (fun (k:a1) -&gt; kronecker (a *.. (f @ k)) m))" arg2="( mat_sum s (fun (k:a1) -&gt; a *.. ((fun (k1:a1) -&gt; kronecker (f @ k1) m) @ k)))">
    <goal name="kronecker_sum_distr_sc&#39;vc.0.12.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="Ensures">
    </transf>
    </goal>
    <goal name="kronecker_sum_distr_sc&#39;vc.0.12.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="mat_sum_eq">
     <goal name="kronecker_sum_distr_sc&#39;vc.0.12.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="0.80" steps="516630"/></proof>
     </goal>
     <goal name="kronecker_sum_distr_sc&#39;vc.0.12.1.1" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="set_constant_size">
      <goal name="kronecker_sum_distr_sc&#39;vc.0.12.1.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="kronecker_sum_distr_sc&#39;vc.0.12.1.1.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="kronecker_sum_distr_sc&#39;vc.0.12.1.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.54" steps="609606"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="kronecker_sum_distr_sc&#39;vc.0.12.1.1.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="kronecker_sum_distr_sc&#39;vc.0.12.1.1.1.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="kronecker_sum_distr_sc&#39;vc.0.12.1.1.1.0.0" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.84" steps="608586"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_sum_distr_sc&#39;vc.0.12.1.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="kronecker_sum_distr_sc&#39;vc.0.12.1.2.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="4.00" steps="1231181"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_ket_sum_distr_l&#39;vc" expl="VC for kronecker_ket_sum_distr_l" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_ket_sum_distr_l&#39;vc.0" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_constant_size">
   <goal name="kronecker_ket_sum_distr_l&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.99" steps="588301"/></proof>
   </goal>
   <goal name="kronecker_ket_sum_distr_l&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.82" steps="588427"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="kronecker_ket_sum_distr_l&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.77" steps="510997"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l&#39;vc.2" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="ket_sum_ket_l">
   <goal name="kronecker_ket_sum_distr_l&#39;vc.2.0" expl="apply premises" proved="true">
   <transf name="assert" proved="true" arg1="(0&lt;=&#39;l1)">
    <goal name="kronecker_ket_sum_distr_l&#39;vc.2.0.0" expl="asserted formula" proved="true">
    <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l1)">
     <goal name="kronecker_ket_sum_distr_l&#39;vc.2.0.0.0" expl="asserted formula" proved="true">
     <proof prover="9"><result status="valid" time="1.44" steps="593204"/></proof>
     </goal>
     <goal name="kronecker_ket_sum_distr_l&#39;vc.2.0.0.1" expl="asserted formula" proved="true">
     <proof prover="9"><result status="valid" time="1.67" steps="592818"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_ket_sum_distr_l&#39;vc.2.0.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.69" steps="592737"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="kronecker_ket_sum_distr_l&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="kronecker_ket_sum_distr_l&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ket_sum_l&#39;spec1">
    <goal name="kronecker_ket_sum_distr_l&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l&#39;spec1">
     <goal name="kronecker_ket_sum_distr_l&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="Ensures1">
     </transf>
     </goal>
     <goal name="kronecker_ket_sum_distr_l&#39;vc.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.95" steps="678704"/></proof>
     </goal>
     <goal name="kronecker_ket_sum_distr_l&#39;vc.3.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.89" steps="598880"/></proof>
     </goal>
     <goal name="kronecker_ket_sum_distr_l&#39;vc.3.0.0.3" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_ket_sum_distr_l&#39;vc.3.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="kronecker_ket_sum_distr_l&#39;vc.3.0.0.3.0.0" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.89" steps="681318"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_ket_sum_distr_l&#39;vc.3.0.1" expl="rewrite premises" proved="true">
    <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l1)">
     <goal name="kronecker_ket_sum_distr_l&#39;vc.3.0.1.0" expl="asserted formula" proved="true">
     <proof prover="9"><result status="valid" time="1.96" steps="679483"/></proof>
     </goal>
     <goal name="kronecker_ket_sum_distr_l&#39;vc.3.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.95" steps="679066"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_ket_sum_distr_l&#39;vc.3.0.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.90" steps="598880"/></proof>
    </goal>
    <goal name="kronecker_ket_sum_distr_l&#39;vc.3.0.3" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.48" steps="630399"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_ket_sum_distr_l_nol&#39;vc" expl="VC for kronecker_ket_sum_distr_l_nol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.0" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_constant_size">
   <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.93" steps="589449"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.0.1.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.88" steps="589586"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.80" steps="511922"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.2" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(cardinal s = 0)">
   <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.2.0" expl="true case (postcondition)" proved="true">
   <proof prover="9"><result status="valid" time="1.32" steps="548182"/></proof>
   </goal>
   <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.2.1" expl="false case (postcondition)" proved="true">
   <transf name="apply" proved="true" arg1="ket_sum_ket_l">
    <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.2.1.0" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l1)">
     <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.2.1.0.0" expl="asserted formula" proved="true">
     <proof prover="9"><result status="valid" time="1.62" steps="593415"/></proof>
     </goal>
     <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.2.1.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.68" steps="594040"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(cardinal s = 0)">
   <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.0" expl="true case (postcondition)" proved="true">
   <proof prover="9"><result status="valid" time="1.26" steps="548266"/></proof>
   </goal>
   <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.1" expl="false case (postcondition)" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.1.0" expl="false case (postcondition)" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l&#39;spec1">
     <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.1.0.0" expl="false case (postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_l&#39;spec1">
      <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.1.0.0.0" expl="false case (postcondition)" proved="true">
      <transf name="apply" proved="true" arg1="Ensures1">
      </transf>
      </goal>
      <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.96" steps="680106"/></proof>
      </goal>
      <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.92" steps="600150"/></proof>
      </goal>
      <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.1.0.0.3" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.1.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.1.0.0.3.0.0" expl="rewrite premises" proved="true">
        <proof prover="7"><result status="valid" time="0.29" steps="14270"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.1.0.1" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l1)">
      <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.1.0.1.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="Requires2">
       <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.1.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.68" steps="680190"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.1.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.97" steps="680465"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.1.0.2" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l1)">
      <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.1.0.2.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="Requires2">
       <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.1.0.2.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.88" steps="680190"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.1.0.2.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.74" steps="600161"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_ket_sum_distr_l_nol&#39;vc.3.1.0.3" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.52" steps="631687"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_ket_sum_distr_l_rew&#39;vc" expl="VC for kronecker_ket_sum_distr_l_rew" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_ket_sum_distr_l_rew&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.34" steps="540341"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_rew&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.77" steps="511769"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_rew&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.77" steps="511774"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_rew&#39;vc.3" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures">
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_ket_sum_distr_r&#39;vc" expl="VC for kronecker_ket_sum_distr_r" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_ket_sum_distr_r&#39;vc.0" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_constant_size">
   <goal name="kronecker_ket_sum_distr_r&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="2.12" steps="590818"/></proof>
   </goal>
   <goal name="kronecker_ket_sum_distr_r&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="2.07" steps="590949"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="kronecker_ket_sum_distr_r&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.81" steps="513499"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_r&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="kronecker_ket_sum_distr_r&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="ket_sum_ket_l">
    <goal name="kronecker_ket_sum_distr_r&#39;vc.2.0.0" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="(0&lt;=&#39;l1)">
     <goal name="kronecker_ket_sum_distr_r&#39;vc.2.0.0.0" expl="asserted formula" proved="true">
     <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l1)">
      <goal name="kronecker_ket_sum_distr_r&#39;vc.2.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="9"><result status="valid" time="1.99" steps="679069"/></proof>
      </goal>
      <goal name="kronecker_ket_sum_distr_r&#39;vc.2.0.0.0.1" expl="asserted formula" proved="true">
      <proof prover="9"><result status="valid" time="1.89" steps="678683"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_ket_sum_distr_r&#39;vc.2.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.87" steps="678611"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="kronecker_ket_sum_distr_r&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="kronecker_ket_sum_distr_r&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ket_sum_l&#39;spec1">
    <goal name="kronecker_ket_sum_distr_r&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l&#39;spec1">
     <goal name="kronecker_ket_sum_distr_r&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures1">
      <goal name="kronecker_ket_sum_distr_r&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_ket_sum_distr_r&#39;vc.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.88" steps="681764"/></proof>
     </goal>
     <goal name="kronecker_ket_sum_distr_r&#39;vc.3.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.90" steps="602024"/></proof>
     </goal>
     <goal name="kronecker_ket_sum_distr_r&#39;vc.3.0.0.3" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_ket_sum_distr_r&#39;vc.3.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="kronecker_ket_sum_distr_r&#39;vc.3.0.0.3.0.0" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="(l1 +&#39; l2)" arg2="(l2 +&#39; l1)">
        <goal name="kronecker_ket_sum_distr_r&#39;vc.3.0.0.3.0.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_ket_l">
         <goal name="kronecker_ket_sum_distr_r&#39;vc.3.0.0.3.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.66" steps="682278"/></proof>
         </goal>
         <goal name="kronecker_ket_sum_distr_r&#39;vc.3.0.0.3.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="8"><result status="valid" time="1.00" steps="5779011"/></proof>
         </goal>
         <goal name="kronecker_ket_sum_distr_r&#39;vc.3.0.0.3.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="0.90" steps="602034"/></proof>
         </goal>
         <goal name="kronecker_ket_sum_distr_r&#39;vc.3.0.0.3.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.49" steps="634007"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="kronecker_ket_sum_distr_r&#39;vc.3.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="9"><result status="valid" time="0.96" steps="602048"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_ket_sum_distr_r&#39;vc.3.0.1" expl="rewrite premises" proved="true">
    <proof prover="8"><result status="valid" time="1.07" steps="5778230"/></proof>
    </goal>
    <goal name="kronecker_ket_sum_distr_r&#39;vc.3.0.2" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="0.93" steps="602024"/></proof>
    </goal>
    <goal name="kronecker_ket_sum_distr_r&#39;vc.3.0.3" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.45" steps="633568"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_ket_sum_distr_l_rev&#39;vc" expl="VC for kronecker_ket_sum_distr_l_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_ket_sum_distr_l_rev&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.34" steps="541935"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_rev&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.76" steps="513350"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_rev&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.78" steps="513355"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_rev&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.64" steps="584359"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_rev&#39;vc.4" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures1">
   <goal name="kronecker_ket_sum_distr_l_rev&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_ket_sum_distr_r_rev&#39;vc" expl="VC for kronecker_ket_sum_distr_r_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_ket_sum_distr_r_rev&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.28" steps="542872"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_r_rev&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.79" steps="514279"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_r_rev&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.81" steps="514284"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_r_rev&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.65" steps="585275"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_r_rev&#39;vc.4" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures1">
   <goal name="kronecker_ket_sum_distr_r_rev&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_ket_sum_distr_l_&#39;vc" expl="VC for kronecker_ket_sum_distr_l_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_ket_sum_distr_l_&#39;vc.0" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="1.63" steps="580931"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.30" steps="543888"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.81" steps="515257"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.80" steps="515262"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.64" steps="586959"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_&#39;vc.5" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l&#39;def2">
     <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_l&#39;def2">
      <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="set_equal_ket">
       <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ket_l_to_ket_gen">
        <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="exists" proved="true" arg1="(l1 +&#39; l2)">
         <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.0.0.0" proved="true">
         <proof prover="9"><result status="valid" time="2.06" steps="717637"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.56" steps="722364"/></proof>
       </goal>
       <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.22" steps="725441"/></proof>
       </goal>
       <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
         <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_ket_l">
          <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_ket_l">
           <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="1.68" steps="679282"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.20" steps="718367"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.04" steps="643953"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="2.91" steps="871648"/></proof>
         </goal>
         <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.66" steps="677210"/></proof>
         </goal>
         <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.3.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.00" steps="643953"/></proof>
          </goal>
          <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.3.1" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_ket_rows">
           <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.3.1.0" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(rows m)" arg2="(power 2 l2)">
            <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.3.1.0.0" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="power_sum_rev">
             <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="replace" proved="true" arg1="(ket_length (kronecker (make_ket l1 (fun (_:int) -&gt; c_zero)) m))" arg2="(l1+&#39;l2)" arg3="in" arg4="H">
              <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0.0" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="0.97" steps="600191"/></proof>
              </goal>
              <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="2.79" steps="872053"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.98" steps="643953"/></proof>
             </goal>
             <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.11" steps="718367"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.3.1.0.1" expl="equality hypothesis" proved="true">
            <proof prover="9"><result status="valid" time="1.70" steps="680011"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.0.3.0.3.1.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.00" steps="643953"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.03" steps="671282"/></proof>
      </goal>
      <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.97" steps="600144"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.93" steps="600144"/></proof>
     </goal>
     <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.93" steps="600144"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="kronecker_ket_sum_distr_l_&#39;vc.5.1.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="H">
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc" expl="VC for kronecker_ket_sum_distr_l_nol_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.0" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="1.62" steps="582018"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.52" steps="544804"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.75" steps="516165"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.78" steps="516170"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.65" steps="588440"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l&#39;def2">
     <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_l&#39;def2">
      <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="set_equal_ket">
       <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.63" steps="724591"/></proof>
       </goal>
       <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.62" steps="724044"/></proof>
       </goal>
       <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.20" steps="725954"/></proof>
       </goal>
       <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
         <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_ket_l">
          <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_ket_l">
           <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="1.65" steps="680513"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.02" steps="719916"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="0.93" steps="645174"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="3.12" steps="873263"/></proof>
         </goal>
         <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="0.98" steps="645174"/></proof>
         </goal>
         <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.07" steps="645174"/></proof>
          </goal>
          <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_ket_rows">
           <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.0" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(rows m)" arg2="(power 2 (ket_length m))">
            <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.0.0" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="power_sum_rev">
             <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="replace" proved="true" arg1="( l1 +&#39;  (ket_length m))" arg2="(ket_length (kronecker (make_ket l1 (fun (_:int) -&gt; c_zero)) m))">
              <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0.0" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.83" steps="679712"/></proof>
              </goal>
              <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0.1" expl="equality hypothesis" proved="true">
              <transf name="assert" proved="true" arg1="(rows ((kronecker (make_ket l1 (fun (_:int) -&gt; c_zero)) m)) = power 2  (l1 +&#39; ket_length m))">
               <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0.1.0" expl="asserted formula" proved="true">
               <transf name="rewrite" proved="true" arg1="kronecker_rows">
                <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0.1.0.0" expl="asserted formula" proved="true">
                <transf name="rewrite" proved="true" arg1="make_ket_rows">
                 <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
                 <transf name="rewrite" proved="true" arg1="power_sum">
                  <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
                  <transf name="apply" proved="true" arg1="mult_eq">
                   <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="0.97" steps="645172"/></proof>
                   </goal>
                   <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="9"><result status="valid" time="1.67" steps="681242"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="0.99" steps="645174"/></proof>
                  </goal>
                  <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="9"><result status="valid" time="2.08" steps="719926"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="9"><result status="valid" time="1.04" steps="645174"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
               <proof prover="9"><result status="valid" time="2.70" steps="878313"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.97" steps="645174"/></proof>
             </goal>
             <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.14" steps="719926"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.0.1" expl="equality hypothesis" proved="true">
            <proof prover="9"><result status="valid" time="1.83" steps="681242"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.0.3.0.3.1.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.18" steps="645174"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.86" steps="672824"/></proof>
      </goal>
      <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.91" steps="601365"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.93" steps="601365"/></proof>
     </goal>
     <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.91" steps="601365"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="kronecker_ket_sum_distr_l_nol_&#39;vc.5.1.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="H">
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_ket_sum_distr_l_rew_&#39;vc" expl="VC for kronecker_ket_sum_distr_l_rew_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_ket_sum_distr_l_rew_&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.28" steps="533569"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_rew_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.76" steps="505241"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_rew_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.76" steps="505244"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_rew_&#39;vc.3" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures">
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_ket_sum_distr_r_&#39;vc" expl="VC for kronecker_ket_sum_distr_r_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_ket_sum_distr_r_&#39;vc.0" expl="assertion" proved="true">
  <proof prover="9"><result status="valid" time="1.86" steps="583408"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_r_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.41" steps="546360"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_r_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.83" steps="517708"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_r_&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.82" steps="517713"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_r_&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.69" steps="589434"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_r_&#39;vc.5" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l&#39;def2">
     <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_l&#39;def2">
      <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="set_equal_ket">
       <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ket_l_to_ket_gen">
        <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="exists" proved="true" arg1="(l2 +&#39; l1)">
         <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.0.0.0" proved="true">
         <proof prover="7"><result status="valid" time="0.36" steps="6954"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.38" steps="725532"/></proof>
       </goal>
       <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.34" steps="728476"/></proof>
       </goal>
       <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
         <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_ket_l">
          <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_ket_l">
           <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="9"><result status="valid" time="1.68" steps="682394"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="2.07" steps="721493"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.01" steps="647012"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.65" steps="680294"/></proof>
         </goal>
         <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.2" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="ket_l_to_ket_gen">
          <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.2.0" expl="apply premises" proved="true">
          <transf name="exists" proved="true" arg1="l1">
           <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.2.0.0" proved="true">
           <proof prover="9"><result status="valid" time="2.90" steps="875050"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.3.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.02" steps="647012"/></proof>
          </goal>
          <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.3.1" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_ket_rows">
           <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.3.1.0" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(rows m)" arg2="(power 2 l2)">
            <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.3.1.0.0" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="power_sum_rev">
             <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="replace" proved="true" arg1="(ket_length (kronecker m (make_ket l1 (fun (_:int) -&gt; c_zero))))" arg2="(l2+&#39;l1)" arg3="in" arg4="H">
              <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0.0" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="0.92" steps="603261"/></proof>
              </goal>
              <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="2.98" steps="874975"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="2.04" steps="721493"/></proof>
             </goal>
             <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.3.1.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="0.95" steps="647012"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.3.1.0.1" expl="equality hypothesis" proved="true">
            <proof prover="9"><result status="valid" time="1.66" steps="683095"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.0.3.0.3.1.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="0.95" steps="647012"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.96" steps="674470"/></proof>
      </goal>
      <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.01" steps="603203"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.94" steps="603203"/></proof>
     </goal>
     <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.96" steps="603203"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="kronecker_ket_sum_distr_r_&#39;vc.5.1.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="H">
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_ket_sum_distr_l_rev_&#39;vc" expl="VC for kronecker_ket_sum_distr_l_rev_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_ket_sum_distr_l_rev_&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.34" steps="535129"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_rev_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.76" steps="506788"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_rev_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.78" steps="506791"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_rev_&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.63" steps="578976"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_l_rev_&#39;vc.4" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures1">
   <goal name="kronecker_ket_sum_distr_l_rev_&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_ket_sum_distr_r_rev_&#39;vc" expl="VC for kronecker_ket_sum_distr_r_rev_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_ket_sum_distr_r_rev_&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.32" steps="536049"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_r_rev_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.74" steps="507700"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_r_rev_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.71" steps="507703"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_r_rev_&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.45" steps="579669"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_r_rev_&#39;vc.4" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures1">
   <goal name="kronecker_ket_sum_distr_r_rev_&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_ket_sum_distr_r_rew&#39;vc" expl="VC for kronecker_ket_sum_distr_r_rew" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_ket_sum_distr_r_rew&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.72" steps="541604"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_r_rew&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.15" steps="576102"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_r_rew&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.18" steps="576142"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_r_rew&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.71" steps="546151"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_r_rew&#39;vc.4" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="Ensures">
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ket_sum_scalar&#39;vc" expl="VC for ket_sum_scalar" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ket_sum_scalar&#39;vc.0" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_constant_size">
   <goal name="ket_sum_scalar&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.96" steps="629472"/></proof>
   </goal>
   <goal name="ket_sum_scalar&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.98" steps="629523"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ket_sum_scalar&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.75" steps="543391"/></proof>
  </goal>
  <goal name="ket_sum_scalar&#39;vc.2" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(cardinal s = 0)">
   <goal name="ket_sum_scalar&#39;vc.2.0" expl="true case (postcondition)" proved="true">
   <proof prover="9"><result status="valid" time="1.19" steps="577212"/></proof>
   </goal>
   <goal name="ket_sum_scalar&#39;vc.2.1" expl="false case (postcondition)" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="ket_sum_scalar&#39;vc.2.1.0" expl="false case (postcondition)" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l&#39;spec1">
     <goal name="ket_sum_scalar&#39;vc.2.1.0.0" expl="false case (postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_l&#39;spec1">
      <goal name="ket_sum_scalar&#39;vc.2.1.0.0.0" expl="false case (postcondition)" proved="true">
      <transf name="apply" proved="true" arg1="Ensures">
      </transf>
      </goal>
      <goal name="ket_sum_scalar&#39;vc.2.1.0.0.1" expl="rewrite premises" proved="true">
      <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l)">
       <goal name="ket_sum_scalar&#39;vc.2.1.0.0.1.0" expl="asserted formula" proved="true">
       <proof prover="9"><result status="valid" time="1.98" steps="709866"/></proof>
       </goal>
       <goal name="ket_sum_scalar&#39;vc.2.1.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.97" steps="709226"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="ket_sum_scalar&#39;vc.2.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.93" steps="630359"/></proof>
      </goal>
      <goal name="ket_sum_scalar&#39;vc.2.1.0.0.3" expl="rewrite premises" proved="true">
      <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l)">
       <goal name="ket_sum_scalar&#39;vc.2.1.0.0.3.0" expl="asserted formula" proved="true">
       <proof prover="9"><result status="valid" time="1.98" steps="709866"/></proof>
       </goal>
       <goal name="ket_sum_scalar&#39;vc.2.1.0.0.3.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.54" steps="662986"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ket_sum_scalar&#39;vc.2.1.0.1" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l)">
      <goal name="ket_sum_scalar&#39;vc.2.1.0.1.0" expl="asserted formula" proved="true">
      <proof prover="9"><result status="valid" time="2.02" steps="709866"/></proof>
      </goal>
      <goal name="ket_sum_scalar&#39;vc.2.1.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="2.04" steps="709226"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="ket_sum_scalar&#39;vc.2.1.0.2" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l)">
      <goal name="ket_sum_scalar&#39;vc.2.1.0.2.0" expl="asserted formula" proved="true">
      <proof prover="9"><result status="valid" time="2.04" steps="709866"/></proof>
      </goal>
      <goal name="ket_sum_scalar&#39;vc.2.1.0.2.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="0.98" steps="630392"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="ket_sum_scalar&#39;vc.2.1.0.3" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="2.09" steps="714091"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_ket_sum_distr_sc&#39;vc" expl="VC for kronecker_ket_sum_distr_sc" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_ket_sum_distr_sc&#39;vc.0" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_constant_size">
   <goal name="kronecker_ket_sum_distr_sc&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.96" steps="630351"/></proof>
   </goal>
   <goal name="kronecker_ket_sum_distr_sc&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.93" steps="630402"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="kronecker_ket_sum_distr_sc&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.72" steps="544000"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_sc&#39;vc.2" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(cardinal s = 0)">
   <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.0" expl="true case (postcondition)" proved="true">
   <proof prover="9"><result status="valid" time="1.20" steps="577932"/></proof>
   </goal>
   <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1" expl="false case (postcondition)" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0" expl="false case (postcondition)" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l&#39;spec1">
     <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.0" expl="false case (postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_l&#39;spec1">
      <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.0.0" expl="false case (postcondition)" proved="true">
      <transf name="apply" proved="true" arg1="Ensures">
      </transf>
      </goal>
      <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.0.1" expl="rewrite premises" proved="true">
      <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l1)">
       <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.0.1.0" expl="asserted formula" proved="true">
       <proof prover="9"><result status="valid" time="2.08" steps="711271"/></proof>
       </goal>
       <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.81" steps="710591"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.0.2" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.0.2.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.0.2.0.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="0.88" steps="631019"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.0.3.0.0" expl="rewrite premises" proved="true">
        <proof prover="9"><result status="valid" time="1.80" steps="711073"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.1" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l1)">
      <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.1.0" expl="asserted formula" proved="true">
      <proof prover="9"><result status="valid" time="2.00" steps="711271"/></proof>
      </goal>
      <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.81" steps="710591"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="1.03" steps="631019"/></proof>
     </goal>
     <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.3" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.3.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.3.0.0" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_ket_l">
        <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.3.0.0.0" expl="apply premises" proved="true">
        <proof prover="8"><result status="valid" time="1.07" steps="5979460"/></proof>
        </goal>
        <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.3.0.0.1" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="2.04" steps="709622"/></proof>
        </goal>
        <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.3.0.0.2" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="2.04" steps="710565"/></proof>
        </goal>
        <goal name="kronecker_ket_sum_distr_sc&#39;vc.2.1.0.3.0.0.3" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="0.83" steps="631029"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_decomp_r&#39;vc" expl="VC for kronecker_decomp_r" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_decomp_r&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.26" steps="491235"/></proof>
  </goal>
  <goal name="kronecker_decomp_r&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.04" steps="449763"/></proof>
  </goal>
  <goal name="kronecker_decomp_r&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.93" steps="449818"/></proof>
  </goal>
  <goal name="kronecker_decomp_r&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.64" steps="554548"/></proof>
  </goal>
  <goal name="kronecker_decomp_r&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.23" steps="2226510"/></proof>
  </goal>
  <goal name="kronecker_decomp_r&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.71" steps="545605"/></proof>
  </goal>
  <goal name="kronecker_decomp_r&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.72" steps="545610"/></proof>
  </goal>
  <goal name="kronecker_decomp_r&#39;vc.7" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(kronecker m n)" arg2="(kronecker m (ket_sum_l (n_bvs ln)
   (fun (x:bitvec) -&gt; get_ket n (bv_to_int x) *.. bv_to_ket x) ln))">
   <goal name="kronecker_decomp_r&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="kronecker_decomp_r&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="kronecker_decomp_r&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
      <goal name="kronecker_decomp_r&#39;vc.7.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.62" steps="623892"/></proof>
      </goal>
      <goal name="kronecker_decomp_r&#39;vc.7.0.0.0.1" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
      <goal name="kronecker_decomp_r&#39;vc.7.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="0.79" steps="545829"/></proof>
      </goal>
      <goal name="kronecker_decomp_r&#39;vc.7.0.0.0.3" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.99" steps="633397"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_decomp_r&#39;vc.7.1" expl="equality hypothesis" proved="true">
   <transf name="assert" proved="true" arg1="( n = (ket_sum_l (n_bvs ln)
   (fun (x:bitvec) -&gt; get_ket n (bv_to_int x) *.. bv_to_ket x) ln))">
    <goal name="kronecker_decomp_r&#39;vc.7.1.0" expl="asserted formula" proved="true">
    <transf name="replace" proved="true" arg1="(ket_sum_l (n_bvs ln)
    (fun (x:bitvec) -&gt; get_ket n (bv_to_int x) *.. bv_to_ket x) ln)" arg2="(ket_sum_l (n_bvs ln)
    (fun (bvx:bitvec) -&gt; get_ket n (bv_to_int bvx) *.. ket ln (bv_to_int bvx))
    ln)">
     <goal name="kronecker_decomp_r&#39;vc.7.1.0.0" expl="asserted formula" proved="true">
     <transf name="apply" proved="true" arg1="ket_decomp_bv_ket">
      <goal name="kronecker_decomp_r&#39;vc.7.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.79" steps="623876"/></proof>
      </goal>
      <goal name="kronecker_decomp_r&#39;vc.7.1.0.0.1" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.40" steps="575841"/></proof>
      </goal>
      <goal name="kronecker_decomp_r&#39;vc.7.1.0.0.2" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.41" steps="575885"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_decomp_r&#39;vc.7.1.0.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="ket_sum_eq">
      <goal name="kronecker_decomp_r&#39;vc.7.1.0.1.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.65" steps="623876"/></proof>
      </goal>
      <goal name="kronecker_decomp_r&#39;vc.7.1.0.1.1" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="0.77" steps="545813"/></proof>
      </goal>
      <goal name="kronecker_decomp_r&#39;vc.7.1.0.1.2" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="2.71" steps="887807"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_decomp_r&#39;vc.7.1.1" expl="equality hypothesis" proved="true">
    <transf name="assert" proved="true" arg1="(forall o. n = o -&gt; kronecker m n = kronecker m o)">
     <goal name="kronecker_decomp_r&#39;vc.7.1.1.0" expl="asserted formula" proved="true">
     <proof prover="9"><result status="valid" time="0.76" steps="545955"/></proof>
     </goal>
     <goal name="kronecker_decomp_r&#39;vc.7.1.1.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="h">
      <goal name="kronecker_decomp_r&#39;vc.7.1.1.1.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="h1">
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_decomp_l&#39;vc" expl="VC for kronecker_decomp_l" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_decomp_l&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.28" steps="491617"/></proof>
  </goal>
  <goal name="kronecker_decomp_l&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.02" steps="449989"/></proof>
  </goal>
  <goal name="kronecker_decomp_l&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.03" steps="450044"/></proof>
  </goal>
  <goal name="kronecker_decomp_l&#39;vc.3" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.49" steps="554847"/></proof>
  </goal>
  <goal name="kronecker_decomp_l&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.47" steps="2226763"/></proof>
  </goal>
  <goal name="kronecker_decomp_l&#39;vc.5" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.79" steps="545789"/></proof>
  </goal>
  <goal name="kronecker_decomp_l&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.82" steps="545794"/></proof>
  </goal>
  <goal name="kronecker_decomp_l&#39;vc.7" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(kronecker m n)" arg2="(kronecker ( ket_sum_l (n_bvs lm)
    (fun (bvx:bitvec) -&gt; get_ket m (bv_to_int bvx) *.. ket lm (bv_to_int bvx))
    lm) n)">
   <goal name="kronecker_decomp_l&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ket_sum_l (n_bvs lm)
   (fun (bvx:bitvec) -&gt; get_ket m (bv_to_int bvx) *.. ket lm (bv_to_int bvx))
   lm)" arg2="(ket_sum_l (n_bvs lm)
   (fun (x:bitvec) -&gt; get_ket m (bv_to_int x) *.. bv_to_ket x) lm)">
    <goal name="kronecker_decomp_l&#39;vc.7.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures">
     <goal name="kronecker_decomp_l&#39;vc.7.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="kronecker_decomp_l&#39;vc.7.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
       <goal name="kronecker_decomp_l&#39;vc.7.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.71" steps="624497"/></proof>
       </goal>
       <goal name="kronecker_decomp_l&#39;vc.7.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
       <goal name="kronecker_decomp_l&#39;vc.7.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="0.83" steps="545997"/></proof>
       </goal>
       <goal name="kronecker_decomp_l&#39;vc.7.0.0.0.0.3" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="2.13" steps="633970"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_decomp_l&#39;vc.7.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="ket_sum_eq">
     <goal name="kronecker_decomp_l&#39;vc.7.0.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.73" steps="624476"/></proof>
     </goal>
     <goal name="kronecker_decomp_l&#39;vc.7.0.1.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="0.81" steps="545997"/></proof>
     </goal>
     <goal name="kronecker_decomp_l&#39;vc.7.0.1.2" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="2.91" steps="890881"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_decomp_l&#39;vc.7.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="1.82" steps="627685"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_ket_sum_distr_double&#39;vc" expl="VC for kronecker_ket_sum_distr_double" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_ket_sum_distr_double&#39;vc.0" expl="assertion" proved="true">
  <proof prover="7"><result status="valid" time="0.43" steps="15376"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_double&#39;vc.1" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.79" steps="553896"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_double&#39;vc.2" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.78" steps="553899"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_double&#39;vc.3" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose (n_bvs i)) ) l1)">
   <goal name="kronecker_ket_sum_distr_double&#39;vc.3.0" expl="asserted formula" proved="true">
   <proof prover="5"><result status="valid" time="0.43" steps="2186902"/></proof>
   </goal>
   <goal name="kronecker_ket_sum_distr_double&#39;vc.3.1" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(is_a_ket_l (g (choose (n_bvs j)) ) l2)">
    <goal name="kronecker_ket_sum_distr_double&#39;vc.3.1.0" expl="asserted formula" proved="true">
    <proof prover="5"><result status="valid" time="0.56" steps="2224431"/></proof>
    </goal>
    <goal name="kronecker_ket_sum_distr_double&#39;vc.3.1.1" expl="precondition" proved="true">
    <proof prover="9"><result status="valid" time="1.82" steps="629041"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="kronecker_ket_sum_distr_double&#39;vc.4" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.82" steps="556674"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_double&#39;vc.5" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(is_a_ket_l (g (choose (n_bvs j)) ) l2)">
   <goal name="kronecker_ket_sum_distr_double&#39;vc.5.0" expl="asserted formula" proved="true">
   <proof prover="9"><result status="valid" time="2.03" steps="651105"/></proof>
   </goal>
   <goal name="kronecker_ket_sum_distr_double&#39;vc.5.1" expl="precondition" proved="true">
   <proof prover="9"><result status="valid" time="1.74" steps="647535"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="kronecker_ket_sum_distr_double&#39;vc.6" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.83" steps="601624"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_double&#39;vc.7" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="1.46" steps="633124"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_double&#39;vc.8" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.87" steps="601931"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_double&#39;vc.9" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.85" steps="601936"/></proof>
  </goal>
  <goal name="kronecker_ket_sum_distr_double&#39;vc.10" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(ket_sum_l (n_bvs (i +&#39; j))
    (fun (k:bitvec) -&gt; kronecker (f @ hpart k i) (g @ tpart k i)) (l1 +&#39; l2))" arg2="(ket_sum_l (n_bvs (j +&#39; i))
  (fun (bv:bitvec) -&gt;
    ((fun (bvx:bitvec) (bvy:bitvec) -&gt; kronecker (f @ bvx) (g @ bvy))
     @ hpart bv i)
    @ tpart bv i)
  (l1 +&#39; l2))">
   <goal name="kronecker_ket_sum_distr_double&#39;vc.10.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures16">
    <goal name="kronecker_ket_sum_distr_double&#39;vc.10.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures">
     <goal name="kronecker_ket_sum_distr_double&#39;vc.10.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="ket_sum_eq">
      <goal name="kronecker_ket_sum_distr_double&#39;vc.10.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.88" steps="684450"/></proof>
      </goal>
      <goal name="kronecker_ket_sum_distr_double&#39;vc.10.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="0.88" steps="602022"/></proof>
      </goal>
      <goal name="kronecker_ket_sum_distr_double&#39;vc.10.0.0.0.2" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="kronecker_ket_sum_distr_double&#39;vc.10.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="kronecker_ket_sum_distr_double&#39;vc.10.0.0.0.2.0.0" expl="apply premises" proved="true">
        <transf name="instantiate" proved="true" arg1="kronecker_ket_sum_distr_r" arg2="(n_bvs j),g,(f a),l2,l1">
         <goal name="kronecker_ket_sum_distr_double&#39;vc.10.0.0.0.2.0.0.0" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="kronecker_ket_sum_distr_double&#39;vc.10.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="Hinst">
           <goal name="kronecker_ket_sum_distr_double&#39;vc.10.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(l2 +&#39; l1)" arg2="(l1 +&#39; l2)">
            <goal name="kronecker_ket_sum_distr_double&#39;vc.10.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
            </transf>
            </goal>
            <goal name="kronecker_ket_sum_distr_double&#39;vc.10.0.0.0.2.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="9"><result status="valid" time="1.00" steps="696533"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="kronecker_ket_sum_distr_double&#39;vc.10.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.71" steps="730773"/></proof>
           </goal>
           <goal name="kronecker_ket_sum_distr_double&#39;vc.10.0.0.0.2.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.73" steps="731227"/></proof>
           </goal>
           <goal name="kronecker_ket_sum_distr_double&#39;vc.10.0.0.0.2.0.0.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.00" steps="696528"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="kronecker_ket_sum_distr_double&#39;vc.10.1" expl="equality hypothesis" proved="true">
   <transf name="apply" proved="true" arg1="ket_sum_eq">
    <goal name="kronecker_ket_sum_distr_double&#39;vc.10.1.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.90" steps="684450"/></proof>
    </goal>
    <goal name="kronecker_ket_sum_distr_double&#39;vc.10.1.1" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="0.84" steps="602042"/></proof>
    </goal>
    <goal name="kronecker_ket_sum_distr_double&#39;vc.10.1.2" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_add_null&#39;vc" expl="VC for kronecker_add_null" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_add_null&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_null_mat">
   <goal name="kronecker_add_null&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="kronecker_add_null&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="( get_ket (kronecker m2 x&#39;) i  = c_zero)">
     <goal name="kronecker_add_null&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <transf name="case" proved="true" arg1="(get_ket (kronecker m2 x&#39;) i = c_zero)">
      <goal name="kronecker_add_null&#39;vc.0.0.0.0.0" expl="true case (asserted formula)" proved="true">
      <proof prover="9"><result status="valid" time="0.65" steps="426618"/></proof>
      </goal>
      <goal name="kronecker_add_null&#39;vc.0.0.0.0.1" expl="false case (asserted formula)" proved="true">
      <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
       <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0" expl="false case (asserted formula)" proved="true">
       <transf name="assert" proved="true" arg1="(ket_to_int x&#39; =  (mod i (rows x&#39;)))">
        <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_kronecker_values" arg2="in" arg3="h1">
         <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
         <transf name="assert" proved="true" arg1="(get_ket x&#39; (mod i (rows x&#39;)) = c_one)">
          <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
          <transf name="assert" proved="true" arg1="(not(get_ket x&#39; (mod i (rows x&#39;)) = c_zero))">
           <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
           <proof prover="9"><result status="valid" time="1.09" steps="453872"/></proof>
           </goal>
           <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.0.0.0.1" expl="asserted formula" proved="true">
           <transf name="assert" proved="true" arg1="(valid_index x (mod i (rows x&#39;)) 0)">
            <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.0.0.0.1.0" expl="asserted formula" proved="true">
            <proof prover="9"><result status="valid" time="1.43" steps="511795"/></proof>
            </goal>
            <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.0.0.0.1.1" expl="asserted formula" proved="true">
            <proof prover="9"><result status="valid" time="4.72" steps="1193352"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.0.0.1" expl="asserted formula" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.0.0.1.0" expl="asserted formula" proved="true">
           <transf name="apply" proved="true" arg1="goal_comm">
            <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="ket_to_int&#39;spec">
             <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.0.0.1.0.0.0" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="0.71" steps="491505"/></proof>
             </goal>
             <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.0.0.1.0.0.1" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.53" steps="581573"/></proof>
             </goal>
             <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.0.0.1.0.0.2" expl="apply premises" proved="true">
             <proof prover="9"><result status="valid" time="1.57" steps="581449"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.04" steps="454752"/></proof>
         </goal>
         <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.08" steps="454752"/></proof>
         </goal>
         <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.46" steps="508267"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1" expl="false case (asserted formula)" proved="true">
        <transf name="assert" proved="true" arg1="(get_ket (kronecker m1 x) i = c_zero)">
         <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
         <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
          <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.0.0" expl="asserted formula" proved="true">
          <transf name="replace" proved="true" arg1="(get_ket x (mod i (rows x)))" arg2="c_zero">
           <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.0.0.0" expl="asserted formula" proved="true">
           <proof prover="9"><result status="valid" time="1.08" steps="453941"/></proof>
           </goal>
           <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="replace" proved="true" arg1="x" arg2="(ket l2 (ket_to_int x))">
            <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="get__ket_value">
             <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.0.0.1.0.0" expl="equality hypothesis" proved="true">
             <transf name="replace" proved="true" arg1="(rows (ket l2 (ket_to_int x)))" arg2="(rows x&#39;)">
              <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="1.39" steps="509910"/></proof>
              </goal>
              <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="9"><result status="valid" time="1.41" steps="509350"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.37" steps="507892"/></proof>
             </goal>
             <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.0.0.1.0.2.0" proved="true">
              <proof prover="7"><result status="valid" time="0.45" steps="16789"/></proof>
              </goal>
              <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.0.0.1.0.2.1" proved="true">
              <proof prover="0"><result status="valid" time="0.53"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.0.0.1.0.3" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.43" steps="512708"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="9"><result status="valid" time="1.37" steps="508669"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.08" steps="454989"/></proof>
          </goal>
          <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.06" steps="454989"/></proof>
          </goal>
          <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.0.3" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="0.44"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1" expl="false case (asserted formula)" proved="true">
         <transf name="assert" proved="true" arg1="(get_ket (kronecker m x) i = c_zero)">
          <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.0" expl="asserted formula" proved="true">
          <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
           <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.0.0" expl="asserted formula" proved="true">
           <transf name="replace" proved="true" arg1="(get_ket x (mod i (rows x)))" arg2="c_zero">
            <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.0.0.0" expl="asserted formula" proved="true">
            <proof prover="9"><result status="valid" time="1.04" steps="453973"/></proof>
            </goal>
            <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
            <transf name="replace" proved="true" arg1="x" arg2="(ket l2 (ket_to_int x))">
             <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.0.0.1.0" expl="equality hypothesis" proved="true">
             <transf name="rewrite" proved="true" arg1="get__ket_value">
              <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.0.0.1.0.0" expl="equality hypothesis" proved="true">
              <transf name="replace" proved="true" arg1="(rows (ket l2 (ket_to_int x)))" arg2="(rows x&#39;)">
               <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
               <proof prover="9"><result status="valid" time="1.36" steps="513334"/></proof>
               </goal>
               <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="9"><result status="valid" time="1.41" steps="512774"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.0.0.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.37" steps="511432"/></proof>
              </goal>
              <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.0.0.1.0.2" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.0.0.1.0.2.0" proved="true">
               <proof prover="7"><result status="valid" time="0.46" steps="17432"/></proof>
               </goal>
               <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.0.0.1.0.2.1" proved="true">
               <proof prover="0"><result status="valid" time="0.48"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.0.0.1.0.3" expl="rewrite premises" proved="true">
              <proof prover="9"><result status="valid" time="1.48" steps="516341"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.0.0.1.1" expl="equality hypothesis" proved="true">
             <proof prover="9"><result status="valid" time="1.48" steps="512185"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.13" steps="455029"/></proof>
           </goal>
           <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.0.2" expl="rewrite premises" proved="true">
           <proof prover="9"><result status="valid" time="1.10" steps="455029"/></proof>
           </goal>
           <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.0.3" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="0.50"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.1" expl="false case (asserted formula)" proved="true">
          <transf name="replace" proved="true" arg1="(get_ket m2 (div i (rows x&#39;)) *. get_ket x&#39; (mod i (rows x&#39;)))" arg2="(get_ket (kronecker m2 x&#39;) i)">
           <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.1.0" expl="false case (asserted formula)" proved="true">
           <transf name="rewrite" proved="true" arg1="Requires" arg2="in" arg3="h1">
            <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.1.0.0" expl="false case (asserted formula)" proved="true">
            <transf name="rewrite" proved="true" arg1="add_ket_l_value" arg2="in" arg3="h1">
             <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.1.0.0.0" expl="false case (asserted formula)" proved="true">
             <proof prover="9"><result status="valid" time="1.03" steps="453744"/></proof>
             </goal>
             <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.1.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.41" steps="528687"/></proof>
             </goal>
             <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.1.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="9"><result status="valid" time="1.45" steps="515063"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.0.1.1.1.1" expl="equality hypothesis" proved="true">
           <proof prover="9"><result status="valid" time="1.41" steps="512314"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.09" steps="454752"/></proof>
       </goal>
       <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.04" steps="454752"/></proof>
       </goal>
       <goal name="kronecker_add_null&#39;vc.0.0.0.0.1.3" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.37" steps="508267"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_add_null&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.38" steps="504120"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="kronecker_add_null&#39;vc.1" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_null_mat">
   <goal name="kronecker_add_null&#39;vc.1.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="kronecker_add_null&#39;vc.1.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(get m2 i j)" arg2="(get_ket m2 i )">
     <goal name="kronecker_add_null&#39;vc.1.0.0.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="(get_ket (kronecker m2 x&#39;) (i *&#39; rows (x&#39;) +&#39; ket_to_int x&#39;) = get_ket m2 i)">
      <goal name="kronecker_add_null&#39;vc.1.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
       <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="replace" proved="true" arg1="(div ((i *&#39; rows x&#39;) +&#39; ket_to_int x&#39;) (rows x&#39;))" arg2="i">
        <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <transf name="replace" proved="true" arg1="(mod ((i *&#39; rows x&#39;) +&#39; ket_to_int x&#39;) (rows x&#39;))" arg2="(ket_to_int x&#39;)">
         <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
         <transf name="apply" proved="true" arg1="mult_one_t">
          <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="0.45" steps="16431"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="((i *&#39; rows x&#39;) +&#39; ket_to_int x&#39;),(rows x&#39;),i,(ket_to_int x&#39;)">
          <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
          <proof prover="0"><result status="valid" time="0.47"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="((i *&#39; rows x&#39;) +&#39; ket_to_int x&#39;),(rows x&#39;),i,(ket_to_int x&#39;)">
         <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
         <proof prover="0"><result status="valid" time="0.47"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.03" steps="454714"/></proof>
       </goal>
       <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="1.04" steps="454714"/></proof>
       </goal>
       <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="assert" proved="true" arg1="(forall a b . 0&lt;=&#39; a -&gt; 0&lt;=&#39; b -&gt; 0&lt;=&#39; a+&#39;b)">
         <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.3.0.0" expl="asserted formula" proved="true">
         <proof prover="9"><result status="valid" time="1.08" steps="454441"/></proof>
         </goal>
         <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.3.0.1" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="h">
          <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.3.0.1.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.49"/></proof>
          </goal>
          <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.3.0.1.1" expl="apply premises" proved="true">
          <proof prover="7"><result status="valid" time="0.45" steps="16091"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.3.1" expl="rewrite premises" proved="true">
        <transf name="assert" proved="true" arg1="((i *&#39; rows x&#39;) &lt;=&#39; (rows m2 -&#39;&#39; 1) *&#39; rows x&#39; )">
         <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.3.1.0" expl="asserted formula" proved="true">
         <proof prover="0"><result status="valid" time="0.68"/></proof>
         </goal>
         <goal name="kronecker_add_null&#39;vc.1.0.0.0.0.3.1.1" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.62"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="kronecker_add_null&#39;vc.1.0.0.0.1" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(forall i. ket_valid_index (kronecker m2 x&#39;) i -&gt; get_ket (kronecker m2 x&#39;) i = c_zero)">
       <goal name="kronecker_add_null&#39;vc.1.0.0.0.1.0" expl="asserted formula" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="kronecker_add_null&#39;vc.1.0.0.0.1.0.0" expl="asserted formula" proved="true">
        <proof prover="9"><result status="valid" time="1.04" steps="453545"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="kronecker_add_null&#39;vc.1.0.0.0.1.1" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="(get_ket (kronecker m2 x&#39;) ((i *&#39; rows x&#39;) +&#39; ket_to_int x&#39;) = c_zero)">
        <goal name="kronecker_add_null&#39;vc.1.0.0.0.1.1.0" expl="asserted formula" proved="true">
        <transf name="rewrite" proved="true" arg1="h1">
         <goal name="kronecker_add_null&#39;vc.1.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
         <proof prover="9"><result status="valid" time="0.59" steps="427724"/></proof>
         </goal>
         <goal name="kronecker_add_null&#39;vc.1.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="set_ket_valid_index">
          <goal name="kronecker_add_null&#39;vc.1.0.0.0.1.1.0.1.0" expl="apply premises" proved="true">
          <proof prover="9"><result status="valid" time="1.37" steps="508295"/></proof>
          </goal>
          <goal name="kronecker_add_null&#39;vc.1.0.0.0.1.1.0.1.1" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="kronecker_add_null&#39;vc.1.0.0.0.1.1.0.1.1.0" proved="true">
           <transf name="assert" proved="true" arg1="(forall a b . 0&lt;=&#39; a -&gt; 0&lt;=&#39; b -&gt; 0&lt;=&#39; a+&#39;b)">
            <goal name="kronecker_add_null&#39;vc.1.0.0.0.1.1.0.1.1.0.0" expl="asserted formula" proved="true">
            <proof prover="9"><result status="valid" time="1.02" steps="454618"/></proof>
            </goal>
            <goal name="kronecker_add_null&#39;vc.1.0.0.0.1.1.0.1.1.0.1" proved="true">
            <transf name="apply" proved="true" arg1="h">
             <goal name="kronecker_add_null&#39;vc.1.0.0.0.1.1.0.1.1.0.1.0" expl="apply premises" proved="true">
             <proof prover="0"><result status="valid" time="0.64"/></proof>
             </goal>
             <goal name="kronecker_add_null&#39;vc.1.0.0.0.1.1.0.1.1.0.1.1" expl="apply premises" proved="true">
             <proof prover="7"><result status="valid" time="0.46" steps="17398"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="kronecker_add_null&#39;vc.1.0.0.0.1.1.0.1.1.1" proved="true">
           <transf name="assert" proved="true" arg1="((i *&#39; rows x&#39;) &lt;=&#39; (rows m2 -&#39;&#39; 1) *&#39; rows x&#39; )">
            <goal name="kronecker_add_null&#39;vc.1.0.0.0.1.1.0.1.1.1.0" expl="asserted formula" proved="true">
            <proof prover="0"><result status="valid" time="0.57"/></proof>
            </goal>
            <goal name="kronecker_add_null&#39;vc.1.0.0.0.1.1.0.1.1.1.1" proved="true">
            <proof prover="0"><result status="valid" time="0.55"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="kronecker_add_null&#39;vc.1.0.0.0.1.1.1" expl="apply premises" proved="true">
        <proof prover="9"><result status="valid" time="1.03" steps="453123"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_add_null&#39;vc.1.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="1.39" steps="501381"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="kronecker_add_null&#39;vc.2" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_null_mat">
   <goal name="kronecker_add_null&#39;vc.2.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="kronecker_add_null&#39;vc.2.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_values">
     <goal name="kronecker_add_null&#39;vc.2.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="zero_mult_t">
      <goal name="kronecker_add_null&#39;vc.2.0.0.0.0" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(valid_index  m2 (div i (rows x&#39;)) (div j (columns x&#39;)))">
       <goal name="kronecker_add_null&#39;vc.2.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="9"><result status="valid" time="1.36" steps="503859"/></proof>
       </goal>
       <goal name="kronecker_add_null&#39;vc.2.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="0.97" steps="451842"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_add_null&#39;vc.2.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.65" steps="427593"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kronecker_injec_eq_left&#39;vc" expl="VC for kronecker_injec_eq_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kronecker_injec_eq_left&#39;vc.0" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_rows">
   <goal name="kronecker_injec_eq_left&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="kronecker_rows">
    <goal name="kronecker_injec_eq_left&#39;vc.0.0.0" expl="assertion" proved="true">
    <transf name="assert" proved="true" arg1="(0 &lt;&gt; (rows m *&#39; rows o) -&#39;&#39; (rows m&#39; *&#39; rows o))">
     <goal name="kronecker_injec_eq_left&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <transf name="assert" proved="true" arg1="(0 &lt;&gt; (rows m ) -&#39;&#39; (rows m&#39; ))">
      <goal name="kronecker_injec_eq_left&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="9"><result status="valid" time="0.64" steps="429187"/></proof>
      </goal>
      <goal name="kronecker_injec_eq_left&#39;vc.0.0.0.0.1" expl="asserted formula" proved="true">
      <transf name="assert" proved="true" arg1="(forall a b c. (a*&#39; c -&#39;&#39; b*&#39;c) = (a-&#39;&#39;b) *&#39;c)">
       <goal name="kronecker_injec_eq_left&#39;vc.0.0.0.0.1.0" expl="asserted formula" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="kronecker_injec_eq_left&#39;vc.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
        <proof prover="9"><result status="valid" time="0.64" steps="429248"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="kronecker_injec_eq_left&#39;vc.0.0.0.0.1.1" expl="asserted formula" proved="true">
       <transf name="rewrite" proved="true" arg1="h1">
        <goal name="kronecker_injec_eq_left&#39;vc.0.0.0.0.1.1.0" expl="asserted formula" proved="true">
        <transf name="case" proved="true" arg1="(rows o = 0)">
         <goal name="kronecker_injec_eq_left&#39;vc.0.0.0.0.1.1.0.0" expl="true case (asserted formula)" proved="true">
         <proof prover="9"><result status="valid" time="1.41" steps="500755"/></proof>
         </goal>
         <goal name="kronecker_injec_eq_left&#39;vc.0.0.0.0.1.1.0.1" expl="false case (asserted formula)" proved="true">
         <proof prover="0"><result status="valid" time="0.60"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="kronecker_injec_eq_left&#39;vc.0.0.0.1" expl="assertion" proved="true">
     <proof prover="9"><result status="valid" time="0.74" steps="429220"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="kronecker_injec_eq_left&#39;vc.1" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_columns">
   <goal name="kronecker_injec_eq_left&#39;vc.1.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="kronecker_columns">
    <goal name="kronecker_injec_eq_left&#39;vc.1.0.0" expl="assertion" proved="true">
    <transf name="case" proved="true" arg1="(columns o = 0)">
     <goal name="kronecker_injec_eq_left&#39;vc.1.0.0.0" expl="true case (assertion)" proved="true">
     <proof prover="9"><result status="valid" time="1.53" steps="499566"/></proof>
     </goal>
     <goal name="kronecker_injec_eq_left&#39;vc.1.0.0.1" expl="false case (assertion)" proved="true">
     <transf name="assert" proved="true" arg1="(0 &lt;&gt; (columns m *&#39; columns o) -&#39;&#39; (columns m&#39; *&#39; columns o))">
      <goal name="kronecker_injec_eq_left&#39;vc.1.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="assert" proved="true" arg1="(0 &lt;&gt; (columns m ) -&#39;&#39; (columns m&#39; ))">
       <goal name="kronecker_injec_eq_left&#39;vc.1.0.0.1.0.0" expl="asserted formula" proved="true">
       <proof prover="9"><result status="valid" time="0.69" steps="427523"/></proof>
       </goal>
       <goal name="kronecker_injec_eq_left&#39;vc.1.0.0.1.0.1" expl="asserted formula" proved="true">
       <transf name="assert" proved="true" arg1="(forall a b c. (a*&#39; c -&#39;&#39; b*&#39;c) = (a-&#39;&#39;b) *&#39;c)">
        <goal name="kronecker_injec_eq_left&#39;vc.1.0.0.1.0.1.0" expl="asserted formula" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="kronecker_injec_eq_left&#39;vc.1.0.0.1.0.1.0.0" expl="asserted formula" proved="true">
         <proof prover="9"><result status="valid" time="0.65" steps="427584"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="kronecker_injec_eq_left&#39;vc.1.0.0.1.0.1.1" expl="asserted formula" proved="true">
        <transf name="rewrite" proved="true" arg1="h1">
         <goal name="kronecker_injec_eq_left&#39;vc.1.0.0.1.0.1.1.0" expl="asserted formula" proved="true">
         <transf name="case" proved="true" arg1="(rows o = 0)">
          <goal name="kronecker_injec_eq_left&#39;vc.1.0.0.1.0.1.1.0.0" expl="true case (asserted formula)" proved="true">
          <proof prover="9"><result status="valid" time="1.42" steps="500277"/></proof>
          </goal>
          <goal name="kronecker_injec_eq_left&#39;vc.1.0.0.1.0.1.1.0.1" expl="false case (asserted formula)" proved="true">
          <proof prover="0"><result status="valid" time="0.58"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="kronecker_injec_eq_left&#39;vc.1.0.0.1.1" expl="false case (assertion)" proved="true">
      <proof prover="9"><result status="valid" time="0.64" steps="427552"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="kronecker_injec_eq_left&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="kronecker_injec_eq_left&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="9"><result status="valid" time="1.02" steps="455507"/></proof>
   </goal>
   <goal name="kronecker_injec_eq_left&#39;vc.2.1" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(exists i j. valid_index m i j &amp;&amp; get m i j &lt;&gt; get m&#39; i j)">
    <goal name="kronecker_injec_eq_left&#39;vc.2.1.0" expl="true case (postcondition)" proved="true">
    <transf name="assert" proved="true" arg1="(exists i j. valid_index o i j &amp;&amp; get o i j &lt;&gt; c_zero)">
     <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.0" expl="asserted formula" proved="true">
     <proof prover="9"><result status="valid" time="1.37" steps="498192"/></proof>
     </goal>
     <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1" expl="true case (postcondition)" proved="true">
     <transf name="destruct" proved="true" arg1="h1">
      <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0" expl="true case (postcondition)" proved="true">
      <transf name="destruct" proved="true" arg1="h1">
       <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0.0" expl="true case (postcondition)" proved="true">
       <transf name="destruct" proved="true" arg1="h1">
        <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0.0.0" expl="true case (postcondition)" proved="true">
        <transf name="destruct" proved="true" arg1="h">
         <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0.0.0.0" expl="true case (postcondition)" proved="true">
         <transf name="destruct" proved="true" arg1="h">
          <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0.0.0.0.0" expl="true case (postcondition)" proved="true">
          <transf name="assert" proved="true" arg1="(get (kronecker m o) (i1*&#39; rows o +&#39; i) (j1*&#39; columns o +&#39; j) &lt;&gt; get (kronecker m&#39; o) (i1 *&#39; rows o +&#39; i) (j1 *&#39; columns o +&#39; j))">
           <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_values">
            <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_values">
             <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
             <transf name="replace" proved="true" arg1="( div ((i1 *&#39; rows o) +&#39; i) (rows o))" arg2="i1">
              <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
              <transf name="replace" proved="true" arg1="(mod ((i1 *&#39; rows o) +&#39; i) (rows o))" arg2="i">
               <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
               <transf name="replace" proved="true" arg1="(div ((j1 *&#39; columns o) +&#39; j) (columns o))" arg2="j1">
                <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                <transf name="replace" proved="true" arg1="(mod ((j1 *&#39; columns o) +&#39; j) (columns o))" arg2="j">
                 <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                 <proof prover="9"><result status="valid" time="1.44" steps="501763"/></proof>
                 </goal>
                 <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="7"><result status="valid" time="0.52" steps="17019"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="7"><result status="valid" time="0.51" steps="17038"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="7"><result status="valid" time="0.51" steps="16820"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="7"><result status="valid" time="0.51" steps="16839"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="7"><result status="valid" time="0.52" steps="17445"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="7"><result status="valid" time="0.37" steps="17452"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="kronecker_injec_eq_left&#39;vc.2.1.0.1.0.0.0.0.0.1" expl="true case (postcondition)" proved="true">
           <proof prover="9"><result status="valid" time="1.04" steps="454131"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="kronecker_injec_eq_left&#39;vc.2.1.1" expl="false case (postcondition)" proved="true">
    <transf name="apply" proved="true" arg1="set_equal_mat">
     <goal name="kronecker_injec_eq_left&#39;vc.2.1.1.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="0.66" steps="427620"/></proof>
     </goal>
     <goal name="kronecker_injec_eq_left&#39;vc.2.1.1.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.12" steps="453936"/></proof>
     </goal>
     <goal name="kronecker_injec_eq_left&#39;vc.2.1.1.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="kronecker_injec_eq_left&#39;vc.2.1.1.2.0" expl="apply premises" proved="true">
      <proof prover="9"><result status="valid" time="1.02" steps="451813"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Ket_zero" proved="true">
 <goal name="ket_zero&#39;vc" expl="VC for ket_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ket_zero&#39;vc.0" expl="precondition" proved="true">
  <proof prover="9"><result status="valid" time="0.56" steps="397125"/></proof>
  </goal>
  <goal name="ket_zero&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.97" steps="426619"/></proof>
  </goal>
  <goal name="ket_zero&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.24" steps="469743"/></proof>
  </goal>
  <goal name="ket_zero&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.03" steps="428728"/></proof>
  </goal>
  <goal name="ket_zero&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.97" steps="426714"/></proof>
  </goal>
  <goal name="ket_zero&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.56" steps="400022"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="get_ket_zero&#39;vc" expl="VC for get_ket_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_ket_zero&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.93" steps="423221"/></proof>
  </goal>
  <goal name="get_ket_zero&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.95" steps="424593"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="set_ket_zero&#39;vc" expl="VC for set_ket_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_ket_zero&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equal_mat">
   <goal name="set_ket_zero&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="0.65" steps="408884"/></proof>
   </goal>
   <goal name="set_ket_zero&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="0.61" steps="408884"/></proof>
   </goal>
   <goal name="set_ket_zero&#39;vc.0.2" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="set_ket_zero&#39;vc.0.2.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.26" steps="472474"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ket_to_bv_zero&#39;vc" expl="VC for ket_to_bv_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ket_to_bv_zero&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="2.08" steps="727221"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="bv_to_ket_zero&#39;vc" expl="VC for bv_to_ket_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="bv_to_ket_zero&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.97" steps="426320"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ket_zero_kron&#39;vc" expl="VC for ket_zero_kron" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ket_zero_kron&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equal_mat">
   <goal name="ket_zero_kron&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="kronecker_rows">
    <goal name="ket_zero_kron&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="0.97" steps="431222"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ket_zero_kron&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="0.95" steps="431120"/></proof>
   </goal>
   <goal name="ket_zero_kron&#39;vc.0.2" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ket_zero_kron&#39;vc.0.2.0" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="(i &lt;&#39; rows y)">
     <goal name="ket_zero_kron&#39;vc.0.2.0.0" expl="asserted formula" proved="true">
     <proof prover="9"><result status="valid" time="1.21" steps="474727"/></proof>
     </goal>
     <goal name="ket_zero_kron&#39;vc.0.2.0.1" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="(j &lt;&#39; columns y)">
      <goal name="ket_zero_kron&#39;vc.0.2.0.1.0" expl="asserted formula" proved="true">
      <proof prover="9"><result status="valid" time="1.19" steps="474755"/></proof>
      </goal>
      <goal name="ket_zero_kron&#39;vc.0.2.0.1.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_values">
       <goal name="ket_zero_kron&#39;vc.0.2.0.1.1.0" expl="apply premises" proved="true">
       <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="i,(rows y),0,i">
        <goal name="ket_zero_kron&#39;vc.0.2.0.1.1.0.0" expl="apply premises" proved="true">
        <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="j,(columns y),0,j">
         <goal name="ket_zero_kron&#39;vc.0.2.0.1.1.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.22" steps="478568"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="ket_zero_kron&#39;vc.0.2.0.1.1.1" expl="rewrite premises" proved="true">
       <proof prover="9"><result status="valid" time="0.63" steps="401656"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="kron_ket_zero&#39;vc" expl="VC for kron_ket_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="kron_ket_zero&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equal_mat">
   <goal name="kron_ket_zero&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="kronecker_rows">
    <goal name="kron_ket_zero&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.03" steps="431321"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="kron_ket_zero&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="9"><result status="valid" time="1.04" steps="431229"/></proof>
   </goal>
   <goal name="kron_ket_zero&#39;vc.0.2" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="kron_ket_zero&#39;vc.0.2.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_values">
     <goal name="kron_ket_zero&#39;vc.0.2.0.0" expl="apply premises" proved="true">
     <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="j,(columns x),j,0">
      <goal name="kron_ket_zero&#39;vc.0.2.0.0.0" expl="apply premises" proved="true">
      <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="i,(rows x),i,0">
       <goal name="kron_ket_zero&#39;vc.0.2.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.37" steps="478741"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="kron_ket_zero&#39;vc.0.2.0.1" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.46" steps="401715"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
