<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Z3" version="4.8.6" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.8.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="complex_expo.mlw"/>
<theory name="Complex_Exponentiation" proved="true">
 <goal name="cpower_ttwo_two" proved="true">
 <transf name="replace" proved="true" arg1="2" arg2="(1 +1)">
  <goal name="cpower_ttwo_two.0" proved="true">
  <transf name="rewrite" proved="true" arg1="Cpower_sum">
   <goal name="cpower_ttwo_two.0.0" proved="true">
   <transf name="replace" proved="true" arg1="4" arg2="(2+2)">
    <goal name="cpower_ttwo_two.0.0.0" proved="true">
    <proof prover="6"><result status="valid" time="0.26" steps="141415"/></proof>
    </goal>
    <goal name="cpower_ttwo_two.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="6"><result status="valid" time="0.11" steps="122176"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cpower_ttwo_two.0.1" expl="rewrite premises" proved="true">
   <proof prover="6"><result status="valid" time="0.12" steps="122188"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_ttwo_two.1" expl="equality hypothesis" proved="true">
  <proof prover="6"><result status="valid" time="0.11" steps="122175"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="squarert_two&#39;vc" expl="VC for squarert_two" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="squarert_two&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.22" steps="132965"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="real_squarert_two" proved="true">
 <proof prover="6"><result status="valid" time="0.28" steps="140602"/></proof>
 </goal>
 <goal name="squarertTwo" proved="true">
 <transf name="eliminate_definition" proved="true" >
  <goal name="squarertTwo.0" proved="true">
  <transf name="rewrite" proved="true" arg1="squarert_two&#39;def">
   <goal name="squarertTwo.0.0" proved="true">
   <transf name="replace" proved="true" arg1="2" arg2="(1 +1)">
    <goal name="squarertTwo.0.0.0" proved="true">
    <transf name="rewrite" proved="true" arg1="Cpower_sum">
     <goal name="squarertTwo.0.0.0.0" proved="true">
     <proof prover="6"><result status="valid" time="0.26" steps="144041"/></proof>
     </goal>
     <goal name="squarertTwo.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="6"><result status="valid" time="0.13" steps="123778"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="squarertTwo.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="6"><result status="valid" time="0.12" steps="123765"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="complete_rt_two&#39;vc" expl="VC for complete_rt_two" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="complete_rt_two&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.35" steps="142388"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_sum&#39;vc" expl="VC for cpower_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_sum&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.12" steps="3899"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_one&#39;vc" expl="VC for cpower_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.26" steps="133289"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_two&#39;vc" expl="VC for cpower_two" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_two&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="n" arg2="(1 +1)">
   <goal name="cpower_two&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Cpower_sum">
    <goal name="cpower_two&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.27" steps="134184"/></proof>
    </goal>
    <goal name="cpower_two&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="6"><result status="valid" time="0.14" steps="122539"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cpower_two&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="6"><result status="valid" time="0.13" steps="122526"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_two_rev&#39;vc" expl="VC for cpower_two_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_two_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.22" steps="133452"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_sum_rev&#39;vc" expl="VC for cpower_sum_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_sum_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.12" steps="3942"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_plus_one&#39;vc" expl="VC for cpower_plus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_plus_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.11" steps="122782"/></proof>
  </goal>
  <goal name="cpower_plus_one&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.20" steps="134582"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_zero&#39;vc" expl="VC for cpower_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_zero&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.22" steps="133819"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_eq&#39;vc" expl="VC for cpower_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_eq&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.14" steps="127508"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_inv&#39;vc" expl="VC for cpower_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_inv&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.37" steps="144641"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="compat_cpower_leq&#39;vc" expl="VC for compat_cpower_leq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="compat_cpower_leq&#39;vc.0" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.22" steps="134207"/></proof>
  </goal>
  <goal name="compat_cpower_leq&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="compat_cpower_leq&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.11" steps="123207"/></proof>
   </goal>
   <goal name="compat_cpower_leq&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.12" steps="123223"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="compat_cpower_leq&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="compat_cpower_leq&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.13" steps="123207"/></proof>
   </goal>
   <goal name="compat_cpower_leq&#39;vc.2.1" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.12" steps="123207"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="compat_cpower_leq&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="compat_cpower_leq&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.14" steps="123227"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="compat_cpower_leq&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="compat_cpower_leq&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.55" steps="252582"/></proof>
   </goal>
   <goal name="compat_cpower_leq&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.46" steps="252308"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_inv_rew&#39;vc" expl="VC for cpower_inv_rew" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_inv_rew&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.39" steps="145442"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inv_cpower&#39;vc" expl="VC for inv_cpower" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="inv_cpower&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="goal_comm">
   <goal name="inv_cpower&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="case" proved="true" arg1="(i = 0)">
    <goal name="inv_cpower&#39;vc.0.0.0" expl="true case (apply premises)" proved="true">
    <proof prover="6"><result status="valid" time="0.26" steps="144867"/></proof>
    </goal>
    <goal name="inv_cpower&#39;vc.0.0.1" expl="false case (apply premises)" proved="true">
    <transf name="case" proved="true" arg1="(e = c_zero)">
     <goal name="inv_cpower&#39;vc.0.0.1.0" expl="false case (true case. apply premises)" proved="true">
     <transf name="assert" proved="true" arg1="(cpower e i = c_zero)">
      <goal name="inv_cpower&#39;vc.0.0.1.0.0" expl="asserted formula" proved="true">
      <proof prover="6"><result status="valid" time="0.23" steps="134462"/></proof>
      </goal>
      <goal name="inv_cpower&#39;vc.0.0.1.0.1" expl="false case (true case. apply premises)" proved="true">
      <proof prover="6"><result status="valid" time="0.12" steps="123410"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="inv_cpower&#39;vc.0.0.1.1" expl="false case (apply premises)" proved="true">
     <transf name="rewrite" proved="true" arg1="cpower_inv_rew">
      <goal name="inv_cpower&#39;vc.0.0.1.1.0" expl="false case (apply premises)" proved="true">
      <proof prover="6"><result status="valid" time="0.12" steps="123424"/></proof>
      </goal>
      <goal name="inv_cpower&#39;vc.0.0.1.1.1" expl="rewrite premises" proved="true">
      <transf name="case" proved="true" arg1="(e = c_zero)">
       <goal name="inv_cpower&#39;vc.0.0.1.1.1.0" expl="true case (rewrite premises)" proved="true">
       <transf name="assert" proved="true" arg1="(cpower e i = c_zero)">
        <goal name="inv_cpower&#39;vc.0.0.1.1.1.0.0" expl="asserted formula" proved="true">
        <proof prover="6"><result status="valid" time="0.12" steps="123382"/></proof>
        </goal>
        <goal name="inv_cpower&#39;vc.0.0.1.1.1.0.1" expl="true case (rewrite premises)" proved="true">
        <proof prover="6"><result status="valid" time="0.12" steps="123388"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="inv_cpower&#39;vc.0.0.1.1.1.1" expl="false case (rewrite premises)" proved="true">
       <proof prover="6"><result status="valid" time="0.13" steps="123385"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_div&#39;vc" expl="VC for cpower_div" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_div&#39;vc.0" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.19" steps="134620"/></proof>
  </goal>
  <goal name="cpower_div&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_div&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.11" steps="123508"/></proof>
   </goal>
   <goal name="cpower_div&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.13" steps="123524"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_div&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.13" steps="123522"/></proof>
  </goal>
  <goal name="cpower_div&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.10" steps="123524"/></proof>
  </goal>
  <goal name="cpower_div&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.44" steps="251334"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_div_rev&#39;vc" expl="VC for cpower_div_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_div_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.27" steps="145008"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_pi_bound_square_inv&#39;vc" expl="VC for cpower_pi_bound_square_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_pi_bound_square_inv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(i_to_c 4 /. cpower pi 2)" arg2="(cpower (ttwo /.  pi ) 2)">
   <goal name="cpower_pi_bound_square_inv&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="4.78" steps="1198945"/></proof>
   </goal>
   <goal name="cpower_pi_bound_square_inv&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="6"><result status="valid" time="0.37" steps="145365"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_mult_split&#39;vc" expl="VC for cpower_mult_split" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_mult_split&#39;vc.0" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.20" steps="134925"/></proof>
  </goal>
  <goal name="cpower_mult_split&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_mult_split&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.12" steps="123752"/></proof>
   </goal>
   <goal name="cpower_mult_split&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.12" steps="123768"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_mult_split&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.12" steps="123766"/></proof>
  </goal>
  <goal name="cpower_mult_split&#39;vc.3" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="cpower_mult_split&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.19" steps="135862"/></proof>
   </goal>
   <goal name="cpower_mult_split&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="3.02" steps="1486727"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="not_cpower_zero&#39;vc" expl="VC for not_cpower_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="not_cpower_zero&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.34" steps="145779"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_inv_out&#39;vc" expl="VC for cpower_inv_out" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_inv_out&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="6.00" steps="1943626"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="squarert_inv&#39;vc" expl="VC for squarert_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="squarert_inv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(c_one /. square_rt x)" arg2="(square_rt c_one /. square_rt x)">
   <goal name="squarert_inv&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="9.61" steps="1992615"/></proof>
   </goal>
   <goal name="squarert_inv&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="6"><result status="valid" time="0.25" steps="166474"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="squarert_inv_rev&#39;vc" expl="VC for squarert_inv_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="squarert_inv_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.29" steps="166750"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="squarert_div&#39;vc" expl="VC for squarert_div" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="squarert_div&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="8.26" steps="2587993"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_squarert_two&#39;vc" expl="VC for cpower_squarert_two" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_squarert_two&#39;vc.0" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="153760"/></proof>
  </goal>
  <goal name="cpower_squarert_two&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_squarert_two&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.16" steps="153764"/></proof>
   </goal>
   <goal name="cpower_squarert_two&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.18" steps="153773"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_squarert_two&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.29" steps="166891"/></proof>
  </goal>
  <goal name="cpower_squarert_two&#39;vc.3" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(i=0)">
   <goal name="cpower_squarert_two&#39;vc.3.0" expl="true case (postcondition)" proved="true">
   <proof prover="6"><result status="valid" time="0.26" steps="168005"/></proof>
   </goal>
   <goal name="cpower_squarert_two&#39;vc.3.1" expl="false case (postcondition)" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="cpower_squarert_two&#39;vc.3.1.0" expl="false case (postcondition)" proved="true">
    <proof prover="6"><result status="valid" time="0.13" steps="153771"/></proof>
    </goal>
    <goal name="cpower_squarert_two&#39;vc.3.1.1" expl="false case (postcondition)" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="cpower_squarert_two&#39;vc.3.1.1.0" expl="false case (postcondition)" proved="true">
     <transf name="replace" proved="true" arg1="i" arg2="(i-1+1)">
      <goal name="cpower_squarert_two&#39;vc.3.1.1.0.0" expl="false case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="Cpower_sum">
       <goal name="cpower_squarert_two&#39;vc.3.1.1.0.0.0" expl="false case (postcondition)" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="cpower_squarert_two&#39;vc.3.1.1.0.0.0.0" expl="false case (postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="H">
         <goal name="cpower_squarert_two&#39;vc.3.1.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
         <transf name="rewrite" proved="true" arg1="power_sum">
          <goal name="cpower_squarert_two&#39;vc.3.1.1.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
          <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
           <goal name="cpower_squarert_two&#39;vc.3.1.1.0.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
           <proof prover="6"><result status="valid" time="0.46" steps="206256"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="cpower_squarert_two&#39;vc.3.1.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="6"><result status="valid" time="0.32" steps="187639"/></proof>
          </goal>
          <goal name="cpower_squarert_two&#39;vc.3.1.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="6"><result status="valid" time="0.21" steps="174026"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="cpower_squarert_two&#39;vc.3.1.1.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="6"><result status="valid" time="0.18" steps="153853"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cpower_squarert_two&#39;vc.3.1.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="6"><result status="valid" time="0.16" steps="153828"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_square_rt_raise&#39;vc" expl="VC for cpower_square_rt_raise" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_square_rt_raise&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.50" steps="185288"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_subst&#39;vc" expl="VC for cpower_subst" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_subst&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.51" steps="833866"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_c_one_pos&#39;vc" expl="VC for cpower_c_one_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_c_one_pos&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="154044"/></proof>
  </goal>
  <goal name="cpower_c_one_pos&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_c_one_pos&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.18" steps="154065"/></proof>
   </goal>
   <goal name="cpower_c_one_pos&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.17" steps="154074"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_c_one_pos&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.27" steps="167322"/></proof>
  </goal>
  <goal name="cpower_c_one_pos&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.30" steps="167580"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="mult_cpower&#39;vc" expl="VC for mult_cpower" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mult_cpower&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="154109"/></proof>
  </goal>
  <goal name="mult_cpower&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="154148"/></proof>
  </goal>
  <goal name="mult_cpower&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="154187"/></proof>
  </goal>
  <goal name="mult_cpower&#39;vc.3" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="mult_cpower&#39;vc.3.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.16" steps="154201"/></proof>
   </goal>
   <goal name="mult_cpower&#39;vc.3.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.16" steps="154210"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="mult_cpower&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.28" steps="167518"/></proof>
  </goal>
  <goal name="mult_cpower&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="mult_cpower&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.29" steps="167600"/></proof>
   </goal>
   <goal name="mult_cpower&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.38" steps="185858"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="mult_cpower_rev&#39;vc" expl="VC for mult_cpower_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mult_cpower_rev&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="154139"/></proof>
  </goal>
  <goal name="mult_cpower_rev&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="154192"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_iterate&#39;vc" expl="VC for cpower_iterate" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_iterate&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.22" steps="253835"/></proof>
  </goal>
  <goal name="cpower_iterate&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.27" steps="250532"/></proof>
  </goal>
  <goal name="cpower_iterate&#39;vc.2" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_iterate&#39;vc.2.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.28" steps="250553"/></proof>
   </goal>
   <goal name="cpower_iterate&#39;vc.2.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.28" steps="250562"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_iterate&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.46" steps="267237"/></proof>
  </goal>
  <goal name="cpower_iterate&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.62" steps="285253"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_modulus&#39;vc" expl="VC for cpower_modulus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_modulus&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.19" steps="154609"/></proof>
  </goal>
  <goal name="cpower_modulus&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_modulus&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.19" steps="154660"/></proof>
   </goal>
   <goal name="cpower_modulus&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.16" steps="154669"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_modulus&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.29" steps="167989"/></proof>
  </goal>
  <goal name="cpower_modulus&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.66" steps="297033"/></proof>
  </goal>
  <goal name="cpower_modulus&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.42" steps="187515"/></proof>
  </goal>
  <goal name="cpower_modulus&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.28" steps="168668"/></proof>
  </goal>
  <goal name="cpower_modulus&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.50" steps="187451"/></proof>
  </goal>
  <goal name="cpower_modulus&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.48" steps="186576"/></proof>
  </goal>
  <goal name="cpower_modulus&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.49" steps="186561"/></proof>
  </goal>
  <goal name="cpower_modulus&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.39" steps="186553"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_mult_pre&#39;vc" expl="VC for cpower_mult_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_mult_pre&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_mult_pre&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="6"><result status="valid" time="0.29" steps="168493"/></proof>
   </goal>
   <goal name="cpower_mult_pre&#39;vc.0.1" expl="assertion" proved="true">
   <proof prover="6"><result status="valid" time="0.46" steps="183290"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_mult_pre&#39;vc.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_mult_pre&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="6"><result status="valid" time="0.29" steps="168559"/></proof>
   </goal>
   <goal name="cpower_mult_pre&#39;vc.1.1" expl="assertion" proved="true">
   <proof prover="6"><result status="valid" time="0.30" steps="168546"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_mult_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07" steps="598"/></proof>
  </goal>
  <goal name="cpower_mult_pre&#39;vc.3" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_mult_pre&#39;vc.3.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.17" steps="155014"/></proof>
   </goal>
   <goal name="cpower_mult_pre&#39;vc.3.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.18" steps="155023"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_mult_pre&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.27" steps="168504"/></proof>
  </goal>
  <goal name="cpower_mult_pre&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_mult_pre&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.30" steps="168375"/></proof>
   </goal>
   <goal name="cpower_mult_pre&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.13"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_mult&#39;vc" expl="VC for cpower_mult" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_mult&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.15" steps="154976"/></proof>
  </goal>
  <goal name="cpower_mult&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.32" steps="168362"/></proof>
  </goal>
  <goal name="cpower_mult&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_mult&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.18" steps="155016"/></proof>
   </goal>
   <goal name="cpower_mult&#39;vc.2.1" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(x=c_zero)">
    <goal name="cpower_mult&#39;vc.2.1.0" expl="true case (postcondition)" proved="true">
    <proof prover="6"><result status="valid" time="4.79" steps="1090959"/></proof>
    </goal>
    <goal name="cpower_mult&#39;vc.2.1.1" expl="false case (postcondition)" proved="true">
    <transf name="instantiate" proved="true" arg1="cpower_inv_rew" arg2="x,n">
     <goal name="cpower_mult&#39;vc.2.1.1.0" expl="false case (postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="Hinst">
      <goal name="cpower_mult&#39;vc.2.1.1.0.0" expl="false case (postcondition)" proved="true">
      <transf name="instantiate" proved="true" arg1="cpower_inv_rew" arg2="(c_one /. cpower x (- n)),m">
       <goal name="cpower_mult&#39;vc.2.1.1.0.0.0" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="Hinst">
        <goal name="cpower_mult&#39;vc.2.1.1.0.0.0.0" expl="false case (postcondition)" proved="true">
        <proof prover="6"><result status="valid" time="3.16" steps="1222590"/></proof>
        </goal>
        <goal name="cpower_mult&#39;vc.2.1.1.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="6"><result status="valid" time="0.29" steps="168781"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="cpower_mult&#39;vc.2.1.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="6"><result status="valid" time="0.17" steps="155076"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_mult_rev&#39;vc" expl="VC for cpower_mult_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_mult_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.13" steps="4448"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="non_zero_cpower_pos&#39;vc" expl="VC for non_zero_cpower_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="non_zero_cpower_pos&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.15" steps="155157"/></proof>
  </goal>
  <goal name="non_zero_cpower_pos&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="non_zero_cpower_pos&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.15" steps="155186"/></proof>
   </goal>
   <goal name="non_zero_cpower_pos&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.17" steps="155195"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="non_zero_cpower_pos&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="155184"/></proof>
  </goal>
  <goal name="non_zero_cpower_pos&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.28" steps="168705"/></proof>
  </goal>
  <goal name="non_zero_cpower_pos&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.29" steps="168975"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inv_cpower_&#39;vc" expl="VC for inv_cpower_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="inv_cpower_&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.30" steps="168836"/></proof>
  </goal>
  <goal name="inv_cpower_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="155243"/></proof>
  </goal>
  <goal name="inv_cpower_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.29" steps="168739"/></proof>
  </goal>
  <goal name="inv_cpower_&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="155247"/></proof>
  </goal>
  <goal name="inv_cpower_&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.15" steps="155259"/></proof>
  </goal>
  <goal name="inv_cpower_&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="inv_cpower_&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.15" steps="155260"/></proof>
   </goal>
   <goal name="inv_cpower_&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.16" steps="155264"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="zero_cpower_pos&#39;vc" expl="VC for zero_cpower_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="zero_cpower_pos&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.27" steps="168825"/></proof>
  </goal>
  <goal name="zero_cpower_pos&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="zero_cpower_pos&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.27" steps="168895"/></proof>
   </goal>
   <goal name="zero_cpower_pos&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.16" steps="155375"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="zero_cpower_pos&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.29" steps="168946"/></proof>
  </goal>
  <goal name="zero_cpower_pos&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.32" steps="169193"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="zero_cpower&#39;vc" expl="VC for zero_cpower" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="zero_cpower&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.29" steps="168929"/></proof>
  </goal>
  <goal name="zero_cpower&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.39" steps="183371"/></proof>
  </goal>
  <goal name="zero_cpower&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="zero_cpower&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.16" steps="155372"/></proof>
   </goal>
   <goal name="zero_cpower&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.28" steps="169112"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="non_zero_cpower&#39;vc" expl="VC for non_zero_cpower" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="non_zero_cpower&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="155413"/></proof>
  </goal>
  <goal name="non_zero_cpower&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="155418"/></proof>
  </goal>
  <goal name="non_zero_cpower&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="155417"/></proof>
  </goal>
  <goal name="non_zero_cpower&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.38" steps="183457"/></proof>
  </goal>
  <goal name="non_zero_cpower&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="non_zero_cpower&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.15" steps="155435"/></proof>
   </goal>
   <goal name="non_zero_cpower&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.27" steps="169200"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="real_cpower_pos&#39;vc" expl="VC for real_cpower_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_cpower_pos&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="155528"/></proof>
  </goal>
  <goal name="real_cpower_pos&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="155544"/></proof>
  </goal>
  <goal name="real_cpower_pos&#39;vc.2" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="real_cpower_pos&#39;vc.2.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.17" steps="155573"/></proof>
   </goal>
   <goal name="real_cpower_pos&#39;vc.2.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.16" steps="155589"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="real_cpower_pos&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="155573"/></proof>
  </goal>
  <goal name="real_cpower_pos&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.28" steps="169260"/></proof>
  </goal>
  <goal name="real_cpower_pos&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="155595"/></proof>
  </goal>
  <goal name="real_cpower_pos&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="155598"/></proof>
  </goal>
  <goal name="real_cpower_pos&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="real_cpower_pos&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.31" steps="170588"/></proof>
   </goal>
   <goal name="real_cpower_pos&#39;vc.7.1" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.74" steps="333467"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="real_cpower&#39;vc" expl="VC for real_cpower" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_cpower&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="155584"/></proof>
  </goal>
  <goal name="real_cpower&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="155588"/></proof>
  </goal>
  <goal name="real_cpower&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.55" steps="184554"/></proof>
  </goal>
  <goal name="real_cpower&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="155607"/></proof>
  </goal>
  <goal name="real_cpower&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="155620"/></proof>
  </goal>
  <goal name="real_cpower&#39;vc.5" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="6.27" steps="1723963"/></proof>
  </goal>
  <goal name="real_cpower&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.63" steps="194313"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="real_cpower_is_pos&#39;vc" expl="VC for real_cpower_is_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_cpower_is_pos&#39;vc.0" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.29" steps="169308"/></proof>
  </goal>
  <goal name="real_cpower_is_pos&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="real_cpower_is_pos&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.18" steps="155675"/></proof>
   </goal>
   <goal name="real_cpower_is_pos&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.17" steps="155691"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="real_cpower_is_pos&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="155675"/></proof>
  </goal>
  <goal name="real_cpower_is_pos&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="155678"/></proof>
  </goal>
  <goal name="real_cpower_is_pos&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="155695"/></proof>
  </goal>
  <goal name="real_cpower_is_pos&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.71" steps="324682"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="real_cpower_is_strict_pos&#39;vc" expl="VC for real_cpower_is_strict_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_cpower_is_strict_pos&#39;vc.0" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.27" steps="169428"/></proof>
  </goal>
  <goal name="real_cpower_is_strict_pos&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="real_cpower_is_strict_pos&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.17" steps="155770"/></proof>
   </goal>
   <goal name="real_cpower_is_strict_pos&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.16" steps="155786"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="real_cpower_is_strict_pos&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.15" steps="155770"/></proof>
  </goal>
  <goal name="real_cpower_is_strict_pos&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="155773"/></proof>
  </goal>
  <goal name="real_cpower_is_strict_pos&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="155790"/></proof>
  </goal>
  <goal name="real_cpower_is_strict_pos&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.37" steps="186474"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="real_modulus_square&#39;vc" expl="VC for real_modulus_square" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_modulus_square&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.54" steps="187409"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="real_modulus_pos&#39;vc" expl="VC for real_modulus_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_modulus_pos&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.30" steps="169674"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inv_rewrite&#39;vc" expl="VC for inv_rewrite" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="inv_rewrite&#39;vc.0" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.51" steps="193474"/></proof>
  </goal>
  <goal name="inv_rewrite&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.96" steps="346845"/></proof>
  </goal>
  <goal name="inv_rewrite&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.31" steps="176712"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="inv_modulus&#39;vc" expl="VC for inv_modulus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="inv_modulus&#39;vc.0" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.51" steps="194409"/></proof>
  </goal>
  <goal name="inv_modulus&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="4.56" steps="1376166"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="div_modulus&#39;vc" expl="VC for div_modulus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="div_modulus&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="div_modulus&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="6"><result status="valid" time="0.43" steps="193879"/></proof>
   </goal>
   <goal name="div_modulus&#39;vc.0.1" expl="assertion" proved="true">
   <proof prover="6"><result status="valid" time="0.40" steps="194937"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="div_modulus&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="div_modulus&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.34" steps="176968"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="square_frac_modulus&#39;vc" expl="VC for square_frac_modulus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="square_frac_modulus&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.59" steps="194502"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="modulus_one_gen&#39;vc" expl="VC for modulus_one_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="modulus_one_gen&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="modulus_one_gen&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="modulus&#39;def">
    <goal name="modulus_one_gen&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(t_real_part (a +. (im *. b)) *. t_real_part (a +. (im *. b)))" arg2="(a*.a)">
     <goal name="modulus_one_gen&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(t_im_part (a +. (im *. b)) *. t_im_part (a +. (im *. b)))" arg2="(b*.b)">
      <goal name="modulus_one_gen&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="6"><result status="valid" time="0.33" steps="178829"/></proof>
      </goal>
      <goal name="modulus_one_gen&#39;vc.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="6"><result status="valid" time="0.41" steps="197238"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="modulus_one_gen&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="6"><result status="valid" time="0.41" steps="197395"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="modulus_one_decomp&#39;vc" expl="VC for modulus_one_decomp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="modulus_one_decomp&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.42" steps="193933"/></proof>
  </goal>
  <goal name="modulus_one_decomp&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.42" steps="197746"/></proof>
  </goal>
  <goal name="modulus_one_decomp&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.33" steps="180826"/></proof>
  </goal>
  <goal name="modulus_one_decomp&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.34" steps="176441"/></proof>
  </goal>
  <goal name="modulus_one_decomp&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.48" steps="203866"/></proof>
  </goal>
  <goal name="modulus_one_decomp&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.38" steps="184008"/></proof>
  </goal>
  <goal name="modulus_one_decomp&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.56" steps="208047"/></proof>
  </goal>
  <goal name="modulus_one_decomp&#39;vc.7" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.55" steps="208706"/></proof>
  </goal>
  <goal name="modulus_one_decomp&#39;vc.8" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="squarert_div">
   <goal name="modulus_one_decomp&#39;vc.8.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="squarert_div">
    <goal name="modulus_one_decomp&#39;vc.8.0.0" expl="precondition" proved="true">
    <transf name="assert" proved="true" arg1="(forall x. c_zero&lt;=.x -&gt; cpower (square_rt x) 2 = x)">
     <goal name="modulus_one_decomp&#39;vc.8.0.0.0" expl="asserted formula" proved="true">
     <proof prover="6"><result status="valid" time="0.47" steps="208096"/></proof>
     </goal>
     <goal name="modulus_one_decomp&#39;vc.8.0.0.1" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="h">
      <goal name="modulus_one_decomp&#39;vc.8.0.0.1.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="h">
       <goal name="modulus_one_decomp&#39;vc.8.0.0.1.0.0" expl="precondition" proved="true">
       <transf name="assert" proved="true" arg1="(forall a b c. c&lt;&gt; c_zero -&gt; a/.c+.b/.c = (a+.b)/.c)">
        <goal name="modulus_one_decomp&#39;vc.8.0.0.1.0.0.0" expl="asserted formula" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="modulus_one_decomp&#39;vc.8.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
         <proof prover="6"><result status="valid" time="0.32" steps="176749"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="modulus_one_decomp&#39;vc.8.0.0.1.0.0.1" expl="precondition" proved="true">
        <transf name="rewrite" proved="true" arg1="h">
         <goal name="modulus_one_decomp&#39;vc.8.0.0.1.0.0.1.0" expl="precondition" proved="true">
         <proof prover="6"><result status="valid" time="0.54" steps="208670"/></proof>
         </goal>
         <goal name="modulus_one_decomp&#39;vc.8.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="6"><result status="valid" time="0.31" steps="182712"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="modulus_one_decomp&#39;vc.8.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="6"><result status="valid" time="0.46" steps="208083"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="modulus_one_decomp&#39;vc.8.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="6"><result status="valid" time="0.47" steps="208115"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="modulus_one_decomp&#39;vc.8.0.1" expl="rewrite premises" proved="true">
    <proof prover="6"><result status="valid" time="0.31" steps="176624"/></proof>
    </goal>
    <goal name="modulus_one_decomp&#39;vc.8.0.2" expl="rewrite premises" proved="true">
    <proof prover="6"><result status="valid" time="0.33" steps="185905"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="modulus_one_decomp&#39;vc.8.1" expl="rewrite premises" proved="true">
   <proof prover="6"><result status="valid" time="0.29" steps="176624"/></proof>
   </goal>
   <goal name="modulus_one_decomp&#39;vc.8.2" expl="rewrite premises" proved="true">
   <proof prover="6"><result status="valid" time="0.34" steps="185905"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="modulus_one_decomp&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="161825"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="extract_2_sq_modulus&#39;vc" expl="VC for extract_2_sq_modulus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="extract_2_sq_modulus&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.53" steps="196324"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_2_modulus_simpl&#39;vc" expl="VC for cpower_2_modulus_simpl" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_2_modulus_simpl&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="1.15" steps="459272"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_div_leq_one&#39;vc" expl="VC for cpower_div_leq_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_div_leq_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="162110"/></proof>
  </goal>
  <goal name="cpower_div_leq_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.30" steps="176938"/></proof>
  </goal>
  <goal name="cpower_div_leq_one&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.29" steps="176846"/></proof>
  </goal>
  <goal name="cpower_div_leq_one&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.31" steps="177036"/></proof>
  </goal>
  <goal name="cpower_div_leq_one&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="162220"/></proof>
  </goal>
  <goal name="cpower_div_leq_one&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="162252"/></proof>
  </goal>
  <goal name="cpower_div_leq_one&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.42" steps="177162"/></proof>
  </goal>
  <goal name="cpower_div_leq_one&#39;vc.7" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="162299"/></proof>
  </goal>
  <goal name="cpower_div_leq_one&#39;vc.8" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_div_leq_one&#39;vc.8.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.16" steps="162306"/></proof>
   </goal>
   <goal name="cpower_div_leq_one&#39;vc.8.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.16" steps="162315"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_div_leq_one&#39;vc.9" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_div_leq_one&#39;vc.9.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.16" steps="162306"/></proof>
   </goal>
   <goal name="cpower_div_leq_one&#39;vc.9.1" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.16" steps="162306"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_div_leq_one&#39;vc.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_div_leq_one&#39;vc.10.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.16" steps="162312"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_div_leq_one&#39;vc.11" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_div_leq_one&#39;vc.11.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.29" steps="177066"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_div_leq_one&#39;vc.12" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_div_leq_one&#39;vc.12.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.42" steps="199979"/></proof>
   </goal>
   <goal name="cpower_div_leq_one&#39;vc.12.1" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="3.28" steps="1267018"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_cpower&#39;vc" expl="VC for cpower_cpower" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_cpower&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.15" steps="5024"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="pre_cond_int_&#39;vc" expl="VC for pre_cond_int_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pre_cond_int_&#39;vc.0" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.31" steps="177088"/></proof>
  </goal>
  <goal name="pre_cond_int_&#39;vc.1" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.32" steps="177097"/></proof>
  </goal>
  <goal name="pre_cond_int_&#39;vc.2" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.28" steps="177106"/></proof>
  </goal>
  <goal name="pre_cond_int_&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.15" steps="162277"/></proof>
  </goal>
  <goal name="pre_cond_int_&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="162280"/></proof>
  </goal>
  <goal name="pre_cond_int_&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.19" steps="162370"/></proof>
  </goal>
  <goal name="pre_cond_int_&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="162373"/></proof>
  </goal>
  <goal name="pre_cond_int_&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.30" steps="177384"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="growing_mult&#39;vc" expl="VC for growing_mult" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="growing_mult&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.63" steps="197009"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="strict_growing_mult_pos&#39;vc" expl="VC for strict_growing_mult_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="strict_growing_mult_pos&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.94" steps="369432"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="init_exp&#39;vc" expl="VC for init_exp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="init_exp&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.29" steps="177379"/></proof>
  </goal>
  <goal name="init_exp&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.30" steps="177401"/></proof>
  </goal>
  <goal name="init_exp&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.30" steps="177433"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_exp_pos&#39;vc" expl="VC for int_exp_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_exp_pos&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.42" steps="178697"/></proof>
  </goal>
  <goal name="int_exp_pos&#39;vc.1" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.41" steps="196266"/></proof>
  </goal>
  <goal name="int_exp_pos&#39;vc.2" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="int_exp_pos&#39;vc.2.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.18" steps="162675"/></proof>
   </goal>
   <goal name="int_exp_pos&#39;vc.2.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.18" steps="162684"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="int_exp_pos&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.19" steps="162675"/></proof>
  </goal>
  <goal name="int_exp_pos&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.32" steps="177565"/></proof>
  </goal>
  <goal name="int_exp_pos&#39;vc.5" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.41" steps="199245"/></proof>
  </goal>
  <goal name="int_exp_pos&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.30" steps="178925"/></proof>
  </goal>
  <goal name="int_exp_pos&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.38" steps="199168"/></proof>
  </goal>
  <goal name="int_exp_pos&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.40" steps="199752"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="strict_int_exp_pos&#39;vc" expl="VC for strict_int_exp_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="strict_int_exp_pos&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.29" steps="177754"/></proof>
  </goal>
  <goal name="strict_int_exp_pos&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="162762"/></proof>
  </goal>
  <goal name="strict_int_exp_pos&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.43" steps="197339"/></proof>
  </goal>
  <goal name="strict_int_exp_pos&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.58" steps="198065"/></proof>
  </goal>
  <goal name="strict_int_exp_pos&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.56" steps="198893"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="strict_int_exp_neg&#39;vc" expl="VC for strict_int_exp_neg" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="strict_int_exp_neg&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.40" steps="194416"/></proof>
  </goal>
  <goal name="strict_int_exp_neg&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.32" steps="179140"/></proof>
  </goal>
  <goal name="strict_int_exp_neg&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.42" steps="199364"/></proof>
  </goal>
  <goal name="strict_int_exp_neg&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.75" steps="201293"/></proof>
  </goal>
  <goal name="strict_int_exp_neg&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.60" steps="201065"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_exp_neg&#39;vc" expl="VC for int_exp_neg" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_exp_neg&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="163057"/></proof>
  </goal>
  <goal name="int_exp_neg&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.41" steps="195011"/></proof>
  </goal>
  <goal name="int_exp_neg&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.30" steps="178213"/></proof>
  </goal>
  <goal name="int_exp_neg&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.53" steps="197717"/></proof>
  </goal>
  <goal name="int_exp_neg&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.59" steps="199437"/></proof>
  </goal>
  <goal name="int_exp_neg&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.55" steps="198563"/></proof>
  </goal>
  <goal name="int_exp_neg&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.58" steps="200620"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="positive_exp&#39;vc" expl="VC for positive_exp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="positive_exp&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="163200"/></proof>
  </goal>
  <goal name="positive_exp&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="163203"/></proof>
  </goal>
  <goal name="positive_exp&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.44" steps="195367"/></proof>
  </goal>
  <goal name="positive_exp&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.19" steps="163224"/></proof>
  </goal>
  <goal name="positive_exp&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.45" steps="198528"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="growing_exp_pos&#39;vc" expl="VC for growing_exp_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="growing_exp_pos&#39;vc.0" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="163312"/></proof>
  </goal>
  <goal name="growing_exp_pos&#39;vc.1" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.43" steps="197554"/></proof>
  </goal>
  <goal name="growing_exp_pos&#39;vc.2" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.31" steps="178497"/></proof>
  </goal>
  <goal name="growing_exp_pos&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.41" steps="198821"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="growing_exp&#39;vc" expl="VC for growing_exp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="growing_exp&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="163420"/></proof>
  </goal>
  <goal name="growing_exp&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="growing_exp&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.19" steps="163423"/></proof>
   </goal>
   <goal name="growing_exp&#39;vc.1.1" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.18" steps="163423"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="growing_exp&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="163442"/></proof>
  </goal>
  <goal name="growing_exp&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="growing_exp&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.39" steps="195727"/></proof>
   </goal>
   <goal name="growing_exp&#39;vc.3.1" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.54" steps="195996"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="growing_exp&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.40" steps="196840"/></proof>
  </goal>
  <goal name="growing_exp&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.29" steps="178631"/></proof>
  </goal>
  <goal name="growing_exp&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="growing_exp&#39;vc.6.0" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.18" steps="163491"/></proof>
   </goal>
   <goal name="growing_exp&#39;vc.6.1" expl="precondition" proved="true">
   <proof prover="6"><result status="valid" time="0.42" steps="198966"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="growing_exp&#39;vc.7" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.19" steps="163446"/></proof>
  </goal>
  <goal name="growing_exp&#39;vc.8" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="163458"/></proof>
  </goal>
  <goal name="growing_exp&#39;vc.9" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="163514"/></proof>
  </goal>
  <goal name="growing_exp&#39;vc.10" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.29" steps="178539"/></proof>
  </goal>
  <goal name="growing_exp&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.47" steps="204401"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="growing_exp_arg&#39;vc" expl="VC for growing_exp_arg" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="growing_exp_arg&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.40" steps="196722"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="strict_growing_exp&#39;vc" expl="VC for strict_growing_exp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="strict_growing_exp&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="163606"/></proof>
  </goal>
  <goal name="strict_growing_exp&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="163642"/></proof>
  </goal>
  <goal name="strict_growing_exp&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.33" steps="180964"/></proof>
  </goal>
  <goal name="strict_growing_exp&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="1.25" steps="452811"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_comm_pos&#39;vc" expl="VC for cpower_comm_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_comm_pos&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="163780"/></proof>
  </goal>
  <goal name="cpower_comm_pos&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="163826"/></proof>
  </goal>
  <goal name="cpower_comm_pos&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="163858"/></proof>
  </goal>
  <goal name="cpower_comm_pos&#39;vc.3" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_comm_pos&#39;vc.3.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.17" steps="163872"/></proof>
   </goal>
   <goal name="cpower_comm_pos&#39;vc.3.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.17" steps="163881"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_comm_pos&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="163872"/></proof>
  </goal>
  <goal name="cpower_comm_pos&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="163875"/></proof>
  </goal>
  <goal name="cpower_comm_pos&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.29" steps="179042"/></proof>
  </goal>
  <goal name="cpower_comm_pos&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.43" steps="202508"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_comm&#39;vc" expl="VC for cpower_comm" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_comm&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="163846"/></proof>
  </goal>
  <goal name="cpower_comm&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="163849"/></proof>
  </goal>
  <goal name="cpower_comm&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="163852"/></proof>
  </goal>
  <goal name="cpower_comm&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.33" steps="180168"/></proof>
  </goal>
  <goal name="cpower_comm&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.40" steps="180206"/></proof>
  </goal>
  <goal name="cpower_comm&#39;vc.5" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="163914"/></proof>
  </goal>
  <goal name="cpower_comm&#39;vc.6" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="163917"/></proof>
  </goal>
  <goal name="cpower_comm&#39;vc.7" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.41" steps="199834"/></proof>
  </goal>
  <goal name="cpower_comm&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_comm&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.16" steps="163895"/></proof>
   </goal>
   <goal name="cpower_comm&#39;vc.8.1" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.42" steps="202454"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unicity_exp&#39;vc" expl="VC for unicity_exp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unicity_exp&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="163943"/></proof>
  </goal>
  <goal name="unicity_exp&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="163961"/></proof>
  </goal>
  <goal name="unicity_exp&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="163980"/></proof>
  </goal>
  <goal name="unicity_exp&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="163985"/></proof>
  </goal>
  <goal name="unicity_exp&#39;vc.4" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.30" steps="179099"/></proof>
  </goal>
  <goal name="unicity_exp&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="unicity_exp&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="unicity_exp&#39;vc.5.0.0" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.30" steps="179274"/></proof>
    </goal>
    <goal name="unicity_exp&#39;vc.5.0.1" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.30" steps="179301"/></proof>
    </goal>
    <goal name="unicity_exp&#39;vc.5.0.2" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.18" steps="164020"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="unicity_exp&#39;vc.5.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="unicity_exp&#39;vc.5.1.0" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.20" steps="170198"/></proof>
    </goal>
    <goal name="unicity_exp&#39;vc.5.1.1" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.20" steps="170223"/></proof>
    </goal>
    <goal name="unicity_exp&#39;vc.5.1.2" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.20" steps="170230"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_i_to_c&#39;vc" expl="VC for cpower_i_to_c" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_i_to_c&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="164085"/></proof>
  </goal>
  <goal name="cpower_i_to_c&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.30" steps="179282"/></proof>
  </goal>
  <goal name="cpower_i_to_c&#39;vc.2" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_i_to_c&#39;vc.2.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.18" steps="164138"/></proof>
   </goal>
   <goal name="cpower_i_to_c&#39;vc.2.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.18" steps="164147"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_i_to_c&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.29" steps="179335"/></proof>
  </goal>
  <goal name="cpower_i_to_c&#39;vc.4" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="cpower_i_to_c&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.35" steps="180337"/></proof>
   </goal>
   <goal name="cpower_i_to_c&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.20" steps="12031"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_i_to_c_rev&#39;vc" expl="VC for cpower_i_to_c_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_i_to_c_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.42" steps="198293"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="geometric_series&#39;vc" expl="VC for geometric_series" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="geometric_series&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="geometric_series&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.31" steps="179342"/></proof>
   </goal>
   <goal name="geometric_series&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.19" steps="164234"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="geometric_series&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.33" steps="179397"/></proof>
  </goal>
  <goal name="geometric_series&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="164234"/></proof>
  </goal>
  <goal name="geometric_series&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.61" steps="276554"/></proof>
  </goal>
  <goal name="geometric_series&#39;vc.4" expl="assertion" proved="true">
  <transf name="replace" proved="true" arg1="(add (n - 1) (to_fset 0 (n - 1)))" arg2="(to_fset 0 n)" arg3="in" arg4="Ensures">
   <goal name="geometric_series&#39;vc.4.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="geometric_series&#39;vc.4.0.0" expl="assertion" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="geometric_series&#39;vc.4.0.0.0" expl="assertion" proved="true">
     <proof prover="6"><result status="valid" time="0.72" steps="279229"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="geometric_series&#39;vc.4.1" expl="equality hypothesis" proved="true">
   <transf name="apply" proved="true" arg1="set_equal">
    <goal name="geometric_series&#39;vc.4.1.0" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="4.23" steps="1528373"/></proof>
    </goal>
    <goal name="geometric_series&#39;vc.4.1.1" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="4.25" steps="1523938"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="geometric_series&#39;vc.5" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.79" steps="283987"/></proof>
  </goal>
  <goal name="geometric_series&#39;vc.6" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="1.22" steps="472695"/></proof>
  </goal>
  <goal name="geometric_series&#39;vc.7" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="geometric_series&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="1.65" steps="580461"/></proof>
   </goal>
   <goal name="geometric_series&#39;vc.7.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="geometric_series&#39;vc.7.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="geometric_series&#39;vc.7.1.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(add (n - 1) (to_fset 0 (n - 1)))" arg2="(to_fset 0 n)" arg3="in" arg4="H3">
      <goal name="geometric_series&#39;vc.7.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H3">
       <goal name="geometric_series&#39;vc.7.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="geometric_series&#39;vc.7.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="H1">
         <goal name="geometric_series&#39;vc.7.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="H">
          <goal name="geometric_series&#39;vc.7.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="H7">
           <goal name="geometric_series&#39;vc.7.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="assert" proved="true" arg1="(forall a b c. c&lt;&gt; c_zero -&gt; a/. c +. b/.c = (a+.b)/.c)">
            <goal name="geometric_series&#39;vc.7.1.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
            <proof prover="6"><result status="valid" time="0.66" steps="292154"/></proof>
            </goal>
            <goal name="geometric_series&#39;vc.7.1.0.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="h">
             <goal name="geometric_series&#39;vc.7.1.0.0.0.0.0.0.0.0.1.0" expl="postcondition" proved="true">
             <transf name="apply" proved="true" arg1="div_eq">
              <goal name="geometric_series&#39;vc.7.1.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="6"><result status="valid" time="1.36" steps="488180"/></proof>
              </goal>
              <goal name="geometric_series&#39;vc.7.1.0.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
              <proof prover="6"><result status="valid" time="0.33" steps="273491"/></proof>
              </goal>
              <goal name="geometric_series&#39;vc.7.1.0.0.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
              <proof prover="6"><result status="valid" time="0.73" steps="292394"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="geometric_series&#39;vc.7.1.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="6"><result status="valid" time="0.64" steps="292394"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="geometric_series&#39;vc.7.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="set_equal">
       <goal name="geometric_series&#39;vc.7.1.0.0.1.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="geometric_series&#39;vc.7.1.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="case" proved="true" arg1="(e = n-1)">
         <goal name="geometric_series&#39;vc.7.1.0.0.1.0.0.0" expl="true case (apply premises)" proved="true">
         <proof prover="6"><result status="valid" time="0.77" steps="321539"/></proof>
         </goal>
         <goal name="geometric_series&#39;vc.7.1.0.0.1.0.0.1" expl="false case (apply premises)" proved="true">
         <transf name="assert" proved="true" arg1="(mem e (to_fset 0 (n - 1)))">
          <goal name="geometric_series&#39;vc.7.1.0.0.1.0.0.1.0" expl="asserted formula" proved="true">
          <proof prover="6"><result status="valid" time="0.85" steps="320020"/></proof>
          </goal>
          <goal name="geometric_series&#39;vc.7.1.0.0.1.0.0.1.1" expl="false case (apply premises)" proved="true">
          <proof prover="6"><result status="valid" time="0.87" steps="320314"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="geometric_series&#39;vc.7.1.0.0.1.1" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="geometric_series&#39;vc.7.1.0.0.1.1.0" expl="apply premises" proved="true">
        <transf name="case" proved="true" arg1="(mem e (to_fset 0 (n - 1)))">
         <goal name="geometric_series&#39;vc.7.1.0.0.1.1.0.0" expl="true case (apply premises)" proved="true">
         <proof prover="6"><result status="valid" time="0.69" steps="292604"/></proof>
         </goal>
         <goal name="geometric_series&#39;vc.7.1.0.0.1.1.0.1" expl="false case (apply premises)" proved="true">
         <proof prover="5"><result status="valid" time="0.56" steps="2844892"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_geometric_series_r&#39;vc" expl="VC for ind_geometric_series_r" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_geometric_series_r&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ind_sum_to_sum">
   <goal name="ind_geometric_series_r&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="geometric_series">
    <goal name="ind_geometric_series_r&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="0.17" steps="164400"/></proof>
    </goal>
    <goal name="ind_geometric_series_r&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="6"><result status="valid" time="0.17" steps="164398"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_geometric_series&#39;vc" expl="VC for ind_geometric_series" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_geometric_series&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="164604"/></proof>
  </goal>
  <goal name="ind_geometric_series&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="164605"/></proof>
  </goal>
  <goal name="ind_geometric_series&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.67" steps="251781"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="geometric_series_init_one&#39;vc" expl="VC for geometric_series_init_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="geometric_series_init_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="164813"/></proof>
  </goal>
  <goal name="geometric_series_init_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="164814"/></proof>
  </goal>
  <goal name="geometric_series_init_one&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.68" steps="255266"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="geometric_series_c_one&#39;vc" expl="VC for geometric_series_c_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="geometric_series_c_one&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="geometric_series_c_one&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.29" steps="180311"/></proof>
   </goal>
   <goal name="geometric_series_c_one&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.18" steps="165005"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="geometric_series_c_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.31" steps="180366"/></proof>
  </goal>
  <goal name="geometric_series_c_one&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="165007"/></proof>
  </goal>
  <goal name="geometric_series_c_one&#39;vc.3" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="geometric_series_c_one&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="geometric_series_c_one&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(to_fset 0 n)" arg2="(add (n-1) (to_fset 0 (n-1)) )">
     <goal name="geometric_series_c_one&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="sum_add">
      <goal name="geometric_series_c_one&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H">
       <goal name="geometric_series_c_one&#39;vc.3.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="geometric_series_c_one&#39;vc.3.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="assert" proved="true" arg1="(forall a b c.  a*. b+.a*.c = a*. (b+.c))">
         <goal name="geometric_series_c_one&#39;vc.3.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
         <proof prover="6"><result status="valid" time="0.41" steps="180351"/></proof>
         </goal>
         <goal name="geometric_series_c_one&#39;vc.3.0.0.0.0.0.0.1" expl="postcondition" proved="true">
         <proof prover="6"><result status="valid" time="0.62" steps="235753"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="geometric_series_c_one&#39;vc.3.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="6"><result status="valid" time="0.64" steps="242486"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="geometric_series_c_one&#39;vc.3.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="set_equal">
      <goal name="geometric_series_c_one&#39;vc.3.0.0.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="geometric_series_c_one&#39;vc.3.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="6"><result status="valid" time="0.59" steps="243875"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="geometric_series_c_one&#39;vc.3.0.0.1.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="geometric_series_c_one&#39;vc.3.0.0.1.1.0" expl="apply premises" proved="true">
       <proof prover="6"><result status="valid" time="1.37" steps="395440"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="geometric_series_c_one&#39;vc.3.1" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="sum_constant" arg2="(to_fset 0 n),(fun (i:int) -&gt; a *. cpower q i),a">
    <goal name="geometric_series_c_one&#39;vc.3.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="geometric_series_c_one&#39;vc.3.1.0.0" expl="postcondition" proved="true">
     <proof prover="6"><result status="valid" time="0.72" steps="248569"/></proof>
     </goal>
     <goal name="geometric_series_c_one&#39;vc.3.1.0.1" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="geometric_series_c_one&#39;vc.3.1.0.1.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="geometric_series_c_one&#39;vc.3.1.0.1.0.0" expl="rewrite premises" proved="true">
       <proof prover="6"><result status="valid" time="0.81" steps="276853"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="geometric_series_c_one_init_one&#39;vc" expl="VC for geometric_series_c_one_init_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="geometric_series_c_one_init_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="165189"/></proof>
  </goal>
  <goal name="geometric_series_c_one_init_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="165192"/></proof>
  </goal>
  <goal name="geometric_series_c_one_init_one&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.71" steps="256587"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="positive_cpower_2&#39;vc" expl="VC for positive_cpower_2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="positive_cpower_2&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.53" steps="199440"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="positive_cpower_2_mod&#39;vc" expl="VC for positive_cpower_2_mod" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="positive_cpower_2_mod&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.58" steps="199193"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_2_mod_non_null&#39;vc" expl="VC for cpower_2_mod_non_null" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_2_mod_non_null&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.57" steps="199280"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_2_mod_mult_non_null&#39;vc" expl="VC for cpower_2_mod_mult_non_null" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_2_mod_mult_non_null&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.34" steps="181167"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="growing_cpower_2&#39;vc" expl="VC for growing_cpower_2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="growing_cpower_2&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.41" steps="200570"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_incr_power_2&#39;vc" expl="VC for cpower_incr_power_2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_incr_power_2&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.48" steps="1355224"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_modulus_incr_power_2&#39;vc" expl="VC for cpower_modulus_incr_power_2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_modulus_incr_power_2&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.61" steps="204056"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_modulus_supeq&#39;vc" expl="VC for cpower_modulus_supeq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_modulus_supeq&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.52" steps="200999"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_modulus_div_simpl&#39;vc" expl="VC for cpower_modulus_div_simpl" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_modulus_div_simpl&#39;vc.0" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.56" steps="201782"/></proof>
  </goal>
  <goal name="cpower_modulus_div_simpl&#39;vc.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_modulus_div_simpl&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="6"><result status="valid" time="0.58" steps="205631"/></proof>
   </goal>
   <goal name="cpower_modulus_div_simpl&#39;vc.1.1" expl="assertion" proved="true">
   <proof prover="6"><result status="valid" time="0.42" steps="183305"/></proof>
   </goal>
   <goal name="cpower_modulus_div_simpl&#39;vc.1.2" expl="assertion" proved="true">
   <proof prover="6"><result status="valid" time="0.56" steps="204865"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_modulus_div_simpl&#39;vc.2" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_modulus_div_simpl&#39;vc.2.0" expl="assertion" proved="true">
   <proof prover="6"><result status="valid" time="0.28" steps="183478"/></proof>
   </goal>
   <goal name="cpower_modulus_div_simpl&#39;vc.2.1" expl="assertion" proved="true">
   <proof prover="6"><result status="valid" time="0.31" steps="183486"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_modulus_div_simpl&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_modulus_div_simpl&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.59" steps="208226"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_two_modulus_div_simpl&#39;vc" expl="VC for cpower_two_modulus_div_simpl" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_two_modulus_div_simpl&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.58" steps="206047"/></proof>
  </goal>
  <goal name="cpower_two_modulus_div_simpl&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.55" steps="204173"/></proof>
  </goal>
  <goal name="cpower_two_modulus_div_simpl&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.31" steps="182022"/></proof>
  </goal>
  <goal name="cpower_two_modulus_div_simpl&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_two_modulus_div_simpl&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.65" steps="205950"/></proof>
   </goal>
   <goal name="cpower_two_modulus_div_simpl&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.65" steps="209115"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_two_modulus_div_simpl&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_two_modulus_div_simpl&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.58" steps="206334"/></proof>
   </goal>
   <goal name="cpower_two_modulus_div_simpl&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.60" steps="208950"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_two_modulus_div_simpl&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_two_modulus_div_simpl&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.30" steps="182061"/></proof>
   </goal>
   <goal name="cpower_two_modulus_div_simpl&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.44" steps="182152"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_two_modulus_div_simpl&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_two_modulus_div_simpl&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cpower_two_modulus_div_simpl&#39;vc.6.0.0" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.68" steps="205979"/></proof>
    </goal>
    <goal name="cpower_two_modulus_div_simpl&#39;vc.6.0.1" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.62" steps="209094"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cpower_two_modulus_div_simpl&#39;vc.6.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cpower_two_modulus_div_simpl&#39;vc.6.1.0" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.72" steps="209060"/></proof>
    </goal>
    <goal name="cpower_two_modulus_div_simpl&#39;vc.6.1.1" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.65" steps="212441"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_two_modulus_div_simpl&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_two_modulus_div_simpl&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cpower_two_modulus_div_simpl&#39;vc.7.0.0" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.30" steps="182074"/></proof>
    </goal>
    <goal name="cpower_two_modulus_div_simpl&#39;vc.7.0.1" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.44" steps="182165"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cpower_two_modulus_div_simpl&#39;vc.7.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cpower_two_modulus_div_simpl&#39;vc.7.1.0" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.32" steps="182165"/></proof>
    </goal>
    <goal name="cpower_two_modulus_div_simpl&#39;vc.7.1.1" expl="postcondition" proved="true">
    <proof prover="6"><result status="valid" time="0.30" steps="182256"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_two_modulus_div_simpl&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_two_modulus_div_simpl&#39;vc.8.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cpower_two_modulus_div_simpl&#39;vc.8.0.0" expl="precondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.8.0.0.0" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.17" steps="166277"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.8.0.0.1" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.17" steps="166340"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cpower_two_modulus_div_simpl&#39;vc.8.0.1" expl="precondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.8.0.1.0" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.18" steps="166340"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.8.0.1.1" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.18" steps="166403"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="cpower_two_modulus_div_simpl&#39;vc.8.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cpower_two_modulus_div_simpl&#39;vc.8.1.0" expl="precondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.8.1.0.0" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.16" steps="166315"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.8.1.0.1" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.18" steps="166378"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cpower_two_modulus_div_simpl&#39;vc.8.1.1" expl="precondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.8.1.1.0" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.18" steps="166378"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.8.1.1.1" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.17" steps="166441"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_two_modulus_div_simpl&#39;vc.9" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_two_modulus_div_simpl&#39;vc.9.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cpower_two_modulus_div_simpl&#39;vc.9.0.0" expl="precondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.9.0.0.0" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.30" steps="181904"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.9.0.0.1" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.18" steps="166344"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cpower_two_modulus_div_simpl&#39;vc.9.0.1" expl="precondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.9.0.1.0" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.29" steps="181995"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.9.0.1.1" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.16" steps="166407"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="cpower_two_modulus_div_simpl&#39;vc.9.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cpower_two_modulus_div_simpl&#39;vc.9.1.0" expl="precondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.9.1.0.0" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.41" steps="181955"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.9.1.0.1" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.17" steps="166382"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cpower_two_modulus_div_simpl&#39;vc.9.1.1" expl="precondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.9.1.1.0" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.31" steps="182046"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.9.1.1.1" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.18" steps="166445"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_two_modulus_div_simpl&#39;vc.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_two_modulus_div_simpl&#39;vc.10.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cpower_two_modulus_div_simpl&#39;vc.10.0.0" expl="precondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.10.0.0.0" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.33" steps="181916"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.10.0.0.1" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.50" steps="181999"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cpower_two_modulus_div_simpl&#39;vc.10.0.1" expl="precondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.10.0.1.0" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.19" steps="166355"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.10.0.1.1" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.18" steps="166410"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="cpower_two_modulus_div_simpl&#39;vc.10.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cpower_two_modulus_div_simpl&#39;vc.10.1.0" expl="precondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.10.1.0.0" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.44" steps="181967"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.10.1.0.1" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.43" steps="182050"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cpower_two_modulus_div_simpl&#39;vc.10.1.1" expl="precondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.10.1.1.0" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.18" steps="166393"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.10.1.1.1" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.29" steps="166448"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_two_modulus_div_simpl&#39;vc.11" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_two_modulus_div_simpl&#39;vc.11.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cpower_two_modulus_div_simpl&#39;vc.11.0.0" expl="precondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.11.0.0.0" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.44" steps="181928"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.11.0.0.1" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.47" steps="182011"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cpower_two_modulus_div_simpl&#39;vc.11.0.1" expl="precondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.11.0.1.0" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.34" steps="182011"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.11.0.1.1" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.31" steps="182094"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="cpower_two_modulus_div_simpl&#39;vc.11.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cpower_two_modulus_div_simpl&#39;vc.11.1.0" expl="precondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.11.1.0.0" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.18" steps="166341"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.11.1.0.1" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.18" steps="166396"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cpower_two_modulus_div_simpl&#39;vc.11.1.1" expl="precondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.11.1.1.0" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.18" steps="166396"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.11.1.1.1" expl="precondition" proved="true">
     <proof prover="6"><result status="valid" time="0.19" steps="166451"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cpower_two_modulus_div_simpl&#39;vc.12" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cpower_two_modulus_div_simpl&#39;vc.12.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cpower_two_modulus_div_simpl&#39;vc.12.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.12.0.0.0" expl="postcondition" proved="true">
     <proof prover="6"><result status="valid" time="0.36" steps="182033"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.12.0.0.1" expl="postcondition" proved="true">
     <proof prover="6"><result status="valid" time="0.59" steps="212108"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cpower_two_modulus_div_simpl&#39;vc.12.0.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.12.0.1.0" expl="postcondition" proved="true">
     <proof prover="6"><result status="valid" time="0.56" steps="212207"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.12.0.1.1" expl="postcondition" proved="true">
     <proof prover="6"><result status="valid" time="0.52" steps="215830"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="cpower_two_modulus_div_simpl&#39;vc.12.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="cpower_two_modulus_div_simpl&#39;vc.12.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.12.1.0.0" expl="postcondition" proved="true">
     <proof prover="6"><result status="valid" time="0.45" steps="213271"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.12.1.0.1" expl="postcondition" proved="true">
     <proof prover="6"><result status="valid" time="0.55" steps="213834"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cpower_two_modulus_div_simpl&#39;vc.12.1.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="cpower_two_modulus_div_simpl&#39;vc.12.1.1.0" expl="postcondition" proved="true">
     <proof prover="6"><result status="valid" time="0.58" steps="213816"/></proof>
     </goal>
     <goal name="cpower_two_modulus_div_simpl&#39;vc.12.1.1.1" expl="postcondition" proved="true">
     <proof prover="6"><result status="valid" time="0.36" steps="185442"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Complex_exp" proved="true">
 <goal name="e_diff_c_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="e_diff_c_zero.0" proved="true">
  <proof prover="6"><result status="valid" time="0.46" steps="199262"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="exp_one" proved="true">
 <proof prover="6"><result status="valid" time="0.19" steps="166467"/></proof>
 </goal>
 <goal name="exp_sum&#39;vc" expl="VC for exp_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_sum&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.33" steps="182372"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="exp_eq&#39;vc" expl="VC for exp_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_eq&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.20" steps="173158"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="exp_sum_rev&#39;vc" expl="VC for exp_sum_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_sum_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.30" steps="182511"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="exp_inv&#39;vc" expl="VC for exp_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_inv&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.32" steps="184152"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="exp_inv_rev&#39;vc" expl="VC for exp_inv_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_inv_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.32" steps="182732"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="exp_mult_pre&#39;vc" expl="VC for exp_mult_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_mult_pre&#39;vc.0" expl="assertion" proved="true">
  <transf name="replace" proved="true" arg1="(i_to_c y)" arg2="(i_to_c (y-1+1))
">
   <goal name="exp_mult_pre&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
    <goal name="exp_mult_pre&#39;vc.0.0.0" expl="assertion" proved="true">
    <transf name="assert" proved="true" arg1="(forall a b c. a*. (b+.c) = a*.b +. a*.c)">
     <goal name="exp_mult_pre&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="6"><result status="valid" time="0.34" steps="182705"/></proof>
     </goal>
     <goal name="exp_mult_pre&#39;vc.0.0.0.1" expl="assertion" proved="true">
     <transf name="rewrite" proved="true" arg1="h">
      <goal name="exp_mult_pre&#39;vc.0.0.0.1.0" expl="assertion" proved="true">
      <proof prover="6"><result status="valid" time="0.35" steps="184426"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="exp_mult_pre&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="6"><result status="valid" time="0.18" steps="166911"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="exp_mult_pre&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="exp_mult_pre&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.17" steps="166967"/></proof>
   </goal>
   <goal name="exp_mult_pre&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="6"><result status="valid" time="0.18" steps="166976"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="exp_mult_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.31" steps="182841"/></proof>
  </goal>
  <goal name="exp_mult_pre&#39;vc.3" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.19" steps="167003"/></proof>
  </goal>
  <goal name="exp_mult_pre&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.37" steps="184600"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="exp_mult&#39;vc" expl="VC for exp_mult" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_mult&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.18" steps="167088"/></proof>
  </goal>
  <goal name="exp_mult&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.28" steps="182963"/></proof>
  </goal>
  <goal name="exp_mult&#39;vc.2" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="exp_mult&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.37" steps="205430"/></proof>
   </goal>
   <goal name="exp_mult&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.15"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cpower_to_exp&#39;vc" expl="VC for cpower_to_exp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_to_exp&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.31" steps="182925"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="exp_h_pi&#39;vc" expl="VC for exp_h_pi" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_h_pi&#39;vc.0" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.53" steps="204771"/></proof>
  </goal>
  <goal name="exp_h_pi&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.31" steps="183033"/></proof>
  </goal>
  <goal name="exp_h_pi&#39;vc.2" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="((im *. pi) /. ttwo)" arg2="(((im *. pi) /. i_to_c 4) *. i_to_c 2)">
   <goal name="exp_h_pi&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="exp_mult">
    <goal name="exp_h_pi&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Exp_quarter_pi">
     <goal name="exp_h_pi&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b. cpower (a+.b) 2 = cpower a 2 +. (ttwo*. a*.b) +. cpower b 2)">
      <goal name="exp_h_pi&#39;vc.2.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="exp_h_pi&#39;vc.2.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="6"><result status="valid" time="0.54" steps="211414"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="exp_h_pi&#39;vc.2.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="6"><result status="valid" time="6.32" steps="1806703"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="exp_h_pi&#39;vc.2.1" expl="equality hypothesis" proved="true">
   <proof prover="6"><result status="valid" time="0.43" steps="183084"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="exp_pi&#39;vc" expl="VC for exp_pi" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_pi&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.46" steps="205926"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="exp_two_pi&#39;vc" expl="VC for exp_two_pi" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_two_pi&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.42" steps="205846"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="exp_two_pi_mul&#39;vc" expl="VC for exp_two_pi_mul" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_two_pi_mul&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.59" steps="207315"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="exp_two_pi_mul_den&#39;vc" expl="VC for exp_two_pi_mul_den" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_two_pi_mul_den&#39;vc.0" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.17" steps="167125"/></proof>
  </goal>
  <goal name="exp_two_pi_mul_den&#39;vc.1" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="((i_to_c (k * l) *. two_pi_i) /. i_to_c k)" arg2="((i_to_c ( l) *. two_pi_i)  )">
   <goal name="exp_two_pi_mul_den&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="6"><result status="valid" time="0.30" steps="183332"/></proof>
   </goal>
   <goal name="exp_two_pi_mul_den&#39;vc.1.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
    <goal name="exp_two_pi_mul_den&#39;vc.1.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="mult_assoc">
     <goal name="exp_two_pi_mul_den&#39;vc.1.1.0.0" expl="equality hypothesis" proved="true">
     <proof prover="6"><result status="valid" time="0.41" steps="209132"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="exp_two_pi_mul_den_add&#39;vc" expl="VC for exp_two_pi_mul_den_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_two_pi_mul_den_add&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.34" steps="186146"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
