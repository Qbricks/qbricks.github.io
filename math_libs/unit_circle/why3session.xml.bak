<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.8.6" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="9" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="11" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="12" name="Z3" version="4.8.6" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="unit_circle.mlw"/>
<theory name="Angle" proved="true">
 <goal name="real_ang_meas&#39;vc" expl="VC for real_ang_meas" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_ang_meas&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.57" steps="205454"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="set_equal_angle_meas&#39;vc" expl="VC for set_equal_angle_meas" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_equal_angle_meas&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.18" steps="174615"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="get_equal_angle_meas&#39;vc" expl="VC for get_equal_angle_meas" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_equal_angle_meas&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.42" steps="205794"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="meas_real_to_ang&#39;vc" expl="VC for meas_real_to_ang" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="meas_real_to_ang&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.82" steps="209677"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="meas_real_to_ang_rev&#39;vc" expl="VC for meas_real_to_ang_rev" proved="true">
 <proof prover="11"><result status="valid" time="0.30" steps="184031"/></proof>
 </goal>
 <goal name="ang_add_rev&#39;vc" expl="VC for ang_add_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_add_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.28" steps="184234"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_zero&#39;vc" expl="VC for real_to_ang_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_zero&#39;vc.0" expl="assertion" proved="true">
  <transf name="replace" proved="true" arg1="o" arg2="(real_to_ang (ang_meas o))">
   <goal name="real_to_ang_zero&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="Real_To_Ang_add">
    <goal name="real_to_ang_zero&#39;vc.0.0.0" expl="assertion" proved="true">
    <proof prover="11"><result status="valid" time="0.30" steps="185810"/></proof>
    </goal>
    <goal name="real_to_ang_zero&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.27" steps="184265"/></proof>
    </goal>
    <goal name="real_to_ang_zero&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.30" steps="184266"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="real_to_ang_zero&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="apply" proved="true" arg1="get_equal_angle_meas">
    <goal name="real_to_ang_zero&#39;vc.0.1.0" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="0.34" steps="185769"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="real_to_ang_zero&#39;vc.1" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.35" steps="184328"/></proof>
  </goal>
  <goal name="real_to_ang_zero&#39;vc.2" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="real_to_ang_zero&#39;vc.2.0" expl="assertion" proved="true">
   <proof prover="11"><result status="valid" time="0.34" steps="184374"/></proof>
   </goal>
   <goal name="real_to_ang_zero&#39;vc.2.1" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="ang_zero" arg2="(ang_add ang_zero (real_to_ang c_zero))">
    <goal name="real_to_ang_zero&#39;vc.2.1.0" expl="assertion" proved="true">
    <proof prover="11"><result status="valid" time="0.33" steps="184374"/></proof>
    </goal>
    <goal name="real_to_ang_zero&#39;vc.2.1.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.30" steps="184374"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="real_to_ang_zero&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.15" steps="168285"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp&#39;vc" expl="VC for ang_exp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="184387"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="set_equal_angle_exp&#39;vc" expl="VC for set_equal_angle_exp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_equal_angle_exp&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="set_equal_angle_exp&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_exp&#39;def">
    <goal name="set_equal_angle_exp&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.29" steps="185751"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="get_equal_angle_exp&#39;vc" expl="VC for get_equal_angle_exp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_equal_angle_exp&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.87" steps="210077"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="meas_value_plus_one&#39;vc" expl="VC for meas_value_plus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="meas_value_plus_one&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(two_pi_i *. (ang_meas (real_to_ang phi) +. c_one))" arg2="((two_pi_i *. (ang_meas (real_to_ang phi))) +.  (two_pi_i *. c_one))">
   <goal name="meas_value_plus_one&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="exp_sum">
    <goal name="meas_value_plus_one&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="goal_comm">
     <goal name="meas_value_plus_one&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="mult_one_t">
      <goal name="meas_value_plus_one&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.17" steps="168408"/></proof>
      </goal>
      <goal name="meas_value_plus_one&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.38" steps="186649"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="meas_value_plus_one&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.32" steps="184650"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_pi_over_four&#39;vc" expl="VC for ang_exp_pi_over_four" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_pi_over_four&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="ang_exp_pi_over_four&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_exp&#39;def">
    <goal name="ang_exp_pi_over_four&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(two_pi_i *. ang_meas (real_to_ang (c_one /.(i_to_c 8))))" arg2="(im*.pi/.(i_to_c 4))">
     <goal name="ang_exp_pi_over_four&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.19" steps="169624"/></proof>
     </goal>
     <goal name="ang_exp_pi_over_four&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(ang_meas (real_to_ang (c_one /. i_to_c 8)))" arg2="( ( (c_one /. i_to_c 8)))">
      <goal name="ang_exp_pi_over_four&#39;vc.0.0.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="1.61" steps="488595"/></proof>
      </goal>
      <goal name="ang_exp_pi_over_four&#39;vc.0.0.0.1.1" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="meas_value">
       <goal name="ang_exp_pi_over_four&#39;vc.0.0.0.1.1.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.42" steps="208653"/></proof>
       </goal>
       <goal name="ang_exp_pi_over_four&#39;vc.0.0.0.1.1.1" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="1.55" steps="463872"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_pi_over_two&#39;vc" expl="VC for ang_exp_pi_over_two" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_pi_over_two&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="ang_exp_pi_over_two&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_exp&#39;def">
    <goal name="ang_exp_pi_over_two&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(two_pi_i *. ang_meas (real_to_ang (c_one /.(i_to_c 4))))" arg2="(im*.pi/.(i_to_c 2))">
     <goal name="ang_exp_pi_over_two&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.30" steps="185782"/></proof>
     </goal>
     <goal name="ang_exp_pi_over_two&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="two_pi_i&#39;def">
      <goal name="ang_exp_pi_over_two&#39;vc.0.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(ang_meas (real_to_ang (c_one /. i_to_c 4)))" arg2="(c_one /. i_to_c 4)">
       <goal name="ang_exp_pi_over_two&#39;vc.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
       <transf name="replace" proved="true" arg1="(i_to_c 4)" arg2="(ttwo *. i_to_c 2)">
        <goal name="ang_exp_pi_over_two&#39;vc.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.56" steps="211655"/></proof>
        </goal>
        <goal name="ang_exp_pi_over_two&#39;vc.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.28" steps="186041"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="ang_exp_pi_over_two&#39;vc.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="meas_value">
        <goal name="ang_exp_pi_over_two&#39;vc.0.0.0.1.0.1.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.40" steps="209183"/></proof>
        </goal>
        <goal name="ang_exp_pi_over_two&#39;vc.0.0.0.1.0.1.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="ang_exp_pi_over_two&#39;vc.0.0.0.1.0.1.1.0" proved="true">
         <proof prover="11"><result status="valid" time="0.40" steps="209297"/></proof>
         </goal>
         <goal name="ang_exp_pi_over_two&#39;vc.0.0.0.1.0.1.1.1" proved="true">
         <transf name="assert" proved="true" arg1="(c_one &lt;. i_to_c 4)">
          <goal name="ang_exp_pi_over_two&#39;vc.0.0.0.1.0.1.1.1.0" expl="asserted formula" proved="true">
          <proof prover="11"><result status="valid" time="0.40" steps="208968"/></proof>
          </goal>
          <goal name="ang_exp_pi_over_two&#39;vc.0.0.0.1.0.1.1.1.1" proved="true">
          <transf name="assert" proved="true" arg1="((c_one /. i_to_c 4) &lt;. c_one /. c_one)">
           <goal name="ang_exp_pi_over_two&#39;vc.0.0.0.1.0.1.1.1.1.0" expl="asserted formula" proved="true">
           <transf name="apply" proved="true" arg1="inv_inf">
            <goal name="ang_exp_pi_over_two&#39;vc.0.0.0.1.0.1.1.1.1.0.0" expl="apply premises" proved="true">
            <proof prover="11"><result status="valid" time="0.31" steps="186013"/></proof>
            </goal>
            <goal name="ang_exp_pi_over_two&#39;vc.0.0.0.1.0.1.1.1.1.0.1" expl="apply premises" proved="true">
            <proof prover="11"><result status="valid" time="0.29" steps="186014"/></proof>
            </goal>
            <goal name="ang_exp_pi_over_two&#39;vc.0.0.0.1.0.1.1.1.1.0.2" expl="apply premises" proved="true">
            <proof prover="11"><result status="valid" time="0.58" steps="209274"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="ang_exp_pi_over_two&#39;vc.0.0.0.1.0.1.1.1.1.1" proved="true">
           <proof prover="11"><result status="valid" time="0.41" steps="210519"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_pi&#39;vc" expl="VC for ang_exp_pi" proved="true">
 <transf name="eliminate_definition" proved="true" >
  <goal name="ang_exp_pi&#39;vc.0" expl="VC for ang_exp_pi" proved="true">
  <transf name="rewrite" proved="true" arg1="ang_exp&#39;def">
   <goal name="ang_exp_pi&#39;vc.0.0" expl="VC for ang_exp_pi" proved="true">
   <transf name="replace" proved="true" arg1="(two_pi_i *. ang_meas (real_to_ang (c_one /. i_to_c 2)))" arg2="(im *. pi)">
    <goal name="ang_exp_pi&#39;vc.0.0.0" expl="VC for ang_exp_pi" proved="true">
    <proof prover="11"><result status="valid" time="0.16" steps="169681"/></proof>
    </goal>
    <goal name="ang_exp_pi&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="replace" proved="true" arg1="(ang_meas (real_to_ang (c_one /. i_to_c 2)))" arg2="(c_one /. ttwo)">
     <goal name="ang_exp_pi&#39;vc.0.0.1.0" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.41" steps="211102"/></proof>
     </goal>
     <goal name="ang_exp_pi&#39;vc.0.0.1.1" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="ttwo" arg2="(i_to_c 2)">
      <goal name="ang_exp_pi&#39;vc.0.0.1.1.0" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="meas_value">
       <goal name="ang_exp_pi&#39;vc.0.0.1.1.0.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.42" steps="210525"/></proof>
       </goal>
       <goal name="ang_exp_pi&#39;vc.0.0.1.1.0.1" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="ang_exp_pi&#39;vc.0.0.1.1.0.1.0" proved="true">
        <proof prover="11"><result status="valid" time="0.45" steps="210619"/></proof>
        </goal>
        <goal name="ang_exp_pi&#39;vc.0.0.1.1.0.1.1" proved="true">
        <transf name="assert" proved="true" arg1="((c_one /. i_to_c 2) &lt;. c_one /. c_one)">
         <goal name="ang_exp_pi&#39;vc.0.0.1.1.0.1.1.0" expl="asserted formula" proved="true">
         <transf name="apply" proved="true" arg1="inv_inf">
          <goal name="ang_exp_pi&#39;vc.0.0.1.1.0.1.1.0.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.34" steps="187077"/></proof>
          </goal>
          <goal name="ang_exp_pi&#39;vc.0.0.1.1.0.1.1.0.1" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.30" steps="187065"/></proof>
          </goal>
          <goal name="ang_exp_pi&#39;vc.0.0.1.1.0.1.1.0.2" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.46" steps="210682"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="ang_exp_pi&#39;vc.0.0.1.1.0.1.1.1" proved="true">
         <proof prover="11"><result status="valid" time="0.41" steps="211478"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="ang_exp_pi&#39;vc.0.0.1.1.1" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="0.17" steps="169688"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_c_one&#39;vc" expl="VC for real_to_ang_c_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_c_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.31" steps="185832"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="set_ang_meas_eq&#39;vc" expl="VC for set_ang_meas_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_ang_meas_eq&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.17" steps="175336"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="get_ang_meas_eq&#39;vc" expl="VC for get_ang_meas_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_ang_meas_eq&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.31" steps="185934"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_zero&#39;vc" expl="VC for ang_exp_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_zero&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="ang_exp_zero&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_exp&#39;def">
    <goal name="ang_exp_zero&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.48" steps="211574"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_two_pi&#39;vc" expl="VC for ang_exp_two_pi" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_two_pi&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(i_to_c 1)" arg2="c_one">
   <goal name="ang_exp_two_pi&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="real_to_ang_c_one">
    <goal name="ang_exp_two_pi&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.17" steps="168713"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ang_exp_two_pi&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.16" steps="168713"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_c_one&#39;vc" expl="VC for ang_exp_c_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_c_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.28" steps="185891"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_meas_add_inf_c_one&#39;vc" expl="VC for ang_meas_add_inf_c_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_meas_add_inf_c_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.41" steps="210247"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="set_ang_exp_eq&#39;vc" expl="VC for set_ang_exp_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_ang_exp_eq&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.20" steps="175629"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="get_ang_exp_meas_eq&#39;vc" expl="VC for get_ang_exp_meas_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_ang_exp_meas_eq&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="get_ang_exp_meas_eq&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.32" steps="187933"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="get_ang_exp_eq&#39;vc" expl="VC for get_ang_exp_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_ang_exp_eq&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.31" steps="186310"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_meas_zero&#39;vc" expl="VC for ang_meas_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_meas_zero&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="ang_zero" arg2="(real_to_ang c_zero)">
   <goal name="ang_meas_zero&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="meas_value">
    <goal name="ang_meas_zero&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="0.29" steps="186350"/></proof>
    </goal>
    <goal name="ang_meas_zero&#39;vc.0.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="ang_meas_zero&#39;vc.0.0.1.0" proved="true">
     <proof prover="11"><result status="valid" time="0.30" steps="186355"/></proof>
     </goal>
     <goal name="ang_meas_zero&#39;vc.0.0.1.1" proved="true">
     <proof prover="11"><result status="valid" time="0.41" steps="209639"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="ang_meas_zero&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="apply" proved="true" arg1="get_ang_meas_eq">
    <goal name="ang_meas_zero&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="(real_to_ang c_zero = ang_zero)">
     <goal name="ang_meas_zero&#39;vc.0.1.0.0" expl="asserted formula" proved="true">
     <proof prover="11"><result status="valid" time="0.15" steps="169023"/></proof>
     </goal>
     <goal name="ang_meas_zero&#39;vc.0.1.0.1" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="0.20" steps="175815"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_add_one&#39;vc" expl="VC for real_to_ang_add_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_add_one&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="( real_to_ang (x +. c_one))" arg2="(ang_add ( real_to_ang x) (real_to_ang c_one))">
   <goal name="real_to_ang_add_one&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(real_to_ang c_one)" arg2="ang_zero">
    <goal name="real_to_ang_add_one&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.35" steps="186403"/></proof>
    </goal>
    <goal name="real_to_ang_add_one&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="get_ang_meas_eq">
     <goal name="real_to_ang_add_one&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="0.31" steps="186247"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="real_to_ang_add_one&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.48" steps="211414"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_add_b&#39;vc" expl="VC for ang_exp_add_b" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_add_b&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="ang_exp_add_b&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_exp&#39;def">
    <goal name="ang_exp_add_b&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_meas_add_inf_c_one">
     <goal name="ang_exp_add_b&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
      <goal name="ang_exp_add_b&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="exp_sum">
       <goal name="ang_exp_add_b&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="mult_eq_t">
        <goal name="ang_exp_add_b&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.36" steps="188808"/></proof>
        </goal>
        <goal name="ang_exp_add_b&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.39" steps="188808"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ang_exp_add_b&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.22" steps="171188"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_add_b_rev&#39;vc" expl="VC for ang_exp_add_b_rev" proved="true">
 <proof prover="11"><result status="valid" time="0.40" steps="187515"/></proof>
 </goal>
 <goal name="real_to_ang_add&#39;vc" expl="VC for real_to_ang_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_add&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Real_To_Ang_add">
   <goal name="real_to_ang_add&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.25" steps="170216"/></proof>
   </goal>
   <goal name="real_to_ang_add&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.21" steps="170218"/></proof>
   </goal>
   <goal name="real_to_ang_add&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.22" steps="170218"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_add_rev&#39;vc" expl="VC for real_to_ang_add_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_add_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.41" steps="187844"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_inv_add&#39;vc" expl="VC for ang_inv_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_inv_add&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(ang_add o o&#39;)" arg2="(ang_add (real_to_ang(ang_meas o)) (real_to_ang(ang_meas o&#39;)) )">
   <goal name="ang_inv_add&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="( o +.+ o&#39;)" arg2="((real_to_ang(ang_meas o)) +.+ (real_to_ang(ang_meas o&#39;)) )
">
    <goal name="ang_inv_add&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="real_to_ang_add_rev">
     <goal name="ang_inv_add&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Real_To_Ang_inv">
      <goal name="ang_inv_add&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(ang_inv o)" arg2="(ang_inv (real_to_ang (ang_meas o)))">
       <goal name="ang_inv_add&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="(ang_inv o&#39;)" arg2="(ang_inv (real_to_ang (ang_meas o&#39;)))">
        <goal name="ang_inv_add&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="Real_To_Ang_inv">
         <goal name="ang_inv_add&#39;vc.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="Real_To_Ang_inv">
          <goal name="ang_inv_add&#39;vc.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="real_to_ang_add_rev">
           <goal name="ang_inv_add&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <proof prover="11"><result status="valid" time="0.41" steps="189720"/></proof>
           </goal>
           <goal name="ang_inv_add&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="11"><result status="valid" time="0.57" steps="212138"/></proof>
           </goal>
           <goal name="ang_inv_add&#39;vc.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="11"><result status="valid" time="0.59" steps="212138"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="ang_inv_add&#39;vc.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="11"><result status="valid" time="0.41" steps="187887"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="ang_inv_add&#39;vc.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="0.40" steps="187887"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="ang_inv_add&#39;vc.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.36" steps="189664"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="ang_inv_add&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="0.36" steps="189664"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="ang_inv_add&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.53" steps="212303"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="ang_inv_add&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.43" steps="187887"/></proof>
     </goal>
     <goal name="ang_inv_add&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.40" steps="187887"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ang_inv_add&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.38" steps="189689"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ang_inv_add&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.38" steps="189689"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_inv_add_rev&#39;vc" expl="VC for ang_inv_add_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_inv_add_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.36" steps="187973"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_add_pre&#39;vc" expl="VC for ang_exp_add_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_add_pre&#39;vc.0" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="real_to_ang_add_rev">
   <goal name="ang_exp_add_pre&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(c_one +. ((ang_meas o +. ang_meas o&#39;) -. c_one))" arg2="( ((ang_meas o +. ang_meas o&#39;) ))">
    <goal name="ang_exp_add_pre&#39;vc.0.0.0" expl="assertion" proved="true">
    <proof prover="11"><result status="valid" time="0.49" steps="213344"/></proof>
    </goal>
    <goal name="ang_exp_add_pre&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="assert" proved="true" arg1="(forall a b. a+.(b-.a) = b )">
     <goal name="ang_exp_add_pre&#39;vc.0.0.1.0" expl="asserted formula" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="ang_exp_add_pre&#39;vc.0.0.1.0.0" expl="asserted formula" proved="true">
      <transf name="replace" proved="true" arg1="(b-.a)" arg2="(b+. (-.a))">
       <goal name="ang_exp_add_pre&#39;vc.0.0.1.0.0.0" expl="asserted formula" proved="true">
       <transf name="replace" proved="true" arg1="(a +. (b +. (-. a)))" arg2="((b +. (-. a))+.a)">
        <goal name="ang_exp_add_pre&#39;vc.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="11"><result status="valid" time="0.58" steps="217369"/></proof>
        </goal>
        <goal name="ang_exp_add_pre&#39;vc.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.40" steps="188066"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="ang_exp_add_pre&#39;vc.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="0.40" steps="188059"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ang_exp_add_pre&#39;vc.0.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.41" steps="188117"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="ang_exp_add_pre&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.41" steps="188041"/></proof>
   </goal>
   <goal name="ang_exp_add_pre&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.56" steps="213494"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ang_exp_add_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.56" steps="215641"/></proof>
  </goal>
  <goal name="ang_exp_add_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.35" steps="190430"/></proof>
  </goal>
  <goal name="ang_exp_add_pre&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.43" steps="188257"/></proof>
  </goal>
  <goal name="ang_exp_add_pre&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ang_exp_add_pre&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.56" steps="217351"/></proof>
   </goal>
   <goal name="ang_exp_add_pre&#39;vc.4.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="((ang_meas o&#39; +. ang_meas o) &lt;.ttwo)">
    <goal name="ang_exp_add_pre&#39;vc.4.1.0" expl="asserted formula" proved="true">
    <proof prover="11"><result status="valid" time="0.42" steps="188282"/></proof>
    </goal>
    <goal name="ang_exp_add_pre&#39;vc.4.1.1" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(ang_meas o&#39; +. ang_meas o)" arg2="(toto+. c_one )" arg3="in" arg4="h">
     <goal name="ang_exp_add_pre&#39;vc.4.1.1.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.60" steps="222440"/></proof>
     </goal>
     <goal name="ang_exp_add_pre&#39;vc.4.1.1.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.37" steps="188302"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ang_exp_add_pre&#39;vc.5" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Assert">
   <goal name="ang_exp_add_pre&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(real_to_ang c_one)" arg2="ang_zero
">
    <goal name="ang_exp_add_pre&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="ang_exp_add_pre&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.40" steps="190829"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ang_exp_add_pre&#39;vc.5.0.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.20" steps="170691"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  <transf name="split_vc" proved="true" >
   <goal name="ang_exp_add_pre&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.43" steps="190812"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ang_exp_add_pre&#39;vc.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Assert">
   <goal name="ang_exp_add_pre&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(real_to_ang c_one)" arg2="ang_zero
">
    <goal name="ang_exp_add_pre&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="((ang_meas o +. ang_meas o&#39;) -. c_one)" arg2="toto">
     <goal name="ang_exp_add_pre&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures3">
      <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_exp_add_b_rev">
       <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="eliminate_definition" proved="true" >
        <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="replace" proved="true" arg1="( ang_zero +.+(real_to_ang toto) )" arg2="(real_to_ang toto)

">
         <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="ang_exp&#39;def">
          <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="meas_value">
           <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="replace" proved="true" arg1="toto" arg2="((ang_meas o&#39; +. ang_meas o) +. (-. c_one))">
            <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
             <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
              <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
              <transf name="rewrite" proved="true" arg1="exp_sum">
               <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
               <transf name="rewrite" proved="true" arg1="mult_one_t">
                <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
                <transf name="rewrite" proved="true" arg1="exp_sum">
                 <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
                 <transf name="apply" proved="true" arg1="mult_eq_t_rev">
                  <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="11"><result status="valid" time="0.41" steps="189664"/></proof>
                  </goal>
                  <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="11"><result status="valid" time="0.42" steps="189664"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <transf name="replace" proved="true" arg1="(two_pi_i *. (-. c_one))" arg2="(-. two_pi_i )
">
                 <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                 <proof prover="11"><result status="valid" time="0.58" steps="221253"/></proof>
                 </goal>
                 <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                 <proof prover="11"><result status="valid" time="0.57" steps="221670"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="11"><result status="valid" time="0.42" steps="189646"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="11"><result status="valid" time="0.40" steps="189634"/></proof>
           </goal>
           <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="11"><result status="valid" time="0.22" steps="171867"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="11"><result status="valid" time="0.43" steps="192992"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="ang_exp_add_pre&#39;vc.6.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.39" steps="190996"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ang_exp_add_pre&#39;vc.6.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.37" steps="190852"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ang_exp_add_pre&#39;vc.6.0.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.20" steps="170713"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ang_exp_add_pre&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="170739"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_add&#39;vc" expl="VC for ang_exp_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_add&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="170659"/></proof>
  </goal>
  <goal name="ang_exp_add&#39;vc.1" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(ang_meas o&#39; +. ang_meas o)" arg2="(ang_meas o +. ang_meas o&#39;)">
   <goal name="ang_exp_add&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.53" steps="214883"/></proof>
   </goal>
   <goal name="ang_exp_add&#39;vc.1.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.40" steps="188271"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ang_exp_add&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.22" steps="170697"/></proof>
  </goal>
  <goal name="ang_exp_add&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.62" steps="215156"/></proof>
  </goal>
  <goal name="ang_exp_add&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.47" steps="215480"/></proof>
  </goal>
  <goal name="ang_exp_add&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.40" steps="190518"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_meas_add&#39;vc" expl="VC for ang_meas_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_meas_add&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="ang_meas_add&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.40" steps="189458"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_add_rev&#39;vc" expl="VC for ang_exp_add_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_add_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.20" steps="170724"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_int_pre&#39;vc" expl="VC for real_to_ang_int_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_int_pre&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.20" steps="170807"/></proof>
  </goal>
  <goal name="real_to_ang_int_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.38" steps="188242"/></proof>
  </goal>
  <goal name="real_to_ang_int_pre&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.22" steps="170821"/></proof>
  </goal>
  <goal name="real_to_ang_int_pre&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.40" steps="188420"/></proof>
  </goal>
  <goal name="real_to_ang_int_pre&#39;vc.4" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="real_to_ang_int_pre&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="real_to_ang_int_pre&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="real_to_ang_int_pre&#39;vc.4.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(real_to_ang (i_to_c k))" arg2="((real_to_ang c_one) +.+ (real_to_ang (i_to_c (k-1))))
">
      <goal name="real_to_ang_int_pre&#39;vc.4.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="11"><result status="valid" time="1.90" steps="523605"/></proof>
      </goal>
      <goal name="real_to_ang_int_pre&#39;vc.4.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="real_to_ang_add_rev">
       <goal name="real_to_ang_int_pre&#39;vc.4.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <transf name="replace" proved="true" arg1="(i_to_c k)" arg2="( i_to_c 1 +. (i_to_c (k-1)) )">
        <goal name="real_to_ang_int_pre&#39;vc.4.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.45" steps="213546"/></proof>
        </goal>
        <goal name="real_to_ang_int_pre&#39;vc.4.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.59" steps="239696"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="real_to_ang_int_pre&#39;vc.4.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.44" steps="213822"/></proof>
       </goal>
       <goal name="real_to_ang_int_pre&#39;vc.4.0.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.45" steps="213848"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="real_to_ang_int_pre&#39;vc.4.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="real_to_ang_int_pre&#39;vc.4.1.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="real_to_ang_int_pre&#39;vc.4.1.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(real_to_ang (i_to_c k))" arg2="((real_to_ang c_one) +.+ (real_to_ang (i_to_c (k-1))))
">
      <goal name="real_to_ang_int_pre&#39;vc.4.1.0.0.0" expl="postcondition" proved="true">
      <proof prover="11"><result status="valid" time="0.50" steps="214801"/></proof>
      </goal>
      <goal name="real_to_ang_int_pre&#39;vc.4.1.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="real_to_ang_add_rev">
       <goal name="real_to_ang_int_pre&#39;vc.4.1.0.0.1.0" expl="equality hypothesis" proved="true">
       <transf name="replace" proved="true" arg1="(i_to_c k)" arg2="( i_to_c 1 +. (i_to_c (k-1)) )">
        <goal name="real_to_ang_int_pre&#39;vc.4.1.0.0.1.0.0" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.39" steps="213630"/></proof>
        </goal>
        <goal name="real_to_ang_int_pre&#39;vc.4.1.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.60" steps="242686"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="real_to_ang_int_pre&#39;vc.4.1.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.46" steps="213986"/></proof>
       </goal>
       <goal name="real_to_ang_int_pre&#39;vc.4.1.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.49" steps="213987"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_int&#39;vc" expl="VC for real_to_ang_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_int&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="170809"/></proof>
  </goal>
  <goal name="real_to_ang_int&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.36" steps="188248"/></proof>
  </goal>
  <goal name="real_to_ang_int&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="3.50" steps="922493"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_int_&#39;vc" expl="VC for real_to_ang_int_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_int_&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="get_ang_exp_eq">
   <goal name="real_to_ang_int_&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.42" steps="188471"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_value_add&#39;vc" expl="VC for real_to_ang_value_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_value_add&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.18" steps="170897"/></proof>
  </goal>
  <goal name="real_to_ang_value_add&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.50" steps="188528"/></proof>
  </goal>
  <goal name="real_to_ang_value_add&#39;vc.2" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="real_to_ang_add">
   <goal name="real_to_ang_value_add&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="real_to_ang_value_add&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="mult_one_t">
     <goal name="real_to_ang_value_add&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.58" steps="217144"/></proof>
     </goal>
     <goal name="real_to_ang_value_add&#39;vc.2.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.37" steps="188588"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="real_to_ang_value_add&#39;vc.2.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.38" steps="188574"/></proof>
   </goal>
   <goal name="real_to_ang_value_add&#39;vc.2.2" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.19" steps="170942"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_value&#39;vc" expl="VC for real_to_ang_value" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_value&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.19" steps="170968"/></proof>
  </goal>
  <goal name="real_to_ang_value&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.19" steps="171020"/></proof>
  </goal>
  <goal name="real_to_ang_value&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.19" steps="171103"/></proof>
  </goal>
  <goal name="real_to_ang_value&#39;vc.3" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="phi" arg2="(dec_part phi +. i_to_c (int_part_int phi))">
   <goal name="real_to_ang_value&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="real_to_ang_value&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
     <goal name="real_to_ang_value&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="exp_sum">
      <goal name="real_to_ang_value&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="goal_comm">
       <goal name="real_to_ang_value&#39;vc.3.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="mult_one_t">
        <goal name="real_to_ang_value&#39;vc.3.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.17" steps="171131"/></proof>
        </goal>
        <goal name="real_to_ang_value&#39;vc.3.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.59" steps="221022"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="real_to_ang_value&#39;vc.3.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="dec_part&#39;def">
    <goal name="real_to_ang_value&#39;vc.3.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="int_part_int&#39;def">
     <goal name="real_to_ang_value&#39;vc.3.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="int_part&#39;def">
      <goal name="real_to_ang_value&#39;vc.3.1.0.0.0" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="0.34" steps="188972"/></proof>
      </goal>
      <goal name="real_to_ang_value&#39;vc.3.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.19" steps="171133"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="real_to_ang_value&#39;vc.3.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.18" steps="171133"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="real_to_ang_value&#39;vc.3.1.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.19" steps="171133"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_zero_" proved="true">
 <proof prover="11"><result status="valid" time="0.20" steps="171022"/></proof>
 </goal>
 <goal name="ang_mult_int_&#39;vc" expl="VC for ang_mult_int_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int_&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ang_mult_int_&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.19" steps="171076"/></proof>
   </goal>
   <goal name="ang_mult_int_&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.20" steps="171092"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ang_mult_int_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.31" steps="188661"/></proof>
  </goal>
  <goal name="ang_mult_int_&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ang_mult_int_&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="ang_mult_int_&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(  (real_to_ang (ang_meas theta *. i_to_c (i - 1))) +.+ theta)" arg2="(  (real_to_ang (ang_meas theta *. i_to_c (i - 1))) +.+(real_to_ang (ang_meas theta)))
">
     <goal name="ang_mult_int_&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.39" steps="190625"/></proof>
     </goal>
     <goal name="ang_mult_int_&#39;vc.2.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="real_to_ang_add_rev">
      <goal name="ang_mult_int_&#39;vc.2.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(i_to_c i)" arg2="(i_to_c (i-1) +. c_one )">
       <goal name="ang_mult_int_&#39;vc.2.0.0.1.0.0" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="0.60" steps="214750"/></proof>
       </goal>
       <goal name="ang_mult_int_&#39;vc.2.0.0.1.0.1" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="0.47" steps="213745"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="ang_mult_int_&#39;vc.2.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.47" steps="214077"/></proof>
      </goal>
      <goal name="ang_mult_int_&#39;vc.2.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.35" steps="188775"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="ang_mult_int_&#39;vc.2.1" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="ang_mult_int_&#39;vc.2.1.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(  (real_to_ang (ang_meas theta *. i_to_c (i - 1))) +.+ theta)" arg2="(  (real_to_ang (ang_meas theta *. i_to_c (i - 1))) +.+(real_to_ang (ang_meas theta)))
">
     <goal name="ang_mult_int_&#39;vc.2.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="real_to_ang_add_rev">
      <goal name="ang_mult_int_&#39;vc.2.1.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(i_to_c i)" arg2="(i_to_c (i-1) +. c_one )">
       <goal name="ang_mult_int_&#39;vc.2.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="11"><result status="valid" time="2.02" steps="593044"/></proof>
       </goal>
       <goal name="ang_mult_int_&#39;vc.2.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="0.47" steps="213908"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="ang_mult_int_&#39;vc.2.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.49" steps="214250"/></proof>
      </goal>
      <goal name="ang_mult_int_&#39;vc.2.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.35" steps="188836"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="ang_mult_int_&#39;vc.2.1.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="real_to_ang_add_rev">
      <goal name="ang_mult_int_&#39;vc.2.1.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(i_to_c i)" arg2="(i_to_c (i-1) +. c_one )">
       <goal name="ang_mult_int_&#39;vc.2.1.0.1.0.0" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="0.50" steps="214893"/></proof>
       </goal>
       <goal name="ang_mult_int_&#39;vc.2.1.0.1.0.1" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="0.49" steps="213908"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="ang_mult_int_&#39;vc.2.1.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.50" steps="214250"/></proof>
      </goal>
      <goal name="ang_mult_int_&#39;vc.2.1.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.36" steps="188836"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_mult_int&#39;vc" expl="VC for ang_mult_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ang_mult_int&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.19" steps="171252"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ang_mult_int&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ang_mult_int&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.34" steps="188826"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_mult_int_to_real_to_ang&#39;vc" expl="VC for ang_mult_int_to_real_to_ang" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int_to_real_to_ang&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="ang_mult_int_to_real_to_ang&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="ang_mult_int_to_real_to_ang&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(0&lt;=i)">
     <goal name="ang_mult_int_to_real_to_ang&#39;vc.0.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="( *.* )&#39;def">
      <goal name="ang_mult_int_to_real_to_ang&#39;vc.0.0.0.0.0" expl="true case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_mult_int&#39;def1">
       <goal name="ang_mult_int_to_real_to_ang&#39;vc.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="ang_mult_int_&#39;spec">
        <goal name="ang_mult_int_to_real_to_ang&#39;vc.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
        <proof prover="11"><result status="valid" time="0.24" steps="201741"/></proof>
        </goal>
        <goal name="ang_mult_int_to_real_to_ang&#39;vc.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.24" steps="201743"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="ang_mult_int_to_real_to_ang&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.23" steps="201743"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ang_mult_int_to_real_to_ang&#39;vc.0.0.0.1" expl="false case (postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="( *.* )&#39;def">
      <goal name="ang_mult_int_to_real_to_ang&#39;vc.0.0.0.1.0" expl="false case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_mult_int&#39;def">
       <goal name="ang_mult_int_to_real_to_ang&#39;vc.0.0.0.1.0.0" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="ang_mult_int_&#39;spec">
        <goal name="ang_mult_int_to_real_to_ang&#39;vc.0.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="Real_To_Ang_inv">
         <goal name="ang_mult_int_to_real_to_ang&#39;vc.0.0.0.1.0.0.0.0" expl="false case (postcondition)" proved="true">
         <proof prover="11"><result status="valid" time="0.59" steps="248399"/></proof>
         </goal>
         <goal name="ang_mult_int_to_real_to_ang&#39;vc.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="0.59" steps="246712"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="ang_mult_int_to_real_to_ang&#39;vc.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.37" steps="220643"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="ang_mult_int_to_real_to_ang&#39;vc.0.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.21" steps="201745"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_mult_int_eq&#39;vc" expl="VC for ang_mult_int_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int_eq&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.22" steps="178451"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_mult_int_plus_one_pos&#39;vc" expl="VC for ang_mult_int_plus_one_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int_plus_one_pos&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="ang_mult_int_plus_one_pos&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="ang_mult_int_plus_one_pos&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="( *.* )&#39;def">
     <goal name="ang_mult_int_plus_one_pos&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ang_mult_int&#39;def1">
      <goal name="ang_mult_int_plus_one_pos&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_mult_int_&#39;def">
       <goal name="ang_mult_int_plus_one_pos&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="11"><result status="valid" time="0.57" steps="246055"/></proof>
       </goal>
       <goal name="ang_mult_int_plus_one_pos&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.41" steps="220809"/></proof>
       </goal>
       <goal name="ang_mult_int_plus_one_pos&#39;vc.0.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.38" steps="220802"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="ang_mult_int_plus_one_pos&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.40" steps="220809"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_mult_int_inv&#39;vc" expl="VC for ang_mult_int_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int_inv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="ang_mult_int_inv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="ang_mult_int_inv&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="goal_comm">
     <goal name="ang_mult_int_inv&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="( *.* )&#39;def">
      <goal name="ang_mult_int_inv&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_mult_int&#39;def1">
       <goal name="ang_mult_int_inv&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="0.60" steps="1903432"/></proof>
       </goal>
       <goal name="ang_mult_int_inv&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.38" steps="220913"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_eq&#39;vc" expl="VC for real_to_ang_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_eq&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="real_to_ang_eq&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.22" steps="178748"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_equal_angle_by_exp&#39;vc" expl="VC for set_equal_angle_by_exp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_equal_angle_by_exp&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.34" steps="189544"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_int_dec_part&#39;vc" expl="VC for real_to_ang_int_dec_part" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_int_dec_part&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(real_to_ang x)" arg2="(real_to_ang (dec_part x +. i_to_c (int_part_int x)))">
   <goal name="real_to_ang_int_dec_part&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="real_to_ang_add">
    <goal name="real_to_ang_int_dec_part&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(real_to_ang (i_to_c (int_part_int x)))" arg2="ang_zero">
     <goal name="real_to_ang_int_dec_part&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.36" steps="189618"/></proof>
     </goal>
     <goal name="real_to_ang_int_dec_part&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.39" steps="189619"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="real_to_ang_int_dec_part&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.38" steps="189629"/></proof>
    </goal>
    <goal name="real_to_ang_int_dec_part&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.37" steps="189597"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="real_to_ang_int_dec_part&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(dec_part x +. i_to_c (int_part_int x))" arg2="x">
    <goal name="real_to_ang_int_dec_part&#39;vc.0.1.0" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.20" steps="171838"/></proof>
    </goal>
    <goal name="real_to_ang_int_dec_part&#39;vc.0.1.1" expl="equality hypothesis" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="real_to_ang_int_dec_part&#39;vc.0.1.1.0" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.41" steps="215188"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_equal_exp_by_ang&#39;vc" expl="VC for set_equal_exp_by_ang" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_equal_exp_by_ang&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.22" steps="178947"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang&#39;vc" expl="VC for int_to_ang" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang&#39;vc.0" expl="assertion" proved="true">
  <transf name="instantiate" proved="true" arg1="decomp" arg2="k,(power 2 n)">
   <goal name="int_to_ang&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(i_to_c k /. i_to_c (power 2 n))" arg2="(i_to_c (mod k (power 2 n)) /. i_to_c (power 2 n)+. (i_to_c (power 2 n * div k (power 2 n))/. i_to_c (power 2 n)))">
    <goal name="int_to_ang&#39;vc.0.0.0" expl="assertion" proved="true">
    <transf name="apply" proved="true" arg1="add_eq_t">
     <goal name="int_to_ang&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="int_to_ang&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
      <goal name="int_to_ang&#39;vc.0.0.0.1.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="((i_to_c (power 2 n) *. i_to_c (div k (power 2 n))) /. i_to_c (power 2 n))" arg2="((i_to_c (power 2 n) *. i_to_c (div k (power 2 n))) /. (i_to_c (power 2 n) *. c_one))
">
       <goal name="int_to_ang&#39;vc.0.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="mult_div_comm">
        <goal name="int_to_ang&#39;vc.0.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="one_mult_t">
         <goal name="int_to_ang&#39;vc.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="11"><result status="valid" time="0.55" steps="233567"/></proof>
         </goal>
         <goal name="int_to_ang&#39;vc.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="assert" proved="true" arg1="(forall a. a&lt;&gt; c_zero -&gt; a/.a = c_one)">
          <goal name="int_to_ang&#39;vc.0.0.0.1.0.0.0.1.0" expl="asserted formula" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="int_to_ang&#39;vc.0.0.0.1.0.0.0.1.0.0" expl="asserted formula" proved="true">
           <transf name="replace" proved="true" arg1="(a/.a)" arg2="(a*. (c_one/.a))">
            <goal name="int_to_ang&#39;vc.0.0.0.1.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
            <proof prover="11"><result status="valid" time="0.43" steps="206267"/></proof>
            </goal>
            <goal name="int_to_ang&#39;vc.0.0.0.1.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="11"><result status="valid" time="0.45" steps="206274"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="int_to_ang&#39;vc.0.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="h">
           <goal name="int_to_ang&#39;vc.0.0.0.1.0.0.0.1.1.0" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="0.87" steps="236899"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="int_to_ang&#39;vc.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.96" steps="236800"/></proof>
        </goal>
        <goal name="int_to_ang&#39;vc.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.25" steps="186892"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="int_to_ang&#39;vc.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="div_eq">
        <goal name="int_to_ang&#39;vc.0.0.0.1.0.1.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.25" steps="186883"/></proof>
        </goal>
        <goal name="int_to_ang&#39;vc.0.0.0.1.0.1.1" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.45" steps="206305"/></proof>
        </goal>
        <goal name="int_to_ang&#39;vc.0.0.0.1.0.1.2" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.86" steps="236800"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="int_to_ang&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="replace" proved="true" arg1="(i_to_c k /. i_to_c (power 2 n))" arg2="(i_to_c ((power 2 n * div k (power 2 n)) + mod k (power 2 n)) /. i_to_c (power 2 n))
">
     <goal name="int_to_ang&#39;vc.0.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
      <goal name="int_to_ang&#39;vc.0.0.1.0.0" expl="equality hypothesis" proved="true">
      <transf name="assert" proved="true" arg1="(forall a b c. c &lt;&gt; c_zero -&gt; (a+.b)/.c= (b/.c)+.(a/.c))">
       <goal name="int_to_ang&#39;vc.0.0.1.0.0.0" expl="asserted formula" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="int_to_ang&#39;vc.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="11"><result status="valid" time="0.59" steps="233031"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="int_to_ang&#39;vc.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="h">
        <goal name="int_to_ang&#39;vc.0.0.1.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.98" steps="236921"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="int_to_ang&#39;vc.0.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.57" steps="232640"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="int_to_ang&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.92" steps="240134"/></proof>
  </goal>
  <goal name="int_to_ang&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="2.31" steps="630598"/></proof>
  </goal>
  <goal name="int_to_ang&#39;vc.3" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="int_to_ang&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Assert" arg2="in" arg3="result&#39;def">
    <goal name="int_to_ang&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="result&#39;def">
     <goal name="int_to_ang&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="real_to_ang_add">
      <goal name="int_to_ang&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(real_to_ang (i_to_c (div k (power 2 n))))" arg2="ang_zero">
       <goal name="int_to_ang&#39;vc.3.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="11"><result status="valid" time="1.51" steps="255177"/></proof>
       </goal>
       <goal name="int_to_ang&#39;vc.3.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="0.43" steps="207631"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="int_to_ang&#39;vc.3.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="5.43"/></proof>
      </goal>
      <goal name="int_to_ang&#39;vc.3.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.44" steps="207595"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="int_to_ang&#39;vc.4" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="int_to_ang&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="meas_value">
    <goal name="int_to_ang&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="bound_eq_rev">
     <goal name="int_to_ang&#39;vc.4.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.24" steps="186969"/></proof>
     </goal>
     <goal name="int_to_ang&#39;vc.4.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.23" steps="186980"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="int_to_ang&#39;vc.4.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="1.21" steps="248591"/></proof>
    </goal>
    <goal name="int_to_ang&#39;vc.4.0.2" expl="rewrite premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="int_to_ang&#39;vc.4.0.2.0" expl="rewrite premises" proved="true">
     <proof prover="9"><result status="valid" time="0.53" steps="28087"/></proof>
     </goal>
     <goal name="int_to_ang&#39;vc.4.0.2.1" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="c_one" arg2="(i_to_c (power 2 n) /.i_to_c (power 2 n))">
      <goal name="int_to_ang&#39;vc.4.0.2.1.0" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="(/.)&#39;def">
       <goal name="int_to_ang&#39;vc.4.0.2.1.0.0" expl="rewrite premises" proved="true">
       <transf name="rewrite" proved="true" arg1="(/.)&#39;def">
        <goal name="int_to_ang&#39;vc.4.0.2.1.0.0.0" expl="rewrite premises" proved="true">
        <transf name="assert" proved="true" arg1="(forall a b c. c_zero &lt;. c -&gt; a&lt;. b -&gt; a*.c &lt;. b*.c)">
         <goal name="int_to_ang&#39;vc.4.0.2.1.0.0.0.0" expl="asserted formula" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="int_to_ang&#39;vc.4.0.2.1.0.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="11"><result status="valid" time="0.44" steps="206372"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="int_to_ang&#39;vc.4.0.2.1.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="h">
          <goal name="int_to_ang&#39;vc.4.0.2.1.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(inv1 (i_to_c (power 2 n)))" arg2="(c_one /. (i_to_c (power 2 n)))">
           <goal name="int_to_ang&#39;vc.4.0.2.1.0.0.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="1.29" steps="249541"/></proof>
           </goal>
           <goal name="int_to_ang&#39;vc.4.0.2.1.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
           <proof prover="11"><result status="valid" time="1.08" steps="248526"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="int_to_ang&#39;vc.4.0.2.1.0.0.0.1.1" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="i_to_c_inf">
           <goal name="int_to_ang&#39;vc.4.0.2.1.0.0.0.1.1.0" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="0.45" steps="206241"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="int_to_ang&#39;vc.4.0.2.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.38" steps="206355"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="int_to_ang&#39;vc.4.0.2.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.38" steps="206355"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="int_to_ang&#39;vc.4.0.2.1.1" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="1.00" steps="245686"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="infix /./&#39;vc" expl="VC for infix /./" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="infix /./&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="187078"/></proof>
  </goal>
  <goal name="infix /./&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.38" steps="205796"/></proof>
  </goal>
  <goal name="infix /./&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.22" steps="187404"/></proof>
  </goal>
  <goal name="infix /./&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.22" steps="187424"/></proof>
  </goal>
  <goal name="infix /./&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="infix /./&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.52" steps="238640"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_pos&#39;vc" expl="VC for int_to_ang_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_pos&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.19"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_real_mod&#39;vc" expl="VC for int_to_ang_real_mod" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_real_mod&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.55" steps="233206"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_inv&#39;vc" expl="VC for real_to_ang_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_inv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Real_To_Ang_inv">
   <goal name="real_to_ang_inv&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.22" steps="187795"/></proof>
   </goal>
   <goal name="real_to_ang_inv&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.22" steps="187797"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_inv_rev&#39;vc" expl="VC for real_to_ang_inv_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_inv_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.36" steps="206924"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="involutive_ang_inv&#39;vc" expl="VC for involutive_ang_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="involutive_ang_inv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="o" arg2="(real_to_ang (ang_meas o))">
   <goal name="involutive_ang_inv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="real_to_ang_inv_rev">
    <goal name="involutive_ang_inv&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="real_to_ang_inv_rev">
     <goal name="involutive_ang_inv&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.39" steps="208756"/></proof>
     </goal>
     <goal name="involutive_ang_inv&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.50" steps="231909"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="involutive_ang_inv&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.36" steps="206962"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="involutive_ang_inv&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.37" steps="206969"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Real_To_Ang_inv_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="Real_To_Ang_inv_add.0" proved="true">
  <transf name="rewrite" proved="true" arg1="Real_To_Ang_add">
   <goal name="Real_To_Ang_inv_add.0.0" proved="true">
   <transf name="replace" proved="true" arg1="(phi +. (-. phi))" arg2="c_zero">
    <goal name="Real_To_Ang_inv_add.0.0.0" proved="true">
    <proof prover="11"><result status="valid" time="0.23" steps="187947"/></proof>
    </goal>
    <goal name="Real_To_Ang_inv_add.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.42" steps="207036"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="Real_To_Ang_inv_add.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.21" steps="187947"/></proof>
   </goal>
   <goal name="Real_To_Ang_inv_add.0.2" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.36" steps="207015"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Real_To_Ang_up" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="Real_To_Ang_up.0" proved="true">
  <proof prover="11"><result status="valid" time="0.49" steps="233531"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="real_To_Ang_cyclic_pos&#39;vc" expl="VC for real_To_Ang_cyclic_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_To_Ang_cyclic_pos&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="real_To_Ang_cyclic_pos&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.20" steps="188123"/></proof>
   </goal>
   <goal name="real_To_Ang_cyclic_pos&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.22" steps="188139"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="real_To_Ang_cyclic_pos&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.20" steps="188123"/></proof>
  </goal>
  <goal name="real_To_Ang_cyclic_pos&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.37" steps="207026"/></proof>
  </goal>
  <goal name="real_To_Ang_cyclic_pos&#39;vc.3" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(i_to_c k +. phi)" arg2="(i_to_c (k-1) +. phi +. c_one)">
   <goal name="real_To_Ang_cyclic_pos&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="real_To_Ang_cyclic_pos&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H">
     <goal name="real_To_Ang_cyclic_pos&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="1.20" steps="241265"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="real_To_Ang_cyclic_pos&#39;vc.3.0.1" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.64" steps="234859"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="real_To_Ang_cyclic_pos&#39;vc.3.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(i_to_c k)" arg2="(i_to_c (k-1+1))">
    <goal name="real_To_Ang_cyclic_pos&#39;vc.3.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
     <goal name="real_To_Ang_cyclic_pos&#39;vc.3.1.0.0" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.36" steps="207394"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="real_To_Ang_cyclic_pos&#39;vc.3.1.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.21" steps="188181"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="real_To_Ang_cyclic_neg&#39;vc" expl="VC for real_To_Ang_cyclic_neg" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_To_Ang_cyclic_neg&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.35" steps="207296"/></proof>
  </goal>
  <goal name="real_To_Ang_cyclic_neg&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.21" steps="188186"/></proof>
  </goal>
  <goal name="real_To_Ang_cyclic_neg&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.41" steps="209667"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_equiv&#39;vc" expl="VC for real_to_ang_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="Requires">
   <goal name="real_to_ang_equiv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(0&lt;=k)">
    <goal name="real_to_ang_equiv&#39;vc.0.0.0" expl="true case (postcondition)" proved="true">
    <transf name="instantiate" proved="true" arg1="real_To_Ang_cyclic_pos" arg2="x,k">
     <goal name="real_to_ang_equiv&#39;vc.0.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="Hinst">
      <goal name="real_to_ang_equiv&#39;vc.0.0.0.0.0" expl="true case (postcondition)" proved="true">
      <proof prover="11"><result status="valid" time="0.36" steps="209869"/></proof>
      </goal>
      <goal name="real_to_ang_equiv&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.20" steps="188330"/></proof>
      </goal>
      <goal name="real_to_ang_equiv&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.21" steps="188330"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="real_to_ang_equiv&#39;vc.0.0.1" expl="false case (postcondition)" proved="true">
    <transf name="replace" proved="true" arg1="(real_to_ang x)" arg2="(ang_inv (real_to_ang (-.x)))">
     <goal name="real_to_ang_equiv&#39;vc.0.0.1.0" expl="false case (postcondition)" proved="true">
     <transf name="replace" proved="true" arg1="(real_to_ang x&#39;)" arg2="(ang_inv (real_to_ang (-.x&#39;)))">
      <goal name="real_to_ang_equiv&#39;vc.0.0.1.0.0" expl="false case (postcondition)" proved="true">
      <transf name="replace" proved="true" arg1="(-. x&#39;)" arg2="(-. x-. i_to_c k)">
       <goal name="real_to_ang_equiv&#39;vc.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
       <transf name="replace" proved="true" arg1="((-. x) -. i_to_c k)" arg2="((-. x) +. i_to_c(-k))">
        <goal name="real_to_ang_equiv&#39;vc.0.0.1.0.0.0.0" expl="false case (postcondition)" proved="true">
        <transf name="instantiate" proved="true" arg1="real_To_Ang_cyclic_pos" arg2="(-.x),(-k)">
         <goal name="real_to_ang_equiv&#39;vc.0.0.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
         <transf name="rewrite" proved="true" arg1="Hinst">
          <goal name="real_to_ang_equiv&#39;vc.0.0.1.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
          <proof prover="11"><result status="valid" time="0.40" steps="210688"/></proof>
          </goal>
          <goal name="real_to_ang_equiv&#39;vc.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="11"><result status="valid" time="0.36" steps="207517"/></proof>
          </goal>
          <goal name="real_to_ang_equiv&#39;vc.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="11"><result status="valid" time="0.35" steps="207208"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="real_to_ang_equiv&#39;vc.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.50" steps="235314"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="real_to_ang_equiv&#39;vc.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="0.46" steps="235199"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="real_to_ang_equiv&#39;vc.0.0.1.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="real_to_ang_inv">
       <goal name="real_to_ang_equiv&#39;vc.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
       <transf name="assert" proved="true" arg1="(forall o. ang_inv (ang_inv o) = o)">
        <goal name="real_to_ang_equiv&#39;vc.0.0.1.0.1.0.0" expl="asserted formula" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="real_to_ang_equiv&#39;vc.0.0.1.0.1.0.0.0" expl="asserted formula" proved="true">
         <transf name="replace" proved="true" arg1="o" arg2="(real_to_ang (ang_meas o))">
          <goal name="real_to_ang_equiv&#39;vc.0.0.1.0.1.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="11"><result status="valid" time="0.39" steps="207442"/></proof>
          </goal>
          <goal name="real_to_ang_equiv&#39;vc.0.0.1.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="11"><result status="valid" time="0.38" steps="207426"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="real_to_ang_equiv&#39;vc.0.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.37" steps="207487"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="real_to_ang_equiv&#39;vc.0.0.1.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.49" steps="234182"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="real_to_ang_equiv&#39;vc.0.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="1.21" steps="241632"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Real_zero_n" proved="true">
 <proof prover="11"><result status="valid" time="0.22" steps="188405"/></proof>
 </goal>
 <goal name="real_ang_mult_pos&#39;vc" expl="VC for real_ang_mult_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_ang_mult_pos&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.24" steps="188495"/></proof>
  </goal>
  <goal name="real_ang_mult_pos&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.23" steps="188467"/></proof>
  </goal>
  <goal name="real_ang_mult_pos&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.34" steps="207375"/></proof>
  </goal>
  <goal name="real_ang_mult_pos&#39;vc.3" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(i=0)">
   <goal name="real_ang_mult_pos&#39;vc.3.0" expl="true case (postcondition)" proved="true">
   <proof prover="11"><result status="valid" time="0.37" steps="210604"/></proof>
   </goal>
   <goal name="real_ang_mult_pos&#39;vc.3.1" expl="false case (postcondition)" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="real_ang_mult_pos&#39;vc.3.1.0" expl="false case (postcondition)" proved="true">
    <transf name="replace" proved="true" arg1="(i *.* real_to_ang phi)" arg2="((i-1) *.* real_to_ang phi +.+ real_to_ang phi)">
     <goal name="real_ang_mult_pos&#39;vc.3.1.0.0" expl="false case (postcondition)" proved="true">
     <transf name="destruct" proved="true" arg1="H">
      <goal name="real_ang_mult_pos&#39;vc.3.1.0.0.0" expl="false case (postcondition)" proved="true">
      <proof prover="11"><result status="valid" time="0.18" steps="188524"/></proof>
      </goal>
      <goal name="real_ang_mult_pos&#39;vc.3.1.0.0.1" expl="false case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="H">
       <goal name="real_ang_mult_pos&#39;vc.3.1.0.0.1.0" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="real_to_ang_add_rev">
        <goal name="real_ang_mult_pos&#39;vc.3.1.0.0.1.0.0" expl="false case (postcondition)" proved="true">
        <transf name="apply" proved="true" arg1="real_to_ang_eq">
         <goal name="real_ang_mult_pos&#39;vc.3.1.0.0.1.0.0.0" expl="apply premises" proved="true">
         <proof prover="11"><result status="valid" time="0.45" steps="235521"/></proof>
         </goal>
         <goal name="real_ang_mult_pos&#39;vc.3.1.0.0.1.0.0.1" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(i_to_c i)" arg2="(i_to_c (i-1)+. c_one)">
          <goal name="real_ang_mult_pos&#39;vc.3.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="2.01" steps="601555"/></proof>
          </goal>
          <goal name="real_ang_mult_pos&#39;vc.3.1.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
          <proof prover="11"><result status="valid" time="0.49" steps="235643"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="real_ang_mult_pos&#39;vc.3.1.0.0.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.58" steps="235127"/></proof>
        </goal>
        <goal name="real_ang_mult_pos&#39;vc.3.1.0.0.1.0.2" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.19" steps="188518"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="real_ang_mult_pos&#39;vc.3.1.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="ang_mult_int_plus_one_pos">
      <goal name="real_ang_mult_pos&#39;vc.3.1.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="0.22" steps="188523"/></proof>
      </goal>
      <goal name="real_ang_mult_pos&#39;vc.3.1.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.36" steps="207453"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="real_ang_mult&#39;vc" expl="VC for real_ang_mult" proved="true">
 <proof prover="11"><result status="valid" time="1.21" steps="250963"/></proof>
 </goal>
 <goal name="real_to_ang_down_cucles&#39;vc" expl="VC for real_to_ang_down_cucles" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_down_cucles&#39;vc.0" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="real_To_Ang_cyclic_pos" arg2="(phi -. x),1">
   <goal name="real_to_ang_down_cucles&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(phi -. x)" arg2="(phi +. (-.x))">
    <goal name="real_to_ang_down_cucles&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="real_to_ang_add">
     <goal name="real_to_ang_down_cucles&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(real_to_ang (-. x))" arg2="ang_zero">
      <goal name="real_to_ang_down_cucles&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="11"><result status="valid" time="0.38" steps="207844"/></proof>
      </goal>
      <goal name="real_to_ang_down_cucles&#39;vc.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="1.00" steps="242050"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="real_to_ang_down_cucles&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.22" steps="188656"/></proof>
     </goal>
     <goal name="real_to_ang_down_cucles&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.48" steps="234648"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="real_to_ang_down_cucles&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.36" steps="207857"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_to_real_to_ang&#39;vc" expl="VC for int_to_ang_to_real_to_ang" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_to_real_to_ang&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Requires">
   <goal name="int_to_ang_to_real_to_ang&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
    <goal name="int_to_ang_to_real_to_ang&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.66" steps="285027"/></proof>
    </goal>
    <goal name="int_to_ang_to_real_to_ang&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.25" steps="226031"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_to_int_to_ang&#39;vc" expl="VC for real_to_ang_to_int_to_ang" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_to_int_to_ang&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
   <goal name="real_to_ang_to_int_to_ang&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.60" steps="285156"/></proof>
   </goal>
   <goal name="real_to_ang_to_int_to_ang&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.24" steps="226141"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_to_int_to_ang_add&#39;vc" expl="VC for real_to_ang_to_int_to_ang_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_to_int_to_ang_add&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.30"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_to_real_to_ang_gen&#39;vc" expl="VC for int_to_ang_to_real_to_ang_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_to_real_to_ang_gen&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.64" steps="283561"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Int_To_Ang_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="Int_To_Ang_inv.0" proved="true">
  <transf name="case" proved="true" arg1="(0&lt;=n)">
   <goal name="Int_To_Ang_inv.0.0" expl="true case" proved="true">
   <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
    <goal name="Int_To_Ang_inv.0.0.0" expl="true case" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
     <goal name="Int_To_Ang_inv.0.0.0.0" expl="true case" proved="true">
     <transf name="replace" proved="true" arg1="(i_to_c (- k) /. i_to_c (power 2 n))" arg2="(-.(i_to_c k /. i_to_c (power 2 n)))">
      <goal name="Int_To_Ang_inv.0.0.0.0.0" expl="true case" proved="true">
      <proof prover="11"><result status="valid" time="1.26" steps="290925"/></proof>
      </goal>
      <goal name="Int_To_Ang_inv.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="0.63" steps="287401"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="Int_To_Ang_inv.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.25" steps="226459"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="Int_To_Ang_inv.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.25" steps="226459"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="Int_To_Ang_inv.0.1" expl="false case" proved="true">
   <transf name="assert" proved="true" arg1="(ang_inv (k /./ (-n)) = ((- k) /./ (-n)))">
    <goal name="Int_To_Ang_inv.0.1.0" expl="asserted formula" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
     <goal name="Int_To_Ang_inv.0.1.0.0" expl="asserted formula" proved="true">
     <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
      <goal name="Int_To_Ang_inv.0.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="11"><result status="valid" time="5.64" steps="1377779"/></proof>
      </goal>
      <goal name="Int_To_Ang_inv.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.41" steps="247472"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="Int_To_Ang_inv.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.43" steps="247472"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="Int_To_Ang_inv.0.1.1" expl="false case" proved="true">
    <proof prover="11"><result status="valid" time="1.38" steps="292144"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Int_To_Ang_inv_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="Int_To_Ang_inv_add.0" proved="true">
  <transf name="case" proved="true" arg1="(0&lt;=n)">
   <goal name="Int_To_Ang_inv_add.0.0" expl="true case" proved="true">
   <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
    <goal name="Int_To_Ang_inv_add.0.0.0" expl="true case" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
     <goal name="Int_To_Ang_inv_add.0.0.0.0" expl="true case" proved="true">
     <transf name="rewrite" proved="true" arg1="real_to_ang_add_rev">
      <goal name="Int_To_Ang_inv_add.0.0.0.0.0" expl="true case" proved="true">
      <proof prover="11"><result status="valid" time="2.95" steps="799268"/></proof>
      </goal>
      <goal name="Int_To_Ang_inv_add.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="1.10" steps="290279"/></proof>
      </goal>
      <goal name="Int_To_Ang_inv_add.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.66" steps="284701"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="Int_To_Ang_inv_add.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.29" steps="226508"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="Int_To_Ang_inv_add.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.27" steps="226508"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="Int_To_Ang_inv_add.0.1" expl="false case" proved="true">
   <transf name="assert" proved="true" arg1="( ((k /./ (-n)) +.+ ((- k) /./ (-n))) = ang_zero)">
    <goal name="Int_To_Ang_inv_add.0.1.0" expl="asserted formula" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
     <goal name="Int_To_Ang_inv_add.0.1.0.0" expl="asserted formula" proved="true">
     <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
      <goal name="Int_To_Ang_inv_add.0.1.0.0.0" expl="asserted formula" proved="true">
      <transf name="rewrite" proved="true" arg1="real_to_ang_add_rev">
       <goal name="Int_To_Ang_inv_add.0.1.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="11"><result status="valid" time="2.98" steps="780230"/></proof>
       </goal>
       <goal name="Int_To_Ang_inv_add.0.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="1.25" steps="290475"/></proof>
       </goal>
       <goal name="Int_To_Ang_inv_add.0.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.64" steps="284957"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="Int_To_Ang_inv_add.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.43" steps="247535"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="Int_To_Ang_inv_add.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.42" steps="247535"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="Int_To_Ang_inv_add.0.1.1" expl="false case" proved="true">
    <proof prover="11"><result status="valid" time="0.80" steps="285880"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Int_To_Ang_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="Int_To_Ang_add.0" proved="true">
  <transf name="case" proved="true" arg1="(0&lt;=n)">
   <goal name="Int_To_Ang_add.0.0" expl="true case" proved="true">
   <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
    <goal name="Int_To_Ang_add.0.0.0" expl="true case" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
     <goal name="Int_To_Ang_add.0.0.0.0" expl="true case" proved="true">
     <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
      <goal name="Int_To_Ang_add.0.0.0.0.0" expl="true case" proved="true">
      <transf name="replace" proved="true" arg1="(i_to_c (k + k&#39;) /. i_to_c (power 2 n))" arg2="((i_to_c k /. i_to_c (power 2 n)) +. (i_to_c k&#39; /. i_to_c (power 2 n)))
">
       <goal name="Int_To_Ang_add.0.0.0.0.0.0" expl="true case" proved="true">
       <proof prover="0"><result status="valid" time="0.37"/></proof>
       </goal>
       <goal name="Int_To_Ang_add.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
        <goal name="Int_To_Ang_add.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.67" steps="285439"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="Int_To_Ang_add.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.28" steps="226561"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="Int_To_Ang_add.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.27" steps="226561"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="Int_To_Ang_add.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.25" steps="226561"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="Int_To_Ang_add.0.1" expl="false case" proved="true">
   <transf name="assert" proved="true" arg1="(((-k) /./ (-n)) +.+ ((-k&#39;) /./ (-n)) = ((-(k + k&#39;)) /./ (-n)))">
    <goal name="Int_To_Ang_add.0.1.0" expl="asserted formula" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
     <goal name="Int_To_Ang_add.0.1.0.0" expl="asserted formula" proved="true">
     <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
      <goal name="Int_To_Ang_add.0.1.0.0.0" expl="asserted formula" proved="true">
      <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
       <goal name="Int_To_Ang_add.0.1.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="replace" proved="true" arg1="(- (k + k&#39;))" arg2="(-k+ (-k&#39;))">
        <goal name="Int_To_Ang_add.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
        <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
         <goal name="Int_To_Ang_add.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
         <proof prover="11"><result status="valid" time="0.63" steps="287288"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="Int_To_Ang_add.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.34" steps="226604"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="Int_To_Ang_add.0.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.39" steps="247615"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="Int_To_Ang_add.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.40" steps="247615"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="Int_To_Ang_add.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.40" steps="247615"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="Int_To_Ang_add.0.1.1" expl="false case" proved="true">
    <proof prover="0"><result status="valid" time="0.34"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Int_To_Ang_up" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="Int_To_Ang_up.0" proved="true">
  <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
   <goal name="Int_To_Ang_up.0.0" proved="true">
   <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
    <goal name="Int_To_Ang_up.0.0.0" proved="true">
    <transf name="apply" proved="true" arg1="real_to_ang_eq">
     <goal name="Int_To_Ang_up.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="1.05" steps="290422"/></proof>
     </goal>
     <goal name="Int_To_Ang_up.0.0.0.1" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(i_to_c (power 2 (n + 1)))" arg2="(ttwo *. i_to_c (power 2 n))">
      <goal name="Int_To_Ang_up.0.0.0.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
       <goal name="Int_To_Ang_up.0.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.73" steps="289704"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="Int_To_Ang_up.0.0.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="0.37"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="Int_To_Ang_up.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.55" steps="247675"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="Int_To_Ang_up.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.35" steps="226623"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Int_To_Ang_cyclic" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="Int_To_Ang_cyclic.0" proved="true">
  <transf name="case" proved="true" arg1="(0&lt;=n)">
   <goal name="Int_To_Ang_cyclic.0.0" expl="true case" proved="true">
   <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
    <goal name="Int_To_Ang_cyclic.0.0.0" expl="true case" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
     <goal name="Int_To_Ang_cyclic.0.0.0.0" expl="true case" proved="true">
     <transf name="replace" proved="true" arg1="(i_to_c (k + power 2 n) /. i_to_c (power 2 n))" arg2="((i_to_c k /. i_to_c (power 2 n)) +. c_one)">
      <goal name="Int_To_Ang_cyclic.0.0.0.0.0" expl="true case" proved="true">
      <proof prover="11"><result status="valid" time="1.18" steps="291368"/></proof>
      </goal>
      <goal name="Int_To_Ang_cyclic.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
       <goal name="Int_To_Ang_cyclic.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="0.65" steps="287862"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="Int_To_Ang_cyclic.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.29" steps="226721"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="Int_To_Ang_cyclic.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.28" steps="226721"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="Int_To_Ang_cyclic.0.1" expl="false case" proved="true">
   <transf name="assert" proved="true" arg1="( (k /./ (-n)) = ((k + power 2 n) /./ (-n)))">
    <goal name="Int_To_Ang_cyclic.0.1.0" expl="asserted formula" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
     <goal name="Int_To_Ang_cyclic.0.1.0.0" expl="asserted formula" proved="true">
     <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
      <goal name="Int_To_Ang_cyclic.0.1.0.0.0" expl="asserted formula" proved="true">
      <transf name="replace" proved="true" arg1="(i_to_c (k + power 2 n) /. i_to_c (power 2 n))" arg2="((i_to_c k /. i_to_c (power 2 n)) +. c_one)">
       <goal name="Int_To_Ang_cyclic.0.1.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="11"><result status="valid" time="0.28" steps="226794"/></proof>
       </goal>
       <goal name="Int_To_Ang_cyclic.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
        <goal name="Int_To_Ang_cyclic.0.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.28" steps="226776"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="Int_To_Ang_cyclic.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.27" steps="226746"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="Int_To_Ang_cyclic.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.30" steps="226746"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="Int_To_Ang_cyclic.0.1.1" expl="false case" proved="true">
    <proof prover="11"><result status="valid" time="0.30" steps="226792"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Zero_n" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="Zero_n.0" proved="true">
  <transf name="case" proved="true" arg1="(0&lt;=n)">
   <goal name="Zero_n.0.0" expl="true case" proved="true">
   <proof prover="11"><result status="valid" time="2.42" steps="649673"/></proof>
   </goal>
   <goal name="Zero_n.0.1" expl="false case" proved="true">
   <transf name="assert" proved="true" arg1="( (0 /./ (-n)) = ang_zero)">
    <goal name="Zero_n.0.1.0" expl="asserted formula" proved="true">
    <proof prover="11"><result status="valid" time="2.47" steps="650059"/></proof>
    </goal>
    <goal name="Zero_n.0.1.1" expl="false case" proved="true">
    <proof prover="11"><result status="valid" time="0.73" steps="285214"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="set_ang_minus_one_by_int&#39;vc" expl="VC for set_ang_minus_one_by_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_ang_minus_one_by_int&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.31" steps="235162"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_minus_one_from_real&#39;vc" expl="VC for ang_minus_one_from_real" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_minus_one_from_real&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.68" steps="282803"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_minus_one&#39;vc" expl="VC for ang_exp_minus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_minus_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="248041"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="set_ang_zero_by_int&#39;vc" expl="VC for set_ang_zero_by_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_ang_zero_by_int&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.47" steps="248378"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_minus_one_twice&#39;vc" expl="VC for ang_minus_one_twice" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_minus_one_twice&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.69" steps="283475"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="div_two&#39;vc" expl="VC for div_two" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="div_two&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.49" steps="248653"/></proof>
  </goal>
  <goal name="div_two&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.71" steps="285138"/></proof>
  </goal>
  <goal name="div_two&#39;vc.2" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="div_two&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="div_two&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="meas_value">
     <goal name="div_two&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.28" steps="228363"/></proof>
     </goal>
     <goal name="div_two&#39;vc.2.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.67" steps="287270"/></proof>
     </goal>
     <goal name="div_two&#39;vc.2.0.0.2" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="div_two&#39;vc.2.0.0.2.0" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.77" steps="287428"/></proof>
      </goal>
      <goal name="div_two&#39;vc.2.0.0.2.1" expl="rewrite premises" proved="true">
      <transf name="assert" proved="true" arg1="((ang_meas d /. ttwo) +. (ang_meas d /. ttwo) &lt;. c_one)">
       <goal name="div_two&#39;vc.2.0.0.2.1.0" expl="asserted formula" proved="true">
       <proof prover="11"><result status="valid" time="0.54" steps="253885"/></proof>
       </goal>
       <goal name="div_two&#39;vc.2.0.0.2.1.1" expl="rewrite premises" proved="true">
       <transf name="assert" proved="true" arg1="(ang_meas d /. ttwo &lt;=. ((ang_meas d /. ttwo) +. (ang_meas d /. ttwo)))">
        <goal name="div_two&#39;vc.2.0.0.2.1.1.0" expl="asserted formula" proved="true">
        <transf name="assert" proved="true" arg1="(c_zero +. ang_meas d /. ttwo &lt;=. ((ang_meas d /. ttwo) +. (ang_meas d /. ttwo)))">
         <goal name="div_two&#39;vc.2.0.0.2.1.1.0.0" expl="asserted formula" proved="true">
         <transf name="apply" proved="true" arg1="compat_order_add">
          <goal name="div_two&#39;vc.2.0.0.2.1.1.0.0.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.77" steps="287919"/></proof>
          </goal>
          <goal name="div_two&#39;vc.2.0.0.2.1.1.0.0.1" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.51" steps="249974"/></proof>
          </goal>
          <goal name="div_two&#39;vc.2.0.0.2.1.1.0.0.2" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.71" steps="287741"/></proof>
          </goal>
          <goal name="div_two&#39;vc.2.0.0.2.1.1.0.0.3" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.70" steps="287741"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="div_two&#39;vc.2.0.0.2.1.1.0.1" expl="asserted formula" proved="true">
         <proof prover="11"><result status="valid" time="0.52" steps="254054"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="div_two&#39;vc.2.0.0.2.1.1.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.49" steps="250004"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="div_two&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.79" steps="285640"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Div_two" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="Div_two.0" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="Div_two.0.0" proved="true">
   <transf name="rewrite" proved="true" arg1="div_two&#39;def">
    <goal name="Div_two.0.0.0" proved="true">
    <transf name="rewrite" proved="true" arg1="real_to_ang_add_rev">
     <goal name="Div_two.0.0.0.0" proved="true">
     <proof prover="11"><result status="valid" time="0.53" steps="253915"/></proof>
     </goal>
     <goal name="Div_two.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.69" steps="285857"/></proof>
     </goal>
     <goal name="Div_two.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.70" steps="285857"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="div_two_int_to_ang" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="div_two_int_to_ang.0" proved="true">
  <transf name="apply" proved="true" arg1="get_equal_angle_meas">
   <goal name="div_two_int_to_ang.0.0" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="div_two_int_to_ang.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="div_two&#39;spec1">
     <goal name="div_two_int_to_ang.0.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
      <goal name="div_two_int_to_ang.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
       <goal name="div_two_int_to_ang.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(i_to_c k /. i_to_c (power 2 (n + 1)))" arg2="((i_to_c k /. i_to_c (power 2 n)) *. (c_one /. i_to_c (power 2 1)))
">
        <goal name="div_two_int_to_ang.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.69" steps="323152"/></proof>
        </goal>
        <goal name="div_two_int_to_ang.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="mult_div_comm_rev">
         <goal name="div_two_int_to_ang.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="div_eq">
          <goal name="div_two_int_to_ang.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.56" steps="283355"/></proof>
          </goal>
          <goal name="div_two_int_to_ang.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.89" steps="322644"/></proof>
          </goal>
          <goal name="div_two_int_to_ang.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.71" steps="321058"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="div_two_int_to_ang.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="0.54" steps="284218"/></proof>
         </goal>
         <goal name="div_two_int_to_ang.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="0.58" steps="283362"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="div_two_int_to_ang.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.52" steps="282750"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="div_two_int_to_ang.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.32" steps="259913"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_mult&#39;vc" expl="VC for ang_exp_mult" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_mult&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="248996"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_modulus&#39;vc" expl="VC for ang_exp_modulus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_modulus&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="ang_exp_modulus&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_exp&#39;def">
    <goal name="ang_exp_modulus&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.49" steps="250297"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_not_one&#39;vc" expl="VC for ang_exp_not_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_not_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.68" steps="284578"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_not_by_modulus&#39;vc" expl="VC for ang_exp_not_by_modulus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_not_by_modulus&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.69" steps="285265"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="k_int_to_ang&#39;vc" expl="VC for k_int_to_ang" proved="true">
 <proof prover="11"><result status="valid" time="0.23" steps="227739"/></proof>
 </goal>
 <goal name="K_int_to_angplus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="K_int_to_angplus_one.0" proved="true">
  <transf name="rewrite" proved="true" arg1="k_int_to_ang&#39;def">
   <goal name="K_int_to_angplus_one.0.0" proved="true">
   <transf name="rewrite" proved="true" arg1="k_int_to_ang&#39;def">
    <goal name="K_int_to_angplus_one.0.0.0" proved="true">
    <proof prover="0"><result status="valid" time="0.28"/></proof>
    </goal>
    <goal name="K_int_to_angplus_one.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.28" steps="227840"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="K_int_to_angplus_one.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.47" steps="249124"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="phase_inv_pre&#39;vc" expl="VC for phase_inv_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="phase_inv_pre&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="227976"/></proof>
  </goal>
  <goal name="phase_inv_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.49" steps="249322"/></proof>
  </goal>
  <goal name="phase_inv_pre&#39;vc.2" expl="postcondition" proved="true">
  <transf name="eliminate_if" proved="true" >
   <goal name="phase_inv_pre&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="phase_inv_pre&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(i = 0)">
     <goal name="phase_inv_pre&#39;vc.2.0.0.0" expl="true case (postcondition)" proved="true">
     <proof prover="11"><result status="valid" time="0.28" steps="230418"/></proof>
     </goal>
     <goal name="phase_inv_pre&#39;vc.2.0.0.1" expl="false case (postcondition)" proved="true">
     <transf name="assert" proved="true" arg1="(mod (i-1) 2 = 1)">
      <goal name="phase_inv_pre&#39;vc.2.0.0.1.0" expl="asserted formula" proved="true">
      <proof prover="11"><result status="valid" time="0.51" steps="252375"/></proof>
      </goal>
      <goal name="phase_inv_pre&#39;vc.2.0.0.1.1" expl="false case (postcondition)" proved="true">
      <transf name="eliminate_let" proved="true" >
       <goal name="phase_inv_pre&#39;vc.2.0.0.1.1.0" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="H1">
        <goal name="phase_inv_pre&#39;vc.2.0.0.1.1.0.0" expl="false case (postcondition)" proved="true">
        <proof prover="11"><result status="valid" time="0.37" steps="252445"/></proof>
        </goal>
        <goal name="phase_inv_pre&#39;vc.2.0.0.1.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.29" steps="230441"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="phase_inv_pre&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.49" steps="250369"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="phase_inv_&#39;vc" expl="VC for phase_inv_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="phase_inv_&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.28" steps="228329"/></proof>
  </goal>
  <goal name="phase_inv_&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="249642"/></proof>
  </goal>
  <goal name="phase_inv_&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.50" steps="250661"/></proof>
  </goal>
  <goal name="phase_inv_&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.49" steps="250649"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="infix -^&#39;vc" expl="VC for infix -^" proved="true">
 <proof prover="11"><result status="valid" time="0.29" steps="228801"/></proof>
 </goal>
 <goal name="Even_phase_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="Even_phase_inv.0" proved="true">
  <proof prover="9"><result status="valid" time="1.16" steps="50213"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Odd_phase_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="Odd_phase_inv.0" proved="true">
  <proof prover="9"><result status="valid" time="1.13" steps="50047"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Gen_phase_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="Gen_phase_inv.0" proved="true">
  <transf name="case" proved="true" arg1="(mod i 2 = 0)">
   <goal name="Gen_phase_inv.0.0" expl="true case" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="Gen_phase_inv.0.0.0" expl="true case" proved="true">
    <transf name="rewrite" proved="true" arg1="power_minus_one1">
     <goal name="Gen_phase_inv.0.0.0.0" expl="true case" proved="true">
     <proof prover="9"><result status="valid" time="0.98" steps="50675"/></proof>
     </goal>
     <goal name="Gen_phase_inv.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.31" steps="262566"/></proof>
     </goal>
     <goal name="Gen_phase_inv.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.32" steps="262566"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="Gen_phase_inv.0.1" expl="false case" proved="true">
   <proof prover="0"><result status="valid" time="0.32"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Gen_phase_inv_neg" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="Gen_phase_inv_neg.0" proved="true">
  <transf name="case" proved="true" arg1="(mod i 2 = 0)">
   <goal name="Gen_phase_inv_neg.0.0" expl="true case" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="Gen_phase_inv_neg.0.0.0" expl="true case" proved="true">
    <transf name="rewrite" proved="true" arg1="power_minus_one1">
     <goal name="Gen_phase_inv_neg.0.0.0.0" expl="true case" proved="true">
     <proof prover="9"><result status="valid" time="1.16" steps="50752"/></proof>
     </goal>
     <goal name="Gen_phase_inv_neg.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.55" steps="285851"/></proof>
     </goal>
     <goal name="Gen_phase_inv_neg.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.56" steps="286520"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="Gen_phase_inv_neg.0.1" expl="false case" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="Gen_phase_inv_neg.0.1.0" expl="false case" proved="true">
    <transf name="rewrite" proved="true" arg1="power_minus_one">
     <goal name="Gen_phase_inv_neg.0.1.0.0" expl="false case" proved="true">
     <proof prover="0"><result status="valid" time="0.37"/></proof>
     </goal>
     <goal name="Gen_phase_inv_neg.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.56" steps="285772"/></proof>
     </goal>
     <goal name="Gen_phase_inv_neg.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.56" steps="286467"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Ang_exp_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="Ang_exp_inv.0" proved="true">
  <transf name="replace" proved="true" arg1="(ang_inv o)" arg2="(ang_inv (real_to_ang (ang_meas o)))">
   <goal name="Ang_exp_inv.0.0" proved="true">
   <transf name="rewrite" proved="true" arg1="Real_To_Ang_inv">
    <goal name="Ang_exp_inv.0.0.0" proved="true">
    <transf name="case" proved="true" arg1="(ang_meas o = c_zero)">
     <goal name="Ang_exp_inv.0.0.0.0" expl="true case" proved="true">
     <proof prover="11"><result status="valid" time="0.69" steps="288507"/></proof>
     </goal>
     <goal name="Ang_exp_inv.0.0.0.1" expl="false case" proved="true">
     <transf name="replace" proved="true" arg1="(ang_exp (real_to_ang (-. ang_meas o)))" arg2="(ang_exp (real_to_ang (c_one -. ang_meas o)))">
      <goal name="Ang_exp_inv.0.0.0.1.0" expl="false case" proved="true">
      <transf name="eliminate_definition" proved="true" >
       <goal name="Ang_exp_inv.0.0.0.1.0.0" expl="false case" proved="true">
       <transf name="rewrite" proved="true" arg1="ang_exp&#39;def">
        <goal name="Ang_exp_inv.0.0.0.1.0.0.0" expl="false case" proved="true">
        <transf name="rewrite" proved="true" arg1="meas_value">
         <goal name="Ang_exp_inv.0.0.0.1.0.0.0.0" expl="false case" proved="true">
         <transf name="replace" proved="true" arg1="(exp (two_pi_i *. (c_one -. ang_meas o)))" arg2="(exp (-. (two_pi_i *.  ang_meas o)))">
          <goal name="Ang_exp_inv.0.0.0.1.0.0.0.0.0" expl="false case" proved="true">
          <proof prover="11"><result status="valid" time="0.61" steps="292380"/></proof>
          </goal>
          <goal name="Ang_exp_inv.0.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="replace" proved="true" arg1="(c_one -. ang_meas o)" arg2="(c_one +. (-. ang_meas o))">
           <goal name="Ang_exp_inv.0.0.0.1.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
            <goal name="Ang_exp_inv.0.0.0.1.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="exp_sum">
             <goal name="Ang_exp_inv.0.0.0.1.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
             <proof prover="11"><result status="valid" time="0.60" steps="256889"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="Ang_exp_inv.0.0.0.1.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
           <proof prover="11"><result status="valid" time="0.51" steps="252911"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="Ang_exp_inv.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="0.69" steps="289139"/></proof>
         </goal>
         <goal name="Ang_exp_inv.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="Ang_exp_inv.0.0.0.1.0.0.0.2.0" proved="true">
          <proof prover="11"><result status="valid" time="0.69" steps="289288"/></proof>
          </goal>
          <goal name="Ang_exp_inv.0.0.0.1.0.0.0.2.1" proved="true">
          <transf name="assert" proved="true" arg1="( c_zero &lt;. ang_meas o )">
           <goal name="Ang_exp_inv.0.0.0.1.0.0.0.2.1.0" expl="asserted formula" proved="true">
           <proof prover="11"><result status="valid" time="0.92" steps="293535"/></proof>
           </goal>
           <goal name="Ang_exp_inv.0.0.0.1.0.0.0.2.1.1" proved="true">
           <transf name="assert" proved="true" arg1="((-. ang_meas o)   &lt;. c_zero )">
            <goal name="Ang_exp_inv.0.0.0.1.0.0.0.2.1.1.0" expl="asserted formula" proved="true">
            <proof prover="11"><result status="valid" time="1.04" steps="297563"/></proof>
            </goal>
            <goal name="Ang_exp_inv.0.0.0.1.0.0.0.2.1.1.1" proved="true">
            <transf name="assert" proved="true" arg1="((-. ang_meas o) +. c_one  &lt;. c_zero +. c_one)">
             <goal name="Ang_exp_inv.0.0.0.1.0.0.0.2.1.1.1.0" expl="asserted formula" proved="true">
             <proof prover="11"><result status="valid" time="0.68" steps="291131"/></proof>
             </goal>
             <goal name="Ang_exp_inv.0.0.0.1.0.0.0.2.1.1.1.1" proved="true">
             <proof prover="11"><result status="valid" time="0.82" steps="291913"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="Ang_exp_inv.0.0.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="0.71" steps="287858"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="Ang_exp_inv.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.52" steps="251575"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="Ang_exp_inv.0.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.50" steps="254248"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_inv_to_conjugate&#39;vc" expl="VC for ang_inv_to_conjugate" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_inv_to_conjugate&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="ang_inv_to_conjugate&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="conjugate_module_one">
    <goal name="ang_inv_to_conjugate&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ang_exp_inv">
     <goal name="ang_inv_to_conjugate&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="(/.)&#39;def">
      <goal name="ang_inv_to_conjugate&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="one_mult_t">
       <goal name="ang_inv_to_conjugate&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.29" steps="231088"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="ang_inv_to_conjugate&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.52" steps="252901"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="ang_inv_to_conjugate&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.52" steps="252908"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="exp_minus&#39;vc" expl="VC for exp_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="exp_minus&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(im *. (-. x))" arg2="(-. (im*.x))">
   <goal name="exp_minus&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="exp_inv">
    <goal name="exp_minus&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="conjugate_module_one">
     <goal name="exp_minus&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="(/.)&#39;def">
      <goal name="exp_minus&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="11"><result status="valid" time="0.51" steps="251718"/></proof>
      </goal>
      <goal name="exp_minus&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.51" steps="251712"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="exp_minus&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.51" steps="251716"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="exp_minus&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.49" steps="251712"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="exp_minus&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.46" steps="251729"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_to_ang_inv&#39;vc" expl="VC for conjugate_to_ang_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conjugate_to_ang_inv&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.44" steps="251808"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="conjugate_inv_elim&#39;vc" expl="VC for conjugate_inv_elim" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conjugate_inv_elim&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ang_inv_to_conjugate">
   <goal name="conjugate_inv_elim&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.42" steps="251847"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_neg_conjugate&#39;vc" expl="VC for ang_exp_neg_conjugate" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_neg_conjugate&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="real_to_ang_inv">
   <goal name="ang_exp_neg_conjugate&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_inv_to_conjugate">
    <goal name="ang_exp_neg_conjugate&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.24" steps="230146"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ang_exp_neg_conjugate&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.25" steps="230148"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_neg_conjugate_rev&#39;vc" expl="VC for ang_exp_neg_conjugate_rev" proved="true">
 <proof prover="11"><result status="valid" time="0.41" steps="251694"/></proof>
 </goal>
 <goal name="ang_mult_int_in&#39;vc" expl="VC for ang_mult_int_in" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int_in&#39;vc.0" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(0&lt;=n)">
   <goal name="ang_mult_int_in&#39;vc.0.0" expl="true case (postcondition)" proved="true">
   <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
    <goal name="ang_mult_int_in&#39;vc.0.0.0" expl="true case (postcondition)" proved="true">
    <transf name="rewrite" proved="true" arg1="real_ang_mult">
     <goal name="ang_mult_int_in&#39;vc.0.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
      <goal name="ang_mult_int_in&#39;vc.0.0.0.0.0" expl="true case (postcondition)" proved="true">
      <transf name="apply" proved="true" arg1="real_to_ang_eq">
       <goal name="ang_mult_int_in&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.41"/></proof>
       </goal>
       <goal name="ang_mult_int_in&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
        <goal name="ang_mult_int_in&#39;vc.0.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.68" steps="293687"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="ang_mult_int_in&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.34" steps="230289"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="ang_mult_int_in&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="1.12" steps="295948"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ang_mult_int_in&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.32" steps="230289"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ang_mult_int_in&#39;vc.0.1" expl="false case (postcondition)" proved="true">
   <transf name="replace" proved="true" arg1="n" arg2="(- - n)">
    <goal name="ang_mult_int_in&#39;vc.0.1.0" expl="false case (postcondition)" proved="true">
    <transf name="replace" proved="true" arg1="(i *.* (k /./ (- (- n))))" arg2="(i *.* (-k /./ ( (- n))))">
     <goal name="ang_mult_int_in&#39;vc.0.1.0.0" expl="false case (postcondition)" proved="true">
     <transf name="replace" proved="true" arg1="((i * k) /./ (- (- n)))" arg2="(-(i * k) /./ ( (- n)))">
      <goal name="ang_mult_int_in&#39;vc.0.1.0.0.0" expl="false case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
       <goal name="ang_mult_int_in&#39;vc.0.1.0.0.0.0" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="real_ang_mult">
        <goal name="ang_mult_int_in&#39;vc.0.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
        <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
         <goal name="ang_mult_int_in&#39;vc.0.1.0.0.0.0.0.0" expl="false case (postcondition)" proved="true">
         <transf name="apply" proved="true" arg1="real_to_ang_eq">
          <goal name="ang_mult_int_in&#39;vc.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.64" steps="294944"/></proof>
          </goal>
          <goal name="ang_mult_int_in&#39;vc.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="i_to_c_minus">
           <goal name="ang_mult_int_in&#39;vc.0.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="i_to_c_minus">
            <goal name="ang_mult_int_in&#39;vc.0.1.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
             <goal name="ang_mult_int_in&#39;vc.0.1.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
             <proof prover="11"><result status="valid" time="0.71" steps="294881"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="ang_mult_int_in&#39;vc.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="0.41" steps="251748"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="ang_mult_int_in&#39;vc.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.64" steps="290225"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="ang_mult_int_in&#39;vc.0.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.59" steps="251748"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="ang_mult_int_in&#39;vc.0.1.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="0.63" steps="290245"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="ang_mult_int_in&#39;vc.0.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.66" steps="290376"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ang_mult_int_in&#39;vc.0.1.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.34" steps="230312"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_mult_int_out&#39;vc" expl="VC for ang_mult_int_out" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int_out&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.07" steps="49712"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_cycles&#39;vc" expl="VC for int_to_ang_cycles" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_cycles&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.27" steps="230520"/></proof>
  </goal>
  <goal name="int_to_ang_cycles&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.27" steps="230492"/></proof>
  </goal>
  <goal name="int_to_ang_cycles&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="252043"/></proof>
  </goal>
  <goal name="int_to_ang_cycles&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.22"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_eq&#39;vc" expl="VC for int_to_ang_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_eq&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.32" steps="239069"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_cycles_neg&#39;vc" expl="VC for int_to_ang_cycles_neg" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_cycles_neg&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.27" steps="230794"/></proof>
  </goal>
  <goal name="int_to_ang_cycles_neg&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.27" steps="230752"/></proof>
  </goal>
  <goal name="int_to_ang_cycles_neg&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.45" steps="252299"/></proof>
  </goal>
  <goal name="int_to_ang_cycles_neg&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.22"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_cycles_gen&#39;vc" expl="VC for int_to_ang_cycles_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_cycles_gen&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="230840"/></proof>
  </goal>
  <goal name="int_to_ang_cycles_gen&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="230843"/></proof>
  </goal>
  <goal name="int_to_ang_cycles_gen&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.28" steps="230844"/></proof>
  </goal>
  <goal name="int_to_ang_cycles_gen&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.45" steps="252325"/></proof>
  </goal>
  <goal name="int_to_ang_cycles_gen&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.28" steps="230875"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_cycles_zero&#39;vc" expl="VC for int_to_ang_cycles_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_cycles_zero&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.28" steps="230948"/></proof>
  </goal>
  <goal name="int_to_ang_cycles_zero&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.69" steps="289358"/></proof>
  </goal>
  <goal name="int_to_ang_cycles_zero&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="231019"/></proof>
  </goal>
  <goal name="int_to_ang_cycles_zero&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="231023"/></proof>
  </goal>
  <goal name="int_to_ang_cycles_zero&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.50" steps="252877"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_cycles_zero_mult&#39;vc" expl="VC for int_to_ang_cycles_zero_mult" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_cycles_zero_mult&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="231064"/></proof>
  </goal>
  <goal name="int_to_ang_cycles_zero_mult&#39;vc.1" expl="assertion" proved="true">
  <transf name="replace" proved="true" arg1="(power 2 n&#39;)" arg2="(0 + (power 2 (n&#39; - n) * power 2 n))">
   <goal name="int_to_ang_cycles_zero_mult&#39;vc.1.0" expl="assertion" proved="true">
   <transf name="instantiate" proved="true" arg1="int_to_ang_cycles" arg2="0,n,(power 2 (n&#39; - n))">
    <goal name="int_to_ang_cycles_zero_mult&#39;vc.1.0.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_mult_int_out">
     <goal name="int_to_ang_cycles_zero_mult&#39;vc.1.0.0.0" expl="assertion" proved="true">
     <transf name="rewrite" proved="true" arg1="Hinst">
      <goal name="int_to_ang_cycles_zero_mult&#39;vc.1.0.0.0.0" expl="assertion" proved="true">
      <proof prover="11"><result status="valid" time="0.82" steps="293724"/></proof>
      </goal>
      <goal name="int_to_ang_cycles_zero_mult&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.29" steps="231167"/></proof>
      </goal>
      <goal name="int_to_ang_cycles_zero_mult&#39;vc.1.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.70" steps="293046"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="int_to_ang_cycles_zero_mult&#39;vc.1.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.29" steps="231167"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="int_to_ang_cycles_zero_mult&#39;vc.1.1" expl="equality hypothesis" proved="true">
   <proof prover="9"><result status="valid" time="1.05" steps="54246"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="int_to_ang_cycles_zero_mult&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.48" steps="252987"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_cycles_zero_mult_&#39;vc" expl="VC for int_to_ang_cycles_zero_mult_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_cycles_zero_mult_&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="231190"/></proof>
  </goal>
  <goal name="int_to_ang_cycles_zero_mult_&#39;vc.1" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="int_to_ang_cycles_zero_mult">
   <goal name="int_to_ang_cycles_zero_mult_&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="11"><result status="valid" time="0.48" steps="253092"/></proof>
   </goal>
   <goal name="int_to_ang_cycles_zero_mult_&#39;vc.1.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.29" steps="231215"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="int_to_ang_cycles_zero_mult_&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="253146"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_up&#39;vc" expl="VC for int_to_ang_up" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_up&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.47" steps="253002"/></proof>
  </goal>
  <goal name="int_to_ang_up&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.28" steps="231414"/></proof>
  </goal>
  <goal name="int_to_ang_up&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.27" steps="231393"/></proof>
  </goal>
  <goal name="int_to_ang_up&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.48" steps="253071"/></proof>
  </goal>
  <goal name="int_to_ang_up&#39;vc.4" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
   <goal name="int_to_ang_up&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
    <goal name="int_to_ang_up&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="real_to_ang_eq">
     <goal name="int_to_ang_up&#39;vc.4.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
      <goal name="int_to_ang_up&#39;vc.4.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="real_div">
       <goal name="int_to_ang_up&#39;vc.4.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="1.69" steps="316694"/></proof>
       </goal>
       <goal name="int_to_ang_up&#39;vc.4.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.72" steps="293251"/></proof>
       </goal>
       <goal name="int_to_ang_up&#39;vc.4.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.47" steps="253417"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="int_to_ang_up&#39;vc.4.0.0.1" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="power_sum">
      <goal name="int_to_ang_up&#39;vc.4.0.0.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
       <goal name="int_to_ang_up&#39;vc.4.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
        <goal name="int_to_ang_up&#39;vc.4.0.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="0.62" steps="2767012"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="int_to_ang_up&#39;vc.4.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.29" steps="231434"/></proof>
      </goal>
      <goal name="int_to_ang_up&#39;vc.4.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.30" steps="231434"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="int_to_ang_up&#39;vc.4.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.29" steps="231434"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="int_to_ang_up&#39;vc.4.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.45" steps="253132"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_mod&#39;vc" expl="VC for int_to_ang_mod" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_mod&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.71" steps="289845"/></proof>
  </goal>
  <goal name="int_to_ang_mod&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.66" steps="290102"/></proof>
  </goal>
  <goal name="int_to_ang_mod&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.73" steps="290102"/></proof>
  </goal>
  <goal name="int_to_ang_mod&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="231506"/></proof>
  </goal>
  <goal name="int_to_ang_mod&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="253493"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_equiv&#39;vc" expl="VC for int_to_ang_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="decomp" arg2="k2,(power 2 n1)">
   <goal name="int_to_ang_equiv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Hinst">
    <goal name="int_to_ang_equiv&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.26"/></proof>
    </goal>
    <goal name="int_to_ang_equiv&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.67" steps="290570"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_red&#39;vc" expl="VC for int_to_ang_red" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_red&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.17" steps="51738"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_bin_rev&#39;vc" expl="VC for int_to_ang_bin_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_bin_rev&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="int_to_ang_mod">
   <goal name="int_to_ang_bin_rev&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="goal_comm">
    <goal name="int_to_ang_bin_rev&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_ang_mod">
     <goal name="int_to_ang_bin_rev&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="Requires">
      <goal name="int_to_ang_bin_rev&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.43"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="int_to_ang_bin_rev&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.29" steps="232279"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="int_to_ang_bin_rev&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.29" steps="232279"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_bin_rev_&#39;vc" expl="VC for int_to_ang_bin_rev_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_bin_rev_&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.21" steps="53574"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_add_rev&#39;vc" expl="VC for int_to_ang_add_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_add_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.16" steps="50133"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_ind_isum_plus_one&#39;vc" expl="VC for int_to_ang_ind_isum_plus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_ind_isum_plus_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.83" steps="329039"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_ind_isum_plus_one_rev&#39;vc" expl="VC for int_to_ang_ind_isum_plus_one_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_ind_isum_plus_one_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.83" steps="329214"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_ind_isum_right_extension&#39;vc" expl="VC for int_to_ang_ind_isum_right_extension" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_ind_isum_right_extension&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.82" steps="329449"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_ind_isum_right_extension_rev&#39;vc" expl="VC for int_to_ang_ind_isum_right_extension_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_ind_isum_right_extension_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.81" steps="329644"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="minus_int_to_ang_ind_isum_plus_one&#39;vc" expl="VC for minus_int_to_ang_ind_isum_plus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="minus_int_to_ang_ind_isum_plus_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.33"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="minus_int_to_ang_ind_isum_plus_one_rev&#39;vc" expl="VC for minus_int_to_ang_ind_isum_plus_one_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="minus_int_to_ang_ind_isum_plus_one_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.03" steps="52034"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="minus_int_to_ang_ind_isum_right_extension&#39;vc" expl="VC for minus_int_to_ang_ind_isum_right_extension" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="minus_int_to_ang_ind_isum_right_extension&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.33"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="minus_int_to_ang_ind_isum_right_extension_rev&#39;vc" expl="VC for minus_int_to_ang_ind_isum_right_extension_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="minus_int_to_ang_ind_isum_right_extension_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.09" steps="52280"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_simpl&#39;vc" expl="VC for int_to_ang_simpl" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_simpl&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.12" steps="51412"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_add_eq&#39;vc" expl="VC for ang_add_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_add_eq&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="243291"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_add_comm&#39;vc" expl="VC for ang_add_comm" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_add_comm&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="256754"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_add_eq_comm&#39;vc" expl="VC for ang_add_eq_comm" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_add_eq_comm&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.45" steps="256561"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_add_switch&#39;vc" expl="VC for ang_add_switch" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_add_switch&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="0.09" steps="1667"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_mult_int_zero&#39;vc" expl="VC for ang_mult_int_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int_zero&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="2.60" steps="671102"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_div&#39;vc" expl="VC for ang_div" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_div&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="ang_div&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.80" steps="2779087"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_zero_add&#39;vc" expl="VC for ang_zero_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_zero_add&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.50" steps="257195"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_rev&#39;vc" expl="VC for int_to_ang_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_rev&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="int_to_ang_rev&#39;vc.0.0" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="n" arg2="(1+m)">
    <goal name="int_to_ang_rev&#39;vc.0.0.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_ang_up">
     <goal name="int_to_ang_rev&#39;vc.0.0.0.0" expl="assertion" proved="true">
     <proof prover="11"><result status="valid" time="0.28" steps="235380"/></proof>
     </goal>
     <goal name="int_to_ang_rev&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.29" steps="235389"/></proof>
     </goal>
     <goal name="int_to_ang_rev&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.44" steps="257037"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="int_to_ang_rev&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.25" steps="235396"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="int_to_ang_rev&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="235441"/></proof>
  </goal>
  <goal name="int_to_ang_rev&#39;vc.2" expl="assertion" proved="true">
  <transf name="replace" proved="true" arg1="n" arg2="(1+m)">
   <goal name="int_to_ang_rev&#39;vc.2.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="int_to_ang_up">
    <goal name="int_to_ang_rev&#39;vc.2.0.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_ang_mod">
     <goal name="int_to_ang_rev&#39;vc.2.0.0.0" expl="assertion" proved="true">
     <transf name="replace" proved="true" arg1="(mod ((- k) * l) (power 2 1))" arg2="0">
      <goal name="int_to_ang_rev&#39;vc.2.0.0.0.0" expl="assertion" proved="true">
      <proof prover="11"><result status="valid" time="0.28" steps="235472"/></proof>
      </goal>
      <goal name="int_to_ang_rev&#39;vc.2.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(power 2 1)" arg2="2">
       <goal name="int_to_ang_rev&#39;vc.2.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="0.28" steps="235474"/></proof>
       </goal>
       <goal name="int_to_ang_rev&#39;vc.2.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="0.68" steps="257872"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="int_to_ang_rev&#39;vc.2.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.27" steps="235481"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="int_to_ang_rev&#39;vc.2.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.28" steps="235481"/></proof>
    </goal>
    <goal name="int_to_ang_rev&#39;vc.2.0.2" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.47" steps="257558"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="int_to_ang_rev&#39;vc.2.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.28" steps="235488"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="int_to_ang_rev&#39;vc.3" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="235492"/></proof>
  </goal>
  <goal name="int_to_ang_rev&#39;vc.4" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.67" steps="298078"/></proof>
  </goal>
  <goal name="int_to_ang_rev&#39;vc.5" expl="assertion" proved="true">
  <transf name="replace" proved="true" arg1="n" arg2="(1+m)">
   <goal name="int_to_ang_rev&#39;vc.5.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="int_to_ang_up">
    <goal name="int_to_ang_rev&#39;vc.5.0.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_ang_mod">
     <goal name="int_to_ang_rev&#39;vc.5.0.0.0" expl="assertion" proved="true">
     <transf name="replace" proved="true" arg1="(mod ((- k) * l) (power 2 1))" arg2="1">
      <goal name="int_to_ang_rev&#39;vc.5.0.0.0.0" expl="assertion" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="int_to_ang_rev&#39;vc.5.0.0.0.0.0" expl="assertion" proved="true">
       <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
        <goal name="int_to_ang_rev&#39;vc.5.0.0.0.0.0.0" expl="assertion" proved="true">
        <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
         <goal name="int_to_ang_rev&#39;vc.5.0.0.0.0.0.0.0" expl="assertion" proved="true">
         <proof prover="11"><result status="valid" time="2.59" steps="708742"/></proof>
         </goal>
         <goal name="int_to_ang_rev&#39;vc.5.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="0.29" steps="235486"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="int_to_ang_rev&#39;vc.5.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.31" steps="235486"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="int_to_ang_rev&#39;vc.5.0.0.0.0.1" expl="assertion" proved="true">
       <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
        <goal name="int_to_ang_rev&#39;vc.5.0.0.0.0.1.0" expl="assertion" proved="true">
        <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
         <goal name="int_to_ang_rev&#39;vc.5.0.0.0.0.1.0.0" expl="assertion" proved="true">
         <proof prover="11"><result status="valid" time="2.84" steps="708742"/></proof>
         </goal>
         <goal name="int_to_ang_rev&#39;vc.5.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="0.35" steps="235486"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="int_to_ang_rev&#39;vc.5.0.0.0.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.34" steps="235486"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="int_to_ang_rev&#39;vc.5.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="12"><result status="valid" time="8.89" steps="3056727"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="int_to_ang_rev&#39;vc.5.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.34" steps="235486"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="int_to_ang_rev&#39;vc.5.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.34" steps="235486"/></proof>
    </goal>
    <goal name="int_to_ang_rev&#39;vc.5.0.2" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.55" steps="257275"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="int_to_ang_rev&#39;vc.5.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.36" steps="235493"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="int_to_ang_rev&#39;vc.6" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.55" steps="257432"/></proof>
  </goal>
  <goal name="int_to_ang_rev&#39;vc.7" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.82" steps="297975"/></proof>
  </goal>
  <goal name="int_to_ang_rev&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="int_to_ang_rev&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.55" steps="257636"/></proof>
   </goal>
   <goal name="int_to_ang_rev&#39;vc.8.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.50" steps="257708"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_rev_&#39;vc" expl="VC for int_to_ang_rev_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_rev_&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="235642"/></proof>
  </goal>
  <goal name="int_to_ang_rev_&#39;vc.1" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="235643"/></proof>
  </goal>
  <goal name="int_to_ang_rev_&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.29" steps="235648"/></proof>
  </goal>
  <goal name="int_to_ang_rev_&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.28" steps="235652"/></proof>
  </goal>
  <goal name="int_to_ang_rev_&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.25" steps="235655"/></proof>
  </goal>
  <goal name="int_to_ang_rev_&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.27" steps="235712"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_add_zero_d&#39;vc" expl="VC for ang_add_zero_d" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_add_zero_d&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.60" steps="257833"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_distr_minus&#39;vc" expl="VC for real_to_ang_distr_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_distr_minus&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="real_to_ang_distr_minus&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="real_ang_mult">
    <goal name="real_to_ang_distr_minus&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="real_to_ang_add_rev">
     <goal name="real_to_ang_distr_minus&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="real_to_ang_eq">
      <goal name="real_to_ang_distr_minus&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="1.53" steps="326360"/></proof>
      </goal>
      <goal name="real_to_ang_distr_minus&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(forall a b c. (a-. b) *. c = a*. c +. (-. b*.c))">
       <goal name="real_to_ang_distr_minus&#39;vc.0.0.0.0.1.0" expl="asserted formula" proved="true">
       <proof prover="11"><result status="valid" time="0.69" steps="305849"/></proof>
       </goal>
       <goal name="real_to_ang_distr_minus&#39;vc.0.0.0.0.1.1" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="h">
        <goal name="real_to_ang_distr_minus&#39;vc.0.0.0.0.1.1.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.75" steps="314954"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="real_to_ang_distr_minus&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.74" steps="309710"/></proof>
     </goal>
     <goal name="real_to_ang_distr_minus&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.72" steps="309745"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="real_to_ang_distr_minus&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.68" steps="303792"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_mult_int_exp_pos&#39;vc" expl="VC for ang_mult_int_exp_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int_exp_pos&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.43" steps="257890"/></proof>
  </goal>
  <goal name="ang_mult_int_exp_pos&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="236199"/></proof>
  </goal>
  <goal name="ang_mult_int_exp_pos&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.25" steps="236185"/></proof>
  </goal>
  <goal name="ang_mult_int_exp_pos&#39;vc.3" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="ang_mult_int_exp_pos&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.50" steps="260859"/></proof>
   </goal>
   <goal name="ang_mult_int_exp_pos&#39;vc.3.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ang_mult_int_exp_pos&#39;vc.3.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="ang_mult_int_exp_pos&#39;vc.3.1.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="( cpower (ang_exp o) i)" arg2="( cpower (ang_exp o) (i-1+1))">
      <goal name="ang_mult_int_exp_pos&#39;vc.3.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="cpower_plus_one">
       <goal name="ang_mult_int_exp_pos&#39;vc.3.1.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="11"><result status="valid" time="0.69" steps="295649"/></proof>
       </goal>
       <goal name="ang_mult_int_exp_pos&#39;vc.3.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.45" steps="257948"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="ang_mult_int_exp_pos&#39;vc.3.1.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="0.26" steps="236238"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_mult_int_exp&#39;vc" expl="VC for ang_mult_int_exp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int_exp&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.25" steps="236190"/></proof>
  </goal>
  <goal name="ang_mult_int_exp&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.60" steps="257873"/></proof>
  </goal>
  <goal name="ang_mult_int_exp&#39;vc.2" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="ang_mult_int_exp&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_mult_int_to_real_to_ang">
    <goal name="ang_mult_int_exp&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="real_to_ang_value">
     <goal name="ang_mult_int_exp&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ang_exp&#39;def">
      <goal name="ang_mult_int_exp&#39;vc.2.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="cpower_to_exp">
       <goal name="ang_mult_int_exp&#39;vc.2.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="11"><result status="valid" time="0.69" steps="263311"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ang_mult_int_exp&#39;vc.2.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.90" steps="303342"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_mult_int_exp_rev&#39;vc" expl="VC for ang_mult_int_exp_rev" proved="true">
 <proof prover="11"><result status="valid" time="0.42" steps="257918"/></proof>
 </goal>
 <goal name="cpower_ang_exp_real&#39;vc" expl="VC for cpower_ang_exp_real" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cpower_ang_exp_real&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ang_mult_int_exp_rev">
   <goal name="cpower_ang_exp_real&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_ang_exp_eq">
    <goal name="cpower_ang_exp_real&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="real_ang_mult">
     <goal name="cpower_ang_exp_real&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="0.26" steps="236279"/></proof>
     </goal>
     <goal name="cpower_ang_exp_real&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.28" steps="236281"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_mult_int_add&#39;vc" expl="VC for ang_mult_int_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int_add&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(ang_exp ( (i+i&#39;) *.* o) = ang_exp ( (i*.* o ) +.+ (i&#39; *.* o )))
">
   <goal name="ang_mult_int_add&#39;vc.0.0" expl="asserted formula" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_mult_int_exp">
    <goal name="ang_mult_int_add&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_exp_add">
     <goal name="ang_mult_int_add&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <transf name="rewrite" proved="true" arg1="cpower_sum">
      <goal name="ang_mult_int_add&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="mult_eq_t">
       <goal name="ang_mult_int_add&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.47" steps="258351"/></proof>
       </goal>
       <goal name="ang_mult_int_add&#39;vc.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.46" steps="258351"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="ang_mult_int_add&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.46" steps="258369"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="ang_mult_int_add&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.45" steps="258379"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_mult_int_plus_one&#39;vc" expl="VC for ang_mult_int_plus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int_plus_one&#39;vc.0" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(0&lt;=i)">
   <goal name="ang_mult_int_plus_one&#39;vc.0.0" expl="true case (postcondition)" proved="true">
   <transf name="apply" proved="true" arg1="goal_comm">
    <goal name="ang_mult_int_plus_one&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_mult_int_plus_one_pos">
     <goal name="ang_mult_int_plus_one&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="0.46" steps="258455"/></proof>
     </goal>
     <goal name="ang_mult_int_plus_one&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.28" steps="236451"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="ang_mult_int_plus_one&#39;vc.0.1" expl="false case (postcondition)" proved="true">
   <proof prover="12"><result status="valid" time="8.47" steps="2978134"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_mult_int_plus_one_rev&#39;vc" expl="VC for ang_mult_int_plus_one_rev" proved="true">
 <proof prover="11"><result status="valid" time="0.43" steps="258194"/></proof>
 </goal>
 <goal name="ang_mult_int_double&#39;vc" expl="VC for ang_mult_int_double" proved="true">
 <proof prover="11"><result status="valid" time="0.84" steps="295315"/></proof>
 </goal>
 <goal name="ang_mult_int_inv_one&#39;vc" expl="VC for ang_mult_int_inv_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int_inv_one&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ang_mult_int_to_real_to_ang">
   <goal name="ang_mult_int_inv_one&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="((ang_meas o *. i_to_c (- 1)))" arg2="(-.ang_meas o )">
    <goal name="ang_mult_int_inv_one&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.85" steps="294869"/></proof>
    </goal>
    <goal name="ang_mult_int_inv_one&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.71" steps="295728"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_mult_int_one&#39;vc" expl="VC for ang_mult_int_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int_one&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="get_equal_angle_exp">
   <goal name="ang_mult_int_one&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_mult_int_exp">
    <goal name="ang_mult_int_one&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="0.45" steps="258649"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_mult_int_inv_rev&#39;vc" expl="VC for ang_mult_int_inv_rev" proved="true">
 <proof prover="11"><result status="valid" time="0.65" steps="258432"/></proof>
 </goal>
 <goal name="ang_mult_int_comp&#39;vc" expl="VC for ang_mult_int_comp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int_comp&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ang_mult_int_to_real_to_ang">
   <goal name="ang_mult_int_comp&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_mult_int_to_real_to_ang">
    <goal name="ang_mult_int_comp&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_mult_int_to_real_to_ang">
     <goal name="ang_mult_int_comp&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
      <goal name="ang_mult_int_comp&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="11"><result status="valid" time="5.85" steps="1206400"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_mult_int_comp_rev&#39;vc" expl="VC for ang_mult_int_comp_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int_comp_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.08" steps="49938"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_ang_mult_int_pos&#39;vc" expl="VC for add_ang_mult_int_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_ang_mult_int_pos&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.43" steps="258734"/></proof>
  </goal>
  <goal name="add_ang_mult_int_pos&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="236933"/></proof>
  </goal>
  <goal name="add_ang_mult_int_pos&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="236919"/></proof>
  </goal>
  <goal name="add_ang_mult_int_pos&#39;vc.3" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="add_ang_mult_int_pos&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(forall o1 o2 o3 o4. ( o1 +.+o2)+.+ ( o3 +.+o4) = (o1 +.+o3) +.+( o2+.+ o4))
">
    <goal name="add_ang_mult_int_pos&#39;vc.3.0.0" expl="asserted formula" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="add_ang_mult_int_pos&#39;vc.3.0.0.0" expl="asserted formula" proved="true">
     <proof prover="11"><result status="valid" time="0.48" steps="259002"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="add_ang_mult_int_pos&#39;vc.3.0.1" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.54" steps="262018"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="add_ang_mult_int_pos&#39;vc.3.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(forall o1 o2 o3 o4. ( o1 +.+o2)+.+ ( o3 +.+o4) = (o1 +.+o3) +.+( o2+.+ o4))
">
    <goal name="add_ang_mult_int_pos&#39;vc.3.1.0" expl="asserted formula" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="add_ang_mult_int_pos&#39;vc.3.1.0.0" expl="asserted formula" proved="true">
     <proof prover="11"><result status="valid" time="0.44" steps="259123"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="add_ang_mult_int_pos&#39;vc.3.1.1" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="1.38" steps="304501"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="add_ang_mult_int&#39;vc" expl="VC for add_ang_mult_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_ang_mult_int&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.26" steps="236940"/></proof>
  </goal>
  <goal name="add_ang_mult_int&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.43" steps="258733"/></proof>
  </goal>
  <goal name="add_ang_mult_int&#39;vc.2" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ang_mult_int_to_real_to_ang">
   <goal name="add_ang_mult_int&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_mult_int_to_real_to_ang">
    <goal name="add_ang_mult_int&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_mult_int_to_real_to_ang">
     <goal name="add_ang_mult_int&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="real_to_ang_add_rev">
      <goal name="add_ang_mult_int&#39;vc.2.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="get_ang_exp_eq">
       <goal name="add_ang_mult_int&#39;vc.2.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="real_to_ang_add">
        <goal name="add_ang_mult_int&#39;vc.2.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="0.28"/></proof>
        </goal>
        <goal name="add_ang_mult_int&#39;vc.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.69" steps="301454"/></proof>
        </goal>
        <goal name="add_ang_mult_int&#39;vc.2.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.83" steps="301454"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="add_ang_mult_int&#39;vc.2.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.85" steps="301454"/></proof>
      </goal>
      <goal name="add_ang_mult_int&#39;vc.2.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.69" steps="301454"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_substr_inv&#39;vc" expl="VC for ang_substr_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_substr_inv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="ang_substr_inv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="(-.-)&#39;def">
    <goal name="ang_substr_inv&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_substr&#39;def">
     <goal name="ang_substr_inv&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ang_mult_int_to_real_to_ang">
      <goal name="ang_substr_inv&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Real_To_Ang_inv">
       <goal name="ang_substr_inv&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="(-. (ang_meas o&#39; *. i_to_c (- 1)))" arg2="(ang_meas o&#39;)">
        <goal name="ang_substr_inv&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="11"><result status="valid" time="0.51" steps="264024"/></proof>
        </goal>
        <goal name="ang_substr_inv&#39;vc.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.67" steps="300911"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="ang_substr_inv&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.65" steps="297899"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_mult_int_distr&#39;vc" expl="VC for ang_mult_int_distr" proved="true">
 <proof prover="11"><result status="valid" time="0.43" steps="258918"/></proof>
 </goal>
 <goal name="ang_mult_int_distr_rev&#39;vc" expl="VC for ang_mult_int_distr_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int_distr_rev&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ang_mult_int_to_real_to_ang">
   <goal name="ang_mult_int_distr_rev&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_mult_int_to_real_to_ang">
    <goal name="ang_mult_int_distr_rev&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_mult_int_to_real_to_ang">
     <goal name="ang_mult_int_distr_rev&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="real_to_ang_add_rev">
      <goal name="ang_mult_int_distr_rev&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
       <goal name="ang_mult_int_distr_rev&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="11"><result status="valid" time="0.46" steps="261951"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="ang_mult_int_distr_rev&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.82" steps="299575"/></proof>
      </goal>
      <goal name="ang_mult_int_distr_rev&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.80" steps="299575"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_add_assoc&#39;vc" expl="VC for ang_add_assoc" proved="true">
 <proof prover="11"><result status="valid" time="0.43" steps="259049"/></proof>
 </goal>
 <goal name="ang_add_assoc_rev&#39;vc" expl="VC for ang_add_assoc_rev" proved="true">
 <proof prover="11"><result status="valid" time="0.43" steps="259111"/></proof>
 </goal>
 <goal name="ang_add_own_inv&#39;vc" expl="VC for ang_add_own_inv" proved="true">
 <proof prover="11"><result status="valid" time="1.46" steps="302949"/></proof>
 </goal>
 <goal name="ang_exp_inv&#39;vc" expl="VC for ang_exp_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_inv&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="259508"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_one_one&#39;vc" expl="VC for ang_exp_one_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_one_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.27" steps="237391"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_one_even&#39;vc" expl="VC for int_to_ang_one_even" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_one_even&#39;vc.0" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="int_to_ang_cycles_gen" arg2="0,1,(div k 2)">
   <goal name="int_to_ang_one_even&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="k" arg2="(0 + (div k 2 * power 2 1))">
    <goal name="int_to_ang_one_even&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.45" steps="259734"/></proof>
    </goal>
    <goal name="int_to_ang_one_even&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="instantiate" proved="true" arg1="decomp" arg2="k,(power 2 1)">
     <goal name="int_to_ang_one_even&#39;vc.0.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(mod k (power 2 1))" arg2="0" arg3="in" arg4="Hinst">
      <goal name="int_to_ang_one_even&#39;vc.0.0.1.0.0" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="( (power 2 1))" arg2="2" arg3="in" arg4="Hinst">
       <goal name="int_to_ang_one_even&#39;vc.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
       <transf name="replace" proved="true" arg1="( (power 2 1))" arg2="2">
        <goal name="int_to_ang_one_even&#39;vc.0.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.36" steps="237551"/></proof>
        </goal>
        <goal name="int_to_ang_one_even&#39;vc.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.56" steps="259776"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="int_to_ang_one_even&#39;vc.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="0.61" steps="260057"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="int_to_ang_one_even&#39;vc.0.0.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="2"><result status="valid" time="0.97" steps="2804279"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_one_odd&#39;vc" expl="VC for int_to_ang_one_odd" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_one_odd&#39;vc.0" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="int_to_ang_cycles_gen" arg2="1,1,(div k 2)">
   <goal name="int_to_ang_one_odd&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="( (power 2 1))" arg2="2" arg3="in" arg4="Hinst">
    <goal name="int_to_ang_one_odd&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="k" arg2="(1 + (div k 2 * 2))">
     <goal name="int_to_ang_one_odd&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.28" steps="237536"/></proof>
     </goal>
     <goal name="int_to_ang_one_odd&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="9"><result status="valid" time="1.23" steps="51747"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="int_to_ang_one_odd&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.47" steps="259799"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_exp_one_one_expo&#39;vc" expl="VC for ang_exp_one_one_expo" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_exp_one_one_expo&#39;vc.0" expl="postcondition" proved="true">
  <transf name="induction" proved="true" arg1="i">
   <goal name="ang_exp_one_one_expo&#39;vc.0.0" expl="base case (postcondition)" proved="true">
   <proof prover="11"><result status="valid" time="0.67" steps="295780"/></proof>
   </goal>
   <goal name="ang_exp_one_one_expo&#39;vc.0.1" expl="recursive case (postcondition)" proved="true">
   <proof prover="11"><result status="valid" time="0.66" steps="296459"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_zero_den&#39;vc" expl="VC for int_to_ang_zero_den" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_zero_den&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="int_to_ang_zero_den&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="(/./)&#39;spec3">
    <goal name="int_to_ang_zero_den&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.81" steps="335959"/></proof>
    </goal>
    <goal name="int_to_ang_zero_den&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.34" steps="279543"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_minus_up&#39;vc" expl="VC for int_to_ang_minus_up" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_minus_up&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.42"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_minus_down&#39;vc" expl="VC for int_to_ang_minus_down" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_minus_down&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="9"><result status="valid" time="1.15" steps="49929"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_inv&#39;vc" expl="VC for int_to_ang_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_inv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="int_to_ang_inv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(0&lt; n)">
    <goal name="int_to_ang_inv&#39;vc.0.0.0" expl="true case (postcondition)" proved="true">
    <transf name="replace" proved="true" arg1="(k /./ (- n))" arg2="(mod (-k) (power 2 n) /./ n)">
     <goal name="int_to_ang_inv&#39;vc.0.0.0.0" expl="true case (postcondition)" proved="true">
     <proof prover="0"><result status="valid" time="0.33"/></proof>
     </goal>
     <goal name="int_to_ang_inv&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.92" steps="335182"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="int_to_ang_inv&#39;vc.0.0.1" expl="false case (postcondition)" proved="true">
    <proof prover="11"><result status="valid" time="0.86" steps="333301"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_inv_rev&#39;vc" expl="VC for int_to_ang_inv_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_inv_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.72" steps="297698"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_inv_add&#39;vc" expl="VC for int_to_ang_inv_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_inv_add&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.70" steps="298313"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_mult_int_neutral&#39;vc" expl="VC for ang_mult_int_neutral" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_mult_int_neutral&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="2.48" steps="688709"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="phase_inv_neutral&#39;vc" expl="VC for phase_inv_neutral" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="phase_inv_neutral&#39;vc.0" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(even n)">
   <goal name="phase_inv_neutral&#39;vc.0.0" expl="true case (postcondition)" proved="true">
   <proof prover="9"><result status="valid" time="1.22" steps="49592"/></proof>
   </goal>
   <goal name="phase_inv_neutral&#39;vc.0.1" expl="false case (postcondition)" proved="true">
   <transf name="rewrite" proved="true" arg1="Odd_phase_inv">
    <goal name="phase_inv_neutral&#39;vc.0.1.0" expl="false case (postcondition)" proved="true">
    <proof prover="11"><result status="valid" time="0.74" steps="296395"/></proof>
    </goal>
    <goal name="phase_inv_neutral&#39;vc.0.1.1" expl="rewrite premises" proved="true">
    <proof prover="9"><result status="valid" time="1.02" steps="50769"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Ang_sum" proved="true">
 <goal name="ang_sum&#39;vc" expl="VC for ang_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.47" steps="381112"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sumto_int_iterate&#39;vc" expl="VC for ang_sumto_int_iterate" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sumto_int_iterate&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.40" steps="476454"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_plus_one&#39;vc" expl="VC for ang_sum_plus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_plus_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.94" steps="403376"/></proof>
  </goal>
  <goal name="ang_sum_plus_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.54" steps="390363"/></proof>
  </goal>
  <goal name="ang_sum_plus_one&#39;vc.2" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ang_sumto_int_iterate">
   <goal name="ang_sum_plus_one&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_sumto_int_iterate">
    <goal name="ang_sum_plus_one&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures">
     <goal name="ang_sum_plus_one&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.92" steps="430216"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ang_sum_plus_one&#39;vc.2.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.53" steps="401745"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ang_sum_plus_one&#39;vc.2.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="1.05" steps="429839"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_cardone&#39;vc" expl="VC for ang_sum_cardone" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_cardone&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.42" steps="375931"/></proof>
  </goal>
  <goal name="ang_sum_cardone&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.38" steps="477073"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_cardone_p&#39;vc" expl="VC for ang_sum_cardone_p" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_cardone_p&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.58" steps="400414"/></proof>
  </goal>
  <goal name="ang_sum_cardone_p&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.36" steps="477208"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_neutral&#39;vc" expl="VC for ang_sum_neutral" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_neutral&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.45" steps="358324"/></proof>
  </goal>
  <goal name="ang_sum_neutral&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.75" steps="385408"/></proof>
  </goal>
  <goal name="ang_sum_neutral&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.43" steps="358419"/></proof>
  </goal>
  <goal name="ang_sum_neutral&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.93" steps="385471"/></proof>
  </goal>
  <goal name="ang_sum_neutral&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.32" steps="432793"/></proof>
  </goal>
  <goal name="ang_sum_neutral&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.14" steps="432973"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_def_plus_one_com&#39;vc" expl="VC for ang_sum_def_plus_one_com" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_def_plus_one_com&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.74" steps="404177"/></proof>
  </goal>
  <goal name="ang_sum_def_plus_one_com&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.61" steps="391116"/></proof>
  </goal>
  <goal name="ang_sum_def_plus_one_com&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.28" steps="478309"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_right_extension&#39;vc" expl="VC for ang_sum_right_extension" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_right_extension&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.45" steps="329884"/></proof>
  </goal>
  <goal name="ang_sum_right_extension&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.75" steps="385697"/></proof>
  </goal>
  <goal name="ang_sum_right_extension&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.75" steps="385754"/></proof>
  </goal>
  <goal name="ang_sum_right_extension&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.96" steps="385774"/></proof>
  </goal>
  <goal name="ang_sum_right_extension&#39;vc.4" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="ang_sum_right_extension&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_sum_plus_one">
    <goal name="ang_sum_right_extension&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="ang_add_eq">
     <goal name="ang_sum_right_extension&#39;vc.4.0.0.0" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.13" steps="52977"/></proof>
     </goal>
     <goal name="ang_sum_right_extension&#39;vc.4.0.0.1" expl="apply premises" proved="true">
     <proof prover="9"><result status="valid" time="1.14" steps="53008"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ang_sum_right_extension&#39;vc.4.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.54" steps="329879"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ang_sum_right_extension&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.77" steps="386170"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_re&#39;vc" expl="VC for ang_sum_re" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_re&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.49" steps="330032"/></proof>
  </goal>
  <goal name="ang_sum_re&#39;vc.1" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="ang_sum_re&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.35"/></proof>
   </goal>
   <goal name="ang_sum_re&#39;vc.1.1" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.37" steps="358684"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_transitivity&#39;vc" expl="VC for ang_sum_transitivity" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_transitivity&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.63" steps="462074"/></proof>
  </goal>
  <goal name="ang_sum_transitivity&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.48" steps="378362"/></proof>
  </goal>
  <goal name="ang_sum_transitivity&#39;vc.2" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ang_sumto_int_iterate">
   <goal name="ang_sum_transitivity&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_sumto_int_iterate">
    <goal name="ang_sum_transitivity&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures">
     <goal name="ang_sum_transitivity&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="ang_sum_transitivity&#39;vc.2.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="11"><result status="valid" time="1.34" steps="479172"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="ang_sum_transitivity&#39;vc.2.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.48" steps="402797"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ang_sum_transitivity&#39;vc.2.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.92" steps="431057"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_eq&#39;vc" expl="VC for ang_sum_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_eq&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.32" steps="476310"/></proof>
  </goal>
  <goal name="ang_sum_eq&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.82" steps="434929"/></proof>
  </goal>
  <goal name="ang_sum_eq&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.16" steps="480191"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_int_to_ang&#39;vc" expl="VC for ang_sum_int_to_ang" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_int_to_ang&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.47"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="vang_sum_eq&#39;vc" expl="VC for vang_sum_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vang_sum_eq&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.45"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="vang_sum_scal_eq&#39;vc" expl="VC for vang_sum_scal_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vang_sum_scal_eq&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.42"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_inv&#39;vc" expl="VC for ang_sum_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_inv&#39;vc.0" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.85" steps="358147"/></proof>
  </goal>
  <goal name="ang_sum_inv&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.45" steps="331723"/></proof>
  </goal>
  <goal name="ang_sum_inv&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="360251"/></proof>
  </goal>
  <goal name="ang_sum_inv&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.79" steps="387621"/></proof>
  </goal>
  <goal name="ang_sum_inv&#39;vc.4" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="ang_sum_inv&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.43"/></proof>
   </goal>
   <goal name="ang_sum_inv&#39;vc.4.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="ang_sum_inv&#39;vc.4.1.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="H">
     <goal name="ang_sum_inv&#39;vc.4.1.0.0" expl="postcondition" proved="true">
     <proof prover="12"><result status="valid" time="1.75" steps="3142298"/></proof>
     </goal>
     <goal name="ang_sum_inv&#39;vc.4.1.0.1" expl="postcondition" proved="true">
     <transf name="destruct" proved="true" arg1="H">
      <goal name="ang_sum_inv&#39;vc.4.1.0.1.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="ang_sum_inv&#39;vc.4.1.0.1.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="H3">
        <goal name="ang_sum_inv&#39;vc.4.1.0.1.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="H2">
         <goal name="ang_sum_inv&#39;vc.4.1.0.1.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="ang_inv_add">
          <goal name="ang_sum_inv&#39;vc.4.1.0.1.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="ang_sum_inv&#39;vc.4.1.0.1.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="rewrite" proved="true" arg1="H">
            <goal name="ang_sum_inv&#39;vc.4.1.0.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="apply" proved="true" arg1="ang_add_eq">
             <goal name="ang_sum_inv&#39;vc.4.1.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="11"><result status="valid" time="0.58" steps="409439"/></proof>
             </goal>
             <goal name="ang_sum_inv&#39;vc.4.1.0.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="ang_sum_eq">
              <goal name="ang_sum_inv&#39;vc.4.1.0.1.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="11"><result status="valid" time="0.96" steps="438747"/></proof>
              </goal>
              <goal name="ang_sum_inv&#39;vc.4.1.0.1.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
              <proof prover="11"><result status="valid" time="1.27" steps="492547"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_plus_one_p&#39;vc" expl="VC for ang_sum_plus_one_p" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_plus_one_p&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Requires2">
   <goal name="ang_sum_plus_one_p&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="goal_comm">
    <goal name="ang_sum_plus_one_p&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_sum_plus_one">
     <goal name="ang_sum_plus_one_p&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="ang_add_eq">
      <goal name="ang_sum_plus_one_p&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.50" steps="360354"/></proof>
      </goal>
      <goal name="ang_sum_plus_one_p&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="Requires3">
       <goal name="ang_sum_plus_one_p&#39;vc.0.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ang_sum_eq">
        <goal name="ang_sum_plus_one_p&#39;vc.0.0.0.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.80" steps="387507"/></proof>
        </goal>
        <goal name="ang_sum_plus_one_p&#39;vc.0.0.0.0.1.0.1" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.82" steps="387632"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ang_sum_plus_one_p&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.49" steps="360369"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="vang_sum_plus_one_p&#39;vc" expl="VC for vang_sum_plus_one_p" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vang_sum_plus_one_p&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="goal_comm">
   <goal name="vang_sum_plus_one_p&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_sum_plus_one">
    <goal name="vang_sum_plus_one_p&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="Requires1">
     <goal name="vang_sum_plus_one_p&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="Requires2">
      <goal name="vang_sum_plus_one_p&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="Requires3">
       <goal name="vang_sum_plus_one_p&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="ang_exp_add">
        <goal name="vang_sum_plus_one_p&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="mult_eq_t">
         <goal name="vang_sum_plus_one_p&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="11"><result status="valid" time="0.46" steps="360872"/></proof>
         </goal>
         <goal name="vang_sum_plus_one_p&#39;vc.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(ang_sum g (i + 1) j)" arg2="(ang_sum f (i + 1) j)">
          <goal name="vang_sum_plus_one_p&#39;vc.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.43" steps="360872"/></proof>
          </goal>
          <goal name="vang_sum_plus_one_p&#39;vc.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
          <transf name="apply" proved="true" arg1="ang_sum_eq">
           <goal name="vang_sum_plus_one_p&#39;vc.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="0.77" steps="388028"/></proof>
           </goal>
           <goal name="vang_sum_plus_one_p&#39;vc.0.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="0.77" steps="388153"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="vang_sum_plus_one_p&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.45" steps="360889"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="vang_sum_plus_one_rev&#39;vc" expl="VC for vang_sum_plus_one_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vang_sum_plus_one_rev&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ang_sum_plus_one">
   <goal name="vang_sum_plus_one_rev&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_exp_add">
    <goal name="vang_sum_plus_one_rev&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="mult_eq_t">
     <goal name="vang_sum_plus_one_rev&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="0.51" steps="370526"/></proof>
     </goal>
     <goal name="vang_sum_plus_one_rev&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="Requires3">
      <goal name="vang_sum_plus_one_rev&#39;vc.0.0.0.1.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(ang_sum g (i + 1) j)" arg2="(ang_sum f (i + 1) m)">
       <goal name="vang_sum_plus_one_rev&#39;vc.0.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.47" steps="361410"/></proof>
       </goal>
       <goal name="vang_sum_plus_one_rev&#39;vc.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="Requires2">
        <goal name="vang_sum_plus_one_rev&#39;vc.0.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="ang_sum_eq">
         <goal name="vang_sum_plus_one_rev&#39;vc.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="11"><result status="valid" time="0.78" steps="388622"/></proof>
         </goal>
         <goal name="vang_sum_plus_one_rev&#39;vc.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
         <proof prover="11"><result status="valid" time="0.80" steps="388747"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="vang_sum_plus_one_rev&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.47" steps="361427"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_right_extension_p&#39;vc" expl="VC for ang_sum_right_extension_p" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_right_extension_p&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="goal_comm">
   <goal name="ang_sum_right_extension_p&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_sum_right_extension">
    <goal name="ang_sum_right_extension_p&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="ang_add_eq">
     <goal name="ang_sum_right_extension_p&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="Requires2">
      <goal name="ang_sum_right_extension_p&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="Requires3">
       <goal name="ang_sum_right_extension_p&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ang_sum_eq">
        <goal name="ang_sum_right_extension_p&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.77" steps="389207"/></proof>
        </goal>
        <goal name="ang_sum_right_extension_p&#39;vc.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.80" steps="389334"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ang_sum_right_extension_p&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="0.48" steps="361962"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ang_sum_right_extension_p&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.47" steps="361977"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="vang_sum_right_extension_p&#39;vc" expl="VC for vang_sum_right_extension_p" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vang_sum_right_extension_p&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="goal_comm">
   <goal name="vang_sum_right_extension_p&#39;vc.0.0" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_sum_right_extension">
    <goal name="vang_sum_right_extension_p&#39;vc.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_exp_add">
     <goal name="vang_sum_right_extension_p&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="mult_eq_t">
      <goal name="vang_sum_right_extension_p&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="Requires3">
       <goal name="vang_sum_right_extension_p&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="Requires2">
        <goal name="vang_sum_right_extension_p&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(ang_sum g i (j-1))" arg2="(ang_sum f i (j - 1) )">
         <goal name="vang_sum_right_extension_p&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
         </transf>
         </goal>
         <goal name="vang_sum_right_extension_p&#39;vc.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="ang_sum_eq">
          <goal name="vang_sum_right_extension_p&#39;vc.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.77" steps="389770"/></proof>
          </goal>
          <goal name="vang_sum_right_extension_p&#39;vc.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.79" steps="390022"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="vang_sum_right_extension_p&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.51" steps="371634"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="vang_sum_right_extension_p&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.46" steps="362514"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="vang_sum_right_extension_rev&#39;vc" expl="VC for vang_sum_right_extension_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vang_sum_right_extension_rev&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="j" arg2="(m+1)">
   <goal name="vang_sum_right_extension_rev&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_sum_right_extension">
    <goal name="vang_sum_right_extension_rev&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_exp_add">
     <goal name="vang_sum_right_extension_rev&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="mult_eq_t">
      <goal name="vang_sum_right_extension_rev&#39;vc.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="Requires2">
       <goal name="vang_sum_right_extension_rev&#39;vc.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="((m + 1) - 1)" arg2="m">
        <goal name="vang_sum_right_extension_rev&#39;vc.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(ang_sum g i m)" arg2="(ang_sum f i m)">
         <goal name="vang_sum_right_extension_rev&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="11"><result status="valid" time="0.47" steps="363052"/></proof>
         </goal>
         <goal name="vang_sum_right_extension_rev&#39;vc.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="ang_sum_eq">
          <goal name="vang_sum_right_extension_rev&#39;vc.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.77" steps="390445"/></proof>
          </goal>
          <goal name="vang_sum_right_extension_rev&#39;vc.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.79" steps="390546"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="vang_sum_right_extension_rev&#39;vc.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.49" steps="363075"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="vang_sum_right_extension_rev&#39;vc.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.55" steps="372198"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="vang_sum_right_extension_rev&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.77" steps="390440"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="vang_sum_right_extension_rev&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.47" steps="363068"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_cardzero&#39;vc" expl="VC for ang_sum_cardzero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_cardzero&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.08" steps="437575"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_eq_gen&#39;vc" expl="VC for ang_sum_eq_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_eq_gen&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.82" steps="391014"/></proof>
  </goal>
  <goal name="ang_sum_eq_gen&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.10" steps="437709"/></proof>
  </goal>
  <goal name="ang_sum_eq_gen&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.79" steps="391051"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_sum_eq_vl&#39;vc" expl="VC for ang_sum_sum_eq_vl" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_sum_eq_vl&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="ang_sum_eq_gen">
   <goal name="ang_sum_sum_eq_vl&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.55" steps="396696"/></proof>
   </goal>
   <goal name="ang_sum_sum_eq_vl&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.57" steps="396681"/></proof>
   </goal>
   <goal name="ang_sum_sum_eq_vl&#39;vc.0.2" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.53" steps="396681"/></proof>
   </goal>
   <goal name="ang_sum_sum_eq_vl&#39;vc.0.3" expl="apply premises" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="ang_sum_sum_eq_vl&#39;vc.0.3.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="ang_sum_sum_eq_vl&#39;vc.0.3.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="ang_sum_eq_gen">
      <goal name="ang_sum_sum_eq_vl&#39;vc.0.3.0.0.0" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.86" steps="424777"/></proof>
      </goal>
      <goal name="ang_sum_sum_eq_vl&#39;vc.0.3.0.0.1" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.53" steps="396730"/></proof>
      </goal>
      <goal name="ang_sum_sum_eq_vl&#39;vc.0.3.0.0.2" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.53" steps="396732"/></proof>
      </goal>
      <goal name="ang_sum_sum_eq_vl&#39;vc.0.3.0.0.3" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="1.22" steps="471583"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_minus&#39;vc" expl="VC for ang_sum_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_minus&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.48" steps="392453"/></proof>
  </goal>
  <goal name="ang_sum_minus&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.47" steps="392581"/></proof>
  </goal>
  <goal name="ang_sum_minus&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.86" steps="420154"/></proof>
  </goal>
  <goal name="ang_sum_minus&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.48" steps="392661"/></proof>
  </goal>
  <goal name="ang_sum_minus&#39;vc.4" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ang_sum_minus&#39;vc.4.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.52" steps="392724"/></proof>
   </goal>
   <goal name="ang_sum_minus&#39;vc.4.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.51" steps="392731"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ang_sum_minus&#39;vc.5" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.53" steps="392691"/></proof>
  </goal>
  <goal name="ang_sum_minus&#39;vc.6" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.05" steps="420488"/></proof>
  </goal>
  <goal name="ang_sum_minus&#39;vc.7" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ang_sum_minus&#39;vc.7.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.54" steps="392808"/></proof>
   </goal>
   <goal name="ang_sum_minus&#39;vc.7.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.87" steps="420619"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ang_sum_minus&#39;vc.8" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.51" steps="392775"/></proof>
  </goal>
  <goal name="ang_sum_minus&#39;vc.9" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.52" steps="392787"/></proof>
  </goal>
  <goal name="ang_sum_minus&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ang_sum_minus&#39;vc.10.0" expl="postcondition" proved="true">
   <proof prover="12"><result status="valid" time="0.25" steps="1040177"/></proof>
   </goal>
   <goal name="ang_sum_minus&#39;vc.10.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="ang_sum_minus&#39;vc.10.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ind_isum_plus_one">
     <goal name="ang_sum_minus&#39;vc.10.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures3">
      <goal name="ang_sum_minus&#39;vc.10.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures1">
       <goal name="ang_sum_minus&#39;vc.10.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="(- ((f @ i) + ind_isum f (i + 1) j))" arg2="((- (f @ i)) + -( ind_isum f (i + 1) j))">
        <goal name="ang_sum_minus&#39;vc.10.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="int_to_ang_add_rev">
         <goal name="ang_sum_minus&#39;vc.10.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="compute_specified" proved="true" >
         </transf>
         </goal>
         <goal name="ang_sum_minus&#39;vc.10.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="0.43" steps="392878"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="ang_sum_minus&#39;vc.10.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.57" steps="392904"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ang_sum_minus&#39;vc.10.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.50" steps="392893"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="multiple_control_as_ang_sum&#39;vc" expl="VC for multiple_control_as_ang_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="multiple_control_as_ang_sum&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_if" proved="true" >
   <goal name="multiple_control_as_ang_sum&#39;vc.0.0" expl="VC for multiple_control_as_ang_sum" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="multiple_control_as_ang_sum&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="1.38" steps="445686"/></proof>
    </goal>
    <goal name="multiple_control_as_ang_sum&#39;vc.0.0.1" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(ind_iproduct (getbv x) 0 n)" arg2="0">
     <goal name="multiple_control_as_ang_sum&#39;vc.0.0.1.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="1.03" steps="394744"/></proof>
     </goal>
     <goal name="multiple_control_as_ang_sum&#39;vc.0.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="1.18" steps="446486"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="multiple_control_as_ang_sum_rev&#39;vc" expl="VC for multiple_control_as_ang_sum_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="multiple_control_as_ang_sum_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.19" steps="443696"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_map&#39;vc" expl="VC for ang_sum_map" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_map&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.58" steps="419737"/></proof>
  </goal>
  <goal name="ang_sum_map&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.75" steps="4572471"/></proof>
  </goal>
  <goal name="ang_sum_map&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.57" steps="420010"/></proof>
  </goal>
  <goal name="ang_sum_map&#39;vc.3" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="ang_sum_map&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="ang_sum_map&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_sum&#39;def">
     <goal name="ang_sum_map&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ang_sum&#39;def">
      <goal name="ang_sum_map&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="Ensures">
      </transf>
      </goal>
      <goal name="ang_sum_map&#39;vc.3.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.68" steps="517556"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="ang_sum_map&#39;vc.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="3.60" steps="1053541"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_break&#39;vc" expl="VC for ang_sum_break" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_break&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="338600"/></proof>
  </goal>
  <goal name="ang_sum_break&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.70" steps="365246"/></proof>
  </goal>
  <goal name="ang_sum_break&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.62"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_break_zero_l&#39;vc" expl="VC for ang_sum_break_zero_l" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_break_zero_l&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="366524"/></proof>
  </goal>
  <goal name="ang_sum_break_zero_l&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.43"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_break_zero_lg&#39;vc" expl="VC for ang_sum_break_zero_lg" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_break_zero_lg&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.49" steps="366884"/></proof>
  </goal>
  <goal name="ang_sum_break_zero_lg&#39;vc.1" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(ang_sum f y j)" arg2="(ang_sum g y j)">
   <goal name="ang_sum_break_zero_lg&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="ang_sum_break_zero_l">
    <goal name="ang_sum_break_zero_lg&#39;vc.1.0.0" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="0.47" steps="366932"/></proof>
    </goal>
    <goal name="ang_sum_break_zero_lg&#39;vc.1.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="ang_sum_break_zero_lg&#39;vc.1.0.1.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(g k)" arg2="(f k)">
      <goal name="ang_sum_break_zero_lg&#39;vc.1.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="1.11" steps="442935"/></proof>
      </goal>
      <goal name="ang_sum_break_zero_lg&#39;vc.1.0.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="1.11" steps="443244"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="ang_sum_break_zero_lg&#39;vc.1.1" expl="equality hypothesis" proved="true">
   <transf name="apply" proved="true" arg1="ang_sum_eq">
    <goal name="ang_sum_break_zero_lg&#39;vc.1.1.0" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="0.46" steps="366925"/></proof>
    </goal>
    <goal name="ang_sum_break_zero_lg&#39;vc.1.1.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="ang_sum_break_zero_lg&#39;vc.1.1.1.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(g k)" arg2="(f k)">
      <goal name="ang_sum_break_zero_lg&#39;vc.1.1.1.0.0" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.46" steps="366974"/></proof>
      </goal>
      <goal name="ang_sum_break_zero_lg&#39;vc.1.1.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="1.13" steps="443060"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_break_zero_lg_params&#39;vc" expl="VC for ang_sum_break_zero_lg_params" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_break_zero_lg_params&#39;vc.0" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ang_sum_break_zero_l" arg2="(fun (k:int) -&gt; (((g @ x) @ z) @ a) @ k),i,j,a">
   <goal name="ang_sum_break_zero_lg_params&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ang_sum (fun (k:int) -&gt; (((g @ x) @ z) @ a) @ k) i j)" arg2="(ang_sum (fun (k:int) -&gt; (((g @ x) @ z) @ a) @ k) a j)">
    <goal name="ang_sum_break_zero_lg_params&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="ang_sum_eq">
     <goal name="ang_sum_break_zero_lg_params&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="1.01" steps="472349"/></proof>
     </goal>
     <goal name="ang_sum_break_zero_lg_params&#39;vc.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="1.40" steps="523810"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ang_sum_break_zero_lg_params&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="1.36" steps="523588"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_break_zero_l_params&#39;vc" expl="VC for ang_sum_break_zero_l_params" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_break_zero_l_params&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(ang_sum ((f @ x) @ y) l j)" arg2="(ang_sum ((f @ x) @ y) i j)">
   <goal name="ang_sum_break_zero_l_params&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.47"/></proof>
   </goal>
   <goal name="ang_sum_break_zero_l_params&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="0"><result status="valid" time="0.45"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_break_param&#39;vc" expl="VC for ang_sum_break_param" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_break_param&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.23" steps="478681"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_neutral_param_r&#39;vc" expl="VC for ang_sum_neutral_param_r" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_neutral_param_r&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.62"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_neutral_param_l&#39;vc" expl="VC for ang_sum_neutral_param_l" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_neutral_param_l&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.45"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_transl&#39;vc" expl="VC for ang_sum_transl" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_transl&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.45" steps="343074"/></proof>
  </goal>
  <goal name="ang_sum_transl&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.51" steps="370761"/></proof>
  </goal>
  <goal name="ang_sum_transl&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.73" steps="370134"/></proof>
  </goal>
  <goal name="ang_sum_transl&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.82" steps="398725"/></proof>
  </goal>
  <goal name="ang_sum_transl&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.80" steps="398973"/></proof>
  </goal>
  <goal name="ang_sum_transl&#39;vc.5" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.81" steps="398993"/></proof>
  </goal>
  <goal name="ang_sum_transl&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="ang_sum_transl&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Ensures">
    <goal name="ang_sum_transl&#39;vc.6.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="1.08" steps="447660"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ang_sum_transl&#39;vc.6.1" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures2">
    <goal name="ang_sum_transl&#39;vc.6.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures">
     <goal name="ang_sum_transl&#39;vc.6.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures1">
      <goal name="ang_sum_transl&#39;vc.6.1.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="ang_sum_transl&#39;vc.6.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="ang_add_eq">
        <goal name="ang_sum_transl&#39;vc.6.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.45" steps="371049"/></proof>
        </goal>
        <goal name="ang_sum_transl&#39;vc.6.1.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="ang_sum_eq_gen">
         <goal name="ang_sum_transl&#39;vc.6.1.0.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="11"><result status="valid" time="0.73" steps="399099"/></proof>
         </goal>
         <goal name="ang_sum_transl&#39;vc.6.1.0.0.0.0.1.1" expl="apply premises" proved="true">
         <proof prover="11"><result status="valid" time="0.42" steps="371035"/></proof>
         </goal>
         <goal name="ang_sum_transl&#39;vc.6.1.0.0.0.0.1.2" expl="apply premises" proved="true">
         <proof prover="11"><result status="valid" time="0.42" steps="371026"/></proof>
         </goal>
         <goal name="ang_sum_transl&#39;vc.6.1.0.0.0.0.1.3" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="ang_sum_transl&#39;vc.6.1.0.0.0.0.1.3.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.94" steps="448960"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_transl_one&#39;vc" expl="VC for ang_sum_transl_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_transl_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="343262"/></proof>
  </goal>
  <goal name="ang_sum_transl_one&#39;vc.1" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures">
   <goal name="ang_sum_transl_one&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="ang_sum_eq_gen">
    <goal name="ang_sum_transl_one&#39;vc.1.0.0" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="0.51" steps="370916"/></proof>
    </goal>
    <goal name="ang_sum_transl_one&#39;vc.1.0.1" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="0.49" steps="370908"/></proof>
    </goal>
    <goal name="ang_sum_transl_one&#39;vc.1.0.2" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="0.50" steps="370908"/></proof>
    </goal>
    <goal name="ang_sum_transl_one&#39;vc.1.0.3" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="1.15" steps="446644"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_to_ind_isum&#39;vc" expl="VC for ang_sum_to_ind_isum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_to_ind_isum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.74" steps="426769"/></proof>
  </goal>
  <goal name="ang_sum_to_ind_isum&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.55" steps="398686"/></proof>
  </goal>
  <goal name="ang_sum_to_ind_isum&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.90" steps="427022"/></proof>
  </goal>
  <goal name="ang_sum_to_ind_isum&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.54" steps="398716"/></proof>
  </goal>
  <goal name="ang_sum_to_ind_isum&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.93" steps="427046"/></proof>
  </goal>
  <goal name="ang_sum_to_ind_isum&#39;vc.5" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="ang_sum_to_ind_isum&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(j = i+1)">
    <goal name="ang_sum_to_ind_isum&#39;vc.5.0.0" expl="true case (postcondition)" proved="true">
    <proof prover="12"><result status="valid" time="0.74" steps="3247489"/></proof>
    </goal>
    <goal name="ang_sum_to_ind_isum&#39;vc.5.0.1" expl="false case (postcondition)" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_sum_plus_one">
     <goal name="ang_sum_to_ind_isum&#39;vc.5.0.1.0" expl="false case (postcondition)" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="ang_sum_to_ind_isum&#39;vc.5.0.1.0.0" expl="false case (postcondition)" proved="true">
      <transf name="eliminate_let" proved="true" >
       <goal name="ang_sum_to_ind_isum&#39;vc.5.0.1.0.0.0" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="H">
        <goal name="ang_sum_to_ind_isum&#39;vc.5.0.1.0.0.0.0" expl="false case (postcondition)" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="ang_sum_to_ind_isum&#39;vc.5.0.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
         <proof prover="11"><result status="valid" time="0.60" steps="451822"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ang_sum_to_ind_isum&#39;vc.5.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.44" steps="343542"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="ang_sum_to_ind_isum&#39;vc.5.1" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(j = i+1)">
    <goal name="ang_sum_to_ind_isum&#39;vc.5.1.0" expl="true case (postcondition)" proved="true">
    <proof prover="2"><result status="valid" time="2.14" steps="4227331"/></proof>
    </goal>
    <goal name="ang_sum_to_ind_isum&#39;vc.5.1.1" expl="false case (postcondition)" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_sum_plus_one">
     <goal name="ang_sum_to_ind_isum&#39;vc.5.1.1.0" expl="false case (postcondition)" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="ang_sum_to_ind_isum&#39;vc.5.1.1.0.0" expl="false case (postcondition)" proved="true">
      <transf name="eliminate_let" proved="true" >
       <goal name="ang_sum_to_ind_isum&#39;vc.5.1.1.0.0.0" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="H">
        <goal name="ang_sum_to_ind_isum&#39;vc.5.1.1.0.0.0.0" expl="false case (postcondition)" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="ang_sum_to_ind_isum&#39;vc.5.1.1.0.0.0.0.0" expl="false case (postcondition)" proved="true">
         <proof prover="11"><result status="valid" time="1.46" steps="542276"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ang_sum_to_ind_isum&#39;vc.5.1.1.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.89" steps="427009"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ind_isum_to_d_sum&#39;vc" expl="VC for ind_isum_to_d_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ind_isum_to_d_sum&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ang_sum_to_ind_isum">
   <goal name="ind_isum_to_d_sum&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.48" steps="343689"/></proof>
   </goal>
   <goal name="ind_isum_to_d_sum&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.47" steps="343691"/></proof>
   </goal>
   <goal name="ind_isum_to_d_sum&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.43" steps="343706"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_int_decomp&#39;vc" expl="VC for ang_sum_int_decomp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_int_decomp&#39;vc.0" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="ang_sum_to_ind_isum" arg2="(fun (x:int) -&gt; (((bvx @ x) * power 2 ((n - x) - 1)) * k) ),n,0,n">
   <goal name="ang_sum_int_decomp&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="bin_to_int&#39;def">
    <goal name="ang_sum_int_decomp&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
     <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(ang_sum  (fun (x:int) -&gt; int_to_ang (((bvx @ x) * power 2 ((n - x) - 1)) * k) n) 0 n)" arg2="(ang_sum  (fun (k1:int) -&gt;
    int_to_ang
    ((fun (x:int) -&gt; ((bvx @ x) * power 2 ((n - x) - 1)) * k) @ k1) n)
  0 n)">
      <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(ang_sum  (fun (x:int) -&gt; (((bvx @ x) * power 2 ((n - x) - 1)) * k)/./ n) 0 n)" arg2="(ang_sum  (fun (k1:int) -&gt;
       ((fun (x:int) -&gt; ((bvx @ x) * power 2 ((n - x) - 1)) * k) @ k1) /./n) 0 n)">
       <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="Hinst">
        <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="int_to_ang_eq">
         <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(length (make_bv bvx n))" arg2="n">
          <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="ind_isum_scal_rev_right">
           <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="ind_isum_eq">
            <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="mult_eq">
               <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="mult_eq">
                <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                 <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="11"><result status="valid" time="0.49" steps="370275"/></proof>
                 </goal>
                 <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="11"><result status="valid" time="1.16" steps="449843"/></proof>
                 </goal>
                 <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                 <proof prover="11"><result status="valid" time="0.51" steps="370286"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="11"><result status="valid" time="0.51" steps="370322"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="11"><result status="valid" time="0.53" steps="370275"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="11"><result status="valid" time="0.84" steps="397908"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length">
           <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
           <proof prover="11"><result status="valid" time="0.51" steps="370235"/></proof>
           </goal>
           <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
           <proof prover="11"><result status="valid" time="1.13" steps="449801"/></proof>
           </goal>
           <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
           <proof prover="11"><result status="valid" time="0.80" steps="397908"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="11"><result status="valid" time="0.48" steps="370235"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.80" steps="397908"/></proof>
        </goal>
        <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.51" steps="370239"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="ang_sum_eq">
       <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.81" steps="397908"/></proof>
       </goal>
       <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.1.1" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="ang_sum_int_decomp&#39;vc.0.0.0.0.1.1.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="ang_sum_int_decomp&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.83" steps="397908"/></proof>
    </goal>
    <goal name="ang_sum_int_decomp&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.85" steps="398270"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_int_decomp_gen&#39;vc" expl="VC for ang_sum_int_decomp_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_int_decomp_gen&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="ang_sum_int_decomp">
   <goal name="ang_sum_int_decomp_gen&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.51" steps="370218"/></proof>
   </goal>
   <goal name="ang_sum_int_decomp_gen&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.51" steps="370216"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_bv_to_int&#39;vc" expl="VC for ang_sum_bv_to_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_bv_to_int&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(bv_to_int x)" arg2="(bin_to_int (getbv x) n)">
   <goal name="ang_sum_bv_to_int&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="ang_sum_int_decomp_gen">
    <goal name="ang_sum_bv_to_int&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="0.44" steps="344501"/></proof>
    </goal>
    <goal name="ang_sum_bv_to_int&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="0.86" steps="398545"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ang_sum_bv_to_int&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="ang_sum_bv_to_int&#39;vc.0.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="bin_to_int&#39;def">
     <goal name="ang_sum_bv_to_int&#39;vc.0.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="bv_to_int_eq">
      <goal name="ang_sum_bv_to_int&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="set_equal_bv">
       <goal name="ang_sum_bv_to_int&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.99" steps="451493"/></proof>
       </goal>
       <goal name="ang_sum_bv_to_int&#39;vc.0.1.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.93" steps="451665"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ang_sum_bv_to_int&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.86" steps="418901"/></proof>
     </goal>
     <goal name="ang_sum_bv_to_int&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="1.29" steps="504489"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_bv_to_int_&#39;vc" expl="VC for ang_sum_bv_to_int_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_bv_to_int_&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(ang_sum
  (fun (i:int) -&gt; int_to_ang (((getbv x @ i) * power 2 ((n - i) - 1)) * k) n)
  0 n)" arg2="(ang_sum
  (fun (i:int) -&gt; int_to_ang (((getbv x @ i) * power 2 ((n - i) - 1)) * k) n)
  0 n)">
   <goal name="ang_sum_bv_to_int_&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_sum_bv_to_int">
    <goal name="ang_sum_bv_to_int_&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.47" steps="344891"/></proof>
    </goal>
    <goal name="ang_sum_bv_to_int_&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.47" steps="344895"/></proof>
    </goal>
    <goal name="ang_sum_bv_to_int_&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.48" steps="344893"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="ang_sum_bv_to_int_&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="apply" proved="true" arg1="ang_sum_eq">
    <goal name="ang_sum_bv_to_int_&#39;vc.0.1.0" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="0.82" steps="372030"/></proof>
    </goal>
    <goal name="ang_sum_bv_to_int_&#39;vc.0.1.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="ang_sum_bv_to_int_&#39;vc.0.1.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_sum_bv_to_int_mult&#39;vc" expl="VC for ang_sum_sum_bv_to_int_mult" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0" expl="assertion" proved="true">
  <transf name="apply" proved="true" arg1="ang_sum_eq">
   <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.81" steps="372476"/></proof>
   </goal>
   <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0" expl="apply premises" proved="true">
     <transf name="instantiate" proved="true" arg1="ang_sum_break_zero_lg" arg2="(fun (k1:int) -&gt;
    
    (((getbv y @ k1) * (getbv x @ k))
     * power 2 (((n - k1) - 1) + ((n - k) - 1)))
/./    n),(fun (k1:int) -&gt;
    
    (((getbv y @ k1) * (getbv x @ k))
     * power 2 (((n - k1) - 1) + ((n - k) - 1)))
  /./  n),0,n,(n-k-1)">
      <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(ang_sum
  (fun (k1:int) -&gt;
       (((getbv y @ k1) * (getbv x @ k))
     * power 2 (((n - k1) - 1) + ((n - k) - 1)))
   /./ n)
  ((n - k) - 1) n)" arg2="(ang_sum
    (fun (k1:int) -&gt;
      (((getbv y @ k1) * (getbv x @ k))
       * power 2 (((n - k1) - 1) + ((n - k) - 1)))
    /./  n)
    0 n)
">
       <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(ang_sum
  (fun (k1:int) -&gt;
    (((getbv y @ k1) * (getbv x @ k))
     * power 2 (((n - k1) - 1) + ((n - k) - 1)))
 /./   n)
  0 n)" arg2="(ang_sum
  (fun (k1:int) -&gt;
       (((getbv y @ k1 * power 2 (n-k1-1)) *( (getbv x @ k) * power 2 (n-k-1))))
 /./   n)
  0 n)">
        <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ang_sum_bv_to_int_">
         <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="11"><result status="valid" time="0.52" steps="372276"/></proof>
         </goal>
         <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="0.45" steps="346294"/></proof>
         </goal>
         <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="0.47" steps="346292"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="ang_sum_eq">
         <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="11"><result status="valid" time="0.80" steps="374019"/></proof>
         </goal>
         <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.0.1.1.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="power_sum">
            <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="11"><result status="valid" time="0.52" steps="372357"/></proof>
            </goal>
            <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="11"><result status="valid" time="0.45" steps="346349"/></proof>
            </goal>
            <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.0.1.1.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="11"><result status="valid" time="0.44" steps="346332"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="Hinst">
        <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
        <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.79" steps="374010"/></proof>
        </goal>
        <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.1.2" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.1.2.0" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.1.2.0.0" expl="rewrite premises" proved="true">
          <proof prover="9"><result status="valid" time="1.14" steps="59366"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.0.1.0.0.0.1.3" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.1" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Assert">
   <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_sum_bv_to_int_">
    <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.1.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.47" steps="373099"/></proof>
    </goal>
    <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.1.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.48" steps="373103"/></proof>
    </goal>
    <goal name="ang_sum_sum_bv_to_int_mult&#39;vc.1.0.2" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.47" steps="373101"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_sum_bv_to_int_mult_gen&#39;vc" expl="VC for ang_sum_sum_bv_to_int_mult_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_sum_bv_to_int_mult_gen&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="ang_sum_sum_bv_to_int_mult">
   <goal name="ang_sum_sum_bv_to_int_mult_gen&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.43" steps="345836"/></proof>
   </goal>
   <goal name="ang_sum_sum_bv_to_int_mult_gen&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.45" steps="345834"/></proof>
   </goal>
   <goal name="ang_sum_sum_bv_to_int_mult_gen&#39;vc.0.2" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.44" steps="345834"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_int_decomp_gen_rev&#39;vc" expl="VC for ang_sum_int_decomp_gen_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_int_decomp_gen_rev&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ang_sum_int_decomp">
   <goal name="ang_sum_int_decomp_gen_rev&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.46" steps="372354"/></proof>
   </goal>
   <goal name="ang_sum_int_decomp_gen_rev&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.54" steps="372358"/></proof>
   </goal>
   <goal name="ang_sum_int_decomp_gen_rev&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.52" steps="372356"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_ang_mult_int_e&#39;vc" expl="VC for sum_ang_mult_int_e" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_ang_mult_int_e&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.53" steps="401388"/></proof>
  </goal>
  <goal name="sum_ang_mult_int_e&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.66" steps="401504"/></proof>
  </goal>
  <goal name="sum_ang_mult_int_e&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.01" steps="429932"/></proof>
  </goal>
  <goal name="sum_ang_mult_int_e&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.50" steps="401578"/></proof>
  </goal>
  <goal name="sum_ang_mult_int_e&#39;vc.4" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_ang_mult_int_e&#39;vc.4.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.93" steps="464596"/></proof>
   </goal>
   <goal name="sum_ang_mult_int_e&#39;vc.4.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.54" steps="435044"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_ang_mult_int_e&#39;vc.5" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.92" steps="464646"/></proof>
  </goal>
  <goal name="sum_ang_mult_int_e&#39;vc.6" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="sum_ang_mult_int_e&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="sum_ang_mult_int_e&#39;vc.6.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="1.18" steps="482218"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sum_ang_mult_int_e&#39;vc.6.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="sum_ang_mult_int_e&#39;vc.6.1.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="sum_ang_mult_int_e&#39;vc.6.1.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(fun (i:int) -&gt; (f @ i) *.* o6)" arg2="o5">
      <goal name="sum_ang_mult_int_e&#39;vc.6.1.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(fun (i:int) -&gt; (f @ i) *.* o6)" arg2="o5" arg3="in" arg4="H">
       <goal name="sum_ang_mult_int_e&#39;vc.6.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="H8">
        <goal name="sum_ang_mult_int_e&#39;vc.6.1.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="0"><result status="valid" time="0.57"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="sum_ang_mult_int_e&#39;vc.6.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="1.07" steps="525109"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="sum_ang_mult_int_e&#39;vc.6.1.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="0.58"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_sum&#39;vc" expl="VC for real_to_ang_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_sum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.55" steps="380986"/></proof>
  </goal>
  <goal name="real_to_ang_sum&#39;vc.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="real_to_ang_sum&#39;vc.1.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.88" steps="409650"/></proof>
   </goal>
   <goal name="real_to_ang_sum&#39;vc.1.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.54" steps="381015"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="real_to_ang_sum&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.94" steps="409688"/></proof>
  </goal>
  <goal name="real_to_ang_sum&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.30" steps="456604"/></proof>
  </goal>
  <goal name="real_to_ang_sum&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.60" steps="410112"/></proof>
  </goal>
  <goal name="real_to_ang_sum&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="real_to_ang_sum&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_sum_cardone">
    <goal name="real_to_ang_sum&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="real_to_ang_sum&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.72" steps="409765"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="real_to_ang_sum&#39;vc.5.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.45" steps="381015"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="real_to_ang_sum&#39;vc.5.1" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_sum_plus_one">
    <goal name="real_to_ang_sum&#39;vc.5.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="real_to_ang_sum&#39;vc.5.1.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures">
      <goal name="real_to_ang_sum&#39;vc.5.1.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="real_to_ang_sum&#39;vc.5.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures1">
        <goal name="real_to_ang_sum&#39;vc.5.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="Real_To_Ang_add">
         <goal name="real_to_ang_sum&#39;vc.5.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="11"><result status="valid" time="0.49" steps="410137"/></proof>
         </goal>
         <goal name="real_to_ang_sum&#39;vc.5.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="1.11" steps="488033"/></proof>
         </goal>
         <goal name="real_to_ang_sum&#39;vc.5.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="real_ind_sum">
          <goal name="real_to_ang_sum&#39;vc.5.1.0.0.0.0.0.2.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.81" steps="439486"/></proof>
          </goal>
          <goal name="real_to_ang_sum&#39;vc.5.1.0.0.0.0.0.2.1" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="real_to_ang_sum&#39;vc.5.1.0.0.0.0.0.2.1.0" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="1.09" steps="488810"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="real_to_ang_sum&#39;vc.5.1.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.74" steps="439479"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_sum_int&#39;vc" expl="VC for real_to_ang_sum_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_sum_int&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.96" steps="401464"/></proof>
  </goal>
  <goal name="real_to_ang_sum_int&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.53" steps="401862"/></proof>
  </goal>
  <goal name="real_to_ang_sum_int&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.50" steps="401994"/></proof>
  </goal>
  <goal name="real_to_ang_sum_int&#39;vc.3" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="real_to_ang_sum_int&#39;vc.3.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.76" steps="374641"/></proof>
   </goal>
   <goal name="real_to_ang_sum_int&#39;vc.3.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.47" steps="347312"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="real_to_ang_sum_int&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.93" steps="374679"/></proof>
  </goal>
  <goal name="real_to_ang_sum_int&#39;vc.5" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.43" steps="347294"/></proof>
  </goal>
  <goal name="real_to_ang_sum_int&#39;vc.6" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.91" steps="430819"/></proof>
  </goal>
  <goal name="real_to_ang_sum_int&#39;vc.7" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.76" steps="430546"/></proof>
  </goal>
  <goal name="real_to_ang_sum_int&#39;vc.8" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.57" steps="402174"/></proof>
  </goal>
  <goal name="real_to_ang_sum_int&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="real_to_ang_sum_int&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="real_to_ang_sum_int&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures1">
     <goal name="real_to_ang_sum_int&#39;vc.9.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="real_to_ang_sum_int&#39;vc.9.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="11"><result status="valid" time="0.68" steps="430643"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="real_to_ang_sum_int&#39;vc.9.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="real_to_ang_sum_int&#39;vc.9.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures1">
     <goal name="real_to_ang_sum_int&#39;vc.9.1.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="real_to_ang_sum_int&#39;vc.9.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures2">
       <goal name="real_to_ang_sum_int&#39;vc.9.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="real_to_ang_sum_int&#39;vc.9.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ind_isum_plus_one">
         <goal name="real_to_ang_sum_int&#39;vc.9.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="Real_To_Ang_add">
          <goal name="real_to_ang_sum_int&#39;vc.9.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="real_to_ang_eq">
           <goal name="real_to_ang_sum_int&#39;vc.9.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="1.11" steps="492073"/></proof>
           </goal>
           <goal name="real_to_ang_sum_int&#39;vc.9.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
            <goal name="real_to_ang_sum_int&#39;vc.9.1.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
             <goal name="real_to_ang_sum_int&#39;vc.9.1.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="real_to_ang_sum_int&#39;vc.9.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="11"><result status="valid" time="1.21" steps="489973"/></proof>
          </goal>
          <goal name="real_to_ang_sum_int&#39;vc.9.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="11"><result status="valid" time="1.20" steps="489985"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="real_to_ang_sum_int&#39;vc.9.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="0.47" steps="402218"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_sum_int_gen&#39;vc" expl="VC for real_to_ang_sum_int_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_sum_int_gen&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="real_to_ang_sum_int">
   <goal name="real_to_ang_sum_int_gen&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.45" steps="347478"/></proof>
   </goal>
   <goal name="real_to_ang_sum_int_gen&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.47" steps="347463"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="real_to_ang_bv_inversion&#39;vc" expl="VC for real_to_ang_bv_inversion" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="real_to_ang_bv_inversion&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.82" steps="375090"/></proof>
  </goal>
  <goal name="real_to_ang_bv_inversion&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.53" steps="373784"/></proof>
  </goal>
  <goal name="real_to_ang_bv_inversion&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.47" steps="373788"/></proof>
  </goal>
  <goal name="real_to_ang_bv_inversion&#39;vc.3" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="Ensures1">
   <goal name="real_to_ang_bv_inversion&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(real_to_ang
    (x
     *. i_to_c
        (ind_isum (fun (k:int) -&gt; (getbv y @ k) * power 2 k) 0 (length y))))" arg2="(ang_sum
  (fun (i:int) -&gt;
    real_to_ang
    (x *. i_to_c ((fun (i1:int) -&gt; (getbv y @ i1) * power 2 i1) @ i)))
  0 ft)">
    <goal name="real_to_ang_bv_inversion&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="ang_sum_eq">
     <goal name="real_to_ang_bv_inversion&#39;vc.3.0.0.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="0.92" steps="431139"/></proof>
     </goal>
     <goal name="real_to_ang_bv_inversion&#39;vc.3.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="real_to_ang_bv_inversion&#39;vc.3.0.0.1.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="real_to_ang_bv_inversion&#39;vc.3.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.56"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="real_to_ang_bv_inversion&#39;vc.3.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="Requires">
     <goal name="real_to_ang_bv_inversion&#39;vc.3.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures">
      <goal name="real_to_ang_bv_inversion&#39;vc.3.0.1.0.0" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="real_to_ang_eq">
       <goal name="real_to_ang_bv_inversion&#39;vc.3.0.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="9"><result status="valid" time="1.58" steps="62817"/></proof>
       </goal>
       <goal name="real_to_ang_bv_inversion&#39;vc.3.0.1.0.0.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="mult_eq_t">
        <goal name="real_to_ang_bv_inversion&#39;vc.3.0.1.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.54" steps="402565"/></proof>
        </goal>
        <goal name="real_to_ang_bv_inversion&#39;vc.3.0.1.0.0.1.1" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="i_to_c_eq">
         <goal name="real_to_ang_bv_inversion&#39;vc.3.0.1.0.0.1.1.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="ind_isum_eq">
          <goal name="real_to_ang_bv_inversion&#39;vc.3.0.1.0.0.1.1.0.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="real_to_ang_bv_inversion&#39;vc.3.0.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_ang_mult_int&#39;vc" expl="VC for sum_ang_mult_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_ang_mult_int&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.51" steps="375430"/></proof>
  </goal>
  <goal name="sum_ang_mult_int&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.48" steps="375546"/></proof>
  </goal>
  <goal name="sum_ang_mult_int&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.00" steps="403655"/></proof>
  </goal>
  <goal name="sum_ang_mult_int&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.91" steps="403865"/></proof>
  </goal>
  <goal name="sum_ang_mult_int&#39;vc.4" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_ang_mult_int&#39;vc.4.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.80" steps="404182"/></proof>
   </goal>
   <goal name="sum_ang_mult_int&#39;vc.4.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.48" steps="375918"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_ang_mult_int&#39;vc.5" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.78" steps="404229"/></proof>
  </goal>
  <goal name="sum_ang_mult_int&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_ang_mult_int&#39;vc.6.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="1.24" steps="4041239"/></proof>
   </goal>
   <goal name="sum_ang_mult_int&#39;vc.6.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="sum_ang_mult_int&#39;vc.6.1.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures4">
     <goal name="sum_ang_mult_int&#39;vc.6.1.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="sum_ang_mult_int&#39;vc.6.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures">
       <goal name="sum_ang_mult_int&#39;vc.6.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures2">
        <goal name="sum_ang_mult_int&#39;vc.6.1.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="11"><result status="valid" time="0.69" steps="404298"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc" expl="VC for ang_sum_bv_to_int_inversion_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.47" steps="374185"/></proof>
  </goal>
  <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1" expl="postcondition" proved="true">
  <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Ensures">
   <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ang_sum
    (fun (i:int) -&gt;
      real_to_ang ((theta *. i_to_c (power 2 i)) *. i_to_c (getbv x @ i)))
    0 n)" arg2="(ang_sum
    (fun (i:int) -&gt;
      real_to_ang ((theta *. i_to_c (power 2 i * (getbv x @ i))) ))
    0 n)">
    <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures">
     <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="real_to_ang_eq">
      <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="1.27" steps="485498"/></proof>
      </goal>
      <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.0.0.1" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="mult_eq_t">
       <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.56" steps="402932"/></proof>
       </goal>
       <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.0.0.1.1" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="bv_to_int_inversion_sum_inc">
        <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.0.0.1.1.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="i_to_c_eq">
         <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.0.0.1.1.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="ind_isum_eq_gen">
          <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="11"><result status="valid" time="0.55" steps="402994"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.54" steps="402932"/></proof>
          </goal>
          <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.0.0.1.1.0.0.2" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.56" steps="402934"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.0.0.1.1.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.88" steps="431508"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.55" steps="402934"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="ang_sum_eq">
     <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.1.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="1.08" steps="431518"/></proof>
     </goal>
     <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.1.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.1.1.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="ang_sum_bv_to_int_inversion_pre&#39;vc.1.0.1.1.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.66"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_bv_to_int_inversion&#39;vc" expl="VC for ang_sum_bv_to_int_inversion" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_bv_to_int_inversion&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="ang_sum_bv_to_int_inversion_pre">
   <goal name="ang_sum_bv_to_int_inversion&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.46" steps="348637"/></proof>
   </goal>
   <goal name="ang_sum_bv_to_int_inversion&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.45" steps="348635"/></proof>
   </goal>
   <goal name="ang_sum_bv_to_int_inversion&#39;vc.0.2" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.44" steps="348635"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_bv_to_int_opp_pre&#39;vc" expl="VC for ang_sum_bv_to_int_opp_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.59" steps="374923"/></proof>
  </goal>
  <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1" expl="postcondition" proved="true">
  <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Ensures">
   <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ang_sum
    (fun (i:int) -&gt;
      real_to_ang
      ((theta *. i_to_c (power 2 ((n - i) - 1))) *. i_to_c (- (getbv x @ i))))
    0 n)" arg2="(ang_sum
   (fun (i:int) -&gt;
     real_to_ang (theta *. i_to_c (power 2 ((n - i) - 1) * (- (getbv x @ i)))))
   0 n)">
    <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures">
     <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="real_to_ang_eq">
      <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="1.21" steps="486453"/></proof>
      </goal>
      <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.0.0.1" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="mult_eq_t">
       <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.52" steps="403682"/></proof>
       </goal>
       <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.0.0.1.1" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="bv_to_int_sum_opp">
        <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.0.0.1.1.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="i_to_c_eq">
         <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.0.0.1.1.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="ind_isum_eq_gen">
          <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(power 2 ((length x - 1) - k))" arg2="(power 2 ((n - k) - 1))">
             <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.0.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="11"><result status="valid" time="0.54" steps="403768"/></proof>
             </goal>
             <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.0.0.1.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="11"><result status="valid" time="0.73" steps="413217"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.53" steps="403682"/></proof>
          </goal>
          <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.0.0.1.1.0.0.2" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.55" steps="403684"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.53" steps="403684"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="ang_sum_eq">
     <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.1.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="1.07" steps="432568"/></proof>
     </goal>
     <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.1.1" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.1.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="ang_sum_bv_to_int_opp_pre&#39;vc.1.0.1.1.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.60"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_bv_to_int_opp&#39;vc" expl="VC for ang_sum_bv_to_int_opp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_bv_to_int_opp&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="ang_sum_bv_to_int_opp_pre">
   <goal name="ang_sum_bv_to_int_opp&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.46" steps="349438"/></proof>
   </goal>
   <goal name="ang_sum_bv_to_int_opp&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.47" steps="349436"/></proof>
   </goal>
   <goal name="ang_sum_bv_to_int_opp&#39;vc.0.2" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.44" steps="349436"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_bv_to_int_mult_pre&#39;vc" expl="VC for ang_sum_bv_to_int_mult_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="375751"/></proof>
  </goal>
  <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="bv_to_int_sum">
   <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="Ensures" arg2="theta">
    <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(length x)" arg2="n">
     <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Hinst">
      <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(ang_sum
    (fun (i:int) -&gt;
      real_to_ang
      ((theta *. i_to_c (power 2 ((n - i) - 1))) *. i_to_c (getbv x @ i)))
    0 n)" arg2="( ang_sum
  (fun (i:int) -&gt;
    real_to_ang (theta *. i_to_c (power 2 ((n - i) - 1) * (getbv x @ i))))
  0 n)">
       <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="Hinst">
        <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="real_to_ang_eq">
         <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="9"><result status="valid" time="1.43" steps="60557"/></proof>
         </goal>
         <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="mult_eq_t">
          <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.53" steps="404705"/></proof>
          </goal>
          <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="i_to_c_eq">
           <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="ind_isum_eq">
            <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
             <proof prover="11"><result status="valid" time="0.53" steps="404829"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.59" steps="404707"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="ang_sum_eq">
        <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.90" steps="433776"/></proof>
        </goal>
        <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0.0.0.0.1.1" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0.0.0.0.1.1.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="0.58"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="ang_sum_bv_to_int_mult_pre&#39;vc.1.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.50" steps="404744"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ang_sum_bv_to_int_mult&#39;vc" expl="VC for ang_sum_bv_to_int_mult" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_sum_bv_to_int_mult&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="ang_sum_bv_to_int_mult_pre">
   <goal name="ang_sum_bv_to_int_mult&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.44" steps="350272"/></proof>
   </goal>
   <goal name="ang_sum_bv_to_int_mult&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.45" steps="350270"/></proof>
   </goal>
   <goal name="ang_sum_bv_to_int_mult&#39;vc.0.2" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.45" steps="350270"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc" expl="VC for rewrite_ang_sum_sum_to_bv_and_inversion" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.22" steps="512245"/></proof>
  </goal>
  <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.77" steps="481183"/></proof>
  </goal>
  <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.2.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="((-(getbv x @ k) * power 2 ((n - k) - 1)) * ((getbv z @ a) * power 2 a))" arg2="(- getbv x k * getbv z a * power 2 (n-k+a-1))
">
    <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.2.0.0" expl="precondition" proved="true">
    <transf name="assert" proved="true" arg1="(forall a b c d. (a*b) * (c*d) = (a*c) * (b*d))">
     <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.2.0.0.0" expl="asserted formula" proved="true">
     <proof prover="11"><result status="valid" time="0.72" steps="481367"/></proof>
     </goal>
     <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.2.0.0.1" expl="precondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.2.0.0.1.0" expl="precondition" proved="true">
      <proof prover="9"><result status="valid" time="1.46" steps="61105"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.2.0.1" expl="equality hypothesis" proved="true">
    <transf name="assert" proved="true" arg1="(forall a b c d. (a*b) * (c*d) = (a*c) * (b*d))">
     <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.2.0.1.0" expl="asserted formula" proved="true">
     <proof prover="11"><result status="valid" time="0.75" steps="481367"/></proof>
     </goal>
     <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.2.0.1.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="h">
      <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.2.0.1.1.0" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="mult_eq">
       <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.2.0.1.1.0.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.72" steps="481369"/></proof>
       </goal>
       <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.2.0.1.1.0.1" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="power_sum_rev">
        <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.2.0.1.1.0.1.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.71" steps="481427"/></proof>
        </goal>
        <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.2.0.1.1.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="1.14" steps="512582"/></proof>
        </goal>
        <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.2.0.1.1.0.1.2" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.67" steps="481371"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.3" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.3.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="((-(getbv x @ k) * power 2 ((n - k) - 1)) * ((getbv z @ a) * power 2 a))" arg2="(- getbv x k * getbv z a * power 2 (n-k+a-1))
">
    <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.3.0.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(power 2 (((n - k) + a) - 1))" arg2="(power 2 (((n - k) + a) - 1))">
     <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.3.0.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="int_to_ang_eq">
      <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.3.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="mult_eq">
       <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.3.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.61" steps="481714"/></proof>
       </goal>
       <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.3.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.65" steps="481768"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.3.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.65" steps="481714"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.3.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.68" steps="481714"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.3.0.1" expl="equality hypothesis" proved="true">
    <transf name="replace" proved="true" arg1="(((n - k) + a) - 1)" arg2="(n-k-1+a)">
     <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.3.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="power_sum">
      <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.3.0.1.0.0" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="0.68" steps="481817"/></proof>
      </goal>
      <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.3.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.65" steps="481733"/></proof>
      </goal>
      <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.3.0.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.65" steps="481716"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.3.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.63" steps="481754"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.4" expl="assertion" proved="true">
  <transf name="apply" proved="true" arg1="ang_sum_eq">
   <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.4.0" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.93" steps="512996"/></proof>
   </goal>
   <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.4.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.4.1.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.4.1.0.0" expl="apply premises" proved="true">
     <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Ensures">
      <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.4.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures">
       <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.4.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ang_sum_eq">
        <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.4.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="1.01" steps="513019"/></proof>
        </goal>
        <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.4.1.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.4.1.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.4.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
           <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.4.1.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="real_to_ang_eq">
            <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.4.1.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="0.81"/></proof>
            </goal>
            <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.4.1.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="12"><result status="valid" time="3.14" steps="11176658"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.4.1.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="11"><result status="valid" time="1.02" steps="513086"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.4.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.60" steps="481672"/></proof>
       </goal>
       <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.4.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.63" steps="481672"/></proof>
       </goal>
       <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.4.1.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.64" steps="481681"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.5" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.67" steps="482059"/></proof>
  </goal>
  <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.6" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="Assert">
   <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.6.0" expl="assertion" proved="true">
   <transf name="apply" proved="true" arg1="ang_sum_eq">
    <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.6.0.0" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="1.19" steps="513938"/></proof>
    </goal>
    <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.6.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.6.0.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.6.0.1.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="((i_to_c (power 2 k * (getbv y @ k)) *. i_to_c (- bv_to_int x))
     /. i_to_c (power 2 n))" arg2="(((i_to_c (power 2 k * (getbv y @ k)) /. i_to_c (power 2 n)) *. i_to_c (- bv_to_int x))
    )">
       <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.6.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="Ensures">
        <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.6.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="ang_sum_eq">
         <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.6.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="11"><result status="valid" time="1.27" steps="514005"/></proof>
         </goal>
         <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.6.0.1.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.6.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.6.0.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="real_to_ang_eq">
            <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.6.0.1.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="1.18"/></proof>
            </goal>
            <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.6.0.1.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
            <proof prover="11"><result status="valid" time="1.82" steps="584999"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.6.0.1.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.76" steps="482339"/></proof>
        </goal>
        <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.6.0.1.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="0.88"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.6.0.1.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="1.70" steps="574801"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.7" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.66" steps="482573"/></proof>
  </goal>
  <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="((i_to_c (bv_to_int x) *. i_to_c (bv_to_int (bv_inversion y)))
     /. i_to_c (power 2 n))" arg2="(((i_to_c (bv_to_int x)  /. i_to_c (power 2 n)) *. i_to_c (bv_to_int (bv_inversion y)))
    )">
   <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Assert">
    <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="((i_to_c (- bv_to_int x) *. i_to_c (bv_to_int (bv_inversion y)))
     /. i_to_c (power 2 n))" arg2="(((i_to_c (- bv_to_int x)  /. i_to_c (power 2 n))*. i_to_c (bv_to_int (bv_inversion y)))
    )
">
     <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures">
      <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="ang_sum_eq">
       <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="1.22" steps="514581"/></proof>
       </goal>
       <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="real_to_ang_eq">
          <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="2.32" steps="590818"/></proof>
          </goal>
          <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
           <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="1.55" steps="590428"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.60" steps="482775"/></proof>
      </goal>
      <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8.0.0.0.2" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="real_div">
       <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8.0.0.0.2.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="1.16" steps="514924"/></proof>
       </goal>
       <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8.0.0.0.2.1" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="1.62" steps="569342"/></proof>
       </goal>
       <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8.0.0.0.2.2" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="1.17" steps="514923"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="1.34" steps="573133"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="rewrite_ang_sum_sum_to_bv_and_inversion&#39;vc.8.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="1.34" steps="572839"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="rewrite_ang_sum_sum_to_bv_and_inversion_gen&#39;vc" expl="VC for rewrite_ang_sum_sum_to_bv_and_inversion_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="rewrite_ang_sum_sum_to_bv_and_inversion_gen&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="rewrite_ang_sum_sum_to_bv_and_inversion">
   <goal name="rewrite_ang_sum_sum_to_bv_and_inversion_gen&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="real_to_ang_eq">
    <goal name="rewrite_ang_sum_sum_to_bv_and_inversion_gen&#39;vc.0.0.0" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="1.79" steps="446941"/></proof>
    </goal>
    <goal name="rewrite_ang_sum_sum_to_bv_and_inversion_gen&#39;vc.0.0.1" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="1.09" steps="437096"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="rewrite_ang_sum_sum_to_bv_and_inversion_gen&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.43" steps="351235"/></proof>
   </goal>
   <goal name="rewrite_ang_sum_sum_to_bv_and_inversion_gen&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.48" steps="351233"/></proof>
   </goal>
   <goal name="rewrite_ang_sum_sum_to_bv_and_inversion_gen&#39;vc.0.3" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.47" steps="351233"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_by_sum_mult_break&#39;vc" expl="VC for int_to_ang_by_sum_mult_break" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_by_sum_mult_break&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.51" steps="351861"/></proof>
  </goal>
  <goal name="int_to_ang_by_sum_mult_break&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.47" steps="351865"/></proof>
  </goal>
  <goal name="int_to_ang_by_sum_mult_break&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="351868"/></proof>
  </goal>
  <goal name="int_to_ang_by_sum_mult_break&#39;vc.3" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ind_isum_to_d_sum">
   <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ang_sum
  (fun (k:int) -&gt;
    
    ((fun (j:int) -&gt;
       ind_isum
       (fun (i:int) -&gt;
         ((getbv x @ i) * (getbv y @ j)) * power 2 (((n - i) - 1) + j))
       j n)
     @ k)
 /./   n)
  0 n)" arg2="(ang_inv (ang_sum
  (fun (j:int) -&gt;
    ang_sum
    (fun (i:int) -&gt;
            (((- (getbv x @ i)) * (getbv y @ j)) * power 2 (((n - i) - 1) + j)) /./n)
    j n)
  0 n))">
    <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Ensures">
     <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="Real_To_Ang_inv">
      <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="goal_comm">
       <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="instantiate" proved="true" arg1="int_to_ang_to_real_to_ang_gen" arg2="(bv_to_int x * bv_to_int (bv_inversion y)),n,(i_to_c (bv_to_int x) *. i_to_c (bv_to_int (bv_inversion y)))">
        <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Hinst">
         <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="real_to_ang_eq">
          <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="real_mult">
           <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="1.92" steps="484172"/></proof>
           </goal>
           <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="1.29" steps="464096"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="assert" proved="true" arg1="(forall x x&#39;. -. x= x&#39; -&gt;  x*. pow_inv_2 n = -. (x&#39;/. i_to_c (power 2 n)))">
           <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
            <transf name="replace" proved="true" arg1="(-. (x&#39; /. i_to_c (power 2 n)))" arg2="( (-.x&#39; /. i_to_c (power 2 n)))">
             <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
             <proof prover="11"><result status="valid" time="1.17" steps="466397"/></proof>
             </goal>
             <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="11"><result status="valid" time="1.11" steps="466853"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="h">
            <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="i_to_c_minus">
             <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="minus_out">
              <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="0.89" steps="407866"/></proof>
         </goal>
         <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="9"><result status="valid" time="1.34" steps="63059"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="2.14" steps="476479"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_sum_inv">
     <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="ang_sum_eq">
      <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.88" steps="407740"/></proof>
      </goal>
      <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1.0.1.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1.0.1.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ang_sum_inv">
         <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(ang_sum
    (fun (k1:int) -&gt;
      ang_inv
      (
       (((- (getbv x @ k1)) * (getbv y @ k)) * power 2 (((n - k1) - 1) + k))
  /./     n))
    k n)" arg2="(ang_sum
    (fun (k1:int) -&gt;
            (       ((( (getbv x @ k1)) * (getbv y @ k)) * power 2 (((n - k1) - 1) + k))
    /./   n))
    k n)
">
           <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1.0.1.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="ind_isum_to_d_sum">
            <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="ang_sum_eq">
             <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="11"><result status="valid" time="0.92" steps="407818"/></proof>
             </goal>
             <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="11"><result status="valid" time="0.89" steps="407811"/></proof>
            </goal>
            <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="11"><result status="valid" time="0.53" steps="379286"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="apply" proved="true" arg1="ang_sum_eq">
            <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="11"><result status="valid" time="0.92" steps="407818"/></proof>
            </goal>
            <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1.0.1.0.0.0.0.1.1.0" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.0.1.0.1.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
              <proof prover="11"><result status="valid" time="1.38" steps="497374"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.87" steps="407740"/></proof>
   </goal>
   <goal name="int_to_ang_by_sum_mult_break&#39;vc.3.2" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.53" steps="379246"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_by_sum_mult_break_gen&#39;vc" expl="VC for int_to_ang_by_sum_mult_break_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_by_sum_mult_break_gen&#39;vc.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="int_to_ang_by_sum_mult_break">
   <goal name="int_to_ang_by_sum_mult_break_gen&#39;vc.0.0" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.46" steps="352365"/></proof>
   </goal>
   <goal name="int_to_ang_by_sum_mult_break_gen&#39;vc.0.1" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.47" steps="352363"/></proof>
   </goal>
   <goal name="int_to_ang_by_sum_mult_break_gen&#39;vc.0.2" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.49" steps="352363"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc" expl="VC for int_to_ang_by_sum_mult_break_neg" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(ind_isum
   (fun (j:int) -&gt;
     - ind_isum
       (fun (i:int) -&gt;
         ((getbv x @ i) * (getbv y @ j)) * power 2 (((n - i) - 1) + j))
       j n)
   0 n)" arg2="(-ind_isum
   (fun (j:int) -&gt;
      ind_isum
       (fun (i:int) -&gt;
         ((getbv x @ i) * (getbv y @ j)) * power 2 (((n - i) - 1) + j))
       j n)
   0 n)">
   <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="((- bv_to_int x) * bv_to_int (bv_inversion y))" arg2="(-(( bv_to_int x) * bv_to_int (bv_inversion y)))">
    <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="assert" proved="true" arg1="(forall k n. 0&lt;= n -&gt;  (-k) /./ n = ang_inv ( k /./ n))
">
     <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="11"><result status="valid" time="1.09" steps="433042"/></proof>
     </goal>
     <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="h">
      <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.0.0.1.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="h">
       <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.0.0.1.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="int_to_ang_by_sum_mult_break_gen">
        <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.0.0.1.0.0.0" expl="postcondition" proved="true">
        <proof prover="11"><result status="valid" time="0.47" steps="353036"/></proof>
        </goal>
        <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.46" steps="353040"/></proof>
        </goal>
        <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.47" steps="353038"/></proof>
        </goal>
        <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.0.0.1.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.47" steps="353038"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.93" steps="380970"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.77" steps="380970"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.48" steps="352996"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="((- bv_to_int x) * bv_to_int (bv_inversion y))" arg2="(-(( bv_to_int x) * bv_to_int (bv_inversion y)))">
    <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.1.0" expl="equality hypothesis" proved="true">
    <transf name="assert" proved="true" arg1="(forall k n. 0&lt;= n -&gt; (-k)/./ n = ang_inv ( k /./ n))
">
     <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.1.0.0" expl="asserted formula" proved="true">
     <proof prover="11"><result status="valid" time="1.13" steps="433042"/></proof>
     </goal>
     <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.1.0.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="goal_comm">
      <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.1.0.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="minus_ind_isum">
       <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.1.0.1.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
       <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.1.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.80" steps="380970"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="int_to_ang_by_sum_mult_break_neg&#39;vc.0.1.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.46" steps="352996"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Bin_check_zero" proved="true">
 <goal name="bin_check_zero&#39;vc" expl="VC for bin_check_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="bin_check_zero&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bin_check_zero&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.45" steps="362359"/></proof>
   </goal>
   <goal name="bin_check_zero&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="11"><result status="valid" time="0.50" steps="362375"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="bin_check_zero&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.79" steps="389219"/></proof>
  </goal>
  <goal name="bin_check_zero&#39;vc.2" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_binary_l">
   <goal name="bin_check_zero&#39;vc.2.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bin_check_zero&#39;vc.2.0.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="bin_check_zero&#39;vc.2.0.0.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="1.17" steps="438792"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="bin_check_zero&#39;vc.2.0.1" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="bin_check_zero&#39;vc.2.0.1.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="1.17" steps="438789"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bin_check_zero&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bin_check_zero&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.54" steps="371434"/></proof>
   </goal>
   <goal name="bin_check_zero&#39;vc.3.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bin_check_zero&#39;vc.3.1.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="1.02" steps="438953"/></proof>
    </goal>
    <goal name="bin_check_zero&#39;vc.3.1.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bin_check_zero&#39;vc.3.1.1.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H1">
      <goal name="bin_check_zero&#39;vc.3.1.1.0.0" expl="postcondition" proved="true">
      <transf name="eliminate_if" proved="true" >
       <goal name="bin_check_zero&#39;vc.3.1.1.0.0.0" expl="VC for bin_check_zero" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="bin_check_zero&#39;vc.3.1.1.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="11"><result status="valid" time="0.46" steps="366907"/></proof>
        </goal>
        <goal name="bin_check_zero&#39;vc.3.1.1.0.0.0.1" expl="postcondition" proved="true">
        <transf name="case" proved="true" arg1="(j = 0)">
         <goal name="bin_check_zero&#39;vc.3.1.1.0.0.0.1.0" expl="true case (postcondition)" proved="true">
         <proof prover="11"><result status="valid" time="0.53" steps="375950"/></proof>
         </goal>
         <goal name="bin_check_zero&#39;vc.3.1.1.0.0.0.1.1" expl="false case (postcondition)" proved="true">
         <transf name="instantiate" proved="true" arg1="H3" arg2="(j-1)">
          <goal name="bin_check_zero&#39;vc.3.1.1.0.0.0.1.1.0" expl="false case (postcondition)" proved="true">
          <proof prover="11"><result status="valid" time="1.19" steps="444547"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="bin_check_zero&#39;vc.3.1.1.0.0.0.2" expl="postcondition" proved="true">
        <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H1">
         <goal name="bin_check_zero&#39;vc.3.1.1.0.0.0.2.0" expl="postcondition" proved="true">
         <proof prover="11"><result status="valid" time="0.98" steps="444433"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="bin_check_zero&#39;vc.3.1.1.0.0.0.3" expl="postcondition" proved="true">
        <proof prover="11"><result status="valid" time="0.47" steps="366841"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="bin_check_zero&#39;vc.3.1.1.1" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="1.03" steps="438312"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bin_check_zero_int&#39;vc" expl="VC for bin_check_zero_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="bin_check_zero_int&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="bin_check_zero&#39;spec">
   <goal name="bin_check_zero_int&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="eliminate_if" proved="true" >
    <goal name="bin_check_zero_int&#39;vc.0.0.0" expl="VC for bin_check_zero_int" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="bin_check_zero_int&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.58" steps="367019"/></proof>
     </goal>
     <goal name="bin_check_zero_int&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <transf name="assert" proved="true" arg1="(bv_to_int (int_to_bv i n) = power 2 n -1)">
      <goal name="bin_check_zero_int&#39;vc.0.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="bv_to_int_all_one_gen">
       <goal name="bin_check_zero_int&#39;vc.0.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.88" steps="398351"/></proof>
       </goal>
       <goal name="bin_check_zero_int&#39;vc.0.0.0.1.0.1" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="bin_check_zero_int&#39;vc.0.0.0.1.0.1.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="1.14" steps="446521"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="bin_check_zero_int&#39;vc.0.0.0.1.0.2" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="bin_check_zero_int&#39;vc.0.0.0.1.0.2.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(getbv (int_to_bv i1 n) @ i)" arg2="(int_to_bin i1 n i)">
         <goal name="bin_check_zero_int&#39;vc.0.0.0.1.0.2.0.0" expl="apply premises" proved="true">
         <proof prover="11"><result status="valid" time="1.23" steps="444118"/></proof>
         </goal>
         <goal name="bin_check_zero_int&#39;vc.0.0.0.1.0.2.0.1" expl="equality hypothesis" proved="true">
         <proof prover="11"><result status="valid" time="1.21" steps="446610"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="bin_check_zero_int&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="11"><result status="valid" time="1.35" steps="446040"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="bin_check_zero_int&#39;vc.0.0.0.2" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="bv_to_int_all_one_gen_rev" arg2="n">
      <goal name="bin_check_zero_int&#39;vc.0.0.0.2.0" expl="postcondition" proved="true">
      <transf name="assert" proved="true" arg1="(int_to_bin i n j = 1)">
       <goal name="bin_check_zero_int&#39;vc.0.0.0.2.0.0" expl="asserted formula" proved="true">
       <transf name="replace" proved="true" arg1="(int_to_bin i n j)" arg2="(getbv (int_to_bv i n) @ j)">
        <goal name="bin_check_zero_int&#39;vc.0.0.0.2.0.0.0" expl="asserted formula" proved="true">
        <proof prover="11"><result status="valid" time="1.32" steps="446257"/></proof>
        </goal>
        <goal name="bin_check_zero_int&#39;vc.0.0.0.2.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="1.09" steps="446800"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="bin_check_zero_int&#39;vc.0.0.0.2.0.1" expl="postcondition" proved="true">
       <proof prover="11"><result status="valid" time="0.60" steps="367244"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="bin_check_zero_int&#39;vc.0.0.0.3" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.44" steps="366987"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="bin_check_zero_int&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.48" steps="332894"/></proof>
   </goal>
   <goal name="bin_check_zero_int&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="2.31" steps="452917"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bin_check_zero_plus_one&#39;vc" expl="VC for bin_check_zero_plus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="bin_check_zero_plus_one&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_if" proved="true" >
   <goal name="bin_check_zero_plus_one&#39;vc.0.0" expl="VC for bin_check_zero_plus_one" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="bin_check_zero_plus_one&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="case" proved="true" arg1="(forall j. 1&lt;= j &lt; n -&gt; x j = 1)">
      <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.0" expl="true case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="bin_check_zero&#39;spec1">
       <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="bin_check_zero&#39;spec1">
        <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
        <proof prover="11"><result status="valid" time="0.56" steps="424148"/></proof>
        </goal>
        <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.94" steps="453370"/></proof>
        </goal>
        <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="set_binary_l">
         <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="1.50" steps="507005"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="h">
           <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="0.56" steps="424227"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.95" steps="453363"/></proof>
       </goal>
       <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.63" steps="424150"/></proof>
       </goal>
       <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="1.33" steps="506962"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.1" expl="false case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="bin_check_zero&#39;spec">
       <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.1.0" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="bin_check_zero&#39;spec">
        <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.1.0.0" expl="false case (postcondition)" proved="true">
        <proof prover="11"><result status="valid" time="0.62" steps="424152"/></proof>
        </goal>
        <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="1.03" steps="453377"/></proof>
        </goal>
        <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="set_binary_l">
         <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.1.0.2.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.1.0.2.0.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.1.0.2.0.0.0" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="1.36" steps="506596"/></proof>
           </goal>
           <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.1.0.2.0.0.1" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="1.58" steps="506588"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
        <transf name="assert" proved="true" arg1="( (exists j:int. 1 &lt;= j /\ j &lt; n /\ (x @ j) &lt;&gt; 1))">
         <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.1.0.3.0" expl="asserted formula" proved="true">
         <proof prover="11"><result status="valid" time="1.17" steps="453414"/></proof>
         </goal>
         <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.1.0.3.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.1.0.3.1.0" expl="rewrite premises" proved="true">
          <transf name="case" proved="true" arg1="(exists j:int.
        0 &lt;= j /\ j &lt; (n - 1) /\ ( x @ (j + 1))  &lt;&gt; 1)">
           <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.1.0.3.1.0.0" expl="true case (rewrite premises)" proved="true">
           <proof prover="11"><result status="valid" time="0.98" steps="453600"/></proof>
           </goal>
           <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.1.0.3.1.0.1" expl="false case (rewrite premises)" proved="true">
           <proof prover="9"><result status="valid" time="1.12" steps="54212"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.98" steps="453370"/></proof>
       </goal>
       <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.56" steps="424154"/></proof>
       </goal>
       <goal name="bin_check_zero_plus_one&#39;vc.0.0.0.0.1.3" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="1.38" steps="506578"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="bin_check_zero_plus_one&#39;vc.0.0.1" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="1.16" steps="446782"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bin_check_zero_two&#39;vc" expl="VC for bin_check_zero_two" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="bin_check_zero_two&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.55"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Real_to_complex_trig" proved="true">
 <goal name="complex_as_a_vector&#39;vc" expl="VC for complex_as_a_vector" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="complex_as_a_vector&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.54" steps="370335"/></proof>
  </goal>
  <goal name="complex_as_a_vector&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.41" steps="370348"/></proof>
  </goal>
  <goal name="complex_as_a_vector&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.18" steps="439295"/></proof>
  </goal>
  <goal name="complex_as_a_vector&#39;vc.3" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="ind_sum_ket_norm_l">
   <goal name="complex_as_a_vector&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ind_sum_plus_one">
    <goal name="complex_as_a_vector&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ind_sum_cardone">
     <goal name="complex_as_a_vector&#39;vc.3.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="complex_as_a_vector&#39;vc.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Ensures1">
       <goal name="complex_as_a_vector&#39;vc.3.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="complex_as_a_vector&#39;vc.3.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="mult_modulus_rev">
         <goal name="complex_as_a_vector&#39;vc.3.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="mult_modulus_rev">
          <goal name="complex_as_a_vector&#39;vc.3.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="modulus_real_pos">
           <goal name="complex_as_a_vector&#39;vc.3.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="rewrite" proved="true" arg1="modulus_real_pos">
            <goal name="complex_as_a_vector&#39;vc.3.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <proof prover="12"><result status="valid" time="10.00" steps="4043820"/></proof>
            </goal>
            <goal name="complex_as_a_vector&#39;vc.3.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="Ensures1">
             <goal name="complex_as_a_vector&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="complex_as_a_vector&#39;vc.3.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
              <proof prover="11"><result status="valid" time="1.29" steps="440293"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="complex_as_a_vector&#39;vc.3.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="Ensures1">
             <goal name="complex_as_a_vector&#39;vc.3.0.0.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="complex_as_a_vector&#39;vc.3.0.0.0.0.0.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
              <proof prover="11"><result status="valid" time="1.20" steps="440466"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="complex_as_a_vector&#39;vc.3.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="11"><result status="valid" time="1.21" steps="440404"/></proof>
           </goal>
           <goal name="complex_as_a_vector&#39;vc.3.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="11"><result status="valid" time="1.23" steps="440582"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="complex_as_a_vector&#39;vc.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.94" steps="399228"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="complex_as_a_vector&#39;vc.3.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.89" steps="401955"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="complex_as_a_vector&#39;vc.3.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.50" steps="372307"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sin&#39;vc" expl="VC for sin" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.38" steps="304531"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cos&#39;vc" expl="VC for cos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.41" steps="304640"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="euler_real_r" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="euler_real_r.0" proved="true">
  <proof prover="11"><result status="valid" time="0.96" steps="371656"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="euler_im_r" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="euler_im_r.0" proved="true">
  <proof prover="11"><result status="valid" time="0.95" steps="371784"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cos_zero" proved="true">
 <proof prover="11"><result status="valid" time="2.90" steps="757986"/></proof>
 </goal>
 <goal name="cos_half_pi" proved="true">
 <transf name="rewrite" proved="true" arg1="cos&#39;def">
  <goal name="cos_half_pi.0" proved="true">
  <transf name="replace" proved="true" arg1="(im *. (pi /. i_to_c 2))" arg2="((im *. pi) /. i_to_c 2)">
   <goal name="cos_half_pi.0.0" proved="true">
   <proof prover="11"><result status="valid" time="0.97" steps="372607"/></proof>
   </goal>
   <goal name="cos_half_pi.0.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.77" steps="332482"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cos_half_pi.1" expl="rewrite premises" proved="true">
  <proof prover="11"><result status="valid" time="0.97" steps="369672"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cos_quarter_pi" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_quarter_pi.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cos_quarter_pi.0.0" proved="true">
   <transf name="rewrite" proved="true" arg1="cos&#39;def">
    <goal name="cos_quarter_pi.0.0.0" proved="true">
    <transf name="replace" proved="true" arg1="(im *. (pi /. i_to_c 4))" arg2="((im *. pi) /. i_to_c 4)">
     <goal name="cos_quarter_pi.0.0.0.0" proved="true">
     <transf name="rewrite" proved="true" arg1="Exp_quarter_pi">
      <goal name="cos_quarter_pi.0.0.0.0.0" proved="true">
      <transf name="assert" proved="true" arg1="(t_real_part  ((squarert_two /. ttwo) +. (im *. (squarert_two /. ttwo))) = (squarert_two /. ttwo))">
       <goal name="cos_quarter_pi.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="11"><result status="valid" time="1.17" steps="369999"/></proof>
       </goal>
       <goal name="cos_quarter_pi.0.0.0.0.0.1" proved="true">
       <proof prover="11"><result status="valid" time="0.39" steps="304903"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cos_quarter_pi.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.70" steps="332481"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cos_quarter_pi.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.94" steps="369888"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cos_pi" proved="true">
 <transf name="rewrite" proved="true" arg1="euler_real_r">
  <goal name="cos_pi.0" proved="true">
  <proof prover="11"><result status="valid" time="0.98" steps="370892"/></proof>
  </goal>
  <goal name="cos_pi.1" expl="rewrite premises" proved="true">
  <proof prover="11"><result status="valid" time="0.42" steps="304910"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sin_zero" proved="true">
 <proof prover="11"><result status="valid" time="3.05" steps="824193"/></proof>
 </goal>
 <goal name="sin_half_pi" proved="true">
 <transf name="rewrite" proved="true" arg1="sin&#39;def">
  <goal name="sin_half_pi.0" proved="true">
  <proof prover="11"><result status="valid" time="3.95" steps="854642"/></proof>
  </goal>
  <goal name="sin_half_pi.1" expl="rewrite premises" proved="true">
  <proof prover="11"><result status="valid" time="1.14" steps="370039"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sin_ang_exp&#39;vc" expl="VC for sin_ang_exp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_ang_exp&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="sin&#39;def">
   <goal name="sin_ang_exp&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="sin_ang_exp&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="real_to_ang_value">
     <goal name="sin_ang_exp&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="1.00" steps="377456"/></proof>
     </goal>
     <goal name="sin_ang_exp&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.39" steps="305593"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sin_ang_exp&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="1.02" steps="373234"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cos_ang_exp&#39;vc" expl="VC for cos_ang_exp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_ang_exp&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="cos&#39;def">
   <goal name="cos_ang_exp&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="real_to_ang_value">
    <goal name="cos_ang_exp&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.98" steps="375733"/></proof>
    </goal>
    <goal name="cos_ang_exp&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.39" steps="305038"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cos_ang_exp&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.94" steps="373532"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sin_ang_exp_&#39;vc" expl="VC for sin_ang_exp_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_ang_exp_&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="sin&#39;def">
   <goal name="sin_ang_exp_&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="sin_ang_exp_&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="real_to_ang_value">
     <goal name="sin_ang_exp_&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(two_pi_i *. (x /. (ttwo *. pi)))" arg2="(im*.x)">
      <goal name="sin_ang_exp_&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="11"><result status="valid" time="0.42" steps="305732"/></proof>
      </goal>
      <goal name="sin_ang_exp_&#39;vc.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="1.07" steps="380237"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="sin_ang_exp_&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="(exp (im *. x))" arg2="(ang_exp (real_to_ang (x /. (ttwo *. pi))))">
      <goal name="sin_ang_exp_&#39;vc.0.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="real_div">
       <goal name="sin_ang_exp_&#39;vc.0.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.40" steps="305734"/></proof>
       </goal>
       <goal name="sin_ang_exp_&#39;vc.0.0.0.1.0.1" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.74" steps="336176"/></proof>
       </goal>
       <goal name="sin_ang_exp_&#39;vc.0.0.0.1.0.2" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="1.11" steps="375309"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="sin_ang_exp_&#39;vc.0.0.0.1.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="real_to_ang_value">
       <goal name="sin_ang_exp_&#39;vc.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
       <transf name="replace" proved="true" arg1="(two_pi_i *. (x /. (ttwo *. pi)))" arg2="(im*.x)">
        <goal name="sin_ang_exp_&#39;vc.0.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.39" steps="305732"/></proof>
        </goal>
        <goal name="sin_ang_exp_&#39;vc.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="1.05" steps="380237"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="sin_ang_exp_&#39;vc.0.0.0.1.1.1" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="real_div">
        <goal name="sin_ang_exp_&#39;vc.0.0.0.1.1.1.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.39" steps="305734"/></proof>
        </goal>
        <goal name="sin_ang_exp_&#39;vc.0.0.0.1.1.1.1" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.83" steps="336176"/></proof>
        </goal>
        <goal name="sin_ang_exp_&#39;vc.0.0.0.1.1.1.2" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="1.02" steps="375309"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sin_ang_exp_&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.43" steps="305105"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cos_ang_exp_&#39;vc" expl="VC for cos_ang_exp_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_ang_exp_&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="cos&#39;def">
   <goal name="cos_ang_exp_&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="cos_ang_exp_&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="real_to_ang_value">
     <goal name="cos_ang_exp_&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(two_pi_i *. (x /. (ttwo *. pi)))" arg2="(im*.x)">
      <goal name="cos_ang_exp_&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="11"><result status="valid" time="0.42" steps="305799"/></proof>
      </goal>
      <goal name="cos_ang_exp_&#39;vc.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="two_pi_i&#39;def">
       <goal name="cos_ang_exp_&#39;vc.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <transf name="replace" proved="true" arg1="((im *. pi) *. ttwo)" arg2="((ttwo *. pi) *. im)">
        <goal name="cos_ang_exp_&#39;vc.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="1.05" steps="378273"/></proof>
        </goal>
        <goal name="cos_ang_exp_&#39;vc.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="0.95" steps="376350"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cos_ang_exp_&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="real_div">
      <goal name="cos_ang_exp_&#39;vc.0.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.40" steps="305801"/></proof>
      </goal>
      <goal name="cos_ang_exp_&#39;vc.0.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.78" steps="336267"/></proof>
      </goal>
      <goal name="cos_ang_exp_&#39;vc.0.0.0.1.2" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="1.19" steps="375551"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="cos_ang_exp_&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.42" steps="305172"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cos_sin_square_add&#39;vc" expl="VC for cos_sin_square_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_sin_square_add&#39;vc.0" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(c_zero &lt;. ttwo*.pi)">
   <goal name="cos_sin_square_add&#39;vc.0.0" expl="asserted formula" proved="true">
   <proof prover="11"><result status="valid" time="1.20" steps="373826"/></proof>
   </goal>
   <goal name="cos_sin_square_add&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.71" steps="330235"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cos_sin_square_add&#39;vc.1" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="real_div">
   <goal name="cos_sin_square_add&#39;vc.1.0" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.43" steps="305268"/></proof>
   </goal>
   <goal name="cos_sin_square_add&#39;vc.1.1" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.85" steps="334125"/></proof>
   </goal>
   <goal name="cos_sin_square_add&#39;vc.1.2" expl="apply premises" proved="true">
   <proof prover="11"><result status="valid" time="0.94" steps="374574"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="cos_sin_square_add&#39;vc.2" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="cos&#39;def">
   <goal name="cos_sin_square_add&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="sin&#39;def">
    <goal name="cos_sin_square_add&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="cos_sin_square_add&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="modulus&#39;def" arg2="in" arg3="Ensures">
      <goal name="cos_sin_square_add&#39;vc.2.0.0.0.0" expl="postcondition" proved="true">
      <transf name="assert" proved="true" arg1="(c_one = ((t_real_part (ang_exp (real_to_ang (x /. (ttwo *. pi))))
    *. t_real_part (ang_exp (real_to_ang (x /. (ttwo *. pi)))))
   +. (t_im_part (ang_exp (real_to_ang (x /. (ttwo *. pi))))
       *. t_im_part (ang_exp (real_to_ang (x /. (ttwo *. pi)))))))">
       <goal name="cos_sin_square_add&#39;vc.2.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="11"><result status="valid" time="1.01" steps="379686"/></proof>
       </goal>
       <goal name="cos_sin_square_add&#39;vc.2.0.0.0.0.1" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="h">
        <goal name="cos_sin_square_add&#39;vc.2.0.0.0.0.1.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="add_eq_t">
         <goal name="cos_sin_square_add&#39;vc.2.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="cpower_two">
          <goal name="cos_sin_square_add&#39;vc.2.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="1.02" steps="381819"/></proof>
          </goal>
          <goal name="cos_sin_square_add&#39;vc.2.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="11"><result status="valid" time="0.39" steps="305958"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="cos_sin_square_add&#39;vc.2.0.0.0.0.1.0.1" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="cpower_two">
          <goal name="cos_sin_square_add&#39;vc.2.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="1.10" steps="381655"/></proof>
          </goal>
          <goal name="cos_sin_square_add&#39;vc.2.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
          <proof prover="11"><result status="valid" time="0.44" steps="305958"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="cos_sin_square_add&#39;vc.2.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.43" steps="305291"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cos_sin_square_add&#39;vc.2.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.40" steps="305291"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="c_one_minus_sin_square&#39;vc" expl="VC for c_one_minus_sin_square" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="c_one_minus_sin_square&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(forall a b c. a+.b = c-&gt; c-.b=a)">
   <goal name="c_one_minus_sin_square&#39;vc.0.0" expl="asserted formula" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="c_one_minus_sin_square&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <proof prover="11"><result status="valid" time="3.97" steps="870631"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="c_one_minus_sin_square&#39;vc.0.1" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="h">
    <goal name="c_one_minus_sin_square&#39;vc.0.1.0" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="0.88" steps="330446"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="c_one_minus_cos_square&#39;vc" expl="VC for c_one_minus_cos_square" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="c_one_minus_cos_square&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(forall a b c. a+.b = c-&gt; c-.b=a)">
   <goal name="c_one_minus_cos_square&#39;vc.0.0" expl="asserted formula" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="c_one_minus_cos_square&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <proof prover="11"><result status="valid" time="3.47" steps="871649"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="c_one_minus_cos_square&#39;vc.0.1" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="h">
    <goal name="c_one_minus_cos_square&#39;vc.0.1.0" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="1.01" steps="375486"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cos_ang&#39;vc" expl="VC for cos_ang" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_ang&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.07" steps="374036"/></proof>
  </goal>
  <goal name="cos_ang&#39;vc.1" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cos_ang&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result&#39;def">
    <goal name="cos_ang&#39;vc.1.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="1.01" steps="379266"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sin_ang&#39;vc" expl="VC for sin_ang" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_ang&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.97" steps="374251"/></proof>
  </goal>
  <goal name="sin_ang&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.02" steps="377199"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="euler_moivre_cos&#39;vc" expl="VC for euler_moivre_cos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="euler_moivre_cos&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="euler_moivre_cos&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="euler_moivre_cos&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="cos_ang&#39;def">
     <goal name="euler_moivre_cos&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="cos&#39;def">
      <goal name="euler_moivre_cos&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_inv_to_conjugate">
       <goal name="euler_moivre_cos&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="ang_exp&#39;def">
        <goal name="euler_moivre_cos&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="11"><result status="valid" time="2.04" steps="437327"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="euler_moivre_cos&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="1.14" steps="420541"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="euler_moivre_cos_rev&#39;vc" expl="VC for euler_moivre_cos_rev" proved="true">
 <proof prover="11"><result status="valid" time="1.89" steps="382828"/></proof>
 </goal>
 <goal name="euler_moivre_cos_int&#39;vc" expl="VC for euler_moivre_cos_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="euler_moivre_cos_int&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.03" steps="376053"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="euler_moivre_cos_rev_int&#39;vc" expl="VC for euler_moivre_cos_rev_int" proved="true">
 <proof prover="11"><result status="valid" time="0.97" steps="376301"/></proof>
 </goal>
 <goal name="euler_moivre_sin&#39;vc" expl="VC for euler_moivre_sin" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="euler_moivre_sin&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="euler_moivre_sin&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="euler_moivre_sin&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sin_ang&#39;def">
     <goal name="euler_moivre_sin&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="sin&#39;def">
      <goal name="euler_moivre_sin&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_inv_to_conjugate">
       <goal name="euler_moivre_sin&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="ang_exp&#39;def">
        <goal name="euler_moivre_sin&#39;vc.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="assert" proved="true" arg1="(forall a . a-. conjugate a = ttwo *. im *. (t_im_part a))">
         <goal name="euler_moivre_sin&#39;vc.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
         <transf name="rewrite" proved="true" arg1="conjugate&#39;def">
          <goal name="euler_moivre_sin&#39;vc.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="euler_moivre_sin&#39;vc.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="replace" proved="true" arg1="(a-. (t_real_part a -. (im *. t_im_part a)))" arg2="((t_real_part a +. (im *. t_im_part a)) -. (t_real_part a -. (im *. t_im_part a)))">
            <goal name="euler_moivre_sin&#39;vc.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
            <transf name="assert" proved="true" arg1="(forall a b. a+.b -. (a-. b) = b+.b)">
             <goal name="euler_moivre_sin&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="euler_moivre_sin&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
              <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
               <goal name="euler_moivre_sin&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
               <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
                <goal name="euler_moivre_sin&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                <transf name="replace" proved="true" arg1="(-. (a +. (-. b)))" arg2="(-. a +. b)">
                 <goal name="euler_moivre_sin&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                 <proof prover="11"><result status="valid" time="2.25" steps="434119"/></proof>
                 </goal>
                 <goal name="euler_moivre_sin&#39;vc.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="11"><result status="valid" time="0.81" steps="378240"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="euler_moivre_sin&#39;vc.0.0.0.0.0.0.0.0.0.0.0.1" expl="asserted formula" proved="true">
             <proof prover="11"><result status="valid" time="1.19" steps="426990"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="euler_moivre_sin&#39;vc.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="11"><result status="valid" time="0.78" steps="379377"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="euler_moivre_sin&#39;vc.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="h">
          <goal name="euler_moivre_sin&#39;vc.0.0.0.0.0.0.0.1.0" expl="postcondition" proved="true">
          <proof prover="11"><result status="valid" time="5.31" steps="1241839"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="euler_moivre_sin&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="1.17" steps="420935"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="euler_moivre_sin_rev&#39;vc" expl="VC for euler_moivre_sin_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="euler_moivre_sin_rev&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="euler_moivre_sin">
   <goal name="euler_moivre_sin_rev&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="1.02" steps="378488"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="euler_moivre_sin_int&#39;vc" expl="VC for euler_moivre_sin_int" proved="true">
 <proof prover="11"><result status="valid" time="1.08" steps="377736"/></proof>
 </goal>
 <goal name="euler_moivre_sin_rev_int&#39;vc" expl="VC for euler_moivre_sin_rev_int" proved="true">
 <proof prover="11"><result status="valid" time="1.04" steps="377382"/></proof>
 </goal>
 <goal name="euler_real&#39;vc" expl="VC for euler_real" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="euler_real&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="euler_real_r">
   <goal name="euler_real&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.77" steps="331426"/></proof>
   </goal>
   <goal name="euler_real&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.48" steps="306120"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="euler_im&#39;vc" expl="VC for euler_im" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="euler_im&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.86" steps="331504"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="set_arc_cos_ang_exp&#39;vc" expl="VC for set_arc_cos_ang_exp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set_arc_cos_ang_exp&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.77" steps="332066"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="arc_cos_ang_exp_plus_inv&#39;vc" expl="VC for arc_cos_ang_exp_plus_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="arc_cos_ang_exp_plus_inv&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.05" steps="376552"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="arc_cos_ang_add_inv&#39;vc" expl="VC for arc_cos_ang_add_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="arc_cos_ang_add_inv&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.77" steps="332303"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ang_add_incr&#39;vc" expl="VC for ang_add_incr" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ang_add_incr&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="ang_add_incr&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(0&lt;=k)">
    <goal name="ang_add_incr&#39;vc.0.0.0" expl="true case (postcondition)" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="ang_add_incr&#39;vc.0.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="incr_abs&#39;def1">
      <goal name="ang_add_incr&#39;vc.0.0.0.0.0" expl="true case (postcondition)" proved="true">
      <transf name="replace" proved="true" arg1="(i /./ k)" arg2="((i+i) /./ (k+1))">
       <goal name="ang_add_incr&#39;vc.0.0.0.0.0.0" expl="true case (postcondition)" proved="true">
       <proof prover="2"><result status="valid" time="0.72" steps="3109141"/></proof>
       </goal>
       <goal name="ang_add_incr&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="1.30" steps="430822"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="ang_add_incr&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.56" steps="359262"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="ang_add_incr&#39;vc.0.0.1" expl="false case (postcondition)" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="ang_add_incr&#39;vc.0.0.1.0" expl="false case (postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="incr_abs&#39;def">
      <goal name="ang_add_incr&#39;vc.0.0.1.0.0" expl="false case (postcondition)" proved="true">
      <transf name="replace" proved="true" arg1="(i /./ k)" arg2="((i+i) /./ (k-1))">
       <goal name="ang_add_incr&#39;vc.0.0.1.0.0.0" expl="false case (postcondition)" proved="true">
       <proof prover="2"><result status="valid" time="0.57" steps="3109236"/></proof>
       </goal>
       <goal name="ang_add_incr&#39;vc.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="assert" proved="true" arg1="((i /./ (-k)) = ((i + i) /./ ((-k) + 1)))">
        <goal name="ang_add_incr&#39;vc.0.0.1.0.0.1.0" expl="asserted formula" proved="true">
        <proof prover="11"><result status="valid" time="1.34" steps="431220"/></proof>
        </goal>
        <goal name="ang_add_incr&#39;vc.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="1.22" steps="432988"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="ang_add_incr&#39;vc.0.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.56" steps="359264"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Trigo_form" proved="true">
 <goal name="cos_add&#39;vc" expl="VC for cos_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_add&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="cos&#39;def">
   <goal name="cos_add&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(exp (im *. (x +. x&#39;)))" arg2="((exp (im *. (x )))*. (exp (im *. (x&#39;))))">
    <goal name="cos_add&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.80" steps="382987"/></proof>
    </goal>
    <goal name="cos_add&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.79" steps="382087"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cos_add&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.77" steps="333000"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sin_add&#39;vc" expl="VC for sin_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_add&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="sin&#39;def">
   <goal name="sin_add&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(exp (im *. (x +. x&#39;)))" arg2="((exp (im *. (x )))*. (exp (im *. (x&#39;))))">
    <goal name="sin_add&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="1.05" steps="383217"/></proof>
    </goal>
    <goal name="sin_add&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.84" steps="382355"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sin_add&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.75" steps="333111"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cos_ang_add&#39;vc" expl="VC for cos_ang_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_ang_add&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cos_ang_add&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="cos_ang&#39;def">
    <goal name="cos_ang_add&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="cos_ang&#39;def">
     <goal name="cos_ang_add&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="cos_ang&#39;def">
      <goal name="cos_ang_add&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(  cos (ang_meas (theta +.+ theta&#39;) *. (ttwo *. pi)))" arg2="(cos ((ang_meas theta +. ang_meas theta&#39;) *. (ttwo *. pi)))">
       <goal name="cos_ang_add&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="11"><result status="valid" time="0.95" steps="382493"/></proof>
       </goal>
       <goal name="cos_ang_add&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="0.91" steps="380881"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sin_ang_add&#39;vc" expl="VC for sin_ang_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_ang_add&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="sin_ang_add&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="sin_ang&#39;def">
    <goal name="sin_ang_add&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sin_ang&#39;def">
     <goal name="sin_ang_add&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="sin_ang&#39;def">
      <goal name="sin_ang_add&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(  sin (ang_meas (theta +.+ theta&#39;) *. (ttwo *. pi)))" arg2="(sin ((ang_meas theta +. ang_meas theta&#39;) *. (ttwo *. pi)))">
       <goal name="sin_ang_add&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="11"><result status="valid" time="2.34" steps="400755"/></proof>
       </goal>
       <goal name="sin_ang_add&#39;vc.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="0.95" steps="381003"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cos_ang_add_rev&#39;vc" expl="VC for cos_ang_add_rev" proved="true">
 <proof prover="11"><result status="valid" time="0.65" steps="333063"/></proof>
 </goal>
 <goal name="sin_ang_add_rev&#39;vc" expl="VC for sin_ang_add_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_ang_add_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.57" steps="333476"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sin_ang_add_rev_rev&#39;vc" expl="VC for sin_ang_add_rev_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_ang_add_rev_rev&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.81" steps="378002"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sin_ang_inv&#39;vc" expl="VC for sin_ang_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_ang_inv&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.51" steps="385007"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cos_ang_inv&#39;vc" expl="VC for cos_ang_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_ang_inv&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.43" steps="384196"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sin_ang_inv_int&#39;vc" expl="VC for sin_ang_inv_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_ang_inv_int&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.81" steps="378977"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cos_ang_inv_int&#39;vc" expl="VC for cos_ang_inv_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_ang_inv_int&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.41" steps="308143"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sin_ang_zero&#39;vc" expl="VC for sin_ang_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_ang_zero&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.28" steps="384095"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sin_ang_one&#39;vc" expl="VC for sin_ang_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_ang_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.99" steps="379076"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sin_ang_two&#39;vc" expl="VC for sin_ang_two" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_ang_two&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.01" steps="378577"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sin_ang_three&#39;vc" expl="VC for sin_ang_three" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_ang_three&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="sin_ang_three&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="sin_ang&#39;def">
    <goal name="sin_ang_three&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(ang_meas (1 /./ 3) *. (ttwo *. pi))" arg2="(pi /. (i_to_c 4))">
     <goal name="sin_ang_three&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="1.01" steps="380310"/></proof>
     </goal>
     <goal name="sin_ang_three&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
      <goal name="sin_ang_three&#39;vc.0.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="meas_value">
       <goal name="sin_ang_three&#39;vc.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="4.05" steps="1138899"/></proof>
       </goal>
       <goal name="sin_ang_three&#39;vc.0.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.98" steps="382470"/></proof>
       </goal>
       <goal name="sin_ang_three&#39;vc.0.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="1.00" steps="390008"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="sin_ang_three&#39;vc.0.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.45" steps="308846"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cos_ang_zero&#39;vc" expl="VC for cos_ang_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_ang_zero&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="1.01" steps="379381"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cos_ang_one&#39;vc" expl="VC for cos_ang_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_ang_one&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.80" steps="379521"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cos_ang_two&#39;vc" expl="VC for cos_ang_two" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_ang_two&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.78" steps="379945"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cos_ang_three&#39;vc" expl="VC for cos_ang_three" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_ang_three&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cos_ang_three&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="cos_ang&#39;def">
    <goal name="cos_ang_three&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(ang_meas (1 /./ 3) *. (ttwo *. pi))" arg2="(pi /. (i_to_c 4))">
     <goal name="cos_ang_three&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.99" steps="381590"/></proof>
     </goal>
     <goal name="cos_ang_three&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="int_to_ang_pos">
      <goal name="cos_ang_three&#39;vc.0.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="meas_value">
       <goal name="cos_ang_three&#39;vc.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="4.30" steps="1145617"/></proof>
       </goal>
       <goal name="cos_ang_three&#39;vc.0.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.99" steps="383519"/></proof>
       </goal>
       <goal name="cos_ang_three&#39;vc.0.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="1.18" steps="391362"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cos_ang_three&#39;vc.0.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="0.38" steps="308913"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cos_two_x&#39;vc" expl="VC for cos_two_x" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_two_x&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.43" steps="308296"/></proof>
  </goal>
  <goal name="cos_two_x&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.44" steps="308299"/></proof>
  </goal>
  <goal name="cos_two_x&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.80" steps="337582"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sin_two_x&#39;vc" expl="VC for sin_two_x" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_two_x&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.45" steps="308389"/></proof>
  </goal>
  <goal name="sin_two_x&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.47" steps="308392"/></proof>
  </goal>
  <goal name="sin_two_x&#39;vc.2" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(ttwo *. x)" arg2="(x+.x)">
   <goal name="sin_two_x&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures">
    <goal name="sin_two_x&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.81" steps="387110"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sin_two_x&#39;vc.2.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.73" steps="334144"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cos_minus&#39;vc" expl="VC for cos_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_minus&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.44" steps="308496"/></proof>
  </goal>
  <goal name="cos_minus&#39;vc.1" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="cos_ang_exp_">
   <goal name="cos_minus&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="cos_ang_exp_">
    <goal name="cos_minus&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(real_to_ang ((-. x) /. (ttwo *. pi)))" arg2="(real_to_ang (-.(x /. (ttwo *. pi))))">
     <goal name="cos_minus&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="real_to_ang_inv">
      <goal name="cos_minus&#39;vc.1.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_inv_to_conjugate">
       <goal name="cos_minus&#39;vc.1.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="11"><result status="valid" time="0.75" steps="334360"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="cos_minus&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="real_div">
       <goal name="cos_minus&#39;vc.1.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.43" steps="308531"/></proof>
       </goal>
       <goal name="cos_minus&#39;vc.1.0.0.0.1.1" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.84" steps="339065"/></proof>
       </goal>
       <goal name="cos_minus&#39;vc.1.0.0.0.1.2" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="1.08" steps="385895"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cos_minus&#39;vc.1.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.82" steps="340684"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="cos_minus&#39;vc.1.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.42" steps="308531"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cos_minus&#39;vc.1.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.72" steps="334296"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sin_minus&#39;vc" expl="VC for sin_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_minus&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.42" steps="308552"/></proof>
  </goal>
  <goal name="sin_minus&#39;vc.1" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="sin_ang_exp_">
   <goal name="sin_minus&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="sin_ang_exp_">
    <goal name="sin_minus&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(real_to_ang ((-. x) /. (ttwo *. pi)))" arg2="(real_to_ang (-.(x /. (ttwo *. pi))))">
     <goal name="sin_minus&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="real_to_ang_inv">
      <goal name="sin_minus&#39;vc.1.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_inv_to_conjugate">
       <goal name="sin_minus&#39;vc.1.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="11"><result status="valid" time="0.73" steps="334423"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="sin_minus&#39;vc.1.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="real_div">
       <goal name="sin_minus&#39;vc.1.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.41" steps="308587"/></proof>
       </goal>
       <goal name="sin_minus&#39;vc.1.0.0.0.1.1" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.67" steps="339122"/></proof>
       </goal>
       <goal name="sin_minus&#39;vc.1.0.0.0.1.2" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="1.01" steps="386164"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="sin_minus&#39;vc.1.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.78" steps="340741"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="sin_minus&#39;vc.1.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.43" steps="308587"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sin_minus&#39;vc.1.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.69" steps="334353"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="symetries_vert&#39;vc" expl="VC for symetries_vert" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="symetries_vert&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="sin_add">
   <goal name="symetries_vert&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="((pi /. ttwo) -. x)" arg2="((pi /. ttwo) +. -. x)">
    <goal name="symetries_vert&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sin_add">
     <goal name="symetries_vert&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(cos (-. x))" arg2="(cos x)">
      <goal name="symetries_vert&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="11"><result status="valid" time="0.75" steps="339007"/></proof>
      </goal>
      <goal name="symetries_vert&#39;vc.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="cos&#39;def">
       <goal name="symetries_vert&#39;vc.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="11"><result status="valid" time="1.00" steps="386081"/></proof>
       </goal>
       <goal name="symetries_vert&#39;vc.0.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.74" steps="334382"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="symetries_vert&#39;vc.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="1.01" steps="384333"/></proof>
     </goal>
     <goal name="symetries_vert&#39;vc.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.73" steps="334382"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="symetries_vert&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.73" steps="334427"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="symetries_vert&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="1.04" steps="384333"/></proof>
   </goal>
   <goal name="symetries_vert&#39;vc.0.2" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.43" steps="308612"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="symetries_vert&#39;vc.1" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="cos_add">
   <goal name="symetries_vert&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="symetries_vert&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
     <goal name="symetries_vert&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
      <goal name="symetries_vert&#39;vc.1.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="cos_add">
       <goal name="symetries_vert&#39;vc.1.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="cos_minus">
        <goal name="symetries_vert&#39;vc.1.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="cos_half_pi">
         <goal name="symetries_vert&#39;vc.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="sin_minus">
          <goal name="symetries_vert&#39;vc.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="sin_half_pi">
           <goal name="symetries_vert&#39;vc.1.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="rewrite" proved="true" arg1="zero_add_t">
            <goal name="symetries_vert&#39;vc.1.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <proof prover="2"><result status="valid" time="0.89" steps="3767228"/></proof>
            </goal>
            <goal name="symetries_vert&#39;vc.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="11"><result status="valid" time="0.78" steps="335217"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="symetries_vert&#39;vc.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="11"><result status="valid" time="0.46" steps="309279"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="symetries_vert&#39;vc.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.46" steps="309279"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="symetries_vert&#39;vc.1.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="1.04" steps="388364"/></proof>
       </goal>
       <goal name="symetries_vert&#39;vc.1.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.81" steps="335200"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="symetries_vert&#39;vc.1.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="1.14" steps="385221"/></proof>
   </goal>
   <goal name="symetries_vert&#39;vc.1.2" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.48" steps="308645"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="pi_minus&#39;vc" expl="VC for pi_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="pi_minus&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.80" steps="334555"/></proof>
  </goal>
  <goal name="pi_minus&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.85" steps="386624"/></proof>
  </goal>
  <goal name="pi_minus&#39;vc.2" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(pi -. x)" arg2="((pi /. ttwo) +. ((pi /. ttwo) -. x))">
   <goal name="pi_minus&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures1">
    <goal name="pi_minus&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="assert" proved="true" arg1="(forall a b. a-. (a-.b) = b)">
     <goal name="pi_minus&#39;vc.2.0.0.0" expl="asserted formula" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pi_minus&#39;vc.2.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="h">
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pi_minus&#39;vc.2.0.0.1" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.63" steps="339510"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pi_minus&#39;vc.2.1" expl="equality hypothesis" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="pi_minus&#39;vc.2.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
     <goal name="pi_minus&#39;vc.2.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
      <goal name="pi_minus&#39;vc.2.1.0.0.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="add_assoc_rev">
       <goal name="pi_minus&#39;vc.2.1.0.0.0.0" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="add_eq_t">
        <goal name="pi_minus&#39;vc.2.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.70" steps="335451"/></proof>
        </goal>
        <goal name="pi_minus&#39;vc.2.1.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.42" steps="309421"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="pi_minus&#39;vc.3" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(pi -. x)" arg2="((pi /. ttwo) +. ((pi /. ttwo) -. x))">
   <goal name="pi_minus&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="Ensures1">
    <goal name="pi_minus&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="assert" proved="true" arg1="(forall a b. a-. (a-.b) = b)">
     <goal name="pi_minus&#39;vc.3.0.0.0" expl="asserted formula" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="pi_minus&#39;vc.3.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="h">
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="pi_minus&#39;vc.3.0.0.1" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.75" steps="339602"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="pi_minus&#39;vc.3.1" expl="equality hypothesis" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="pi_minus&#39;vc.3.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
     <goal name="pi_minus&#39;vc.3.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
      <goal name="pi_minus&#39;vc.3.1.0.0.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="add_assoc_rev">
       <goal name="pi_minus&#39;vc.3.1.0.0.0.0" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="add_eq_t">
        <goal name="pi_minus&#39;vc.3.1.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.64" steps="335478"/></proof>
        </goal>
        <goal name="pi_minus&#39;vc.3.1.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="11"><result status="valid" time="0.45" steps="309447"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sin_plus_pi_pos&#39;vc" expl="VC for sin_plus_pi_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_plus_pi_pos&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="308867"/></proof>
  </goal>
  <goal name="sin_plus_pi_pos&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.44" steps="308839"/></proof>
  </goal>
  <goal name="sin_plus_pi_pos&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.70" steps="334398"/></proof>
  </goal>
  <goal name="sin_plus_pi_pos&#39;vc.3" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H1">
   <goal name="sin_plus_pi_pos&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.84" steps="339780"/></proof>
   </goal>
   <goal name="sin_plus_pi_pos&#39;vc.3.1" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(pi *. (x +. i_to_c k))" arg2="(pi *. (x +. i_to_c (k-&#39;&#39;1))+. pi)">
    <goal name="sin_plus_pi_pos&#39;vc.3.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="sin_plus_pi_pos&#39;vc.3.1.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="sin_plus_pi_pos&#39;vc.3.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="sin_add">
       <goal name="sin_plus_pi_pos&#39;vc.3.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="cos_pi">
        <goal name="sin_plus_pi_pos&#39;vc.3.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="H1">
         <goal name="sin_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="add_zero_t">
          <goal name="sin_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="assert" proved="true" arg1="(forall a. -.a *. (-. c_one) =a)">
           <goal name="sin_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="sin_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
            <transf name="rewrite" proved="true" arg1="minus_out">
             <goal name="sin_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
             <proof prover="11"><result status="valid" time="5.49" steps="1309634"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="sin_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
           <proof prover="11"><result status="valid" time="0.73" steps="380238"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="sin_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="11"><result status="valid" time="1.13" steps="438499"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sin_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.39"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="sin_plus_pi_pos&#39;vc.3.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="1.07" steps="434017"/></proof>
       </goal>
       <goal name="sin_plus_pi_pos&#39;vc.3.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.54" steps="351407"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="sin_plus_pi_pos&#39;vc.3.1.1" expl="equality hypothesis" proved="true">
    <transf name="replace" proved="true" arg1="(i_to_c k)" arg2="(i_to_c (k-&#39;&#39;1+&#39;1))">
     <goal name="sin_plus_pi_pos&#39;vc.3.1.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
      <goal name="sin_plus_pi_pos&#39;vc.3.1.1.0.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
       <goal name="sin_plus_pi_pos&#39;vc.3.1.1.0.0.0" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="sin_plus_pi_pos&#39;vc.3.1.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
         <goal name="sin_plus_pi_pos&#39;vc.3.1.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
          <goal name="sin_plus_pi_pos&#39;vc.3.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="add_assoc_rev">
           <goal name="sin_plus_pi_pos&#39;vc.3.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="0.87" steps="340215"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="sin_plus_pi_pos&#39;vc.3.1.1.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.48" steps="308961"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sin_plus_pi_pos&#39;vc.4" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H1">
   <goal name="sin_plus_pi_pos&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(pi *. (x +. i_to_c k))" arg2="(pi *. (x +. i_to_c (k-&#39;&#39;1))+. pi)">
    <goal name="sin_plus_pi_pos&#39;vc.4.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="sin_plus_pi_pos&#39;vc.4.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="sin_plus_pi_pos&#39;vc.4.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="sin_add">
       <goal name="sin_plus_pi_pos&#39;vc.4.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="cos_pi">
        <goal name="sin_plus_pi_pos&#39;vc.4.0.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="11"><result status="valid" time="2.44" steps="455583"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="sin_plus_pi_pos&#39;vc.4.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="1.03" steps="434175"/></proof>
       </goal>
       <goal name="sin_plus_pi_pos&#39;vc.4.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.56" steps="351374"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="sin_plus_pi_pos&#39;vc.4.0.1" expl="equality hypothesis" proved="true">
    <transf name="replace" proved="true" arg1="(i_to_c k)" arg2="(i_to_c (k-&#39;&#39;1+&#39;1))">
     <goal name="sin_plus_pi_pos&#39;vc.4.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
      <goal name="sin_plus_pi_pos&#39;vc.4.0.1.0.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
       <goal name="sin_plus_pi_pos&#39;vc.4.0.1.0.0.0" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="sin_plus_pi_pos&#39;vc.4.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
         <goal name="sin_plus_pi_pos&#39;vc.4.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
          <goal name="sin_plus_pi_pos&#39;vc.4.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="add_assoc_rev">
           <goal name="sin_plus_pi_pos&#39;vc.4.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="0.63" steps="340054"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="sin_plus_pi_pos&#39;vc.4.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.47" steps="308928"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sin_plus_pi_pos&#39;vc.4.1" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(i_to_c k)" arg2="(i_to_c (k-&#39;&#39;1+&#39;1))">
    <goal name="sin_plus_pi_pos&#39;vc.4.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="sin_plus_pi_pos&#39;vc.4.1.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="sin_plus_pi_pos&#39;vc.4.1.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(pi *. (x +. i_to_c ((k -&#39;&#39; 1) +&#39; 1)))" arg2="(pi *. (x +. i_to_c ((k -&#39;&#39; 1) ))+.pi)">
       <goal name="sin_plus_pi_pos&#39;vc.4.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="sin_add">
        <goal name="sin_plus_pi_pos&#39;vc.4.1.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="11"><result status="valid" time="2.50" steps="460293"/></proof>
        </goal>
        <goal name="sin_plus_pi_pos&#39;vc.4.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="1.03" steps="435676"/></proof>
        </goal>
        <goal name="sin_plus_pi_pos&#39;vc.4.1.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.54" steps="351454"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="sin_plus_pi_pos&#39;vc.4.1.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
        <goal name="sin_plus_pi_pos&#39;vc.4.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="assert" proved="true" arg1="(forall a b c. a+. (b+.c) = a+.b+.c)">
         <goal name="sin_plus_pi_pos&#39;vc.4.1.0.0.0.1.0.0" expl="asserted formula" proved="true">
         <proof prover="11"><result status="valid" time="0.86" steps="379312"/></proof>
         </goal>
         <goal name="sin_plus_pi_pos&#39;vc.4.1.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
         <transf name="rewrite" proved="true" arg1="h">
          <goal name="sin_plus_pi_pos&#39;vc.4.1.0.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
          <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
           <goal name="sin_plus_pi_pos&#39;vc.4.1.0.0.0.1.0.1.0.0" expl="equality hypothesis" proved="true">
           <proof prover="11"><result status="valid" time="0.74" steps="381783"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="sin_plus_pi_pos&#39;vc.4.1.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.49" steps="309004"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sin_plus_pi&#39;vc" expl="VC for sin_plus_pi" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_plus_pi&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.47" steps="308970"/></proof>
  </goal>
  <goal name="sin_plus_pi&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.44" steps="308973"/></proof>
  </goal>
  <goal name="sin_plus_pi&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.79" steps="334836"/></proof>
  </goal>
  <goal name="sin_plus_pi&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.71" steps="334492"/></proof>
  </goal>
  <goal name="sin_plus_pi&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sin_plus_pi&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.43" steps="309066"/></proof>
   </goal>
   <goal name="sin_plus_pi&#39;vc.4.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="sin_plus_pi&#39;vc.4.1.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="((x +. i_to_c k) +. i_to_c (-&#39; k))" arg2="x" arg3="in" arg4="Ensures1">
     <goal name="sin_plus_pi&#39;vc.4.1.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.98" steps="393536"/></proof>
     </goal>
     <goal name="sin_plus_pi&#39;vc.4.1.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_minus">
      <goal name="sin_plus_pi&#39;vc.4.1.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="1.02" steps="397892"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sin_plus_pi&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sin_plus_pi&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.43" steps="309069"/></proof>
   </goal>
   <goal name="sin_plus_pi&#39;vc.5.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="sin_plus_pi&#39;vc.5.1.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(pi *. x)" arg2="(pi *. ((x +. i_to_c k) +. i_to_c (-&#39; k)))">
     <goal name="sin_plus_pi&#39;vc.5.1.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.97" steps="394121"/></proof>
     </goal>
     <goal name="sin_plus_pi&#39;vc.5.1.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
      <goal name="sin_plus_pi&#39;vc.5.1.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
       <goal name="sin_plus_pi&#39;vc.5.1.0.1.0.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="add_assoc">
        <goal name="sin_plus_pi&#39;vc.5.1.0.1.0.0.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="add_zero_t">
         <goal name="sin_plus_pi&#39;vc.5.1.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
         <proof prover="11"><result status="valid" time="0.47" steps="309138"/></proof>
         </goal>
         <goal name="sin_plus_pi&#39;vc.5.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="2.63" steps="3647547"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cos_plus_pi_pos&#39;vc" expl="VC for cos_plus_pi_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_plus_pi_pos&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="309182"/></proof>
  </goal>
  <goal name="cos_plus_pi_pos&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.48" steps="309154"/></proof>
  </goal>
  <goal name="cos_plus_pi_pos&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.79" steps="334715"/></proof>
  </goal>
  <goal name="cos_plus_pi_pos&#39;vc.3" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H1">
   <goal name="cos_plus_pi_pos&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.78" steps="340408"/></proof>
   </goal>
   <goal name="cos_plus_pi_pos&#39;vc.3.1" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(pi *. (x +. i_to_c k))" arg2="(pi *. (x +. i_to_c (k-&#39;&#39;1))+. pi)">
    <goal name="cos_plus_pi_pos&#39;vc.3.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="cos_add">
       <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="H1">
        <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="sin_plus_pi">
         <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="cos_pi">
          <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="replace" proved="true" arg1="(sin pi)" arg2="c_zero">
           <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="eliminate_definition" proved="true" >
            <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
             <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <transf name="rewrite" proved="true" arg1="add_zero_t">
              <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
              <transf name="assert" proved="true" arg1="(forall x. -. x *. (-. c_one) = x)">
               <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                <transf name="rewrite" proved="true" arg1="minus_out">
                 <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                 <proof prover="11"><result status="valid" time="5.46" steps="1417023"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="postcondition" proved="true">
               <proof prover="11"><result status="valid" time="0.95" steps="381266"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="11"><result status="valid" time="1.33" steps="436031"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="11"><result status="valid" time="1.19" steps="435030"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="0.58" steps="351861"/></proof>
         </goal>
         <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.45"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="0.46"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.99" steps="434633"/></proof>
       </goal>
       <goal name="cos_plus_pi_pos&#39;vc.3.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.53" steps="351861"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="cos_plus_pi_pos&#39;vc.3.1.1" expl="equality hypothesis" proved="true">
    <transf name="replace" proved="true" arg1="(i_to_c k)" arg2="(i_to_c (k-&#39;&#39;1+&#39;1))">
     <goal name="cos_plus_pi_pos&#39;vc.3.1.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
      <goal name="cos_plus_pi_pos&#39;vc.3.1.1.0.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
       <goal name="cos_plus_pi_pos&#39;vc.3.1.1.0.0.0" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="cos_plus_pi_pos&#39;vc.3.1.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
         <goal name="cos_plus_pi_pos&#39;vc.3.1.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
          <goal name="cos_plus_pi_pos&#39;vc.3.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="add_assoc_rev">
           <goal name="cos_plus_pi_pos&#39;vc.3.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="0.81" steps="341014"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cos_plus_pi_pos&#39;vc.3.1.1.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.43" steps="309276"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cos_plus_pi_pos&#39;vc.4" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H1">
   <goal name="cos_plus_pi_pos&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="1.86" steps="401825"/></proof>
   </goal>
   <goal name="cos_plus_pi_pos&#39;vc.4.1" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(pi *. (x +. i_to_c k))" arg2="(pi *. (x +. i_to_c (k-&#39;&#39;1))+. pi)">
    <goal name="cos_plus_pi_pos&#39;vc.4.1.0" expl="postcondition" proved="true">
    <transf name="eliminate_let" proved="true" >
     <goal name="cos_plus_pi_pos&#39;vc.4.1.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="cos_plus_pi_pos&#39;vc.4.1.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="cos_add">
       <goal name="cos_plus_pi_pos&#39;vc.4.1.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="H2">
        <goal name="cos_plus_pi_pos&#39;vc.4.1.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="sin_plus_pi1">
         <goal name="cos_plus_pi_pos&#39;vc.4.1.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="cos_pi">
          <goal name="cos_plus_pi_pos&#39;vc.4.1.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="eliminate_definition" proved="true" >
           <goal name="cos_plus_pi_pos&#39;vc.4.1.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
            <goal name="cos_plus_pi_pos&#39;vc.4.1.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="add_zero_t">
             <goal name="cos_plus_pi_pos&#39;vc.4.1.0.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
             <proof prover="11"><result status="valid" time="1.27" steps="436094"/></proof>
             </goal>
             <goal name="cos_plus_pi_pos&#39;vc.4.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="rewrite" proved="true" arg1="mult_zero_t">
              <goal name="cos_plus_pi_pos&#39;vc.4.1.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
              <proof prover="11"><result status="valid" time="1.18" steps="435870"/></proof>
              </goal>
              <goal name="cos_plus_pi_pos&#39;vc.4.1.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
              <proof prover="11"><result status="valid" time="1.09" steps="435562"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="cos_plus_pi_pos&#39;vc.4.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="0.51" steps="351908"/></proof>
         </goal>
         <goal name="cos_plus_pi_pos&#39;vc.4.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="2.55" steps="452082"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="cos_plus_pi_pos&#39;vc.4.1.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="2.56" steps="452082"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="cos_plus_pi_pos&#39;vc.4.1.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="1.24" steps="436360"/></proof>
       </goal>
       <goal name="cos_plus_pi_pos&#39;vc.4.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="11"><result status="valid" time="0.53" steps="351908"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="cos_plus_pi_pos&#39;vc.4.1.1" expl="equality hypothesis" proved="true">
    <transf name="replace" proved="true" arg1="(i_to_c k)" arg2="(i_to_c (k-&#39;&#39;1+&#39;1))">
     <goal name="cos_plus_pi_pos&#39;vc.4.1.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
      <goal name="cos_plus_pi_pos&#39;vc.4.1.1.0.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
       <goal name="cos_plus_pi_pos&#39;vc.4.1.1.0.0.0" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="cos_plus_pi_pos&#39;vc.4.1.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
         <goal name="cos_plus_pi_pos&#39;vc.4.1.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
          <goal name="cos_plus_pi_pos&#39;vc.4.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="add_assoc_rev">
           <goal name="cos_plus_pi_pos&#39;vc.4.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="0.78" steps="340991"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="cos_plus_pi_pos&#39;vc.4.1.1.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.42" steps="309319"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cos_plus_pi&#39;vc" expl="VC for cos_plus_pi" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_plus_pi&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.44" steps="309285"/></proof>
  </goal>
  <goal name="cos_plus_pi&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.44" steps="309288"/></proof>
  </goal>
  <goal name="cos_plus_pi&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.74" steps="335153"/></proof>
  </goal>
  <goal name="cos_plus_pi&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.73" steps="334809"/></proof>
  </goal>
  <goal name="cos_plus_pi&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cos_plus_pi&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.46" steps="309381"/></proof>
   </goal>
   <goal name="cos_plus_pi&#39;vc.4.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="cos_plus_pi&#39;vc.4.1.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="((x +. i_to_c k) +. i_to_c (-&#39; k))" arg2="x" arg3="in" arg4="Ensures1">
     <goal name="cos_plus_pi&#39;vc.4.1.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="1.04" steps="395017"/></proof>
     </goal>
     <goal name="cos_plus_pi&#39;vc.4.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="4.87" steps="1272816"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="cos_plus_pi&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cos_plus_pi&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.43" steps="309384"/></proof>
   </goal>
   <goal name="cos_plus_pi&#39;vc.5.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="cos_plus_pi&#39;vc.5.1.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="((x +. i_to_c k) +. i_to_c (-&#39; k))" arg2="x" arg3="in" arg4="Ensures1">
     <goal name="cos_plus_pi&#39;vc.5.1.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.99" steps="395926"/></proof>
     </goal>
     <goal name="cos_plus_pi&#39;vc.5.1.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_minus">
      <goal name="cos_plus_pi&#39;vc.5.1.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="1.04" steps="400252"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="mod_sin_plus_pi&#39;vc" expl="VC for mod_sin_plus_pi" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mod_sin_plus_pi&#39;vc.0" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(even k)">
   <goal name="mod_sin_plus_pi&#39;vc.0.0" expl="true case (postcondition)" proved="true">
   <proof prover="11"><result status="valid" time="1.10" steps="392803"/></proof>
   </goal>
   <goal name="mod_sin_plus_pi&#39;vc.0.1" expl="false case (postcondition)" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="mod_sin_plus_pi&#39;vc.0.1.0" expl="false case (postcondition)" proved="true">
    <transf name="rewrite" proved="true" arg1="sin_plus_pi">
     <goal name="mod_sin_plus_pi&#39;vc.0.1.0.0" expl="false case (postcondition)" proved="true">
     <proof prover="11"><result status="valid" time="0.84" steps="380637"/></proof>
     </goal>
     <goal name="mod_sin_plus_pi&#39;vc.0.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.49" steps="352184"/></proof>
     </goal>
     <goal name="mod_sin_plus_pi&#39;vc.0.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.89" steps="380622"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="mod_cos_plus_pi&#39;vc" expl="VC for mod_cos_plus_pi" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mod_cos_plus_pi&#39;vc.0" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(even k)">
   <goal name="mod_cos_plus_pi&#39;vc.0.0" expl="true case (postcondition)" proved="true">
   <proof prover="11"><result status="valid" time="1.08" steps="392960"/></proof>
   </goal>
   <goal name="mod_cos_plus_pi&#39;vc.0.1" expl="false case (postcondition)" proved="true">
   <proof prover="11"><result status="valid" time="2.23" steps="404941"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sin_mod_two_pi&#39;vc" expl="VC for sin_mod_two_pi" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_mod_two_pi&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(two_pi_i *. x)" arg2="(two_pi_i *. (dec_part x +. i_to_c ( int_part_int x)))">
   <goal name="sin_mod_two_pi&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="1.08" steps="389196"/></proof>
   </goal>
   <goal name="sin_mod_two_pi&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.78" steps="340237"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cos_mod_two_pi&#39;vc" expl="VC for cos_mod_two_pi" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_mod_two_pi&#39;vc.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(two_pi_i *. x)" arg2="(two_pi_i *. (dec_part x +. i_to_c ( int_part_int x)))">
   <goal name="cos_mod_two_pi&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="((ttwo *. pi) *. x)" arg2="(pi *. (ttwo *. dec_part x +. i_to_c (2*&#39; int_part_int x)) )">
    <goal name="cos_mod_two_pi&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="cos_mod_two_pi&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="cos_plus_pi1">
      <goal name="cos_mod_two_pi&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="11"><result status="valid" time="1.24" steps="435676"/></proof>
      </goal>
      <goal name="cos_mod_two_pi&#39;vc.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="1.23" steps="432430"/></proof>
      </goal>
      <goal name="cos_mod_two_pi&#39;vc.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="9"><result status="valid" time="1.16" steps="53616"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="cos_mod_two_pi&#39;vc.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
     <goal name="cos_mod_two_pi&#39;vc.0.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(i_to_c 2)" arg2="ttwo">
      <goal name="cos_mod_two_pi&#39;vc.0.0.1.0.0" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="1.03" steps="391837"/></proof>
      </goal>
      <goal name="cos_mod_two_pi&#39;vc.0.0.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="0.44" steps="309665"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="cos_mod_two_pi&#39;vc.0.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.77" steps="340374"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="square_modulus_c_one_minus&#39;vc" expl="VC for square_modulus_c_one_minus" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="square_modulus_c_one_minus&#39;vc.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="square_modulus_c_one_minus&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="modulus&#39;def">
    <goal name="square_modulus_c_one_minus&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(t_real_part (c_one -. ang_exp (real_to_ang phi)))" arg2="(c_one -. cos (ttwo *.(pi*.phi)))">
     <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(t_im_part (c_one -. ang_exp (real_to_ang phi)))" arg2="(-. sin (ttwo *. (pi*.phi)))">
      <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="assert" proved="true" arg1="(forall x. real_ x -&gt; (-. x) *.  (-. x) = cpower x 2)">
       <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="11"><result status="valid" time="1.08" steps="395165"/></proof>
       </goal>
       <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="h">
        <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0" expl="postcondition" proved="true">
        <transf name="assert" proved="true" arg1="(forall x. c_zero &lt;=. x -&gt; cpower (square_rt x) 2 = x)">
         <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
         <proof prover="11"><result status="valid" time="1.06" steps="392075"/></proof>
         </goal>
         <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="h">
          <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="triang_n">
           <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0" expl="postcondition" proved="true">
           <transf name="assert" proved="true" arg1="(forall a b c d. a+. b-.c+.d = b+.d+.a-.c)">
            <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.0" expl="asserted formula" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.0.0" expl="asserted formula" proved="true">
             <proof prover="11"><result status="valid" time="2.09" steps="409620"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1" expl="postcondition" proved="true">
            <transf name="rewrite" proved="true" arg1="h">
             <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0" expl="postcondition" proved="true">
             <transf name="replace" proved="true" arg1="((cos (ttwo *. (pi *. phi)) *. cos (ttwo *. (pi *. phi)))
     +. cpower (sin (ttwo *. (pi *. phi))) 2)" arg2="c_one">
              <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.0" expl="postcondition" proved="true">
              <transf name="replace" proved="true" arg1="(c_one +. (c_one *. c_one))" arg2="ttwo">
               <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.0.0" expl="postcondition" proved="true">
               <transf name="replace" proved="true" arg1="(ttwo -. ((ttwo *. c_one) *. cos (ttwo *. (pi *. phi))))" arg2="(ttwo *. (c_one -.  cos (ttwo *. (pi *. phi))))">
                <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0" expl="postcondition" proved="true">
                <transf name="replace" proved="true" arg1="(c_one -. cos (ttwo *. (pi *. phi)))" arg2="(ttwo *. cpower (sin (pi*.phi))2)">
                 <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0.0" expl="postcondition" proved="true">
                 <transf name="replace" proved="true" arg1="(ttwo *. (ttwo *. cpower (sin (pi *. phi)) 2))" arg2="(ttwo *. ttwo *. cpower (sin (pi *. phi)) 2)">
                  <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0.0.0" expl="postcondition" proved="true">
                  <transf name="apply" proved="true" arg1="mult_eq_t">
                   <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="11"><result status="valid" time="0.78" steps="336663"/></proof>
                   </goal>
                   <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="11"><result status="valid" time="1.06" steps="393751"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="11"><result status="valid" time="0.82" steps="336700"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                 <transf name="rewrite" proved="true" arg1="cos_two_x">
                  <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
                  <transf name="assert" proved="true" arg1="(forall a b c. a = b+.c -&gt; a-.(b-.c) = ttwo *.c)">
                   <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
                    <proof prover="11"><result status="valid" time="5.35" steps="1233173"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="11"><result status="valid" time="3.73" steps="419449"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                  <proof prover="11"><result status="valid" time="0.79" steps="336635"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="11"><result status="valid" time="0.74" steps="344206"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="11"><result status="valid" time="0.89" steps="343613"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.1" expl="equality hypothesis" proved="true">
              <transf name="rewrite" proved="true" arg1="cpower_two_rev">
               <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
               <transf name="rewrite" proved="true" arg1="cos_sin_square_add">
                <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.1.0.0" expl="equality hypothesis" proved="true">
                <proof prover="11"><result status="valid" time="0.48" steps="310564"/></proof>
                </goal>
                <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="real_mult">
                 <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.1.0.1.0" expl="apply premises" proved="true">
                 <proof prover="11"><result status="valid" time="0.84" steps="336629"/></proof>
                 </goal>
                 <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.0.0.1.0.1.0.1.1" expl="apply premises" proved="true">
                 <proof prover="11"><result status="valid" time="0.86" steps="336635"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="add_pos">
           <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="cpower_two_rev">
            <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
            <transf name="assert" proved="true" arg1="(forall x. real_ x -&gt; c_zero &lt;=. cpower x 2)">
             <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.1.0.0.0" expl="asserted formula" proved="true">
             <proof prover="11"><result status="valid" time="1.13" steps="394985"/></proof>
             </goal>
             <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.1.0.0.1" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="h">
              <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.1.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="11"><result status="valid" time="1.13" steps="392980"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.1.1" expl="apply premises" proved="true">
           <transf name="assert" proved="true" arg1="(forall x. real_ x -&gt; c_zero &lt;=. cpower x 2)">
            <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.1.1.0" expl="asserted formula" proved="true">
            <proof prover="11"><result status="valid" time="1.16" steps="394985"/></proof>
            </goal>
            <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.1.1.1" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="h">
             <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.0.1.1.1.1.0" expl="apply premises" proved="true">
             <proof prover="11"><result status="valid" time="1.14" steps="392710"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="1.19" steps="392437"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
       <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="t_im_part_add">
        <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="zero_add_t">
         <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
         <proof prover="11"><result status="valid" time="1.04" steps="393567"/></proof>
         </goal>
         <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="0.83" steps="343461"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(ttwo *. (pi *. phi))" arg2="(ttwo *. pi *. phi)">
      <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="1.02" steps="393028"/></proof>
      </goal>
      <goal name="square_modulus_c_one_minus&#39;vc.0.0.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="0.84" steps="336452"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="non_null_sine&#39;vc" expl="VC for non_null_sine" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="non_null_sine&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.78" steps="335959"/></proof>
  </goal>
  <goal name="non_null_sine&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.79" steps="336800"/></proof>
  </goal>
  <goal name="non_null_sine&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="non_null_sine&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.80" steps="336022"/></proof>
   </goal>
   <goal name="non_null_sine&#39;vc.2.1" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="c_zero" arg2="(c_zero *. (c_one/.pi))">
    <goal name="non_null_sine&#39;vc.2.1.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(x/.pi)" arg2="(x*. (c_one/.pi))">
     <goal name="non_null_sine&#39;vc.2.1.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="compat_inf_mult">
      <goal name="non_null_sine&#39;vc.2.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.44" steps="310016"/></proof>
      </goal>
      <goal name="non_null_sine&#39;vc.2.1.0.0.1" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.76" steps="336017"/></proof>
      </goal>
      <goal name="non_null_sine&#39;vc.2.1.0.0.2" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.75" steps="336016"/></proof>
      </goal>
      <goal name="non_null_sine&#39;vc.2.1.0.0.3" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.70" steps="340816"/></proof>
      </goal>
      <goal name="non_null_sine&#39;vc.2.1.0.0.4" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.77" steps="336037"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="non_null_sine&#39;vc.2.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.83" steps="340721"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="non_null_sine&#39;vc.2.1.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.77" steps="336044"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="non_null_sine&#39;vc.2.2" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(x/.pi)" arg2="(x*. (c_one/.pi))">
    <goal name="non_null_sine&#39;vc.2.2.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(c_one /.ttwo)" arg2="((pi/.ttwo) *. (c_one/.pi))">
     <goal name="non_null_sine&#39;vc.2.2.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="compat_order_mult">
      <goal name="non_null_sine&#39;vc.2.2.0.0.0" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.45" steps="310016"/></proof>
      </goal>
      <goal name="non_null_sine&#39;vc.2.2.0.0.1" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.79" steps="336016"/></proof>
      </goal>
      <goal name="non_null_sine&#39;vc.2.2.0.0.2" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.84" steps="340788"/></proof>
      </goal>
      <goal name="non_null_sine&#39;vc.2.2.0.0.3" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.75" steps="340816"/></proof>
      </goal>
      <goal name="non_null_sine&#39;vc.2.2.0.0.4" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.76" steps="336045"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="non_null_sine&#39;vc.2.2.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.76" steps="340978"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="non_null_sine&#39;vc.2.2.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.80" steps="340721"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="non_null_sine&#39;vc.3" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.79" steps="335992"/></proof>
  </goal>
  <goal name="non_null_sine&#39;vc.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.81" steps="336880"/></proof>
  </goal>
  <goal name="non_null_sine&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="non_null_sine&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.79" steps="336079"/></proof>
   </goal>
   <goal name="non_null_sine&#39;vc.5.1" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(x/.pi &lt;. c_one)">
    <goal name="non_null_sine&#39;vc.5.1.0" expl="asserted formula" proved="true">
    <transf name="replace" proved="true" arg1="c_one" arg2="(pi *. (c_one /.pi))">
     <goal name="non_null_sine&#39;vc.5.1.0.0" expl="asserted formula" proved="true">
     <transf name="replace" proved="true" arg1="(x/.pi)" arg2="(x*. (c_one/.pi))">
      <goal name="non_null_sine&#39;vc.5.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="11"><result status="valid" time="1.14" steps="393508"/></proof>
      </goal>
      <goal name="non_null_sine&#39;vc.5.1.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="0.82" steps="340785"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="non_null_sine&#39;vc.5.1.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.83" steps="340758"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="non_null_sine&#39;vc.5.1.1" expl="precondition" proved="true">
    <proof prover="11"><result status="valid" time="0.82" steps="336111"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="non_null_sine&#39;vc.5.2" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="((c_one /. ttwo) &lt;. x/.pi)">
    <goal name="non_null_sine&#39;vc.5.2.0" expl="asserted formula" proved="true">
    <transf name="replace" proved="true" arg1="(c_one /. ttwo)" arg2="((pi/.ttwo)*. (c_one/.pi))">
     <goal name="non_null_sine&#39;vc.5.2.0.0" expl="asserted formula" proved="true">
     <transf name="replace" proved="true" arg1="(x /.pi)" arg2="(x*. (c_one/.pi))">
      <goal name="non_null_sine&#39;vc.5.2.0.0.0" expl="asserted formula" proved="true">
      <proof prover="11"><result status="valid" time="1.57" steps="403777"/></proof>
      </goal>
      <goal name="non_null_sine&#39;vc.5.2.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="0.79" steps="340785"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="non_null_sine&#39;vc.5.2.0.1" expl="equality hypothesis" proved="true">
     <proof prover="11"><result status="valid" time="0.73" steps="341029"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="non_null_sine&#39;vc.5.2.1" expl="precondition" proved="true">
    <transf name="assert" proved="true" arg1="(-.(x/.pi) &lt;.  -. (c_one/.ttwo))">
     <goal name="non_null_sine&#39;vc.5.2.1.0" expl="asserted formula" proved="true">
     <proof prover="11"><result status="valid" time="0.78" steps="336110"/></proof>
     </goal>
     <goal name="non_null_sine&#39;vc.5.2.1.1" expl="precondition" proved="true">
     <transf name="eliminate_definition" proved="true" >
      <goal name="non_null_sine&#39;vc.5.2.1.1.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
       <goal name="non_null_sine&#39;vc.5.2.1.1.0.0" expl="precondition" proved="true">
       <transf name="replace" proved="true" arg1="(c_one /. ttwo)" arg2="(c_one+. (-. (c_one /.ttwo)))">
        <goal name="non_null_sine&#39;vc.5.2.1.1.0.0.0" expl="precondition" proved="true">
        <proof prover="11"><result status="valid" time="0.99" steps="394652"/></proof>
        </goal>
        <goal name="non_null_sine&#39;vc.5.2.1.1.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="replace" proved="true" arg1="(c_one +. (-. (c_one /. ttwo)))" arg2="((ttwo/.ttwo) +. (-. (c_one /. ttwo)))">
         <goal name="non_null_sine&#39;vc.5.2.1.1.0.0.1.0" expl="equality hypothesis" proved="true">
         <transf name="assert" proved="true" arg1="(forall a b c. b&lt;&gt; c_zero -&gt; (a/.b)+.(c/.b) = (a+.c)/.b)">
          <goal name="non_null_sine&#39;vc.5.2.1.1.0.0.1.0.0" expl="asserted formula" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="non_null_sine&#39;vc.5.2.1.1.0.0.1.0.0.0" expl="asserted formula" proved="true">
           <proof prover="11"><result status="valid" time="0.76" steps="336949"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="non_null_sine&#39;vc.5.2.1.1.0.0.1.0.1" expl="equality hypothesis" proved="true">
          <transf name="replace" proved="true" arg1="(-. (c_one /. ttwo))" arg2="( (-.c_one /. ttwo))">
           <goal name="non_null_sine&#39;vc.5.2.1.1.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="h">
            <goal name="non_null_sine&#39;vc.5.2.1.1.0.0.1.0.1.0.0" expl="equality hypothesis" proved="true">
            <proof prover="11"><result status="valid" time="1.12" steps="397883"/></proof>
            </goal>
            <goal name="non_null_sine&#39;vc.5.2.1.1.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="11"><result status="valid" time="0.76" steps="337029"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="non_null_sine&#39;vc.5.2.1.1.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
           <proof prover="11"><result status="valid" time="0.76" steps="343304"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="non_null_sine&#39;vc.5.2.1.1.0.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="11"><result status="valid" time="0.81" steps="343156"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="non_null_sine&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="non_null_sine&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="non_null_sine&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(pi *. (c_one -. (x /. pi)))" arg2="(pi -. x)" arg3="in" arg4="H">
     <goal name="non_null_sine&#39;vc.6.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(sin (pi *. c_zero))" arg2="c_zero" arg3="in" arg4="H">
      <goal name="non_null_sine&#39;vc.6.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="11"><result status="valid" time="0.78" steps="341139"/></proof>
      </goal>
      <goal name="non_null_sine&#39;vc.6.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="0.75" steps="340629"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="non_null_sine&#39;vc.6.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="eliminate_definition" proved="true" >
      <goal name="non_null_sine&#39;vc.6.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
       <goal name="non_null_sine&#39;vc.6.0.0.1.0.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
        <goal name="non_null_sine&#39;vc.6.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
         <goal name="non_null_sine&#39;vc.6.0.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="add_eq_t">
          <goal name="non_null_sine&#39;vc.6.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.73" steps="336849"/></proof>
          </goal>
          <goal name="non_null_sine&#39;vc.6.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="minus_out_right">
           <goal name="non_null_sine&#39;vc.6.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
           <proof prover="11"><result status="valid" time="0.85" steps="343450"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="non_null_sine&#39;vc.6.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="non_null_sine&#39;vc.6.1.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(pi *. (c_one -. (x /. pi)))" arg2="(pi -. x)" arg3="in" arg4="Ensures">
     <goal name="non_null_sine&#39;vc.6.1.0.0" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="0.74" steps="340711"/></proof>
     </goal>
     <goal name="non_null_sine&#39;vc.6.1.0.1" expl="equality hypothesis" proved="true">
     <transf name="eliminate_definition" proved="true" >
      <goal name="non_null_sine&#39;vc.6.1.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
       <goal name="non_null_sine&#39;vc.6.1.0.1.0.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
        <goal name="non_null_sine&#39;vc.6.1.0.1.0.0.0" expl="equality hypothesis" proved="true">
        <proof prover="11"><result status="valid" time="1.08" steps="398468"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="bounded_by_sine_one&#39;vc" expl="VC for bounded_by_sine_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="bounded_by_sine_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.87" steps="346988"/></proof>
  </goal>
  <goal name="bounded_by_sine_one&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="bounded_by_sine_one&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.79" steps="336315"/></proof>
   </goal>
   <goal name="bounded_by_sine_one&#39;vc.1.1" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(c_one /. ttwo)" arg2="((c_one /. i_to_c (power 2 (k +&#39; 1))) *. i_to_c (power 2 k))">
    <goal name="bounded_by_sine_one&#39;vc.1.1.0" expl="precondition" proved="true">
    <proof prover="11"><result status="valid" time="1.12" steps="409605"/></proof>
    </goal>
    <goal name="bounded_by_sine_one&#39;vc.1.1.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="power_sum">
     <goal name="bounded_by_sine_one&#39;vc.1.1.1.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="i_to_c_mult_rev">
      <goal name="bounded_by_sine_one&#39;vc.1.1.1.0.0" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="1.25" steps="413603"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="bounded_by_sine_one&#39;vc.1.1.1.1" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.44" steps="310223"/></proof>
     </goal>
     <goal name="bounded_by_sine_one&#39;vc.1.1.1.2" expl="rewrite premises" proved="true">
     <proof prover="11"><result status="valid" time="0.47" steps="310230"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="bounded_by_sine_one&#39;vc.2" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(modulus ((ttwo *. (x -. c_one)) *. i_to_c (power 2 k)))" arg2="( modulus (ttwo *. (modulus (x -. c_one) *. i_to_c (power 2 k))))">
   <goal name="bounded_by_sine_one&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(modulus (sin ((pi *. i_to_c (power 2 k)) *. x)))" arg2="( modulus (sin (pi *. (modulus (x -. c_one) *. i_to_c (power 2 k)))))">
    <goal name="bounded_by_sine_one&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.48" steps="310252"/></proof>
    </goal>
    <goal name="bounded_by_sine_one&#39;vc.2.0.1" expl="equality hypothesis" proved="true">
    <transf name="case" proved="true" arg1="(x-.c_one &lt;=.c_zero)">
     <goal name="bounded_by_sine_one&#39;vc.2.0.1.0" expl="true case (equality hypothesis)" proved="true">
     <transf name="replace" proved="true" arg1="(modulus (x -. c_one))" arg2="(c_one +. (-.x))">
      <goal name="bounded_by_sine_one&#39;vc.2.0.1.0.0" expl="true case (equality hypothesis)" proved="true">
      <transf name="rewrite" proved="true" arg1="mult_distr_add_l">
       <goal name="bounded_by_sine_one&#39;vc.2.0.1.0.0.0" expl="true case (equality hypothesis)" proved="true">
       <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
        <goal name="bounded_by_sine_one&#39;vc.2.0.1.0.0.0.0" expl="true case (equality hypothesis)" proved="true">
        <transf name="replace" proved="true" arg1="((pi *. (i_to_c (power 2 k) *. c_one))
      +. (pi *. (i_to_c (power 2 k) *. (-. x))))" arg2="(pi *. ((i_to_c (power 2 k) *. (-. x)) +.(i_to_c (power 2 k))))">
         <goal name="bounded_by_sine_one&#39;vc.2.0.1.0.0.0.0.0" expl="true case (equality hypothesis)" proved="true">
         <transf name="rewrite" proved="true" arg1="mod_sin_plus_pi">
          <goal name="bounded_by_sine_one&#39;vc.2.0.1.0.0.0.0.0.0" expl="true case (equality hypothesis)" proved="true">
          <transf name="replace" proved="true" arg1="(pi *. (i_to_c (power 2 k) *. (-. x)))" arg2="(-.(pi *. (i_to_c (power 2 k) *. ( x))))">
           <goal name="bounded_by_sine_one&#39;vc.2.0.1.0.0.0.0.0.0.0" expl="true case (equality hypothesis)" proved="true">
           <proof prover="11"><result status="valid" time="3.41" steps="444104"/></proof>
           </goal>
           <goal name="bounded_by_sine_one&#39;vc.2.0.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="11"><result status="valid" time="1.16" steps="412751"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="bounded_by_sine_one&#39;vc.2.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="11"><result status="valid" time="0.84" steps="348126"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="bounded_by_sine_one&#39;vc.2.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="11"><result status="valid" time="1.14" steps="410702"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="bounded_by_sine_one&#39;vc.2.0.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="1.25" steps="409236"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="bounded_by_sine_one&#39;vc.2.0.1.1" expl="false case (equality hypothesis)" proved="true">
     <transf name="replace" proved="true" arg1="(modulus (x -. c_one))" arg2="(x +. (-. c_one))">
      <goal name="bounded_by_sine_one&#39;vc.2.0.1.1.0" expl="false case (equality hypothesis)" proved="true">
      <transf name="rewrite" proved="true" arg1="mult_distr_add_l">
       <goal name="bounded_by_sine_one&#39;vc.2.0.1.1.0.0" expl="false case (equality hypothesis)" proved="true">
       <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
        <goal name="bounded_by_sine_one&#39;vc.2.0.1.1.0.0.0" expl="false case (equality hypothesis)" proved="true">
        <transf name="replace" proved="true" arg1="((pi *. (i_to_c (power 2 k) *. x))
      +. (pi *. (i_to_c (power 2 k) *.  (-. c_one))))" arg2="(pi *. ((i_to_c (power 2 k) *.  x) +.(-.(i_to_c (power 2 k)))))
">
         <goal name="bounded_by_sine_one&#39;vc.2.0.1.1.0.0.0.0" expl="false case (equality hypothesis)" proved="true">
         <proof prover="0"><result status="valid" time="0.53"/></proof>
         </goal>
         <goal name="bounded_by_sine_one&#39;vc.2.0.1.1.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="11"><result status="valid" time="1.13" steps="413291"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="bounded_by_sine_one&#39;vc.2.0.1.1.1" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="1.33" steps="407525"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="bounded_by_sine_one&#39;vc.2.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="3.49" steps="433834"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="non_c_zero_sin&#39;vc" expl="VC for non_c_zero_sin" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="non_c_zero_sin&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="non_c_zero_sin&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.48" steps="310383"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="non_c_zero_sin&#39;vc.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="non_c_zero_sin&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.45" steps="310435"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="non_c_zero_sin&#39;vc.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="non_c_zero_sin&#39;vc.2.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.43" steps="310488"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="non_c_zero_sin&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="non_c_zero_sin&#39;vc.3.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(dec_part x +. i_to_c (int_part_int x))" arg2="x" arg3="in" arg4="Ensures">
    <goal name="non_c_zero_sin&#39;vc.3.0.0" expl="postcondition" proved="true">
    <transf name="assert" proved="true" arg1="(modulus (sin (pi *. x))&lt;&gt; c_zero)
">
     <goal name="non_c_zero_sin&#39;vc.3.0.0.0" expl="asserted formula" proved="true">
     <transf name="rewrite" proved="true" arg1="Ensures">
      <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="assert" proved="true" arg1="((sin (pi *. dec_part x)) &lt;&gt; c_zero)">
       <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="assert" proved="true" arg1="(c_zero &lt;.  sin (pi *. dec_part x))">
        <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <transf name="apply" proved="true" arg1="non_null_sine">
         <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="0.75" steps="336655"/></proof>
          </goal>
          <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="assert" proved="true" arg1="((pi *. dec_part x) *. (c_one/.pi)&lt;. pi*. (c_one/.pi))">
           <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
           <transf name="assert" proved="true" arg1="(forall a b. b&lt;&gt; c_zero -&gt; (b*.a)*.(c_one/.b)=a)">
            <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
             <transf name="replace" proved="true" arg1="(b*.a)" arg2="(a*.b)">
              <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
              <proof prover="11"><result status="valid" time="1.16" steps="397397"/></proof>
              </goal>
              <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="11"><result status="valid" time="0.82" steps="336687"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0.1.0.1" expl="asserted formula" proved="true">
            <transf name="rewrite" proved="true" arg1="h1">
             <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
             <proof prover="11"><result status="valid" time="0.78" steps="343634"/></proof>
             </goal>
             <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="11"><result status="valid" time="0.79" steps="337654"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
           <transf name="assert" proved="true" arg1="(forall a b c.c_zero &lt;. c -&gt; a*.c &lt;. b*.c -&gt; a &lt;.b)">
            <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0.1.1.0" expl="asserted formula" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
             <transf name="replace" proved="true" arg1="a" arg2="(a*.c *. (c_one/.c))">
              <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0.1.1.0.0.0" expl="asserted formula" proved="true">
              <transf name="replace" proved="true" arg1="b" arg2="(b*.c *. (c_one/.c))">
               <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0.1.1.0.0.0.0" expl="asserted formula" proved="true">
               <proof prover="11"><result status="valid" time="1.15" steps="402378"/></proof>
               </goal>
               <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0.1.1.0.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="11"><result status="valid" time="1.16" steps="402160"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="11"><result status="valid" time="1.16" steps="402158"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
            <proof prover="11"><result status="valid" time="1.16" steps="398954"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.0.1" expl="asserted formula" proved="true">
        <proof prover="11"><result status="valid" time="0.77" steps="336686"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="non_c_zero_sin&#39;vc.3.0.0.0.0.1" expl="asserted formula" proved="true">
       <proof prover="11"><result status="valid" time="0.80" steps="336685"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="non_c_zero_sin&#39;vc.3.0.0.1" expl="postcondition" proved="true">
     <proof prover="11"><result status="valid" time="1.06" steps="395907"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="non_c_zero_sin&#39;vc.3.0.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.76" steps="336675"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="non_c_zero_sin_bounded_mod&#39;vc" expl="VC for non_c_zero_sin_bounded_mod" proved="true">
 <proof prover="11"><result status="valid" time="1.52" steps="401546"/></proof>
 </goal>
 <goal name="non_ang_zero_bounded_mod&#39;vc" expl="VC for non_ang_zero_bounded_mod" proved="true">
 <proof prover="11"><result status="valid" time="1.51" steps="402910"/></proof>
 </goal>
 <goal name="non_ang_zero_int_to_ang&#39;vc" expl="VC for non_ang_zero_int_to_ang" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="non_ang_zero_int_to_ang&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.44" steps="310712"/></proof>
  </goal>
  <goal name="non_ang_zero_int_to_ang&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="1.14" steps="394675"/></proof>
  </goal>
  <goal name="non_ang_zero_int_to_ang&#39;vc.2" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.78" steps="337295"/></proof>
  </goal>
  <goal name="non_ang_zero_int_to_ang&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="non_ang_zero_int_to_ang&#39;vc.3.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="modulus_real_pos">
    <goal name="non_ang_zero_int_to_ang&#39;vc.3.0.0" expl="precondition" proved="true">
    <transf name="assert" proved="true" arg1="(forall a b. c_zero &lt;. a -&gt; c_zero &lt;. b -&gt; c_zero &lt;. a+.b)">
     <goal name="non_ang_zero_int_to_ang&#39;vc.3.0.0.0" expl="asserted formula" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="non_ang_zero_int_to_ang&#39;vc.3.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="11"><result status="valid" time="1.12" steps="402233"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="non_ang_zero_int_to_ang&#39;vc.3.0.0.1" expl="precondition" proved="true">
     <proof prover="11"><result status="valid" time="1.06" steps="401556"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="non_ang_zero_int_to_ang&#39;vc.3.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.47" steps="310806"/></proof>
    </goal>
    <goal name="non_ang_zero_int_to_ang&#39;vc.3.0.2" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.90" steps="401316"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="non_ang_zero_int_to_ang&#39;vc.3.1" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="modulus_real_pos">
    <goal name="non_ang_zero_int_to_ang&#39;vc.3.1.0" expl="precondition" proved="true">
    <transf name="assert" proved="true" arg1="((i_to_c (mod k (power 2 n)) *. pow_inv_2 n) *. i_to_c (power 2 n) &lt;. c_one *. i_to_c (power 2 n))">
     <goal name="non_ang_zero_int_to_ang&#39;vc.3.1.0.0" expl="asserted formula" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b c. a*.b*.c = a*. (b*.c))">
      <goal name="non_ang_zero_int_to_ang&#39;vc.3.1.0.0.0" expl="asserted formula" proved="true">
      <proof prover="11"><result status="valid" time="0.76" steps="336924"/></proof>
      </goal>
      <goal name="non_ang_zero_int_to_ang&#39;vc.3.1.0.0.1" expl="asserted formula" proved="true">
      <transf name="rewrite" proved="true" arg1="h1">
       <goal name="non_ang_zero_int_to_ang&#39;vc.3.1.0.0.1.0" expl="asserted formula" proved="true">
       <transf name="rewrite" proved="true" arg1="mult_one_t">
        <goal name="non_ang_zero_int_to_ang&#39;vc.3.1.0.0.1.0.0" expl="asserted formula" proved="true">
        <transf name="rewrite" proved="true" arg1="one_mult_t">
         <goal name="non_ang_zero_int_to_ang&#39;vc.3.1.0.0.1.0.0.0" expl="asserted formula" proved="true">
         <transf name="apply" proved="true" arg1="i_to_c_inf">
          <goal name="non_ang_zero_int_to_ang&#39;vc.3.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="11"><result status="valid" time="1.14" steps="401776"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="non_ang_zero_int_to_ang&#39;vc.3.1.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="11"><result status="valid" time="0.45" steps="310860"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="non_ang_zero_int_to_ang&#39;vc.3.1.0.0.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="1.14" steps="402217"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="non_ang_zero_int_to_ang&#39;vc.3.1.0.1" expl="precondition" proved="true">
     <proof prover="11"><result status="valid" time="1.04" steps="407614"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="non_ang_zero_int_to_ang&#39;vc.3.1.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.48" steps="310806"/></proof>
    </goal>
    <goal name="non_ang_zero_int_to_ang&#39;vc.3.1.2" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.87" steps="401316"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="non_ang_zero_int_to_ang&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.87" steps="399289"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="modulus_ang_exp&#39;vc" expl="VC for modulus_ang_exp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="modulus_ang_exp&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.76" steps="337067"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Rotations" proved="true">
 <goal name="sin_pos&#39;vc" expl="VC for sin_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_pos&#39;vc.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sin_pos&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.46" steps="310839"/></proof>
   </goal>
   <goal name="sin_pos&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="11"><result status="valid" time="0.45" steps="310839"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sin_pos&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sin_pos&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.45" steps="310854"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sin_pos_leq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_pos_leq.0" proved="true">
  <transf name="case" proved="true" arg1="(x = c_zero)">
   <goal name="sin_pos_leq.0.0" expl="true case" proved="true">
   <proof prover="11"><result status="valid" time="0.78" steps="336930"/></proof>
   </goal>
   <goal name="sin_pos_leq.0.1" expl="false case" proved="true">
   <transf name="case" proved="true" arg1="(x = pi)">
    <goal name="sin_pos_leq.0.1.0" expl="false case (true case)" proved="true">
    <proof prover="11"><result status="valid" time="0.95" steps="390017"/></proof>
    </goal>
    <goal name="sin_pos_leq.0.1.1" expl="false case" proved="true">
    <proof prover="11"><result status="valid" time="0.98" steps="392570"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sin_quarter_pi" proved="true">
 <transf name="rewrite" proved="true" arg1="sin&#39;def">
  <goal name="sin_quarter_pi.0" proved="true">
  <transf name="replace" proved="true" arg1="(exp (im *. (pi /. i_to_c 4)))" arg2="(( squarert_two /. ttwo) +. (im *. ( squarert_two /. ttwo)))">
   <goal name="sin_quarter_pi.0.0" proved="true">
   <proof prover="11"><result status="valid" time="1.13" steps="388416"/></proof>
   </goal>
   <goal name="sin_quarter_pi.0.1" expl="equality hypothesis" proved="true">
   <proof prover="11"><result status="valid" time="0.73" steps="341269"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sin_quarter_pi.1" expl="rewrite premises" proved="true">
  <proof prover="11"><result status="valid" time="1.08" steps="387964"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sin_pi" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_pi.0" proved="true">
  <proof prover="11"><result status="valid" time="1.01" steps="389090"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cos_inv&#39;vc" expl="VC for cos_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_inv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="cos&#39;def">
   <goal name="cos_inv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="exp_minus">
    <goal name="cos_inv&#39;vc.0.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.97" steps="392901"/></proof>
    </goal>
    <goal name="cos_inv&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.46" steps="310997"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cos_inv&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.81" steps="337364"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sin_inv&#39;vc" expl="VC for sin_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_inv&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.82" steps="337441"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cos_ang_mult_plus_one&#39;vc" expl="VC for cos_ang_mult_plus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_ang_mult_plus_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.80" steps="337542"/></proof>
  </goal>
  <goal name="cos_ang_mult_plus_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.46" steps="311148"/></proof>
  </goal>
  <goal name="cos_ang_mult_plus_one&#39;vc.2" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(x *. i_to_c i)" arg2="(x *. i_to_c (i-1) +. x)">
   <goal name="cos_ang_mult_plus_one&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="cos_add">
    <goal name="cos_ang_mult_plus_one&#39;vc.2.0.0" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="0.76" steps="337636"/></proof>
    </goal>
    <goal name="cos_ang_mult_plus_one&#39;vc.2.0.1" expl="apply premises" proved="true">
    <proof prover="11"><result status="valid" time="0.44" steps="311199"/></proof>
    </goal>
   </transf>
   <transf name="rewrite" proved="true" arg1="cos_add">
    <goal name="cos_ang_mult_plus_one&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.45" steps="311197"/></proof>
    </goal>
    <goal name="cos_ang_mult_plus_one&#39;vc.2.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.79" steps="337636"/></proof>
    </goal>
    <goal name="cos_ang_mult_plus_one&#39;vc.2.0.2" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.46" steps="311199"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="cos_ang_mult_plus_one&#39;vc.2.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(i_to_c i)" arg2="(i_to_c (i-1+1))">
    <goal name="cos_ang_mult_plus_one&#39;vc.2.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
     <goal name="cos_ang_mult_plus_one&#39;vc.2.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
      <goal name="cos_ang_mult_plus_one&#39;vc.2.1.0.0.0" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="0.79" steps="343567"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="cos_ang_mult_plus_one&#39;vc.2.1.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.46" steps="311221"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cos_ang_mult_minus_one&#39;vc" expl="VC for cos_ang_mult_minus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_ang_mult_minus_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.80" steps="337661"/></proof>
  </goal>
  <goal name="cos_ang_mult_minus_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.81" steps="337670"/></proof>
  </goal>
  <goal name="cos_ang_mult_minus_one&#39;vc.2" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="cos_ang_mult_minus_one&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="(-)&#39;def">
    <goal name="cos_ang_mult_minus_one&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
     <goal name="cos_ang_mult_minus_one&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
      <goal name="cos_ang_mult_minus_one&#39;vc.2.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="i_to_c_minus">
       <goal name="cos_ang_mult_minus_one&#39;vc.2.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="minus_out_right">
        <goal name="cos_ang_mult_minus_one&#39;vc.2.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="replace" proved="true" arg1="(x *. i_to_c 1)" arg2="x">
         <goal name="cos_ang_mult_minus_one&#39;vc.2.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="Ensures">
          <goal name="cos_ang_mult_minus_one&#39;vc.2.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
           <goal name="cos_ang_mult_minus_one&#39;vc.2.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="apply" proved="true" arg1="add_eq_t">
            <goal name="cos_ang_mult_minus_one&#39;vc.2.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="11"><result status="valid" time="0.80" steps="347141"/></proof>
            </goal>
            <goal name="cos_ang_mult_minus_one&#39;vc.2.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="sin_minus">
             <goal name="cos_ang_mult_minus_one&#39;vc.2.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="minus_out_right">
              <goal name="cos_ang_mult_minus_one&#39;vc.2.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="11"><result status="valid" time="0.79" steps="338515"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="cos_ang_mult_minus_one&#39;vc.2.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="11"><result status="valid" time="0.47" steps="311977"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="cos_ang_mult_minus_one&#39;vc.2.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="11"><result status="valid" time="0.77" steps="338519"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sin_ang_mult_plus_one&#39;vc" expl="VC for sin_ang_mult_plus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_ang_mult_plus_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.78" steps="337824"/></proof>
  </goal>
  <goal name="sin_ang_mult_plus_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.47" steps="311428"/></proof>
  </goal>
  <goal name="sin_ang_mult_plus_one&#39;vc.2" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(x *. i_to_c i)" arg2="(x *. i_to_c (i-1) +. x)">
   <goal name="sin_ang_mult_plus_one&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="sin_add">
    <goal name="sin_ang_mult_plus_one&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="11"><result status="valid" time="0.45" steps="311477"/></proof>
    </goal>
    <goal name="sin_ang_mult_plus_one&#39;vc.2.0.1" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.79" steps="337918"/></proof>
    </goal>
    <goal name="sin_ang_mult_plus_one&#39;vc.2.0.2" expl="rewrite premises" proved="true">
    <proof prover="11"><result status="valid" time="0.43" steps="311479"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sin_ang_mult_plus_one&#39;vc.2.1" expl="equality hypothesis" proved="true">
   <transf name="replace" proved="true" arg1="(i_to_c i)" arg2="(i_to_c (i-1+1))">
    <goal name="sin_ang_mult_plus_one&#39;vc.2.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
     <goal name="sin_ang_mult_plus_one&#39;vc.2.1.0.0" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
      <goal name="sin_ang_mult_plus_one&#39;vc.2.1.0.0.0" expl="equality hypothesis" proved="true">
      <proof prover="11"><result status="valid" time="0.79" steps="343786"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="sin_ang_mult_plus_one&#39;vc.2.1.1" expl="equality hypothesis" proved="true">
    <proof prover="11"><result status="valid" time="0.43" steps="311501"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sin_ang_mult_minus_one&#39;vc" expl="VC for sin_ang_mult_minus_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_ang_mult_minus_one&#39;vc.0" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.76" steps="337943"/></proof>
  </goal>
  <goal name="sin_ang_mult_minus_one&#39;vc.1" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.76" steps="337952"/></proof>
  </goal>
  <goal name="sin_ang_mult_minus_one&#39;vc.2" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="sin_ang_mult_minus_one&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="(-)&#39;def">
    <goal name="sin_ang_mult_minus_one&#39;vc.2.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
     <goal name="sin_ang_mult_minus_one&#39;vc.2.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
      <goal name="sin_ang_mult_minus_one&#39;vc.2.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="i_to_c_minus">
       <goal name="sin_ang_mult_minus_one&#39;vc.2.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="minus_out_right">
        <goal name="sin_ang_mult_minus_one&#39;vc.2.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="replace" proved="true" arg1="(x *. i_to_c 1)" arg2="x">
         <goal name="sin_ang_mult_minus_one&#39;vc.2.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="(-.)&#39;def">
          <goal name="sin_ang_mult_minus_one&#39;vc.2.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <proof prover="11"><result status="valid" time="0.92" steps="358849"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="sin_ang_mult_minus_one&#39;vc.2.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="11"><result status="valid" time="0.77" steps="338801"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cos_ang_mult_inv&#39;vc" expl="VC for cos_ang_mult_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cos_ang_mult_inv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="i_to_c_minus">
   <goal name="cos_ang_mult_inv&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="minus_out_right">
    <goal name="cos_ang_mult_inv&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="cos_minus">
     <goal name="cos_ang_mult_inv&#39;vc.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="1.15" steps="398451"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sin_ang_mult_inv&#39;vc" expl="VC for sin_ang_mult_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sin_ang_mult_inv&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.44"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="modulus_one_over_pow_n&#39;vc" expl="VC for modulus_one_over_pow_n" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="modulus_one_over_pow_n&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="modulus_real_pos">
   <goal name="modulus_one_over_pow_n&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="modulus_real_pos">
    <goal name="modulus_one_over_pow_n&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="assert" proved="true" arg1="(forall a b c. c_zero &lt;&gt; c -&gt; a/. c+. b/. c = (a+.b)/.c)">
     <goal name="modulus_one_over_pow_n&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="modulus_one_over_pow_n&#39;vc.0.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="11"><result status="valid" time="0.74" steps="338383"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="modulus_one_over_pow_n&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="h">
      <goal name="modulus_one_over_pow_n&#39;vc.0.0.0.1.0" expl="postcondition" proved="true">
      <transf name="assert" proved="true" arg1="(forall a. a&lt;&gt; c_zero -&gt; a/.a= c_one)">
       <goal name="modulus_one_over_pow_n&#39;vc.0.0.0.1.0.0" expl="asserted formula" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="modulus_one_over_pow_n&#39;vc.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
        <proof prover="11"><result status="valid" time="1.02" steps="393697"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="modulus_one_over_pow_n&#39;vc.0.0.0.1.0.1" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="h">
        <goal name="modulus_one_over_pow_n&#39;vc.0.0.0.1.0.1.0" expl="apply premises" proved="true">
        <proof prover="12"><result status="valid" time="2.05" steps="6423252"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="modulus_one_over_pow_n&#39;vc.0.0.0.1.1" expl="rewrite premises" proved="true">
      <transf name="assert" proved="true" arg1="(forall a b. c_zero &lt;=. a -&gt; c_zero &lt;. b -&gt; c_zero &lt;. a +.b)">
       <goal name="modulus_one_over_pow_n&#39;vc.0.0.0.1.1.0" expl="asserted formula" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="modulus_one_over_pow_n&#39;vc.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
        <proof prover="11"><result status="valid" time="0.74" steps="338492"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="modulus_one_over_pow_n&#39;vc.0.0.0.1.1.1" expl="rewrite premises" proved="true">
       <transf name="assert" proved="true" arg1="(c_zero &lt;. (square_rt (i_to_c k) +. square_rt (i_to_c (power 2 n - k))))">
        <goal name="modulus_one_over_pow_n&#39;vc.0.0.0.1.1.1.0" expl="asserted formula" proved="true">
        <transf name="apply" proved="true" arg1="h">
        </transf>
        </goal>
        <goal name="modulus_one_over_pow_n&#39;vc.0.0.0.1.1.1.1" expl="rewrite premises" proved="true">
        <proof prover="11"><result status="valid" time="0.77" steps="338637"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="modulus_one_over_pow_n&#39;vc.0.0.1" expl="rewrite premises" proved="true">
    <transf name="apply" proved="true" arg1="real_div">
     <goal name="modulus_one_over_pow_n&#39;vc.0.0.1.0" expl="apply premises" proved="true">
     <proof prover="11"><result status="valid" time="1.12" steps="392236"/></proof>
     </goal>
     <goal name="modulus_one_over_pow_n&#39;vc.0.0.1.1" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b. c_zero &lt;=. a -&gt; c_zero &lt;. b -&gt; c_zero &lt;. a +.b)">
      <goal name="modulus_one_over_pow_n&#39;vc.0.0.1.1.0" expl="asserted formula" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="modulus_one_over_pow_n&#39;vc.0.0.1.1.0.0" expl="asserted formula" proved="true">
       <proof prover="11"><result status="valid" time="0.71" steps="338370"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="modulus_one_over_pow_n&#39;vc.0.0.1.1.1" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(c_zero &lt;. (square_rt (i_to_c k) +. square_rt (i_to_c (power 2 n - k))))">
       <goal name="modulus_one_over_pow_n&#39;vc.0.0.1.1.1.0" expl="asserted formula" proved="true">
       <transf name="apply" proved="true" arg1="h">
       </transf>
       </goal>
       <goal name="modulus_one_over_pow_n&#39;vc.0.0.1.1.1.1" expl="apply premises" proved="true">
       <proof prover="11"><result status="valid" time="0.72" steps="338515"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="modulus_one_over_pow_n&#39;vc.0.0.1.2" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.36"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="modulus_one_over_pow_n&#39;vc.0.0.2" expl="rewrite premises" proved="true">
    <transf name="assert" proved="true" arg1="(forall a b. c_zero &lt;=. a -&gt; c_zero &lt;. b -&gt; c_zero &lt;. a +.b)">
     <goal name="modulus_one_over_pow_n&#39;vc.0.0.2.0" expl="asserted formula" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="modulus_one_over_pow_n&#39;vc.0.0.2.0.0" expl="asserted formula" proved="true">
      <proof prover="11"><result status="valid" time="0.71" steps="338370"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="modulus_one_over_pow_n&#39;vc.0.0.2.1" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(c_zero &lt;. (square_rt (i_to_c k) +. square_rt (i_to_c (power 2 n - k))))">
      <goal name="modulus_one_over_pow_n&#39;vc.0.0.2.1.0" expl="asserted formula" proved="true">
      <proof prover="12"><result status="valid" time="1.76" steps="6159641"/></proof>
      </goal>
      <goal name="modulus_one_over_pow_n&#39;vc.0.0.2.1.1" expl="rewrite premises" proved="true">
      <proof prover="11"><result status="valid" time="1.06" steps="393626"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="modulus_one_over_pow_n&#39;vc.0.1" expl="rewrite premises" proved="true">
   <transf name="apply" proved="true" arg1="real_div">
    <goal name="modulus_one_over_pow_n&#39;vc.0.1.0" expl="apply premises" proved="true">
    <proof prover="9"><result status="valid" time="1.15" steps="56035"/></proof>
    </goal>
    <goal name="modulus_one_over_pow_n&#39;vc.0.1.1" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="(forall a b. c_zero &lt;=. a -&gt; c_zero &lt;. b -&gt; c_zero &lt;. a +.b)">
     <goal name="modulus_one_over_pow_n&#39;vc.0.1.1.0" expl="asserted formula" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="modulus_one_over_pow_n&#39;vc.0.1.1.0.0" expl="asserted formula" proved="true">
      <proof prover="11"><result status="valid" time="0.72" steps="338370"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="modulus_one_over_pow_n&#39;vc.0.1.1.1" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="(c_zero &lt;. (square_rt (i_to_c k) +. square_rt (i_to_c (power 2 n - k))))">
      <goal name="modulus_one_over_pow_n&#39;vc.0.1.1.1.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="h">
      </transf>
      </goal>
      <goal name="modulus_one_over_pow_n&#39;vc.0.1.1.1.1" expl="apply premises" proved="true">
      <proof prover="11"><result status="valid" time="0.74" steps="338515"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="modulus_one_over_pow_n&#39;vc.0.1.2" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="0.40"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="modulus_one_over_pow_n&#39;vc.0.2" expl="rewrite premises" proved="true">
   <transf name="assert" proved="true" arg1="(forall a b. c_zero &lt;=. a -&gt; c_zero &lt;. b -&gt; c_zero &lt;. a +.b)">
    <goal name="modulus_one_over_pow_n&#39;vc.0.2.0" expl="asserted formula" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="modulus_one_over_pow_n&#39;vc.0.2.0.0" expl="asserted formula" proved="true">
     <proof prover="11"><result status="valid" time="0.70" steps="338370"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="modulus_one_over_pow_n&#39;vc.0.2.1" expl="rewrite premises" proved="true">
    <transf name="assert" proved="true" arg1="(c_zero &lt;. (square_rt (i_to_c k) +. square_rt (i_to_c (power 2 n - k))))">
     <goal name="modulus_one_over_pow_n&#39;vc.0.2.1.0" expl="asserted formula" proved="true">
     <proof prover="12"><result status="valid" time="1.58" steps="6159641"/></proof>
     </goal>
     <goal name="modulus_one_over_pow_n&#39;vc.0.2.1.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="0.46"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="get_cos&#39;vc" expl="VC for get_cos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_cos&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="cos&#39;def">
   <goal name="get_cos&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.71" steps="338626"/></proof>
   </goal>
   <goal name="get_cos&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.41" steps="312151"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="get_sin&#39;vc" expl="VC for get_sin" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get_sin&#39;vc.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="sin&#39;def">
   <goal name="get_sin&#39;vc.0.0" expl="postcondition" proved="true">
   <proof prover="11"><result status="valid" time="0.69" steps="338856"/></proof>
   </goal>
   <goal name="get_sin&#39;vc.0.1" expl="rewrite premises" proved="true">
   <proof prover="11"><result status="valid" time="0.37" steps="312312"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="unic_ang_meas&#39;vc" expl="VC for unic_ang_meas" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unic_ang_meas&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.92" steps="398122"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
